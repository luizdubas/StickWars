<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
    

    <!-- ============== BRUSHES ============== -->
	<SolidColorBrush x:Key="NoesisFgBrush" Color="#FFE5E5E5"/>
	
	<SolidColorBrush x:Key="NoesisDisabledFgBrush" Color="#FF999999"/>
	    
	<SolidColorBrush x:Key="NoesisBgBrush" Color="#FF454D54"/>
	
	<LinearGradientBrush x:Key="NoesisNormalBgBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#33FFFFFF" Offset="0"/>
		<GradientStop Color="#33000000" Offset="1"/>
	</LinearGradientBrush>
	
	<LinearGradientBrush x:Key="NoesisNormalBgBrushV" EndPoint="1,0.5" StartPoint="0,0.5">
		<GradientStop Color="#33FFFFFF" Offset="0"/>
		<GradientStop Color="#33000000" Offset="1"/>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="NoesisDisabledBgBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#7F999999" Offset="0"/>
		<GradientStop Color="#7F666666" Offset="1"/>
	</LinearGradientBrush>
	
	<LinearGradientBrush x:Key="NoesisDisabledBgBrushV" EndPoint="1,0.5" StartPoint="0,0.5">
		<GradientStop Color="#7F999999" Offset="0"/>
		<GradientStop Color="#7F666666" Offset="1"/>
	</LinearGradientBrush>
	
	<SolidColorBrush x:Key="NoesisBdBrush" Color="#FF0083FF"/>

	<LinearGradientBrush x:Key="NoesisNormalBdBrush" EndPoint="0.5,0.5" StartPoint="0,0.5" SpreadMethod="Reflect">
		<GradientStop Color="#BF000000" Offset="0"/>
		<GradientStop Color="#3F808080" Offset="1"/>
	</LinearGradientBrush>
	
	<LinearGradientBrush x:Key="NoesisNormalBdBrushV" EndPoint="0.5,0.5" StartPoint="0.5,0" SpreadMethod="Reflect">
		<GradientStop Color="#BF000000" Offset="0"/>
		<GradientStop Color="#3F808080" Offset="1"/>
	</LinearGradientBrush>
	
	<SolidColorBrush x:Key="NoesisDisabledBdBrush" Color="#7F808080"/>
	
	<LinearGradientBrush x:Key="NoesisIndentBdBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#59000000" Offset="0"/>
		<GradientStop Color="#0C000000" Offset="0.875"/>
		<GradientStop Color="#59FFFFFF" Offset="1"/>
	</LinearGradientBrush>
	
	<LinearGradientBrush x:Key="NoesisIndentBdBrushV" EndPoint="1,0.5" StartPoint="0,0.5">
		<GradientStop Color="#59000000" Offset="0"/>
		<GradientStop Color="#0C000000" Offset="0.875"/>
		<GradientStop Color="#59FFFFFF" Offset="1"/>
	</LinearGradientBrush>
	
	<LinearGradientBrush x:Key="NoesisIndentBgBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    	<GradientStop Color="#4C000000" Offset="0"/>
        <GradientStop Color="#26000000" Offset="1"/>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="NoesisIndentBgBrushV" EndPoint="1,0.5" StartPoint="0,0.5">
    	<GradientStop Color="#4C000000" Offset="0"/>
        <GradientStop Color="#26000000" Offset="1"/>
	</LinearGradientBrush>
	
	<LinearGradientBrush x:Key="NoesisCircularIndentBdBrush" EndPoint="0.5,0.9" StartPoint="0.5,0.1">
		<GradientStop Color="#59000000" Offset="0"/>
		<GradientStop Color="#0C000000" Offset="0.875"/>
		<GradientStop Color="#59FFFFFF" Offset="1"/>
	</LinearGradientBrush>
	
	<LinearGradientBrush x:Key="NoesisCircularShadowBdBrush" EndPoint="0.5,0.75" StartPoint="0.5,0">
		<GradientStop Color="#33FFFFFF" Offset="0"/>
		<GradientStop Color="#66000000" Offset="1"/>
	</LinearGradientBrush>
	
	<LinearGradientBrush x:Key="NoesisShadowBdBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#33FFFFFF" Offset="0"/>
		<GradientStop Color="#66000000" Offset="1"/>
	</LinearGradientBrush>
	
	<LinearGradientBrush x:Key="NoesisShadowBdBrushV" EndPoint="1,0.5" StartPoint="0,0.5">
		<GradientStop Color="#33FFFFFF" Offset="0"/>
		<GradientStop Color="#66000000" Offset="1"/>
	</LinearGradientBrush>
	
	<SolidColorBrush x:Key="NoesisOverBdBrush" Color="#3FFFFFFF"/>

	<LinearGradientBrush x:Key="NoesisOverBgBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#33FFFFFF" Offset="0"/>
		<GradientStop Color="#33000000" Offset="0.65"/>
		<GradientStop Color="#26000000" Offset="1"/>
	</LinearGradientBrush>
	
	<LinearGradientBrush x:Key="NoesisOverBgBrushV" EndPoint="1,0.5" StartPoint="0,0.5">
		<GradientStop Color="#33FFFFFF"/>
		<GradientStop Color="#33000000" Offset="0.6"/>
		<GradientStop Color="#26000000" Offset="1"/>
	</LinearGradientBrush>
	
	<LinearGradientBrush x:Key="NoesisPressBgBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#33000000" Offset="0"/>
		<GradientStop Color="#19000000" Offset="0.15"/>
		<GradientStop Color="#19FFFFFF" Offset="1"/>
	</LinearGradientBrush>
	
	<LinearGradientBrush x:Key="NoesisPressBgBrushV" EndPoint="1,0.5" StartPoint="0,0.5">
		<GradientStop Color="#33000000" Offset="0"/>
		<GradientStop Color="#19000000" Offset="0.15"/>
		<GradientStop Color="#19FFFFFF" Offset="1"/>
	</LinearGradientBrush>

	<LinearGradientBrush x:Key="NoesisHighlightBgBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#33FFFFFF" Offset="0"/>
		<GradientStop Color="#0CFFFFFF" Offset="0.75"/>
		<GradientStop Color="#0EFFFFFF" Offset="1"/>
	</LinearGradientBrush>
	
	<LinearGradientBrush x:Key="NoesisHighlightBgBrushV" EndPoint="1,0.5" StartPoint="0,0.5">
		<GradientStop Color="#33FFFFFF" Offset="0"/>
		<GradientStop Color="#0CFFFFFF" Offset="0.75"/>
		<GradientStop Color="#0EFFFFFF" Offset="1"/>
	</LinearGradientBrush>
	
	<SolidColorBrush x:Key="NoesisGlyphShadowBdBrush" Color="#4C000000"/>
	
	<SolidColorBrush x:Key="NoesisTabIndentBrush" Color="#4C000000"/>
	
	<SolidColorBrush x:Key="NoesisPopupShadow1Brush" Color="#26000000"/>
	
	<SolidColorBrush x:Key="NoesisPopupShadow2Brush" Color="#4C000000"/>

	
    <!-- ============== LABEL ============== -->

	<ControlTemplate x:Key="NoesisLabelTemplate" TargetType="{x:Type Label}">
    	<Border
		  Background="{TemplateBinding Background}"
		  BorderBrush="{TemplateBinding BorderBrush}"
		  BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2"
		  UseLayoutRounding="True">
        	<ContentPresenter
			  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
			  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
			  Margin="{TemplateBinding Padding}"
			  UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
			  RecognizesAccessKey="True"/>
        </Border>
		<ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
            	<Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
        	</Trigger>
    	</ControlTemplate.Triggers>
	</ControlTemplate>
				
    <!-- Label Style -->
    <Style TargetType="{x:Type Label}">
    	<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
		<Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template" Value="{StaticResource NoesisLabelTemplate}"/>
    </Style>
    
    
    <!-- ============== BUTTON ============== -->

	<ControlTemplate x:Key="NoesisButtonBaseTemplate" TargetType="{x:Type ButtonBase}">
		<Grid UseLayoutRounding="True">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
						<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
						<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Normal">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundPressed">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeShadow">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeShadowPressed">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
				<VisualStateGroup x:Name="FocusStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Unfocused" GeneratedDuration="0:0:0.3" To="Focused"/>
						<VisualTransition From="Focused" GeneratedDuration="0:0:0.3" To="Unfocused"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Unfocused"/>
					<VisualState x:Name="Focused">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndentFocused" AutoReverse="True" RepeatBehavior="Forever">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.75">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0.25">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndentFocusedGlow" AutoReverse="True" RepeatBehavior="Forever">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.15">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Rectangle x:Name="Indent" RadiusX="3" RadiusY="3" Stroke="{StaticResource NoesisIndentBdBrush}"/>
			<Rectangle x:Name="IndentFocused" RadiusX="3" RadiusY="3" Stroke="{TemplateBinding BorderBrush}" Opacity="0"/>
			<Rectangle x:Name="IndentFocusedGlow" RadiusX="4" RadiusY="4" Stroke="{TemplateBinding BorderBrush}" Opacity="0" Margin="-1"/>
			<Rectangle x:Name="Background" RadiusX="1.5" RadiusY="1.5" Margin="2" Fill="{TemplateBinding Background}"/>
			<Rectangle x:Name="BackgroundNormal" RadiusX="1.5" RadiusY="1.5" Margin="2" Fill="{StaticResource NoesisNormalBgBrush}" Opacity="0"/>
			<Rectangle x:Name="BackgroundOver" RadiusX="1.5" RadiusY="1.5" Margin="2" Fill="{StaticResource NoesisOverBgBrush}" Opacity="0"/>
			<Rectangle x:Name="BackgroundPressed" RadiusX="1.5" RadiusY="1.5" Margin="2" Fill="{StaticResource NoesisPressBgBrush}" Opacity="0"/>
			<Rectangle x:Name="BackgroundDisabled" RadiusX="1.5" RadiusY="1.5" Margin="2" Fill="{StaticResource NoesisDisabledBgBrush}" Visibility="Collapsed"/>
			<Rectangle x:Name="Stroke" RadiusX="2" RadiusY="2" Margin="1" Stroke="{TemplateBinding BorderBrush}"/>
			<Rectangle x:Name="StrokeNormal" RadiusX="2" RadiusY="2" Margin="1" Stroke="{StaticResource NoesisNormalBdBrush}"/>
            <Rectangle x:Name="StrokeShadow" RadiusX="2" RadiusY="2" Margin="1" Stroke="{StaticResource NoesisShadowBdBrush}"/>
			<Rectangle x:Name="StrokeShadowPressed" RadiusX="2" RadiusY="2" Margin="1" Stroke="{StaticResource NoesisShadowBdBrush}" RenderTransformOrigin="0.5,0.5" Opacity="0">
				<Rectangle.RenderTransform>
					<TransformGroup>
						<ScaleTransform ScaleY="-1"/>
						<SkewTransform/>
						<RotateTransform/>
						<TranslateTransform/>
					</TransformGroup>
				</Rectangle.RenderTransform>
			</Rectangle>
			<Rectangle x:Name="StrokeDisabled" RadiusX="2" RadiusY="2" Margin="1" Stroke="{StaticResource NoesisDisabledBdBrush}" Visibility="Collapsed"/>
			<Rectangle x:Name="Highlight" RadiusX="1" RadiusY="1" Margin="2" Stroke="{StaticResource NoesisHighlightBgBrush}"/>
			<Border Margin="2">
				<ContentPresenter
				  Margin="{TemplateBinding Padding}"
				  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
				  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
				  UseLayoutRounding="{TemplateBinding UseLayoutRounding}"/>
			</Border>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="StrokeDisabled" Value="Visible"/>
				<Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
	<Style TargetType="{x:Type Button}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
		<Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
		<Setter Property="Padding" Value="3"/>
		<Setter Property="Template" Value="{StaticResource NoesisButtonBaseTemplate}"/>
	</Style>
    
    
    <!-- ============== REPEAT BUTTON ============== -->
    

    <!-- RepeatButton Style -->
    <Style TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
		<Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
		<Setter Property="Padding" Value="3"/>
		<Setter Property="Template" Value="{StaticResource NoesisButtonBaseTemplate}"/>
    </Style>
    
    
    <!-- ============== TOGGLE BUTTON ============== -->
    
	<ControlTemplate x:Key="NoesisToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
		<Grid UseLayoutRounding="True">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
						<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
						<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Normal">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundPressed">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeShadow">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeShadowPressed">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
				<VisualStateGroup x:Name="FocusStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Unfocused" GeneratedDuration="0:0:0.3" To="Focused"/>
						<VisualTransition From="Focused" GeneratedDuration="0:0:0.3" To="Unfocused"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Unfocused"/>
					<VisualState x:Name="Focused">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndentFocused" AutoReverse="True" RepeatBehavior="Forever">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.75">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0.25">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndentFocusedGlow" AutoReverse="True" RepeatBehavior="Forever">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.15">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="CheckStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Unchecked" GeneratedDuration="0:0:0.1" To="Checked"/>
						<!--VisualTransition From="Checked" GeneratedDuration="0:0:0.1" To="Unchecked"/-->
						<VisualTransition From="Checked" GeneratedDuration="0:0:0.1" To="Indeterminate"/>
						<VisualTransition From="Indeterminate" GeneratedDuration="0:0:0.1" To="Unchecked"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Checked">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ToggleChecked">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.75"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Unchecked"/>
					<VisualState x:Name="Indeterminate">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ToggleIndeterminate">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.75"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ToggleIndeterminateStroke">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Rectangle x:Name="Indent" RadiusX="3" RadiusY="3" Stroke="{StaticResource NoesisIndentBdBrush}"/>
			<Rectangle x:Name="IndentFocused" RadiusX="3" RadiusY="3" Stroke="{TemplateBinding BorderBrush}" Opacity="0"/>
			<Rectangle x:Name="IndentFocusedGlow" RadiusX="4" RadiusY="4" Stroke="{TemplateBinding BorderBrush}" Opacity="0" Margin="-1"/>
			<Rectangle x:Name="Background" RadiusX="1.5" RadiusY="1.5" Margin="2" Fill="{TemplateBinding Background}"/>
			<Rectangle x:Name="BackgroundNormal" RadiusX="1.5" RadiusY="1.5" Margin="2" Fill="{StaticResource NoesisNormalBgBrush}" Opacity="0"/>
			<Rectangle x:Name="BackgroundOver" RadiusX="1.5" RadiusY="1.5" Margin="2" Fill="{StaticResource NoesisOverBgBrush}" Opacity="0"/>
			<Rectangle x:Name="BackgroundPressed" RadiusX="1.5" RadiusY="1.5" Margin="2" Fill="{StaticResource NoesisPressBgBrush}" Opacity="0"/>
			<Border x:Name="Toggle" HorizontalAlignment="Right" Margin="0,3,3,3" Width="10" Height="Auto" BorderBrush="{StaticResource NoesisIndentBdBrush}" CornerRadius="0,0.15,0.15,0" BorderThickness="1">
				<Grid>
					<Rectangle x:Name="ToggleChecked" Fill="{TemplateBinding BorderBrush}" Opacity="0" StrokeThickness="0"/>
					<Rectangle x:Name="ToggleIndeterminate" Fill="{TemplateBinding BorderBrush}" Opacity="0" StrokeThickness="0" Margin="2"/>
					<Rectangle x:Name="ToggleIndeterminateStroke" Opacity="0" Stroke="#3F000000" Margin="2"/>
					<Rectangle x:Name="ToggleShadow" Fill="{StaticResource NoesisPressBgBrush}" Opacity="0.5" StrokeThickness="0"/>
					<Rectangle x:Name="ToggleHighlight" Stroke="{StaticResource NoesisHighlightBgBrush}" StrokeThickness="1"/>
				</Grid>
			</Border>
			<Rectangle x:Name="BackgroundDisabled" RadiusX="1.5" RadiusY="1.5" Margin="2" Fill="{StaticResource NoesisDisabledBgBrush}" Visibility="Collapsed"/>
			<Rectangle x:Name="Stroke" RadiusX="2" RadiusY="2" Margin="1" Stroke="{TemplateBinding BorderBrush}"/>
			<Rectangle x:Name="StrokeNormal" RadiusX="2" RadiusY="2" Margin="1" Stroke="{StaticResource NoesisNormalBdBrush}"/>
			<Rectangle x:Name="StrokeShadow" RadiusX="2" RadiusY="2" Margin="1" Stroke="{StaticResource NoesisShadowBdBrush}"/>
			<Rectangle x:Name="StrokeShadowPressed" RadiusX="2" RadiusY="2" Margin="1" Stroke="{StaticResource NoesisShadowBdBrush}" RenderTransformOrigin="0.5,0.5" Opacity="0">
				<Rectangle.RenderTransform>
					<TransformGroup>
						<ScaleTransform ScaleY="-1"/>
						<SkewTransform/>
						<RotateTransform/>
						<TranslateTransform/>
					</TransformGroup>
				</Rectangle.RenderTransform>
			</Rectangle>
			<Rectangle x:Name="StrokeDisabled" RadiusX="2" RadiusY="2" Margin="1" Stroke="{StaticResource NoesisDisabledBdBrush}" Visibility="Collapsed"/>
			<Rectangle x:Name="Highlight" RadiusX="1" RadiusY="1" Margin="2" Stroke="{StaticResource NoesisHighlightBgBrush}"/>
			<Border Margin="0,2,16,2">
				<ContentPresenter
					Margin="{TemplateBinding Padding}"
					HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
					VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
					UseLayoutRounding="{TemplateBinding UseLayoutRounding}"/>
			</Border>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsThreeState" Value="True">
				<Setter Property="StrokeThickness" TargetName="ToggleHighlight" Value="2"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="StrokeDisabled" Value="Visible"/>
				<Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

    <!-- ToggleButton Style -->
    <Style TargetType="{x:Type ToggleButton}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="true"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
		<Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
		<Setter Property="Padding" Value="3"/>
        <Setter Property="Template" Value="{StaticResource NoesisToggleButtonTemplate}"/>
    </Style>
    
    
    <!-- ============== RADIO BUTTON ============== -->

	<ControlTemplate x:Key="NoesisRadioButtonTemplate" TargetType="{x:Type RadioButton}">
    	<BulletDecorator Background="Transparent" UseLayoutRounding="True">
			<BulletDecorator.Bullet>
				<Grid Width="14" Height="14">
					<Ellipse x:Name="Indent" Stroke="{StaticResource NoesisCircularIndentBdBrush}"/>
					<Ellipse x:Name="IndentFocused" Stroke="{TemplateBinding BorderBrush}" Opacity="0"/>
					<Ellipse x:Name="IndentFocusedGlow" Stroke="{TemplateBinding BorderBrush}" Margin="-1" Opacity="0"/>
					<Ellipse x:Name="IndentOver" Stroke="{TemplateBinding BorderBrush}" Opacity="0"/>
					<Ellipse x:Name="Stroke" Stroke="{TemplateBinding BorderBrush}" Margin="1"/>
					<Ellipse x:Name="StrokeNormal" Stroke="{StaticResource NoesisNormalBdBrush}" Margin="1"/>
					<Ellipse x:Name="StrokeShadow" Stroke="{StaticResource NoesisCircularShadowBdBrush}" Margin="1" RenderTransformOrigin="0.5,0.5">
						<Ellipse.RenderTransform>
							<TransformGroup>
								<ScaleTransform ScaleY="1" ScaleX="1"/>
								<SkewTransform AngleY="0" AngleX="0"/>
								<RotateTransform Angle="0"/>
								<TranslateTransform/>
							</TransformGroup>
						</Ellipse.RenderTransform>
					</Ellipse>
					<Ellipse x:Name="StrokeDisabled" Stroke="{StaticResource NoesisDisabledBdBrush}" Visibility="Collapsed" Margin="1"/>
					<Ellipse x:Name="Background" Margin="2" Fill="{TemplateBinding Background}"/>
					<Ellipse x:Name="BackgroundNormal" Margin="2" Fill="{StaticResource NoesisNormalBgBrush}" Opacity="0"/>
					<Ellipse x:Name="BackgroundOver" Margin="2" Fill="{StaticResource NoesisOverBgBrush}" Opacity="0"/>
					<Ellipse x:Name="BackgroundPress" Margin="2" Fill="{StaticResource NoesisPressBgBrush}" Opacity="0"/>
					<Ellipse x:Name="CheckMarkStroke" Margin="3" Stroke="{StaticResource NoesisGlyphShadowBdBrush}" Opacity="0"/>
					<Ellipse x:Name="CheckMark" Margin="4" Fill="{TemplateBinding BorderBrush}" Opacity="0"/>
					<Ellipse x:Name="BackgroundDisabled" Margin="2" Fill="{StaticResource NoesisDisabledBgBrush}" Visibility="Collapsed"/>
					<Ellipse x:Name="Highlight" Stroke="{StaticResource NoesisHighlightBgBrush}" Margin="2" StrokeThickness="2"/>
				</Grid>
			</BulletDecorator.Bullet>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndentOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.15"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundPress">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="StrokeShadow">
								<EasingDoubleKeyFrame KeyTime="0" Value="-1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
				<VisualStateGroup x:Name="CheckStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Unchecked" GeneratedDuration="0:0:0.1" To="Checked"/>
						<VisualTransition From="Checked" GeneratedDuration="0:0:0.1" To="Unchecked"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Checked">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckMark">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.75"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckMarkStroke">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Unchecked"/>
					<VisualState x:Name="Indeterminate">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckMark">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="FocusStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Unfocused" GeneratedDuration="0:0:0.3" To="Focused"/>
						<VisualTransition From="Focused" GeneratedDuration="0:0:0.3" To="Unfocused"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Unfocused"/>
					<VisualState x:Name="Focused">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndentFocused" RepeatBehavior="Forever" AutoReverse="True">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.75">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0.25">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndentFocusedGlow" RepeatBehavior="Forever" AutoReverse="True">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.15">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<ContentPresenter
				Margin="{TemplateBinding Padding}"
				HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
				VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
				UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
				RecognizesAccessKey="True"/>
		</BulletDecorator>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
                <Setter Property="Visibility" TargetName="StrokeDisabled" Value="Visible"/>
                <Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
            </Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

    <!-- RadioButton Style -->
    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Padding" Value="4,0,0,0"/>
        <Setter Property="Template" Value="{StaticResource NoesisRadioButtonTemplate}"/>
    </Style>
    
    
    <!-- ============== CHECK BOX ============== -->
	
	<ControlTemplate x:Key="NoesisCheckBoxTemplate" TargetType="{x:Type CheckBox}">
    	<BulletDecorator Background="Transparent" UseLayoutRounding="True">
			<BulletDecorator.Bullet>
				<Grid Width="14" Height="14">
					<Rectangle x:Name="Indent" Stroke="{StaticResource NoesisIndentBdBrush}" RadiusY="0.5" RadiusX="0.5"/>
					<Rectangle x:Name="IndentFocused" Stroke="{TemplateBinding BorderBrush}" RadiusY="0.5" RadiusX="0.5" Opacity="0"/>
					<Rectangle x:Name="IndentFocusedGlow" Stroke="{TemplateBinding BorderBrush}" RadiusY="1.5" RadiusX="1.5" Margin="-1" Opacity="0"/>
					<Rectangle x:Name="IndentOver" Stroke="{TemplateBinding BorderBrush}" Opacity="0" RadiusX="0.5" RadiusY="0.5"/>
					<Rectangle x:Name="Stroke" Stroke="{TemplateBinding BorderBrush}" Margin="1"/>
					<Rectangle x:Name="StrokeNormal" Stroke="{StaticResource NoesisNormalBdBrush}" Margin="1"/>
					<Rectangle x:Name="StrokeShadow" Stroke="{StaticResource NoesisShadowBdBrush}" RenderTransformOrigin="0.5,0.5" Margin="1">
						<Rectangle.RenderTransform>
							<TransformGroup>
								<ScaleTransform ScaleX="1"/>
								<SkewTransform AngleY="0" AngleX="0"/>
								<RotateTransform Angle="0"/>
								<TranslateTransform/>
							</TransformGroup>
						</Rectangle.RenderTransform>
					</Rectangle>
					<Rectangle x:Name="StrokeDisabled" Stroke="{StaticResource NoesisDisabledBdBrush}" Visibility="Collapsed" Margin="1"/>
					<Rectangle x:Name="Background" Fill="{TemplateBinding Background}" Opacity="1" StrokeThickness="0" Margin="2"/>
					<Rectangle x:Name="BackgroundNormal" Fill="{StaticResource NoesisNormalBgBrush}" Opacity="0" StrokeThickness="0" Margin="2"/>
					<Rectangle x:Name="BackgroundOver" Fill="{StaticResource NoesisOverBgBrush}" Opacity="0" StrokeThickness="0" Margin="2"/>
					<Rectangle x:Name="BackgroundPress" Fill="{StaticResource NoesisPressBgBrush}" Opacity="0" StrokeThickness="0" Margin="2"/>
					<Rectangle x:Name="Highlight" Stroke="{StaticResource NoesisHighlightBgBrush}" StrokeThickness="1" Margin="2"/>
					<Path x:Name="ToggleCheckStroke" Data="M310,430.66667 L612,184.66632 538,125.99924 328,339.99953 304.66667,269.99944 217.99956,285.33279 z" Height="11" Stretch="Fill" Width="13" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center" Opacity="0" StrokeThickness="2" Margin="1,0,0,0" Stroke="{StaticResource NoesisGlyphShadowBdBrush}" StrokeLineJoin="Round">
						<Path.RenderTransform>
							<TransformGroup>
								<ScaleTransform/>
								<SkewTransform/>
								<RotateTransform Angle="-10"/>
								<TranslateTransform/>
							</TransformGroup>
						</Path.RenderTransform>
					</Path>
					<Path x:Name="ToggleCheck" Data="M310,430.66667 L612,184.66632 538,125.99924 328,339.99953 304.66667,269.99944 217.99956,285.33279 z" Fill="{TemplateBinding BorderBrush}" Height="9" Stretch="Fill" Width="11" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center" Opacity="0" StrokeThickness="0.5" Margin="1,0,0,0">
						<Path.RenderTransform>
							<TransformGroup>
								<ScaleTransform/>
								<SkewTransform/>
								<RotateTransform Angle="-10"/>
								<TranslateTransform/>
							</TransformGroup>
						</Path.RenderTransform>
					</Path>
					<Rectangle x:Name="ToggleIndeterminateStroke" Opacity="0" StrokeThickness="1" Margin="3" Stroke="{StaticResource NoesisGlyphShadowBdBrush}"/>
					<Rectangle x:Name="ToggleIndeterminate" Fill="{TemplateBinding BorderBrush}" Opacity="0" StrokeThickness="0" Margin="4"/>
					<Rectangle x:Name="BackgroundDisabled" Fill="{StaticResource NoesisDisabledBgBrush}" Opacity="1" StrokeThickness="0" Margin="2" Visibility="Collapsed"/>
					<Rectangle x:Name="HighlightDisabled" Stroke="{StaticResource NoesisHighlightBgBrush}" StrokeThickness="2" Margin="2" Visibility="Collapsed"/>
				</Grid>
			</BulletDecorator.Bullet>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndentOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.15"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundPress">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="StrokeShadow">
								<EasingDoubleKeyFrame KeyTime="0" Value="-1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
				<VisualStateGroup x:Name="CheckStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Unchecked" GeneratedDuration="0:0:0.1" To="Checked"/>
						<VisualTransition From="Checked" GeneratedDuration="0:0:0.1" To="Unchecked"/>
						<VisualTransition From="Checked" GeneratedDuration="0:0:0.1" To="Indeterminate"/>
						<VisualTransition From="Indeterminate" GeneratedDuration="0:0:0.1" To="Unchecked"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Checked">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ToggleCheck">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ToggleCheckStroke">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Unchecked"/>
					<VisualState x:Name="Indeterminate">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ToggleIndeterminate">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.75"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ToggleIndeterminateStroke">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="FocusStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Unfocused" GeneratedDuration="0:0:0.3" To="Focused"/>
						<VisualTransition From="Focused" GeneratedDuration="0:0:0.3" To="Unfocused"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Unfocused"/>
					<VisualState x:Name="Focused">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndentFocused" RepeatBehavior="Forever" AutoReverse="True">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.75">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0.25">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndentFocusedGlow" RepeatBehavior="Forever" AutoReverse="True">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.15">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<ContentPresenter
				Margin="{TemplateBinding Padding}"
				HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
				VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
				UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
				RecognizesAccessKey="True"/>
		</BulletDecorator>
        <ControlTemplate.Triggers>
			<Trigger Property="IsThreeState" Value="True">
				<Setter Property="StrokeThickness" TargetName="Highlight" Value="2"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
				<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="StrokeDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="HighlightDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="Highlight" Value="Collapsed"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

    <!-- CheckBox Style -->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="UseLayoutRounding" Value="true"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
		<Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
		<Setter Property="Padding" Value="4,0,0,0"/>
        <Setter Property="Template" Value="{StaticResource NoesisCheckBoxTemplate}"/>
    </Style>
    
    
    <!-- ============== SCROLL BAR ============== -->
    
	<!-- VerticalScrollBarThumb Style -->
	<ControlTemplate x:Key="NoesisVerticalScrollBarThumbTemplate" TargetType="{x:Type Thumb}">
    	<Grid UseLayoutRounding="True">
        	<VisualStateManager.VisualStateGroups>
            	<VisualStateGroup x:Name="CommonStates">
                	<VisualStateGroup.Transitions>
                		<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
                		<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
                		<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver"/>
                	</VisualStateGroup.Transitions>
                	<VisualState x:Name="Normal">
                		<Storyboard>
                			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundNormal">
                				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                			</DoubleAnimationUsingKeyFrames>
                		</Storyboard>
                	</VisualState>
                	<VisualState x:Name="MouseOver">
                		<Storyboard>
                			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
                				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                			</DoubleAnimationUsingKeyFrames>
                			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
                				<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                			</DoubleAnimationUsingKeyFrames>
                		</Storyboard>
                	</VisualState>
                	<VisualState x:Name="Pressed">
                		<Storyboard>
                			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
                				<EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                			</DoubleAnimationUsingKeyFrames>
                			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
                				<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                			</DoubleAnimationUsingKeyFrames>
                		</Storyboard>
                	</VisualState>
                	<VisualState x:Name="Disabled"/>
                </VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="Stroke" RadiusX="2" RadiusY="2" Stroke="{TemplateBinding BorderBrush}"/>
            <Rectangle x:Name="StrokeNormal" RadiusX="2" RadiusY="2" Stroke="{StaticResource NoesisNormalBdBrushV}"/>
            <Rectangle x:Name="StrokeShadow" RadiusX="2" RadiusY="2" Stroke="{StaticResource NoesisShadowBdBrushV}" RenderTransformOrigin="0.5,0.5"/>
            <Rectangle x:Name="StrokeDisabled" RadiusX="2" RadiusY="2" Stroke="{StaticResource NoesisDisabledBdBrush}" Visibility="Collapsed"/>
            <Rectangle x:Name="Background" RadiusX="1.5" RadiusY="1.5" Fill="{TemplateBinding Background}" Margin="1"/>
            <Rectangle x:Name="BackgroundNormal" RadiusX="1.5" RadiusY="1.5" Fill="{StaticResource NoesisNormalBgBrushV}" Margin="1" Opacity="0"/>
            <Rectangle x:Name="BackgroundOver" RadiusX="1.5" RadiusY="1.5" Fill="{StaticResource NoesisOverBgBrushV}" Margin="1" Opacity="0"/>
            <Rectangle x:Name="BackgroundDisabled" RadiusX="1.5" RadiusY="1.5" Fill="{StaticResource NoesisDisabledBgBrushV}" Margin="1" Visibility="Collapsed"/>
            <Rectangle x:Name="Highlight" RadiusX="1" RadiusY="1" Margin="1" Opacity="1" Stroke="{StaticResource NoesisHighlightBgBrushV}"/>
		</Grid>
        <ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="StrokeDisabled" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
				
    <Style x:Key="NoesisVerticalScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template" Value="{StaticResource NoesisVerticalScrollBarThumbTemplate}"/>
    </Style>
    
    <!-- HorizontalScrollBarThumb Style -->
	<ControlTemplate x:Key="NoesisHorizontalScrollBarThumbTemplate" TargetType="{x:Type Thumb}">
    	<Grid UseLayoutRounding="True">
        	<VisualStateManager.VisualStateGroups>
            	<VisualStateGroup x:Name="CommonStates">
                	<VisualStateGroup.Transitions>
                		<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
                		<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
                		<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver"/>
                	</VisualStateGroup.Transitions>
                	<VisualState x:Name="Normal">
                		<Storyboard>
                			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundNormal">
                				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                			</DoubleAnimationUsingKeyFrames>
                		</Storyboard>
                	</VisualState>
                	<VisualState x:Name="MouseOver">
                		<Storyboard>
                			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
                				<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                			</DoubleAnimationUsingKeyFrames>
                			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
                				<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                			</DoubleAnimationUsingKeyFrames>
                		</Storyboard>
                	</VisualState>
                	<VisualState x:Name="Pressed">
                		<Storyboard>
                			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
                				<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                			</DoubleAnimationUsingKeyFrames>
                			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
                				<EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                			</DoubleAnimationUsingKeyFrames>
                		</Storyboard>
                	</VisualState>
                	<VisualState x:Name="Disabled"/>
                </VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="Stroke" RadiusX="2" RadiusY="2" Stroke="{TemplateBinding BorderBrush}"/>
            <Rectangle x:Name="StrokeNormal" RadiusX="2" RadiusY="2" Stroke="{StaticResource NoesisNormalBdBrush}"/>
            <Rectangle x:Name="StrokeShadow" RadiusX="2" RadiusY="2" Stroke="{StaticResource NoesisShadowBdBrush}" RenderTransformOrigin="0.5,0.5"/>
            <Rectangle x:Name="StrokeDisabled" RadiusX="2" RadiusY="2" Stroke="{StaticResource NoesisDisabledBdBrush}" Visibility="Collapsed"/>
            <Rectangle x:Name="Background" RadiusX="1.5" RadiusY="1.5" Fill="{TemplateBinding Background}" Margin="1"/>
            <Rectangle x:Name="BackgroundNormal" RadiusX="1.5" RadiusY="1.5" Fill="{StaticResource NoesisNormalBgBrush}" Margin="1" Opacity="0"/>
            <Rectangle x:Name="BackgroundOver" RadiusX="1.5" RadiusY="1.5" Fill="{StaticResource NoesisOverBgBrush}" Margin="1" Opacity="0"/>
            <Rectangle x:Name="BackgroundDisabled" RadiusX="1.5" RadiusY="1.5" Fill="{StaticResource NoesisDisabledBgBrush}" Margin="1" Visibility="Collapsed"/>
            <Rectangle x:Name="Highlight" RadiusX="1" RadiusY="1" Margin="1" Opacity="1" Stroke="{StaticResource NoesisHighlightBgBrush}"/>
		</Grid>
        <ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="StrokeDisabled" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

    <Style x:Key="NoesisHorizontalScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template" Value="{StaticResource NoesisHorizontalScrollBarThumbTemplate}"/>
    </Style>
	
    <!-- ScrollBarLineButton Style -->
	<ControlTemplate x:Key="NoesisVerticalScrollBarLineButtonTemplate" TargetType="{x:Type RepeatButton}">
    	<Grid UseLayoutRounding="True">
        	<VisualStateManager.VisualStateGroups>
            	<VisualStateGroup x:Name="CommonStates">
                	<VisualStateGroup.Transitions>
                		<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
                		<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
                		<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver"/>
					</VisualStateGroup.Transitions>
                	<VisualState x:Name="Normal">
                		<Storyboard>
                			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                			</DoubleAnimationUsingKeyFrames>
	                	</Storyboard>
	                </VisualState>
	                <VisualState x:Name="MouseOver">
						<Storyboard>
	                		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroudOver">
	                			<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
	                		</DoubleAnimationUsingKeyFrames>
	                		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeGlow">
	                			<EasingDoubleKeyFrame KeyTime="0" Value="0.15"/>
	                		</DoubleAnimationUsingKeyFrames>
	                		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndentGlow">
	                			<EasingDoubleKeyFrame KeyTime="0" Value="0.15"/>
	                		</DoubleAnimationUsingKeyFrames>
	                		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
	                			<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
	                		</DoubleAnimationUsingKeyFrames>
	                	</Storyboard>
	                </VisualState>
	                <VisualState x:Name="Pressed">
	                	<Storyboard>
	                		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroudPress">
	                			<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
	                		</DoubleAnimationUsingKeyFrames>
	                		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="StrokeShadow">
	                			<EasingDoubleKeyFrame KeyTime="0" Value="-1"/>
	                		</DoubleAnimationUsingKeyFrames>
	                		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
	                			<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
	                		</DoubleAnimationUsingKeyFrames>
	                	</Storyboard>
	                </VisualState>
	               	<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Rectangle x:Name="Stroke" Stroke="{TemplateBinding BorderBrush}" RadiusX="1" RadiusY="1"/>
			<Rectangle x:Name="StrokeNormal" Stroke="{StaticResource NoesisNormalBdBrushV}" RadiusX="1" RadiusY="1"/>
			<Rectangle x:Name="StrokeShadow" Stroke="{StaticResource NoesisShadowBdBrushV}" RadiusX="1" RadiusY="1" RenderTransformOrigin="0.5,0.5">
            	<Rectangle.RenderTransform>
            		<TransformGroup>
                		<ScaleTransform ScaleY="1" ScaleX="1"/>
                		<SkewTransform AngleY="0" AngleX="0"/>
                		<RotateTransform Angle="0"/>
                		<TranslateTransform/>
					</TransformGroup>
                </Rectangle.RenderTransform>
			</Rectangle>
            <Rectangle x:Name="StrokeDisabled" Stroke="{StaticResource NoesisDisabledBdBrush}" RadiusX="1" RadiusY="1" Visibility="Collapsed"/>
            <Rectangle x:Name="Background" RadiusX="0.5" RadiusY="0.5" Fill="{TemplateBinding Background}" Margin="1"/>
            <Rectangle x:Name="BackgroundNormal" RadiusX="0.5" RadiusY="0.5" Fill="{StaticResource NoesisNormalBgBrushV}" Margin="1" Opacity="0"/>
            <Rectangle x:Name="BackgroudOver" RadiusX="0.5" RadiusY="0.5" Fill="{StaticResource NoesisOverBgBrushV}" Margin="1" Opacity="0"/>
            <Rectangle x:Name="BackgroudPress" RadiusX="0.5" RadiusY="0.5" Fill="{StaticResource NoesisPressBgBrushV}" Margin="1" Opacity="0"/>
            <Rectangle x:Name="BackgroundDisabled" RadiusX="0.5" RadiusY="0.5" Fill="{StaticResource NoesisDisabledBgBrushV}" Margin="1" Visibility="Collapsed"/>
            <Rectangle x:Name="IndentGlow" Stroke="{TemplateBinding BorderBrush}" RadiusX="2" RadiusY="2" Margin="-1" Opacity="0"/>
            <Rectangle x:Name="StrokeGlow" Stroke="{TemplateBinding BorderBrush}" RadiusX="0.1" RadiusY="0.1" Margin="1" Opacity="0"/>
			<Rectangle x:Name="Highlight" Stroke="{StaticResource NoesisHighlightBgBrushV}" RadiusX="0.1" RadiusY="0.1" Margin="1"/>
            <Grid>
            	<Path
                	x:Name="ArrowStroke"
                	HorizontalAlignment="Stretch"
                	VerticalAlignment="Stretch"
                	Fill="{StaticResource NoesisGlyphShadowBdBrush}"
                	Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" UseLayoutRounding="False" Stretch="Fill" Margin="{TemplateBinding Padding}"/>
                <Path
                	x:Name="Arrow"
                	HorizontalAlignment="Center"
                	VerticalAlignment="Center"
                	Fill="{TemplateBinding BorderBrush}"
                	Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" UseLayoutRounding="False"/>
                <Path
					x:Name="ArrowDisabled"
                	HorizontalAlignment="Center"
                	VerticalAlignment="Center"
                	Fill="{StaticResource NoesisDisabledBdBrush}"
                	Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" UseLayoutRounding="False" Visibility="Collapsed"/>
			</Grid>
		</Grid>
		<ControlTemplate.Triggers>
        	<Trigger Property="IsEnabled" Value="false">
            	<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
                <Setter Property="Visibility" TargetName="ArrowDisabled" Value="Visible"/>
                <Setter Property="Visibility" TargetName="StrokeDisabled" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
    <Style x:Key="NoesisVerticalScrollBarLineButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Delay" Value="250"/>
        <Setter Property="Interval" Value="100"/>
        <Setter Property="Template" Value="{StaticResource NoesisVerticalScrollBarLineButtonTemplate}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
    </Style>

	<ControlTemplate x:Key="NoesisHorizontalScrollBarLineButtonTemplate" TargetType="{x:Type RepeatButton}">
    	<Grid UseLayoutRounding="True">
        	<VisualStateManager.VisualStateGroups>
            	<VisualStateGroup x:Name="CommonStates">
                	<VisualStateGroup.Transitions>
                		<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
                		<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
                		<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver"/>
					</VisualStateGroup.Transitions>
                	<VisualState x:Name="Normal">
                		<Storyboard>
                			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                			</DoubleAnimationUsingKeyFrames>
	                	</Storyboard>
	                </VisualState>
	                <VisualState x:Name="MouseOver">
						<Storyboard>
	                		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroudOver">
	                			<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
	                		</DoubleAnimationUsingKeyFrames>
	                		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeGlow">
	                			<EasingDoubleKeyFrame KeyTime="0" Value="0.15"/>
	                		</DoubleAnimationUsingKeyFrames>
	                		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndentGlow">
	                			<EasingDoubleKeyFrame KeyTime="0" Value="0.15"/>
	                		</DoubleAnimationUsingKeyFrames>
	                		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
	                			<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
	                		</DoubleAnimationUsingKeyFrames>
	                	</Storyboard>
	                </VisualState>
	                <VisualState x:Name="Pressed">
	                	<Storyboard>
	                		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroudPress">
	                			<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
	                		</DoubleAnimationUsingKeyFrames>
	                		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="StrokeShadow">
	                			<EasingDoubleKeyFrame KeyTime="0" Value="-1"/>
	                		</DoubleAnimationUsingKeyFrames>
	                		<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
	                			<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
	                		</DoubleAnimationUsingKeyFrames>
	                	</Storyboard>
	                </VisualState>
	               	<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Rectangle x:Name="Stroke" Stroke="{TemplateBinding BorderBrush}" RadiusX="1" RadiusY="1"/>
			<Rectangle x:Name="StrokeNormal" Stroke="{StaticResource NoesisNormalBdBrush}" RadiusX="1" RadiusY="1"/>
			<Rectangle x:Name="StrokeShadow" Stroke="{StaticResource NoesisShadowBdBrush}" RadiusX="1" RadiusY="1" RenderTransformOrigin="0.5,0.5">
            	<Rectangle.RenderTransform>
            		<TransformGroup>
                		<ScaleTransform ScaleY="1" ScaleX="1"/>
                		<SkewTransform AngleY="0" AngleX="0"/>
                		<RotateTransform Angle="0"/>
                		<TranslateTransform/>
					</TransformGroup>
                </Rectangle.RenderTransform>
			</Rectangle>
            <Rectangle x:Name="StrokeDisabled" Stroke="{StaticResource NoesisDisabledBdBrush}" RadiusX="1" RadiusY="1" Visibility="Collapsed"/>
            <Rectangle x:Name="Background" RadiusX="0.5" RadiusY="0.5" Fill="{TemplateBinding Background}" Margin="1"/>
            <Rectangle x:Name="BackgroundNormal" RadiusX="0.5" RadiusY="0.5" Fill="{StaticResource NoesisNormalBgBrush}" Margin="1" Opacity="0"/>
            <Rectangle x:Name="BackgroudOver" RadiusX="0.5" RadiusY="0.5" Fill="{StaticResource NoesisOverBgBrush}" Margin="1" Opacity="0"/>
            <Rectangle x:Name="BackgroudPress" RadiusX="0.5" RadiusY="0.5" Fill="{StaticResource NoesisPressBgBrush}" Margin="1" Opacity="0"/>
            <Rectangle x:Name="BackgroundDisabled" RadiusX="0.5" RadiusY="0.5" Fill="{StaticResource NoesisDisabledBgBrush}" Margin="1" Visibility="Collapsed"/>
            <Rectangle x:Name="IndentGlow" Stroke="{TemplateBinding BorderBrush}" RadiusX="2" RadiusY="2" Margin="-1" Opacity="0"/>
            <Rectangle x:Name="StrokeGlow" Stroke="{TemplateBinding BorderBrush}" RadiusX="0.1" RadiusY="0.1" Margin="1" Opacity="0"/>
			<Rectangle x:Name="Highlight" Stroke="{StaticResource NoesisHighlightBgBrush}" RadiusX="0.1" RadiusY="0.1" Margin="1"/>
            <Grid>
            	<Path
                	x:Name="ArrowStroke"
                	HorizontalAlignment="Stretch"
                	VerticalAlignment="Stretch"
                	Fill="{StaticResource NoesisGlyphShadowBdBrush}"
                	Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" UseLayoutRounding="False" Stretch="Fill" Margin="{TemplateBinding Padding}"/>
                <Path
                	x:Name="Arrow"
                	HorizontalAlignment="Center"
                	VerticalAlignment="Center"
                	Fill="{TemplateBinding BorderBrush}"
                	Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" UseLayoutRounding="False"/>
                <Path
					x:Name="ArrowDisabled"
                	HorizontalAlignment="Center"
                	VerticalAlignment="Center"
                	Fill="{StaticResource NoesisDisabledBdBrush}"
                	Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" UseLayoutRounding="False" Visibility="Collapsed"/>
			</Grid>
		</Grid>
		<ControlTemplate.Triggers>
        	<Trigger Property="IsEnabled" Value="false">
            	<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
                <Setter Property="Visibility" TargetName="ArrowDisabled" Value="Visible"/>
                <Setter Property="Visibility" TargetName="StrokeDisabled" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

    <Style x:Key="NoesisHorizontalScrollBarLineButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Delay" Value="250"/>
        <Setter Property="Interval" Value="100"/>
        <Setter Property="Template" Value="{StaticResource NoesisHorizontalScrollBarLineButtonTemplate}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
    </Style>
    
    <!-- ScrollBarPageButton Style -->
	<ControlTemplate x:Key="NoesisScrollBarPageButton" TargetType="{x:Type RepeatButton}">
    	<Border Background="Transparent" UseLayoutRounding="True"/>
	</ControlTemplate>
	
    <Style x:Key="NoesisScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template" Value="{StaticResource NoesisScrollBarPageButton}"/>
    </Style>
    
    <!-- VerticalScrollBar Template -->
    <ControlTemplate x:Key="NoesisVerticalScrollBarTemplate" TargetType="{x:Type ScrollBar}">
        <Grid UseLayoutRounding="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="16"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition Height="16"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="Indent" Grid.RowSpan="3" RadiusX="2" RadiusY="2" Stroke="{StaticResource NoesisIndentBdBrushV}"/>
        	<Rectangle x:Name="Background" Grid.RowSpan="3" RadiusX="1.5" RadiusY="1.5" Fill="{TemplateBinding Background}" Margin="1"/>
        	<Rectangle x:Name="BackgroundShadow" Grid.RowSpan="3" RadiusX="1.5" RadiusY="1.5" Margin="1" RenderTransformOrigin="0.5,0.5" Fill="{StaticResource NoesisIndentBgBrushV}"/>
        	<Rectangle x:Name="BackgroundDisabled" Grid.RowSpan="3" RadiusX="1.5" RadiusY="1.5" Margin="1" RenderTransformOrigin="0.5,0.5" Fill="{StaticResource NoesisDisabledBdBrush}" Visibility="Collapsed"/>
        	<RepeatButton
        		Grid.Row="0"
        		Style="{StaticResource NoesisVerticalScrollBarLineButtonStyle}"
        		Command="ScrollBar.LineUpCommand"
        		Content="M 0 7 L 6 7 L 3 0 Z" Margin="1,1,1,0" Delay="250" Padding="3.25,3,3.25,3.5"/>
        	<Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
        		<Track.DecreaseRepeatButton>
        			<RepeatButton
        				Style="{StaticResource NoesisScrollBarPageButtonStyle}"
        				Command="ScrollBar.PageUpCommand"/>
        		</Track.DecreaseRepeatButton>
        		<Track.Thumb>
        			<Thumb
        				x:Name="Thumb"
        				Style="{StaticResource NoesisVerticalScrollBarThumbStyle}"
        				Margin="1,0"
        				Background="{TemplateBinding Background}"
        				BorderBrush="{TemplateBinding BorderBrush}"/>
        		</Track.Thumb>
        		<Track.IncreaseRepeatButton>
        			<RepeatButton
        				Style="{StaticResource NoesisScrollBarPageButtonStyle}"
        				Command="ScrollBar.PageDownCommand"/>
        		</Track.IncreaseRepeatButton>
        	</Track>
        	<RepeatButton
        		Grid.Row="2"
        		Style="{StaticResource NoesisVerticalScrollBarLineButtonStyle}"
        		Command="ScrollBar.LineDownCommand"
        		Content="M 0 0 L 3 7 L 6 0 Z" Margin="1,0,1,1" Padding="3.25,3.5,3.25,3"/>
        </Grid>
    	<ControlTemplate.Triggers>
    		<Trigger Property="IsEnabled" Value="False">
    			<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
    		</Trigger>
    	</ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!-- HorizontalScrollbar Template -->
    <ControlTemplate x:Key="NoesisHorizontalScrollBarTemplate" TargetType="{x:Type ScrollBar}">
        <Grid UseLayoutRounding="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="16"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition Width="16"/>
            </Grid.ColumnDefinitions>
            <Rectangle x:Name="Indent" Grid.ColumnSpan="3" RadiusX="2" RadiusY="2" Stroke="{StaticResource NoesisIndentBdBrush}"/>
        	<Rectangle x:Name="Background" Grid.ColumnSpan="3" RadiusX="1.5" RadiusY="1.5" Fill="{TemplateBinding Background}" Margin="1"/>
        	<Rectangle x:Name="BackgroundShadow" Grid.ColumnSpan="3" RadiusX="1.5" RadiusY="1.5" Margin="1" RenderTransformOrigin="0.5,0.5" Fill="{StaticResource NoesisIndentBgBrush}"/>
        	<Rectangle x:Name="BackgroundDisabled" Grid.ColumnSpan="3" RadiusX="1.5" RadiusY="1.5" Margin="1" RenderTransformOrigin="0.5,0.5" Fill="{StaticResource NoesisDisabledBdBrush}" Visibility="Collapsed"/>
        	<RepeatButton
        		Grid.Column="0"
        		Style="{StaticResource NoesisHorizontalScrollBarLineButtonStyle}"
        		Command="ScrollBar.LineLeftCommand"
        		Content="M 7 0 L 7 6 L 0 3 Z" Margin="1,1,0,1" Delay="250" Padding="3,3.25,3.5,3.25"/>
        	<Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
        		<Track.DecreaseRepeatButton>
        			<RepeatButton
        				Style="{StaticResource NoesisScrollBarPageButtonStyle}"
        				Command="ScrollBar.PageLeftCommand"/>
        		</Track.DecreaseRepeatButton>
        		<Track.Thumb>
        			<Thumb
        				x:Name="Thumb"
        				Style="{StaticResource NoesisHorizontalScrollBarThumbStyle}"
        				Margin="0,1"
        				Background="{TemplateBinding Background}"
        				BorderBrush="{TemplateBinding BorderBrush}"/>
        		</Track.Thumb>
        		<Track.IncreaseRepeatButton>
        			<RepeatButton
        				Style="{StaticResource NoesisScrollBarPageButtonStyle}"
        				Command="ScrollBar.PageRightCommand"/>
        		</Track.IncreaseRepeatButton>
        	</Track>
        	<RepeatButton
        		Grid.Column="2"
        		Style="{StaticResource NoesisHorizontalScrollBarLineButtonStyle}"
        		Command="ScrollBar.LineRightCommand"
        		Content="M 0 0 L 7 3 L 0 6 Z" Margin="0,1,1,1" Padding="3.5,3.25,3,3.25"/>
        </Grid>
    	<ControlTemplate.Triggers>
    		<Trigger Property="IsEnabled" Value="False">
    			<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
    		</Trigger>
    	</ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!-- ScrollBar Style -->
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="16"/>
                <Setter Property="Template" Value="{StaticResource NoesisHorizontalScrollBarTemplate}"/>
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="16"/>
                <Setter Property="Height" Value="Auto"/>
                <Setter Property="Template" Value="{StaticResource NoesisVerticalScrollBarTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    
    <!-- ============== SCROLL VIEWER ============== -->
    
    <!-- ScrollViewer Style -->
	<ControlTemplate x:Key="NoesisScrollViewerTemplate" TargetType="{x:Type ScrollViewer}">
		<Grid UseLayoutRounding="True">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="*"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			
            <Border
				Grid.Column="0"
				Grid.Row="0"
                Background="{TemplateBinding Background}"
                Padding="{TemplateBinding Padding}">
                <ScrollContentPresenter
                    Content="{TemplateBinding Content}"
                    ContentTemplate="{TemplateBinding ContentTemplate}"
                    CanContentScroll="{TemplateBinding CanContentScroll}"/>
            </Border>
            
            <Rectangle Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" Fill="{StaticResource NoesisBgBrush}"/>
            <Rectangle Grid.Column="1" Grid.Row="0" Fill="{StaticResource NoesisBgBrush}"/>
            <Border x:Name="ScrollBarsHi" Grid.Column="1" Grid.Row="1" BorderBrush="#40FFFFFF" BorderThickness="0,0,1,1" Margin="-1,-1,0,0" Visibility="Collapsed"/>

			<!-- The visibility of the ScrollBars is controlled by the implementation fo the control -->
			<ScrollBar
				x:Name="PART_HorizontalScrollBar"
				Grid.Column="0"
				Grid.Row="1"
				Orientation="Horizontal"
				Minimum="0"
				Maximum="{TemplateBinding ScrollableWidth}"
				Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
				Value="{TemplateBinding HorizontalOffset}"
				ViewportSize="{TemplateBinding ViewportWidth}"/>
			<ScrollBar
				x:Name="PART_VerticalScrollBar"
				Grid.Column="1"
				Grid.Row="0"
				Orientation="Vertical"
				Minimum="0"
				Maximum="{TemplateBinding ScrollableHeight}"
				Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
				Value="{TemplateBinding VerticalOffset}"
				ViewportSize="{TemplateBinding ViewportHeight}"/>
		</Grid>
		<ControlTemplate.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="ComputedHorizontalScrollBarVisibility" Value="Visible"/>
					<Condition Property="ComputedVerticalScrollBarVisibility" Value="Visible"/>
				</MultiTrigger.Conditions>
				<Setter TargetName="ScrollBarsHi" Property="Visibility" Value="Visible"/>
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

    <Style TargetType="{x:Type ScrollViewer}">
    	<Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
		<Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template" Value="{StaticResource NoesisScrollViewerTemplate}"/>
    </Style>
    
    
    <!-- ============== SLIDER ============== -->
    
    <!-- SliderButton Style -->
    <Style x:Key="NoesisSliderButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Delay" Value="250"/>
        <Setter Property="Interval" Value="100"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Vertical SliderThumb Style -->
	<ControlTemplate x:Key="NoesisVerticalSliderThumbTemplate" TargetType="{x:Type Thumb}">
		<Grid Width="20" Height="12" UseLayoutRounding="True">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
						<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
						<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Normal">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Border x:Name="Base" CornerRadius="2" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"/>
			<Border x:Name="StrokeNormal" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource NoesisNormalBdBrush}" HorizontalAlignment="Stretch"/>
			<Border x:Name="StrokeShadow" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource NoesisShadowBdBrush}" HorizontalAlignment="Stretch"/>
			<Border x:Name="StrokeDisabled" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource NoesisDisabledBdBrush}" HorizontalAlignment="Stretch" Visibility="Collapsed"/>
			<Border x:Name="BackgroundNormal" CornerRadius="2" BorderThickness="1" Background="{StaticResource NoesisNormalBgBrush}" HorizontalAlignment="Stretch" Opacity="0"/>
			<Border x:Name="BackgroundOver" CornerRadius="2" BorderThickness="1" Background="{StaticResource NoesisOverBgBrush}" HorizontalAlignment="Stretch" Opacity="0"/>
			<Border x:Name="BackgroundDisabled" CornerRadius="2" BorderThickness="1" Background="{StaticResource NoesisDisabledBgBrush}" HorizontalAlignment="Stretch" Visibility="Collapsed"/>
			<Border x:Name="Highlight" CornerRadius="1" BorderThickness="1" HorizontalAlignment="Stretch" Margin="1" BorderBrush="{StaticResource NoesisHighlightBgBrush}"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="StrokeDisabled" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

    <Style x:Key="NoesisVerticalSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Template" Value="{StaticResource NoesisVerticalSliderThumbTemplate}"/>
    </Style>

    <!-- Vertical SliderBothThumb Style -->
	<ControlTemplate x:Key="NoesisVerticalSliderBothThumbTemplate" TargetType="{x:Type Thumb}">
		<Grid Margin="-4, 0" Width="26" Height="14" UseLayoutRounding="True">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
						<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
						<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Normal">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowUpHighlight">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowDownHighlight">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Path x:Name="Stroke" Data="M8,0L0,6 8,12 16,12 24,6 16,0z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="{TemplateBinding BorderBrush}" Margin="1,1,0,0" HorizontalAlignment="Center"/>
			<Path x:Name="StrokeNormal" Data="M8,0L0,6 8,12 16,12 24,6 16,0z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="#BF000000" Margin="1,1,0,0" HorizontalAlignment="Center"/>
			<Path x:Name="StrokeShadow" Data="M8,0L0,6 8,12 16,12 24,6 16,0z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="{StaticResource NoesisShadowBdBrush}" Margin="1,1,0,0" HorizontalAlignment="Center"/>
			<Path x:Name="StrokeDisabled" Data="M8,0L0,6 8,12 16,12 24,6 16,0z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="{StaticResource NoesisDisabledBdBrush}" Margin="1,1,0,0" HorizontalAlignment="Center" Visibility="Collapsed"/>
			<Path x:Name="Background" Data="M8,0L0,6 8,12 16,12 24,6 16,0z" Fill="{TemplateBinding Background}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center"/>
			<Path x:Name="BackgroundNormal" Data="M8,0L0,6 8,12 16,12 24,6 16,0z" Fill="{StaticResource NoesisNormalBgBrush}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0"/>
			<Path x:Name="BackgroundOver" Data="M8,0L0,6 8,12 16,12 24,6 16,0z" Fill="{StaticResource NoesisOverBgBrush}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0"/>
			<Grid x:Name="ArrowUp" Margin="6,0,0,0">
				<Path Data="M4,0L0,3 4,6z" Stretch="None" UseLayoutRounding="False" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,1,0,0" Stroke="{StaticResource NoesisGlyphShadowBdBrush}"/>
				<Path Data="M4,0L0,3 4,6z" Stretch="None" UseLayoutRounding="False" Fill="{TemplateBinding BorderBrush}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Opacity="0.75"/>
				<Path x:Name="ArrowUpHighlight" Data="M4,0L0,3 4,6z" Stretch="None" UseLayoutRounding="False" Fill="#3FFFFFFF" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Opacity="0"/>
			</Grid>
			<Grid x:Name="ArrowDown" VerticalAlignment="Stretch" Margin="16,0,0,0">
				<Path Data="M0,0L4,3 0,6z" Stretch="None" UseLayoutRounding="False" VerticalAlignment="Center" HorizontalAlignment="Left" Stroke="{StaticResource NoesisGlyphShadowBdBrush}" Margin="0,1,0,0"/>
				<Path Data="M0,0L4,3 0,6z" Stretch="None" UseLayoutRounding="False" Fill="{TemplateBinding BorderBrush}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Opacity="0.75"/>
				<Path x:Name="ArrowDownHighlight" Data="M0,0L4,3 0,6z" Stretch="None" UseLayoutRounding="False" Fill="#3FFFFFFF" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Opacity="0"/>
			</Grid>
			<Path x:Name="BackgroundDisabled" Data="M8,0L0,6 8,12 16,12 24,6 16,0z" Fill="{StaticResource NoesisDisabledBgBrush}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed"/>
			<Path x:Name="Highlight" Data="M8,0L0,6 8,12 16,12 24,6 16,0z" Stretch="Fill" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="{StaticResource NoesisHighlightBgBrush}" Width="23.5" Height="12"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Visibility" TargetName="StrokeDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

    <Style x:Key="NoesisVerticalSliderBothThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Template" Value="{StaticResource NoesisVerticalSliderBothThumbTemplate}"/>
    </Style>

    <!-- Horizontal SliderLeftThumb Style -->
	<ControlTemplate x:Key="NoesisVerticalSliderLeftThumbTemplate" TargetType="{x:Type Thumb}">
		<Grid Margin="-4,0,0,0" Height="14" Width="22" UseLayoutRounding="True">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
						<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
						<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Normal">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowLeftHighlight">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Path x:Name="Stroke" Data="M8,0L0,6 8,12 20,12 20,0z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="{TemplateBinding BorderBrush}" Margin="1,1,0,0" HorizontalAlignment="Center"/>
			<Path x:Name="StrokeNormal" Data="M8,0L0,6 8,12 20,12 20,0z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="#BF000000" Margin="1,1,0,0" HorizontalAlignment="Center"/>
			<Path x:Name="StrokeShadow" Data="M8,0L0,6 8,12 20,12 20,0z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="{StaticResource NoesisShadowBdBrush}" Margin="1,1,0,0" HorizontalAlignment="Center"/>
			<Path x:Name="StrokeDisabled" Data="M8,0L0,6 8,12 20,12 20,0z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="{StaticResource NoesisDisabledBdBrush}" Margin="1,1,0,0" HorizontalAlignment="Center" Visibility="Collapsed"/>
			<Path x:Name="Background" Data="M8,0L0,6 8,12 20,12 20,0z" Fill="{TemplateBinding Background}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center"/>
			<Path x:Name="BackgroundNormal" Data="M8,0L0,6 8,12 20,12 20,0z" Fill="{StaticResource NoesisNormalBgBrush}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0"/>
			<Path x:Name="BackgroundOver" Data="M8,0L0,6 8,12 20,12 20,0z" Fill="{StaticResource NoesisOverBgBrush}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0"/>
			<Grid x:Name="ArrowLeft" Margin="6,0,0,0">
				<Path Data="M4,0L0,3 4,6z" Stretch="None" UseLayoutRounding="False" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,1,0,0" Stroke="{StaticResource NoesisGlyphShadowBdBrush}"/>
				<Path Data="M4,0L0,3 4,6z" Stretch="None" UseLayoutRounding="False" Fill="{TemplateBinding BorderBrush}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Opacity="0.75"/>
				<Path x:Name="ArrowLeftHighlight" Data="M4,0L0,3 4,6z" Stretch="None" UseLayoutRounding="False" Fill="#3FFFFFFF" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Opacity="0"/>
			</Grid>
			<Path x:Name="BackgroundDisabled" Data="M8,0L0,6 8,12 20,12 20,0z" Fill="{StaticResource NoesisDisabledBgBrush}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed"/>
			<Path x:Name="Highlight" Data="M8,0L0,6 8,12 20,12 20,0z" Stretch="Fill" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="{StaticResource NoesisHighlightBgBrush}" Width="20" Height="12"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Visibility" TargetName="StrokeDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

    <Style x:Key="NoesisVerticalSliderLeftThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Template" Value="{StaticResource NoesisVerticalSliderLeftThumbTemplate}"/>
    </Style>

    <!-- Vertical SliderRightThumb Style -->
	<ControlTemplate x:Key="NoesisVerticalSliderRightThumbTemplate" TargetType="{x:Type Thumb}">
		<Grid Margin="0,0,-4,0" Width="22" Height="14" UseLayoutRounding="True">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
						<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
						<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Normal">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowRightHighlight">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Path x:Name="Stroke" Data="M0,0L0,12 12,12 20,6 12,0z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="{TemplateBinding BorderBrush}" Margin="1,1,0,0" HorizontalAlignment="Center"/>
			<Path x:Name="StrokeNormal" Data="M0,0L0,12 12,12 20,6 12,0z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="#BF000000" Margin="1,1,0,0" HorizontalAlignment="Center"/>
			<Path x:Name="StrokeShadow" Data="M0,0L0,12 12,12 20,6 12,0z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="{StaticResource NoesisShadowBdBrush}" Margin="1,1,0,0" HorizontalAlignment="Center"/>
			<Path x:Name="StrokeDisabled" Data="M0,0L0,12 12,12 20,6 12,0z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="{StaticResource NoesisDisabledBdBrush}" Margin="1,1,0,0" HorizontalAlignment="Center" Visibility="Collapsed"/>
			<Path x:Name="Background" Data="M0,0L0,12 12,12 20,6 12,0z" Fill="{TemplateBinding Background}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center"/>
			<Path x:Name="BackgroundNormal" Data="M0,0L0,12 12,12 20,6 12,0z" Fill="{StaticResource NoesisNormalBgBrush}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0"/>
			<Path x:Name="BackgroundOver" Data="M0,0L0,12 12,12 20,6 12,0z" Fill="{StaticResource NoesisOverBgBrush}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0"/>
			<Grid x:Name="ArrowRight" Margin="12,0,0,0">
				<Path Data="M0,0L4,3 0,6z" Stretch="None" UseLayoutRounding="False" VerticalAlignment="Center" HorizontalAlignment="Left" Stroke="{StaticResource NoesisGlyphShadowBdBrush}" Margin="0,1,0,0"/>
				<Path Data="M0,0L4,3 0,6z" Stretch="None" UseLayoutRounding="False" Fill="{TemplateBinding BorderBrush}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Opacity="0.75"/>
				<Path x:Name="ArrowRightHighlight" Data="M0,0L4,3 0,6z" Stretch="None" UseLayoutRounding="False" Fill="#3FFFFFFF" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0" Opacity="0"/>
			</Grid>
			<Path x:Name="BackgroundDisabled" Data="M0,0L0,12 12,12 20,6 12,0z" Fill="{StaticResource NoesisDisabledBgBrush}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed"/>
			<Path x:Name="Highlight" Data="M0,0L0,12 12,12 20,6 12,0z" Stretch="Fill" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="{StaticResource NoesisHighlightBgBrush}" Width="20" Height="12"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Visibility" TargetName="StrokeDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

    <Style x:Key="NoesisVerticalSliderRightThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Template" Value="{StaticResource NoesisVerticalSliderRightThumbTemplate}"/>
    </Style>
	
    <!-- VerticalSlider Template -->
    <ControlTemplate x:Key="NoesisVerticalSliderTemplate" TargetType="{x:Type Slider}">
    	<Grid HorizontalAlignment="Center" UseLayoutRounding="True">
    		<Grid.ColumnDefinitions>
    			<ColumnDefinition Width="Auto"/>
    			<ColumnDefinition Width="Auto"/>
    			<ColumnDefinition Width="Auto"/>
    		</Grid.ColumnDefinitions>
    		<VisualStateManager.VisualStateGroups>
    			<VisualStateGroup x:Name="FocusStates">
    				<VisualStateGroup.Transitions>
    					<VisualTransition From="Unfocused" GeneratedDuration="0:0:0.3" To="Focused"/>
    					<VisualTransition From="Focused" GeneratedDuration="0:0:0.3" To="Unfocused"/>
    				</VisualStateGroup.Transitions>
    				<VisualState x:Name="Unfocused"/>
    				<VisualState x:Name="Focused">
    					<Storyboard>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndentFocused" RepeatBehavior="Forever" AutoReverse="True">
    							<EasingDoubleKeyFrame KeyTime="0" Value="0.75">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<SineEase EasingMode="EaseInOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    							<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0.25">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<SineEase EasingMode="EaseInOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    						</DoubleAnimationUsingKeyFrames>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndentFocusedGlow" RepeatBehavior="Forever" AutoReverse="True">
    							<EasingDoubleKeyFrame KeyTime="0" Value="0.15">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<SineEase EasingMode="EaseInOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    							<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<SineEase EasingMode="EaseInOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    						</DoubleAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualState>
    			</VisualStateGroup>
    		</VisualStateManager.VisualStateGroups>
    		<TickBar
    			x:Name="LeftTick"
    			SnapsToDevicePixels="True"
    			Placement="Left"
    			Fill="{TemplateBinding Foreground}"
    			Width="4"
    			Visibility="Collapsed" />
    		<Border
    			x:Name="Indent"
    			Margin="0,4"
    			CornerRadius="2"
    			Width="8"
    			Grid.Column="1"
    			Background="{TemplateBinding Background}"
    			BorderBrush="{StaticResource NoesisIndentBdBrushV}"
    			BorderThickness="1" HorizontalAlignment="Center" />
    		<Border
    			x:Name="IndentFocused"
    			Margin="0,4"
    			CornerRadius="2"
    			Width="8"
    			Grid.Column="1"
    			BorderBrush="{TemplateBinding BorderBrush}"
    			BorderThickness="1" HorizontalAlignment="Center" Opacity="0" />
    		<Border
    			x:Name="IndentFocusedGlow"
    			Margin="0,3"
    			CornerRadius="3"
    			Width="10"
    			Grid.Column="1"
    			BorderBrush="{TemplateBinding BorderBrush}"
    			BorderThickness="1" HorizontalAlignment="Center" Opacity="0" />
    		<Border
    			x:Name="BackgroundShadow"
    			Margin="0,4"
    			CornerRadius="2"
    			Width="8"
    			Grid.Column="1"
    			BorderThickness="1" Background="{StaticResource NoesisIndentBgBrush}" HorizontalAlignment="Center" />
    		<Border
    			x:Name="BackgroundDisabled"
    			Margin="0,4"
    			CornerRadius="2"
    			Width="8"
    			Grid.Column="1"
    			Background="{StaticResource NoesisDisabledBdBrush}"
    			BorderThickness="1" Visibility="Collapsed" HorizontalAlignment="Center" />
    		<TickBar
    			x:Name="RightTick"
    			SnapsToDevicePixels="True"
    			Grid.Column="2"
    			Fill="{TemplateBinding Foreground}"
    			Placement="Right"
    			Width="4"
    			Visibility="Collapsed" />
    		<Track Grid.Column="1" x:Name="PART_Track" Orientation="Vertical">
    			<Track.DecreaseRepeatButton>
    				<RepeatButton Style="{StaticResource NoesisSliderButtonStyle}" Command="Slider.DecreaseLarge" />
    			</Track.DecreaseRepeatButton>
    			<Track.Thumb>
    				<Thumb x:Name="Thumb" Style="{StaticResource NoesisVerticalSliderThumbStyle}" />
    			</Track.Thumb>
    			<Track.IncreaseRepeatButton>
    				<RepeatButton Style="{StaticResource NoesisSliderButtonStyle}" Command="Slider.IncreaseLarge" />
    			</Track.IncreaseRepeatButton>
    		</Track>
    	</Grid>
    	<ControlTemplate.Triggers>
    		<Trigger Property="TickPlacement" Value="TopLeft">
    			<Setter Property="Visibility" TargetName="LeftTick" Value="Visible"/>
    			<Setter Property="Style" TargetName="Thumb" Value="{StaticResource NoesisVerticalSliderLeftThumbStyle}"/>
    		</Trigger>
    		<Trigger Property="TickPlacement" Value="BottomRight">
    			<Setter Property="Visibility" TargetName="RightTick" Value="Visible"/>
    			<Setter Property="Style" TargetName="Thumb" Value="{StaticResource NoesisVerticalSliderRightThumbStyle}"/>
    		</Trigger>
    		<Trigger Property="TickPlacement" Value="Both">
    			<Setter Property="Visibility" TargetName="LeftTick" Value="Visible"/>
    			<Setter Property="Visibility" TargetName="RightTick" Value="Visible"/>
    			<Setter Property="Style" TargetName="Thumb" Value="{StaticResource NoesisVerticalSliderBothThumbStyle}"/>
    		</Trigger>
    		<Trigger Property="IsEnabled" Value="False">
    			<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
    		</Trigger>
    	</ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!-- Horizontal SliderThumb Style -->
	<ControlTemplate x:Key="NoesisHorizontalSliderThumbTemplate" TargetType="{x:Type Thumb}">
		<Grid Width="12" Height="20" UseLayoutRounding="True">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
						<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
						<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Normal">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Border x:Name="Base" CornerRadius="2" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"/>
			<Border x:Name="StrokeNormal" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource NoesisNormalBdBrushV}" HorizontalAlignment="Stretch"/>
			<Border x:Name="StrokeShadow" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource NoesisShadowBdBrush}" HorizontalAlignment="Stretch"/>
			<Border x:Name="StrokeDisabled" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource NoesisDisabledBdBrush}" HorizontalAlignment="Stretch" Visibility="Collapsed"/>
			<Border x:Name="BackgroundNormal" CornerRadius="2" BorderThickness="1" Background="{StaticResource NoesisNormalBgBrush}" HorizontalAlignment="Stretch" Opacity="0"/>
			<Border x:Name="BackgroundOver" CornerRadius="2" BorderThickness="1" Background="{StaticResource NoesisOverBgBrush}" HorizontalAlignment="Stretch" Opacity="0"/>
			<Border x:Name="StrokeFocused" CornerRadius="1" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" HorizontalAlignment="Stretch" Margin="1" Opacity="0"/>
			<Border x:Name="BackgroundDisabled" CornerRadius="2" BorderThickness="1" Background="{StaticResource NoesisDisabledBgBrush}" HorizontalAlignment="Stretch" Visibility="Collapsed"/>
			<Border x:Name="Highlight" CornerRadius="1" BorderThickness="1" HorizontalAlignment="Stretch" Margin="1" BorderBrush="{StaticResource NoesisHighlightBgBrush}"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="StrokeDisabled" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

    <Style x:Key="NoesisHorizontalSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Template" Value="{StaticResource NoesisHorizontalSliderThumbTemplate}"/>
    </Style>

    <!-- Horizontal SliderBothThumb Style -->
	<ControlTemplate x:Key="NoesisHorizontalSliderBothThumbTemplate" TargetType="{x:Type Thumb}">
		<Grid Margin="0,-4" Width="14" Height="26" UseLayoutRounding="True">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
						<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
						<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Normal">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowUpHighlight">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowDownHighlight">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Path x:Name="Stroke" Data="M0,8L6,0 12,8 12,16 6,24 0,16z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="{TemplateBinding BorderBrush}" Margin="1,1,0,0" HorizontalAlignment="Center"/>
			<Path x:Name="StrokeNormal" Data="M0,8L6,0 12,8 12,16 6,24 0,16z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="#BF000000" Margin="1,1,0,0" HorizontalAlignment="Center"/>
			<Path x:Name="StrokeShadow" Data="M0,8L6,0 12,8 12,16 6,24 0,16z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="{StaticResource NoesisShadowBdBrush}" Margin="1,1,0,0" HorizontalAlignment="Center"/>
			<Path x:Name="StrokeDisabled" Data="M0,8L6,0 12,8 12,16 6,24 0,16z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="{StaticResource NoesisDisabledBdBrush}" Margin="1,1,0,0" HorizontalAlignment="Center" Visibility="Collapsed"/>
			<Path x:Name="Background" Data="M0,8L6,0 12,8 12,16 6,24 0,16z" Fill="{TemplateBinding Background}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center"/>
			<Path x:Name="BackgroundNormal" Data="M0,8L6,0 12,8 12,16 6,24 0,16z" Fill="{StaticResource NoesisNormalBgBrush}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0"/>
			<Path x:Name="BackgroundOver" Data="M0,8L6,0 12,8 12,16 6,24 0,16z" Fill="{StaticResource NoesisOverBgBrush}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0"/>
			<Grid x:Name="ArrowUp" Margin="0,6,0,0">
				<Path Data="M0,4L3,0 6,4z" Stretch="None" UseLayoutRounding="False" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="1,0,0,0" Stroke="{StaticResource NoesisGlyphShadowBdBrush}"/>
				<Path Data="M0,4L3,0 6,4z" Stretch="None" UseLayoutRounding="False" Fill="{TemplateBinding BorderBrush}" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0" Opacity="0.75"/>
				<Path x:Name="ArrowUpHighlight" Data="M0,4L3,0 6,4z" Stretch="None" UseLayoutRounding="False" Fill="#3FFFFFFF" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0" Opacity="0"/>
			</Grid>
			<Grid x:Name="ArrowDown" VerticalAlignment="Stretch" Margin="0,16,0,0">
				<Path Data="M0,0L3,4 6,0z" Stretch="None" UseLayoutRounding="False" VerticalAlignment="Top" HorizontalAlignment="Center" Stroke="{StaticResource NoesisGlyphShadowBdBrush}" Margin="1,0,0,0"/>
				<Path Data="M0,0L3,4 6,0z" Stretch="None" UseLayoutRounding="False" Fill="{TemplateBinding BorderBrush}" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0" Opacity="0.75"/>
				<Path x:Name="ArrowDownHighlight" Data="M0,0L3,4 6,0z" Stretch="None" UseLayoutRounding="False" Fill="#3FFFFFFF" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0" Opacity="0"/>
			</Grid>
			<Path x:Name="BackgroundDisabled" Data="M0,8L6,0 12,8 12,16 6,24 0,16z" Fill="{StaticResource NoesisDisabledBgBrush}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed"/>
			<Path x:Name="Highlight" Data="M0,8L6,0 12,8 12,16 6,24 0,16z" Stretch="Fill" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="{StaticResource NoesisHighlightBgBrush}" Width="12" Height="23.5"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Visibility" TargetName="StrokeDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

    <Style x:Key="NoesisHorizontalSliderBothThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Template" Value="{StaticResource NoesisHorizontalSliderBothThumbTemplate}"/>
    </Style>

    <!-- Horizontal SliderUpThumb Style -->
	<ControlTemplate x:Key="NoesisHorizontalSliderUpThumbTemplate" TargetType="{x:Type Thumb}">
		<Grid Margin="0,-4,0,0" Height="22" Width="14" UseLayoutRounding="True">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
						<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
						<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Normal">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowUpHighlight">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Path x:Name="Stroke" Data="M0,8L6,0 12,8 12,20 0,20z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="{TemplateBinding BorderBrush}" Margin="1,1,0,0" HorizontalAlignment="Center"/>
			<Path x:Name="StrokeNormal" Data="M0,8L6,0 12,8 12,20 0,20z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="#BF000000" Margin="1,1,0,0" HorizontalAlignment="Center"/>
			<Path x:Name="StrokeShadow" Data="M0,8L6,0 12,8 12,20 0,20z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="{StaticResource NoesisShadowBdBrush}" Margin="1,1,0,0" HorizontalAlignment="Center"/>
			<Path x:Name="StrokeDisabled" Data="M0,8L6,0 12,8 12,20 0,20z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="{StaticResource NoesisDisabledBdBrush}" Margin="1,1,0,0" HorizontalAlignment="Center" Visibility="Collapsed"/>
			<Path x:Name="Background" Data="M0,8L6,0 12,8 12,20 0,20z" Fill="{TemplateBinding Background}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center"/>
			<Path x:Name="BackgroundNormal" Data="M0,8L6,0 12,8 12,20 0,20z" Fill="{StaticResource NoesisNormalBgBrush}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0"/>
			<Path x:Name="BackgroundOver" Data="M0,8L6,0 12,8 12,20 0,20z" Fill="{StaticResource NoesisOverBgBrush}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0"/>
			<Path Data="M0,4L3,0 6,4z" Stretch="None" UseLayoutRounding="False" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="1,7,0,0" Stroke="{StaticResource NoesisGlyphShadowBdBrush}"/>
			<Path Data="M0,4L3,0 6,4z" Stretch="None" UseLayoutRounding="False" Fill="{TemplateBinding BorderBrush}" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,7,0,0" Opacity="0.75"/>
			<Path x:Name="ArrowUpHighlight" Data="M0,4L3,0 6,4z" Stretch="None" UseLayoutRounding="False" Fill="#3FFFFFFF" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,7,0,0" Opacity="0"/>
			<Path x:Name="BackgroundDisabled" Data="M0,8L6,0 12,8 12,20 0,20z" Fill="{StaticResource NoesisDisabledBgBrush}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed"/>
			<Path x:Name="Highlight" Data="M0,8L6,0 12,8 12,20 0,20z" Stretch="Fill" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="{StaticResource NoesisHighlightBgBrush}" Width="12" Height="20"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Visibility" TargetName="StrokeDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

    <Style x:Key="NoesisHorizontalSliderUpThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Template" Value="{StaticResource NoesisHorizontalSliderUpThumbTemplate}"/>
    </Style>

    <!-- Horizontal SliderDownThumb Style -->
	<ControlTemplate x:Key="NoesisHorizontalSliderDownThumbTemplate" TargetType="{x:Type Thumb}">
		<Grid Margin="0,0,0,-4" Width="14" Height="22" UseLayoutRounding="True">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
						<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
						<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Normal">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowDownHighlight">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Path x:Name="Stroke" Data="M0,0L12,0 12,12 6,20 0,12z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="{TemplateBinding BorderBrush}" Margin="1,1,0,0" HorizontalAlignment="Center"/>
			<Path x:Name="StrokeNormal" Data="M0,0L12,0 12,12 6,20 0,12z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="#BF000000" Margin="1,1,0,0" HorizontalAlignment="Center"/>
			<Path x:Name="StrokeShadow" Data="M0,0L12,0 12,12 6,20 0,12z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="{StaticResource NoesisShadowBdBrush}" Margin="1,1,0,0" HorizontalAlignment="Center"/>
			<Path x:Name="StrokeDisabled" Data="M0,0L12,0 12,12 6,20 0,12z" Stretch="None" StrokeThickness="2" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" Stroke="{StaticResource NoesisDisabledBdBrush}" Margin="1,1,0,0" HorizontalAlignment="Center" Visibility="Collapsed"/>
			<Path x:Name="Background" Data="M0,0L12,0 12,12 6,20 0,12z" Fill="{TemplateBinding Background}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center"/>
			<Path x:Name="BackgroundNormal" Data="M0,0L12,0 12,12 6,20 0,12z" Fill="{StaticResource NoesisNormalBgBrush}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0"/>
			<Path x:Name="BackgroundOver" Data="M0,0L12,0 12,12 6,20 0,12z" Fill="{StaticResource NoesisOverBgBrush}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0"/>
			<Path Data="M0,0L3,4 6,0z" Stretch="None" UseLayoutRounding="False" VerticalAlignment="Top" HorizontalAlignment="Center" Stroke="{StaticResource NoesisGlyphShadowBdBrush}" Margin="1,12,0,0"/>
			<Path Data="M0,0L3,4 6,0z" Stretch="None" UseLayoutRounding="False" Fill="{TemplateBinding BorderBrush}" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,12,0,0" Opacity="0.75"/>
			<Path x:Name="ArrowDownHighlight" Data="M0,0L3,4 6,0z" Stretch="None" UseLayoutRounding="False" Fill="#3FFFFFFF" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,12,0,0" Opacity="0"/>
			<Path x:Name="BackgroundDisabled" Data="M0,0L12,0 12,12 6,20 0,12z" Fill="{StaticResource NoesisDisabledBgBrush}" Stretch="None" StrokeThickness="0" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed"/>
			<Path x:Name="Highlight" Data="M0,0L12,0 12,12 6,20 0,12z" Stretch="Fill" UseLayoutRounding="False" StrokeLineJoin="Round" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="{StaticResource NoesisHighlightBgBrush}" Width="12" Height="20"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Visibility" TargetName="StrokeDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

    <Style x:Key="NoesisHorizontalSliderDownThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Template" Value="{StaticResource NoesisHorizontalSliderDownThumbTemplate}"/>
    </Style>
    
    <!-- HorizontalSlider Template -->
    <ControlTemplate x:Key="NoesisHorizontalSliderTemplate" TargetType="{x:Type Slider}">
        <Grid VerticalAlignment="Center" UseLayoutRounding="True">
    		<Grid.RowDefinitions>
    			<RowDefinition Height="Auto"/>
    			<RowDefinition Height="Auto"/>
    			<RowDefinition Height="Auto"/>
    		</Grid.RowDefinitions>
    		<VisualStateManager.VisualStateGroups>
    			<VisualStateGroup x:Name="FocusStates">
    				<VisualStateGroup.Transitions>
    					<VisualTransition From="Focused" GeneratedDuration="0:0:0.3" To="Unfocused"/>
    					<VisualTransition From="Unfocused" GeneratedDuration="0:0:0.3" To="Focused"/>
    				</VisualStateGroup.Transitions>
    				<VisualState x:Name="Unfocused"/>
    				<VisualState x:Name="Focused">
    					<Storyboard>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndentFocused" RepeatBehavior="Forever" AutoReverse="True">
    							<EasingDoubleKeyFrame KeyTime="0" Value="0.75">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<SineEase EasingMode="EaseInOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    							<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0.25">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<SineEase EasingMode="EaseInOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    						</DoubleAnimationUsingKeyFrames>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndentFocusedGlow" RepeatBehavior="Forever" AutoReverse="True">
    							<EasingDoubleKeyFrame KeyTime="0" Value="0.15">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<SineEase EasingMode="EaseInOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    							<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<SineEase EasingMode="EaseInOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    						</DoubleAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualState>
    			</VisualStateGroup>
    		</VisualStateManager.VisualStateGroups>
    		<TickBar
    			x:Name="TopTick"
    			SnapsToDevicePixels="True"
    			Placement="Top"
    			Fill="{TemplateBinding Foreground}"
    			Height="4"
    			Visibility="Collapsed" />
    		<Border
    			x:Name="Indent"
    			Margin="4,0"
    			CornerRadius="2"
    			Height="8"
    			Grid.Row="1"
    			Background="{TemplateBinding Background}"
    			BorderBrush="{StaticResource NoesisIndentBdBrush}"
    			BorderThickness="1" VerticalAlignment="Center" />
    		<Border
    			x:Name="IndentFocused"
    			Margin="4,0"
    			CornerRadius="2"
    			Height="8"
    			Grid.Row="1"
    			BorderBrush="{TemplateBinding BorderBrush}"
    			BorderThickness="1" Opacity="0" VerticalAlignment="Center" />
    		<Border
    			x:Name="IndentFocusedGlow"
    			Margin="3,0"
    			CornerRadius="3"
    			Height="10"
    			Grid.Row="1"
    			BorderBrush="{TemplateBinding BorderBrush}"
    			BorderThickness="1" VerticalAlignment="Center" Opacity="0" />
    		<Border
    			x:Name="BackgroundShadow"
    			Margin="4,0"
    			CornerRadius="2"
    			Height="8"
    			Grid.Row="1"
    			BorderThickness="1" Background="{StaticResource NoesisIndentBgBrush}" VerticalAlignment="Center" />
    		<Border
    			x:Name="BackgroundDisabled"
    			Margin="4,0"
    			CornerRadius="2"
    			Height="8"
    			Grid.Row="1"
    			Background="{StaticResource NoesisDisabledBdBrush}"
    			BorderThickness="1" Visibility="Collapsed" VerticalAlignment="Center" />
    		<TickBar
    			x:Name="BottomTick"
    			SnapsToDevicePixels="True"
    			Grid.Row="2"
    			Fill="{TemplateBinding Foreground}"
    			Placement="Bottom"
    			Height="4"
    			Visibility="Collapsed" />
    		<Track Grid.Row="1" x:Name="PART_Track">
    			<Track.DecreaseRepeatButton>
    				<RepeatButton Style="{StaticResource NoesisSliderButtonStyle}" Command="Slider.DecreaseLarge" />
    			</Track.DecreaseRepeatButton>
    			<Track.Thumb>
    				<Thumb x:Name="Thumb" Style="{StaticResource NoesisHorizontalSliderThumbStyle}"/>
    			</Track.Thumb>
    			<Track.IncreaseRepeatButton>
    				<RepeatButton Style="{StaticResource NoesisSliderButtonStyle}" Command="Slider.IncreaseLarge" />
    			</Track.IncreaseRepeatButton>
    		</Track>
    	</Grid>
        <ControlTemplate.Triggers>
    		<Trigger Property="TickPlacement" Value="TopLeft">
    			<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
    			<Setter Property="Style" TargetName="Thumb" Value="{StaticResource NoesisHorizontalSliderUpThumbStyle}"/>
    		</Trigger>
    		<Trigger Property="TickPlacement" Value="BottomRight">
    			<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
    			<Setter Property="Style" TargetName="Thumb" Value="{StaticResource NoesisHorizontalSliderDownThumbStyle}"/>
    		</Trigger>
    		<Trigger Property="TickPlacement" Value="Both">
    			<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
    			<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
    			<Setter Property="Style" TargetName="Thumb" Value="{StaticResource NoesisHorizontalSliderBothThumbStyle}"/>
    		</Trigger>
    		<Trigger Property="IsEnabled" Value="False">
    			<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
    		</Trigger>
    	</ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!-- Slider Style -->
    <Style TargetType="{x:Type Slider}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template" Value="{StaticResource NoesisHorizontalSliderTemplate}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Template" Value="{StaticResource NoesisVerticalSliderTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    

    <!-- ============== PROGRESS BAR ============== -->
    
    <!-- ProgressBar Style -->
    <Style TargetType="{x:Type ProgressBar}">
    	<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="UseLayoutRounding" Value="True"/>
		<Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
		<Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                	<ControlTemplate.Resources>
                		<Storyboard x:Key="GlowOn">
                			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(Brush.Transform).(TranslateTransform.X)" Storyboard.TargetName="IndicatorIndeterminate" RepeatBehavior="Forever">
                				<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="50"/>
                			</DoubleAnimationUsingKeyFrames>
                			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(Brush.Transform).(TranslateTransform.X)" Storyboard.TargetName="Glow" RepeatBehavior="Forever">
                				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="-200"/>
                				<EasingDoubleKeyFrame KeyTime="0:0:6" Value="800"/>
                			</DoubleAnimationUsingKeyFrames>
                			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" Storyboard.TargetName="Glow" RepeatBehavior="Forever">
                				<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                				<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                				<EasingDoubleKeyFrame KeyTime="0:0:6" Value="1"/>
                				<EasingDoubleKeyFrame KeyTime="0:0:6.3" Value="0"/>
                			</DoubleAnimationUsingKeyFrames>
                		</Storyboard>
                	</ControlTemplate.Resources>
                    <Border x:Name="Indent" BorderBrush="{StaticResource NoesisIndentBdBrush}" BorderThickness="1" CornerRadius="2" UseLayoutRounding="True">
                		<Grid UseLayoutRounding="True">
                			<Border x:Name="PART_Track" CornerRadius="1.5" Background="{TemplateBinding Background}"/>
                			<Border x:Name="TrackShadow" CornerRadius="1.5" Background="{StaticResource NoesisIndentBgBrush}"/>
                			<Border x:Name="TrackDisabled" CornerRadius="1.5" Background="{StaticResource NoesisDisabledBdBrush}" Visibility="Collapsed"/>
                			<Border x:Name="PART_Indicator" CornerRadius="1.5" Background="{TemplateBinding BorderBrush}" HorizontalAlignment="Left">
                				<Grid>
                					<Border x:Name="IndicatorIndeterminate" CornerRadius="1.5" HorizontalAlignment="Stretch" Visibility="Collapsed">
                						<Border.Background>
                							<LinearGradientBrush EndPoint="50,0" StartPoint="0,0" MappingMode="Absolute" SpreadMethod="Repeat">
                								<LinearGradientBrush.RelativeTransform>
               										<SkewTransform AngleX="-3" CenterY="0.5" CenterX="0.5"/>
                								</LinearGradientBrush.RelativeTransform>
                								<LinearGradientBrush.Transform>
               										<TranslateTransform/>
                								</LinearGradientBrush.Transform>
                								<GradientStop Color="#33000000" Offset="0"/>
                								<GradientStop Color="#0C000000" Offset="0.5"/>
                								<GradientStop Color="#33000000" Offset="1"/>
                							</LinearGradientBrush>
                						</Border.Background>
                					</Border>
                					<Border x:Name="IndicatorNormalH" CornerRadius="1.5" Background="{StaticResource NoesisNormalBdBrush}" HorizontalAlignment="Stretch" Opacity="0.25"/>
                					<Border x:Name="IndicatorNormaV" CornerRadius="1.5" Background="{StaticResource NoesisNormalBdBrushV}" HorizontalAlignment="Stretch" Opacity="0.35"/>
                					<Rectangle x:Name="Glow" RadiusX="1.5" RadiusY="1.5" HorizontalAlignment="Stretch" Width="Auto">
                						<Rectangle.Fill>
                							<LinearGradientBrush EndPoint="200,0" MappingMode="Absolute" StartPoint="0,0">
                								<LinearGradientBrush.Transform>
                									<TranslateTransform X="-200"/>
                								</LinearGradientBrush.Transform>
                								<GradientStop Color="Transparent" Offset="0.0"/>
                								<GradientStop Offset="0.5" Color="#3FFFFFFF"/>
                								<GradientStop Offset="1"/>
                							</LinearGradientBrush>
                						</Rectangle.Fill>
                					</Rectangle>
                					<Grid ClipToBounds="True" Visibility="Collapsed">
                						<Rectangle x:Name="PART_GlowRect" RadiusX="1.5" RadiusY="1.5" Width="200" HorizontalAlignment="Left" Margin="177,0,0,0" d:IsHidden="True">
                							<Rectangle.Fill>
                								<LinearGradientBrush EndPoint="0.5,0.5" StartPoint="0,0.5" SpreadMethod="Reflect">
                									<GradientStop Color="Transparent" Offset="0.0"/>
                									<GradientStop Offset="1" Color="#3FFFFFFF"/>
                								</LinearGradientBrush>
                							</Rectangle.Fill>
                						</Rectangle>
                					</Grid>
                					<Border x:Name="IndicatorDisabled" CornerRadius="1.5" Background="{StaticResource NoesisDisabledBdBrush}" HorizontalAlignment="Stretch" Visibility="Collapsed"/>
                					<Border x:Name="Highlight" CornerRadius="1" HorizontalAlignment="Stretch" BorderBrush="{StaticResource NoesisHighlightBgBrush}" BorderThickness="1" RenderTransformOrigin="0.5,0.5">
                						<Border.RenderTransform>
                							<ScaleTransform ScaleY="-1" ScaleX="1"/>
                						</Border.RenderTransform>
                					</Border>
                				</Grid>
                			</Border>
                		</Grid>
                	</Border>
                    <ControlTemplate.Triggers>
                		<Trigger Property="IsEnabled" Value="False">
                			<Setter Property="Visibility" TargetName="IndicatorDisabled" Value="Visible"/>
                			<Setter Property="Visibility" TargetName="Glow" Value="Collapsed"/>
                			<Setter Property="Visibility" TargetName="TrackDisabled" Value="Visible"/>
                		</Trigger>
                		<Trigger Property="IsIndeterminate" Value="True">
                			<Setter Property="Visibility" TargetName="IndicatorIndeterminate" Value="Visible"/>
                		</Trigger>
                		<EventTrigger RoutedEvent="FrameworkElement.Loaded">
                			<BeginStoryboard x:Name="GlowOn_BeginStoryboard" Storyboard="{StaticResource GlowOn}"/>
                		</EventTrigger>
                	</ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- ============== EXPANDER ============== -->
    
    <!-- ExpanderToggleButton Style -->
    <ControlTemplate x:Key="NoesisExpanderToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Border
    		x:Name="Border"
    		Background="Transparent"
    		CornerRadius="2,0,0,0"
			UseLayoutRounding="True">
    		<VisualStateManager.VisualStateGroups>
    			<VisualStateGroup x:Name="CommonStates">
    				<VisualStateGroup.Transitions>
    					<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
    					<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
    					<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver"/>
    				</VisualStateGroup.Transitions>
    				<VisualState x:Name="Normal"/>
    				<VisualState x:Name="MouseOver">
    					<Storyboard>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowOver">
    							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    						</DoubleAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualState>
    				<VisualState x:Name="Pressed"/>
    				<VisualState x:Name="Disabled"/>
    			</VisualStateGroup>
    			<VisualStateGroup x:Name="FocusStates">
    				<VisualStateGroup.Transitions>
    					<VisualTransition From="Unfocused" GeneratedDuration="0:0:0.3" To="Focused"/>
    					<VisualTransition From="Focused" GeneratedDuration="0:0:0.3" To="Unfocused"/>
    				</VisualStateGroup.Transitions>
    				<VisualState x:Name="Unfocused"/>
    				<VisualState x:Name="Focused">
    					<Storyboard>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeFocused" AutoReverse="True" RepeatBehavior="Forever">
    							<EasingDoubleKeyFrame KeyTime="0" Value="0.75">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<SineEase EasingMode="EaseInOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    							<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0.25">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<SineEase EasingMode="EaseInOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    						</DoubleAnimationUsingKeyFrames>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeFocusedGlow" AutoReverse="True" RepeatBehavior="Forever">
    							<EasingDoubleKeyFrame KeyTime="0" Value="0.15">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<SineEase EasingMode="EaseInOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    							<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0">
    								<EasingDoubleKeyFrame.EasingFunction>
    									<SineEase EasingMode="EaseInOut"/>
    								</EasingDoubleKeyFrame.EasingFunction>
    							</EasingDoubleKeyFrame>
    						</DoubleAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualState>
    			</VisualStateGroup>
    			<VisualStateGroup x:Name="CheckStates">
    				<VisualStateGroup.Transitions>
    					<VisualTransition From="Checked" GeneratedDuration="0:0:0.3" To="Unchecked">
    						<Storyboard>
    							<DoubleAnimation BeginTime="0:0:0.3" Duration="0:0:0.3" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ArrowGroup"/>
    						</Storyboard>
    					</VisualTransition>
    					<VisualTransition From="Unchecked" GeneratedDuration="0:0:0.3" To="Checked">
    						<Storyboard>
    							<DoubleAnimation Duration="0:0:0.3" To="-180" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ArrowGroup"/>
    						</Storyboard>
    					</VisualTransition>
    				</VisualStateGroup.Transitions>
    				<VisualState x:Name="Checked">
    					<Storyboard>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ArrowGroup">
    							<EasingDoubleKeyFrame KeyTime="0" Value="-180"/>
    						</DoubleAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualState>
    				<VisualState x:Name="Unchecked">
    					<Storyboard>
    						<DoubleAnimationUsingKeyFrames BeginTime="0:0:0.3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="ArrowGroup">
    							<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
    						</DoubleAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualState>
    				<VisualState x:Name="Indeterminate"/>
    			</VisualStateGroup>
    		</VisualStateManager.VisualStateGroups>
    		<Grid>
    			<Border x:Name="StrokeFocused" CornerRadius="0.1,0,0,0" Opacity="0" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}"/>
    			<Border x:Name="StrokeFocusedGlow" CornerRadius="1,0,0,0" Opacity="0" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Margin="-1"/>
    			<Grid x:Name="ArrowGroup" RenderTransformOrigin="0.5,0.5">
    				<Grid.RenderTransform>
    					<TransformGroup>
    						<ScaleTransform/>
    						<SkewTransform/>
    						<RotateTransform/>
    						<TranslateTransform/>
    					</TransformGroup>
    				</Grid.RenderTransform>
    				<Path
    					x:Name="ArrowStroke"
    					HorizontalAlignment="Center"
    					VerticalAlignment="Center"
    					Data="M0,0L3,7 6,0z" UseLayoutRounding="False" StrokeThickness="2" Stroke="#4C000000" Height="10" Margin="3,4,0,0" Width="9"/>
    				<Path
    					x:Name="Arrow"
    					HorizontalAlignment="Center"
    					VerticalAlignment="Center"
    					Data="M0,0L3,7 6,0z"
    					Fill="{TemplateBinding BorderBrush}" UseLayoutRounding="False" StrokeThickness="0" Width="7" Height="8" Margin="1,2,0,0"/>
    				<Path
    					x:Name="ArrowOver"
    					HorizontalAlignment="Center"
    					VerticalAlignment="Center"
    					Data="M0,0L3,7 6,0z" UseLayoutRounding="False" StrokeThickness="0" Width="7" Height="8" Margin="1,2,0,0" Fill="#3FFFFFFF" Opacity="0"/>
    				<Path
    					x:Name="ArrowDisabled"
    					HorizontalAlignment="Center"
    					VerticalAlignment="Center"
    					Data="M0,0L3,7 6,0z"
    					Fill="{StaticResource NoesisDisabledBdBrush}" UseLayoutRounding="False" StrokeThickness="0" Width="9" Height="10.5" Margin="0,2.5,0,0" Visibility="Collapsed" Stretch="Fill"/>
    			</Grid>
    			<Rectangle x:Name="Highlight" StrokeThickness="2" Width="1" HorizontalAlignment="Right" Fill="{StaticResource NoesisHighlightBgBrush}" Margin="0,1" Opacity="0.5"/>
    		</Grid>
    	</Border>
    	<ControlTemplate.Triggers>
    		<Trigger Property="IsEnabled" Value="False">
    			<Setter Property="Visibility" TargetName="ArrowDisabled" Value="Visible"/>
    		</Trigger>
    	</ControlTemplate.Triggers>
    </ControlTemplate>
	
	<ControlTemplate x:Key="NoesisExpanderTemplate" TargetType="{x:Type Expander}">
		<Grid UseLayoutRounding="True">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="*"/>
			</Grid.RowDefinitions>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="ExpansionStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Expanded" GeneratedDuration="0:0:0.3" To="Collapsed">
							<Storyboard>
								<DoubleAnimation BeginTime="0:0:0.3" Duration="0:0:0.3" To="-1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="ContentBorder"/>
								<DoubleAnimation BeginTime="0:0:0.3" Duration="0:0:0.3" To="0.01" Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ContentHost"/>
							</Storyboard>
						</VisualTransition>
						<VisualTransition From="Collapsed" GeneratedDuration="0:0:0.3" To="Expanded">
							<Storyboard>
								<DoubleAnimation BeginTime="0:0:0.3" Duration="0:0:0.3" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentHost"/>
							</Storyboard>
						</VisualTransition>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Expanded">
						<Storyboard>
							<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ContentBorder">
								<EasingThicknessKeyFrame KeyTime="0" Value="1,0,1,1"/>
							</ThicknessAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="ContentBorder">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ContentHost">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentHost">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Collapsed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ContentHost">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.01"/>
							</DoubleAnimationUsingKeyFrames>
							<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="ContentBorder">
								<EasingThicknessKeyFrame KeyTime="0" Value="1,0"/>
							</ThicknessAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="ContentBorder">
								<EasingDoubleKeyFrame KeyTime="0" Value="-1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentHost">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.CornerRadius)" Storyboard.TargetName="Stroke">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<CornerRadius>1</CornerRadius>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.CornerRadius)" Storyboard.TargetName="StrokeNormal">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<CornerRadius>1</CornerRadius>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeShadow">
								<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
				<VisualStateGroup x:Name="FocusStates">
					<VisualState x:Name="Focused"/>
					<VisualState x:Name="Unfocused"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="*"/>
				</Grid.RowDefinitions>
				<Border x:Name="Indent" Background="{TemplateBinding Background}" BorderBrush="{StaticResource NoesisIndentBdBrush}" CornerRadius="2" Grid.RowSpan="2" BorderThickness="1"/>
				<Grid x:Name="ContentBorder" Grid.Row="1" Margin="1,0,1,1" RenderTransformOrigin="0.5,0.5">
					<Grid.RenderTransform>
						<TransformGroup>
							<ScaleTransform/>
							<SkewTransform/>
							<RotateTransform/>
							<TranslateTransform/>
						</TransformGroup>
					</Grid.RenderTransform>
					<Grid.LayoutTransform>
						<TransformGroup>
							<ScaleTransform/>
							<SkewTransform/>
							<RotateTransform/>
							<TranslateTransform/>
						</TransformGroup>
					</Grid.LayoutTransform>
					<Border x:Name="ContentStroke" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,1" Grid.Row="0" CornerRadius="0,0,1,1"/>
					<Border x:Name="ContentStrokeNormal" BorderBrush="{StaticResource NoesisNormalBdBrush}" BorderThickness="1,0,1,1" Grid.Row="0" CornerRadius="0,0,1,1"/>
					<Border x:Name="ContentBackgroundNormal" BorderThickness="1,0,1,1" Grid.Row="0" CornerRadius="0,0,1,1" Background="{StaticResource NoesisNormalBgBrush}" Opacity="0.25"/>
					<Border x:Name="ContentBackgroundDisabled" BorderThickness="1,0,1,1" Grid.Row="0" CornerRadius="0,0,1,1" Background="{StaticResource NoesisDisabledBdBrush}" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed"/>
					<Grid x:Name="ContentHost" Margin="1,0,1,1">
						<Grid.LayoutTransform>
							<TransformGroup>
								<ScaleTransform CenterX="0.5"/>
								<SkewTransform CenterX="0.5"/>
								<RotateTransform CenterX="0.5"/>
								<TranslateTransform/>
							</TransformGroup>
						</Grid.LayoutTransform>
						<ContentPresenter
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Margin="{TemplateBinding Padding}"
							UseLayoutRounding="{TemplateBinding UseLayoutRounding}"/>
					</Grid>
				</Grid>
				<Grid x:Name="HeaderBorder" Margin="1,1,1,0">
					<Border x:Name="Stroke" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Grid.Row="0" CornerRadius="1,1,0,0"/>
					<Border x:Name="StrokeNormal" BorderBrush="{StaticResource NoesisNormalBdBrush}" BorderThickness="1" Grid.Row="0" CornerRadius="1,1,0,0"/>
					<Border x:Name="StrokeShadow" BorderBrush="#3F999999" BorderThickness="0,0,0,1" Grid.Row="0" Margin="1,0"/>
					<Border x:Name="StrokeDisabled" BorderBrush="{StaticResource NoesisDisabledBdBrush}" BorderThickness="0,0,0,1" Grid.Row="0" CornerRadius="1,1,0,0" Visibility="Collapsed" Margin="1,0"/>
					<Border x:Name="BackgroundTint" BorderThickness="1" Grid.Row="0" CornerRadius="1,1,0,0" Background="{TemplateBinding BorderBrush}" Opacity="0.25"/>
					<Border x:Name="BackgroundTintShadow" BorderThickness="1" Grid.Row="0" CornerRadius="1,1,0,0" Background="{StaticResource NoesisNormalBdBrush}" Opacity="0.5"/>
					<Border x:Name="BackgroundNormal" BorderThickness="1" Grid.Row="0" CornerRadius="1,1,0,0" Background="{StaticResource NoesisNormalBgBrush}" Opacity="0"/>
					<Border x:Name="BackgroundDisabled" BorderThickness="1" Grid.Row="0" CornerRadius="1,1,0,0" Background="{StaticResource NoesisDisabledBgBrush}" Visibility="Collapsed"/>
					<Grid Margin="1">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<ToggleButton
								x:Name="ExpanderButton"
								Width="20"
								OverridesDefaultStyle="True"
								Template="{StaticResource NoesisExpanderToggleButtonTemplate}"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
						<ContentPresenter
								ContentSource="Header"
								RecognizesAccessKey="True"
								Margin="4,2"
								Grid.Column="1"
								TextElement.FontWeight="Bold"
								HorizontalAlignment="Center"
								UseLayoutRounding="{TemplateBinding UseLayoutRounding}"/>
					</Grid>
					<Border x:Name="Highlight" BorderBrush="{StaticResource NoesisHighlightBgBrush}" BorderThickness="1" Grid.Row="0" CornerRadius="0.05,0.05,0,0" Margin="1" IsHitTestVisible="False" Opacity="0.25"/>
				</Grid>
				<Border x:Name="BorderShadow" BorderBrush="{StaticResource NoesisShadowBdBrush}" CornerRadius="1" Grid.RowSpan="2" BorderThickness="1" Margin="1"/>
				<Border x:Name="BorderDisabled" BorderBrush="{StaticResource NoesisDisabledBdBrush}" CornerRadius="1" Grid.RowSpan="2" BorderThickness="1" Margin="1" Visibility="Collapsed"/>
			</Grid>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
				<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="StrokeDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="ContentBackgroundDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="BorderDisabled" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
    
    <!-- Expander Style -->
    <Style TargetType="{x:Type Expander}">
    	<Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Template" Value="{StaticResource NoesisExpanderTemplate}"/>
    </Style>
    
    
    <!-- ============== GROUP BOX ============== -->
    
	<ControlTemplate x:Key="NoesisGroupBoxTemplate" TargetType="{x:Type GroupBox}">
    	<Grid UseLayoutRounding="True">
        	<Grid.RowDefinitions>
            	<RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
			</Grid.RowDefinitions>
			<Border x:Name="Indent" Background="{TemplateBinding Background}" BorderBrush="{StaticResource NoesisIndentBdBrush}" CornerRadius="2" Grid.RowSpan="2" BorderThickness="1"/>
			<Grid x:Name="HeaderBorder" Margin="1,1,1,0">
				<Border x:Name="Stroke" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Grid.Row="0" CornerRadius="1,1,0,0"/>
                <Border x:Name="StrokeNormal" BorderBrush="{StaticResource NoesisNormalBdBrush}" BorderThickness="1" Grid.Row="0" CornerRadius="1,1,0,0"/>
                <Border x:Name="StrokeDisabled" BorderBrush="{StaticResource NoesisDisabledBdBrush}" BorderThickness="0,0,0,1" Grid.Row="0" CornerRadius="1,1,0,0" Visibility="Collapsed" Margin="1,0"/>
                <Border x:Name="BackgroundTint" BorderThickness="1" Grid.Row="0" CornerRadius="1,1,0,0" Background="{TemplateBinding BorderBrush}" Opacity="0.25"/>
                <Border x:Name="BackgroundTintShadow" BorderThickness="1" Grid.Row="0" CornerRadius="1,1,0,0" Background="{StaticResource NoesisNormalBdBrush}" Opacity="0.5"/>
                <Border x:Name="BackgroundNormal" BorderThickness="1" Grid.Row="0" CornerRadius="1,1,0,0" Background="{StaticResource NoesisNormalBgBrush}"/>
                <Border x:Name="BackgroundDisabled" BorderThickness="1" Grid.Row="0" CornerRadius="1,1,0,0" Background="{StaticResource NoesisDisabledBgBrush}" Visibility="Collapsed"/>
                <Border x:Name="Highlight" BorderBrush="{StaticResource NoesisHighlightBgBrush}" BorderThickness="1" Grid.Row="0" CornerRadius="0.05,0.05,0,0" Margin="1" Opacity="0.25"/>
                <Grid Margin="1">
                	<ContentPresenter ContentSource="Header" RecognizesAccessKey="True" Margin="4,2" TextElement.FontWeight="Bold" HorizontalAlignment="Center"/>
                </Grid>
			</Grid>
            <Grid x:Name="ContentBorder" Grid.Row="1" Margin="1,0,1,1">
            	<Border x:Name="ContentStroke" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,1" Grid.Row="0" CornerRadius="0,0,1,1"/>
                <Border x:Name="ContentStrokeNormal" BorderBrush="{StaticResource NoesisNormalBdBrush}" BorderThickness="1,0,1,1" Grid.Row="0" CornerRadius="0,0,1,1"/>
                <Border x:Name="ContentBackgroundShadow" BorderThickness="1,0,1,1" Grid.Row="0" CornerRadius="0,0,1,1" Background="{StaticResource NoesisNormalBgBrush}" RenderTransformOrigin="0.5,0.5" Opacity="0.2"/>
                <Border x:Name="ContentBackgroundDisabled" BorderThickness="1,0,1,1" Grid.Row="0" CornerRadius="0,0,1,1" Background="{StaticResource NoesisDisabledBdBrush}" Visibility="Collapsed"/>
                <Grid Margin="1,0,1,1">
                	<ContentPresenter
					  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
					  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
					  Margin="{TemplateBinding Padding}"/>
				</Grid>
			</Grid>
            <Border x:Name="BorderShadow" BorderBrush="{StaticResource NoesisShadowBdBrush}" CornerRadius="1" Grid.RowSpan="2" BorderThickness="1" Margin="1"/>
            <Border x:Name="BorderDisabled" BorderBrush="{StaticResource NoesisDisabledBdBrush}" CornerRadius="1" Grid.RowSpan="2" BorderThickness="1" Margin="1" Visibility="Collapsed"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Visibility" TargetName="BackgroundNormal" Value="Collapsed"/>
				<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
				<Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
				<Setter Property="Visibility" TargetName="ContentBackgroundDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="BorderDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="StrokeDisabled" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
    <!-- GroupBox Style -->
    <Style TargetType="{x:Type GroupBox}">
    	<Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template" Value="{StaticResource NoesisGroupBoxTemplate}"/>
    </Style>
    
    
    <!-- ============== LIST BOX ============== -->
    
    <!-- Focus Visual -->

    <!-- ListBox Style -->
	<ControlTemplate x:Key="NoesisListBoxTemplate" TargetType="{x:Type ListBox}">
		<Grid UseLayoutRounding="True">
			<Border x:Name="Indent" BorderThickness="1" CornerRadius="2" BorderBrush="{StaticResource NoesisIndentBdBrush}" Background="{TemplateBinding Background}"/>
			<Border x:Name="BackgroundShadow" BorderThickness="1" CornerRadius="2" Background="{StaticResource NoesisNormalBgBrush}" Opacity="0.2"/>
			<Border x:Name="BackgroundDisabled" BorderThickness="1" CornerRadius="2" Background="{StaticResource NoesisDisabledBdBrush}" Visibility="Collapsed"/>
			<Border x:Name="Border" BorderThickness="1" CornerRadius="1" Margin="1" BorderBrush="{TemplateBinding BorderBrush}"/>
			<Border x:Name="BorderNormal" BorderThickness="1" CornerRadius="1" Margin="1" BorderBrush="{StaticResource NoesisNormalBdBrush}"/>
			<Border x:Name="BorderShadow" BorderThickness="1" CornerRadius="1" Margin="1" BorderBrush="{StaticResource NoesisShadowBdBrush}"/>
			<Border x:Name="BorderDisabled" BorderThickness="1" CornerRadius="1" Margin="1" BorderBrush="{StaticResource NoesisDisabledBdBrush}" Visibility="Collapsed"/>
			<ScrollViewer Margin="2" Focusable="false" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="true">
				<ItemsPresenter Margin="{TemplateBinding Padding}"/>
			</ScrollViewer>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="BorderDisabled" Value="Visible"/>
			</Trigger>
			<Trigger Property="IsGrouping" Value="true">
				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
    <Style TargetType="{x:Type ListBox}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template" Value="{StaticResource NoesisListBoxTemplate}"/>
    </Style>
    
    <!-- ListBoxItem Style -->
	<ControlTemplate x:Key="NoesisListBoxItemTemplate" TargetType="{x:Type ListBoxItem}">
		<Grid UseLayoutRounding="True">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
						<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Over">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
				<VisualStateGroup x:Name="SelectionStates">
					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0:0:0.1"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Unselected"/>
					<VisualState x:Name="Selected">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Select">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="SelectedUnfocused">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Select">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.75"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="FocusStates">
					<VisualState x:Name="Unfocused"/>
					<VisualState x:Name="Focused"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Grid x:Name="Over" Opacity="0">
				<Border x:Name="OverStroke" CornerRadius="1" Opacity="0.25" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"/>
				<Border x:Name="OverBackground" Background="{TemplateBinding BorderBrush}" CornerRadius="1" Opacity="0.1" BorderThickness="1"/>
			</Grid>
			<Grid x:Name="Select" Opacity="0">
				<Border x:Name="SelectStroke" CornerRadius="1" Opacity="0.75" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"/>
				<Border x:Name="SelectBackground" Background="{TemplateBinding BorderBrush}" CornerRadius="1" Opacity="0.5" BorderThickness="1"/>
				<Border x:Name="SelectShadow" Background="{StaticResource NoesisNormalBgBrush}" CornerRadius="1" Opacity="0.25" BorderThickness="1"/>
				<Border x:Name="SelectDisabled" Background="{StaticResource NoesisDisabledBdBrush}" CornerRadius="1" Visibility="Collapsed"/>
			</Grid>
			<Border Margin="1">
				<ContentPresenter x:Name="ContentSite" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
			</Border>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
				<Setter Property="Visibility" TargetName="SelectDisabled" Value="Visible"/>
				<Setter Property="Opacity" TargetName="ContentSite" Value="0.5"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Padding" Value="2,1"/>
        <Setter Property="Template" Value="{StaticResource NoesisListBoxItemTemplate}"/>
    </Style>
    
    
    <!-- ============== MENU ============== -->
    
    <!-- Separator Style -->
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    	<Setter Property="MinWidth" Value="1"/>
    	<Setter Property="MinHeight" Value="1"/>
    	<Setter Property="Margin" Value="28,4,2,4"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Separator}">
    				<Border UseLayoutRounding="True" Background="{StaticResource NoesisFgBrush}" Opacity="0.25"/>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
	
    <!-- Menu Style -->
	<ControlTemplate x:Key="NoesisMenuTemplate" TargetType="{x:Type Menu}">
		<Grid UseLayoutRounding="True">
			<Border x:Name="Base" Background="{TemplateBinding Background}"/>
			<Border x:Name="Highlight" BorderBrush="{DynamicResource NoesisHighlightBgBrush}" BorderThickness="1" Opacity="0.5"/>
			<Border x:Name="BaseDisabled" Background="{StaticResource NoesisDisabledBdBrush}" Visibility="Collapsed"/>
			<StackPanel IsItemsHost="True" Orientation="Horizontal" UseLayoutRounding="{TemplateBinding UseLayoutRounding}"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Visibility" TargetName="BaseDisabled" Value="Visible"/>
				<Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
				
    <Style TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Template" Value="{StaticResource NoesisMenuTemplate}"/>
    </Style>
    
    <!-- TopLevelHeader Template -->
    <ControlTemplate x:Key="NoesisTopLevelHeaderTemplate" TargetType="{x:Type MenuItem}">
    	<ControlTemplate.Resources>
    		<Storyboard x:Key="HighlightOn">
    			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
    				<EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="1"/>
    			</DoubleAnimationUsingKeyFrames>
    			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
    				<EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="1"/>
    			</DoubleAnimationUsingKeyFrames>
    		</Storyboard>
    		<Storyboard x:Key="HighlightOff">
    			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
    				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
    			</DoubleAnimationUsingKeyFrames>
    			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
    				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
    			</DoubleAnimationUsingKeyFrames>
    		</Storyboard>
    	</ControlTemplate.Resources>
        <Grid UseLayoutRounding="True">
        	<Border x:Name="BackgroundNormal" Background="Transparent"/>
        	<Border x:Name="BackgroundOver" Background="{StaticResource NoesisNormalBgBrush}" Opacity="0"/>
			<Border x:Name="Highlight" BorderBrush="{StaticResource NoesisHighlightBgBrush}" BorderThickness="1" Opacity="0"/>
			<Grid Margin="1">
				<ContentPresenter
					ContentSource="Header"
					Margin="{TemplateBinding Padding}"
					UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
					RecognizesAccessKey="True"
					VerticalAlignment="Center"/>
			</Grid>
        	<Popup
        		x:Name="Popup"
        		AllowsTransparency="True"
        		Focusable="False"
        		IsOpen="{TemplateBinding IsSubmenuOpen}"
        		Placement="Bottom"
        		PopupAnimation="Fade"
				HorizontalOffset="-1">
        		<Grid UseLayoutRounding="True">
        			<Border x:Name="DropDownShadow1" CornerRadius="3,3,4,4" BorderBrush="{StaticResource NoesisPopupShadow1Brush}" BorderThickness="1"/>
					<Border x:Name="DropDownShadow2" CornerRadius="3" Margin="1" BorderBrush="{StaticResource NoesisPopupShadow2Brush}" BorderThickness="0,0,0,1"/>
					<Border x:Name="DropDownBorderBackground" Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2" Opacity="0.95"/>
					<Border x:Name="DropDownBorderStroke" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2"/>
        			<Border x:Name="DropDownBorderNormal" BorderBrush="{StaticResource NoesisNormalBdBrush}" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2"/>
        			<Border x:Name="DropDownBorderShadow" BorderBrush="#59000000" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2"/>
        			<Border x:Name="DropDownBackground" BorderThickness="1" CornerRadius="2,0,0,2" Margin="1,1,1,2" Width="28" HorizontalAlignment="Left" Background="#0CFFFFFF"/>
        			<Border x:Name="DropDownBorderHighlight" BorderBrush="#0CFFFFFF" BorderThickness="1" CornerRadius="1" Margin="2,2,2,3"/>
        			<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="2,6,2,7"/>
        		</Grid>
        	</Popup>
    	</Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
            	<Trigger.ExitActions>
            		<BeginStoryboard Storyboard="{StaticResource HighlightOff}"/>
            	</Trigger.ExitActions>
            	<Trigger.EnterActions>
            		<BeginStoryboard Storyboard="{StaticResource HighlightOn}"/>
            	</Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!-- TopLevelItem Template -->
    <ControlTemplate x:Key="NoesisTopLevelItemTemplate" TargetType="{x:Type MenuItem}">
    	<ControlTemplate.Resources>
    		<Storyboard x:Key="HighlightOn">
    			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
    				<EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="1"/>
    			</DoubleAnimationUsingKeyFrames>
    			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
    				<EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="1"/>
    			</DoubleAnimationUsingKeyFrames>
    		</Storyboard>
    		<Storyboard x:Key="HighlightOff">
    			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
    				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
    			</DoubleAnimationUsingKeyFrames>
    			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
    				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
    			</DoubleAnimationUsingKeyFrames>
    		</Storyboard>
    	</ControlTemplate.Resources>
        <Grid UseLayoutRounding="True">
    		<Border x:Name="BackgroundNormal" Background="Transparent"/>
        	<Border x:Name="BackgroundOver" Background="{StaticResource NoesisNormalBgBrush}" Opacity="0"/>
        	<Border x:Name="Highlight" BorderBrush="{StaticResource NoesisHighlightBgBrush}" BorderThickness="1" Opacity="0"/>
        	<ContentPresenter
					ContentSource="Header"
					Margin="{TemplateBinding Padding}"
					UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
					RecognizesAccessKey="True"
					VerticalAlignment="Center"/>
    	</Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="True">
            	<Trigger.ExitActions>
            		<BeginStoryboard Storyboard="{StaticResource HighlightOff}"/>
            	</Trigger.ExitActions>
            	<Trigger.EnterActions>
            		<BeginStoryboard Storyboard="{StaticResource HighlightOn}"/>
            	</Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!-- SubmenuItem Template -->
    <ControlTemplate x:Key="NoesisSubmenuItemTemplate" TargetType="{x:Type MenuItem}">
    	<ControlTemplate.Resources>
    		<Storyboard x:Key="HighlightOn">
    			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Over">
    				<EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="1"/>
    			</DoubleAnimationUsingKeyFrames>
    		</Storyboard>
    		<Storyboard x:Key="HighlightOff">
    			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Over">
    				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
    			</DoubleAnimationUsingKeyFrames>
    		</Storyboard>
    	</ControlTemplate.Resources>
        <Grid UseLayoutRounding="True">
   			<Grid x:Name="Over" Opacity="0">
        		<Border x:Name="OverStroke" CornerRadius="1" Opacity="0.5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"/>
        		<Border x:Name="OverBackground" Background="{TemplateBinding BorderBrush}" CornerRadius="1" Opacity="0.25" BorderThickness="1"/>
        	</Grid>
        	<Grid Margin="0,2">
        		<Grid.ColumnDefinitions>
        			<ColumnDefinition Width="26"/>
        			<ColumnDefinition Width="*"/>
        			<ColumnDefinition Width="*"/>
        			<ColumnDefinition Width="20"/>
        		</Grid.ColumnDefinitions>
        		<ContentPresenter
        			x:Name="Icon"
        			VerticalAlignment="Center"
        			ContentSource="Icon" HorizontalAlignment="Center" Visibility="Visible"/>
        		<Grid x:Name="Check" Width="14" Height="14" Visibility="Collapsed">
        			<Path x:Name="ToggleCheckStroke" Data="M310,430.66667 L612,184.66632 538,125.99924 328,339.99953 304.66667,269.99944 217.99956,285.33279 z" Height="11" Stretch="Fill" Width="13" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center" StrokeThickness="2" Margin="1,0,0,0" Stroke="{StaticResource NoesisGlyphShadowBdBrush}" StrokeLineJoin="Round" Visibility="Collapsed">
        				<Path.RenderTransform>
        					<RotateTransform Angle="-10"/>
        				</Path.RenderTransform>
        			</Path>
        			<Path x:Name="ToggleCheck" Data="M310,430.66667 L612,184.66632 538,125.99924 328,339.99953 304.66667,269.99944 217.99956,285.33279 z" Fill="{TemplateBinding BorderBrush}" Height="9" Stretch="Fill" Width="11" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center" Margin="1,0,0,0" Visibility="Collapsed" StrokeThickness="0">
        				<Path.RenderTransform>
        					<RotateTransform Angle="-10"/>
        				</Path.RenderTransform>
        			</Path>
        			<Path x:Name="ToggleCheckHighlight" Data="M310,430.66667 L612,184.66632 538,125.99924 328,339.99953 304.66667,269.99944 217.99956,285.33279 z" Height="9" Stretch="Fill" Width="11" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center" Margin="1,0,0,0" Visibility="Collapsed" Fill="#33FFFFFF" Opacity="0" StrokeThickness="0">
        				<Path.RenderTransform>
        					<RotateTransform Angle="-10"/>
        				</Path.RenderTransform>
        			</Path>
        		</Grid>
        		<Border Grid.Column="1" Margin="6,0,0,0">
        			<ContentPresenter x:Name="HeaderHost" ContentSource="Header" RecognizesAccessKey="True" VerticalAlignment="Center"
        				UseLayoutRounding="{TemplateBinding UseLayoutRounding}"/>
        		</Border>
        		<Border Grid.Column="2" Margin="12,0,0,0">
        			<TextBlock x:Name="InputGestureText" Text="{TemplateBinding InputGestureText}"/>
        		</Border>
        	</Grid>
    	</Grid>
        <ControlTemplate.Triggers>
    		<Trigger Property="Icon" Value="{x:Null}">
    			<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
    		</Trigger>
    		<Trigger Property="IsChecked" Value="true">
    			<Setter Property="Visibility" TargetName="ToggleCheckStroke" Value="Visible"/>
    			<Setter Property="Visibility" TargetName="ToggleCheck" Value="Visible"/>
    			<Setter Property="Visibility" TargetName="ToggleCheckHighlight" Value="Visible"/>
    		</Trigger>
    		<Trigger Property="IsCheckable" Value="true">
    			<Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
    			<Setter Property="Visibility" TargetName="Check" Value="Visible"/>
    		</Trigger>
    		<Trigger Property="IsHighlighted" Value="true">
    			<Trigger.ExitActions>
    				<BeginStoryboard Storyboard="{StaticResource HighlightOff}"/>
    			</Trigger.ExitActions>
    			<Trigger.EnterActions>
    				<BeginStoryboard Storyboard="{StaticResource HighlightOn}"/>
    			</Trigger.EnterActions>
    		</Trigger>
    		<Trigger Property="IsEnabled" Value="false">
    			<Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
    			<Setter Property="Opacity" TargetName="HeaderHost" Value="0.5"/>
    		</Trigger>
    	</ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!--SubmenuHeader Template -->
    <ControlTemplate x:Key="NoesisSubmenuHeaderTemplate" TargetType="{x:Type MenuItem}">
    	<ControlTemplate.Resources>
    		<Storyboard x:Key="HighlightOn">
    			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Over">
    				<EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="1"/>
    			</DoubleAnimationUsingKeyFrames>
    			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowGlow">
    				<EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="1"/>
    			</DoubleAnimationUsingKeyFrames>
    		</Storyboard>
    		<Storyboard x:Key="HighlightOff">
    			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Over">
    				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
    			</DoubleAnimationUsingKeyFrames>
    			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowGlow">
    				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
    			</DoubleAnimationUsingKeyFrames>
    		</Storyboard>
    	</ControlTemplate.Resources>
        <Grid UseLayoutRounding="True">
       		<Grid x:Name="Over" Opacity="0">
        		<Border x:Name="OverStroke" CornerRadius="1" Opacity="0.5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"/>
        		<Border x:Name="OverBackground" Background="{TemplateBinding BorderBrush}" CornerRadius="1" Opacity="0.25" BorderThickness="1"/>
        	</Grid>
        	<Grid Margin="0,2">
        		<Grid.ColumnDefinitions>
        			<ColumnDefinition Width="26"/>
        			<ColumnDefinition Width="*"/>
        			<ColumnDefinition Width="*"/>
        			<ColumnDefinition Width="20"/>
        		</Grid.ColumnDefinitions>
        		<Border Grid.Column="1" Margin="6,0,0,0">
        			<ContentPresenter x:Name="HeaderHost" ContentSource="Header" RecognizesAccessKey="True" VerticalAlignment="Center"
        				UseLayoutRounding="{TemplateBinding UseLayoutRounding}"/>
        		</Border>
        		<Popup
        			x:Name="Popup"
        			AllowsTransparency="True"
        			Focusable="False"
					HorizontalOffset="-2"
        			VerticalOffset="-3"
        			IsOpen="{TemplateBinding IsSubmenuOpen}"
        			Placement="Right"
        			PopupAnimation="Fade">
        			<Grid UseLayoutRounding="True">
        				<Border x:Name="DropDownShadow1" CornerRadius="3,3,4,4" BorderBrush="{StaticResource NoesisPopupShadow1Brush}" BorderThickness="1"/>
        				<Border x:Name="DropDownShadow2" CornerRadius="3" Margin="1" BorderBrush="{StaticResource NoesisPopupShadow2Brush}" BorderThickness="0,0,0,1"/>
        				<Border x:Name="DropDownBorderBackground" Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2" Opacity="0.95"/>
        				<Border x:Name="DropDownBorderStroke" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2"/>
        				<Border x:Name="DropDownBorderNormal" BorderBrush="{StaticResource NoesisNormalBdBrush}" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2"/>
        				<Border x:Name="DropDownBorderShadow" BorderBrush="#59000000" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2"/>
        				<Border x:Name="DropDownBackground" BorderThickness="1" CornerRadius="2,0,0,2" Margin="1,1,1,2" Width="28" HorizontalAlignment="Left" Background="#0CFFFFFF"/>
        				<Border x:Name="DropDownBorderHighlight" BorderBrush="#0CFFFFFF" BorderThickness="1" CornerRadius="1" Margin="2,2,2,3"/>
        				<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="2,6,2,7"/>
        			</Grid>
        		</Popup>
        		<Grid x:Name="Arrow" Grid.Column="3">
        			<Path x:Name="ArrowStroke"
        				HorizontalAlignment="Center"
        				VerticalAlignment="Center"
        				Data="M0,0L7,3 0,6z" UseLayoutRounding="False" Width="10" Height="8" Margin="5,2,0,0" StrokeThickness="2" Stroke="{StaticResource NoesisGlyphShadowBdBrush}"/>
        			<Path x:Name="ArrowFill"
        				HorizontalAlignment="Center"
        				VerticalAlignment="Center"
        				Data="M0,0L7,3 0,6z"
        				Fill="{TemplateBinding BorderBrush}" UseLayoutRounding="False" Width="7" Height="6" Margin="2,0,0,0" StrokeThickness="0"/>
        			<Path x:Name="ArrowGlow"
        				HorizontalAlignment="Center"
        				VerticalAlignment="Center"
        				Data="M0,0L7,3 0,6z" UseLayoutRounding="False" Width="7" Height="6" Margin="2,0,0,0" Fill="#33FFFFFF" Opacity="0" StrokeThickness="0"/>
        			<Path x:Name="ArrowDisabled"
        				HorizontalAlignment="Center"
        				VerticalAlignment="Center"
        				Data="M0,0L7,3 0,6z" UseLayoutRounding="False" Width="10.5" Height="9" Margin="3.5,0,0,0" Fill="{StaticResource NoesisDisabledBdBrush}" StrokeThickness="0" Visibility="Collapsed" Stretch="Fill"/>
        		</Grid>
        	</Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
    			<Trigger.ExitActions>
    				<BeginStoryboard Storyboard="{StaticResource HighlightOff}"/>
    			</Trigger.ExitActions>
    			<Trigger.EnterActions>
    				<BeginStoryboard Storyboard="{StaticResource HighlightOn}"/>
    			</Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
                <Setter Property="Visibility" TargetName="ArrowDisabled" Value="Visible"/>
                <Setter Property="Opacity" TargetName="HeaderHost" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!-- MenuItem Style -->
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="UseLayoutRounding" Value="True"/>
		<Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
		<Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
		<Setter Property="Padding" Value="6,2"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource NoesisTopLevelHeaderTemplate}"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource NoesisTopLevelItemTemplate}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource NoesisSubmenuHeaderTemplate}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource NoesisSubmenuItemTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    

    <!-- ============== CONTEXT MENU ============== -->    
        
    <!-- ContextMenu Style -->
	<ControlTemplate x:Key="NoesisContextMenuTemplate" TargetType="{x:Type ContextMenu}">
		<Grid UseLayoutRounding="True">
			<Border x:Name="DropDownShadow1" CornerRadius="3,3,4,4" BorderBrush="{StaticResource NoesisPopupShadow1Brush}" BorderThickness="1"/>
			<Border x:Name="DropDownShadow2" CornerRadius="3" Margin="1" BorderBrush="{StaticResource NoesisPopupShadow2Brush}" BorderThickness="0,0,0,1"/>
			<Border x:Name="DropDownBorderBackground" Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2" Opacity="0.95"/>
			<Border x:Name="DropDownBorderStroke" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2"/>
			<Border x:Name="DropDownBorderNormal" BorderBrush="{StaticResource NoesisNormalBdBrush}" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2"/>
			<Border x:Name="DropDownBorderShadow" BorderBrush="#59000000" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2"/>
			<Border x:Name="DropDownBackground" BorderThickness="1" CornerRadius="2,0,0,2" Margin="1,1,1,2" Width="28" HorizontalAlignment="Left" Background="#0CFFFFFF"/>
			<Border x:Name="DropDownBorderHighlight" BorderBrush="#0CFFFFFF" BorderThickness="1" CornerRadius="1" Margin="2,2,2,3"/>
			<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="2,6,2,7"/>
		</Grid>
	</ControlTemplate>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
		<Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
		<Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Template" Value="{StaticResource NoesisContextMenuTemplate}"/>
    </Style>

    
    <!-- ============== TOOL TIP ============== -->
    
    <!-- ToolTip Style -->
	<ControlTemplate x:Key="NoesisToolTipTemplate" TargetType="{x:Type ToolTip}">
		<Grid UseLayoutRounding="True">
			<Border x:Name="DropDownShadow1" CornerRadius="3,3,4,4" BorderBrush="{StaticResource NoesisPopupShadow1Brush}" BorderThickness="1"/>
			<Border x:Name="DropDownShadow2" CornerRadius="3" Margin="1" BorderBrush="{StaticResource NoesisPopupShadow2Brush}" BorderThickness="0,0,0,1"/>
		    <Border x:Name="DropDownBorderBackground" Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2" Opacity="0.5"/>
			<Border x:Name="DropDownBorderBackgroundTint" Background="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2" Opacity="0.5"/>
			<Border x:Name="DropDownBorderStroke" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2"/>
		    <Border x:Name="DropDownBorderNormal" BorderBrush="{StaticResource NoesisNormalBdBrush}" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2"/>
		    <Border x:Name="DropDownBorderShadow" BorderBrush="#59000000" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2"/>
		    <Border x:Name="DropDownBorderHighlight" BorderBrush="#0CFFFFFF" BorderThickness="1" CornerRadius="1" Margin="2,2,2,3"/>
		    <ContentPresenter
					Margin="{TemplateBinding Padding}"
					HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
					VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
					UseLayoutRounding="{TemplateBinding UseLayoutRounding}"/>
		</Grid>
	</ControlTemplate>
	
    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Padding" Value="8,2,8,4"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource NoesisToolTipTemplate}"/>
    </Style>
    
    
    <!-- ============== TAB CONTROL ============== -->
    
    <!-- TabControl Style -->
    <Style TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border
                    		x:Name="Indent"
                    		Grid.Row="1"
                    		BorderThickness="1"
                    		CornerRadius="0,2,2,2"
                    		KeyboardNavigation.DirectionalNavigation="Contained"
                    		KeyboardNavigation.TabIndex="2"
                    		KeyboardNavigation.TabNavigation="Local" BorderBrush="{StaticResource NoesisIndentBdBrush}"/>
                    	<Border
                    		x:Name="Stroke"
                    		Grid.Row="1"
                    		Background="{TemplateBinding Background}"
                    		BorderBrush="{TemplateBinding BorderBrush}"
                    		BorderThickness="1,1,1,1"
                    		CornerRadius="0,1,1,1"
                    		KeyboardNavigation.DirectionalNavigation="Contained"
                    		KeyboardNavigation.TabIndex="2"
                    		KeyboardNavigation.TabNavigation="Local" Margin="1"/>
                    	<Border
                    		x:Name="StrokeNormal"
                    		Grid.Row="1"
                    		BorderThickness="1,1,1,1"
                    		CornerRadius="0,1,1,1"
                    		KeyboardNavigation.DirectionalNavigation="Contained"
                    		KeyboardNavigation.TabIndex="2"
                    		KeyboardNavigation.TabNavigation="Local" BorderBrush="#BF000000" Margin="1"/>
                    	<Border
                    		x:Name="StrokeDisabled"
                    		Grid.Row="1"
                    		BorderThickness="1,1,1,1"
                    		CornerRadius="0,1,1,1"
                    		KeyboardNavigation.DirectionalNavigation="Contained"
                    		KeyboardNavigation.TabIndex="2"
                    		KeyboardNavigation.TabNavigation="Local" BorderBrush="{StaticResource NoesisDisabledBdBrush}" Margin="1" Visibility="Collapsed"/>
                    	<Border x:Name="ContentBackgroundNormal" Grid.Row="1" Background="{StaticResource NoesisNormalBgBrush}" Margin="2" CornerRadius="0,0.5,0.5,0.5" Opacity="0.25"/>
                    	<Border x:Name="ContentBackgroundDisabled" Grid.Row="1" Background="{StaticResource NoesisDisabledBdBrush}" RenderTransformOrigin="0.5,0.5" Margin="2" CornerRadius="0,0.5,0.5,0.5" Visibility="Collapsed"/>
                    	<Grid Margin="2" Grid.Row="1">
                    		<ContentPresenter x:Name="PART_SelectedContentHost" Margin="{TemplateBinding Padding}" ContentSource="SelectedContent" Grid.Row="0" d:LayoutOverrides="GridBox"/>
                    	</Grid>
                    	<TabPanel
                    		x:Name="HeaderPanel"
                    		Grid.Row="0"
                    		Margin="4,0,8,-2"
                    		Background="Transparent"
                    		IsItemsHost="True"
                    		KeyboardNavigation.TabIndex="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
                            <Setter Property="Visibility" TargetName="ContentBackgroundDisabled" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="StrokeDisabled" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Padding" Value="4"/>
    </Style>
	
	<ControlTemplate x:Key="NoesisTabItemTemplate" TargetType="{x:Type TabItem}">
		<Grid x:Name="TabGroup" Margin="0,2,-3,1">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
						<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Normal">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.75"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
				<VisualStateGroup x:Name="SelectionStates">
					<VisualState x:Name="Unselected"/>
					<VisualState x:Name="Selected"/>
				</VisualStateGroup>
				<VisualStateGroup x:Name="FocusStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Unfocused" GeneratedDuration="0:0:0.3" To="Focused"/>
						<VisualTransition From="Focused" GeneratedDuration="0:0:0.3" To="Unfocused"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Unfocused"/>
					<VisualState x:Name="Focused">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeSelectedTopNormal" RepeatBehavior="Forever" AutoReverse="True">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.25">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0.75">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Border x:Name="Indent" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource NoesisTabIndentBrush}" Margin="0,0,0,2" Visibility="Collapsed"/>
			<Grid x:Name="NormalState" Margin="1,1,1,0">
				<Border x:Name="Stroke" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" CornerRadius="1,1,0,0" Margin="0"/>
				<Border x:Name="StrokeNormal" BorderBrush="{StaticResource NoesisNormalBdBrush}" BorderThickness="1,1,1,0" CornerRadius="1,1,0,0" Margin="0"/>
				<Border x:Name="StrokeDisabled" BorderBrush="{StaticResource NoesisDisabledBdBrush}" BorderThickness="1,1,1,0" CornerRadius="1,1,0,0" Margin="0" Visibility="Collapsed"/>
				<Border x:Name="Background" Background="{TemplateBinding Background}" BorderThickness="1,1,1,0" CornerRadius="1,1,0,0" Margin="0"/>
				<Border x:Name="BackgroundNormal" Background="{StaticResource NoesisNormalBgBrush}" BorderThickness="1,1,1,0" CornerRadius="1,1,0,0" Margin="0" Opacity="0"/>
				<Border x:Name="BackgroundOver" CornerRadius="0.5,0.5,0,0" Background="{StaticResource NoesisOverBgBrush}" Margin="1" Opacity="0"/>
				<Border x:Name="BackgroundDisabled" CornerRadius="0.5,0.5,0,0" Background="{DynamicResource NoesisDisabledBgBrush}" Visibility="Collapsed" BorderThickness="1,1,1,0"/>
				<Border x:Name="Highlight" CornerRadius="0.1,0.1,0,0" Margin="1,1,1,0" BorderBrush="{StaticResource NoesisHighlightBgBrush}" BorderThickness="1,1,1,0"/>
			</Grid>
			<Grid x:Name="SelectedState" Margin="2,2,2,0" Visibility="Collapsed">
				<Border x:Name="StrokeSelected" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" CornerRadius="1,1,0,0" Margin="-1,-1,-1,0"/>
				<Border x:Name="StrokeSelectedNormal" BorderBrush="{StaticResource NoesisNormalBdBrush}" BorderThickness="1,1,1,0" CornerRadius="1,1,0,0" Margin="-1,-1,-1,0"/>
				<Border x:Name="StrokeSelectedDisabled" BorderBrush="{StaticResource NoesisDisabledBdBrush}" BorderThickness="1,1,1,0" CornerRadius="1,1,0,0" Margin="-1,-1,-1,0" Visibility="Collapsed"/>
				<Border x:Name="BackgroundSelected" CornerRadius="0.5,0.5,0,0" Background="#0CFFFFFF"/>
				<Border x:Name="BackgroundSelectedDisabled" CornerRadius="0.5,0.5,0,0" Background="{StaticResource NoesisDisabledBdBrush}" Visibility="Collapsed"/>
				<Border x:Name="StrokeSelectedTop" CornerRadius="0.1,0.1,0,0" Background="{TemplateBinding BorderBrush}" Height="2" VerticalAlignment="Top"/>
				<Border x:Name="StrokeSelectedTopNormal" CornerRadius="0.1,0.1,0,0" Background="{StaticResource NoesisNormalBdBrush}" Height="2" VerticalAlignment="Top"/>
				<Border x:Name="StrokeSelectedTopDisabled" CornerRadius="0.1,0.1,0,0" Background="{StaticResource NoesisDisabledBdBrush}" Height="2" VerticalAlignment="Top" Margin="0" Visibility="Collapsed"/>
			</Grid>
			<Grid x:Name="HeaderGroup" Margin="2,3,2,0">
				<ContentPresenter
					x:Name="HeaderPresenter"
					ContentSource="Header"
					HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
					VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
					Margin="{TemplateBinding Padding}"
					TextElement.FontWeight="Bold"
					RecognizesAccessKey="True"/>
			</Grid>
			<Rectangle x:Name="BottomShadow" Height="1" VerticalAlignment="Bottom" Fill="{StaticResource NoesisTabIndentBrush}" Margin="1,0"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Panel.ZIndex" Value="100"/>
				<Setter Property="Margin" TargetName="TabGroup" Value="-4,0"/>
				<Setter Property="Visibility" TargetName="SelectedState" Value="Visible"/>
				<Setter Property="Margin" TargetName="HeaderGroup" Value="6,4,4,0"/>
				<Setter Property="Visibility" TargetName="BottomShadow" Value="Collapsed"/>
				<Setter Property="Visibility" TargetName="BackgroundOver" Value="Collapsed"/>
				<Setter Property="Visibility" TargetName="BackgroundNormal" Value="Collapsed"/>
				<Setter Property="Visibility" TargetName="NormalState" Value="Collapsed"/>
				<Setter Property="Visibility" TargetName="Indent" Value="Visible"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
				<Setter Property="Visibility" TargetName="StrokeDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="StrokeSelectedTopDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="StrokeSelectedDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="BackgroundSelectedDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

    <!-- TabItem Style -->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Padding" Value="10,2"/>
        <Setter Property="Template" Value="{StaticResource NoesisTabItemTemplate}"/>
    </Style>
    
    
    <!-- ============== TEXT BOX ============== -->
    
    <!-- TextBoxScrollViewer Template -->
    <ControlTemplate x:Key="NoesisTextBoxScrollViewerTemplate" TargetType="{x:Type ScrollViewer}">
        <ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
    </ControlTemplate>
	<Style x:Key="NoesisTextBoxScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Template" Value="{StaticResource NoesisTextBoxScrollViewerTemplate}"/>
	</Style>
    
    <!-- TextBox Style -->
	<ControlTemplate x:Key="NoesisTextBoxWrappingTemplate" TargetType="{x:Type TextBox}">
		<Grid UseLayoutRounding="True">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
						<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="Disabled"/>
					<VisualState x:Name="ReadOnly"/>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="FocusStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Focused" GeneratedDuration="0:0:0.3" To="Unfocused"/>
						<VisualTransition From="Unfocused" GeneratedDuration="0:0:0.3" To="Focused"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Unfocused"/>
					<VisualState x:Name="Focused">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeFocused" AutoReverse="True" RepeatBehavior="Forever">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.75">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeFocusedGlow" AutoReverse="True" RepeatBehavior="Forever">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.15">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Border x:Name="Indent" CornerRadius="3" BorderThickness="1" BorderBrush="{StaticResource NoesisIndentBdBrush}" Background="{TemplateBinding Background}">
				<Grid>
					<Border
						x:Name="Border"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="1"
						CornerRadius="2"
						Padding="2" Background="{StaticResource NoesisIndentBgBrush}"/>
					<Border
						x:Name="BorderDisabled"
						BorderThickness="1"
						CornerRadius="2"
						Padding="2" Background="{StaticResource NoesisDisabledBdBrush}" Visibility="Collapsed"/>
					<Border
						x:Name="StrokeNormal"
						BorderBrush="{StaticResource NoesisNormalBdBrush}"
						BorderThickness="1"
						CornerRadius="2"
						Padding="2"/>
					<Border
						x:Name="StrokeShadow"
						BorderBrush="{StaticResource NoesisShadowBdBrush}"
						BorderThickness="1"
						CornerRadius="2"
						Padding="2"/>
                    <Border
                        x:Name="ReadOnlyBg"
                        Background="#10FFFFFF"
                        CornerRadius="2" Visibility="Collapsed"/>
					<Border
						x:Name="StrokeDisabled"
						BorderBrush="{StaticResource NoesisDisabledBdBrush}"
						BorderThickness="1"
						CornerRadius="2"
						Padding="2" Visibility="Collapsed"/>
					<ScrollViewer
						x:Name="PART_ContentHost"
						Margin="2,2,2,2" Padding="{TemplateBinding Padding}"/>
				</Grid>
			</Border>
			<Border
				x:Name="StrokeFocused"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="1"
				CornerRadius="3" Opacity="0" IsHitTestVisible="False"/>
			<Border
				x:Name="StrokeFocusedGlow"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="1"
				CornerRadius="4" Margin="-1" Opacity="0" IsHitTestVisible="False"/>
		</Grid>
		<ControlTemplate.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Visibility" TargetName="ReadOnlyBg" Value="Visible"/>
                <Setter Property="Foreground" Value="#FFF0F0F0"/>
            </Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
				<Setter Property="Visibility" TargetName="StrokeDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="BorderDisabled" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
	<ControlTemplate x:Key="NoesisTextBoxNoWrapTemplate" TargetType="{x:Type TextBox}">
		<Grid UseLayoutRounding="True">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
						<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="Disabled"/>
					<VisualState x:Name="ReadOnly"/>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="FocusStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Focused" GeneratedDuration="0:0:0.3" To="Unfocused"/>
						<VisualTransition From="Unfocused" GeneratedDuration="0:0:0.3" To="Focused"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Unfocused"/>
					<VisualState x:Name="Focused">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeFocused" AutoReverse="True" RepeatBehavior="Forever">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.75">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0.25">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeFocusedGlow" AutoReverse="True" RepeatBehavior="Forever">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.15">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Border x:Name="Indent" CornerRadius="3" BorderThickness="1" BorderBrush="{StaticResource NoesisIndentBdBrush}" Background="{TemplateBinding Background}">
				<Grid>
					<Border
						x:Name="Border"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="1"
						CornerRadius="2"
						Padding="2" Background="{StaticResource NoesisIndentBgBrush}"/>
					<Border
						x:Name="BorderDisabled"
						BorderThickness="1"
						CornerRadius="2"
						Padding="2" Background="{StaticResource NoesisDisabledBdBrush}" Visibility="Collapsed"/>
					<Border
						x:Name="StrokeNormal"
						BorderBrush="{StaticResource NoesisNormalBdBrush}"
						BorderThickness="1"
						CornerRadius="2"
						Padding="2"/>
					<Border
						x:Name="StrokeShadow"
						BorderBrush="{StaticResource NoesisShadowBdBrush}"
						BorderThickness="1"
						CornerRadius="2"
						Padding="2"/>
                    <Border
                        x:Name="ReadOnlyBg"
                        Background="#10FFFFFF"
                        CornerRadius="2" Visibility="Collapsed"/>
					<Border
						x:Name="StrokeDisabled"
						BorderBrush="{StaticResource NoesisDisabledBdBrush}"
						BorderThickness="1"
						CornerRadius="2"
						Padding="2" Visibility="Collapsed"/>
					<ScrollViewer
						x:Name="PART_ContentHost"
						Style="{StaticResource NoesisTextBoxScrollViewerStyle}"
						Margin="2,2,2,2" Padding="{TemplateBinding Padding}"/>
				</Grid>
			</Border>
			<Border
				x:Name="StrokeFocused"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="1"
				CornerRadius="3" Opacity="0" IsHitTestVisible="False"/>
			<Border
				x:Name="StrokeFocusedGlow"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="1"
				CornerRadius="4" Margin="-1" Opacity="0" IsHitTestVisible="False"/>
		</Grid>
		<ControlTemplate.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Visibility" TargetName="ReadOnlyBg" Value="Visible"/> 
                <Setter Property="Foreground" Value="#FFF0F0F0"/>
            </Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
				<Setter Property="Visibility" TargetName="StrokeDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="BorderDisabled" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="CaretBrush" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="SelectionBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Template" Value="{StaticResource NoesisTextBoxWrappingTemplate}"/>
        <Setter Property="Padding" Value="1"/>
        <Style.Triggers>
        	<Trigger Property="TextWrapping" Value="NoWrap">
            	<Setter Property="Template" Value="{StaticResource NoesisTextBoxNoWrapTemplate}"/>
        	</Trigger>
        </Style.Triggers>
    </Style>
    
    
    <!-- ============== COMBO BOX ============== -->

    <!-- ComboBoxToggleButton Template -->
    <ControlTemplate x:Key="NoesisComboBoxToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Grid UseLayoutRounding="True">
    		<VisualStateManager.VisualStateGroups>
    			<VisualStateGroup x:Name="CommonStates">
    				<VisualStateGroup.Transitions>
    					<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
    					<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
    					<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver"/>
    				</VisualStateGroup.Transitions>
    				<VisualState x:Name="Normal">
    					<Storyboard>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundNormal">
    							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    						</DoubleAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualState>
    				<VisualState x:Name="MouseOver">
    					<Storyboard>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowOver">
    							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    						</DoubleAnimationUsingKeyFrames>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
    							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    						</DoubleAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualState>
    				<VisualState x:Name="Pressed">
    					<Storyboard>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowOver">
    							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
    						</DoubleAnimationUsingKeyFrames>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
    							<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
    						</DoubleAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualState>
    				<VisualState x:Name="Disabled"/>
    			</VisualStateGroup>
    			<VisualStateGroup x:Name="CheckStates">
    				<VisualStateGroup.Transitions>
    					<VisualTransition From="Unchecked" GeneratedDuration="0" To="Checked">
    						<Storyboard>
    							<DoubleAnimation Duration="0:0:0.3" To="-180" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="Arrow"/>
    						</Storyboard>
    					</VisualTransition>
    					<VisualTransition From="Checked" GeneratedDuration="0:0:0.3" To="Unchecked"/>
    				</VisualStateGroup.Transitions>
    				<VisualState x:Name="Checked">
    					<Storyboard>
    						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="Arrow">
    							<EasingDoubleKeyFrame KeyTime="0" Value="-180"/>
    						</DoubleAnimationUsingKeyFrames>
    					</Storyboard>
    				</VisualState>
    				<VisualState x:Name="Unchecked"/>
    				<VisualState x:Name="Indeterminate"/>
    			</VisualStateGroup>
    		</VisualStateManager.VisualStateGroups>
    		<Border
    			x:Name="Border"
    			Background="{TemplateBinding Background}"
    			BorderThickness="1"
    			CornerRadius="2"/>
    		<Border
    			x:Name="BackgroundNormal"
    			Grid.ColumnSpan="1"
    			Background="{StaticResource NoesisNormalBgBrush}"
    			BorderThickness="1"
    			CornerRadius="2" Opacity="0"/>
    		<Border
    			x:Name="BackgroundOver"
    			Grid.ColumnSpan="1"
    			Background="{StaticResource NoesisOverBgBrush}"
    			BorderThickness="1"
    			CornerRadius="2" Opacity="0"/>
    		<Border
    			x:Name="BackgroundDisabled"
    			Grid.ColumnSpan="1"
    			Background="{StaticResource NoesisDisabledBgBrush}"
    			BorderThickness="1"
    			CornerRadius="2" Visibility="Collapsed"/>
    		<Grid x:Name="Arrow" HorizontalAlignment="Right" Width="20" RenderTransformOrigin="0.5,0.5">
    			<Grid.RenderTransform>
    				<TransformGroup>
    					<ScaleTransform/>
    					<SkewTransform/>
    					<RotateTransform/>
    					<TranslateTransform/>
    				</TransformGroup>
    			</Grid.RenderTransform>
    			<Path
    				x:Name="ArrowStroke"
    				Grid.Column="0"
    				HorizontalAlignment="Center"
    				VerticalAlignment="Center"
    				Data="M0,0L3,7 6,0z" Stroke="{StaticResource NoesisGlyphShadowBdBrush}" StrokeThickness="2" Width="8" d:LayoutOverrides="GridBox" Margin="2,4,0,0" Height="10"/>
    			<Path
    				x:Name="ArrowFill"
    				Grid.Column="0"
    				HorizontalAlignment="Center"
    				VerticalAlignment="Center"
    				Data="M0,0L3,7 6,0z"
    				Fill="{TemplateBinding BorderBrush}" d:LayoutOverrides="GridBox" Margin="0,1,0,0" Width="6" Height="7"/>
    			<Path
    				x:Name="ArrowOver"
    				Grid.Column="0"
    				HorizontalAlignment="Center"
    				VerticalAlignment="Center"
    				Data="M0,0L3,7 6,0z" Fill="#3FFFFFFF" d:LayoutOverrides="GridBox" Opacity="0" Margin="0,1,0,0" Width="6" Height="7"/>
    			<Path
    				x:Name="ArrowDisabled"
    				Grid.Column="0"
    				HorizontalAlignment="Center"
    				VerticalAlignment="Center"
    				Data="M0,0L3,7 6,0z" Fill="{StaticResource NoesisDisabledBdBrush}" d:LayoutOverrides="GridBox" Margin="0,2.5,0,0" Stretch="Fill" Width="9" Height="10.5" Visibility="Collapsed"/>
    		</Grid>
    		<Border
    			x:Name="Highlight"
    			Grid.ColumnSpan="1"
    			BorderBrush="{StaticResource NoesisHighlightBgBrush}"
    			BorderThickness="1"
    			CornerRadius="1" Margin="1"/>
    	</Grid>
        <ControlTemplate.Triggers>
    		<Trigger Property="KeyboardNavigation.IsTabStop" Value="False">
    			<Setter Property="CornerRadius" TargetName="Border" Value="0,2,2,0"/>
    			<Setter Property="CornerRadius" TargetName="BackgroundNormal" Value="0,2,2,0"/>
    			<Setter Property="CornerRadius" TargetName="BackgroundOver" Value="0,2,2,0"/>
    			<Setter Property="CornerRadius" TargetName="BackgroundDisabled" Value="0,2,2,0"/>
    			<Setter Property="CornerRadius" TargetName="Highlight" Value="0,1,1,0"/>
    		</Trigger>
    		<Trigger Property="IsChecked" Value="False"/>
    		<Trigger Property="IsEnabled" Value="False">
    			<Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
    			<Setter Property="Visibility" TargetName="ArrowDisabled" Value="Visible"/>
    			<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
    		</Trigger>
    	</ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!-- ComboBoxTextBox Template -->
    <ControlTemplate x:Key="NoesisComboBoxTextBoxTemplate" TargetType="{x:Type TextBox}">
        <Border x:Name="Border" Background="{TemplateBinding Background}" Focusable="False">
            <ScrollViewer x:Name="PART_ContentHost" Style="{StaticResource NoesisTextBoxScrollViewerStyle}" VerticalAlignment="Center"/>
        </Border>
    </ControlTemplate>
	
	<Style x:Key="NoesisComboBoxTextBoxStyle" TargetType="{x:Type TextBox}">
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Template" Value="{StaticResource NoesisComboBoxTextBoxTemplate}"/>
	</Style>
    
	<!-- ComboBox Style -->
	<ControlTemplate x:Key="NoesisComboBoxTemplate" TargetType="{x:Type ComboBox}">
		<Grid UseLayoutRounding="True">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
						<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="StrokeVNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
				<VisualStateGroup x:Name="FocusStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Unfocused" GeneratedDuration="0:0:0.3" To="Focused"/>
						<VisualTransition From="Focused" GeneratedDuration="0:0:0.3" To="Unfocused"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Unfocused"/>
					<VisualState x:Name="Focused">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndentFocused" AutoReverse="True" RepeatBehavior="Forever">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.75">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0.25">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndentFocusedGlow" AutoReverse="True" RepeatBehavior="Forever">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.15">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="FocusedDropDown"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Border x:Name="Indent" BorderBrush="{StaticResource NoesisIndentBdBrush}" BorderThickness="1" CornerRadius="3" Background="{TemplateBinding Background}" d:LayoutOverrides="Width, Height">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="20"/>              	
					</Grid.ColumnDefinitions>
					<Border x:Name="BackgroundShadow" CornerRadius="3" Grid.ColumnSpan="2" Background="{StaticResource NoesisIndentBgBrush}" RenderTransformOrigin="0.5,0.5"/>
					<Border x:Name="BackgroundDisabled" CornerRadius="3" Grid.ColumnSpan="2" Background="{StaticResource NoesisDisabledBdBrush}" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed"/>
					<Grid Grid.ColumnSpan="3">
						<Border x:Name="Stroke" CornerRadius="2" Grid.ColumnSpan="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"/>
						<Border x:Name="StrokeNormal" CornerRadius="2" Grid.ColumnSpan="1" BorderBrush="{StaticResource NoesisNormalBdBrush}" BorderThickness="1"/>
						<Border x:Name="StrokeShadow" CornerRadius="2" Grid.ColumnSpan="1" BorderBrush="{StaticResource NoesisShadowBdBrush}" BorderThickness="1"/>
						<Border x:Name="StrokeDisabled" CornerRadius="2" Grid.ColumnSpan="1" BorderBrush="{StaticResource NoesisDisabledBdBrush}" BorderThickness="1" Visibility="Collapsed"/>
					</Grid>
					<Grid x:Name="StrokeVGroup" Grid.Column="2" Margin="0,1" Visibility="Collapsed">
						<Border x:Name="StrokeV" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,0,0"/>
						<Border x:Name="StrokeVNormal" BorderBrush="#99262626" BorderThickness="1,0,0,0"/>
						<Border x:Name="StrokeVShadow" BorderBrush="{StaticResource NoesisShadowBdBrush}" BorderThickness="1,0,0,0"/>
						<Border x:Name="StrokeVDisabled" BorderBrush="{StaticResource NoesisDisabledBdBrush}" BorderThickness="1,0,0,0" Visibility="Collapsed"/>
					</Grid>
					<ToggleButton
						x:Name="DropDownButton"
						ClickMode="Press"
						Focusable="False"
						Template="{StaticResource NoesisComboBoxToggleButtonTemplate}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.ColumnSpan="2"/>
					<ContentPresenter
						x:Name="ContentSite"
						VerticalAlignment="Center"
						ContentSource="SelectionBoxItem"
						IsHitTestVisible="False"
						Margin="{TemplateBinding Padding}"/>
					<TextBox
						x:Name="PART_EditableTextBox"
						Margin="{TemplateBinding Padding}"
						VerticalAlignment="Center"
						Focusable="True"
						IsReadOnly="{TemplateBinding IsReadOnly}"
						Style="{StaticResource NoesisComboBoxTextBoxStyle}"
						Visibility="Collapsed"
						Background="Transparent"
						Foreground="{TemplateBinding Foreground}"
						CaretBrush="{TemplateBinding Foreground}"
						SelectionBrush="{TemplateBinding BorderBrush}"/>
				</Grid>
			</Border>
			<Border x:Name="IndentFocused" CornerRadius="3" RenderTransformOrigin="0.5,0.5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Opacity="0"/>
			<Border x:Name="IndentFocusedGlow" CornerRadius="4" RenderTransformOrigin="0.5,0.5" BorderBrush="{TemplateBinding BorderBrush}" Margin="-1" BorderThickness="1" Opacity="0"/>
			<Popup
				x:Name="PART_Popup"
				AllowsTransparency="True"
				Focusable="False"
				IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
				Placement="Bottom"
				PopupAnimation="Slide">
				<Grid x:Name="DropDown" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" UseLayoutRounding="True">
					<Border x:Name="DropDownShadow1" CornerRadius="3,3,4,4" BorderBrush="{StaticResource NoesisPopupShadow1Brush}" BorderThickness="1"/>
					<Border x:Name="DropDownShadow2" CornerRadius="3" Margin="1" BorderBrush="{StaticResource NoesisPopupShadow2Brush}" BorderThickness="0,0,0,1"/>
					<Border x:Name="DropDownBorderBackground" Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2" Opacity="0.95"/>
					<Border x:Name="DropDownBorderStroke" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2"/>
					<Border x:Name="DropDownBorderNormal" BorderBrush="{StaticResource NoesisNormalBdBrush}" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2"/>
					<Border x:Name="DropDownBorderShadow" BorderBrush="#59000000" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2"/>
					<Border x:Name="Highlight" BorderBrush="#0CFFFFFF" BorderThickness="1" CornerRadius="1" Margin="2,2,2,3"/>
					<ScrollViewer Margin="2,2,2,3" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
						<StackPanel Margin="2,3" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
					</ScrollViewer>
				</Grid>
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsGrouping" Value="true">
				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
			</Trigger>
			<Trigger Property="IsEditable" Value="true">
				<Setter Property="IsTabStop" Value="false"/>
				<Setter Property="Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
				<Setter Property="Visibility" TargetName="ContentSite" Value="Collapsed"/>
				<Setter Property="Grid.Column" TargetName="DropDownButton" Value="1"/>
				<Setter Property="Grid.ColumnSpan" TargetName="DropDownButton" Value="1"/>
				<Setter Property="IsTabStop" TargetName="DropDownButton" Value="False"/>
				<Setter Property="Visibility" TargetName="StrokeVGroup" Value="Visible"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
				<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="StrokeVDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="StrokeDisabled" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="Padding" Value="4,2"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Template" Value="{StaticResource NoesisComboBoxTemplate}"/>
    </Style>
	
	<!-- ComboBoxItem Style -->
	<ControlTemplate x:Key="NoesisComboBoxItemTemplate" TargetType="{x:Type ComboBoxItem}">
		<Grid UseLayoutRounding="True">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
						<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Over">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
				<VisualStateGroup x:Name="SelectionStates">
					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0:0:0.1"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Unselected"/>
					<VisualState x:Name="Selected">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Select">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="SelectedUnfocused">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Select">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.75"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="FocusStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Focused" GeneratedDuration="0:0:0.1" To="Unfocused"/>
						<VisualTransition From="Unfocused" GeneratedDuration="0:0:0.3" To="Focused"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Unfocused"/>
					<VisualState x:Name="Focused"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Grid x:Name="Over" Opacity="0">
				<Border x:Name="OverStroke" CornerRadius="1" Opacity="0.25" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"/>
				<Border x:Name="OverBackground" Background="{TemplateBinding BorderBrush}" CornerRadius="1" Opacity="0.1" BorderThickness="1"/>
			</Grid>
			<Grid x:Name="Select" Opacity="0">
				<Border x:Name="SelectStroke" CornerRadius="1" Opacity="0.75" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"/>
				<Border x:Name="SelectBackground" Background="{TemplateBinding BorderBrush}" CornerRadius="1" Opacity="0.5" BorderThickness="1"/>
				<Border x:Name="SelectShadow" Background="{StaticResource NoesisNormalBgBrush}" CornerRadius="1" Opacity="0.25" BorderThickness="1"/>
				<Border x:Name="SelectDisabled" Background="{StaticResource NoesisDisabledBdBrush}" CornerRadius="1" Visibility="Collapsed"/>
			</Grid>
			<Border Margin="1">
				<ContentPresenter x:Name="ContentSite" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
			</Border>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
				<Setter Property="Visibility" TargetName="SelectDisabled" Value="Visible"/>
				<Setter Property="Opacity" TargetName="ContentSite" Value="0.5"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Template" Value="{StaticResource NoesisComboBoxItemTemplate}"/>
        <Setter Property="Padding" Value="2,1"/>
    </Style>
    
    
    <!-- ============== TREE VIEW ============== -->
    
    <!-- TreeView Style -->
	<ControlTemplate x:Key="NoesisTreeViewTemplate" TargetType="{x:Type TreeView}">
		<ControlTemplate.Resources>
			<Storyboard x:Key="DisabledAnim">
				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundDisabled">
					<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
					<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
						<EasingDoubleKeyFrame.EasingFunction>
							<SineEase EasingMode="EaseInOut"/>
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
				</DoubleAnimationUsingKeyFrames>
				<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BackgroundDisabled">
					<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
				</ObjectAnimationUsingKeyFrames>
				<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BorderDisabled">
					<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
				</ObjectAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BorderDisabled">
					<EasingDoubleKeyFrame KeyTime="0" Value="0">
						<EasingDoubleKeyFrame.EasingFunction>
							<SineEase EasingMode="EaseInOut"/>
						</EasingDoubleKeyFrame.EasingFunction>
					</EasingDoubleKeyFrame>
					<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard x:Key="EnabledAnim">
				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundDisabled">
					<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
					<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
				</DoubleAnimationUsingKeyFrames>
				<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BackgroundDisabled">
					<DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
				</ObjectAnimationUsingKeyFrames>
				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BorderDisabled">
					<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
					<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
				</DoubleAnimationUsingKeyFrames>
				<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="BorderDisabled">
					<DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
				</ObjectAnimationUsingKeyFrames>
			</Storyboard>
		</ControlTemplate.Resources>
		<Grid>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="ValidationStates"/>
			</VisualStateManager.VisualStateGroups>
			<Border x:Name="Indent" BorderThickness="1" CornerRadius="2" BorderBrush="{StaticResource NoesisIndentBdBrush}" Background="{TemplateBinding Background}"/>
			<Border x:Name="BackgroundShadow" BorderThickness="1" CornerRadius="2" Background="#3F000000" Margin="1"/>
			<ScrollViewer CanContentScroll="False" Focusable="False" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Margin="2">
				<ItemsPresenter Margin="{TemplateBinding Padding}"/>
			</ScrollViewer>
			<Border x:Name="BackgroundDisabled" BorderThickness="1" CornerRadius="2" Background="{DynamicResource NoesisDisabledBgBrush}" Visibility="Collapsed" Margin="1"/>
			<Border x:Name="Border" BorderThickness="1" CornerRadius="1" BorderBrush="{TemplateBinding BorderBrush}" Margin="1"/>
			<Border x:Name="BorderNormal" BorderThickness="1" CornerRadius="1" BorderBrush="{StaticResource NoesisNormalBdBrush}" Margin="1"/>
			<Border x:Name="BorderShadow" BorderThickness="1" CornerRadius="1" BorderBrush="{StaticResource NoesisShadowBdBrush}" Margin="1"/>
			<Border x:Name="BorderDisabled" BorderThickness="1" CornerRadius="1" BorderBrush="{StaticResource NoesisDisabledBdBrush}" Visibility="Collapsed" Margin="1"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Trigger.ExitActions>
					<BeginStoryboard x:Name="EnabledAnim_BeginStoryboard" Storyboard="{StaticResource EnabledAnim}"/>
				</Trigger.ExitActions>
				<Trigger.EnterActions>
					<BeginStoryboard x:Name="DisabledAnim_BeginStoryboard" Storyboard="{StaticResource DisabledAnim}"/>
				</Trigger.EnterActions>
				<Setter Property="Visibility" TargetName="BorderDisabled" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

    <Style TargetType="{x:Type TreeView}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template" Value="{StaticResource NoesisTreeViewTemplate}"/>
    </Style>
    
    <!-- ExpandCollapseToggle Style -->
    <Style x:Key="NoesisExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="Arrow" Width="16" Height="14" Background="Transparent" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="True">
                		<Grid.RenderTransform>
                			<TransformGroup>
                				<ScaleTransform/>
                				<SkewTransform/>
                				<RotateTransform/>
                				<TranslateTransform/>
                			</TransformGroup>
                		</Grid.RenderTransform>
                		<VisualStateManager.VisualStateGroups>
                			<VisualStateGroup x:Name="CheckStates">
                				<VisualStateGroup.Transitions>
                					<VisualTransition From="Unchecked" GeneratedDuration="0:0:0.3" To="Checked"/>
                					<VisualTransition From="Checked" GeneratedDuration="0:0:0.3" To="Unchecked">
                						<Storyboard>
                							<DoubleAnimation BeginTime="0:0:0.3" Duration="0:0:0.3" To="{x:Null}" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="Arrow"/>
                						</Storyboard>
                					</VisualTransition>
                				</VisualStateGroup.Transitions>
                				<VisualState x:Name="Checked">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="Arrow">
                							<EasingDoubleKeyFrame KeyTime="0" Value="90"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Unchecked"/>
                				<VisualState x:Name="Indeterminate"/>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="CommonStates">
                				<VisualState x:Name="Normal"/>
                				<VisualState x:Name="MouseOver">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowOver">
                							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Pressed"/>
                				<VisualState x:Name="Disabled"/>
                			</VisualStateGroup>
                		</VisualStateManager.VisualStateGroups>
                		<Path x:Name="ArrowStroke" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,0L7,3 0,6z" StrokeThickness="2" Stroke="{StaticResource NoesisGlyphShadowBdBrush}" Margin="5,1,0,0" Width="10" Height="8"/>
                		<Path x:Name="ArrowFill" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,0L7,3 0,6z" Fill="{TemplateBinding BorderBrush}" StrokeThickness="0" Margin="2,0,0,0" Width="7" Height="6"/>
                		<Path x:Name="ArrowOver" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,0L7,3 0,6z" StrokeThickness="0" Margin="2,0,0,0" Fill="#3FFFFFFF" Opacity="0" Width="7" Height="6"/>
                		<Path x:Name="ArrowDisabled" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,0L7,3 0,6z" Fill="{StaticResource NoesisDisabledBdBrush}" StrokeThickness="0" Margin="3.75,0,0,0" Width="10.5" Height="9" Stretch="Fill" Visibility="Collapsed"/>
                	</Grid>
                    <ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False"/>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
    </Style>
    
	<!--  TreeViewItem Style -->
	<ControlTemplate x:Key="NoesisTreeViewItemTemplate" TargetType="{x:Type TreeViewItem}">
		<ControlTemplate.Resources>
			<Storyboard x:Key="OverOn">
				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Over">
					<EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="1"/>
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
			<Storyboard x:Key="OverOff">
				<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Over">
					<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
				</DoubleAnimationUsingKeyFrames>
			</Storyboard>
		</ControlTemplate.Resources>
		<Grid UseLayoutRounding="True">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="Auto"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition/>
			</Grid.RowDefinitions>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="MouseOver"/>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
				<VisualStateGroup x:Name="FocusStates">
					<VisualState x:Name="Focused"/>
					<VisualState x:Name="Unfocused"/>
				</VisualStateGroup>
				<VisualStateGroup x:Name="SelectionStates">
					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0:0:0.1"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Selected">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Select">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Unselected"/>
					<VisualState x:Name="SelectedInactive">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Select">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.75"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="ExpansionStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Collapsed" GeneratedDuration="0" To="Expanded">
							<Storyboard>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ItemsHost">
									<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ItemsHost">
									<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</VisualTransition>
						<VisualTransition From="Expanded" GeneratedDuration="0" To="Collapsed">
							<Storyboard>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ItemsHost">
									<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ItemsHost">
									<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
									<EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0.001"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</VisualTransition>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Expanded">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ItemsHost">
								<DiscreteObjectKeyFrame KeyTime="0">
									<DiscreteObjectKeyFrame.Value>
										<Visibility>Visible</Visibility>
									</DiscreteObjectKeyFrame.Value>
								</DiscreteObjectKeyFrame>
							</ObjectAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.LayoutTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="ItemsHost">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Collapsed">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ItemsHost">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="HasItemsStates">
					<VisualState x:Name="HasItems"/>
					<VisualState x:Name="NoItems"/>
				</VisualStateGroup>
				<VisualStateGroup x:Name="ValidationStates"/>
			</VisualStateManager.VisualStateGroups>
			<ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource NoesisExpandCollapseToggleStyle}"/>
			<Grid x:Name="PART_Header" Grid.Column="1" Margin="2,0,0,0">
				<Grid x:Name="Over" Opacity="0">
					<Border x:Name="OverStroke" CornerRadius="1" Opacity="0.25" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"/>
					<Border x:Name="OverBackground" Background="{TemplateBinding BorderBrush}" CornerRadius="1" Opacity="0.1" BorderThickness="1"/>
				</Grid>
				<Grid x:Name="Select" Opacity="0">
					<Border x:Name="SelectStroke" CornerRadius="1" Opacity="0.75" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"/>
					<Border x:Name="SelectBackground" Background="{TemplateBinding BorderBrush}" CornerRadius="1" Opacity="0.5" BorderThickness="1"/>
					<Border x:Name="SelectShadow" Background="{StaticResource NoesisNormalBgBrush}" CornerRadius="1" Opacity="0.25" BorderThickness="1"/>
					<Border x:Name="SelectDisabled" Background="{StaticResource NoesisDisabledBdBrush}" CornerRadius="1" Visibility="Collapsed"/>
				</Grid>
				<ContentPresenter x:Name="ContentSite" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
			</Grid>
			<ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1">
				<ItemsPresenter.LayoutTransform>
					<TransformGroup>
						<ScaleTransform CenterX="0.5" ScaleY="0.001"/>
						<SkewTransform CenterX="0.5"/>
						<RotateTransform CenterX="0.5"/>
						<TranslateTransform/>
					</TransformGroup>
				</ItemsPresenter.LayoutTransform>
			</ItemsPresenter>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" SourceName="PART_Header" Value="True">
				<Trigger.ExitActions>
					<BeginStoryboard Storyboard="{StaticResource OverOff}"/>
				</Trigger.ExitActions>
				<Trigger.EnterActions>
					<BeginStoryboard Storyboard="{StaticResource OverOn}"/>
				</Trigger.EnterActions>
			</Trigger>
			<Trigger Property="HasItems" Value="False">
				<Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False"/>
		</ControlTemplate.Triggers>
	</ControlTemplate>
				
    <Style TargetType="{x:Type TreeViewItem}">
    	<Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="4,2"/>
        <Setter Property="Template" Value="{StaticResource NoesisTreeViewItemTemplate}"/>
    </Style>
    
    <!-- ============== STATUS BAR ============== -->
    
    <!-- StatusBar Style -->
	<Style x:Key="{x:Static StatusBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    	<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Background" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="MinHeight" Value="1"/>
        <Setter Property="Margin" Value="2"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Template">
      		<Setter.Value>
      			<ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            UseLayoutRounding="True" Width="1" Opacity="0.25"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<ControlTemplate x:Key="NoesisStatusBarTemplate" TargetType="{x:Type StatusBar}">
		<Border UseLayoutRounding="True" Background="{TemplateBinding Background}" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource NoesisGlyphShadowBdBrush}">
			<Grid>
				<Border x:Name="Disabled" UseLayoutRounding="True" Margin="0,-1,0,0" Background="{DynamicResource NoesisDisabledBdBrush}" Visibility="Collapsed"/>
				<Border x:Name="Highlight" UseLayoutRounding="True" BorderBrush="{DynamicResource NoesisHighlightBgBrush}" BorderThickness="1" Opacity="0.5"/>
				<DockPanel IsItemsHost="True" Margin="5,1"/>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Visibility" TargetName="Disabled" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

    <Style TargetType="{x:Type StatusBar}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource NoesisBdBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource NoesisFgBrush}"/>
        <Setter Property="Template" Value="{StaticResource NoesisStatusBarTemplate}"/>
    </Style>

    <!-- StatusBarItem Style -->
    <Style TargetType="{x:Type StatusBarItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="4,2"/>
        <Setter Property="Foreground" Value="{DynamicResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{DynamicResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource NoesisBdBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type StatusBarItem}">
                    <Border SnapsToDevicePixels="true">
                        <ContentPresenter UseLayoutRounding="{TemplateBinding UseLayoutRounding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Border>
                	<ControlTemplate.Triggers>
                		<Trigger Property="IsEnabled" Value="False">
                			<Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>          		
						</Trigger>
                	</ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <!-- ============== TOOL BAR ============== -->
    
	<!-- ToolBar Control Stles-->
	<Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    	<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Background" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="MinHeight" Value="1"/>
        <Setter Property="Margin" Value="2"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Template">
      		<Setter.Value>
      			<ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            UseLayoutRounding="True" Width="1" Opacity="0.25"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	<ControlTemplate x:Key="NoesisToolBarButtonTemplate" TargetType="{x:Type Button}">
		<Grid UseLayoutRounding="True">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
                	<VisualStateGroup.Transitions>
                		<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
                		<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
                		<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver"/>
                		<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="Normal"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Over">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Press">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
				<VisualStateGroup x:Name="FocusStates">
					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0:0:0.3"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Unfocused"/>
					<VisualState x:Name="Focused">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusedBorder" AutoReverse="True" RepeatBehavior="Forever">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.75">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0.25">
									<EasingDoubleKeyFrame.EasingFunction>
                						<SineEase EasingMode="EaseInOut"/>
                					</EasingDoubleKeyFrame.EasingFunction>
                				</EasingDoubleKeyFrame>
                			</DoubleAnimationUsingKeyFrames>
                		</Storyboard>
                	</VisualState>
                </VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
            <Border x:Name="Base" Background="Transparent" BorderBrush="Transparent" CornerRadius="2" BorderThickness="1"/>
			<Border x:Name="Over" Background="{StaticResource NoesisOverBgBrush}" BorderBrush="{StaticResource NoesisGlyphShadowBdBrush}" CornerRadius="2" BorderThickness="1" Opacity="0"/>
			<Border x:Name="Press" Background="{StaticResource NoesisPressBgBrush}" BorderBrush="{StaticResource NoesisGlyphShadowBdBrush}" CornerRadius="2" BorderThickness="1" Opacity="0"/>
			<Border x:Name="FocusedBorder" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="1.5" BorderThickness="2" Opacity="0"/>
			<ContentPresenter
					HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
					VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
					UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
					Margin="{TemplateBinding Padding}"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}">
    	<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Padding" Value="4,2"/>
		<Setter Property="Margin" Value="1,0"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource NoesisToolBarButtonTemplate}"/>
    </Style>
	<ControlTemplate x:Key="NoesisToolBarToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
		<Grid UseLayoutRounding="true">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
						<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
						<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver"/>
						<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="Normal"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Normal"/>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Over">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Pressed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Press">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
				<VisualStateGroup x:Name="FocusStates">
					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0:0:0.3"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Unfocused"/>
					<VisualState x:Name="Focused">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusedBorder" AutoReverse="True" RepeatBehavior="Forever">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.75">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0.25">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="CheckStates">
					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0:0:0.1"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Checked">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckBackground">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckBorder">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Unchecked"/>
					<VisualState x:Name="Indeterminate"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Border x:Name="Base" Background="Transparent" BorderBrush="Transparent" CornerRadius="2" BorderThickness="1"/>
			<Border x:Name="CheckBackground" Background="{TemplateBinding BorderBrush}" CornerRadius="2" BorderThickness="1" Opacity="0"/>
			<Border x:Name="CheckBorder" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2" BorderThickness="1" Opacity="0"/>
			<Border x:Name="Over" Background="{StaticResource NoesisOverBgBrush}" BorderBrush="{StaticResource NoesisGlyphShadowBdBrush}" CornerRadius="2" BorderThickness="1" Opacity="0"/>
			<Border x:Name="Press" Background="{StaticResource NoesisPressBgBrush}" BorderBrush="{StaticResource NoesisGlyphShadowBdBrush}" CornerRadius="2" BorderThickness="1" Opacity="0"/>
			<Border x:Name="FocusedBorder" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="1.5" BorderThickness="2" Opacity="0"/>
			<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
				VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
				UseLayoutRounding="{TemplateBinding UseLayoutRounding}" Margin="{TemplateBinding Padding}"/>
		</Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
            	<Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
        	</Trigger>
    	</ControlTemplate.Triggers>
	</ControlTemplate>
    <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="{x:Type ToggleButton}">
    	<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Padding" Value="4,2"/>
		<Setter Property="Margin" Value="1,0"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource NoesisToolBarToggleButtonTemplate}"/>
    </Style>
    <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" TargetType="{x:Type CheckBox}">
    	<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="UseLayoutRounding" Value="True"/>
    	<Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Padding" Value="4,2"/>
		<Setter Property="Margin" Value="1,0"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource NoesisToolBarToggleButtonTemplate}"/>
	</Style>
    <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" TargetType="{x:Type RadioButton}">
    	<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="UseLayoutRounding" Value="True"/>
    	<Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Padding" Value="4,2"/>
		<Setter Property="Margin" Value="1,0"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{StaticResource NoesisToolBarToggleButtonTemplate}"/>
	</Style>
    <Style x:Key="NoesisToolBarComboBoxTransparentButtonStyle" TargetType="{x:Type ToggleButton}">
    	<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Foreground" Value="{DynamicResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{DynamicResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource NoesisBdBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="Transparent" UseLayoutRounding="True">
                		<Grid.ColumnDefinitions>
                			<ColumnDefinition Width="*"/>
                			<ColumnDefinition Width="14"/>
                		</Grid.ColumnDefinitions>
                		<VisualStateManager.VisualStateGroups>
                			<VisualStateGroup x:Name="CommonStates">
                				<VisualStateGroup.Transitions>
                					<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
                					<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
                					<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver"/>
                					<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="Normal"/>
                				</VisualStateGroup.Transitions>
                				<VisualState x:Name="Normal">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Norm">
                							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="MouseOver">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowFillHighlight">
                							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Over">
                							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Pressed">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Over">
                							<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Disabled"/>
                			</VisualStateGroup>
                		</VisualStateManager.VisualStateGroups>
                		<Grid x:Name="Background" Grid.Column="1">
                    		<Border x:Name="Base" Background="{TemplateBinding Background}" CornerRadius="0,2,2,0" BorderThickness="1"/>
                    		<Border x:Name="Norm" Background="{DynamicResource NoesisNormalBgBrush}" CornerRadius="0,2,2,0" Opacity="0" BorderThickness="1"/>
                    		<Border x:Name="Over" Background="{DynamicResource NoesisOverBgBrush}" CornerRadius="0,2,2,0" Opacity="0" BorderThickness="1"/>
                    		<Border x:Name="Disable" Background="{DynamicResource NoesisDisabledBgBrush}" CornerRadius="0,2,2,0" BorderThickness="1" Visibility="Collapsed"/>
                    	</Grid>
                    	<Grid x:Name="Arrow" Grid.Column="1">
                    		<Path x:Name="ArrowStroke" Data="M0,0L2,5 4,0z" VerticalAlignment="Center" HorizontalAlignment="Center" Width="7" Height="8" StrokeThickness="2" Stroke="{DynamicResource NoesisGlyphShadowBdBrush}" Margin="3,4,0,0"/>
                    		<Path x:Name="ArrowStrokeDisabled" Data="M0,0L2,5 4,0z" VerticalAlignment="Center" HorizontalAlignment="Center" Width="7" Height="8" StrokeThickness="2" Stroke="{DynamicResource NoesisDisabledBdBrush}" Margin="3,4,0,0" Visibility="Collapsed"/>
                    		<Path x:Name="ArrowFill" Data="M0,0L2,5 4,0z" Fill="{TemplateBinding BorderBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" Width="4" Height="5" Margin="0,1,0,0"/>
                    		<Path x:Name="ArrowFillHighlight" Data="M0,0L2,5 4,0z" Fill="#33FFFFFF" VerticalAlignment="Center" HorizontalAlignment="Center" Width="4" Height="5" Opacity="0" Margin="0,1,0,0"/>
                    		<Path x:Name="ArrowFillDisabled" Data="M0,0L2,5 4,0z" Fill="{DynamicResource NoesisDisabledBdBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" Width="4" Height="5" Margin="0,1,0,0" Visibility="Collapsed"/>
                    	</Grid>
                	</Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" TargetName="Disable" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="ArrowStrokeDisabled" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="ArrowFillDisabled" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	<ControlTemplate x:Key="NoesisToolBarComboBoxTemplate" TargetType="{x:Type ComboBox}">
		<Grid UseLayoutRounding="true">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
						<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Normal">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BorderNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BorderOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
				</VisualStateGroup>
				<VisualStateGroup x:Name="FocusStates">
					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0:0:0.3"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Unfocused"/>
					<VisualState x:Name="Focused">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BorderFocus" RepeatBehavior="Forever" AutoReverse="True">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.75">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0.25">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="FocusedDropDown"/>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Grid Grid.IsSharedSizeScope="true">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="14"/>
				</Grid.ColumnDefinitions>
				<Border x:Name="Background" Background="{DynamicResource NoesisIndentBgBrush}" CornerRadius="2,0,0,2" BorderThickness="1,1,0,1" Visibility="Visible"/>
				<Border x:Name="BackgroundDisabled" Background="{DynamicResource NoesisDisabledBdBrush}" CornerRadius="2,0,0,2" BorderThickness="1,1,0,1" Visibility="Collapsed" Opacity="0.5"/>
				<Grid x:Name="BorderNormal" Grid.ColumnSpan="2" Opacity="0">
					<Border BorderThickness="1" BorderBrush="{TemplateBinding Background}" CornerRadius="2"/>
					<Border BorderBrush="{TemplateBinding Background}" CornerRadius="0" BorderThickness="1,0,0,0" Margin="0,1" HorizontalAlignment="Right" Width="14"/>
				</Grid>
				<Grid x:Name="BorderOver" Grid.ColumnSpan="2" Opacity="0">
					<Border BorderThickness="1" BorderBrush="{DynamicResource NoesisGlyphShadowBdBrush}" CornerRadius="2"/>
					<Border BorderBrush="{DynamicResource NoesisGlyphShadowBdBrush}" CornerRadius="0" BorderThickness="1,0,0,0" Margin="0,1" HorizontalAlignment="Right" Width="14"/>
				</Grid>
				<Grid x:Name="BorderFocus" Grid.ColumnSpan="2" Opacity="0">
					<Border BorderThickness="2" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="1.5"/>
					<Border BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="0" BorderThickness="1,0,0,0" Margin="0,1" HorizontalAlignment="Right" Width="14"/>
				</Grid>
				<Border x:Name="SelectedContentBorder" Margin="2,0,0,0">
					<ContentPresenter x:Name="ContentSite"
						ContentSource="SelectionBoxItem"
						Margin="{TemplateBinding Padding}"
						UseLayoutRounding="{TemplateBinding UseLayoutRounding}" VerticalAlignment="Center"/>
				</Border>
				<ToggleButton x:Name="DropDownButton"
					Grid.ColumnSpan="2"
					Style="{StaticResource NoesisToolBarComboBoxTransparentButtonStyle}"
					IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
				<TextBox x:Name="PART_EditableTextBox"
					Margin="{TemplateBinding Padding}"
					Style="{StaticResource NoesisComboBoxTextBoxStyle}"
					Visibility="Collapsed"
					IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
					SelectionBrush="{TemplateBinding BorderBrush}"
					Foreground="{TemplateBinding Foreground}"
					CaretBrush="{TemplateBinding Foreground}"/>
			</Grid>
			<Popup x:Name="PART_Popup"
				AllowsTransparency="true"
				Placement="Bottom"
				IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
				Focusable="false"
				PopupAnimation="Slide">
				<Grid x:Name="DropDown" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" UseLayoutRounding="True">
					<Border x:Name="DropDownShadow1" CornerRadius="3,3,4,4" BorderBrush="{StaticResource NoesisPopupShadow1Brush}" BorderThickness="1"/>
					<Border x:Name="DropDownShadow2" CornerRadius="3" Margin="1" BorderBrush="{StaticResource NoesisPopupShadow2Brush}" BorderThickness="0,0,0,1"/>
					<Border x:Name="DropDownBorderBackground" Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2" Opacity="0.95"/>
					<Border x:Name="DropDownBorderStroke" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2"/>
					<Border x:Name="DropDownBorderNormal" BorderBrush="{StaticResource NoesisNormalBdBrush}" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2"/>
					<Border x:Name="DropDownBorderShadow" BorderBrush="#59000000" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2"/>
					<Border x:Name="Highlight" BorderBrush="#0CFFFFFF" BorderThickness="1" CornerRadius="1" Margin="2,2,2,3"/>
					<ScrollViewer Margin="2,2,2,3">
						<ItemsPresenter Margin="2,4" KeyboardNavigation.DirectionalNavigation="Contained"/>
					</ScrollViewer>
				</Grid>
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEditable" Value="true">
            	<Setter TargetName="SelectedContentBorder" Property="Visibility" Value="Collapsed"/>
				<Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
            </Trigger>
			<Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
            	<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
        	</Trigger>
    	</ControlTemplate.Triggers>
	</ControlTemplate>
    <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
    	<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="UseLayoutRounding" Value="True"/>
    	<Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Margin" Value="1,0"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Template" Value="{StaticResource NoesisToolBarComboBoxTemplate}"/>
    </Style>
	<ControlTemplate x:Key="NoesisToolBarTextBoxTemplate" TargetType="{x:Type TextBox}">
		<Grid>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualStateGroup.Transitions>
						<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
						<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Normal">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BorderNormal">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled"/>
					<VisualState x:Name="ReadOnly"/>
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BorderOver">
								<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="FocusStates">
					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0:0:0.3"/>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Unfocused"/>
					<VisualState x:Name="Focused">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BorderFocused" AutoReverse="True" RepeatBehavior="Forever">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.75">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
								<EasingDoubleKeyFrame KeyTime="0:0:1.2" Value="0.25">
									<EasingDoubleKeyFrame.EasingFunction>
										<SineEase EasingMode="EaseInOut"/>
									</EasingDoubleKeyFrame.EasingFunction>
								</EasingDoubleKeyFrame>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Border x:Name="Background"
				Background="{DynamicResource NoesisIndentBgBrush}"
				SnapsToDevicePixels="true" CornerRadius="2" BorderThickness="1" d:LayoutOverrides="Width, Height"/>
			<Border x:Name="BorderNormal"
				BorderBrush="{TemplateBinding Background}"
				SnapsToDevicePixels="true" CornerRadius="2" BorderThickness="1" d:LayoutOverrides="Width, Height" Opacity="0"/>
			<Border x:Name="BorderOver"
				BorderBrush="{DynamicResource NoesisGlyphShadowBdBrush}"
				SnapsToDevicePixels="true" CornerRadius="2" BorderThickness="1" d:LayoutOverrides="Width, Height" Opacity="0"/>
			<Border x:Name="BorderFocused"
				BorderBrush="{TemplateBinding BorderBrush}"
				SnapsToDevicePixels="true" CornerRadius="1.5" BorderThickness="2" d:LayoutOverrides="Width, Height" Opacity="0" Visibility="Visible"/>
			<Border x:Name="Disable"
				Background="{DynamicResource NoesisDisabledBdBrush}"
				SnapsToDevicePixels="true" CornerRadius="2" BorderThickness="1" d:LayoutOverrides="Width, Height" Visibility="Collapsed" Opacity="0.5"/>
			<Border Margin="1">
				<ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
			</Border>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
				<Setter Property="Visibility" TargetName="Disable" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
    <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource NoesisFgBrush}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource NoesisBdBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Margin" Value="1,0"/>
        <Setter Property="Padding" Value="2,1"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Template" Value="{StaticResource NoesisToolBarTextBoxTemplate}"/>
    </Style>
    <Style x:Key="{x:Static ToolBar.MenuStyleKey}" TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
				<Setter Property="UseLayoutRounding" Value="true" />
                <Setter Property="Background" Value="{StaticResource NoesisBgBrush}" />
                <Setter Property="Margin" Value="2" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Margin" Value="0,1,0,0"/>
                <Setter Property="Padding" Value="8,1,8,1"/>
                <Setter Property="DockPanel.Dock" Value="Top"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Grid Background="Transparent" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                    <ColumnDefinition Width="14"/>
                                </Grid.ColumnDefinitions>
                                <Border Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Grid.ColumnSpan="4"
                                        Margin="1,0"/>
                                <ContentPresenter x:Name="Icon"
                                                  Margin="0"
                                                  VerticalAlignment="Center"
                                                  ContentSource="Icon"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Border Name="GlyphPanel"
                                        Margin="0,1"
                                        Width="20"
                                        Visibility="Hidden"
                                        BorderBrush="{StaticResource NoesisBdBrush}"
                                        Background="{StaticResource NoesisBgBrush}"
                                        BorderThickness="1">
                                    <Path VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          FlowDirection="LeftToRight"
                                          Stroke="{TemplateBinding Foreground}"
                                          StrokeThickness="1.2"
                                          Data="M0,0L7,3 6,0Z"/>
                                </Border>
                                <ContentPresenter Grid.Column="1"
                                                  ContentSource="Header"
                                                  Margin="{TemplateBinding Padding}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <TextBlock Grid.Column="2"
                                           Text="{TemplateBinding InputGestureText}"
                                           Margin="4,1,2,1"
                                           HorizontalAlignment="Right"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Icon" Value="{x:Null}">
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
                                    <Setter TargetName="Border" Property="Background" Value="{StaticResource NoesisBgBrush}"/>
                                    <Setter TargetName="GlyphPanel" Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
                                    <Setter TargetName="GlyphPanel" Property="Background" Value="{StaticResource NoesisBgBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Role" Value="TopLevelHeader">
                        <Setter Property="Padding" Value="6,1,7,1"/>
                        <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <Border Name="Border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="true">
                                        <DockPanel Name="Header">
                                            <ContentPresenter x:Name="Icon"
                                                              Margin="4,0,6,0"
                                                              VerticalAlignment="Center"
                                                              ContentSource="Icon"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Path x:Name="GlyphPanel"
                                                  Margin="4,0,6,0"
                                                  Visibility="Collapsed"
                                                  VerticalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="1.2"
                                                  Data="M0,0L7,3 0,6Z"/>
                                            <ContentPresenter ContentSource="Header"
                                                              Margin="{TemplateBinding Padding}"
                                                              RecognizesAccessKey="True"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Popup x:Name="PART_Popup"
                                                   Placement="Bottom"
                                                   HorizontalOffset="-1"
                                                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                                   Focusable="false"
                                                   PopupAnimation="Fade"
                                                   AllowsTransparency="true">
                                                <Border Name="Shdw"
                                                        Background="Transparent">
                                                    <Border Background="{StaticResource NoesisBgBrush}"
                                                            BorderBrush="{StaticResource NoesisBdBrush}"
                                                            BorderThickness="1">
                                                        <Grid Grid.IsSharedSizeScope="true">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition MinWidth="24"
                                                                                  Width="Auto"
                                                                                  SharedSizeGroup="MenuItemIconColumnGroup"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <Rectangle Fill="{StaticResource NoesisBgBrush}"
                                                                       Margin="0,1"/>
                                                            <Rectangle Fill="{StaticResource NoesisBgBrush}"
                                                                       Grid.ColumnSpan="2"
                                                                       Margin="0,-1,0,0"
                                                                       VerticalAlignment="Top"
                                                                       HorizontalAlignment="Left"
                                                                       Height="1"
                                                                       Width="{Binding ElementName=Header, Path=ActualWidth}" />
                                                            <ScrollViewer CanContentScroll="true"
                                                                          Grid.ColumnSpan="2">
                                                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                                KeyboardNavigation.TabNavigation="Cycle"
                                                                                Margin="0,0,0,1"
                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            </ScrollViewer>
                                                        </Grid>
                                                    </Border>
                                                </Border>
                                            </Popup>
                                        </DockPanel>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                            <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None"/>
                                        </Trigger>
                                        <Trigger Property="Icon" Value="{x:Null}">
                                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsHighlighted" Value="true">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource NoesisBgBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsSubmenuOpen" Value="true">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource NoesisBgBrush}"/>
                                        </Trigger>
                                        <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                                             <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5"/>
                                             <Setter TargetName="Shdw" Property="SnapsToDevicePixels" Value="true"/>
                                             <Setter TargetName="Shdw" Property="Background" Value="#71000000"/>
                                         </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="Role" Value="TopLevelItem">
                        <Setter Property="Padding" Value="6,1,7,1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <Border Name="Border"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="true">
                                        <DockPanel>
                                            <ContentPresenter x:Name="Icon"
                                                              Margin="4,0,6,0"
                                                              VerticalAlignment="Center"
                                                              ContentSource="Icon"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Path x:Name="GlyphPanel"
                                                  Margin="4,0,6,0"
                                                  Visibility="Collapsed"
                                                  VerticalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="1.2"
                                                  Data="M0,0L7,3 0,6Z"/>
                                            <ContentPresenter ContentSource="Header"
                                                              Margin="{TemplateBinding Padding}"
                                                              RecognizesAccessKey="True"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </DockPanel>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Icon" Value="{x:Null}">
                                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsHighlighted" Value="true">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource NoesisBgBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter Property="DockPanel.Dock" Value="Top"/>
                        <Setter Property="Padding" Value="8,1,8,1"/>
                        <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <Grid Background="Transparent" SnapsToDevicePixels="true">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                            <ColumnDefinition Width="14"/>
                                        </Grid.ColumnDefinitions>
                                        <Border Name="Border"
                                                Background="{TemplateBinding Background}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                Grid.ColumnSpan="4"
                                                Margin="1,0"/>
                                        <ContentPresenter x:Name="Icon"
                                                          Margin="3"
                                                          VerticalAlignment="Center"
                                                          ContentSource="Icon"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        <Border Name="GlyphPanel"
                                                Margin="0,1"
                                                Width="20"
                                                Visibility="Hidden"
                                                BorderBrush="{StaticResource NoesisBdBrush}"
                                                Background="{StaticResource NoesisBgBrush}"
                                                BorderThickness="1">
                                            <Path VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  FlowDirection="LeftToRight"
                                                  Stroke="{TemplateBinding Foreground}"
                                                  StrokeThickness="1.2"
                                                  Data="M0,0L7,3 0,6Z"/>
                                        </Border>
                                        <ContentPresenter Grid.Column="1"
                                                          ContentSource="Header"
                                                          Margin="{TemplateBinding Padding}"
                                                          RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        <Path Grid.Column="3"
                                              DockPanel.Dock="Right"
                                              VerticalAlignment="Center"
                                              Margin="4,0,6,0"
                                              Fill="{TemplateBinding Foreground}"
                                              Data="M0,0L7,3 0,6Z"/>
                                        <Popup x:Name="PART_Popup"
                                               Placement="Right"
                                               IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                               Focusable="false"
                                               PopupAnimation="Fade"
                                               AllowsTransparency="true">
                                            <Border Name="Shdw"
                                                    Background="Transparent">
                                                <Border Background="{StaticResource NoesisBdBrush}"
                                                        BorderBrush="{StaticResource NoesisBgBrush}"
                                                        BorderThickness="1"
                                                        Grid.IsSharedSizeScope="true">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition MinWidth="24"
                                                                              Width="Auto"
                                                                              SharedSizeGroup="MenuItemIconColumnGroup"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>
                                                        <Rectangle Fill="{StaticResource NoesisBgBrush}"
                                                                   Margin="0,1"/>
                                                        <ScrollViewer CanContentScroll="true"
                                                                      Grid.ColumnSpan="2">
                                                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                            KeyboardNavigation.TabNavigation="Cycle"
                                                                            Margin="0,0,0,1"
                                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                        </ScrollViewer>
                                                    </Grid>
                                                </Border>
                                            </Border>
                                        </Popup>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                            <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None"/>
                                        </Trigger>
                                        <Trigger Property="Icon" Value="{x:Null}">
                                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="IsHighlighted" Value="true">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource NoesisBgBrush}"/>
                                            <Setter TargetName="GlyphPanel" Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
                                            <Setter TargetName="GlyphPanel" Property="Background" Value="{StaticResource NoesisFgBrush}"/>
                                        </Trigger>
                                        <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                                             <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5"/>
                                             <Setter TargetName="Shdw" Property="SnapsToDevicePixels" Value="true"/>
                                             <Setter TargetName="Shdw" Property="Background" Value="#71000000"/>
                                         </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>
	
    <!-- ToolBarOverflowButton Style -->
    <Style x:Key="NoesisToolBarOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid UseLayoutRounding="True">
                		<VisualStateManager.VisualStateGroups>
                			<VisualStateGroup x:Name="CommonStates">
                				<VisualStateGroup.Transitions>
                					<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
                					<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
                				</VisualStateGroup.Transitions>
                				<VisualState x:Name="Normal"/>
                				<VisualState x:Name="MouseOver">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ArrowFillHighlight">
                							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="BackgroundOver">
                							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
                							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Pressed"/>
                				<VisualState x:Name="Disabled"/>
                			</VisualStateGroup>
                		</VisualStateManager.VisualStateGroups>
                		<Border x:Name="BackgroundNormal" Background="Transparent" CornerRadius="0,1,1,0"/>
                		<Border x:Name="BackgroundOver" Background="{StaticResource NoesisNormalBgBrush}" Opacity="0" CornerRadius="0,1,1,0"/>
                		<Border x:Name="Highlight" BorderBrush="{StaticResource NoesisHighlightBgBrush}" BorderThickness="1" Opacity="0" CornerRadius="0,0.5,0.5,0"/>
                		<Grid x:Name="Arrow">
                			<Path x:Name="ArrowStroke" Data="M0,0L6,0 6,1 0,1z M1,4L5,4 3,9z" HorizontalAlignment="Center" VerticalAlignment="Bottom" UseLayoutRounding="False" Margin="2,0,2,4" StrokeThickness="2" Stretch="Fill" Width="8" Height="11" Stroke="{DynamicResource NoesisGlyphShadowBdBrush}"/>
                			<Path x:Name="ArrowStrokeDisabled" Data="M0,0L6,0 6,1 0,1z M1,4L5,4 3,9z" HorizontalAlignment="Center" VerticalAlignment="Bottom" UseLayoutRounding="False" Margin="2,0,2,4" StrokeThickness="2" Stretch="Fill" Width="8" Height="11" Stroke="{DynamicResource NoesisDisabledBdBrush}" Visibility="Collapsed"/>
                			<Path x:Name="ArrowFill" Fill="{TemplateBinding BorderBrush}" Data="M0,0L6,0 6,1 0,1z M1,4L5,4 3,9z" HorizontalAlignment="Center" VerticalAlignment="Bottom" UseLayoutRounding="False" Margin="2,0,2,3" Width="6" Height="11"/>
                			<Path x:Name="ArrowFillHighlight" Data="M0,0L6,0 6,1 0,1z M1,4L5,4 3,9z" HorizontalAlignment="Center" VerticalAlignment="Bottom" UseLayoutRounding="False" Margin="2,0,2,3" Width="6" Height="11" Opacity="0" Fill="#33FFFFFF"/>
                			<Path x:Name="ArrowFillDisabled" Fill="{DynamicResource NoesisDisabledBdBrush}" Data="M0,0L6,0 6,1 0,1z M1,4L5,4 3,9z" HorizontalAlignment="Center" VerticalAlignment="Bottom" UseLayoutRounding="False" Margin="2,0,2,3" Width="6" Height="11" Visibility="Collapsed"/>
                		</Grid>
                	</Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
                            <Setter Property="Visibility" TargetName="ArrowStrokeDisabled" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="ArrowFillDisabled" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ToolBarThumb Style -->
    <Style x:Key="NoesisToolBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid UseLayoutRounding="True" Background="Transparent">
                		<StackPanel VerticalAlignment="Center" Margin="0,2">
                			<Rectangle x:Name="Rect1" Fill="{StaticResource NoesisHighlightBgBrush}" StrokeThickness="0" HorizontalAlignment="Center" Width="2" Height="2"/>
                			<Rectangle x:Name="Rect2" Fill="{StaticResource NoesisHighlightBgBrush}" StrokeThickness="0" HorizontalAlignment="Center" Width="2" Height="2" Margin="0,2,0,0"/>
                			<Rectangle x:Name="Rect3" Fill="{StaticResource NoesisHighlightBgBrush}" StrokeThickness="0" HorizontalAlignment="Center" Width="2" Height="2" Margin="0,2,0,0"/>
                			<Rectangle x:Name="Rect4" Fill="{StaticResource NoesisHighlightBgBrush}" StrokeThickness="0" HorizontalAlignment="Center" Width="2" Height="2" Margin="0,2,0,0"/>
                		</StackPanel>
                	</Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="SizeAll"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="Rect1" Value="{StaticResource NoesisDisabledBdBrush}"/>
							<Setter Property="Fill" TargetName="Rect2" Value="{StaticResource NoesisDisabledBdBrush}"/>
							<Setter Property="Fill" TargetName="Rect3" Value="{StaticResource NoesisDisabledBdBrush}"/>
							<Setter Property="Fill" TargetName="Rect4" Value="{StaticResource NoesisDisabledBdBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ToolBar Style -->
	<ControlTemplate x:Key="NoesisToolBarTemplate" TargetType="{x:Type ToolBar}">
		<Grid UseLayoutRounding="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
			<Border x:Name="Base" Background="{TemplateBinding Background}" BorderBrush="{StaticResource NoesisGlyphShadowBdBrush}" BorderThickness="1" CornerRadius="1" Grid.ColumnSpan="2"/>
			<Border x:Name="BackgroundNormal" BorderThickness="1" Background="{StaticResource NoesisNormalBgBrush}" Opacity="0.5" CornerRadius="1" Grid.ColumnSpan="2"/>
			<Border x:Name="BaseDisabled" BorderBrush="{StaticResource NoesisDisabledBdBrush}" BorderThickness="1" Background="{StaticResource NoesisDisabledBdBrush}" Visibility="Collapsed" CornerRadius="1" Grid.ColumnSpan="2"/>
			<DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
				<Thumb x:Name="ToolBarThumb" Style="{StaticResource NoesisToolBarThumbStyle}" Width="8" Margin="1,0,0,0"/>
				<Grid x:Name="ToolBarHeader" Margin="0,1">
					<Border x:Name="HeaderBackground" Background="{StaticResource NoesisIndentBgBrush}" BorderThickness="1,0" Opacity="0.25" BorderBrush="{StaticResource NoesisGlyphShadowBdBrush}"/>
					<ContentPresenter HorizontalAlignment="Center" Margin="4,0" VerticalAlignment="Center" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" ContentSource="Header" Opacity="0.5"/>
				</Grid>
				<Grid x:Name="ToolBarPanel" Margin="0,2">
					<ToolBarPanel x:Name="PART_ToolBarPanel" Margin="{TemplateBinding Padding}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" IsItemsHost="True" d:LayoutOverrides="Width"/>
				</Grid>
			</DockPanel>
			<Grid x:Name="OverflowGrid" Visibility="Collapsed" HorizontalAlignment="Right" Margin="1" Grid.Column="1">
				<Border x:Name="OverflowBorder" BorderBrush="{StaticResource NoesisGlyphShadowBdBrush}" BorderThickness="1,0,0,0" Margin="-1,0,0,0"/>
				<Border x:Name="OverflowBorderDisabled" BorderBrush="{DynamicResource NoesisDisabledBdBrush}" BorderThickness="1,0,0,0" Margin="-1,0,0,0" Visibility="Collapsed"/>
				<ToggleButton x:Name="OverflowButton" FocusVisualStyle="{x:Null}" Style="{StaticResource NoesisToolBarOverflowButtonStyle}" ClickMode="Press" IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{TemplateBinding BorderBrush}"/>
				<Popup x:Name="OverflowPopup" IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" StaysOpen="True" Focusable="false" AllowsTransparency="True">
					<Grid UseLayoutRounding="True">
						<Border x:Name="DropDownShadow1" CornerRadius="3,3,4,4" BorderBrush="{StaticResource NoesisPopupShadow1Brush}" BorderThickness="1"/>
						<Border x:Name="DropDownShadow2" CornerRadius="3" Margin="1" BorderBrush="{StaticResource NoesisPopupShadow2Brush}" BorderThickness="0,0,0,1"/>
						<Border x:Name="DropDownBorderBackground" Background="{TemplateBinding Background}" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2" Opacity="0.95"/>
						<Border x:Name="DropDownBorderStroke" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2"/>
						<Border x:Name="DropDownBorderNormal" BorderBrush="{StaticResource NoesisNormalBdBrush}" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2"/>
						<Border x:Name="DropDownBorderShadow" BorderBrush="#59000000" BorderThickness="1" CornerRadius="2" Margin="1,1,1,2"/>
						<Border x:Name="DropDownBorderHighlight" BorderBrush="#0CFFFFFF" BorderThickness="1" CornerRadius="1" Margin="2,2,2,3"/>
						<ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" FocusVisualStyle="{x:Null}" Margin="4,4,4,5" Focusable="True" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle" WrapWidth="200" HorizontalAlignment="Right"/> 
					</Grid>
				</Popup>
			</Grid>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsOverflowOpen" Value="True">
				<Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="False"/>
			</Trigger>
			<Trigger Property="HasOverflowItems" Value="True">
				<Setter Property="Visibility" TargetName="OverflowGrid" Value="Visible"/>
			</Trigger>
			<Trigger Property="Header" Value="{x:Null}">
				<Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="ToolBarTray.IsLocked" Value="True">
				<Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
				<Setter Property="Visibility" TargetName="BaseDisabled" Value="Visible"/>
				<Setter Property="Visibility" TargetName="OverflowBorderDisabled" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
    <Style TargetType="{x:Type ToolBar}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
		<Setter Property="Padding" Value="4,1"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
        <Setter Property="Template" Value="{StaticResource NoesisToolBarTemplate}"/>
    </Style>
    
    
    <!-- ========== LIST VIEW ============== -->

    <!-- Listview ScrollViewer style -->
    
    <Style x:Key="NoesisGridViewScrollViewerStyleKey" TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Background" Value="{DynamicResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource NoesisBdBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource NoesisFgBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer
                                DockPanel.Dock="Top"
                                Focusable="false"
                                HorizontalScrollBarVisibility="Hidden"
                                VerticalScrollBarVisibility="Hidden">
                                <GridViewHeaderRowPresenter
                                    AllowsColumnReorder="{Binding View.AllowsColumnReorder, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}"
                                    ColumnHeaderContainerStyle="{Binding View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}"
                                    ColumnHeaderContextMenu="{Binding View.ColumnHeaderContextMenu, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}"
                                    ColumnHeaderTemplate="{Binding View.ColumnHeaderTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}"
                                    ColumnHeaderTemplateSelector="{Binding View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}"
                                    ColumnHeaderToolTip="{Binding View.ColumnHeaderToolTip, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}"
                                    Columns="{Binding View.Columns, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}"
                                    UseLayoutRounding="{TemplateBinding UseLayoutRounding}"/>
                            </ScrollViewer>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                KeyboardNavigation.DirectionalNavigation="Local"
                                CanContentScroll="{TemplateBinding CanContentScroll}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </DockPanel>
                        <ScrollBar
                            x:Name="PART_HorizontalScrollBar"
                            Grid.Row="1"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Orientation="Horizontal"
                            Value="{TemplateBinding HorizontalOffset}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        <ScrollBar
                            x:Name="PART_VerticalScrollBar"
                            Grid.Column="1"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            Value="{TemplateBinding VerticalOffset}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ListView Thumb style -->
    
    <Style x:Key="NoesisGridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Background="Transparent" UseLayoutRounding="True" Width="10" Margin="0,0,-5,0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- GridViewColumnHeader style -->
    
    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="8,3,8,3"/>
        <Setter Property="Foreground" Value="{DynamicResource NoesisFgBrush}"/>
		<Setter Property="Background" Value="{DynamicResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource NoesisBdBrush}"/>
		<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid UseLayoutRounding="True">
                		<VisualStateManager.VisualStateGroups>
                			<VisualStateGroup x:Name="CommonStates">
                				<VisualStateGroup.Transitions>
                					<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
                					<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
                					<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="MouseOver"/>
                					<VisualTransition From="Pressed" GeneratedDuration="0:0:0.1" To="Normal"/>
                				</VisualStateGroup.Transitions>
                				<VisualState x:Name="Normal">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderNormal">
                							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="MouseOver">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderOver">
                							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderTint">
                							<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Pressed">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderPress">
                							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                						<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="HeaderContentGroup">
                							<EasingThicknessKeyFrame KeyTime="0" Value="1,1,0,0"/>
                						</ThicknessAnimationUsingKeyFrames>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HeaderTint">
                							<EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Disabled"/>
                			</VisualStateGroup>
                		</VisualStateManager.VisualStateGroups>
                		<Border
                			x:Name="HeaderBase"
                			Background="{TemplateBinding Background}"
                			BorderBrush="{TemplateBinding BorderBrush}"
                			BorderThickness="0,0,0,1" Margin="0,0,1,0"/>
                		<Border x:Name="HeaderTint" BorderThickness="0,0,0,1" Background="{TemplateBinding BorderBrush}" Opacity="0.35" BorderBrush="Black" Margin="0,0,1,0"/>
                		<Border x:Name="HeaderTintNormal" BorderThickness="0,0,0,1" Background="{DynamicResource NoesisNormalBdBrush}" Opacity="0.35" BorderBrush="{DynamicResource NoesisNormalBdBrush}" Margin="0,0,1,0"/>
                		<Border x:Name="HeaderNormal" BorderThickness="0,0,0,1" Background="{DynamicResource NoesisNormalBgBrush}" BorderBrush="{DynamicResource NoesisShadowBdBrush}" Margin="0,0,1,0" Opacity="0"/>
                		<Border x:Name="HeaderOver" BorderThickness="0,0,0,1" Background="{DynamicResource NoesisOverBgBrush}" BorderBrush="{DynamicResource NoesisShadowBdBrush}" Margin="0,0,1,0" Opacity="0"/>
                		<Border x:Name="HeaderPress" BorderThickness="0,0,0,1" Background="{DynamicResource NoesisPressBgBrush}" BorderBrush="{DynamicResource NoesisShadowBdBrush}" Margin="0,0,1,0" Opacity="0"/>
                		<Border x:Name="Highlight" BorderThickness="1" BorderBrush="{DynamicResource NoesisHighlightBgBrush}" Margin="0,0,1,1"/>
                		<Border
                			x:Name="HeaderDisabled"
                			Background="{DynamicResource NoesisDisabledBgBrush}" Visibility="Collapsed"/>
                		<Grid x:Name="HeaderContentGroup" Margin="0,0,1,1">
                			<ContentPresenter
                				x:Name="HeaderContent"
                				RecognizesAccessKey="True"
                				Margin="{TemplateBinding Padding}"
                				HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                				VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                				UseLayoutRounding="{TemplateBinding UseLayoutRounding}"/>
                		<Thumb
                			x:Name="PART_HeaderGripper"
                			HorizontalAlignment="Right"
                			Style="{StaticResource NoesisGridViewColumnHeaderGripper}"/>
                		</Grid>
                	</Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
                            <Setter Property="Visibility" TargetName="HeaderDisabled" Value="Visible"/>
                            <Setter Property="IsEnabled" TargetName="PART_HeaderGripper" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role" Value="Floating">
                <Setter Property="Opacity" Value="0.7"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Canvas x:Name="PART_FloatingHeaderCanvas">
                                <Grid Height="{TemplateBinding ActualHeight}" Width="{TemplateBinding ActualWidth}">
                                	<Border
                                		x:Name="HeaderBlack"
                                		Background="Black" Margin="0" BorderThickness="0,0,0,1"/>
                                	<Border x:Name="HeaderTint" BorderThickness="0,0,0,1" Background="{TemplateBinding BorderBrush}" Opacity="0.35" Margin="0"/>
                                	<Border x:Name="HeaderTintNormal" BorderThickness="0,0,0,1" Background="{DynamicResource NoesisNormalBdBrush}" Opacity="0.35" Margin="0"/>
                                	<Border x:Name="HeaderNormal" BorderThickness="0,0,0,1" Background="{DynamicResource NoesisNormalBgBrush}" Margin="0"/>
                                	<Border x:Name="Highlight" BorderThickness="1" BorderBrush="{DynamicResource NoesisHighlightBgBrush}" d:LayoutOverrides="Width, Height" Margin="0,0,0,1" Opacity="0.5"/>
                                </Grid>
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role" Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Grid>
                            	<Border
                            		x:Name="HeaderBase"
                            		Background="{TemplateBinding Background}"
                            		BorderBrush="{TemplateBinding BorderBrush}"
                            		BorderThickness="0,0,0,1"/>
                            	<Border x:Name="HeaderTint" BorderThickness="0,0,0,1" Background="{TemplateBinding BorderBrush}" Opacity="0.35" BorderBrush="Black"/>
                            	<Border x:Name="HeaderTintNormal" BorderThickness="0,0,0,1" Background="#B2000000" Opacity="0.35" BorderBrush="#B2000000"/>
                            	<Border x:Name="HeaderNormal" BorderThickness="0,0,0,1" Background="{DynamicResource NoesisNormalBgBrush}" BorderBrush="{DynamicResource NoesisShadowBdBrush}"/>
                            	<Border x:Name="HeaderDisabled" Background="{DynamicResource NoesisDisabledBgBrush}" Visibility="Collapsed"/>
                            </Grid>
                        	<ControlTemplate.Triggers>
                        		<Trigger Property="IsEnabled" Value="False">
                        			<Setter Property="Visibility" TargetName="HeaderDisabled" Value="Visible"/>
                        			<Setter Property="Visibility" TargetName="HeaderNormal" Value="Collapsed"/>
                        		</Trigger>
                        	</ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- ListView style -->
    
    <Style TargetType="{x:Type ListView}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{DynamicResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource NoesisBdBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource NoesisFgBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Grid UseLayoutRounding="True">
                    	<Border x:Name="Indent" BorderThickness="1" CornerRadius="2" BorderBrush="{StaticResource NoesisIndentBdBrush}" Background="{TemplateBinding Background}"/>
						<Border x:Name="BackgroundShadow" BorderThickness="1" CornerRadius="2" Background="{StaticResource NoesisNormalBgBrush}" Opacity="0.2"/>
						<Border x:Name="BackgroundDisabled" BorderThickness="1" CornerRadius="2" Background="{StaticResource NoesisDisabledBdBrush}" Visibility="Collapsed"/>
						<Border x:Name="Border" BorderThickness="1" CornerRadius="1" Margin="1" BorderBrush="{TemplateBinding BorderBrush}"/>
						<Border x:Name="BorderNormal" BorderThickness="1" CornerRadius="1" Margin="1" BorderBrush="{StaticResource NoesisNormalBdBrush}"/>
						<Border x:Name="BorderShadow" BorderThickness="1" CornerRadius="1" Margin="1" BorderBrush="{StaticResource NoesisShadowBdBrush}"/>
						<Border x:Name="BorderDisabled" BorderThickness="1" CornerRadius="1" Margin="1" BorderBrush="{StaticResource NoesisDisabledBdBrush}" Visibility="Collapsed"/>
						<ScrollViewer Margin="2" Focusable="false" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="true"
								Style="{StaticResource NoesisGridViewScrollViewerStyleKey}">
							<ItemsPresenter Margin="{TemplateBinding Padding}"/>
						</ScrollViewer>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Visibility" TargetName="BackgroundDisabled" Value="Visible"/>
							<Setter Property="Visibility" TargetName="BorderDisabled" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
					</ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- ListViewItem style -->
    
    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource NoesisFgBrush}"/>
        <Setter Property="Background" Value="{StaticResource NoesisBgBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NoesisBdBrush}"/>
		<Setter Property="BorderThickness" Value="0,0,0,1"/>
		<Setter Property="Padding" Value="2,3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid UseLayoutRounding="True">
                		<VisualStateManager.VisualStateGroups>
                			<VisualStateGroup x:Name="CommonStates">
                				<VisualStateGroup.Transitions>
                					<VisualTransition From="Normal" GeneratedDuration="0:0:0.05" To="MouseOver"/>
                					<VisualTransition From="MouseOver" GeneratedDuration="0:0:0.1" To="Normal"/>
                				</VisualStateGroup.Transitions>
                				<VisualState x:Name="Normal"/>
                				<VisualState x:Name="MouseOver">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Over">
                							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="Disabled"/>
                			</VisualStateGroup>
                			<VisualStateGroup x:Name="SelectionStates">
                				<VisualStateGroup.Transitions>
                					<VisualTransition GeneratedDuration="0:0:0.1"/>
                				</VisualStateGroup.Transitions>
                				<VisualState x:Name="Unselected"/>
                				<VisualState x:Name="Selected">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Select">
                							<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                				<VisualState x:Name="SelectedUnfocused">
                					<Storyboard>
                						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Select">
                							<EasingDoubleKeyFrame KeyTime="0" Value="0.75"/>
                						</DoubleAnimationUsingKeyFrames>
                					</Storyboard>
                				</VisualState>
                			</VisualStateGroup>
                		</VisualStateManager.VisualStateGroups>
                		<Border x:Name="Base" Background="Transparent" BorderThickness="0,0,0,1"/>
                		<Border x:Name="Line" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{DynamicResource NoesisGlyphShadowBdBrush}" Opacity="0.15"/>
                		<Grid x:Name="Over" Margin="0,0,0,1" Opacity="0">
                			<Border x:Name="OverStroke" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Opacity="0.25" CornerRadius="1"/>
                			<Border x:Name="OverBackground" Background="{TemplateBinding BorderBrush}" Opacity="0.1" BorderThickness="1" CornerRadius="1"/>
                		</Grid>
                		<Grid x:Name="Select" Margin="0,0,0,1" Opacity="0">
                			<Border x:Name="SelectStroke" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Opacity="0.75" CornerRadius="1"/>
                			<Border x:Name="SelectBackground" Background="{TemplateBinding BorderBrush}" Opacity="0.5" BorderThickness="1" CornerRadius="1"/>
                			<Border x:Name="SelectShadow" Background="{DynamicResource NoesisNormalBgBrush}" Opacity="0.25" BorderThickness="1" CornerRadius="1"/>
							<Border x:Name="SelectDisabled" Background="{StaticResource NoesisDisabledBdBrush}" CornerRadius="1" Visibility="Collapsed"/>
                		</Grid>
                		<GridViewRowPresenter x:Name="RowPresenter" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                	</Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource NoesisDisabledFgBrush}"/>
							<Setter Property="Visibility" TargetName="SelectDisabled" Value="Visible"/>
                            <Setter Property="Opacity" TargetName="RowPresenter" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Color x:Key="WindowBackgroundColor">#FF3A4046</Color>
	
</ResourceDictionary>