/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class Recti : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public Recti(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(Recti obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Recti() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          if (Noesis.Kernel.IsInitialized()) { NoesisGUI_PINVOKE.delete_Recti(swigCPtr);}
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public int x {
    set {
      NoesisGUI_PINVOKE.Recti_x_set(swigCPtr, value);
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
    } 
    get {
      int ret = NoesisGUI_PINVOKE.Recti_x_get(swigCPtr);
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    } 
  }

  public int y {
    set {
      NoesisGUI_PINVOKE.Recti_y_set(swigCPtr, value);
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
    } 
    get {
      int ret = NoesisGUI_PINVOKE.Recti_y_get(swigCPtr);
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    } 
  }

  public int width {
    set {
      NoesisGUI_PINVOKE.Recti_width_set(swigCPtr, value);
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
    } 
    get {
      int ret = NoesisGUI_PINVOKE.Recti_width_get(swigCPtr);
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    } 
  }

  public int height {
    set {
      NoesisGUI_PINVOKE.Recti_height_set(swigCPtr, value);
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
    } 
    get {
      int ret = NoesisGUI_PINVOKE.Recti_height_get(swigCPtr);
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    } 
  }

  public Recti(int left, int top, int right, int bottom) : this(NoesisGUI_PINVOKE.new_Recti__SWIG_0(left, top, right, bottom), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public Recti(int left, int top, int right) : this(NoesisGUI_PINVOKE.new_Recti__SWIG_1(left, top, right), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public Recti(int left, int top) : this(NoesisGUI_PINVOKE.new_Recti__SWIG_2(left, top), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public Recti(int left) : this(NoesisGUI_PINVOKE.new_Recti__SWIG_3(left), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public Recti() : this(NoesisGUI_PINVOKE.new_Recti__SWIG_4(), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public Recti(Sizei size) : this(NoesisGUI_PINVOKE.new_Recti__SWIG_5(Sizei.getCPtr(size)), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public Recti(Pointi location, Sizei size) : this(NoesisGUI_PINVOKE.new_Recti__SWIG_6(Pointi.getCPtr(location), Sizei.getCPtr(size)), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public Recti(Recti rect) : this(NoesisGUI_PINVOKE.new_Recti__SWIG_7(Recti.getCPtr(rect)), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public Pointi GetLocation() {
    Pointi ret = new Pointi(NoesisGUI_PINVOKE.Recti_GetLocation(swigCPtr), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public void SetLocation(Pointi location) {
    NoesisGUI_PINVOKE.Recti_SetLocation(swigCPtr, Pointi.getCPtr(location));
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public Sizei GetSize() {
    Sizei ret = new Sizei(NoesisGUI_PINVOKE.Recti_GetSize(swigCPtr), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public void SetSize(Sizei size) {
    NoesisGUI_PINVOKE.Recti_SetSize(swigCPtr, Sizei.getCPtr(size));
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public int GetLeft() {
    int ret = NoesisGUI_PINVOKE.Recti_GetLeft(swigCPtr);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public int GetRight() {
    int ret = NoesisGUI_PINVOKE.Recti_GetRight(swigCPtr);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public int GetTop() {
    int ret = NoesisGUI_PINVOKE.Recti_GetTop(swigCPtr);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public int GetBottom() {
    int ret = NoesisGUI_PINVOKE.Recti_GetBottom(swigCPtr);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public Pointi GetTopLeft() {
    Pointi ret = new Pointi(NoesisGUI_PINVOKE.Recti_GetTopLeft(swigCPtr), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public Pointi GetTopRight() {
    Pointi ret = new Pointi(NoesisGUI_PINVOKE.Recti_GetTopRight(swigCPtr), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public Pointi GetBottomLeft() {
    Pointi ret = new Pointi(NoesisGUI_PINVOKE.Recti_GetBottomLeft(swigCPtr), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public Pointi GetBottomRight() {
    Pointi ret = new Pointi(NoesisGUI_PINVOKE.Recti_GetBottomRight(swigCPtr), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public bool IsEmpty() {
    bool ret = NoesisGUI_PINVOKE.Recti_IsEmpty(swigCPtr);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public bool Contains(int x, int y) {
    bool ret = NoesisGUI_PINVOKE.Recti_Contains__SWIG_0(swigCPtr, x, y);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public bool Contains(Pointi point) {
    bool ret = NoesisGUI_PINVOKE.Recti_Contains__SWIG_1(swigCPtr, Pointi.getCPtr(point));
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public bool Contains(Recti rect) {
    bool ret = NoesisGUI_PINVOKE.Recti_Contains__SWIG_2(swigCPtr, Recti.getCPtr(rect));
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public void Inflate(int width, int height) {
    NoesisGUI_PINVOKE.Recti_Inflate__SWIG_0(swigCPtr, width, height);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public void Inflate(Sizei size) {
    NoesisGUI_PINVOKE.Recti_Inflate__SWIG_1(swigCPtr, Sizei.getCPtr(size));
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public Recti Intersect(Recti rect) {
    Recti ret = new Recti(NoesisGUI_PINVOKE.Recti_Intersect(swigCPtr, Recti.getCPtr(rect)), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public bool IntersectsWith(Recti rect) {
    bool ret = NoesisGUI_PINVOKE.Recti_IntersectsWith(swigCPtr, Recti.getCPtr(rect));
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public void Offset(Pointi offset) {
    NoesisGUI_PINVOKE.Recti_Offset(swigCPtr, Pointi.getCPtr(offset));
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public void Scale(int scaleX, int scaleY) {
    NoesisGUI_PINVOKE.Recti_Scale(swigCPtr, scaleX, scaleY);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public void Expand(Pointi point) {
    NoesisGUI_PINVOKE.Recti_Expand__SWIG_0(swigCPtr, Pointi.getCPtr(point));
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public void Expand(Recti rect) {
    NoesisGUI_PINVOKE.Recti_Expand__SWIG_1(swigCPtr, Recti.getCPtr(rect));
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public static Recti Parse(string str) {
    Recti ret = new Recti(NoesisGUI_PINVOKE.Recti_Parse(str), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static bool TryParse(string str, Recti result) {
    bool ret = NoesisGUI_PINVOKE.Recti_TryParse(str, Recti.getCPtr(result));
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Recti Empty() {
    Recti ret = new Recti(NoesisGUI_PINVOKE.Recti_Empty(), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Recti Infinite() {
    Recti ret = new Recti(NoesisGUI_PINVOKE.Recti_Infinite(), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

}

}

