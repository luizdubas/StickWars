/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class NoesisGUI_PINVOKE {

  public class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

#if !UNITY_EDITOR

    #if UNITY_IPHONE || UNITY_XBOX360
    [DllImport("__Internal", EntryPoint="SWIGRegisterExceptionCallbacks_NoesisGUI_")]
    #else
    [DllImport("Noesis", EntryPoint="SWIGRegisterExceptionCallbacks_NoesisGUI_")]
    #endif
    public static extern void SWIGRegisterExceptionCallbacks_NoesisGUI_(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    #if UNITY_IPHONE || UNITY_XBOX360
    [DllImport("__Internal", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_NoesisGUI_")]
    #else
    [DllImport("Noesis", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_NoesisGUI_")]
    #endif
    public static extern void SWIGRegisterExceptionArgumentCallbacks_NoesisGUI_(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

#else

    public delegate void SWIGRegisterExceptionCallbacks_NoesisGUI_Delegate(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);
    public static SWIGRegisterExceptionCallbacks_NoesisGUI_Delegate _SWIGRegisterExceptionCallbacks_NoesisGUI_;
    public static void SWIGRegisterExceptionCallbacks_NoesisGUI_(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate)
    {
        _SWIGRegisterExceptionCallbacks_NoesisGUI_(applicationDelegate, arithmeticDelegate, divideByZeroDelegate, indexOutOfRangeDelegate, invalidCastDelegate, invalidOperationDelegate, ioDelegate, nullReferenceDelegate, outOfMemoryDelegate, overflowDelegate, systemExceptionDelegate);
    }

    public delegate void SWIGRegisterExceptionArgumentCallbacks_NoesisGUI_Delegate(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);
    public static SWIGRegisterExceptionArgumentCallbacks_NoesisGUI_Delegate _SWIGRegisterExceptionArgumentCallbacks_NoesisGUI_;
    public static void SWIGRegisterExceptionArgumentCallbacks_NoesisGUI_(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate)
    {
        _SWIGRegisterExceptionArgumentCallbacks_NoesisGUI_(argumentDelegate, argumentNullDelegate, argumentOutOfRangeDelegate);
    }



#endif



    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentOutOfRangeException(paramName, message));
    }

    public static void InitExtend() {
     SWIGRegisterExceptionCallbacks_NoesisGUI_(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);
    }

    public static void Init() {
      SWIGRegisterExceptionCallbacks_NoesisGUI_(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionArgumentCallbacks_NoesisGUI_(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  public static SWIGExceptionHelper swigExceptionHelper;

  public class SWIGPendingException {
    [ThreadStatic]
    private static Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(Exception e) {
      if (pendingException != null)
        throw new ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(NoesisGUI_PINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static Exception Retrieve() {
      Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(NoesisGUI_PINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  public class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

#if !UNITY_EDITOR

    #if UNITY_IPHONE || UNITY_XBOX360
    [DllImport("__Internal", EntryPoint="SWIGRegisterStringCallback_NoesisGUI_")]
    #else
    [DllImport("Noesis", EntryPoint="SWIGRegisterStringCallback_NoesisGUI_")]
    #endif
    public static extern void SWIGRegisterStringCallback_NoesisGUI_(SWIGStringDelegate stringDelegate);

#else

    public delegate void SWIGRegisterStringCallback_NoesisGUI_Delegate(SWIGStringDelegate stringDelegate);
    public static SWIGRegisterStringCallback_NoesisGUI_Delegate _SWIGRegisterStringCallback_NoesisGUI_;
    public static void SWIGRegisterStringCallback_NoesisGUI_(SWIGStringDelegate stringDelegate)
    {
        _SWIGRegisterStringCallback_NoesisGUI_(stringDelegate);
    }



#endif



    static string CreateString(string cString) {
      return cString;
    }

    public static void Init() {
      SWIGRegisterStringCallback_NoesisGUI_(stringDelegate);
    }
  }

  static public SWIGStringHelper swigStringHelper;


  static NoesisGUI_PINVOKE() {
  }


#if !UNITY_EDITOR

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_BaseComponent")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_BaseComponent")]
  #endif
  public static extern bool CheckType_BaseComponent(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_SerializableComponent")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_SerializableComponent")]
  #endif
  public static extern bool CheckType_SerializableComponent(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_AdornerDecorator")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_AdornerDecorator")]
  #endif
  public static extern bool CheckType_AdornerDecorator(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Animatable")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Animatable")]
  #endif
  public static extern bool CheckType_Animatable(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Application")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Application")]
  #endif
  public static extern bool CheckType_Application(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_AtlasSource")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_AtlasSource")]
  #endif
  public static extern bool CheckType_AtlasSource(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_BaseBinding")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_BaseBinding")]
  #endif
  public static extern bool CheckType_BaseBinding(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_BaseBindingExpression")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_BaseBindingExpression")]
  #endif
  public static extern bool CheckType_BaseBindingExpression(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_BaseButton")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_BaseButton")]
  #endif
  public static extern bool CheckType_BaseButton(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_BaseCommand")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_BaseCommand")]
  #endif
  public static extern bool CheckType_BaseCommand(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_BaseDefinition")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_BaseDefinition")]
  #endif
  public static extern bool CheckType_BaseDefinition(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_BaseDictionary")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_BaseDictionary")]
  #endif
  public static extern bool CheckType_BaseDictionary(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_BaseMenu")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_BaseMenu")]
  #endif
  public static extern bool CheckType_BaseMenu(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_BaseSetter")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_BaseSetter")]
  #endif
  public static extern bool CheckType_BaseSetter(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_BaseTextBox")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_BaseTextBox")]
  #endif
  public static extern bool CheckType_BaseTextBox(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_BaseTrigger")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_BaseTrigger")]
  #endif
  public static extern bool CheckType_BaseTrigger(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_BaseValueConverter")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_BaseValueConverter")]
  #endif
  public static extern bool CheckType_BaseValueConverter(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Binding")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Binding")]
  #endif
  public static extern bool CheckType_Binding(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_BitmapSource")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_BitmapSource")]
  #endif
  public static extern bool CheckType_BitmapSource(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Border")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Border")]
  #endif
  public static extern bool CheckType_Border(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Brush")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Brush")]
  #endif
  public static extern bool CheckType_Brush(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_BulletDecorator")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_BulletDecorator")]
  #endif
  public static extern bool CheckType_BulletDecorator(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Button")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Button")]
  #endif
  public static extern bool CheckType_Button(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Canvas")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Canvas")]
  #endif
  public static extern bool CheckType_Canvas(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_CheckBox")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_CheckBox")]
  #endif
  public static extern bool CheckType_CheckBox(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Collection")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Collection")]
  #endif
  public static extern bool CheckType_Collection(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_CollectionView")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_CollectionView")]
  #endif
  public static extern bool CheckType_CollectionView(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_CollectionViewSource")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_CollectionViewSource")]
  #endif
  public static extern bool CheckType_CollectionViewSource(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ColumnDefinition")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ColumnDefinition")]
  #endif
  public static extern bool CheckType_ColumnDefinition(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_CombinedGeometry")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_CombinedGeometry")]
  #endif
  public static extern bool CheckType_CombinedGeometry(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ComboBox")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ComboBox")]
  #endif
  public static extern bool CheckType_ComboBox(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ComboBoxItem")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ComboBoxItem")]
  #endif
  public static extern bool CheckType_ComboBoxItem(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_CommandBinding")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_CommandBinding")]
  #endif
  public static extern bool CheckType_CommandBinding(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_CompositeTransform")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_CompositeTransform")]
  #endif
  public static extern bool CheckType_CompositeTransform(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Condition")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Condition")]
  #endif
  public static extern bool CheckType_Condition(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ContentControl")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ContentControl")]
  #endif
  public static extern bool CheckType_ContentControl(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ContentPresenter")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ContentPresenter")]
  #endif
  public static extern bool CheckType_ContentPresenter(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ContextMenu")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ContextMenu")]
  #endif
  public static extern bool CheckType_ContextMenu(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Control")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Control")]
  #endif
  public static extern bool CheckType_Control(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ControlTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ControlTemplate")]
  #endif
  public static extern bool CheckType_ControlTemplate(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_DashStyle")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_DashStyle")]
  #endif
  public static extern bool CheckType_DashStyle(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_DataTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_DataTemplate")]
  #endif
  public static extern bool CheckType_DataTemplate(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_DataTemplateSelector")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_DataTemplateSelector")]
  #endif
  public static extern bool CheckType_DataTemplateSelector(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Decorator")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Decorator")]
  #endif
  public static extern bool CheckType_Decorator(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Dialog")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Dialog")]
  #endif
  public static extern bool CheckType_Dialog(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_DockPanel")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_DockPanel")]
  #endif
  public static extern bool CheckType_DockPanel(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_DrawingContext")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_DrawingContext")]
  #endif
  public static extern bool CheckType_DrawingContext(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_DropShadowEffect")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_DropShadowEffect")]
  #endif
  public static extern bool CheckType_DropShadowEffect(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Effect")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Effect")]
  #endif
  public static extern bool CheckType_Effect(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Ellipse")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Ellipse")]
  #endif
  public static extern bool CheckType_Ellipse(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_EllipseGeometry")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_EllipseGeometry")]
  #endif
  public static extern bool CheckType_EllipseGeometry(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_EventTrigger")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_EventTrigger")]
  #endif
  public static extern bool CheckType_EventTrigger(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Expander")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Expander")]
  #endif
  public static extern bool CheckType_Expander(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_FormattedText")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_FormattedText")]
  #endif
  public static extern bool CheckType_FormattedText(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_FrameworkElement")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_FrameworkElement")]
  #endif
  public static extern bool CheckType_FrameworkElement(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_FrameworkPropertyMetadata")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_FrameworkPropertyMetadata")]
  #endif
  public static extern bool CheckType_FrameworkPropertyMetadata(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_FrameworkTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_FrameworkTemplate")]
  #endif
  public static extern bool CheckType_FrameworkTemplate(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_FreezableCollection")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_FreezableCollection")]
  #endif
  public static extern bool CheckType_FreezableCollection(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Geometry")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Geometry")]
  #endif
  public static extern bool CheckType_Geometry(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_GeometryGroup")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_GeometryGroup")]
  #endif
  public static extern bool CheckType_GeometryGroup(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_GradientBrush")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_GradientBrush")]
  #endif
  public static extern bool CheckType_GradientBrush(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_GradientStop")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_GradientStop")]
  #endif
  public static extern bool CheckType_GradientStop(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_GradientStopCollection")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_GradientStopCollection")]
  #endif
  public static extern bool CheckType_GradientStopCollection(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Grid")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Grid")]
  #endif
  public static extern bool CheckType_Grid(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_GroupBox")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_GroupBox")]
  #endif
  public static extern bool CheckType_GroupBox(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_HeaderedContentControl")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_HeaderedContentControl")]
  #endif
  public static extern bool CheckType_HeaderedContentControl(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_HeaderedItemsControl")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_HeaderedItemsControl")]
  #endif
  public static extern bool CheckType_HeaderedItemsControl(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_IconSource")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_IconSource")]
  #endif
  public static extern bool CheckType_IconSource(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Image")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Image")]
  #endif
  public static extern bool CheckType_Image(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ImageAtlasList")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ImageAtlasList")]
  #endif
  public static extern bool CheckType_ImageAtlasList(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ImageBrush")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ImageBrush")]
  #endif
  public static extern bool CheckType_ImageBrush(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ImageSource")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ImageSource")]
  #endif
  public static extern bool CheckType_ImageSource(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_InputBinding")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_InputBinding")]
  #endif
  public static extern bool CheckType_InputBinding(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_InputGesture")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_InputGesture")]
  #endif
  public static extern bool CheckType_InputGesture(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ItemCollection")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ItemCollection")]
  #endif
  public static extern bool CheckType_ItemCollection(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ItemsControl")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ItemsControl")]
  #endif
  public static extern bool CheckType_ItemsControl(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ItemsPanelTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ItemsPanelTemplate")]
  #endif
  public static extern bool CheckType_ItemsPanelTemplate(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ItemsPresenter")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ItemsPresenter")]
  #endif
  public static extern bool CheckType_ItemsPresenter(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_KeyBinding")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_KeyBinding")]
  #endif
  public static extern bool CheckType_KeyBinding(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Keyboard")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Keyboard")]
  #endif
  public static extern bool CheckType_Keyboard(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_KeyboardNavigation")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_KeyboardNavigation")]
  #endif
  public static extern bool CheckType_KeyboardNavigation(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_KeyGesture")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_KeyGesture")]
  #endif
  public static extern bool CheckType_KeyGesture(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Label")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Label")]
  #endif
  public static extern bool CheckType_Label(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Line")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Line")]
  #endif
  public static extern bool CheckType_Line(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_LinearGradientBrush")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_LinearGradientBrush")]
  #endif
  public static extern bool CheckType_LinearGradientBrush(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_LineGeometry")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_LineGeometry")]
  #endif
  public static extern bool CheckType_LineGeometry(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ListBox")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ListBox")]
  #endif
  public static extern bool CheckType_ListBox(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ListBoxItem")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ListBoxItem")]
  #endif
  public static extern bool CheckType_ListBoxItem(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Matrix3DProjection")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Matrix3DProjection")]
  #endif
  public static extern bool CheckType_Matrix3DProjection(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_MatrixTransform")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_MatrixTransform")]
  #endif
  public static extern bool CheckType_MatrixTransform(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Menu")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Menu")]
  #endif
  public static extern bool CheckType_Menu(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_MenuItem")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_MenuItem")]
  #endif
  public static extern bool CheckType_MenuItem(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_MessageDialog")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_MessageDialog")]
  #endif
  public static extern bool CheckType_MessageDialog(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Mouse")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Mouse")]
  #endif
  public static extern bool CheckType_Mouse(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_MScorlibBoolean")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_MScorlibBoolean")]
  #endif
  public static extern bool CheckType_MScorlibBoolean(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_MScorlibString")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_MScorlibString")]
  #endif
  public static extern bool CheckType_MScorlibString(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_MultiTrigger")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_MultiTrigger")]
  #endif
  public static extern bool CheckType_MultiTrigger(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_NameScope")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_NameScope")]
  #endif
  public static extern bool CheckType_NameScope(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Page")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Page")]
  #endif
  public static extern bool CheckType_Page(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Panel")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Panel")]
  #endif
  public static extern bool CheckType_Panel(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_PasswordBox")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_PasswordBox")]
  #endif
  public static extern bool CheckType_PasswordBox(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Path")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Path")]
  #endif
  public static extern bool CheckType_Path(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Pen")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Pen")]
  #endif
  public static extern bool CheckType_Pen(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_PlaneProjection")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_PlaneProjection")]
  #endif
  public static extern bool CheckType_PlaneProjection(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Popup")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Popup")]
  #endif
  public static extern bool CheckType_Popup(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ProgressBar")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ProgressBar")]
  #endif
  public static extern bool CheckType_ProgressBar(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Projection")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Projection")]
  #endif
  public static extern bool CheckType_Projection(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_PropertyPath")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_PropertyPath")]
  #endif
  public static extern bool CheckType_PropertyPath(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_RadialGradientBrush")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_RadialGradientBrush")]
  #endif
  public static extern bool CheckType_RadialGradientBrush(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_RadioButton")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_RadioButton")]
  #endif
  public static extern bool CheckType_RadioButton(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_RangeBase")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_RangeBase")]
  #endif
  public static extern bool CheckType_RangeBase(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Rectangle")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Rectangle")]
  #endif
  public static extern bool CheckType_Rectangle(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_RectangleGeometry")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_RectangleGeometry")]
  #endif
  public static extern bool CheckType_RectangleGeometry(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_RelativeSource")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_RelativeSource")]
  #endif
  public static extern bool CheckType_RelativeSource(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_RepeatButton")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_RepeatButton")]
  #endif
  public static extern bool CheckType_RepeatButton(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ResourceDictionary")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ResourceDictionary")]
  #endif
  public static extern bool CheckType_ResourceDictionary(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ResourceKeyString")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ResourceKeyString")]
  #endif
  public static extern bool CheckType_ResourceKeyString(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ResourceKeyType")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ResourceKeyType")]
  #endif
  public static extern bool CheckType_ResourceKeyType(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_RotateTransform")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_RotateTransform")]
  #endif
  public static extern bool CheckType_RotateTransform(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_RoutedCommand")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_RoutedCommand")]
  #endif
  public static extern bool CheckType_RoutedCommand(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_RoutedEvent")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_RoutedEvent")]
  #endif
  public static extern bool CheckType_RoutedEvent(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_RoutedUICommand")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_RoutedUICommand")]
  #endif
  public static extern bool CheckType_RoutedUICommand(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_RowDefinition")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_RowDefinition")]
  #endif
  public static extern bool CheckType_RowDefinition(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ScaleTransform")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ScaleTransform")]
  #endif
  public static extern bool CheckType_ScaleTransform(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ScrollBar")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ScrollBar")]
  #endif
  public static extern bool CheckType_ScrollBar(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ScrollContentPresenter")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ScrollContentPresenter")]
  #endif
  public static extern bool CheckType_ScrollContentPresenter(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ScrollViewer")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ScrollViewer")]
  #endif
  public static extern bool CheckType_ScrollViewer(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Selector")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Selector")]
  #endif
  public static extern bool CheckType_Selector(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Separator")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Separator")]
  #endif
  public static extern bool CheckType_Separator(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Setter")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Setter")]
  #endif
  public static extern bool CheckType_Setter(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Shape")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Shape")]
  #endif
  public static extern bool CheckType_Shape(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_SkewTransform")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_SkewTransform")]
  #endif
  public static extern bool CheckType_SkewTransform(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Slider")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Slider")]
  #endif
  public static extern bool CheckType_Slider(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_SolidColorBrush")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_SolidColorBrush")]
  #endif
  public static extern bool CheckType_SolidColorBrush(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_StackPanel")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_StackPanel")]
  #endif
  public static extern bool CheckType_StackPanel(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_StatusBar")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_StatusBar")]
  #endif
  public static extern bool CheckType_StatusBar(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_StatusBarItem")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_StatusBarItem")]
  #endif
  public static extern bool CheckType_StatusBarItem(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_StreamGeometry")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_StreamGeometry")]
  #endif
  public static extern bool CheckType_StreamGeometry(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Style")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Style")]
  #endif
  public static extern bool CheckType_Style(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_TabControl")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_TabControl")]
  #endif
  public static extern bool CheckType_TabControl(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_TabItem")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_TabItem")]
  #endif
  public static extern bool CheckType_TabItem(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_TabPanel")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_TabPanel")]
  #endif
  public static extern bool CheckType_TabPanel(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_TemplateBinding")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_TemplateBinding")]
  #endif
  public static extern bool CheckType_TemplateBinding(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_TextBlock")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_TextBlock")]
  #endif
  public static extern bool CheckType_TextBlock(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_TextBox")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_TextBox")]
  #endif
  public static extern bool CheckType_TextBox(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_TextureSource")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_TextureSource")]
  #endif
  public static extern bool CheckType_TextureSource(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Thumb")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Thumb")]
  #endif
  public static extern bool CheckType_Thumb(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_TickBar")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_TickBar")]
  #endif
  public static extern bool CheckType_TickBar(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_TileBrush")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_TileBrush")]
  #endif
  public static extern bool CheckType_TileBrush(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ToggleButton")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ToggleButton")]
  #endif
  public static extern bool CheckType_ToggleButton(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ToolBar")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ToolBar")]
  #endif
  public static extern bool CheckType_ToolBar(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ToolBarOverflowPanel")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ToolBarOverflowPanel")]
  #endif
  public static extern bool CheckType_ToolBarOverflowPanel(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ToolBarPanel")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ToolBarPanel")]
  #endif
  public static extern bool CheckType_ToolBarPanel(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ToolBarTray")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ToolBarTray")]
  #endif
  public static extern bool CheckType_ToolBarTray(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ToolTip")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ToolTip")]
  #endif
  public static extern bool CheckType_ToolTip(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Track")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Track")]
  #endif
  public static extern bool CheckType_Track(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_TransformGroup")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_TransformGroup")]
  #endif
  public static extern bool CheckType_TransformGroup(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_TranslateTransform")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_TranslateTransform")]
  #endif
  public static extern bool CheckType_TranslateTransform(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_TreeView")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_TreeView")]
  #endif
  public static extern bool CheckType_TreeView(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_TreeViewItem")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_TreeViewItem")]
  #endif
  public static extern bool CheckType_TreeViewItem(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Trigger")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Trigger")]
  #endif
  public static extern bool CheckType_Trigger(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_TriggerAction")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_TriggerAction")]
  #endif
  public static extern bool CheckType_TriggerAction(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_TriggerCollection")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_TriggerCollection")]
  #endif
  public static extern bool CheckType_TriggerCollection(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_UIElement")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_UIElement")]
  #endif
  public static extern bool CheckType_UIElement(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_UIElementCollection")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_UIElementCollection")]
  #endif
  public static extern bool CheckType_UIElementCollection(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_UIPropertyMetadata")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_UIPropertyMetadata")]
  #endif
  public static extern bool CheckType_UIPropertyMetadata(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_UserControl")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_UserControl")]
  #endif
  public static extern bool CheckType_UserControl(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Viewbox")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Viewbox")]
  #endif
  public static extern bool CheckType_Viewbox(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Visual")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Visual")]
  #endif
  public static extern bool CheckType_Visual(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_VisualBrush")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_VisualBrush")]
  #endif
  public static extern bool CheckType_VisualBrush(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_VisualCollection")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_VisualCollection")]
  #endif
  public static extern bool CheckType_VisualCollection(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Window")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Window")]
  #endif
  public static extern bool CheckType_Window(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_WrapPanel")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_WrapPanel")]
  #endif
  public static extern bool CheckType_WrapPanel(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_BaseExpression")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_BaseExpression")]
  #endif
  public static extern bool CheckType_BaseExpression(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_DependencyObject")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_DependencyObject")]
  #endif
  public static extern bool CheckType_DependencyObject(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_DependencyProperty")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_DependencyProperty")]
  #endif
  public static extern bool CheckType_DependencyProperty(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Freezable")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Freezable")]
  #endif
  public static extern bool CheckType_Freezable(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_PropertyMetadata")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_PropertyMetadata")]
  #endif
  public static extern bool CheckType_PropertyMetadata(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_AnimationTimeline")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_AnimationTimeline")]
  #endif
  public static extern bool CheckType_AnimationTimeline(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_BackEase")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_BackEase")]
  #endif
  public static extern bool CheckType_BackEase(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_BaseAnimation")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_BaseAnimation")]
  #endif
  public static extern bool CheckType_BaseAnimation(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_BeginStoryboard")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_BeginStoryboard")]
  #endif
  public static extern bool CheckType_BeginStoryboard(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_BounceEase")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_BounceEase")]
  #endif
  public static extern bool CheckType_BounceEase(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_CircleEase")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_CircleEase")]
  #endif
  public static extern bool CheckType_CircleEase(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ClockController")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ClockController")]
  #endif
  public static extern bool CheckType_ClockController(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ControllableStoryboardAction")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ControllableStoryboardAction")]
  #endif
  public static extern bool CheckType_ControllableStoryboardAction(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_CubicEase")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_CubicEase")]
  #endif
  public static extern bool CheckType_CubicEase(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_EasingFunctionBase")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_EasingFunctionBase")]
  #endif
  public static extern bool CheckType_EasingFunctionBase(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ElasticEase")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ElasticEase")]
  #endif
  public static extern bool CheckType_ElasticEase(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ExponentialEase")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ExponentialEase")]
  #endif
  public static extern bool CheckType_ExponentialEase(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_KeySpline")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_KeySpline")]
  #endif
  public static extern bool CheckType_KeySpline(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ParallelTimeline")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ParallelTimeline")]
  #endif
  public static extern bool CheckType_ParallelTimeline(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_PauseStoryboard")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_PauseStoryboard")]
  #endif
  public static extern bool CheckType_PauseStoryboard(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_PowerEase")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_PowerEase")]
  #endif
  public static extern bool CheckType_PowerEase(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_QuadraticEase")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_QuadraticEase")]
  #endif
  public static extern bool CheckType_QuadraticEase(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_QuarticEase")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_QuarticEase")]
  #endif
  public static extern bool CheckType_QuarticEase(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_QuinticEase")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_QuinticEase")]
  #endif
  public static extern bool CheckType_QuinticEase(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_ResumeStoryboard")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_ResumeStoryboard")]
  #endif
  public static extern bool CheckType_ResumeStoryboard(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_SineEase")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_SineEase")]
  #endif
  public static extern bool CheckType_SineEase(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_StopStoryboard")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_StopStoryboard")]
  #endif
  public static extern bool CheckType_StopStoryboard(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Storyboard")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Storyboard")]
  #endif
  public static extern bool CheckType_Storyboard(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_Timeline")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_Timeline")]
  #endif
  public static extern bool CheckType_Timeline(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_TimelineGroup")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_TimelineGroup")]
  #endif
  public static extern bool CheckType_TimelineGroup(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_VisualState")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_VisualState")]
  #endif
  public static extern bool CheckType_VisualState(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_VisualStateGroup")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_VisualStateGroup")]
  #endif
  public static extern bool CheckType_VisualStateGroup(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_VisualStateManager")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_VisualStateManager")]
  #endif
  public static extern bool CheckType_VisualStateManager(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckType_VisualTransition")]
  #else
  [DllImport("Noesis", EntryPoint="CheckType_VisualTransition")]
  #endif
  public static extern bool CheckType_VisualTransition(IntPtr baseComponent);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_BaseComponent")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_BaseComponent")]
  #endif
  public static extern void Extend_BaseComponent(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_SerializableComponent")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_SerializableComponent")]
  #endif
  public static extern void Extend_SerializableComponent(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_AdornerDecorator")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_AdornerDecorator")]
  #endif
  public static extern void Extend_AdornerDecorator(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Animatable")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Animatable")]
  #endif
  public static extern void Extend_Animatable(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_AtlasSource")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_AtlasSource")]
  #endif
  public static extern void Extend_AtlasSource(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_BaseButton")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_BaseButton")]
  #endif
  public static extern void Extend_BaseButton(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_BaseCommand")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_BaseCommand")]
  #endif
  public static extern void Extend_BaseCommand(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_BaseDefinition")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_BaseDefinition")]
  #endif
  public static extern void Extend_BaseDefinition(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_BaseDictionary")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_BaseDictionary")]
  #endif
  public static extern void Extend_BaseDictionary(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_BaseMenu")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_BaseMenu")]
  #endif
  public static extern void Extend_BaseMenu(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_BaseSetter")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_BaseSetter")]
  #endif
  public static extern void Extend_BaseSetter(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_BaseTextBox")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_BaseTextBox")]
  #endif
  public static extern void Extend_BaseTextBox(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Binding")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Binding")]
  #endif
  public static extern void Extend_Binding(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_BitmapSource")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_BitmapSource")]
  #endif
  public static extern void Extend_BitmapSource(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Border")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Border")]
  #endif
  public static extern void Extend_Border(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_BulletDecorator")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_BulletDecorator")]
  #endif
  public static extern void Extend_BulletDecorator(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Button")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Button")]
  #endif
  public static extern void Extend_Button(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Canvas")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Canvas")]
  #endif
  public static extern void Extend_Canvas(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_CheckBox")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_CheckBox")]
  #endif
  public static extern void Extend_CheckBox(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Collection")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Collection")]
  #endif
  public static extern void Extend_Collection(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_CollectionView")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_CollectionView")]
  #endif
  public static extern void Extend_CollectionView(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_CollectionViewSource")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_CollectionViewSource")]
  #endif
  public static extern void Extend_CollectionViewSource(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ColumnDefinition")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ColumnDefinition")]
  #endif
  public static extern void Extend_ColumnDefinition(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_CombinedGeometry")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_CombinedGeometry")]
  #endif
  public static extern void Extend_CombinedGeometry(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ComboBox")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ComboBox")]
  #endif
  public static extern void Extend_ComboBox(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ComboBoxItem")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ComboBoxItem")]
  #endif
  public static extern void Extend_ComboBoxItem(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_CommandBinding")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_CommandBinding")]
  #endif
  public static extern void Extend_CommandBinding(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_CompositeTransform")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_CompositeTransform")]
  #endif
  public static extern void Extend_CompositeTransform(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Condition")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Condition")]
  #endif
  public static extern void Extend_Condition(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ContentControl")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ContentControl")]
  #endif
  public static extern void Extend_ContentControl(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ContentPresenter")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ContentPresenter")]
  #endif
  public static extern void Extend_ContentPresenter(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ContextMenu")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ContextMenu")]
  #endif
  public static extern void Extend_ContextMenu(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Control")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Control")]
  #endif
  public static extern void Extend_Control(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ControlTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ControlTemplate")]
  #endif
  public static extern void Extend_ControlTemplate(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_DashStyle")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_DashStyle")]
  #endif
  public static extern void Extend_DashStyle(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_DataTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_DataTemplate")]
  #endif
  public static extern void Extend_DataTemplate(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Decorator")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Decorator")]
  #endif
  public static extern void Extend_Decorator(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Dialog")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Dialog")]
  #endif
  public static extern void Extend_Dialog(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_DockPanel")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_DockPanel")]
  #endif
  public static extern void Extend_DockPanel(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_DrawingContext")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_DrawingContext")]
  #endif
  public static extern void Extend_DrawingContext(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_DropShadowEffect")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_DropShadowEffect")]
  #endif
  public static extern void Extend_DropShadowEffect(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Effect")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Effect")]
  #endif
  public static extern void Extend_Effect(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Ellipse")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Ellipse")]
  #endif
  public static extern void Extend_Ellipse(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_EllipseGeometry")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_EllipseGeometry")]
  #endif
  public static extern void Extend_EllipseGeometry(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_EventTrigger")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_EventTrigger")]
  #endif
  public static extern void Extend_EventTrigger(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Expander")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Expander")]
  #endif
  public static extern void Extend_Expander(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_FormattedText")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_FormattedText")]
  #endif
  public static extern void Extend_FormattedText(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_FrameworkElement")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_FrameworkElement")]
  #endif
  public static extern void Extend_FrameworkElement(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_FrameworkTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_FrameworkTemplate")]
  #endif
  public static extern void Extend_FrameworkTemplate(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_FreezableCollection")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_FreezableCollection")]
  #endif
  public static extern void Extend_FreezableCollection(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_GeometryGroup")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_GeometryGroup")]
  #endif
  public static extern void Extend_GeometryGroup(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_GradientStop")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_GradientStop")]
  #endif
  public static extern void Extend_GradientStop(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_GradientStopCollection")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_GradientStopCollection")]
  #endif
  public static extern void Extend_GradientStopCollection(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Grid")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Grid")]
  #endif
  public static extern void Extend_Grid(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_GroupBox")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_GroupBox")]
  #endif
  public static extern void Extend_GroupBox(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_HeaderedContentControl")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_HeaderedContentControl")]
  #endif
  public static extern void Extend_HeaderedContentControl(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_HeaderedItemsControl")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_HeaderedItemsControl")]
  #endif
  public static extern void Extend_HeaderedItemsControl(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Image")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Image")]
  #endif
  public static extern void Extend_Image(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ImageAtlasList")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ImageAtlasList")]
  #endif
  public static extern void Extend_ImageAtlasList(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ImageBrush")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ImageBrush")]
  #endif
  public static extern void Extend_ImageBrush(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_InputBinding")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_InputBinding")]
  #endif
  public static extern void Extend_InputBinding(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ItemCollection")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ItemCollection")]
  #endif
  public static extern void Extend_ItemCollection(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ItemsControl")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ItemsControl")]
  #endif
  public static extern void Extend_ItemsControl(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ItemsPanelTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ItemsPanelTemplate")]
  #endif
  public static extern void Extend_ItemsPanelTemplate(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ItemsPresenter")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ItemsPresenter")]
  #endif
  public static extern void Extend_ItemsPresenter(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_KeyBinding")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_KeyBinding")]
  #endif
  public static extern void Extend_KeyBinding(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_KeyboardNavigation")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_KeyboardNavigation")]
  #endif
  public static extern void Extend_KeyboardNavigation(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_KeyGesture")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_KeyGesture")]
  #endif
  public static extern void Extend_KeyGesture(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Label")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Label")]
  #endif
  public static extern void Extend_Label(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Line")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Line")]
  #endif
  public static extern void Extend_Line(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_LinearGradientBrush")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_LinearGradientBrush")]
  #endif
  public static extern void Extend_LinearGradientBrush(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_LineGeometry")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_LineGeometry")]
  #endif
  public static extern void Extend_LineGeometry(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ListBox")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ListBox")]
  #endif
  public static extern void Extend_ListBox(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ListBoxItem")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ListBoxItem")]
  #endif
  public static extern void Extend_ListBoxItem(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Matrix3DProjection")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Matrix3DProjection")]
  #endif
  public static extern void Extend_Matrix3DProjection(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_MatrixTransform")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_MatrixTransform")]
  #endif
  public static extern void Extend_MatrixTransform(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Menu")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Menu")]
  #endif
  public static extern void Extend_Menu(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_MenuItem")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_MenuItem")]
  #endif
  public static extern void Extend_MenuItem(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_MessageDialog")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_MessageDialog")]
  #endif
  public static extern void Extend_MessageDialog(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_MultiTrigger")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_MultiTrigger")]
  #endif
  public static extern void Extend_MultiTrigger(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_NameScope")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_NameScope")]
  #endif
  public static extern void Extend_NameScope(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Page")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Page")]
  #endif
  public static extern void Extend_Page(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Panel")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Panel")]
  #endif
  public static extern void Extend_Panel(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_PasswordBox")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_PasswordBox")]
  #endif
  public static extern void Extend_PasswordBox(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Path")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Path")]
  #endif
  public static extern void Extend_Path(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Pen")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Pen")]
  #endif
  public static extern void Extend_Pen(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_PlaneProjection")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_PlaneProjection")]
  #endif
  public static extern void Extend_PlaneProjection(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Popup")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Popup")]
  #endif
  public static extern void Extend_Popup(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ProgressBar")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ProgressBar")]
  #endif
  public static extern void Extend_ProgressBar(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_PropertyPath")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_PropertyPath")]
  #endif
  public static extern void Extend_PropertyPath(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_RadialGradientBrush")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_RadialGradientBrush")]
  #endif
  public static extern void Extend_RadialGradientBrush(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_RadioButton")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_RadioButton")]
  #endif
  public static extern void Extend_RadioButton(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_RangeBase")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_RangeBase")]
  #endif
  public static extern void Extend_RangeBase(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Rectangle")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Rectangle")]
  #endif
  public static extern void Extend_Rectangle(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_RectangleGeometry")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_RectangleGeometry")]
  #endif
  public static extern void Extend_RectangleGeometry(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_RelativeSource")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_RelativeSource")]
  #endif
  public static extern void Extend_RelativeSource(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_RepeatButton")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_RepeatButton")]
  #endif
  public static extern void Extend_RepeatButton(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ResourceDictionary")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ResourceDictionary")]
  #endif
  public static extern void Extend_ResourceDictionary(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ResourceKeyString")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ResourceKeyString")]
  #endif
  public static extern void Extend_ResourceKeyString(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ResourceKeyType")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ResourceKeyType")]
  #endif
  public static extern void Extend_ResourceKeyType(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_RotateTransform")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_RotateTransform")]
  #endif
  public static extern void Extend_RotateTransform(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_RowDefinition")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_RowDefinition")]
  #endif
  public static extern void Extend_RowDefinition(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ScaleTransform")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ScaleTransform")]
  #endif
  public static extern void Extend_ScaleTransform(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ScrollBar")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ScrollBar")]
  #endif
  public static extern void Extend_ScrollBar(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ScrollContentPresenter")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ScrollContentPresenter")]
  #endif
  public static extern void Extend_ScrollContentPresenter(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ScrollViewer")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ScrollViewer")]
  #endif
  public static extern void Extend_ScrollViewer(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Selector")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Selector")]
  #endif
  public static extern void Extend_Selector(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Separator")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Separator")]
  #endif
  public static extern void Extend_Separator(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Setter")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Setter")]
  #endif
  public static extern void Extend_Setter(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Shape")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Shape")]
  #endif
  public static extern void Extend_Shape(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_SkewTransform")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_SkewTransform")]
  #endif
  public static extern void Extend_SkewTransform(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Slider")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Slider")]
  #endif
  public static extern void Extend_Slider(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_SolidColorBrush")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_SolidColorBrush")]
  #endif
  public static extern void Extend_SolidColorBrush(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_StackPanel")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_StackPanel")]
  #endif
  public static extern void Extend_StackPanel(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_StatusBar")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_StatusBar")]
  #endif
  public static extern void Extend_StatusBar(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_StatusBarItem")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_StatusBarItem")]
  #endif
  public static extern void Extend_StatusBarItem(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_StreamGeometry")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_StreamGeometry")]
  #endif
  public static extern void Extend_StreamGeometry(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Style")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Style")]
  #endif
  public static extern void Extend_Style(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_TabControl")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_TabControl")]
  #endif
  public static extern void Extend_TabControl(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_TabItem")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_TabItem")]
  #endif
  public static extern void Extend_TabItem(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_TabPanel")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_TabPanel")]
  #endif
  public static extern void Extend_TabPanel(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_TemplateBinding")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_TemplateBinding")]
  #endif
  public static extern void Extend_TemplateBinding(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_TextBlock")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_TextBlock")]
  #endif
  public static extern void Extend_TextBlock(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_TextBox")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_TextBox")]
  #endif
  public static extern void Extend_TextBox(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_TextureSource")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_TextureSource")]
  #endif
  public static extern void Extend_TextureSource(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Thumb")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Thumb")]
  #endif
  public static extern void Extend_Thumb(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_TickBar")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_TickBar")]
  #endif
  public static extern void Extend_TickBar(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ToggleButton")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ToggleButton")]
  #endif
  public static extern void Extend_ToggleButton(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ToolBar")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ToolBar")]
  #endif
  public static extern void Extend_ToolBar(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ToolBarOverflowPanel")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ToolBarOverflowPanel")]
  #endif
  public static extern void Extend_ToolBarOverflowPanel(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ToolBarPanel")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ToolBarPanel")]
  #endif
  public static extern void Extend_ToolBarPanel(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ToolBarTray")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ToolBarTray")]
  #endif
  public static extern void Extend_ToolBarTray(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_ToolTip")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_ToolTip")]
  #endif
  public static extern void Extend_ToolTip(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Track")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Track")]
  #endif
  public static extern void Extend_Track(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_TransformGroup")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_TransformGroup")]
  #endif
  public static extern void Extend_TransformGroup(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_TranslateTransform")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_TranslateTransform")]
  #endif
  public static extern void Extend_TranslateTransform(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_TreeView")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_TreeView")]
  #endif
  public static extern void Extend_TreeView(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_TreeViewItem")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_TreeViewItem")]
  #endif
  public static extern void Extend_TreeViewItem(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Trigger")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Trigger")]
  #endif
  public static extern void Extend_Trigger(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_TriggerCollection")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_TriggerCollection")]
  #endif
  public static extern void Extend_TriggerCollection(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_UIElement")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_UIElement")]
  #endif
  public static extern void Extend_UIElement(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_UIElementCollection")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_UIElementCollection")]
  #endif
  public static extern void Extend_UIElementCollection(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_UserControl")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_UserControl")]
  #endif
  public static extern void Extend_UserControl(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Viewbox")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Viewbox")]
  #endif
  public static extern void Extend_Viewbox(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Visual")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Visual")]
  #endif
  public static extern void Extend_Visual(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_VisualBrush")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_VisualBrush")]
  #endif
  public static extern void Extend_VisualBrush(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_VisualCollection")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_VisualCollection")]
  #endif
  public static extern void Extend_VisualCollection(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_Window")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_Window")]
  #endif
  public static extern void Extend_Window(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Extend_WrapPanel")]
  #else
  [DllImport("Noesis", EntryPoint="Extend_WrapPanel")]
  #endif
  public static extern void Extend_WrapPanel(IntPtr typeClass);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_Timeline_Completed")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_Timeline_Completed")]
  #endif
  public static extern void BindEvent_Timeline_Completed(Timeline.DelegateRaiseCompleted callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_Timeline_Completed")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_Timeline_Completed")]
  #endif
  public static extern void UnbindEvent_Timeline_Completed(Timeline.DelegateRaiseCompleted callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_RangeBase_ValueChanged")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_RangeBase_ValueChanged")]
  #endif
  public static extern void BindEvent_RangeBase_ValueChanged(RangeBase.DelegateRaiseValueChanged callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_RangeBase_ValueChanged")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_RangeBase_ValueChanged")]
  #endif
  public static extern void UnbindEvent_RangeBase_ValueChanged(RangeBase.DelegateRaiseValueChanged callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_TreeView_SelectedItemChanged")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_TreeView_SelectedItemChanged")]
  #endif
  public static extern void BindEvent_TreeView_SelectedItemChanged(TreeView.DelegateRaiseSelectedItemChanged callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_TreeView_SelectedItemChanged")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_TreeView_SelectedItemChanged")]
  #endif
  public static extern void UnbindEvent_TreeView_SelectedItemChanged(TreeView.DelegateRaiseSelectedItemChanged callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_NullableBool__")]
  #else
  [DllImport("Noesis", EntryPoint="new_NullableBool__")]
  #endif
  public static extern IntPtr new_NullableBool__(bool jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NullableBool_GetValue__")]
  #else
  [DllImport("Noesis", EntryPoint="NullableBool_GetValue__")]
  #endif
  public static extern bool NullableBool_GetValue__(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NullableBool_SetValue__")]
  #else
  [DllImport("Noesis", EntryPoint="NullableBool_SetValue__")]
  #endif
  public static extern void NullableBool_SetValue__(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_NullableFloat__")]
  #else
  [DllImport("Noesis", EntryPoint="new_NullableFloat__")]
  #endif
  public static extern IntPtr new_NullableFloat__(float jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NullableFloat_GetValue__")]
  #else
  [DllImport("Noesis", EntryPoint="NullableFloat_GetValue__")]
  #endif
  public static extern float NullableFloat_GetValue__(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NullableFloat_SetValue__")]
  #else
  [DllImport("Noesis", EntryPoint="NullableFloat_SetValue__")]
  #endif
  public static extern void NullableFloat_SetValue__(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_NullableInt16__")]
  #else
  [DllImport("Noesis", EntryPoint="new_NullableInt16__")]
  #endif
  public static extern IntPtr new_NullableInt16__(short jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NullableInt16_GetValue__")]
  #else
  [DllImport("Noesis", EntryPoint="NullableInt16_GetValue__")]
  #endif
  public static extern short NullableInt16_GetValue__(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NullableInt16_SetValue__")]
  #else
  [DllImport("Noesis", EntryPoint="NullableInt16_SetValue__")]
  #endif
  public static extern void NullableInt16_SetValue__(HandleRef jarg1, short jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_NullableInt32__")]
  #else
  [DllImport("Noesis", EntryPoint="new_NullableInt32__")]
  #endif
  public static extern IntPtr new_NullableInt32__(int jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NullableInt32_GetValue__")]
  #else
  [DllImport("Noesis", EntryPoint="NullableInt32_GetValue__")]
  #endif
  public static extern int NullableInt32_GetValue__(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NullableInt32_SetValue__")]
  #else
  [DllImport("Noesis", EntryPoint="NullableInt32_SetValue__")]
  #endif
  public static extern void NullableInt32_SetValue__(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_FindStringResource")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_FindStringResource")]
  #endif
  public static extern IntPtr FrameworkElement_FindStringResource(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_FindTypeResource")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_FindTypeResource")]
  #endif
  public static extern IntPtr FrameworkElement_FindTypeResource(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Point_GetX")]
  #else
  [DllImport("Noesis", EntryPoint="Point_GetX")]
  #endif
  public static extern float Point_GetX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Point_SetX")]
  #else
  [DllImport("Noesis", EntryPoint="Point_SetX")]
  #endif
  public static extern void Point_SetX(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Point_GetY")]
  #else
  [DllImport("Noesis", EntryPoint="Point_GetY")]
  #endif
  public static extern float Point_GetY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Point_SetY")]
  #else
  [DllImport("Noesis", EntryPoint="Point_SetY")]
  #endif
  public static extern void Point_SetY(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pointi_GetX")]
  #else
  [DllImport("Noesis", EntryPoint="Pointi_GetX")]
  #endif
  public static extern int Pointi_GetX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pointi_SetX")]
  #else
  [DllImport("Noesis", EntryPoint="Pointi_SetX")]
  #endif
  public static extern void Pointi_SetX(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pointi_GetY")]
  #else
  [DllImport("Noesis", EntryPoint="Pointi_GetY")]
  #endif
  public static extern int Pointi_GetY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pointi_SetY")]
  #else
  [DllImport("Noesis", EntryPoint="Pointi_SetY")]
  #endif
  public static extern void Pointi_SetY(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_BaseButton_Click")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_BaseButton_Click")]
  #endif
  public static extern void BindEvent_BaseButton_Click(BaseButton.DelegateRaiseClick callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_BaseButton_Click")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_BaseButton_Click")]
  #endif
  public static extern void UnbindEvent_BaseButton_Click(BaseButton.DelegateRaiseClick callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_BaseTextBox_SelectionChanged")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_BaseTextBox_SelectionChanged")]
  #endif
  public static extern void BindEvent_BaseTextBox_SelectionChanged(BaseTextBox.DelegateRaiseSelectionChanged callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_BaseTextBox_SelectionChanged")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_BaseTextBox_SelectionChanged")]
  #endif
  public static extern void UnbindEvent_BaseTextBox_SelectionChanged(BaseTextBox.DelegateRaiseSelectionChanged callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_BaseTextBox_TextChanged")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_BaseTextBox_TextChanged")]
  #endif
  public static extern void BindEvent_BaseTextBox_TextChanged(BaseTextBox.DelegateRaiseTextChanged callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_BaseTextBox_TextChanged")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_BaseTextBox_TextChanged")]
  #endif
  public static extern void UnbindEvent_BaseTextBox_TextChanged(BaseTextBox.DelegateRaiseTextChanged callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_ContextMenu_Closed")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_ContextMenu_Closed")]
  #endif
  public static extern void BindEvent_ContextMenu_Closed(ContextMenu.DelegateRaiseClosed callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_ContextMenu_Closed")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_ContextMenu_Closed")]
  #endif
  public static extern void UnbindEvent_ContextMenu_Closed(ContextMenu.DelegateRaiseClosed callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_ContextMenu_Opened")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_ContextMenu_Opened")]
  #endif
  public static extern void BindEvent_ContextMenu_Opened(ContextMenu.DelegateRaiseOpened callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_ContextMenu_Opened")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_ContextMenu_Opened")]
  #endif
  public static extern void UnbindEvent_ContextMenu_Opened(ContextMenu.DelegateRaiseOpened callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_Control_MouseDoubleClick")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_Control_MouseDoubleClick")]
  #endif
  public static extern void BindEvent_Control_MouseDoubleClick(Control.DelegateRaiseMouseDoubleClick callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_Control_MouseDoubleClick")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_Control_MouseDoubleClick")]
  #endif
  public static extern void UnbindEvent_Control_MouseDoubleClick(Control.DelegateRaiseMouseDoubleClick callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_Control_PreviewMouseDoubleClick")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_Control_PreviewMouseDoubleClick")]
  #endif
  public static extern void BindEvent_Control_PreviewMouseDoubleClick(Control.DelegateRaisePreviewMouseDoubleClick callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_Control_PreviewMouseDoubleClick")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_Control_PreviewMouseDoubleClick")]
  #endif
  public static extern void UnbindEvent_Control_PreviewMouseDoubleClick(Control.DelegateRaisePreviewMouseDoubleClick callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_Expander_Collapsed")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_Expander_Collapsed")]
  #endif
  public static extern void BindEvent_Expander_Collapsed(Expander.DelegateRaiseCollapsed callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_Expander_Collapsed")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_Expander_Collapsed")]
  #endif
  public static extern void UnbindEvent_Expander_Collapsed(Expander.DelegateRaiseCollapsed callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_Expander_Expanded")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_Expander_Expanded")]
  #endif
  public static extern void BindEvent_Expander_Expanded(Expander.DelegateRaiseExpanded callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_Expander_Expanded")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_Expander_Expanded")]
  #endif
  public static extern void UnbindEvent_Expander_Expanded(Expander.DelegateRaiseExpanded callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_FrameworkElement_ContextMenuClosing")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_FrameworkElement_ContextMenuClosing")]
  #endif
  public static extern void BindEvent_FrameworkElement_ContextMenuClosing(FrameworkElement.DelegateRaiseContextMenuClosing callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_FrameworkElement_ContextMenuClosing")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_FrameworkElement_ContextMenuClosing")]
  #endif
  public static extern void UnbindEvent_FrameworkElement_ContextMenuClosing(FrameworkElement.DelegateRaiseContextMenuClosing callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_FrameworkElement_ContextMenuOpening")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_FrameworkElement_ContextMenuOpening")]
  #endif
  public static extern void BindEvent_FrameworkElement_ContextMenuOpening(FrameworkElement.DelegateRaiseContextMenuOpening callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_FrameworkElement_ContextMenuOpening")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_FrameworkElement_ContextMenuOpening")]
  #endif
  public static extern void UnbindEvent_FrameworkElement_ContextMenuOpening(FrameworkElement.DelegateRaiseContextMenuOpening callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_FrameworkElement_DataContextChanged")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_FrameworkElement_DataContextChanged")]
  #endif
  public static extern void BindEvent_FrameworkElement_DataContextChanged(FrameworkElement.DelegateRaiseDataContextChanged callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_FrameworkElement_DataContextChanged")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_FrameworkElement_DataContextChanged")]
  #endif
  public static extern void UnbindEvent_FrameworkElement_DataContextChanged(FrameworkElement.DelegateRaiseDataContextChanged callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_FrameworkElement_Loaded")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_FrameworkElement_Loaded")]
  #endif
  public static extern void BindEvent_FrameworkElement_Loaded(FrameworkElement.DelegateRaiseLoaded callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_FrameworkElement_Loaded")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_FrameworkElement_Loaded")]
  #endif
  public static extern void UnbindEvent_FrameworkElement_Loaded(FrameworkElement.DelegateRaiseLoaded callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_FrameworkElement_SizeChanged")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_FrameworkElement_SizeChanged")]
  #endif
  public static extern void BindEvent_FrameworkElement_SizeChanged(FrameworkElement.DelegateRaiseSizeChanged callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_FrameworkElement_SizeChanged")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_FrameworkElement_SizeChanged")]
  #endif
  public static extern void UnbindEvent_FrameworkElement_SizeChanged(FrameworkElement.DelegateRaiseSizeChanged callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_FrameworkElement_ToolTipClosing")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_FrameworkElement_ToolTipClosing")]
  #endif
  public static extern void BindEvent_FrameworkElement_ToolTipClosing(FrameworkElement.DelegateRaiseToolTipClosing callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_FrameworkElement_ToolTipClosing")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_FrameworkElement_ToolTipClosing")]
  #endif
  public static extern void UnbindEvent_FrameworkElement_ToolTipClosing(FrameworkElement.DelegateRaiseToolTipClosing callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_FrameworkElement_ToolTipOpening")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_FrameworkElement_ToolTipOpening")]
  #endif
  public static extern void BindEvent_FrameworkElement_ToolTipOpening(FrameworkElement.DelegateRaiseToolTipOpening callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_FrameworkElement_ToolTipOpening")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_FrameworkElement_ToolTipOpening")]
  #endif
  public static extern void UnbindEvent_FrameworkElement_ToolTipOpening(FrameworkElement.DelegateRaiseToolTipOpening callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_FrameworkElement_Unloaded")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_FrameworkElement_Unloaded")]
  #endif
  public static extern void BindEvent_FrameworkElement_Unloaded(FrameworkElement.DelegateRaiseUnloaded callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_FrameworkElement_Unloaded")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_FrameworkElement_Unloaded")]
  #endif
  public static extern void UnbindEvent_FrameworkElement_Unloaded(FrameworkElement.DelegateRaiseUnloaded callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_ListBoxItem_Selected")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_ListBoxItem_Selected")]
  #endif
  public static extern void BindEvent_ListBoxItem_Selected(ListBoxItem.DelegateRaiseSelected callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_ListBoxItem_Selected")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_ListBoxItem_Selected")]
  #endif
  public static extern void UnbindEvent_ListBoxItem_Selected(ListBoxItem.DelegateRaiseSelected callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_ListBoxItem_Unselected")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_ListBoxItem_Unselected")]
  #endif
  public static extern void BindEvent_ListBoxItem_Unselected(ListBoxItem.DelegateRaiseUnselected callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_ListBoxItem_Unselected")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_ListBoxItem_Unselected")]
  #endif
  public static extern void UnbindEvent_ListBoxItem_Unselected(ListBoxItem.DelegateRaiseUnselected callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_MenuItem_Checked")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_MenuItem_Checked")]
  #endif
  public static extern void BindEvent_MenuItem_Checked(MenuItem.DelegateRaiseChecked callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_MenuItem_Checked")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_MenuItem_Checked")]
  #endif
  public static extern void UnbindEvent_MenuItem_Checked(MenuItem.DelegateRaiseChecked callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_MenuItem_Click")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_MenuItem_Click")]
  #endif
  public static extern void BindEvent_MenuItem_Click(MenuItem.DelegateRaiseClick callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_MenuItem_Click")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_MenuItem_Click")]
  #endif
  public static extern void UnbindEvent_MenuItem_Click(MenuItem.DelegateRaiseClick callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_MenuItem_SubmenuClosed")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_MenuItem_SubmenuClosed")]
  #endif
  public static extern void BindEvent_MenuItem_SubmenuClosed(MenuItem.DelegateRaiseSubmenuClosed callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_MenuItem_SubmenuClosed")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_MenuItem_SubmenuClosed")]
  #endif
  public static extern void UnbindEvent_MenuItem_SubmenuClosed(MenuItem.DelegateRaiseSubmenuClosed callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_MenuItem_SubmenuOpened")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_MenuItem_SubmenuOpened")]
  #endif
  public static extern void BindEvent_MenuItem_SubmenuOpened(MenuItem.DelegateRaiseSubmenuOpened callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_MenuItem_SubmenuOpened")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_MenuItem_SubmenuOpened")]
  #endif
  public static extern void UnbindEvent_MenuItem_SubmenuOpened(MenuItem.DelegateRaiseSubmenuOpened callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_MenuItem_Unchecked")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_MenuItem_Unchecked")]
  #endif
  public static extern void BindEvent_MenuItem_Unchecked(MenuItem.DelegateRaiseUnchecked callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_MenuItem_Unchecked")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_MenuItem_Unchecked")]
  #endif
  public static extern void UnbindEvent_MenuItem_Unchecked(MenuItem.DelegateRaiseUnchecked callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_ScrollBar_Scroll")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_ScrollBar_Scroll")]
  #endif
  public static extern void BindEvent_ScrollBar_Scroll(ScrollBar.DelegateRaiseScroll callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_ScrollBar_Scroll")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_ScrollBar_Scroll")]
  #endif
  public static extern void UnbindEvent_ScrollBar_Scroll(ScrollBar.DelegateRaiseScroll callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_ScrollViewer_ScrollChanged")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_ScrollViewer_ScrollChanged")]
  #endif
  public static extern void BindEvent_ScrollViewer_ScrollChanged(ScrollViewer.DelegateRaiseScrollChanged callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_ScrollViewer_ScrollChanged")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_ScrollViewer_ScrollChanged")]
  #endif
  public static extern void UnbindEvent_ScrollViewer_ScrollChanged(ScrollViewer.DelegateRaiseScrollChanged callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_Selector_SelectionChanged")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_Selector_SelectionChanged")]
  #endif
  public static extern void BindEvent_Selector_SelectionChanged(Selector.DelegateRaiseSelectionChanged callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_Selector_SelectionChanged")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_Selector_SelectionChanged")]
  #endif
  public static extern void UnbindEvent_Selector_SelectionChanged(Selector.DelegateRaiseSelectionChanged callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_Thumb_DragCompleted")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_Thumb_DragCompleted")]
  #endif
  public static extern void BindEvent_Thumb_DragCompleted(Thumb.DelegateRaiseDragCompleted callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_Thumb_DragCompleted")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_Thumb_DragCompleted")]
  #endif
  public static extern void UnbindEvent_Thumb_DragCompleted(Thumb.DelegateRaiseDragCompleted callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_Thumb_DragDelta")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_Thumb_DragDelta")]
  #endif
  public static extern void BindEvent_Thumb_DragDelta(Thumb.DelegateRaiseDragDelta callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_Thumb_DragDelta")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_Thumb_DragDelta")]
  #endif
  public static extern void UnbindEvent_Thumb_DragDelta(Thumb.DelegateRaiseDragDelta callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_Thumb_DragStarted")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_Thumb_DragStarted")]
  #endif
  public static extern void BindEvent_Thumb_DragStarted(Thumb.DelegateRaiseDragStarted callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_Thumb_DragStarted")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_Thumb_DragStarted")]
  #endif
  public static extern void UnbindEvent_Thumb_DragStarted(Thumb.DelegateRaiseDragStarted callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_ToggleButton_Checked")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_ToggleButton_Checked")]
  #endif
  public static extern void BindEvent_ToggleButton_Checked(ToggleButton.DelegateRaiseChecked callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_ToggleButton_Checked")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_ToggleButton_Checked")]
  #endif
  public static extern void UnbindEvent_ToggleButton_Checked(ToggleButton.DelegateRaiseChecked callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_ToggleButton_Indeterminate")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_ToggleButton_Indeterminate")]
  #endif
  public static extern void BindEvent_ToggleButton_Indeterminate(ToggleButton.DelegateRaiseIndeterminate callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_ToggleButton_Indeterminate")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_ToggleButton_Indeterminate")]
  #endif
  public static extern void UnbindEvent_ToggleButton_Indeterminate(ToggleButton.DelegateRaiseIndeterminate callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_ToggleButton_Unchecked")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_ToggleButton_Unchecked")]
  #endif
  public static extern void BindEvent_ToggleButton_Unchecked(ToggleButton.DelegateRaiseUnchecked callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_ToggleButton_Unchecked")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_ToggleButton_Unchecked")]
  #endif
  public static extern void UnbindEvent_ToggleButton_Unchecked(ToggleButton.DelegateRaiseUnchecked callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_ToolTip_Closed")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_ToolTip_Closed")]
  #endif
  public static extern void BindEvent_ToolTip_Closed(ToolTip.DelegateRaiseClosed callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_ToolTip_Closed")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_ToolTip_Closed")]
  #endif
  public static extern void UnbindEvent_ToolTip_Closed(ToolTip.DelegateRaiseClosed callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_ToolTip_Opened")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_ToolTip_Opened")]
  #endif
  public static extern void BindEvent_ToolTip_Opened(ToolTip.DelegateRaiseOpened callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_ToolTip_Opened")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_ToolTip_Opened")]
  #endif
  public static extern void UnbindEvent_ToolTip_Opened(ToolTip.DelegateRaiseOpened callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_TreeViewItem_Collapsed")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_TreeViewItem_Collapsed")]
  #endif
  public static extern void BindEvent_TreeViewItem_Collapsed(TreeViewItem.DelegateRaiseCollapsed callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_TreeViewItem_Collapsed")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_TreeViewItem_Collapsed")]
  #endif
  public static extern void UnbindEvent_TreeViewItem_Collapsed(TreeViewItem.DelegateRaiseCollapsed callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_TreeViewItem_Expanded")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_TreeViewItem_Expanded")]
  #endif
  public static extern void BindEvent_TreeViewItem_Expanded(TreeViewItem.DelegateRaiseExpanded callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_TreeViewItem_Expanded")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_TreeViewItem_Expanded")]
  #endif
  public static extern void UnbindEvent_TreeViewItem_Expanded(TreeViewItem.DelegateRaiseExpanded callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_TreeViewItem_Selected")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_TreeViewItem_Selected")]
  #endif
  public static extern void BindEvent_TreeViewItem_Selected(TreeViewItem.DelegateRaiseSelected callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_TreeViewItem_Selected")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_TreeViewItem_Selected")]
  #endif
  public static extern void UnbindEvent_TreeViewItem_Selected(TreeViewItem.DelegateRaiseSelected callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_TreeViewItem_Unselected")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_TreeViewItem_Unselected")]
  #endif
  public static extern void BindEvent_TreeViewItem_Unselected(TreeViewItem.DelegateRaiseUnselected callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_TreeViewItem_Unselected")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_TreeViewItem_Unselected")]
  #endif
  public static extern void UnbindEvent_TreeViewItem_Unselected(TreeViewItem.DelegateRaiseUnselected callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_DragEnter")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_DragEnter")]
  #endif
  public static extern void BindEvent_UIElement_DragEnter(UIElement.DelegateRaiseDragEnter callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_DragEnter")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_DragEnter")]
  #endif
  public static extern void UnbindEvent_UIElement_DragEnter(UIElement.DelegateRaiseDragEnter callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_DragLeave")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_DragLeave")]
  #endif
  public static extern void BindEvent_UIElement_DragLeave(UIElement.DelegateRaiseDragLeave callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_DragLeave")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_DragLeave")]
  #endif
  public static extern void UnbindEvent_UIElement_DragLeave(UIElement.DelegateRaiseDragLeave callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_DragOver")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_DragOver")]
  #endif
  public static extern void BindEvent_UIElement_DragOver(UIElement.DelegateRaiseDragOver callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_DragOver")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_DragOver")]
  #endif
  public static extern void UnbindEvent_UIElement_DragOver(UIElement.DelegateRaiseDragOver callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_Drop")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_Drop")]
  #endif
  public static extern void BindEvent_UIElement_Drop(UIElement.DelegateRaiseDrop callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_Drop")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_Drop")]
  #endif
  public static extern void UnbindEvent_UIElement_Drop(UIElement.DelegateRaiseDrop callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_GiveFeedback")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_GiveFeedback")]
  #endif
  public static extern void BindEvent_UIElement_GiveFeedback(UIElement.DelegateRaiseGiveFeedback callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_GiveFeedback")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_GiveFeedback")]
  #endif
  public static extern void UnbindEvent_UIElement_GiveFeedback(UIElement.DelegateRaiseGiveFeedback callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_GotFocus")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_GotFocus")]
  #endif
  public static extern void BindEvent_UIElement_GotFocus(UIElement.DelegateRaiseGotFocus callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_GotFocus")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_GotFocus")]
  #endif
  public static extern void UnbindEvent_UIElement_GotFocus(UIElement.DelegateRaiseGotFocus callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_GotKeyboardFocus")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_GotKeyboardFocus")]
  #endif
  public static extern void BindEvent_UIElement_GotKeyboardFocus(UIElement.DelegateRaiseGotKeyboardFocus callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_GotKeyboardFocus")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_GotKeyboardFocus")]
  #endif
  public static extern void UnbindEvent_UIElement_GotKeyboardFocus(UIElement.DelegateRaiseGotKeyboardFocus callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_GotMouseCapture")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_GotMouseCapture")]
  #endif
  public static extern void BindEvent_UIElement_GotMouseCapture(UIElement.DelegateRaiseGotMouseCapture callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_GotMouseCapture")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_GotMouseCapture")]
  #endif
  public static extern void UnbindEvent_UIElement_GotMouseCapture(UIElement.DelegateRaiseGotMouseCapture callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_KeyDown")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_KeyDown")]
  #endif
  public static extern void BindEvent_UIElement_KeyDown(UIElement.DelegateRaiseKeyDown callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_KeyDown")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_KeyDown")]
  #endif
  public static extern void UnbindEvent_UIElement_KeyDown(UIElement.DelegateRaiseKeyDown callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_KeyUp")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_KeyUp")]
  #endif
  public static extern void BindEvent_UIElement_KeyUp(UIElement.DelegateRaiseKeyUp callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_KeyUp")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_KeyUp")]
  #endif
  public static extern void UnbindEvent_UIElement_KeyUp(UIElement.DelegateRaiseKeyUp callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_LostFocus")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_LostFocus")]
  #endif
  public static extern void BindEvent_UIElement_LostFocus(UIElement.DelegateRaiseLostFocus callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_LostFocus")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_LostFocus")]
  #endif
  public static extern void UnbindEvent_UIElement_LostFocus(UIElement.DelegateRaiseLostFocus callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_LostKeyboardFocus")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_LostKeyboardFocus")]
  #endif
  public static extern void BindEvent_UIElement_LostKeyboardFocus(UIElement.DelegateRaiseLostKeyboardFocus callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_LostKeyboardFocus")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_LostKeyboardFocus")]
  #endif
  public static extern void UnbindEvent_UIElement_LostKeyboardFocus(UIElement.DelegateRaiseLostKeyboardFocus callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_LostMouseCapture")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_LostMouseCapture")]
  #endif
  public static extern void BindEvent_UIElement_LostMouseCapture(UIElement.DelegateRaiseLostMouseCapture callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_LostMouseCapture")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_LostMouseCapture")]
  #endif
  public static extern void UnbindEvent_UIElement_LostMouseCapture(UIElement.DelegateRaiseLostMouseCapture callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_MouseDown")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_MouseDown")]
  #endif
  public static extern void BindEvent_UIElement_MouseDown(UIElement.DelegateRaiseMouseDown callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_MouseDown")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_MouseDown")]
  #endif
  public static extern void UnbindEvent_UIElement_MouseDown(UIElement.DelegateRaiseMouseDown callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_MouseEnter")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_MouseEnter")]
  #endif
  public static extern void BindEvent_UIElement_MouseEnter(UIElement.DelegateRaiseMouseEnter callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_MouseEnter")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_MouseEnter")]
  #endif
  public static extern void UnbindEvent_UIElement_MouseEnter(UIElement.DelegateRaiseMouseEnter callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_MouseLeave")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_MouseLeave")]
  #endif
  public static extern void BindEvent_UIElement_MouseLeave(UIElement.DelegateRaiseMouseLeave callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_MouseLeave")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_MouseLeave")]
  #endif
  public static extern void UnbindEvent_UIElement_MouseLeave(UIElement.DelegateRaiseMouseLeave callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_MouseLeftButtonDown")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_MouseLeftButtonDown")]
  #endif
  public static extern void BindEvent_UIElement_MouseLeftButtonDown(UIElement.DelegateRaiseMouseLeftButtonDown callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_MouseLeftButtonDown")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_MouseLeftButtonDown")]
  #endif
  public static extern void UnbindEvent_UIElement_MouseLeftButtonDown(UIElement.DelegateRaiseMouseLeftButtonDown callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_MouseLeftButtonUp")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_MouseLeftButtonUp")]
  #endif
  public static extern void BindEvent_UIElement_MouseLeftButtonUp(UIElement.DelegateRaiseMouseLeftButtonUp callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_MouseLeftButtonUp")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_MouseLeftButtonUp")]
  #endif
  public static extern void UnbindEvent_UIElement_MouseLeftButtonUp(UIElement.DelegateRaiseMouseLeftButtonUp callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_MouseMove")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_MouseMove")]
  #endif
  public static extern void BindEvent_UIElement_MouseMove(UIElement.DelegateRaiseMouseMove callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_MouseMove")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_MouseMove")]
  #endif
  public static extern void UnbindEvent_UIElement_MouseMove(UIElement.DelegateRaiseMouseMove callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_MouseRightButtonDown")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_MouseRightButtonDown")]
  #endif
  public static extern void BindEvent_UIElement_MouseRightButtonDown(UIElement.DelegateRaiseMouseRightButtonDown callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_MouseRightButtonDown")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_MouseRightButtonDown")]
  #endif
  public static extern void UnbindEvent_UIElement_MouseRightButtonDown(UIElement.DelegateRaiseMouseRightButtonDown callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_MouseRightButtonUp")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_MouseRightButtonUp")]
  #endif
  public static extern void BindEvent_UIElement_MouseRightButtonUp(UIElement.DelegateRaiseMouseRightButtonUp callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_MouseRightButtonUp")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_MouseRightButtonUp")]
  #endif
  public static extern void UnbindEvent_UIElement_MouseRightButtonUp(UIElement.DelegateRaiseMouseRightButtonUp callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_MouseUp")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_MouseUp")]
  #endif
  public static extern void BindEvent_UIElement_MouseUp(UIElement.DelegateRaiseMouseUp callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_MouseUp")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_MouseUp")]
  #endif
  public static extern void UnbindEvent_UIElement_MouseUp(UIElement.DelegateRaiseMouseUp callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_MouseWheel")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_MouseWheel")]
  #endif
  public static extern void BindEvent_UIElement_MouseWheel(UIElement.DelegateRaiseMouseWheel callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_MouseWheel")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_MouseWheel")]
  #endif
  public static extern void UnbindEvent_UIElement_MouseWheel(UIElement.DelegateRaiseMouseWheel callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_PreviewDragEnter")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_PreviewDragEnter")]
  #endif
  public static extern void BindEvent_UIElement_PreviewDragEnter(UIElement.DelegateRaisePreviewDragEnter callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_PreviewDragEnter")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_PreviewDragEnter")]
  #endif
  public static extern void UnbindEvent_UIElement_PreviewDragEnter(UIElement.DelegateRaisePreviewDragEnter callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_PreviewDragLeave")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_PreviewDragLeave")]
  #endif
  public static extern void BindEvent_UIElement_PreviewDragLeave(UIElement.DelegateRaisePreviewDragLeave callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_PreviewDragLeave")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_PreviewDragLeave")]
  #endif
  public static extern void UnbindEvent_UIElement_PreviewDragLeave(UIElement.DelegateRaisePreviewDragLeave callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_PreviewDragOver")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_PreviewDragOver")]
  #endif
  public static extern void BindEvent_UIElement_PreviewDragOver(UIElement.DelegateRaisePreviewDragOver callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_PreviewDragOver")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_PreviewDragOver")]
  #endif
  public static extern void UnbindEvent_UIElement_PreviewDragOver(UIElement.DelegateRaisePreviewDragOver callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_PreviewDrop")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_PreviewDrop")]
  #endif
  public static extern void BindEvent_UIElement_PreviewDrop(UIElement.DelegateRaisePreviewDrop callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_PreviewDrop")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_PreviewDrop")]
  #endif
  public static extern void UnbindEvent_UIElement_PreviewDrop(UIElement.DelegateRaisePreviewDrop callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_PreviewGiveFeedback")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_PreviewGiveFeedback")]
  #endif
  public static extern void BindEvent_UIElement_PreviewGiveFeedback(UIElement.DelegateRaisePreviewGiveFeedback callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_PreviewGiveFeedback")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_PreviewGiveFeedback")]
  #endif
  public static extern void UnbindEvent_UIElement_PreviewGiveFeedback(UIElement.DelegateRaisePreviewGiveFeedback callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_PreviewGotKeyboardFocus")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_PreviewGotKeyboardFocus")]
  #endif
  public static extern void BindEvent_UIElement_PreviewGotKeyboardFocus(UIElement.DelegateRaisePreviewGotKeyboardFocus callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_PreviewGotKeyboardFocus")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_PreviewGotKeyboardFocus")]
  #endif
  public static extern void UnbindEvent_UIElement_PreviewGotKeyboardFocus(UIElement.DelegateRaisePreviewGotKeyboardFocus callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_PreviewKeyDown")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_PreviewKeyDown")]
  #endif
  public static extern void BindEvent_UIElement_PreviewKeyDown(UIElement.DelegateRaisePreviewKeyDown callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_PreviewKeyDown")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_PreviewKeyDown")]
  #endif
  public static extern void UnbindEvent_UIElement_PreviewKeyDown(UIElement.DelegateRaisePreviewKeyDown callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_PreviewKeyUp")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_PreviewKeyUp")]
  #endif
  public static extern void BindEvent_UIElement_PreviewKeyUp(UIElement.DelegateRaisePreviewKeyUp callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_PreviewKeyUp")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_PreviewKeyUp")]
  #endif
  public static extern void UnbindEvent_UIElement_PreviewKeyUp(UIElement.DelegateRaisePreviewKeyUp callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_PreviewLostKeyboardFocus")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_PreviewLostKeyboardFocus")]
  #endif
  public static extern void BindEvent_UIElement_PreviewLostKeyboardFocus(UIElement.DelegateRaisePreviewLostKeyboardFocus callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_PreviewLostKeyboardFocus")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_PreviewLostKeyboardFocus")]
  #endif
  public static extern void UnbindEvent_UIElement_PreviewLostKeyboardFocus(UIElement.DelegateRaisePreviewLostKeyboardFocus callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_PreviewMouseDown")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_PreviewMouseDown")]
  #endif
  public static extern void BindEvent_UIElement_PreviewMouseDown(UIElement.DelegateRaisePreviewMouseDown callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_PreviewMouseDown")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_PreviewMouseDown")]
  #endif
  public static extern void UnbindEvent_UIElement_PreviewMouseDown(UIElement.DelegateRaisePreviewMouseDown callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_PreviewMouseLeftButtonDown")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_PreviewMouseLeftButtonDown")]
  #endif
  public static extern void BindEvent_UIElement_PreviewMouseLeftButtonDown(UIElement.DelegateRaisePreviewMouseLeftButtonDown callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_PreviewMouseLeftButtonDown")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_PreviewMouseLeftButtonDown")]
  #endif
  public static extern void UnbindEvent_UIElement_PreviewMouseLeftButtonDown(UIElement.DelegateRaisePreviewMouseLeftButtonDown callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_PreviewMouseLeftButtonUp")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_PreviewMouseLeftButtonUp")]
  #endif
  public static extern void BindEvent_UIElement_PreviewMouseLeftButtonUp(UIElement.DelegateRaisePreviewMouseLeftButtonUp callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_PreviewMouseLeftButtonUp")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_PreviewMouseLeftButtonUp")]
  #endif
  public static extern void UnbindEvent_UIElement_PreviewMouseLeftButtonUp(UIElement.DelegateRaisePreviewMouseLeftButtonUp callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_PreviewMouseMove")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_PreviewMouseMove")]
  #endif
  public static extern void BindEvent_UIElement_PreviewMouseMove(UIElement.DelegateRaisePreviewMouseMove callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_PreviewMouseMove")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_PreviewMouseMove")]
  #endif
  public static extern void UnbindEvent_UIElement_PreviewMouseMove(UIElement.DelegateRaisePreviewMouseMove callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_PreviewMouseRightButtonDown")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_PreviewMouseRightButtonDown")]
  #endif
  public static extern void BindEvent_UIElement_PreviewMouseRightButtonDown(UIElement.DelegateRaisePreviewMouseRightButtonDown callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_PreviewMouseRightButtonDown")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_PreviewMouseRightButtonDown")]
  #endif
  public static extern void UnbindEvent_UIElement_PreviewMouseRightButtonDown(UIElement.DelegateRaisePreviewMouseRightButtonDown callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_PreviewMouseRightButtonUp")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_PreviewMouseRightButtonUp")]
  #endif
  public static extern void BindEvent_UIElement_PreviewMouseRightButtonUp(UIElement.DelegateRaisePreviewMouseRightButtonUp callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_PreviewMouseRightButtonUp")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_PreviewMouseRightButtonUp")]
  #endif
  public static extern void UnbindEvent_UIElement_PreviewMouseRightButtonUp(UIElement.DelegateRaisePreviewMouseRightButtonUp callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_PreviewMouseUp")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_PreviewMouseUp")]
  #endif
  public static extern void BindEvent_UIElement_PreviewMouseUp(UIElement.DelegateRaisePreviewMouseUp callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_PreviewMouseUp")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_PreviewMouseUp")]
  #endif
  public static extern void UnbindEvent_UIElement_PreviewMouseUp(UIElement.DelegateRaisePreviewMouseUp callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_PreviewMouseWheel")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_PreviewMouseWheel")]
  #endif
  public static extern void BindEvent_UIElement_PreviewMouseWheel(UIElement.DelegateRaisePreviewMouseWheel callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_PreviewMouseWheel")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_PreviewMouseWheel")]
  #endif
  public static extern void UnbindEvent_UIElement_PreviewMouseWheel(UIElement.DelegateRaisePreviewMouseWheel callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_PreviewQueryContinueDrag")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_PreviewQueryContinueDrag")]
  #endif
  public static extern void BindEvent_UIElement_PreviewQueryContinueDrag(UIElement.DelegateRaisePreviewQueryContinueDrag callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_PreviewQueryContinueDrag")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_PreviewQueryContinueDrag")]
  #endif
  public static extern void UnbindEvent_UIElement_PreviewQueryContinueDrag(UIElement.DelegateRaisePreviewQueryContinueDrag callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_PreviewTextInput")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_PreviewTextInput")]
  #endif
  public static extern void BindEvent_UIElement_PreviewTextInput(UIElement.DelegateRaisePreviewTextInput callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_PreviewTextInput")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_PreviewTextInput")]
  #endif
  public static extern void UnbindEvent_UIElement_PreviewTextInput(UIElement.DelegateRaisePreviewTextInput callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_QueryContinueDrag")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_QueryContinueDrag")]
  #endif
  public static extern void BindEvent_UIElement_QueryContinueDrag(UIElement.DelegateRaiseQueryContinueDrag callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_QueryContinueDrag")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_QueryContinueDrag")]
  #endif
  public static extern void UnbindEvent_UIElement_QueryContinueDrag(UIElement.DelegateRaiseQueryContinueDrag callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_QueryCursor")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_QueryCursor")]
  #endif
  public static extern void BindEvent_UIElement_QueryCursor(UIElement.DelegateRaiseQueryCursor callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_QueryCursor")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_QueryCursor")]
  #endif
  public static extern void UnbindEvent_UIElement_QueryCursor(UIElement.DelegateRaiseQueryCursor callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BindEvent_UIElement_TextInput")]
  #else
  [DllImport("Noesis", EntryPoint="BindEvent_UIElement_TextInput")]
  #endif
  public static extern void BindEvent_UIElement_TextInput(UIElement.DelegateRaiseTextInput callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnbindEvent_UIElement_TextInput")]
  #else
  [DllImport("Noesis", EntryPoint="UnbindEvent_UIElement_TextInput")]
  #endif
  public static extern void UnbindEvent_UIElement_TextInput(UIElement.DelegateRaiseTextInput callback, IntPtr instance);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UnboxString")]
  #else
  [DllImport("Noesis", EntryPoint="UnboxString")]
  #endif
  public static extern IntPtr UnboxString(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_NsString")]
  #else
  [DllImport("Noesis", EntryPoint="new_NsString")]
  #endif
  public static extern IntPtr new_NsString(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NsString_c_str")]
  #else
  [DllImport("Noesis", EntryPoint="NsString_c_str")]
  #endif
  public static extern IntPtr NsString_c_str(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_NsString")]
  #else
  [DllImport("Noesis", EntryPoint="delete_NsString")]
  #endif
  public static extern void delete_NsString(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_NsSymbol")]
  #else
  [DllImport("Noesis", EntryPoint="new_NsSymbol")]
  #endif
  public static extern IntPtr new_NsSymbol(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NsSymbol_GetStr")]
  #else
  [DllImport("Noesis", EntryPoint="NsSymbol_GetStr")]
  #endif
  public static extern IntPtr NsSymbol_GetStr(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_NsSymbol")]
  #else
  [DllImport("Noesis", EntryPoint="delete_NsSymbol")]
  #endif
  public static extern void delete_NsSymbol(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_BaseComponent")]
  #else
  [DllImport("Noesis", EntryPoint="delete_BaseComponent")]
  #endif
  public static extern void delete_BaseComponent(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_SerializableComponent")]
  #else
  [DllImport("Noesis", EntryPoint="new_SerializableComponent")]
  #endif
  public static extern IntPtr new_SerializableComponent();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_SerializableComponent")]
  #else
  [DllImport("Noesis", EntryPoint="delete_SerializableComponent")]
  #endif
  public static extern void delete_SerializableComponent(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Color__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_Color__SWIG_0")]
  #endif
  public static extern IntPtr new_Color__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Color__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_Color__SWIG_1")]
  #endif
  public static extern IntPtr new_Color__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Color__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_Color__SWIG_2")]
  #endif
  public static extern IntPtr new_Color__SWIG_2(float jarg1, float jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Color__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="new_Color__SWIG_3")]
  #endif
  public static extern IntPtr new_Color__SWIG_3(int jarg1, int jarg2, int jarg3, int jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Color__SWIG_4")]
  #else
  [DllImport("Noesis", EntryPoint="new_Color__SWIG_4")]
  #endif
  public static extern IntPtr new_Color__SWIG_4(int jarg1, int jarg2, int jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_FromPackedBGRA")]
  #else
  [DllImport("Noesis", EntryPoint="Color_FromPackedBGRA")]
  #endif
  public static extern IntPtr Color_FromPackedBGRA(uint jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_FromPackedRGBA")]
  #else
  [DllImport("Noesis", EntryPoint="Color_FromPackedRGBA")]
  #endif
  public static extern IntPtr Color_FromPackedRGBA(uint jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_FromLinearRGB__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Color_FromLinearRGB__SWIG_0")]
  #endif
  public static extern IntPtr Color_FromLinearRGB__SWIG_0(float jarg1, float jarg2, float jarg3, float jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_FromLinearRGB__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Color_FromLinearRGB__SWIG_1")]
  #endif
  public static extern IntPtr Color_FromLinearRGB__SWIG_1(float jarg1, float jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_ToLinearRGB")]
  #else
  [DllImport("Noesis", EntryPoint="Color_ToLinearRGB")]
  #endif
  public static extern void Color_ToLinearRGB(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_SetRed__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Color_SetRed__SWIG_0")]
  #endif
  public static extern void Color_SetRed__SWIG_0(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_SetRed__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Color_SetRed__SWIG_1")]
  #endif
  public static extern void Color_SetRed__SWIG_1(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_SetGreen__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Color_SetGreen__SWIG_0")]
  #endif
  public static extern void Color_SetGreen__SWIG_0(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_SetGreen__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Color_SetGreen__SWIG_1")]
  #endif
  public static extern void Color_SetGreen__SWIG_1(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_SetBlue__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Color_SetBlue__SWIG_0")]
  #endif
  public static extern void Color_SetBlue__SWIG_0(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_SetBlue__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Color_SetBlue__SWIG_1")]
  #endif
  public static extern void Color_SetBlue__SWIG_1(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_SetAlpha__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Color_SetAlpha__SWIG_0")]
  #endif
  public static extern void Color_SetAlpha__SWIG_0(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_SetAlpha__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Color_SetAlpha__SWIG_1")]
  #endif
  public static extern void Color_SetAlpha__SWIG_1(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_SetPackedColorBGRA")]
  #else
  [DllImport("Noesis", EntryPoint="Color_SetPackedColorBGRA")]
  #endif
  public static extern void Color_SetPackedColorBGRA(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_SetPackedColorRGBA")]
  #else
  [DllImport("Noesis", EntryPoint="Color_SetPackedColorRGBA")]
  #endif
  public static extern void Color_SetPackedColorRGBA(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_GetRedI")]
  #else
  [DllImport("Noesis", EntryPoint="Color_GetRedI")]
  #endif
  public static extern int Color_GetRedI(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_GetGreenI")]
  #else
  [DllImport("Noesis", EntryPoint="Color_GetGreenI")]
  #endif
  public static extern int Color_GetGreenI(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_GetBlueI")]
  #else
  [DllImport("Noesis", EntryPoint="Color_GetBlueI")]
  #endif
  public static extern int Color_GetBlueI(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_GetAlphaI")]
  #else
  [DllImport("Noesis", EntryPoint="Color_GetAlphaI")]
  #endif
  public static extern int Color_GetAlphaI(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_GetRedF")]
  #else
  [DllImport("Noesis", EntryPoint="Color_GetRedF")]
  #endif
  public static extern float Color_GetRedF(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_GetGreenF")]
  #else
  [DllImport("Noesis", EntryPoint="Color_GetGreenF")]
  #endif
  public static extern float Color_GetGreenF(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_GetBlueF")]
  #else
  [DllImport("Noesis", EntryPoint="Color_GetBlueF")]
  #endif
  public static extern float Color_GetBlueF(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_GetAlphaF")]
  #else
  [DllImport("Noesis", EntryPoint="Color_GetAlphaF")]
  #endif
  public static extern float Color_GetAlphaF(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_GetPackedColorBGRA")]
  #else
  [DllImport("Noesis", EntryPoint="Color_GetPackedColorBGRA")]
  #endif
  public static extern uint Color_GetPackedColorBGRA(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_GetPackedColorRGBA")]
  #else
  [DllImport("Noesis", EntryPoint="Color_GetPackedColorRGBA")]
  #endif
  public static extern uint Color_GetPackedColorRGBA(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_TryParse")]
  #else
  [DllImport("Noesis", EntryPoint="Color_TryParse")]
  #endif
  public static extern bool Color_TryParse(string jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_Parse")]
  #else
  [DllImport("Noesis", EntryPoint="Color_Parse")]
  #endif
  public static extern IntPtr Color_Parse(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_Black_get")]
  #else
  [DllImport("Noesis", EntryPoint="Color_Black_get")]
  #endif
  public static extern IntPtr Color_Black_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_Blue_get")]
  #else
  [DllImport("Noesis", EntryPoint="Color_Blue_get")]
  #endif
  public static extern IntPtr Color_Blue_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_Cyan_get")]
  #else
  [DllImport("Noesis", EntryPoint="Color_Cyan_get")]
  #endif
  public static extern IntPtr Color_Cyan_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_DarkGray_get")]
  #else
  [DllImport("Noesis", EntryPoint="Color_DarkGray_get")]
  #endif
  public static extern IntPtr Color_DarkGray_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_Gray_get")]
  #else
  [DllImport("Noesis", EntryPoint="Color_Gray_get")]
  #endif
  public static extern IntPtr Color_Gray_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_Green_get")]
  #else
  [DllImport("Noesis", EntryPoint="Color_Green_get")]
  #endif
  public static extern IntPtr Color_Green_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_LightGray_get")]
  #else
  [DllImport("Noesis", EntryPoint="Color_LightGray_get")]
  #endif
  public static extern IntPtr Color_LightGray_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_Magenta_get")]
  #else
  [DllImport("Noesis", EntryPoint="Color_Magenta_get")]
  #endif
  public static extern IntPtr Color_Magenta_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_Orange_get")]
  #else
  [DllImport("Noesis", EntryPoint="Color_Orange_get")]
  #endif
  public static extern IntPtr Color_Orange_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_Pink_get")]
  #else
  [DllImport("Noesis", EntryPoint="Color_Pink_get")]
  #endif
  public static extern IntPtr Color_Pink_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_Red_get")]
  #else
  [DllImport("Noesis", EntryPoint="Color_Red_get")]
  #endif
  public static extern IntPtr Color_Red_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_White_get")]
  #else
  [DllImport("Noesis", EntryPoint="Color_White_get")]
  #endif
  public static extern IntPtr Color_White_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Color_Yellow_get")]
  #else
  [DllImport("Noesis", EntryPoint="Color_Yellow_get")]
  #endif
  public static extern IntPtr Color_Yellow_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Color")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Color")]
  #endif
  public static extern void delete_Color(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PreMultiplyAlpha")]
  #else
  [DllImport("Noesis", EntryPoint="PreMultiplyAlpha")]
  #endif
  public static extern IntPtr PreMultiplyAlpha(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Lerp__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Lerp__SWIG_0")]
  #endif
  public static extern IntPtr Lerp__SWIG_0(HandleRef jarg1, HandleRef jarg2, float jarg3, bool jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Lerp__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Lerp__SWIG_1")]
  #endif
  public static extern IntPtr Lerp__SWIG_1(HandleRef jarg1, HandleRef jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Add__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Add__SWIG_0")]
  #endif
  public static extern IntPtr Add__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Add__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Add__SWIG_1")]
  #endif
  public static extern IntPtr Add__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Modulate")]
  #else
  [DllImport("Noesis", EntryPoint="Modulate")]
  #endif
  public static extern IntPtr Modulate(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Size_width_set")]
  #else
  [DllImport("Noesis", EntryPoint="Size_width_set")]
  #endif
  public static extern void Size_width_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Size_width_get")]
  #else
  [DllImport("Noesis", EntryPoint="Size_width_get")]
  #endif
  public static extern float Size_width_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Size_height_set")]
  #else
  [DllImport("Noesis", EntryPoint="Size_height_set")]
  #endif
  public static extern void Size_height_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Size_height_get")]
  #else
  [DllImport("Noesis", EntryPoint="Size_height_get")]
  #endif
  public static extern float Size_height_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Size__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_Size__SWIG_0")]
  #endif
  public static extern IntPtr new_Size__SWIG_0(float jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Size__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_Size__SWIG_1")]
  #endif
  public static extern IntPtr new_Size__SWIG_1(float jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Size__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_Size__SWIG_2")]
  #endif
  public static extern IntPtr new_Size__SWIG_2();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Size__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="new_Size__SWIG_3")]
  #endif
  public static extern IntPtr new_Size__SWIG_3(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Size__SWIG_4")]
  #else
  [DllImport("Noesis", EntryPoint="new_Size__SWIG_4")]
  #endif
  public static extern IntPtr new_Size__SWIG_4(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Size__SWIG_5")]
  #else
  [DllImport("Noesis", EntryPoint="new_Size__SWIG_5")]
  #endif
  public static extern IntPtr new_Size__SWIG_5(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Size_Expand")]
  #else
  [DllImport("Noesis", EntryPoint="Size_Expand")]
  #endif
  public static extern void Size_Expand(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Size_Scale")]
  #else
  [DllImport("Noesis", EntryPoint="Size_Scale")]
  #endif
  public static extern void Size_Scale(HandleRef jarg1, float jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Size_Parse")]
  #else
  [DllImport("Noesis", EntryPoint="Size_Parse")]
  #endif
  public static extern IntPtr Size_Parse(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Size_TryParse")]
  #else
  [DllImport("Noesis", EntryPoint="Size_TryParse")]
  #endif
  public static extern bool Size_TryParse(string jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Size_Zero")]
  #else
  [DllImport("Noesis", EntryPoint="Size_Zero")]
  #endif
  public static extern IntPtr Size_Zero();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Size_Infinite")]
  #else
  [DllImport("Noesis", EntryPoint="Size_Infinite")]
  #endif
  public static extern IntPtr Size_Infinite();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Size")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Size")]
  #endif
  public static extern void delete_Size(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Sizei_width_set")]
  #else
  [DllImport("Noesis", EntryPoint="Sizei_width_set")]
  #endif
  public static extern void Sizei_width_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Sizei_width_get")]
  #else
  [DllImport("Noesis", EntryPoint="Sizei_width_get")]
  #endif
  public static extern int Sizei_width_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Sizei_height_set")]
  #else
  [DllImport("Noesis", EntryPoint="Sizei_height_set")]
  #endif
  public static extern void Sizei_height_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Sizei_height_get")]
  #else
  [DllImport("Noesis", EntryPoint="Sizei_height_get")]
  #endif
  public static extern int Sizei_height_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Sizei__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_Sizei__SWIG_0")]
  #endif
  public static extern IntPtr new_Sizei__SWIG_0(int jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Sizei__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_Sizei__SWIG_1")]
  #endif
  public static extern IntPtr new_Sizei__SWIG_1(int jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Sizei__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_Sizei__SWIG_2")]
  #endif
  public static extern IntPtr new_Sizei__SWIG_2();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Sizei__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="new_Sizei__SWIG_3")]
  #endif
  public static extern IntPtr new_Sizei__SWIG_3(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Sizei__SWIG_4")]
  #else
  [DllImport("Noesis", EntryPoint="new_Sizei__SWIG_4")]
  #endif
  public static extern IntPtr new_Sizei__SWIG_4(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Sizei__SWIG_5")]
  #else
  [DllImport("Noesis", EntryPoint="new_Sizei__SWIG_5")]
  #endif
  public static extern IntPtr new_Sizei__SWIG_5(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Sizei_Expand")]
  #else
  [DllImport("Noesis", EntryPoint="Sizei_Expand")]
  #endif
  public static extern void Sizei_Expand(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Sizei_Scale")]
  #else
  [DllImport("Noesis", EntryPoint="Sizei_Scale")]
  #endif
  public static extern void Sizei_Scale(HandleRef jarg1, int jarg2, int jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Sizei_Parse")]
  #else
  [DllImport("Noesis", EntryPoint="Sizei_Parse")]
  #endif
  public static extern IntPtr Sizei_Parse(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Sizei_TryParse")]
  #else
  [DllImport("Noesis", EntryPoint="Sizei_TryParse")]
  #endif
  public static extern bool Sizei_TryParse(string jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Sizei_Zero")]
  #else
  [DllImport("Noesis", EntryPoint="Sizei_Zero")]
  #endif
  public static extern IntPtr Sizei_Zero();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Sizei_Infinite")]
  #else
  [DllImport("Noesis", EntryPoint="Sizei_Infinite")]
  #endif
  public static extern IntPtr Sizei_Infinite();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Sizei")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Sizei")]
  #endif
  public static extern void delete_Sizei(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Point__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_Point__SWIG_0")]
  #endif
  public static extern IntPtr new_Point__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Point__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_Point__SWIG_1")]
  #endif
  public static extern IntPtr new_Point__SWIG_1(float jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Point__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_Point__SWIG_2")]
  #endif
  public static extern IntPtr new_Point__SWIG_2(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Point__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="new_Point__SWIG_3")]
  #endif
  public static extern IntPtr new_Point__SWIG_3(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Point__SWIG_4")]
  #else
  [DllImport("Noesis", EntryPoint="new_Point__SWIG_4")]
  #endif
  public static extern IntPtr new_Point__SWIG_4(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Point__SWIG_5")]
  #else
  [DllImport("Noesis", EntryPoint="new_Point__SWIG_5")]
  #endif
  public static extern IntPtr new_Point__SWIG_5(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Point_Parse")]
  #else
  [DllImport("Noesis", EntryPoint="Point_Parse")]
  #endif
  public static extern IntPtr Point_Parse(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Point_TryParse")]
  #else
  [DllImport("Noesis", EntryPoint="Point_TryParse")]
  #endif
  public static extern bool Point_TryParse(string jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Point")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Point")]
  #endif
  public static extern void delete_Point(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Pointi__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_Pointi__SWIG_0")]
  #endif
  public static extern IntPtr new_Pointi__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Pointi__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_Pointi__SWIG_1")]
  #endif
  public static extern IntPtr new_Pointi__SWIG_1(int jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Pointi__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_Pointi__SWIG_2")]
  #endif
  public static extern IntPtr new_Pointi__SWIG_2(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Pointi__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="new_Pointi__SWIG_3")]
  #endif
  public static extern IntPtr new_Pointi__SWIG_3(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Pointi__SWIG_4")]
  #else
  [DllImport("Noesis", EntryPoint="new_Pointi__SWIG_4")]
  #endif
  public static extern IntPtr new_Pointi__SWIG_4(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Pointi__SWIG_5")]
  #else
  [DllImport("Noesis", EntryPoint="new_Pointi__SWIG_5")]
  #endif
  public static extern IntPtr new_Pointi__SWIG_5(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pointi_Parse")]
  #else
  [DllImport("Noesis", EntryPoint="Pointi_Parse")]
  #endif
  public static extern IntPtr Pointi_Parse(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pointi_TryParse")]
  #else
  [DllImport("Noesis", EntryPoint="Pointi_TryParse")]
  #endif
  public static extern bool Pointi_TryParse(string jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Pointi")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Pointi")]
  #endif
  public static extern void delete_Pointi(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_x_set")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_x_set")]
  #endif
  public static extern void Rect_x_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_x_get")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_x_get")]
  #endif
  public static extern float Rect_x_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_y_set")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_y_set")]
  #endif
  public static extern void Rect_y_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_y_get")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_y_get")]
  #endif
  public static extern float Rect_y_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_width_set")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_width_set")]
  #endif
  public static extern void Rect_width_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_width_get")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_width_get")]
  #endif
  public static extern float Rect_width_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_height_set")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_height_set")]
  #endif
  public static extern void Rect_height_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_height_get")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_height_get")]
  #endif
  public static extern float Rect_height_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Rect__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_Rect__SWIG_0")]
  #endif
  public static extern IntPtr new_Rect__SWIG_0(float jarg1, float jarg2, float jarg3, float jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Rect__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_Rect__SWIG_1")]
  #endif
  public static extern IntPtr new_Rect__SWIG_1(float jarg1, float jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Rect__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_Rect__SWIG_2")]
  #endif
  public static extern IntPtr new_Rect__SWIG_2(float jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Rect__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="new_Rect__SWIG_3")]
  #endif
  public static extern IntPtr new_Rect__SWIG_3(float jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Rect__SWIG_4")]
  #else
  [DllImport("Noesis", EntryPoint="new_Rect__SWIG_4")]
  #endif
  public static extern IntPtr new_Rect__SWIG_4();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Rect__SWIG_5")]
  #else
  [DllImport("Noesis", EntryPoint="new_Rect__SWIG_5")]
  #endif
  public static extern IntPtr new_Rect__SWIG_5(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Rect__SWIG_6")]
  #else
  [DllImport("Noesis", EntryPoint="new_Rect__SWIG_6")]
  #endif
  public static extern IntPtr new_Rect__SWIG_6(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Rect__SWIG_7")]
  #else
  [DllImport("Noesis", EntryPoint="new_Rect__SWIG_7")]
  #endif
  public static extern IntPtr new_Rect__SWIG_7(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Rect__SWIG_8")]
  #else
  [DllImport("Noesis", EntryPoint="new_Rect__SWIG_8")]
  #endif
  public static extern IntPtr new_Rect__SWIG_8(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_GetLocation")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_GetLocation")]
  #endif
  public static extern IntPtr Rect_GetLocation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_SetLocation")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_SetLocation")]
  #endif
  public static extern void Rect_SetLocation(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_GetSize")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_GetSize")]
  #endif
  public static extern IntPtr Rect_GetSize(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_SetSize")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_SetSize")]
  #endif
  public static extern void Rect_SetSize(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_GetLeft")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_GetLeft")]
  #endif
  public static extern float Rect_GetLeft(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_GetRight")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_GetRight")]
  #endif
  public static extern float Rect_GetRight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_GetTop")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_GetTop")]
  #endif
  public static extern float Rect_GetTop(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_GetBottom")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_GetBottom")]
  #endif
  public static extern float Rect_GetBottom(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_GetTopLeft")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_GetTopLeft")]
  #endif
  public static extern IntPtr Rect_GetTopLeft(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_GetTopRight")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_GetTopRight")]
  #endif
  public static extern IntPtr Rect_GetTopRight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_GetBottomLeft")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_GetBottomLeft")]
  #endif
  public static extern IntPtr Rect_GetBottomLeft(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_GetBottomRight")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_GetBottomRight")]
  #endif
  public static extern IntPtr Rect_GetBottomRight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_IsEmpty")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_IsEmpty")]
  #endif
  public static extern bool Rect_IsEmpty(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_Contains__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_Contains__SWIG_0")]
  #endif
  public static extern bool Rect_Contains__SWIG_0(HandleRef jarg1, float jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_Contains__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_Contains__SWIG_1")]
  #endif
  public static extern bool Rect_Contains__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_Contains__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_Contains__SWIG_2")]
  #endif
  public static extern bool Rect_Contains__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_Inflate__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_Inflate__SWIG_0")]
  #endif
  public static extern void Rect_Inflate__SWIG_0(HandleRef jarg1, float jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_Inflate__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_Inflate__SWIG_1")]
  #endif
  public static extern void Rect_Inflate__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_Intersect")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_Intersect")]
  #endif
  public static extern IntPtr Rect_Intersect(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_IntersectsWith")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_IntersectsWith")]
  #endif
  public static extern bool Rect_IntersectsWith(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_Offset")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_Offset")]
  #endif
  public static extern void Rect_Offset(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_Scale")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_Scale")]
  #endif
  public static extern void Rect_Scale(HandleRef jarg1, float jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_Expand__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_Expand__SWIG_0")]
  #endif
  public static extern void Rect_Expand__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_Expand__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_Expand__SWIG_1")]
  #endif
  public static extern void Rect_Expand__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_Transform__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_Transform__SWIG_0")]
  #endif
  public static extern void Rect_Transform__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_Transform__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_Transform__SWIG_1")]
  #endif
  public static extern void Rect_Transform__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_Parse")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_Parse")]
  #endif
  public static extern IntPtr Rect_Parse(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_TryParse")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_TryParse")]
  #endif
  public static extern bool Rect_TryParse(string jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_Empty")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_Empty")]
  #endif
  public static extern IntPtr Rect_Empty();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rect_Infinite")]
  #else
  [DllImport("Noesis", EntryPoint="Rect_Infinite")]
  #endif
  public static extern IntPtr Rect_Infinite();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Rect")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Rect")]
  #endif
  public static extern void delete_Rect(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_x_set")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_x_set")]
  #endif
  public static extern void Recti_x_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_x_get")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_x_get")]
  #endif
  public static extern int Recti_x_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_y_set")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_y_set")]
  #endif
  public static extern void Recti_y_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_y_get")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_y_get")]
  #endif
  public static extern int Recti_y_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_width_set")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_width_set")]
  #endif
  public static extern void Recti_width_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_width_get")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_width_get")]
  #endif
  public static extern int Recti_width_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_height_set")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_height_set")]
  #endif
  public static extern void Recti_height_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_height_get")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_height_get")]
  #endif
  public static extern int Recti_height_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Recti__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_Recti__SWIG_0")]
  #endif
  public static extern IntPtr new_Recti__SWIG_0(int jarg1, int jarg2, int jarg3, int jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Recti__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_Recti__SWIG_1")]
  #endif
  public static extern IntPtr new_Recti__SWIG_1(int jarg1, int jarg2, int jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Recti__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_Recti__SWIG_2")]
  #endif
  public static extern IntPtr new_Recti__SWIG_2(int jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Recti__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="new_Recti__SWIG_3")]
  #endif
  public static extern IntPtr new_Recti__SWIG_3(int jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Recti__SWIG_4")]
  #else
  [DllImport("Noesis", EntryPoint="new_Recti__SWIG_4")]
  #endif
  public static extern IntPtr new_Recti__SWIG_4();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Recti__SWIG_5")]
  #else
  [DllImport("Noesis", EntryPoint="new_Recti__SWIG_5")]
  #endif
  public static extern IntPtr new_Recti__SWIG_5(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Recti__SWIG_6")]
  #else
  [DllImport("Noesis", EntryPoint="new_Recti__SWIG_6")]
  #endif
  public static extern IntPtr new_Recti__SWIG_6(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Recti__SWIG_7")]
  #else
  [DllImport("Noesis", EntryPoint="new_Recti__SWIG_7")]
  #endif
  public static extern IntPtr new_Recti__SWIG_7(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_GetLocation")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_GetLocation")]
  #endif
  public static extern IntPtr Recti_GetLocation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_SetLocation")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_SetLocation")]
  #endif
  public static extern void Recti_SetLocation(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_GetSize")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_GetSize")]
  #endif
  public static extern IntPtr Recti_GetSize(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_SetSize")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_SetSize")]
  #endif
  public static extern void Recti_SetSize(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_GetLeft")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_GetLeft")]
  #endif
  public static extern int Recti_GetLeft(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_GetRight")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_GetRight")]
  #endif
  public static extern int Recti_GetRight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_GetTop")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_GetTop")]
  #endif
  public static extern int Recti_GetTop(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_GetBottom")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_GetBottom")]
  #endif
  public static extern int Recti_GetBottom(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_GetTopLeft")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_GetTopLeft")]
  #endif
  public static extern IntPtr Recti_GetTopLeft(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_GetTopRight")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_GetTopRight")]
  #endif
  public static extern IntPtr Recti_GetTopRight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_GetBottomLeft")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_GetBottomLeft")]
  #endif
  public static extern IntPtr Recti_GetBottomLeft(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_GetBottomRight")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_GetBottomRight")]
  #endif
  public static extern IntPtr Recti_GetBottomRight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_IsEmpty")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_IsEmpty")]
  #endif
  public static extern bool Recti_IsEmpty(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_Contains__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_Contains__SWIG_0")]
  #endif
  public static extern bool Recti_Contains__SWIG_0(HandleRef jarg1, int jarg2, int jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_Contains__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_Contains__SWIG_1")]
  #endif
  public static extern bool Recti_Contains__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_Contains__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_Contains__SWIG_2")]
  #endif
  public static extern bool Recti_Contains__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_Inflate__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_Inflate__SWIG_0")]
  #endif
  public static extern void Recti_Inflate__SWIG_0(HandleRef jarg1, int jarg2, int jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_Inflate__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_Inflate__SWIG_1")]
  #endif
  public static extern void Recti_Inflate__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_Intersect")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_Intersect")]
  #endif
  public static extern IntPtr Recti_Intersect(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_IntersectsWith")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_IntersectsWith")]
  #endif
  public static extern bool Recti_IntersectsWith(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_Offset")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_Offset")]
  #endif
  public static extern void Recti_Offset(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_Scale")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_Scale")]
  #endif
  public static extern void Recti_Scale(HandleRef jarg1, int jarg2, int jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_Expand__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_Expand__SWIG_0")]
  #endif
  public static extern void Recti_Expand__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_Expand__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_Expand__SWIG_1")]
  #endif
  public static extern void Recti_Expand__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_Parse")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_Parse")]
  #endif
  public static extern IntPtr Recti_Parse(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_TryParse")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_TryParse")]
  #endif
  public static extern bool Recti_TryParse(string jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_Empty")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_Empty")]
  #endif
  public static extern IntPtr Recti_Empty();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Recti_Infinite")]
  #else
  [DllImport("Noesis", EntryPoint="Recti_Infinite")]
  #endif
  public static extern IntPtr Recti_Infinite();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Recti")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Recti")]
  #endif
  public static extern void delete_Recti(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Thickness_left_set")]
  #else
  [DllImport("Noesis", EntryPoint="Thickness_left_set")]
  #endif
  public static extern void Thickness_left_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Thickness_left_get")]
  #else
  [DllImport("Noesis", EntryPoint="Thickness_left_get")]
  #endif
  public static extern float Thickness_left_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Thickness_top_set")]
  #else
  [DllImport("Noesis", EntryPoint="Thickness_top_set")]
  #endif
  public static extern void Thickness_top_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Thickness_top_get")]
  #else
  [DllImport("Noesis", EntryPoint="Thickness_top_get")]
  #endif
  public static extern float Thickness_top_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Thickness_right_set")]
  #else
  [DllImport("Noesis", EntryPoint="Thickness_right_set")]
  #endif
  public static extern void Thickness_right_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Thickness_right_get")]
  #else
  [DllImport("Noesis", EntryPoint="Thickness_right_get")]
  #endif
  public static extern float Thickness_right_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Thickness_bottom_set")]
  #else
  [DllImport("Noesis", EntryPoint="Thickness_bottom_set")]
  #endif
  public static extern void Thickness_bottom_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Thickness_bottom_get")]
  #else
  [DllImport("Noesis", EntryPoint="Thickness_bottom_get")]
  #endif
  public static extern float Thickness_bottom_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Thickness__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_Thickness__SWIG_0")]
  #endif
  public static extern IntPtr new_Thickness__SWIG_0(float jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Thickness__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_Thickness__SWIG_1")]
  #endif
  public static extern IntPtr new_Thickness__SWIG_1();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Thickness__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_Thickness__SWIG_2")]
  #endif
  public static extern IntPtr new_Thickness__SWIG_2(float jarg1, float jarg2, float jarg3, float jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Thickness__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="new_Thickness__SWIG_3")]
  #endif
  public static extern IntPtr new_Thickness__SWIG_3(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Thickness_Parse")]
  #else
  [DllImport("Noesis", EntryPoint="Thickness_Parse")]
  #endif
  public static extern IntPtr Thickness_Parse(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Thickness_TryParse")]
  #else
  [DllImport("Noesis", EntryPoint="Thickness_TryParse")]
  #endif
  public static extern bool Thickness_TryParse(string jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Thickness")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Thickness")]
  #endif
  public static extern void delete_Thickness(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CornerRadius_topLeft_set")]
  #else
  [DllImport("Noesis", EntryPoint="CornerRadius_topLeft_set")]
  #endif
  public static extern void CornerRadius_topLeft_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CornerRadius_topLeft_get")]
  #else
  [DllImport("Noesis", EntryPoint="CornerRadius_topLeft_get")]
  #endif
  public static extern float CornerRadius_topLeft_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CornerRadius_topRight_set")]
  #else
  [DllImport("Noesis", EntryPoint="CornerRadius_topRight_set")]
  #endif
  public static extern void CornerRadius_topRight_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CornerRadius_topRight_get")]
  #else
  [DllImport("Noesis", EntryPoint="CornerRadius_topRight_get")]
  #endif
  public static extern float CornerRadius_topRight_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CornerRadius_bottomRight_set")]
  #else
  [DllImport("Noesis", EntryPoint="CornerRadius_bottomRight_set")]
  #endif
  public static extern void CornerRadius_bottomRight_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CornerRadius_bottomRight_get")]
  #else
  [DllImport("Noesis", EntryPoint="CornerRadius_bottomRight_get")]
  #endif
  public static extern float CornerRadius_bottomRight_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CornerRadius_bottomLeft_set")]
  #else
  [DllImport("Noesis", EntryPoint="CornerRadius_bottomLeft_set")]
  #endif
  public static extern void CornerRadius_bottomLeft_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CornerRadius_bottomLeft_get")]
  #else
  [DllImport("Noesis", EntryPoint="CornerRadius_bottomLeft_get")]
  #endif
  public static extern float CornerRadius_bottomLeft_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CornerRadius__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_CornerRadius__SWIG_0")]
  #endif
  public static extern IntPtr new_CornerRadius__SWIG_0(float jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CornerRadius__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_CornerRadius__SWIG_1")]
  #endif
  public static extern IntPtr new_CornerRadius__SWIG_1();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CornerRadius__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_CornerRadius__SWIG_2")]
  #endif
  public static extern IntPtr new_CornerRadius__SWIG_2(float jarg1, float jarg2, float jarg3, float jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CornerRadius__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="new_CornerRadius__SWIG_3")]
  #endif
  public static extern IntPtr new_CornerRadius__SWIG_3(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CornerRadius_Parse")]
  #else
  [DllImport("Noesis", EntryPoint="CornerRadius_Parse")]
  #endif
  public static extern IntPtr CornerRadius_Parse(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CornerRadius_TryParse")]
  #else
  [DllImport("Noesis", EntryPoint="CornerRadius_TryParse")]
  #endif
  public static extern bool CornerRadius_TryParse(string jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_CornerRadius")]
  #else
  [DllImport("Noesis", EntryPoint="delete_CornerRadius")]
  #endif
  public static extern void delete_CornerRadius(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DependencyObject")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DependencyObject")]
  #endif
  public static extern void delete_DependencyObject(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyObject_GetValueProvider")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyObject_GetValueProvider")]
  #endif
  public static extern byte DependencyObject_GetValueProvider(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyObject_ClearLocalValue")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyObject_ClearLocalValue")]
  #endif
  public static extern void DependencyObject_ClearLocalValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyObject_InvalidateProperty__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyObject_InvalidateProperty__SWIG_0")]
  #endif
  public static extern void DependencyObject_InvalidateProperty__SWIG_0(HandleRef jarg1, HandleRef jarg2, byte jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyObject_InvalidateProperty__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyObject_InvalidateProperty__SWIG_1")]
  #endif
  public static extern void DependencyObject_InvalidateProperty__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyObject_ClearAnimation")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyObject_ClearAnimation")]
  #endif
  public static extern void DependencyObject_ClearAnimation(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyObject_CoerceValue")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyObject_CoerceValue")]
  #endif
  public static extern void DependencyObject_CoerceValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyObject_IsCached")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyObject_IsCached")]
  #endif
  public static extern bool DependencyObject_IsCached(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyObject_HasAnimatedProperties")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyObject_HasAnimatedProperties")]
  #endif
  public static extern bool DependencyObject_HasAnimatedProperties(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyPropertyChangedEventArgs_prop_set")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyPropertyChangedEventArgs_prop_set")]
  #endif
  public static extern void DependencyPropertyChangedEventArgs_prop_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyPropertyChangedEventArgs_prop_get")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyPropertyChangedEventArgs_prop_get")]
  #endif
  public static extern IntPtr DependencyPropertyChangedEventArgs_prop_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyPropertyChangedEventArgs_oldValue_set")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyPropertyChangedEventArgs_oldValue_set")]
  #endif
  public static extern void DependencyPropertyChangedEventArgs_oldValue_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyPropertyChangedEventArgs_oldValue_get")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyPropertyChangedEventArgs_oldValue_get")]
  #endif
  public static extern IntPtr DependencyPropertyChangedEventArgs_oldValue_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyPropertyChangedEventArgs_newValue_set")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyPropertyChangedEventArgs_newValue_set")]
  #endif
  public static extern void DependencyPropertyChangedEventArgs_newValue_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyPropertyChangedEventArgs_newValue_get")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyPropertyChangedEventArgs_newValue_get")]
  #endif
  public static extern IntPtr DependencyPropertyChangedEventArgs_newValue_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DependencyPropertyChangedEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_DependencyPropertyChangedEventArgs")]
  #endif
  public static extern IntPtr new_DependencyPropertyChangedEventArgs(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DependencyPropertyChangedEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DependencyPropertyChangedEventArgs")]
  #endif
  public static extern void delete_DependencyPropertyChangedEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DependencyProperty")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DependencyProperty")]
  #endif
  public static extern void delete_DependencyProperty(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_GetUnsetValue")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_GetUnsetValue")]
  #endif
  public static extern IntPtr DependencyProperty_GetUnsetValue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_GetName")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_GetName")]
  #endif
  public static extern IntPtr DependencyProperty_GetName(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_GetOwnerType")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_GetOwnerType")]
  #endif
  public static extern IntPtr DependencyProperty_GetOwnerType(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_GetDefaultValue")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_GetDefaultValue")]
  #endif
  public static extern IntPtr DependencyProperty_GetDefaultValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_GetDefaultValueObject")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_GetDefaultValueObject")]
  #endif
  public static extern IntPtr DependencyProperty_GetDefaultValueObject(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_IsReadOnly")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_IsReadOnly")]
  #endif
  public static extern bool DependencyProperty_IsReadOnly(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_GetSize")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_GetSize")]
  #endif
  public static extern uint DependencyProperty_GetSize(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_GetMetaData")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_GetMetaData")]
  #endif
  public static extern IntPtr DependencyProperty_GetMetaData(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_OverrideMetadata")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_OverrideMetadata")]
  #endif
  public static extern void DependencyProperty_OverrideMetadata(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_GetTypeProperty")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_GetTypeProperty")]
  #endif
  public static extern IntPtr DependencyProperty_GetTypeProperty(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_IsSameValue__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_IsSameValue__SWIG_0")]
  #endif
  public static extern bool DependencyProperty_IsSameValue__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_IsSameValue__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_IsSameValue__SWIG_1")]
  #endif
  public static extern bool DependencyProperty_IsSameValue__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_IsSameValue__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_IsSameValue__SWIG_2")]
  #endif
  public static extern bool DependencyProperty_IsSameValue__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_ConstructValue")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_ConstructValue")]
  #endif
  public static extern void DependencyProperty_ConstructValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_DestroyValue")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_DestroyValue")]
  #endif
  public static extern void DependencyProperty_DestroyValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_CopyValue")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_CopyValue")]
  #endif
  public static extern void DependencyProperty_CopyValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_GetValue__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_GetValue__SWIG_0")]
  #endif
  public static extern IntPtr DependencyProperty_GetValue__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_GetValueObject__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_GetValueObject__SWIG_0")]
  #endif
  public static extern IntPtr DependencyProperty_GetValueObject__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_GetValue__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_GetValue__SWIG_1")]
  #endif
  public static extern IntPtr DependencyProperty_GetValue__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_SetValue")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_SetValue")]
  #endif
  public static extern void DependencyProperty_SetValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_GetValueObject__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_GetValueObject__SWIG_1")]
  #endif
  public static extern IntPtr DependencyProperty_GetValueObject__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_SetValueObject")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_SetValueObject")]
  #endif
  public static extern void DependencyProperty_SetValueObject(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_SetCurrentValueObject")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_SetCurrentValueObject")]
  #endif
  public static extern void DependencyProperty_SetCurrentValueObject(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_GetBaseValueObject")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_GetBaseValueObject")]
  #endif
  public static extern IntPtr DependencyProperty_GetBaseValueObject(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_SetAnimationObject")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_SetAnimationObject")]
  #endif
  public static extern void DependencyProperty_SetAnimationObject(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_ClearAnimation")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_ClearAnimation")]
  #endif
  public static extern void DependencyProperty_ClearAnimation(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_CoerceValue")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_CoerceValue")]
  #endif
  public static extern void DependencyProperty_CoerceValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_GetSerializer")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_GetSerializer")]
  #endif
  public static extern IntPtr DependencyProperty_GetSerializer(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_SetOwnerType")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_SetOwnerType")]
  #endif
  public static extern void DependencyProperty_SetOwnerType(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_SetIsReadOnly")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_SetIsReadOnly")]
  #endif
  public static extern void DependencyProperty_SetIsReadOnly(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_AddMetaData__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_AddMetaData__SWIG_0")]
  #endif
  public static extern void DependencyProperty_AddMetaData__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_AddMetaData__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_AddMetaData__SWIG_1")]
  #endif
  public static extern void DependencyProperty_AddMetaData__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_SetValidateValueDelegate")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_SetValidateValueDelegate")]
  #endif
  public static extern void DependencyProperty_SetValidateValueDelegate(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_GetValidateValueDelegate")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_GetValidateValueDelegate")]
  #endif
  public static extern IntPtr DependencyProperty_GetValidateValueDelegate(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SerializePropertyHelper_dp_set")]
  #else
  [DllImport("Noesis", EntryPoint="SerializePropertyHelper_dp_set")]
  #endif
  public static extern void SerializePropertyHelper_dp_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SerializePropertyHelper_dp_get")]
  #else
  [DllImport("Noesis", EntryPoint="SerializePropertyHelper_dp_get")]
  #endif
  public static extern IntPtr SerializePropertyHelper_dp_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_SerializePropertyHelper__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_SerializePropertyHelper__SWIG_0")]
  #endif
  public static extern IntPtr new_SerializePropertyHelper__SWIG_0(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_SerializePropertyHelper__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_SerializePropertyHelper__SWIG_1")]
  #endif
  public static extern IntPtr new_SerializePropertyHelper__SWIG_1();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_SerializePropertyHelper")]
  #else
  [DllImport("Noesis", EntryPoint="delete_SerializePropertyHelper")]
  #endif
  public static extern void delete_SerializePropertyHelper(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FindDependencyProperty")]
  #else
  [DllImport("Noesis", EntryPoint="FindDependencyProperty")]
  #endif
  public static extern IntPtr FindDependencyProperty(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DependencyData")]
  #else
  [DllImport("Noesis", EntryPoint="new_DependencyData")]
  #endif
  public static extern IntPtr new_DependencyData(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyData_FindProperty")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyData_FindProperty")]
  #endif
  public static extern IntPtr DependencyData_FindProperty(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyData_EnumProperties")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyData_EnumProperties")]
  #endif
  public static extern IntPtr DependencyData_EnumProperties(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DependencyData")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DependencyData")]
  #endif
  public static extern void delete_DependencyData(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Freezable")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Freezable")]
  #endif
  public static extern void delete_Freezable(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Freezable_CanFreeze")]
  #else
  [DllImport("Noesis", EntryPoint="Freezable_CanFreeze")]
  #endif
  public static extern bool Freezable_CanFreeze(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Freezable_IsFrozen")]
  #else
  [DllImport("Noesis", EntryPoint="Freezable_IsFrozen")]
  #endif
  public static extern bool Freezable_IsFrozen(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Freezable_Freeze")]
  #else
  [DllImport("Noesis", EntryPoint="Freezable_Freeze")]
  #endif
  public static extern void Freezable_Freeze(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Freezable_Clone")]
  #else
  [DllImport("Noesis", EntryPoint="Freezable_Clone")]
  #endif
  public static extern IntPtr Freezable_Clone(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Freezable_CloneCurrentValue")]
  #else
  [DllImport("Noesis", EntryPoint="Freezable_CloneCurrentValue")]
  #endif
  public static extern IntPtr Freezable_CloneCurrentValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Freezable_GetAsFrozen")]
  #else
  [DllImport("Noesis", EntryPoint="Freezable_GetAsFrozen")]
  #endif
  public static extern IntPtr Freezable_GetAsFrozen(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Freezable_GetCurrentValueAsFrozen")]
  #else
  [DllImport("Noesis", EntryPoint="Freezable_GetCurrentValueAsFrozen")]
  #endif
  public static extern IntPtr Freezable_GetCurrentValueAsFrozen(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Freezable_Changed")]
  #else
  [DllImport("Noesis", EntryPoint="Freezable_Changed")]
  #endif
  public static extern IntPtr Freezable_Changed(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_BaseExpression")]
  #else
  [DllImport("Noesis", EntryPoint="delete_BaseExpression")]
  #endif
  public static extern void delete_BaseExpression(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseExpression_GetEvaluateBehavior")]
  #else
  [DllImport("Noesis", EntryPoint="BaseExpression_GetEvaluateBehavior")]
  #endif
  public static extern int BaseExpression_GetEvaluateBehavior(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseExpression_Evaluate")]
  #else
  [DllImport("Noesis", EntryPoint="BaseExpression_Evaluate")]
  #endif
  public static extern IntPtr BaseExpression_Evaluate(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseExpression_Reapply")]
  #else
  [DllImport("Noesis", EntryPoint="BaseExpression_Reapply")]
  #endif
  public static extern IntPtr BaseExpression_Reapply(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseExpression_BeforeSet")]
  #else
  [DllImport("Noesis", EntryPoint="BaseExpression_BeforeSet")]
  #endif
  public static extern int BaseExpression_BeforeSet(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseExpression_AfterSet")]
  #else
  [DllImport("Noesis", EntryPoint="BaseExpression_AfterSet")]
  #endif
  public static extern void BaseExpression_AfterSet(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_PropertyMetadata__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_PropertyMetadata__SWIG_0")]
  #endif
  public static extern IntPtr new_PropertyMetadata__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_PropertyMetadata__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_PropertyMetadata__SWIG_1")]
  #endif
  public static extern IntPtr new_PropertyMetadata__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_PropertyMetadata__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_PropertyMetadata__SWIG_2")]
  #endif
  public static extern IntPtr new_PropertyMetadata__SWIG_2(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_PropertyMetadata__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="new_PropertyMetadata__SWIG_3")]
  #endif
  public static extern IntPtr new_PropertyMetadata__SWIG_3(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_PropertyMetadata__SWIG_4")]
  #else
  [DllImport("Noesis", EntryPoint="new_PropertyMetadata__SWIG_4")]
  #endif
  public static extern IntPtr new_PropertyMetadata__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_PropertyMetadata__SWIG_5")]
  #else
  [DllImport("Noesis", EntryPoint="new_PropertyMetadata__SWIG_5")]
  #endif
  public static extern IntPtr new_PropertyMetadata__SWIG_5(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_PropertyMetadata__SWIG_6")]
  #else
  [DllImport("Noesis", EntryPoint="new_PropertyMetadata__SWIG_6")]
  #endif
  public static extern IntPtr new_PropertyMetadata__SWIG_6(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_PropertyMetadata")]
  #else
  [DllImport("Noesis", EntryPoint="delete_PropertyMetadata")]
  #endif
  public static extern void delete_PropertyMetadata(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PropertyMetadata_HasDefaultValue")]
  #else
  [DllImport("Noesis", EntryPoint="PropertyMetadata_HasDefaultValue")]
  #endif
  public static extern bool PropertyMetadata_HasDefaultValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PropertyMetadata_GetDefaultValue")]
  #else
  [DllImport("Noesis", EntryPoint="PropertyMetadata_GetDefaultValue")]
  #endif
  public static extern IntPtr PropertyMetadata_GetDefaultValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PropertyMetadata_HasCoerceDelegate")]
  #else
  [DllImport("Noesis", EntryPoint="PropertyMetadata_HasCoerceDelegate")]
  #endif
  public static extern bool PropertyMetadata_HasCoerceDelegate(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PropertyMetadata_GetCoerceDelegate")]
  #else
  [DllImport("Noesis", EntryPoint="PropertyMetadata_GetCoerceDelegate")]
  #endif
  public static extern IntPtr PropertyMetadata_GetCoerceDelegate(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PropertyMetadata_HasPropertyChangedDelegate")]
  #else
  [DllImport("Noesis", EntryPoint="PropertyMetadata_HasPropertyChangedDelegate")]
  #endif
  public static extern bool PropertyMetadata_HasPropertyChangedDelegate(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PropertyMetadata_GetPropertyChangedDelegate")]
  #else
  [DllImport("Noesis", EntryPoint="PropertyMetadata_GetPropertyChangedDelegate")]
  #endif
  public static extern IntPtr PropertyMetadata_GetPropertyChangedDelegate(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PropertyMetadata_IsUncached")]
  #else
  [DllImport("Noesis", EntryPoint="PropertyMetadata_IsUncached")]
  #endif
  public static extern bool PropertyMetadata_IsUncached(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PropertyMetadata_Uncached")]
  #else
  [DllImport("Noesis", EntryPoint="PropertyMetadata_Uncached")]
  #endif
  public static extern bool PropertyMetadata_Uncached(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PropertyMetadata_SetAsUncached")]
  #else
  [DllImport("Noesis", EntryPoint="PropertyMetadata_SetAsUncached")]
  #endif
  public static extern void PropertyMetadata_SetAsUncached(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PropertyMetadata_ClearInheritedValues")]
  #else
  [DllImport("Noesis", EntryPoint="PropertyMetadata_ClearInheritedValues")]
  #endif
  public static extern void PropertyMetadata_ClearInheritedValues(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PropertyMetadata_Merge")]
  #else
  [DllImport("Noesis", EntryPoint="PropertyMetadata_Merge")]
  #endif
  public static extern void PropertyMetadata_Merge(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_UIPropertyMetadata__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_UIPropertyMetadata__SWIG_0")]
  #endif
  public static extern IntPtr new_UIPropertyMetadata__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_UIPropertyMetadata__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_UIPropertyMetadata__SWIG_1")]
  #endif
  public static extern IntPtr new_UIPropertyMetadata__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_UIPropertyMetadata__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_UIPropertyMetadata__SWIG_2")]
  #endif
  public static extern IntPtr new_UIPropertyMetadata__SWIG_2(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_UIPropertyMetadata__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="new_UIPropertyMetadata__SWIG_3")]
  #endif
  public static extern IntPtr new_UIPropertyMetadata__SWIG_3(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_UIPropertyMetadata__SWIG_4")]
  #else
  [DllImport("Noesis", EntryPoint="new_UIPropertyMetadata__SWIG_4")]
  #endif
  public static extern IntPtr new_UIPropertyMetadata__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_UIPropertyMetadata__SWIG_5")]
  #else
  [DllImport("Noesis", EntryPoint="new_UIPropertyMetadata__SWIG_5")]
  #endif
  public static extern IntPtr new_UIPropertyMetadata__SWIG_5(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_UIPropertyMetadata__SWIG_6")]
  #else
  [DllImport("Noesis", EntryPoint="new_UIPropertyMetadata__SWIG_6")]
  #endif
  public static extern IntPtr new_UIPropertyMetadata__SWIG_6(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_UIPropertyMetadata")]
  #else
  [DllImport("Noesis", EntryPoint="delete_UIPropertyMetadata")]
  #endif
  public static extern void delete_UIPropertyMetadata(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_FrameworkPropertyMetadata__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_FrameworkPropertyMetadata__SWIG_0")]
  #endif
  public static extern IntPtr new_FrameworkPropertyMetadata__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_FrameworkPropertyMetadata__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_FrameworkPropertyMetadata__SWIG_1")]
  #endif
  public static extern IntPtr new_FrameworkPropertyMetadata__SWIG_1(int jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_FrameworkPropertyMetadata__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_FrameworkPropertyMetadata__SWIG_2")]
  #endif
  public static extern IntPtr new_FrameworkPropertyMetadata__SWIG_2(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_FrameworkPropertyMetadata__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="new_FrameworkPropertyMetadata__SWIG_3")]
  #endif
  public static extern IntPtr new_FrameworkPropertyMetadata__SWIG_3(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_FrameworkPropertyMetadata__SWIG_4")]
  #else
  [DllImport("Noesis", EntryPoint="new_FrameworkPropertyMetadata__SWIG_4")]
  #endif
  public static extern IntPtr new_FrameworkPropertyMetadata__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_FrameworkPropertyMetadata__SWIG_5")]
  #else
  [DllImport("Noesis", EntryPoint="new_FrameworkPropertyMetadata__SWIG_5")]
  #endif
  public static extern IntPtr new_FrameworkPropertyMetadata__SWIG_5(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_FrameworkPropertyMetadata__SWIG_6")]
  #else
  [DllImport("Noesis", EntryPoint="new_FrameworkPropertyMetadata__SWIG_6")]
  #endif
  public static extern IntPtr new_FrameworkPropertyMetadata__SWIG_6(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_FrameworkPropertyMetadata__SWIG_7")]
  #else
  [DllImport("Noesis", EntryPoint="new_FrameworkPropertyMetadata__SWIG_7")]
  #endif
  public static extern IntPtr new_FrameworkPropertyMetadata__SWIG_7(HandleRef jarg1, int jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_FrameworkPropertyMetadata__SWIG_8")]
  #else
  [DllImport("Noesis", EntryPoint="new_FrameworkPropertyMetadata__SWIG_8")]
  #endif
  public static extern IntPtr new_FrameworkPropertyMetadata__SWIG_8(HandleRef jarg1, int jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_FrameworkPropertyMetadata__SWIG_9")]
  #else
  [DllImport("Noesis", EntryPoint="new_FrameworkPropertyMetadata__SWIG_9")]
  #endif
  public static extern IntPtr new_FrameworkPropertyMetadata__SWIG_9(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkPropertyMetadata_AffectsMeasure")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkPropertyMetadata_AffectsMeasure")]
  #endif
  public static extern bool FrameworkPropertyMetadata_AffectsMeasure(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkPropertyMetadata_AffectsArrange")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkPropertyMetadata_AffectsArrange")]
  #endif
  public static extern bool FrameworkPropertyMetadata_AffectsArrange(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkPropertyMetadata_AffectsParentMeasure")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkPropertyMetadata_AffectsParentMeasure")]
  #endif
  public static extern bool FrameworkPropertyMetadata_AffectsParentMeasure(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkPropertyMetadata_AffectsParentArrange")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkPropertyMetadata_AffectsParentArrange")]
  #endif
  public static extern bool FrameworkPropertyMetadata_AffectsParentArrange(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkPropertyMetadata_AffectsRender")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkPropertyMetadata_AffectsRender")]
  #endif
  public static extern bool FrameworkPropertyMetadata_AffectsRender(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkPropertyMetadata_Inherits")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkPropertyMetadata_Inherits")]
  #endif
  public static extern bool FrameworkPropertyMetadata_Inherits(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkPropertyMetadata_OverridesInheritanceBehavior")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkPropertyMetadata_OverridesInheritanceBehavior")]
  #endif
  public static extern bool FrameworkPropertyMetadata_OverridesInheritanceBehavior(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkPropertyMetadata_IsNotDataBindable")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkPropertyMetadata_IsNotDataBindable")]
  #endif
  public static extern bool FrameworkPropertyMetadata_IsNotDataBindable(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkPropertyMetadata_BindsTwoWayByDefault")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkPropertyMetadata_BindsTwoWayByDefault")]
  #endif
  public static extern bool FrameworkPropertyMetadata_BindsTwoWayByDefault(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkPropertyMetadata_DefaultUpdateSourceTrigger")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkPropertyMetadata_DefaultUpdateSourceTrigger")]
  #endif
  public static extern IntPtr FrameworkPropertyMetadata_DefaultUpdateSourceTrigger(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkPropertyMetadata_SubPropertiesDoNotAffectRender")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkPropertyMetadata_SubPropertiesDoNotAffectRender")]
  #endif
  public static extern bool FrameworkPropertyMetadata_SubPropertiesDoNotAffectRender(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkPropertyMetadata_ClearInheritedValues")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkPropertyMetadata_ClearInheritedValues")]
  #endif
  public static extern void FrameworkPropertyMetadata_ClearInheritedValues(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkPropertyMetadata_Merge")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkPropertyMetadata_Merge")]
  #endif
  public static extern void FrameworkPropertyMetadata_Merge(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_FrameworkPropertyMetadata")]
  #else
  [DllImport("Noesis", EntryPoint="delete_FrameworkPropertyMetadata")]
  #endif
  public static extern void delete_FrameworkPropertyMetadata(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ObjectWithNameScope__object_set")]
  #else
  [DllImport("Noesis", EntryPoint="ObjectWithNameScope__object_set")]
  #endif
  public static extern void ObjectWithNameScope__object_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ObjectWithNameScope__object_get")]
  #else
  [DllImport("Noesis", EntryPoint="ObjectWithNameScope__object_get")]
  #endif
  public static extern IntPtr ObjectWithNameScope__object_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ObjectWithNameScope_scope_set")]
  #else
  [DllImport("Noesis", EntryPoint="ObjectWithNameScope_scope_set")]
  #endif
  public static extern void ObjectWithNameScope_scope_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ObjectWithNameScope_scope_get")]
  #else
  [DllImport("Noesis", EntryPoint="ObjectWithNameScope_scope_get")]
  #endif
  public static extern IntPtr ObjectWithNameScope_scope_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ObjectWithNameScope")]
  #else
  [DllImport("Noesis", EntryPoint="new_ObjectWithNameScope")]
  #endif
  public static extern IntPtr new_ObjectWithNameScope();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ObjectWithNameScope")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ObjectWithNameScope")]
  #endif
  public static extern void delete_ObjectWithNameScope(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NameScopeChangedArgs_action_set")]
  #else
  [DllImport("Noesis", EntryPoint="NameScopeChangedArgs_action_set")]
  #endif
  public static extern void NameScopeChangedArgs_action_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NameScopeChangedArgs_action_get")]
  #else
  [DllImport("Noesis", EntryPoint="NameScopeChangedArgs_action_get")]
  #endif
  public static extern int NameScopeChangedArgs_action_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NameScopeChangedArgs_name_set")]
  #else
  [DllImport("Noesis", EntryPoint="NameScopeChangedArgs_name_set")]
  #endif
  public static extern void NameScopeChangedArgs_name_set(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NameScopeChangedArgs_name_get")]
  #else
  [DllImport("Noesis", EntryPoint="NameScopeChangedArgs_name_get")]
  #endif
  public static extern string NameScopeChangedArgs_name_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NameScopeChangedArgs_newElement_set")]
  #else
  [DllImport("Noesis", EntryPoint="NameScopeChangedArgs_newElement_set")]
  #endif
  public static extern void NameScopeChangedArgs_newElement_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NameScopeChangedArgs_newElement_get")]
  #else
  [DllImport("Noesis", EntryPoint="NameScopeChangedArgs_newElement_get")]
  #endif
  public static extern IntPtr NameScopeChangedArgs_newElement_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NameScopeChangedArgs_oldElement_set")]
  #else
  [DllImport("Noesis", EntryPoint="NameScopeChangedArgs_oldElement_set")]
  #endif
  public static extern void NameScopeChangedArgs_oldElement_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NameScopeChangedArgs_oldElement_get")]
  #else
  [DllImport("Noesis", EntryPoint="NameScopeChangedArgs_oldElement_get")]
  #endif
  public static extern IntPtr NameScopeChangedArgs_oldElement_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_NameScopeChangedArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_NameScopeChangedArgs")]
  #endif
  public static extern IntPtr new_NameScopeChangedArgs();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_NameScopeChangedArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_NameScopeChangedArgs")]
  #endif
  public static extern void delete_NameScopeChangedArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseNullable_HasValue")]
  #else
  [DllImport("Noesis", EntryPoint="BaseNullable_HasValue")]
  #endif
  public static extern bool BaseNullable_HasValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_BaseNullable")]
  #else
  [DllImport("Noesis", EntryPoint="delete_BaseNullable")]
  #endif
  public static extern void delete_BaseNullable(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HitTestResult_visualHit_set")]
  #else
  [DllImport("Noesis", EntryPoint="HitTestResult_visualHit_set")]
  #endif
  public static extern void HitTestResult_visualHit_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HitTestResult_visualHit_get")]
  #else
  [DllImport("Noesis", EntryPoint="HitTestResult_visualHit_get")]
  #endif
  public static extern IntPtr HitTestResult_visualHit_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_HitTestResult")]
  #else
  [DllImport("Noesis", EntryPoint="new_HitTestResult")]
  #endif
  public static extern IntPtr new_HitTestResult();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_HitTestResult")]
  #else
  [DllImport("Noesis", EntryPoint="delete_HitTestResult")]
  #endif
  public static extern void delete_HitTestResult(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Visual")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Visual")]
  #endif
  public static extern void delete_Visual(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Visual_IsAncestorOf")]
  #else
  [DllImport("Noesis", EntryPoint="Visual_IsAncestorOf")]
  #endif
  public static extern bool Visual_IsAncestorOf(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Visual_IsDescendantOf")]
  #else
  [DllImport("Noesis", EntryPoint="Visual_IsDescendantOf")]
  #endif
  public static extern bool Visual_IsDescendantOf(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Visual_FindCommonVisualAncestor")]
  #else
  [DllImport("Noesis", EntryPoint="Visual_FindCommonVisualAncestor")]
  #endif
  public static extern IntPtr Visual_FindCommonVisualAncestor(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Visual_PointFromScreen")]
  #else
  [DllImport("Noesis", EntryPoint="Visual_PointFromScreen")]
  #endif
  public static extern IntPtr Visual_PointFromScreen(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Visual_PointToScreen")]
  #else
  [DllImport("Noesis", EntryPoint="Visual_PointToScreen")]
  #endif
  public static extern IntPtr Visual_PointToScreen(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Visual_TransformToAncestor")]
  #else
  [DllImport("Noesis", EntryPoint="Visual_TransformToAncestor")]
  #endif
  public static extern IntPtr Visual_TransformToAncestor(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Visual_TransformToDescendant")]
  #else
  [DllImport("Noesis", EntryPoint="Visual_TransformToDescendant")]
  #endif
  public static extern IntPtr Visual_TransformToDescendant(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Visual_TransformToVisual")]
  #else
  [DllImport("Noesis", EntryPoint="Visual_TransformToVisual")]
  #endif
  public static extern IntPtr Visual_TransformToVisual(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Visual_CollectStats")]
  #else
  [DllImport("Noesis", EntryPoint="Visual_CollectStats")]
  #endif
  public static extern void Visual_CollectStats(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Visual_DrawWireframe")]
  #else
  [DllImport("Noesis", EntryPoint="Visual_DrawWireframe")]
  #endif
  public static extern void Visual_DrawWireframe(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionChangedArgs_action_set")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionChangedArgs_action_set")]
  #endif
  public static extern void CollectionChangedArgs_action_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionChangedArgs_action_get")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionChangedArgs_action_get")]
  #endif
  public static extern int CollectionChangedArgs_action_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionChangedArgs_oldIndex_set")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionChangedArgs_oldIndex_set")]
  #endif
  public static extern void CollectionChangedArgs_oldIndex_set(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionChangedArgs_oldIndex_get")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionChangedArgs_oldIndex_get")]
  #endif
  public static extern uint CollectionChangedArgs_oldIndex_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionChangedArgs_newIndex_set")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionChangedArgs_newIndex_set")]
  #endif
  public static extern void CollectionChangedArgs_newIndex_set(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionChangedArgs_newIndex_get")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionChangedArgs_newIndex_get")]
  #endif
  public static extern uint CollectionChangedArgs_newIndex_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionChangedArgs_oldValue_set")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionChangedArgs_oldValue_set")]
  #endif
  public static extern void CollectionChangedArgs_oldValue_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionChangedArgs_oldValue_get")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionChangedArgs_oldValue_get")]
  #endif
  public static extern IntPtr CollectionChangedArgs_oldValue_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionChangedArgs_newValue_set")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionChangedArgs_newValue_set")]
  #endif
  public static extern void CollectionChangedArgs_newValue_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionChangedArgs_newValue_get")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionChangedArgs_newValue_get")]
  #endif
  public static extern IntPtr CollectionChangedArgs_newValue_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CollectionChangedArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_CollectionChangedArgs")]
  #endif
  public static extern IntPtr new_CollectionChangedArgs(int jarg1, uint jarg2, uint jarg3, HandleRef jarg4, HandleRef jarg5);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_CollectionChangedArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_CollectionChangedArgs")]
  #endif
  public static extern void delete_CollectionChangedArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Collection__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_Collection__SWIG_0")]
  #endif
  public static extern IntPtr new_Collection__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Collection__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_Collection__SWIG_1")]
  #endif
  public static extern IntPtr new_Collection__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Collection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Collection")]
  #endif
  public static extern void delete_Collection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Collection_Count")]
  #else
  [DllImport("Noesis", EntryPoint="Collection_Count")]
  #endif
  public static extern uint Collection_Count(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Collection_Get")]
  #else
  [DllImport("Noesis", EntryPoint="Collection_Get")]
  #endif
  public static extern IntPtr Collection_Get(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Collection_Set__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Collection_Set__SWIG_0")]
  #endif
  public static extern void Collection_Set__SWIG_0(HandleRef jarg1, uint jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Collection_Set__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Collection_Set__SWIG_1")]
  #endif
  public static extern void Collection_Set__SWIG_1(HandleRef jarg1, uint jarg2, string jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Collection_Add__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Collection_Add__SWIG_0")]
  #endif
  public static extern uint Collection_Add__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Collection_Add__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Collection_Add__SWIG_1")]
  #endif
  public static extern uint Collection_Add__SWIG_1(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Collection_Clear")]
  #else
  [DllImport("Noesis", EntryPoint="Collection_Clear")]
  #endif
  public static extern void Collection_Clear(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Collection_Contains")]
  #else
  [DllImport("Noesis", EntryPoint="Collection_Contains")]
  #endif
  public static extern bool Collection_Contains(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Collection_IndexOf")]
  #else
  [DllImport("Noesis", EntryPoint="Collection_IndexOf")]
  #endif
  public static extern int Collection_IndexOf(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Collection_Insert__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Collection_Insert__SWIG_0")]
  #endif
  public static extern void Collection_Insert__SWIG_0(HandleRef jarg1, uint jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Collection_Insert__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Collection_Insert__SWIG_1")]
  #endif
  public static extern void Collection_Insert__SWIG_1(HandleRef jarg1, uint jarg2, string jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Collection_Remove")]
  #else
  [DllImport("Noesis", EntryPoint="Collection_Remove")]
  #endif
  public static extern void Collection_Remove(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Collection_RemoveAt")]
  #else
  [DllImport("Noesis", EntryPoint="Collection_RemoveAt")]
  #endif
  public static extern void Collection_RemoveAt(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Collection_GetIterator")]
  #else
  [DllImport("Noesis", EntryPoint="Collection_GetIterator")]
  #endif
  public static extern IntPtr Collection_GetIterator(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Collection_CollectionChanged")]
  #else
  [DllImport("Noesis", EntryPoint="Collection_CollectionChanged")]
  #endif
  public static extern IntPtr Collection_CollectionChanged(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Collection_IsInitialized")]
  #else
  [DllImport("Noesis", EntryPoint="Collection_IsInitialized")]
  #endif
  public static extern bool Collection_IsInitialized(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Collection_Init")]
  #else
  [DllImport("Noesis", EntryPoint="Collection_Init")]
  #endif
  public static extern void Collection_Init(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="IdOfTypedCollection")]
  #else
  [DllImport("Noesis", EntryPoint="IdOfTypedCollection")]
  #endif
  public static extern IntPtr IdOfTypedCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_VisualCollection__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_VisualCollection__SWIG_0")]
  #endif
  public static extern IntPtr new_VisualCollection__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_VisualCollection__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_VisualCollection__SWIG_1")]
  #endif
  public static extern IntPtr new_VisualCollection__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_VisualCollection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_VisualCollection")]
  #endif
  public static extern void delete_VisualCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualCollection_SetVisualParent")]
  #else
  [DllImport("Noesis", EntryPoint="VisualCollection_SetVisualParent")]
  #endif
  public static extern void VisualCollection_SetVisualParent(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_UIElement")]
  #else
  [DllImport("Noesis", EntryPoint="new_UIElement")]
  #endif
  public static extern IntPtr new_UIElement();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_UIElement")]
  #else
  [DllImport("Noesis", EntryPoint="delete_UIElement")]
  #endif
  public static extern void delete_UIElement(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetAllowDrop")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetAllowDrop")]
  #endif
  public static extern bool UIElement_GetAllowDrop(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_SetAllowDrop")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_SetAllowDrop")]
  #endif
  public static extern void UIElement_SetAllowDrop(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetClip")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetClip")]
  #endif
  public static extern IntPtr UIElement_GetClip(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_SetClip")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_SetClip")]
  #endif
  public static extern void UIElement_SetClip(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetClipToBounds")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetClipToBounds")]
  #endif
  public static extern bool UIElement_GetClipToBounds(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_SetClipToBounds")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_SetClipToBounds")]
  #endif
  public static extern void UIElement_SetClipToBounds(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetFocusable")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetFocusable")]
  #endif
  public static extern bool UIElement_GetFocusable(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_SetFocusable")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_SetFocusable")]
  #endif
  public static extern void UIElement_SetFocusable(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetIsEnabled")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetIsEnabled")]
  #endif
  public static extern bool UIElement_GetIsEnabled(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_SetIsEnabled")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_SetIsEnabled")]
  #endif
  public static extern void UIElement_SetIsEnabled(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetIsFocused")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetIsFocused")]
  #endif
  public static extern bool UIElement_GetIsFocused(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetIsHitTestVisible")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetIsHitTestVisible")]
  #endif
  public static extern bool UIElement_GetIsHitTestVisible(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_SetIsHitTestVisible")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_SetIsHitTestVisible")]
  #endif
  public static extern void UIElement_SetIsHitTestVisible(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetIsKeyboardFocused")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetIsKeyboardFocused")]
  #endif
  public static extern bool UIElement_GetIsKeyboardFocused(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetIsKeyboardFocusWithin")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetIsKeyboardFocusWithin")]
  #endif
  public static extern bool UIElement_GetIsKeyboardFocusWithin(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetIsMouseCaptured")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetIsMouseCaptured")]
  #endif
  public static extern bool UIElement_GetIsMouseCaptured(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetIsMouseCaptureWithin")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetIsMouseCaptureWithin")]
  #endif
  public static extern bool UIElement_GetIsMouseCaptureWithin(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetIsMouseDirectlyOver")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetIsMouseDirectlyOver")]
  #endif
  public static extern bool UIElement_GetIsMouseDirectlyOver(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetIsMouseOver")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetIsMouseOver")]
  #endif
  public static extern bool UIElement_GetIsMouseOver(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetIsVisible")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetIsVisible")]
  #endif
  public static extern bool UIElement_GetIsVisible(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetOpacityMask")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetOpacityMask")]
  #endif
  public static extern IntPtr UIElement_GetOpacityMask(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_SetOpacityMask")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_SetOpacityMask")]
  #endif
  public static extern void UIElement_SetOpacityMask(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetOpacity")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetOpacity")]
  #endif
  public static extern float UIElement_GetOpacity(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_SetOpacity")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_SetOpacity")]
  #endif
  public static extern void UIElement_SetOpacity(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetProjection")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetProjection")]
  #endif
  public static extern IntPtr UIElement_GetProjection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_SetProjection")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_SetProjection")]
  #endif
  public static extern void UIElement_SetProjection(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetRenderTransformOrigin")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetRenderTransformOrigin")]
  #endif
  public static extern IntPtr UIElement_GetRenderTransformOrigin(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_SetRenderTransformOrigin")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_SetRenderTransformOrigin")]
  #endif
  public static extern void UIElement_SetRenderTransformOrigin(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetRenderTransform")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetRenderTransform")]
  #endif
  public static extern IntPtr UIElement_GetRenderTransform(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_SetRenderTransform")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_SetRenderTransform")]
  #endif
  public static extern void UIElement_SetRenderTransform(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetVisibility")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetVisibility")]
  #endif
  public static extern int UIElement_GetVisibility(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_SetVisibility")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_SetVisibility")]
  #endif
  public static extern void UIElement_SetVisibility(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetAncestorList")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetAncestorList")]
  #endif
  public static extern void UIElement_GetAncestorList(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetUIParent")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetUIParent")]
  #endif
  public static extern IntPtr UIElement_GetUIParent(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetCommandBindings")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetCommandBindings")]
  #endif
  public static extern IntPtr UIElement_GetCommandBindings(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetInputBindings")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetInputBindings")]
  #endif
  public static extern IntPtr UIElement_GetInputBindings(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_CaptureMouse")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_CaptureMouse")]
  #endif
  public static extern bool UIElement_CaptureMouse(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_ReleaseMouseCapture")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_ReleaseMouseCapture")]
  #endif
  public static extern void UIElement_ReleaseMouseCapture(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_Focus")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_Focus")]
  #endif
  public static extern bool UIElement_Focus(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetDesiredSize")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetDesiredSize")]
  #endif
  public static extern IntPtr UIElement_GetDesiredSize(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetRenderSize")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetRenderSize")]
  #endif
  public static extern IntPtr UIElement_GetRenderSize(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_InvalidateMeasure")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_InvalidateMeasure")]
  #endif
  public static extern void UIElement_InvalidateMeasure(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_IsMeasureValid")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_IsMeasureValid")]
  #endif
  public static extern bool UIElement_IsMeasureValid(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_Measure")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_Measure")]
  #endif
  public static extern void UIElement_Measure(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_InvalidateArrange")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_InvalidateArrange")]
  #endif
  public static extern void UIElement_InvalidateArrange(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_IsArrangeValid")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_IsArrangeValid")]
  #endif
  public static extern bool UIElement_IsArrangeValid(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_Arrange")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_Arrange")]
  #endif
  public static extern void UIElement_Arrange(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_InvalidateVisual")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_InvalidateVisual")]
  #endif
  public static extern void UIElement_InvalidateVisual(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetMouse")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetMouse")]
  #endif
  public static extern IntPtr UIElement_GetMouse(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetKeyboard")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetKeyboard")]
  #endif
  public static extern IntPtr UIElement_GetKeyboard(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_MoveFocus")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_MoveFocus")]
  #endif
  public static extern bool UIElement_MoveFocus(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_PredictFocus")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_PredictFocus")]
  #endif
  public static extern IntPtr UIElement_PredictFocus(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetMeasureConstraint")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetMeasureConstraint")]
  #endif
  public static extern IntPtr UIElement_GetMeasureConstraint(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_GetArrangeConstraint")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_GetArrangeConstraint")]
  #endif
  public static extern IntPtr UIElement_GetArrangeConstraint(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_AllowDropProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_AllowDropProperty_set")]
  #endif
  public static extern void UIElement_AllowDropProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_AllowDropProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_AllowDropProperty_get")]
  #endif
  public static extern IntPtr UIElement_AllowDropProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_ClipProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_ClipProperty_set")]
  #endif
  public static extern void UIElement_ClipProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_ClipProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_ClipProperty_get")]
  #endif
  public static extern IntPtr UIElement_ClipProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_ClipToBoundsProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_ClipToBoundsProperty_set")]
  #endif
  public static extern void UIElement_ClipToBoundsProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_ClipToBoundsProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_ClipToBoundsProperty_get")]
  #endif
  public static extern IntPtr UIElement_ClipToBoundsProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_EffectProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_EffectProperty_set")]
  #endif
  public static extern void UIElement_EffectProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_EffectProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_EffectProperty_get")]
  #endif
  public static extern IntPtr UIElement_EffectProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_FocusableProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_FocusableProperty_set")]
  #endif
  public static extern void UIElement_FocusableProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_FocusableProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_FocusableProperty_get")]
  #endif
  public static extern IntPtr UIElement_FocusableProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_IsEnabledProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_IsEnabledProperty_set")]
  #endif
  public static extern void UIElement_IsEnabledProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_IsEnabledProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_IsEnabledProperty_get")]
  #endif
  public static extern IntPtr UIElement_IsEnabledProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_IsFocusedProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_IsFocusedProperty_set")]
  #endif
  public static extern void UIElement_IsFocusedProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_IsFocusedProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_IsFocusedProperty_get")]
  #endif
  public static extern IntPtr UIElement_IsFocusedProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_IsHitTestVisibleProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_IsHitTestVisibleProperty_set")]
  #endif
  public static extern void UIElement_IsHitTestVisibleProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_IsHitTestVisibleProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_IsHitTestVisibleProperty_get")]
  #endif
  public static extern IntPtr UIElement_IsHitTestVisibleProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_IsKeyboardFocusedProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_IsKeyboardFocusedProperty_set")]
  #endif
  public static extern void UIElement_IsKeyboardFocusedProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_IsKeyboardFocusedProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_IsKeyboardFocusedProperty_get")]
  #endif
  public static extern IntPtr UIElement_IsKeyboardFocusedProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_IsKeyboardFocusWithinProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_IsKeyboardFocusWithinProperty_set")]
  #endif
  public static extern void UIElement_IsKeyboardFocusWithinProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_IsKeyboardFocusWithinProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_IsKeyboardFocusWithinProperty_get")]
  #endif
  public static extern IntPtr UIElement_IsKeyboardFocusWithinProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_IsMouseCapturedProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_IsMouseCapturedProperty_set")]
  #endif
  public static extern void UIElement_IsMouseCapturedProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_IsMouseCapturedProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_IsMouseCapturedProperty_get")]
  #endif
  public static extern IntPtr UIElement_IsMouseCapturedProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_IsMouseCaptureWithinProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_IsMouseCaptureWithinProperty_set")]
  #endif
  public static extern void UIElement_IsMouseCaptureWithinProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_IsMouseCaptureWithinProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_IsMouseCaptureWithinProperty_get")]
  #endif
  public static extern IntPtr UIElement_IsMouseCaptureWithinProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_IsMouseDirectlyOverProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_IsMouseDirectlyOverProperty_set")]
  #endif
  public static extern void UIElement_IsMouseDirectlyOverProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_IsMouseDirectlyOverProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_IsMouseDirectlyOverProperty_get")]
  #endif
  public static extern IntPtr UIElement_IsMouseDirectlyOverProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_IsMouseOverProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_IsMouseOverProperty_set")]
  #endif
  public static extern void UIElement_IsMouseOverProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_IsMouseOverProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_IsMouseOverProperty_get")]
  #endif
  public static extern IntPtr UIElement_IsMouseOverProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_IsVisibleProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_IsVisibleProperty_set")]
  #endif
  public static extern void UIElement_IsVisibleProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_IsVisibleProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_IsVisibleProperty_get")]
  #endif
  public static extern IntPtr UIElement_IsVisibleProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_OpacityMaskProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_OpacityMaskProperty_set")]
  #endif
  public static extern void UIElement_OpacityMaskProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_OpacityMaskProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_OpacityMaskProperty_get")]
  #endif
  public static extern IntPtr UIElement_OpacityMaskProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_OpacityProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_OpacityProperty_set")]
  #endif
  public static extern void UIElement_OpacityProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_OpacityProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_OpacityProperty_get")]
  #endif
  public static extern IntPtr UIElement_OpacityProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_ProjectionProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_ProjectionProperty_set")]
  #endif
  public static extern void UIElement_ProjectionProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_ProjectionProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_ProjectionProperty_get")]
  #endif
  public static extern IntPtr UIElement_ProjectionProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_RenderTransformOriginProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_RenderTransformOriginProperty_set")]
  #endif
  public static extern void UIElement_RenderTransformOriginProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_RenderTransformOriginProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_RenderTransformOriginProperty_get")]
  #endif
  public static extern IntPtr UIElement_RenderTransformOriginProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_RenderTransformProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_RenderTransformProperty_set")]
  #endif
  public static extern void UIElement_RenderTransformProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_RenderTransformProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_RenderTransformProperty_get")]
  #endif
  public static extern IntPtr UIElement_RenderTransformProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_VisibilityProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_VisibilityProperty_set")]
  #endif
  public static extern void UIElement_VisibilityProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_VisibilityProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_VisibilityProperty_get")]
  #endif
  public static extern IntPtr UIElement_VisibilityProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_UIElementCollection__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_UIElementCollection__SWIG_0")]
  #endif
  public static extern IntPtr new_UIElementCollection__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_UIElementCollection__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_UIElementCollection__SWIG_1")]
  #endif
  public static extern IntPtr new_UIElementCollection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_UIElementCollection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_UIElementCollection")]
  #endif
  public static extern void delete_UIElementCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElementCollection_SetLogicalParent")]
  #else
  [DllImport("Noesis", EntryPoint="UIElementCollection_SetLogicalParent")]
  #endif
  public static extern void UIElementCollection_SetLogicalParent(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TriggerCollection__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_TriggerCollection__SWIG_0")]
  #endif
  public static extern IntPtr new_TriggerCollection__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TriggerCollection__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_TriggerCollection__SWIG_1")]
  #endif
  public static extern IntPtr new_TriggerCollection__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TriggerCollection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TriggerCollection")]
  #endif
  public static extern void delete_TriggerCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_BaseSetter")]
  #else
  [DllImport("Noesis", EntryPoint="delete_BaseSetter")]
  #endif
  public static extern void delete_BaseSetter(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseSetter_IsInitialized")]
  #else
  [DllImport("Noesis", EntryPoint="BaseSetter_IsInitialized")]
  #endif
  public static extern bool BaseSetter_IsInitialized(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseSetter_Init")]
  #else
  [DllImport("Noesis", EntryPoint="BaseSetter_Init")]
  #endif
  public static extern void BaseSetter_Init(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DictionaryChangedArgs_action_set")]
  #else
  [DllImport("Noesis", EntryPoint="DictionaryChangedArgs_action_set")]
  #endif
  public static extern void DictionaryChangedArgs_action_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DictionaryChangedArgs_action_get")]
  #else
  [DllImport("Noesis", EntryPoint="DictionaryChangedArgs_action_get")]
  #endif
  public static extern int DictionaryChangedArgs_action_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DictionaryChangedArgs_key_set")]
  #else
  [DllImport("Noesis", EntryPoint="DictionaryChangedArgs_key_set")]
  #endif
  public static extern void DictionaryChangedArgs_key_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DictionaryChangedArgs_key_get")]
  #else
  [DllImport("Noesis", EntryPoint="DictionaryChangedArgs_key_get")]
  #endif
  public static extern IntPtr DictionaryChangedArgs_key_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DictionaryChangedArgs_oldValue_set")]
  #else
  [DllImport("Noesis", EntryPoint="DictionaryChangedArgs_oldValue_set")]
  #endif
  public static extern void DictionaryChangedArgs_oldValue_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DictionaryChangedArgs_oldValue_get")]
  #else
  [DllImport("Noesis", EntryPoint="DictionaryChangedArgs_oldValue_get")]
  #endif
  public static extern IntPtr DictionaryChangedArgs_oldValue_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DictionaryChangedArgs_newValue_set")]
  #else
  [DllImport("Noesis", EntryPoint="DictionaryChangedArgs_newValue_set")]
  #endif
  public static extern void DictionaryChangedArgs_newValue_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DictionaryChangedArgs_newValue_get")]
  #else
  [DllImport("Noesis", EntryPoint="DictionaryChangedArgs_newValue_get")]
  #endif
  public static extern IntPtr DictionaryChangedArgs_newValue_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DictionaryChangedArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_DictionaryChangedArgs")]
  #endif
  public static extern IntPtr new_DictionaryChangedArgs(int jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DictionaryChangedArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DictionaryChangedArgs")]
  #endif
  public static extern void delete_DictionaryChangedArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_BaseDictionary")]
  #else
  [DllImport("Noesis", EntryPoint="new_BaseDictionary")]
  #endif
  public static extern IntPtr new_BaseDictionary();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseDictionary_DictionaryChanged")]
  #else
  [DllImport("Noesis", EntryPoint="BaseDictionary_DictionaryChanged")]
  #endif
  public static extern IntPtr BaseDictionary_DictionaryChanged(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_BaseDictionary")]
  #else
  [DllImport("Noesis", EntryPoint="delete_BaseDictionary")]
  #endif
  public static extern void delete_BaseDictionary(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ResourceDictionary")]
  #else
  [DllImport("Noesis", EntryPoint="new_ResourceDictionary")]
  #endif
  public static extern IntPtr new_ResourceDictionary();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ResourceDictionary")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ResourceDictionary")]
  #endif
  public static extern void delete_ResourceDictionary(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_HasResourcesDefined")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_HasResourcesDefined")]
  #endif
  public static extern bool ResourceDictionary_HasResourcesDefined(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_GetMergedDictionaries")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_GetMergedDictionaries")]
  #endif
  public static extern IntPtr ResourceDictionary_GetMergedDictionaries(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_SetSource")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_SetSource")]
  #endif
  public static extern void ResourceDictionary_SetSource(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_GetSource")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_GetSource")]
  #endif
  public static extern IntPtr ResourceDictionary_GetSource(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_Find")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_Find")]
  #endif
  public static extern bool ResourceDictionary_Find(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_Get")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_Get")]
  #endif
  public static extern IntPtr ResourceDictionary_Get(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_Set")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_Set")]
  #endif
  public static extern void ResourceDictionary_Set(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_Add")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_Add")]
  #endif
  public static extern void ResourceDictionary_Add(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_Clear")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_Clear")]
  #endif
  public static extern void ResourceDictionary_Clear(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_Contains")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_Contains")]
  #endif
  public static extern bool ResourceDictionary_Contains(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_Remove")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_Remove")]
  #endif
  public static extern void ResourceDictionary_Remove(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_Count")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_Count")]
  #endif
  public static extern uint ResourceDictionary_Count(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_GetPairIterator")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_GetPairIterator")]
  #endif
  public static extern IntPtr ResourceDictionary_GetPairIterator(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_GetIterator")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_GetIterator")]
  #endif
  public static extern IntPtr ResourceDictionary_GetIterator(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_IsInitialized")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_IsInitialized")]
  #endif
  public static extern bool ResourceDictionary_IsInitialized(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_Init")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_Init")]
  #endif
  public static extern void ResourceDictionary_Init(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_FindName")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_FindName")]
  #endif
  public static extern IntPtr ResourceDictionary_FindName(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_RegisterName")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_RegisterName")]
  #endif
  public static extern void ResourceDictionary_RegisterName(HandleRef jarg1, string jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_UnregisterName")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_UnregisterName")]
  #endif
  public static extern void ResourceDictionary_UnregisterName(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_UpdateName")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_UpdateName")]
  #endif
  public static extern void ResourceDictionary_UpdateName(HandleRef jarg1, string jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_NameScopeChanged")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_NameScopeChanged")]
  #endif
  public static extern IntPtr ResourceDictionary_NameScopeChanged(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_NameScopeDestroyed")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_NameScopeDestroyed")]
  #endif
  public static extern IntPtr ResourceDictionary_NameScopeDestroyed(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_EnumObjects")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_EnumObjects")]
  #endif
  public static extern IntPtr ResourceDictionary_EnumObjects(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_TryGet")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_TryGet")]
  #endif
  public static extern IntPtr ResourceDictionary_TryGet(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ResourceKeyString")]
  #else
  [DllImport("Noesis", EntryPoint="new_ResourceKeyString")]
  #endif
  public static extern IntPtr new_ResourceKeyString();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ResourceKeyString")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ResourceKeyString")]
  #endif
  public static extern void delete_ResourceKeyString(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceKeyString_Create")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceKeyString_Create")]
  #endif
  public static extern IntPtr ResourceKeyString_Create(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceKeyString_TryCreate")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceKeyString_TryCreate")]
  #endif
  public static extern IntPtr ResourceKeyString_TryCreate(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceKeyString_Parse")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceKeyString_Parse")]
  #endif
  public static extern IntPtr ResourceKeyString_Parse(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceKeyString_TryParse")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceKeyString_TryParse")]
  #endif
  public static extern bool ResourceKeyString_TryParse(string jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceKeyString_Get")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceKeyString_Get")]
  #endif
  public static extern string ResourceKeyString_Get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceKeyString_Equals")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceKeyString_Equals")]
  #endif
  public static extern bool ResourceKeyString_Equals(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceKeyString_IsLessThan")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceKeyString_IsLessThan")]
  #endif
  public static extern bool ResourceKeyString_IsLessThan(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceKeyString_GetStr")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceKeyString_GetStr")]
  #endif
  public static extern IntPtr ResourceKeyString_GetStr(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ResourceKeyType")]
  #else
  [DllImport("Noesis", EntryPoint="new_ResourceKeyType")]
  #endif
  public static extern IntPtr new_ResourceKeyType();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ResourceKeyType")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ResourceKeyType")]
  #endif
  public static extern void delete_ResourceKeyType(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceKeyType_Create")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceKeyType_Create")]
  #endif
  public static extern IntPtr ResourceKeyType_Create(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceKeyType_Parse")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceKeyType_Parse")]
  #endif
  public static extern IntPtr ResourceKeyType_Parse(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceKeyType_TryParse")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceKeyType_TryParse")]
  #endif
  public static extern bool ResourceKeyType_TryParse(string jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceKeyType_Get")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceKeyType_Get")]
  #endif
  public static extern IntPtr ResourceKeyType_Get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceKeyType_Equals")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceKeyType_Equals")]
  #endif
  public static extern bool ResourceKeyType_Equals(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceKeyType_IsLessThan")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceKeyType_IsLessThan")]
  #endif
  public static extern bool ResourceKeyType_IsLessThan(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceKeyType_GetStr")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceKeyType_GetStr")]
  #endif
  public static extern IntPtr ResourceKeyType_GetStr(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Style")]
  #else
  [DllImport("Noesis", EntryPoint="new_Style")]
  #endif
  public static extern IntPtr new_Style();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Style")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Style")]
  #endif
  public static extern void delete_Style(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Style_GetTargetType")]
  #else
  [DllImport("Noesis", EntryPoint="Style_GetTargetType")]
  #endif
  public static extern IntPtr Style_GetTargetType(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Style_SetTargetType")]
  #else
  [DllImport("Noesis", EntryPoint="Style_SetTargetType")]
  #endif
  public static extern void Style_SetTargetType(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Style_GetBasedOn")]
  #else
  [DllImport("Noesis", EntryPoint="Style_GetBasedOn")]
  #endif
  public static extern IntPtr Style_GetBasedOn(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Style_SetBasedOn")]
  #else
  [DllImport("Noesis", EntryPoint="Style_SetBasedOn")]
  #endif
  public static extern void Style_SetBasedOn(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Style_GetResources")]
  #else
  [DllImport("Noesis", EntryPoint="Style_GetResources")]
  #endif
  public static extern IntPtr Style_GetResources(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Style_SetResources")]
  #else
  [DllImport("Noesis", EntryPoint="Style_SetResources")]
  #endif
  public static extern void Style_SetResources(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Style_GetSetters")]
  #else
  [DllImport("Noesis", EntryPoint="Style_GetSetters")]
  #endif
  public static extern IntPtr Style_GetSetters(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Style_GetTriggers")]
  #else
  [DllImport("Noesis", EntryPoint="Style_GetTriggers")]
  #endif
  public static extern IntPtr Style_GetTriggers(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Style_AttachElement")]
  #else
  [DllImport("Noesis", EntryPoint="Style_AttachElement")]
  #endif
  public static extern void Style_AttachElement(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Style_DetachElement")]
  #else
  [DllImport("Noesis", EntryPoint="Style_DetachElement")]
  #endif
  public static extern void Style_DetachElement(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Style_IsInitialized")]
  #else
  [DllImport("Noesis", EntryPoint="Style_IsInitialized")]
  #endif
  public static extern bool Style_IsInitialized(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Style_Init")]
  #else
  [DllImport("Noesis", EntryPoint="Style_Init")]
  #endif
  public static extern void Style_Init(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TimeManagerRef_timeManager_set")]
  #else
  [DllImport("Noesis", EntryPoint="TimeManagerRef_timeManager_set")]
  #endif
  public static extern void TimeManagerRef_timeManager_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TimeManagerRef_timeManager_get")]
  #else
  [DllImport("Noesis", EntryPoint="TimeManagerRef_timeManager_get")]
  #endif
  public static extern IntPtr TimeManagerRef_timeManager_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TimeManagerRef")]
  #else
  [DllImport("Noesis", EntryPoint="new_TimeManagerRef")]
  #endif
  public static extern IntPtr new_TimeManagerRef();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TimeManagerRef")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TimeManagerRef")]
  #endif
  public static extern void delete_TimeManagerRef(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AncestorNameScopeChangedArgs_action_set")]
  #else
  [DllImport("Noesis", EntryPoint="AncestorNameScopeChangedArgs_action_set")]
  #endif
  public static extern void AncestorNameScopeChangedArgs_action_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AncestorNameScopeChangedArgs_action_get")]
  #else
  [DllImport("Noesis", EntryPoint="AncestorNameScopeChangedArgs_action_get")]
  #endif
  public static extern int AncestorNameScopeChangedArgs_action_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AncestorNameScopeChangedArgs_nameScope_set")]
  #else
  [DllImport("Noesis", EntryPoint="AncestorNameScopeChangedArgs_nameScope_set")]
  #endif
  public static extern void AncestorNameScopeChangedArgs_nameScope_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AncestorNameScopeChangedArgs_nameScope_get")]
  #else
  [DllImport("Noesis", EntryPoint="AncestorNameScopeChangedArgs_nameScope_get")]
  #endif
  public static extern IntPtr AncestorNameScopeChangedArgs_nameScope_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AncestorNameScopeChangedArgs_changeArgs_set")]
  #else
  [DllImport("Noesis", EntryPoint="AncestorNameScopeChangedArgs_changeArgs_set")]
  #endif
  public static extern void AncestorNameScopeChangedArgs_changeArgs_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AncestorNameScopeChangedArgs_changeArgs_get")]
  #else
  [DllImport("Noesis", EntryPoint="AncestorNameScopeChangedArgs_changeArgs_get")]
  #endif
  public static extern IntPtr AncestorNameScopeChangedArgs_changeArgs_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_AncestorNameScopeChangedArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_AncestorNameScopeChangedArgs")]
  #endif
  public static extern IntPtr new_AncestorNameScopeChangedArgs();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_AncestorNameScopeChangedArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_AncestorNameScopeChangedArgs")]
  #endif
  public static extern void delete_AncestorNameScopeChangedArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_FrameworkElement")]
  #else
  [DllImport("Noesis", EntryPoint="new_FrameworkElement")]
  #endif
  public static extern IntPtr new_FrameworkElement();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_FrameworkElement")]
  #else
  [DllImport("Noesis", EntryPoint="delete_FrameworkElement")]
  #endif
  public static extern void delete_FrameworkElement(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetActualHeight")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetActualHeight")]
  #endif
  public static extern float FrameworkElement_GetActualHeight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetActualWidth")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetActualWidth")]
  #endif
  public static extern float FrameworkElement_GetActualWidth(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetContextMenu")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetContextMenu")]
  #endif
  public static extern IntPtr FrameworkElement_GetContextMenu(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SetContextMenu")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SetContextMenu")]
  #endif
  public static extern void FrameworkElement_SetContextMenu(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetDataContext")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetDataContext")]
  #endif
  public static extern IntPtr FrameworkElement_GetDataContext(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SetDataContext")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SetDataContext")]
  #endif
  public static extern void FrameworkElement_SetDataContext(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetDefaultStyleKey")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetDefaultStyleKey")]
  #endif
  public static extern IntPtr FrameworkElement_GetDefaultStyleKey(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SetDefaultStyleKey")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SetDefaultStyleKey")]
  #endif
  public static extern void FrameworkElement_SetDefaultStyleKey(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetFocusVisualStyle")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetFocusVisualStyle")]
  #endif
  public static extern IntPtr FrameworkElement_GetFocusVisualStyle(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SetFocusVisualStyle")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SetFocusVisualStyle")]
  #endif
  public static extern void FrameworkElement_SetFocusVisualStyle(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetHeight")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetHeight")]
  #endif
  public static extern float FrameworkElement_GetHeight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SetHeight")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SetHeight")]
  #endif
  public static extern void FrameworkElement_SetHeight(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetHorizontalAlignment")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetHorizontalAlignment")]
  #endif
  public static extern int FrameworkElement_GetHorizontalAlignment(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SetHorizontalAlignment")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SetHorizontalAlignment")]
  #endif
  public static extern void FrameworkElement_SetHorizontalAlignment(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetLayoutTransform")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetLayoutTransform")]
  #endif
  public static extern IntPtr FrameworkElement_GetLayoutTransform(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SetLayoutTransform")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SetLayoutTransform")]
  #endif
  public static extern void FrameworkElement_SetLayoutTransform(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetMargin")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetMargin")]
  #endif
  public static extern IntPtr FrameworkElement_GetMargin(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SetMargin")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SetMargin")]
  #endif
  public static extern void FrameworkElement_SetMargin(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetMaxHeight")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetMaxHeight")]
  #endif
  public static extern float FrameworkElement_GetMaxHeight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SetMaxHeight")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SetMaxHeight")]
  #endif
  public static extern void FrameworkElement_SetMaxHeight(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetMaxWidth")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetMaxWidth")]
  #endif
  public static extern float FrameworkElement_GetMaxWidth(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SetMaxWidth")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SetMaxWidth")]
  #endif
  public static extern void FrameworkElement_SetMaxWidth(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetMinHeight")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetMinHeight")]
  #endif
  public static extern float FrameworkElement_GetMinHeight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SetMinHeight")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SetMinHeight")]
  #endif
  public static extern void FrameworkElement_SetMinHeight(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetMinWidth")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetMinWidth")]
  #endif
  public static extern float FrameworkElement_GetMinWidth(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SetMinWidth")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SetMinWidth")]
  #endif
  public static extern void FrameworkElement_SetMinWidth(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetName")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetName")]
  #endif
  public static extern IntPtr FrameworkElement_GetName(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SetName")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SetName")]
  #endif
  public static extern void FrameworkElement_SetName(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetOverridesDefaultStyle")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetOverridesDefaultStyle")]
  #endif
  public static extern bool FrameworkElement_GetOverridesDefaultStyle(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SetOverridesDefaultStyle")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SetOverridesDefaultStyle")]
  #endif
  public static extern void FrameworkElement_SetOverridesDefaultStyle(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetStyle")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetStyle")]
  #endif
  public static extern IntPtr FrameworkElement_GetStyle(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SetStyle")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SetStyle")]
  #endif
  public static extern void FrameworkElement_SetStyle(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetTag")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetTag")]
  #endif
  public static extern IntPtr FrameworkElement_GetTag(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SetTag__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SetTag__SWIG_0")]
  #endif
  public static extern void FrameworkElement_SetTag__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SetTag__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SetTag__SWIG_1")]
  #endif
  public static extern void FrameworkElement_SetTag__SWIG_1(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetToolTip")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetToolTip")]
  #endif
  public static extern IntPtr FrameworkElement_GetToolTip(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SetToolTip__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SetToolTip__SWIG_0")]
  #endif
  public static extern void FrameworkElement_SetToolTip__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SetToolTip__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SetToolTip__SWIG_1")]
  #endif
  public static extern void FrameworkElement_SetToolTip__SWIG_1(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetUseLayoutRounding")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetUseLayoutRounding")]
  #endif
  public static extern bool FrameworkElement_GetUseLayoutRounding(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SetUseLayoutRounding")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SetUseLayoutRounding")]
  #endif
  public static extern void FrameworkElement_SetUseLayoutRounding(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetVerticalAlignment")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetVerticalAlignment")]
  #endif
  public static extern int FrameworkElement_GetVerticalAlignment(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SetVerticalAlignment")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SetVerticalAlignment")]
  #endif
  public static extern void FrameworkElement_SetVerticalAlignment(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetWidth")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetWidth")]
  #endif
  public static extern float FrameworkElement_GetWidth(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SetWidth")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SetWidth")]
  #endif
  public static extern void FrameworkElement_SetWidth(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetTriggers")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetTriggers")]
  #endif
  public static extern IntPtr FrameworkElement_GetTriggers(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_IsLoaded")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_IsLoaded")]
  #endif
  public static extern bool FrameworkElement_IsLoaded(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_BringIntoView__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_BringIntoView__SWIG_0")]
  #endif
  public static extern void FrameworkElement_BringIntoView__SWIG_0(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_BringIntoView__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_BringIntoView__SWIG_1")]
  #endif
  public static extern void FrameworkElement_BringIntoView__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetParent")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetParent")]
  #endif
  public static extern IntPtr FrameworkElement_GetParent(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetTemplatedParent")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetTemplatedParent")]
  #endif
  public static extern IntPtr FrameworkElement_GetTemplatedParent(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_FindName")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_FindName")]
  #endif
  public static extern IntPtr FrameworkElement_FindName(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_FindNameAndScope")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_FindNameAndScope")]
  #endif
  public static extern IntPtr FrameworkElement_FindNameAndScope(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_RegisterName")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_RegisterName")]
  #endif
  public static extern void FrameworkElement_RegisterName(HandleRef jarg1, string jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_UnregisterName")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_UnregisterName")]
  #endif
  public static extern void FrameworkElement_UnregisterName(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_UpdateName")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_UpdateName")]
  #endif
  public static extern void FrameworkElement_UpdateName(HandleRef jarg1, string jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_GetResources")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_GetResources")]
  #endif
  public static extern IntPtr FrameworkElement_GetResources(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SetResources")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SetResources")]
  #endif
  public static extern void FrameworkElement_SetResources(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_ActualHeightProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_ActualHeightProperty_set")]
  #endif
  public static extern void FrameworkElement_ActualHeightProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_ActualHeightProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_ActualHeightProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_ActualHeightProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_ActualWidthProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_ActualWidthProperty_set")]
  #endif
  public static extern void FrameworkElement_ActualWidthProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_ActualWidthProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_ActualWidthProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_ActualWidthProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_ContextMenuProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_ContextMenuProperty_set")]
  #endif
  public static extern void FrameworkElement_ContextMenuProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_ContextMenuProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_ContextMenuProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_ContextMenuProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_CursorProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_CursorProperty_set")]
  #endif
  public static extern void FrameworkElement_CursorProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_CursorProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_CursorProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_CursorProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_DataContextProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_DataContextProperty_set")]
  #endif
  public static extern void FrameworkElement_DataContextProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_DataContextProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_DataContextProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_DataContextProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_DefaultStyleKeyProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_DefaultStyleKeyProperty_set")]
  #endif
  public static extern void FrameworkElement_DefaultStyleKeyProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_DefaultStyleKeyProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_DefaultStyleKeyProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_DefaultStyleKeyProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_FlowDirectionProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_FlowDirectionProperty_set")]
  #endif
  public static extern void FrameworkElement_FlowDirectionProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_FlowDirectionProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_FlowDirectionProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_FlowDirectionProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_FocusVisualStyleProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_FocusVisualStyleProperty_set")]
  #endif
  public static extern void FrameworkElement_FocusVisualStyleProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_FocusVisualStyleProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_FocusVisualStyleProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_FocusVisualStyleProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_ForceCursorProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_ForceCursorProperty_set")]
  #endif
  public static extern void FrameworkElement_ForceCursorProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_ForceCursorProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_ForceCursorProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_ForceCursorProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_HeightProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_HeightProperty_set")]
  #endif
  public static extern void FrameworkElement_HeightProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_HeightProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_HeightProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_HeightProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_HorizontalAlignmentProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_HorizontalAlignmentProperty_set")]
  #endif
  public static extern void FrameworkElement_HorizontalAlignmentProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_HorizontalAlignmentProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_HorizontalAlignmentProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_HorizontalAlignmentProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_InputScopeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_InputScopeProperty_set")]
  #endif
  public static extern void FrameworkElement_InputScopeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_InputScopeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_InputScopeProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_InputScopeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_LanguageProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_LanguageProperty_set")]
  #endif
  public static extern void FrameworkElement_LanguageProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_LanguageProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_LanguageProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_LanguageProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_LayoutTransformProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_LayoutTransformProperty_set")]
  #endif
  public static extern void FrameworkElement_LayoutTransformProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_LayoutTransformProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_LayoutTransformProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_LayoutTransformProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_MarginProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_MarginProperty_set")]
  #endif
  public static extern void FrameworkElement_MarginProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_MarginProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_MarginProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_MarginProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_MaxHeightProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_MaxHeightProperty_set")]
  #endif
  public static extern void FrameworkElement_MaxHeightProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_MaxHeightProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_MaxHeightProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_MaxHeightProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_MaxWidthProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_MaxWidthProperty_set")]
  #endif
  public static extern void FrameworkElement_MaxWidthProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_MaxWidthProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_MaxWidthProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_MaxWidthProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_MinHeightProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_MinHeightProperty_set")]
  #endif
  public static extern void FrameworkElement_MinHeightProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_MinHeightProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_MinHeightProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_MinHeightProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_MinWidthProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_MinWidthProperty_set")]
  #endif
  public static extern void FrameworkElement_MinWidthProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_MinWidthProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_MinWidthProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_MinWidthProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_NameProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_NameProperty_set")]
  #endif
  public static extern void FrameworkElement_NameProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_NameProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_NameProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_NameProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_OverridesDefaultStyleProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_OverridesDefaultStyleProperty_set")]
  #endif
  public static extern void FrameworkElement_OverridesDefaultStyleProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_OverridesDefaultStyleProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_OverridesDefaultStyleProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_OverridesDefaultStyleProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_StyleProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_StyleProperty_set")]
  #endif
  public static extern void FrameworkElement_StyleProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_StyleProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_StyleProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_StyleProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_TagProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_TagProperty_set")]
  #endif
  public static extern void FrameworkElement_TagProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_TagProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_TagProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_TagProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_ToolTipProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_ToolTipProperty_set")]
  #endif
  public static extern void FrameworkElement_ToolTipProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_ToolTipProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_ToolTipProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_ToolTipProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_UseLayoutRoundingProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_UseLayoutRoundingProperty_set")]
  #endif
  public static extern void FrameworkElement_UseLayoutRoundingProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_UseLayoutRoundingProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_UseLayoutRoundingProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_UseLayoutRoundingProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_VerticalAlignmentProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_VerticalAlignmentProperty_set")]
  #endif
  public static extern void FrameworkElement_VerticalAlignmentProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_VerticalAlignmentProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_VerticalAlignmentProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_VerticalAlignmentProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_WidthProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_WidthProperty_set")]
  #endif
  public static extern void FrameworkElement_WidthProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_WidthProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_WidthProperty_get")]
  #endif
  public static extern IntPtr FrameworkElement_WidthProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_FrameworkTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="delete_FrameworkTemplate")]
  #endif
  public static extern void delete_FrameworkTemplate(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkTemplate_Apply")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkTemplate_Apply")]
  #endif
  public static extern IntPtr FrameworkTemplate_Apply(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkTemplate_GetResources")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkTemplate_GetResources")]
  #endif
  public static extern IntPtr FrameworkTemplate_GetResources(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkTemplate_SetResources")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkTemplate_SetResources")]
  #endif
  public static extern void FrameworkTemplate_SetResources(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkTemplate_GetVisualTree")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkTemplate_GetVisualTree")]
  #endif
  public static extern IntPtr FrameworkTemplate_GetVisualTree(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkTemplate_SetVisualTree")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkTemplate_SetVisualTree")]
  #endif
  public static extern void FrameworkTemplate_SetVisualTree(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkTemplate_IsInitialized")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkTemplate_IsInitialized")]
  #endif
  public static extern bool FrameworkTemplate_IsInitialized(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkTemplate_Init")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkTemplate_Init")]
  #endif
  public static extern void FrameworkTemplate_Init(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkTemplate_FindName")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkTemplate_FindName")]
  #endif
  public static extern IntPtr FrameworkTemplate_FindName(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkTemplate_RegisterName")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkTemplate_RegisterName")]
  #endif
  public static extern void FrameworkTemplate_RegisterName(HandleRef jarg1, string jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkTemplate_UnregisterName")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkTemplate_UnregisterName")]
  #endif
  public static extern void FrameworkTemplate_UnregisterName(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkTemplate_UpdateName")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkTemplate_UpdateName")]
  #endif
  public static extern void FrameworkTemplate_UpdateName(HandleRef jarg1, string jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkTemplate_NameScopeChanged")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkTemplate_NameScopeChanged")]
  #endif
  public static extern IntPtr FrameworkTemplate_NameScopeChanged(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkTemplate_NameScopeDestroyed")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkTemplate_NameScopeDestroyed")]
  #endif
  public static extern IntPtr FrameworkTemplate_NameScopeDestroyed(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkTemplate_EnumObjects")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkTemplate_EnumObjects")]
  #endif
  public static extern IntPtr FrameworkTemplate_EnumObjects(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ControlTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="new_ControlTemplate")]
  #endif
  public static extern IntPtr new_ControlTemplate();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ControlTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ControlTemplate")]
  #endif
  public static extern void delete_ControlTemplate(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ControlTemplate_GetTargetType")]
  #else
  [DllImport("Noesis", EntryPoint="ControlTemplate_GetTargetType")]
  #endif
  public static extern IntPtr ControlTemplate_GetTargetType(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ControlTemplate_SetTargetType")]
  #else
  [DllImport("Noesis", EntryPoint="ControlTemplate_SetTargetType")]
  #endif
  public static extern void ControlTemplate_SetTargetType(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ControlTemplate_GetTriggers")]
  #else
  [DllImport("Noesis", EntryPoint="ControlTemplate_GetTriggers")]
  #endif
  public static extern IntPtr ControlTemplate_GetTriggers(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Control")]
  #else
  [DllImport("Noesis", EntryPoint="new_Control")]
  #endif
  public static extern IntPtr new_Control();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Control")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Control")]
  #endif
  public static extern void delete_Control(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_GetBackground")]
  #else
  [DllImport("Noesis", EntryPoint="Control_GetBackground")]
  #endif
  public static extern IntPtr Control_GetBackground(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_SetBackground")]
  #else
  [DllImport("Noesis", EntryPoint="Control_SetBackground")]
  #endif
  public static extern void Control_SetBackground(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_GetBorderBrush")]
  #else
  [DllImport("Noesis", EntryPoint="Control_GetBorderBrush")]
  #endif
  public static extern IntPtr Control_GetBorderBrush(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_SetBorderBrush")]
  #else
  [DllImport("Noesis", EntryPoint="Control_SetBorderBrush")]
  #endif
  public static extern void Control_SetBorderBrush(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_GetBorderThickness")]
  #else
  [DllImport("Noesis", EntryPoint="Control_GetBorderThickness")]
  #endif
  public static extern IntPtr Control_GetBorderThickness(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_SetBorderThickness")]
  #else
  [DllImport("Noesis", EntryPoint="Control_SetBorderThickness")]
  #endif
  public static extern void Control_SetBorderThickness(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_GetFontFamily")]
  #else
  [DllImport("Noesis", EntryPoint="Control_GetFontFamily")]
  #endif
  public static extern IntPtr Control_GetFontFamily(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_SetFontFamily")]
  #else
  [DllImport("Noesis", EntryPoint="Control_SetFontFamily")]
  #endif
  public static extern void Control_SetFontFamily(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_GetFontSize")]
  #else
  [DllImport("Noesis", EntryPoint="Control_GetFontSize")]
  #endif
  public static extern float Control_GetFontSize(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_SetFontSize")]
  #else
  [DllImport("Noesis", EntryPoint="Control_SetFontSize")]
  #endif
  public static extern void Control_SetFontSize(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_GetFontStretch")]
  #else
  [DllImport("Noesis", EntryPoint="Control_GetFontStretch")]
  #endif
  public static extern int Control_GetFontStretch(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_SetFontStretch")]
  #else
  [DllImport("Noesis", EntryPoint="Control_SetFontStretch")]
  #endif
  public static extern void Control_SetFontStretch(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_GetFontStyle")]
  #else
  [DllImport("Noesis", EntryPoint="Control_GetFontStyle")]
  #endif
  public static extern int Control_GetFontStyle(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_SetFontStyle")]
  #else
  [DllImport("Noesis", EntryPoint="Control_SetFontStyle")]
  #endif
  public static extern void Control_SetFontStyle(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_GetFontWeight")]
  #else
  [DllImport("Noesis", EntryPoint="Control_GetFontWeight")]
  #endif
  public static extern int Control_GetFontWeight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_SetFontWeight")]
  #else
  [DllImport("Noesis", EntryPoint="Control_SetFontWeight")]
  #endif
  public static extern void Control_SetFontWeight(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_GetForeground")]
  #else
  [DllImport("Noesis", EntryPoint="Control_GetForeground")]
  #endif
  public static extern IntPtr Control_GetForeground(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_SetForeground")]
  #else
  [DllImport("Noesis", EntryPoint="Control_SetForeground")]
  #endif
  public static extern void Control_SetForeground(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_GetHorizontalContentAlignment")]
  #else
  [DllImport("Noesis", EntryPoint="Control_GetHorizontalContentAlignment")]
  #endif
  public static extern int Control_GetHorizontalContentAlignment(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_SetHorizontalContentAlignment")]
  #else
  [DllImport("Noesis", EntryPoint="Control_SetHorizontalContentAlignment")]
  #endif
  public static extern void Control_SetHorizontalContentAlignment(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_GetIsTabStop")]
  #else
  [DllImport("Noesis", EntryPoint="Control_GetIsTabStop")]
  #endif
  public static extern bool Control_GetIsTabStop(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_SetIsTabStop")]
  #else
  [DllImport("Noesis", EntryPoint="Control_SetIsTabStop")]
  #endif
  public static extern void Control_SetIsTabStop(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_GetPadding")]
  #else
  [DllImport("Noesis", EntryPoint="Control_GetPadding")]
  #endif
  public static extern IntPtr Control_GetPadding(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_SetPadding")]
  #else
  [DllImport("Noesis", EntryPoint="Control_SetPadding")]
  #endif
  public static extern void Control_SetPadding(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_GetTabIndex")]
  #else
  [DllImport("Noesis", EntryPoint="Control_GetTabIndex")]
  #endif
  public static extern int Control_GetTabIndex(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_SetTabIndex")]
  #else
  [DllImport("Noesis", EntryPoint="Control_SetTabIndex")]
  #endif
  public static extern void Control_SetTabIndex(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_GetTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="Control_GetTemplate")]
  #endif
  public static extern IntPtr Control_GetTemplate(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_SetTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="Control_SetTemplate")]
  #endif
  public static extern void Control_SetTemplate(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_GetVerticalContentAlignment")]
  #else
  [DllImport("Noesis", EntryPoint="Control_GetVerticalContentAlignment")]
  #endif
  public static extern int Control_GetVerticalContentAlignment(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_SetVerticalContentAlignment")]
  #else
  [DllImport("Noesis", EntryPoint="Control_SetVerticalContentAlignment")]
  #endif
  public static extern void Control_SetVerticalContentAlignment(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_BackgroundProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Control_BackgroundProperty_set")]
  #endif
  public static extern void Control_BackgroundProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_BackgroundProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Control_BackgroundProperty_get")]
  #endif
  public static extern IntPtr Control_BackgroundProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_BorderBrushProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Control_BorderBrushProperty_set")]
  #endif
  public static extern void Control_BorderBrushProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_BorderBrushProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Control_BorderBrushProperty_get")]
  #endif
  public static extern IntPtr Control_BorderBrushProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_BorderThicknessProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Control_BorderThicknessProperty_set")]
  #endif
  public static extern void Control_BorderThicknessProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_BorderThicknessProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Control_BorderThicknessProperty_get")]
  #endif
  public static extern IntPtr Control_BorderThicknessProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_FontFamilyProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Control_FontFamilyProperty_set")]
  #endif
  public static extern void Control_FontFamilyProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_FontFamilyProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Control_FontFamilyProperty_get")]
  #endif
  public static extern IntPtr Control_FontFamilyProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_FontSizeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Control_FontSizeProperty_set")]
  #endif
  public static extern void Control_FontSizeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_FontSizeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Control_FontSizeProperty_get")]
  #endif
  public static extern IntPtr Control_FontSizeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_FontStretchProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Control_FontStretchProperty_set")]
  #endif
  public static extern void Control_FontStretchProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_FontStretchProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Control_FontStretchProperty_get")]
  #endif
  public static extern IntPtr Control_FontStretchProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_FontStyleProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Control_FontStyleProperty_set")]
  #endif
  public static extern void Control_FontStyleProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_FontStyleProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Control_FontStyleProperty_get")]
  #endif
  public static extern IntPtr Control_FontStyleProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_FontWeightProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Control_FontWeightProperty_set")]
  #endif
  public static extern void Control_FontWeightProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_FontWeightProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Control_FontWeightProperty_get")]
  #endif
  public static extern IntPtr Control_FontWeightProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_ForegroundProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Control_ForegroundProperty_set")]
  #endif
  public static extern void Control_ForegroundProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_ForegroundProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Control_ForegroundProperty_get")]
  #endif
  public static extern IntPtr Control_ForegroundProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_HorizontalContentAlignmentProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Control_HorizontalContentAlignmentProperty_set")]
  #endif
  public static extern void Control_HorizontalContentAlignmentProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_HorizontalContentAlignmentProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Control_HorizontalContentAlignmentProperty_get")]
  #endif
  public static extern IntPtr Control_HorizontalContentAlignmentProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_IsTabStopProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Control_IsTabStopProperty_set")]
  #endif
  public static extern void Control_IsTabStopProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_IsTabStopProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Control_IsTabStopProperty_get")]
  #endif
  public static extern IntPtr Control_IsTabStopProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_PaddingProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Control_PaddingProperty_set")]
  #endif
  public static extern void Control_PaddingProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_PaddingProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Control_PaddingProperty_get")]
  #endif
  public static extern IntPtr Control_PaddingProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_TabIndexProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Control_TabIndexProperty_set")]
  #endif
  public static extern void Control_TabIndexProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_TabIndexProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Control_TabIndexProperty_get")]
  #endif
  public static extern IntPtr Control_TabIndexProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_TemplateProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Control_TemplateProperty_set")]
  #endif
  public static extern void Control_TemplateProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_TemplateProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Control_TemplateProperty_get")]
  #endif
  public static extern IntPtr Control_TemplateProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_VerticalContentAlignmentProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Control_VerticalContentAlignmentProperty_set")]
  #endif
  public static extern void Control_VerticalContentAlignmentProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_VerticalContentAlignmentProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Control_VerticalContentAlignmentProperty_get")]
  #endif
  public static extern IntPtr Control_VerticalContentAlignmentProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ContentControl")]
  #else
  [DllImport("Noesis", EntryPoint="new_ContentControl")]
  #endif
  public static extern IntPtr new_ContentControl();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ContentControl")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ContentControl")]
  #endif
  public static extern void delete_ContentControl(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentControl_GetContent")]
  #else
  [DllImport("Noesis", EntryPoint="ContentControl_GetContent")]
  #endif
  public static extern IntPtr ContentControl_GetContent(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentControl_SetContent__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="ContentControl_SetContent__SWIG_0")]
  #endif
  public static extern void ContentControl_SetContent__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentControl_SetContent__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="ContentControl_SetContent__SWIG_1")]
  #endif
  public static extern void ContentControl_SetContent__SWIG_1(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentControl_GetContentTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="ContentControl_GetContentTemplate")]
  #endif
  public static extern IntPtr ContentControl_GetContentTemplate(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentControl_SetContentTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="ContentControl_SetContentTemplate")]
  #endif
  public static extern void ContentControl_SetContentTemplate(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentControl_GetContentTemplateSelector")]
  #else
  [DllImport("Noesis", EntryPoint="ContentControl_GetContentTemplateSelector")]
  #endif
  public static extern IntPtr ContentControl_GetContentTemplateSelector(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentControl_SetContentTemplateSelector")]
  #else
  [DllImport("Noesis", EntryPoint="ContentControl_SetContentTemplateSelector")]
  #endif
  public static extern void ContentControl_SetContentTemplateSelector(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentControl_GetHasContent")]
  #else
  [DllImport("Noesis", EntryPoint="ContentControl_GetHasContent")]
  #endif
  public static extern bool ContentControl_GetHasContent(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentControl_PrepareContainerForItem")]
  #else
  [DllImport("Noesis", EntryPoint="ContentControl_PrepareContainerForItem")]
  #endif
  public static extern void ContentControl_PrepareContainerForItem(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentControl_ContentProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContentControl_ContentProperty_set")]
  #endif
  public static extern void ContentControl_ContentProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentControl_ContentProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContentControl_ContentProperty_get")]
  #endif
  public static extern IntPtr ContentControl_ContentProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentControl_ContentTemplateProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContentControl_ContentTemplateProperty_set")]
  #endif
  public static extern void ContentControl_ContentTemplateProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentControl_ContentTemplateProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContentControl_ContentTemplateProperty_get")]
  #endif
  public static extern IntPtr ContentControl_ContentTemplateProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentControl_ContentTemplateSelectorProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContentControl_ContentTemplateSelectorProperty_set")]
  #endif
  public static extern void ContentControl_ContentTemplateSelectorProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentControl_ContentTemplateSelectorProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContentControl_ContentTemplateSelectorProperty_get")]
  #endif
  public static extern IntPtr ContentControl_ContentTemplateSelectorProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentControl_HasContentProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContentControl_HasContentProperty_set")]
  #endif
  public static extern void ContentControl_HasContentProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentControl_HasContentProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContentControl_HasContentProperty_get")]
  #endif
  public static extern IntPtr ContentControl_HasContentProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Decorator__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_Decorator__SWIG_0")]
  #endif
  public static extern IntPtr new_Decorator__SWIG_0(bool jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Decorator__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_Decorator__SWIG_1")]
  #endif
  public static extern IntPtr new_Decorator__SWIG_1();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Decorator")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Decorator")]
  #endif
  public static extern void delete_Decorator(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Decorator_GetChild")]
  #else
  [DllImport("Noesis", EntryPoint="Decorator_GetChild")]
  #endif
  public static extern IntPtr Decorator_GetChild(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Decorator_SetChild")]
  #else
  [DllImport("Noesis", EntryPoint="Decorator_SetChild")]
  #endif
  public static extern void Decorator_SetChild(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Panel")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Panel")]
  #endif
  public static extern void delete_Panel(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Panel_InvalidateZOrder")]
  #else
  [DllImport("Noesis", EntryPoint="Panel_InvalidateZOrder")]
  #endif
  public static extern void Panel_InvalidateZOrder(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Panel_GetBackground")]
  #else
  [DllImport("Noesis", EntryPoint="Panel_GetBackground")]
  #endif
  public static extern IntPtr Panel_GetBackground(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Panel_SetBackground")]
  #else
  [DllImport("Noesis", EntryPoint="Panel_SetBackground")]
  #endif
  public static extern void Panel_SetBackground(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Panel_GetIsItemsHost")]
  #else
  [DllImport("Noesis", EntryPoint="Panel_GetIsItemsHost")]
  #endif
  public static extern bool Panel_GetIsItemsHost(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Panel_SetIsItemsHost")]
  #else
  [DllImport("Noesis", EntryPoint="Panel_SetIsItemsHost")]
  #endif
  public static extern void Panel_SetIsItemsHost(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Panel_GetZIndex")]
  #else
  [DllImport("Noesis", EntryPoint="Panel_GetZIndex")]
  #endif
  public static extern int Panel_GetZIndex(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Panel_SetZIndex")]
  #else
  [DllImport("Noesis", EntryPoint="Panel_SetZIndex")]
  #endif
  public static extern void Panel_SetZIndex(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Panel_GetChildren")]
  #else
  [DllImport("Noesis", EntryPoint="Panel_GetChildren")]
  #endif
  public static extern IntPtr Panel_GetChildren(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Panel_BackgroundProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Panel_BackgroundProperty_set")]
  #endif
  public static extern void Panel_BackgroundProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Panel_BackgroundProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Panel_BackgroundProperty_get")]
  #endif
  public static extern IntPtr Panel_BackgroundProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Panel_IsItemsHostProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Panel_IsItemsHostProperty_set")]
  #endif
  public static extern void Panel_IsItemsHostProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Panel_IsItemsHostProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Panel_IsItemsHostProperty_get")]
  #endif
  public static extern IntPtr Panel_IsItemsHostProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Panel_ZIndexProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Panel_ZIndexProperty_set")]
  #endif
  public static extern void Panel_ZIndexProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Panel_ZIndexProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Panel_ZIndexProperty_get")]
  #endif
  public static extern IntPtr Panel_ZIndexProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EventArgs_Empty_get")]
  #else
  [DllImport("Noesis", EntryPoint="EventArgs_Empty_get")]
  #endif
  public static extern IntPtr EventArgs_Empty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_EventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_EventArgs")]
  #endif
  public static extern IntPtr new_EventArgs();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_EventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_EventArgs")]
  #endif
  public static extern void delete_EventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Event__event_set")]
  #else
  [DllImport("Noesis", EntryPoint="Event__event_set")]
  #endif
  public static extern void Event__event_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Event__event_get")]
  #else
  [DllImport("Noesis", EntryPoint="Event__event_get")]
  #endif
  public static extern IntPtr Event__event_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Event__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_Event__SWIG_0")]
  #endif
  public static extern IntPtr new_Event__SWIG_0(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Event__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_Event__SWIG_1")]
  #endif
  public static extern IntPtr new_Event__SWIG_1();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Event")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Event")]
  #endif
  public static extern void delete_Event(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_RoutedEvent__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_RoutedEvent__SWIG_0")]
  #endif
  public static extern IntPtr new_RoutedEvent__SWIG_0(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_RoutedEvent__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_RoutedEvent__SWIG_1")]
  #endif
  public static extern IntPtr new_RoutedEvent__SWIG_1(IntPtr jarg1, HandleRef jarg2, int jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_RoutedEvent")]
  #else
  [DllImport("Noesis", EntryPoint="delete_RoutedEvent")]
  #endif
  public static extern void delete_RoutedEvent(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedEvent_GetName")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedEvent_GetName")]
  #endif
  public static extern IntPtr RoutedEvent_GetName(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedEvent_GetOwnerType")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedEvent_GetOwnerType")]
  #endif
  public static extern IntPtr RoutedEvent_GetOwnerType(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedEvent_SetOwnerType")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedEvent_SetOwnerType")]
  #endif
  public static extern void RoutedEvent_SetOwnerType(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedEvent_GetRoutingStrategy")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedEvent_GetRoutingStrategy")]
  #endif
  public static extern int RoutedEvent_GetRoutingStrategy(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedEvent_SetRoutingStrategy")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedEvent_SetRoutingStrategy")]
  #endif
  public static extern void RoutedEvent_SetRoutingStrategy(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedEvent_GetSerializer")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedEvent_GetSerializer")]
  #endif
  public static extern IntPtr RoutedEvent_GetSerializer(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedEventArgs_source_set")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedEventArgs_source_set")]
  #endif
  public static extern void RoutedEventArgs_source_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedEventArgs_source_get")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedEventArgs_source_get")]
  #endif
  public static extern IntPtr RoutedEventArgs_source_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedEventArgs_routedEvent_set")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedEventArgs_routedEvent_set")]
  #endif
  public static extern void RoutedEventArgs_routedEvent_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedEventArgs_routedEvent_get")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedEventArgs_routedEvent_get")]
  #endif
  public static extern IntPtr RoutedEventArgs_routedEvent_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedEventArgs_handled_set")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedEventArgs_handled_set")]
  #endif
  public static extern void RoutedEventArgs_handled_set(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedEventArgs_handled_get")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedEventArgs_handled_get")]
  #endif
  public static extern bool RoutedEventArgs_handled_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_RoutedEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_RoutedEventArgs")]
  #endif
  public static extern IntPtr new_RoutedEventArgs(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_RoutedEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_RoutedEventArgs")]
  #endif
  public static extern void delete_RoutedEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SerializeRoutedEventHelper_ev_set")]
  #else
  [DllImport("Noesis", EntryPoint="SerializeRoutedEventHelper_ev_set")]
  #endif
  public static extern void SerializeRoutedEventHelper_ev_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SerializeRoutedEventHelper_ev_get")]
  #else
  [DllImport("Noesis", EntryPoint="SerializeRoutedEventHelper_ev_get")]
  #endif
  public static extern IntPtr SerializeRoutedEventHelper_ev_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_SerializeRoutedEventHelper__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_SerializeRoutedEventHelper__SWIG_0")]
  #endif
  public static extern IntPtr new_SerializeRoutedEventHelper__SWIG_0(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_SerializeRoutedEventHelper__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_SerializeRoutedEventHelper__SWIG_1")]
  #endif
  public static extern IntPtr new_SerializeRoutedEventHelper__SWIG_1();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_SerializeRoutedEventHelper")]
  #else
  [DllImport("Noesis", EntryPoint="delete_SerializeRoutedEventHelper")]
  #endif
  public static extern void delete_SerializeRoutedEventHelper(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ItemsControl")]
  #else
  [DllImport("Noesis", EntryPoint="new_ItemsControl")]
  #endif
  public static extern IntPtr new_ItemsControl();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ItemsControl")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ItemsControl")]
  #endif
  public static extern void delete_ItemsControl(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_GetDisplayMemberPath")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_GetDisplayMemberPath")]
  #endif
  public static extern IntPtr ItemsControl_GetDisplayMemberPath(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_SetDisplayMemberPath")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_SetDisplayMemberPath")]
  #endif
  public static extern void ItemsControl_SetDisplayMemberPath(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_GetGroupStyleSelector")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_GetGroupStyleSelector")]
  #endif
  public static extern IntPtr ItemsControl_GetGroupStyleSelector(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_SetGroupStyleSelector")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_SetGroupStyleSelector")]
  #endif
  public static extern void ItemsControl_SetGroupStyleSelector(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_GetHasItems")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_GetHasItems")]
  #endif
  public static extern bool ItemsControl_GetHasItems(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_GetIsGrouping")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_GetIsGrouping")]
  #endif
  public static extern bool ItemsControl_GetIsGrouping(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_GetIsTextSearchEnabled")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_GetIsTextSearchEnabled")]
  #endif
  public static extern bool ItemsControl_GetIsTextSearchEnabled(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_SetIsTextSearchEnabled")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_SetIsTextSearchEnabled")]
  #endif
  public static extern void ItemsControl_SetIsTextSearchEnabled(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_GetItemContainerStyle")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_GetItemContainerStyle")]
  #endif
  public static extern IntPtr ItemsControl_GetItemContainerStyle(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_SetItemContainerStyle")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_SetItemContainerStyle")]
  #endif
  public static extern void ItemsControl_SetItemContainerStyle(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_GetItemContainerStyleSelector")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_GetItemContainerStyleSelector")]
  #endif
  public static extern IntPtr ItemsControl_GetItemContainerStyleSelector(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_SetItemContainerStyleSelector")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_SetItemContainerStyleSelector")]
  #endif
  public static extern void ItemsControl_SetItemContainerStyleSelector(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_GetItemsPanel")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_GetItemsPanel")]
  #endif
  public static extern IntPtr ItemsControl_GetItemsPanel(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_SetItemsPanel")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_SetItemsPanel")]
  #endif
  public static extern void ItemsControl_SetItemsPanel(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_GetDefaultItemsPanel")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_GetDefaultItemsPanel")]
  #endif
  public static extern IntPtr ItemsControl_GetDefaultItemsPanel(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_GetItemsSource")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_GetItemsSource")]
  #endif
  public static extern IntPtr ItemsControl_GetItemsSource(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_SetItemsSource")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_SetItemsSource")]
  #endif
  public static extern void ItemsControl_SetItemsSource(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_GetItemTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_GetItemTemplate")]
  #endif
  public static extern IntPtr ItemsControl_GetItemTemplate(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_SetItemTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_SetItemTemplate")]
  #endif
  public static extern void ItemsControl_SetItemTemplate(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_GetItemTemplateSelector")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_GetItemTemplateSelector")]
  #endif
  public static extern IntPtr ItemsControl_GetItemTemplateSelector(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_SetItemTemplateSelector")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_SetItemTemplateSelector")]
  #endif
  public static extern void ItemsControl_SetItemTemplateSelector(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_GetItems")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_GetItems")]
  #endif
  public static extern IntPtr ItemsControl_GetItems(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_ItemsControlFromItemContainer")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_ItemsControlFromItemContainer")]
  #endif
  public static extern IntPtr ItemsControl_ItemsControlFromItemContainer(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_GetItemsOwner")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_GetItemsOwner")]
  #endif
  public static extern IntPtr ItemsControl_GetItemsOwner(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_DisplayMemberPathProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_DisplayMemberPathProperty_set")]
  #endif
  public static extern void ItemsControl_DisplayMemberPathProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_DisplayMemberPathProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_DisplayMemberPathProperty_get")]
  #endif
  public static extern IntPtr ItemsControl_DisplayMemberPathProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_GroupStyleSelectorProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_GroupStyleSelectorProperty_set")]
  #endif
  public static extern void ItemsControl_GroupStyleSelectorProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_GroupStyleSelectorProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_GroupStyleSelectorProperty_get")]
  #endif
  public static extern IntPtr ItemsControl_GroupStyleSelectorProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_HasItemsProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_HasItemsProperty_set")]
  #endif
  public static extern void ItemsControl_HasItemsProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_HasItemsProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_HasItemsProperty_get")]
  #endif
  public static extern IntPtr ItemsControl_HasItemsProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_IsGroupingProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_IsGroupingProperty_set")]
  #endif
  public static extern void ItemsControl_IsGroupingProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_IsGroupingProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_IsGroupingProperty_get")]
  #endif
  public static extern IntPtr ItemsControl_IsGroupingProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_IsTextSearchEnabledProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_IsTextSearchEnabledProperty_set")]
  #endif
  public static extern void ItemsControl_IsTextSearchEnabledProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_IsTextSearchEnabledProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_IsTextSearchEnabledProperty_get")]
  #endif
  public static extern IntPtr ItemsControl_IsTextSearchEnabledProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_ItemContainerStyleProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_ItemContainerStyleProperty_set")]
  #endif
  public static extern void ItemsControl_ItemContainerStyleProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_ItemContainerStyleProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_ItemContainerStyleProperty_get")]
  #endif
  public static extern IntPtr ItemsControl_ItemContainerStyleProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_ItemContainerStyleSelectorProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_ItemContainerStyleSelectorProperty_set")]
  #endif
  public static extern void ItemsControl_ItemContainerStyleSelectorProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_ItemContainerStyleSelectorProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_ItemContainerStyleSelectorProperty_get")]
  #endif
  public static extern IntPtr ItemsControl_ItemContainerStyleSelectorProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_ItemsPanelProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_ItemsPanelProperty_set")]
  #endif
  public static extern void ItemsControl_ItemsPanelProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_ItemsPanelProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_ItemsPanelProperty_get")]
  #endif
  public static extern IntPtr ItemsControl_ItemsPanelProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_ItemsSourceProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_ItemsSourceProperty_set")]
  #endif
  public static extern void ItemsControl_ItemsSourceProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_ItemsSourceProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_ItemsSourceProperty_get")]
  #endif
  public static extern IntPtr ItemsControl_ItemsSourceProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_ItemTemplateProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_ItemTemplateProperty_set")]
  #endif
  public static extern void ItemsControl_ItemTemplateProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_ItemTemplateProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_ItemTemplateProperty_get")]
  #endif
  public static extern IntPtr ItemsControl_ItemTemplateProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_ItemTemplateSelectorProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_ItemTemplateSelectorProperty_set")]
  #endif
  public static extern void ItemsControl_ItemTemplateSelectorProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_ItemTemplateSelectorProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_ItemTemplateSelectorProperty_get")]
  #endif
  public static extern IntPtr ItemsControl_ItemTemplateSelectorProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SelectionChangedEventArgs_addedItems_set")]
  #else
  [DllImport("Noesis", EntryPoint="SelectionChangedEventArgs_addedItems_set")]
  #endif
  public static extern void SelectionChangedEventArgs_addedItems_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SelectionChangedEventArgs_addedItems_get")]
  #else
  [DllImport("Noesis", EntryPoint="SelectionChangedEventArgs_addedItems_get")]
  #endif
  public static extern IntPtr SelectionChangedEventArgs_addedItems_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SelectionChangedEventArgs_removedItems_set")]
  #else
  [DllImport("Noesis", EntryPoint="SelectionChangedEventArgs_removedItems_set")]
  #endif
  public static extern void SelectionChangedEventArgs_removedItems_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SelectionChangedEventArgs_removedItems_get")]
  #else
  [DllImport("Noesis", EntryPoint="SelectionChangedEventArgs_removedItems_get")]
  #endif
  public static extern IntPtr SelectionChangedEventArgs_removedItems_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_SelectionChangedEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_SelectionChangedEventArgs")]
  #endif
  public static extern IntPtr new_SelectionChangedEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_SelectionChangedEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_SelectionChangedEventArgs")]
  #endif
  public static extern void delete_SelectionChangedEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Selector")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Selector")]
  #endif
  public static extern void delete_Selector(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_GetIsSelected")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_GetIsSelected")]
  #endif
  public static extern bool Selector_GetIsSelected(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_SetIsSelected")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_SetIsSelected")]
  #endif
  public static extern void Selector_SetIsSelected(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_GetIsSelectionActive")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_GetIsSelectionActive")]
  #endif
  public static extern bool Selector_GetIsSelectionActive(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_GetIsSynchronizedWithCurrentItem")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_GetIsSynchronizedWithCurrentItem")]
  #endif
  public static extern IntPtr Selector_GetIsSynchronizedWithCurrentItem(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_SetIsSynchronizedWithCurrentItem")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_SetIsSynchronizedWithCurrentItem")]
  #endif
  public static extern void Selector_SetIsSynchronizedWithCurrentItem(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_GetSelectedIndex")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_GetSelectedIndex")]
  #endif
  public static extern int Selector_GetSelectedIndex(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_SetSelectedIndex")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_SetSelectedIndex")]
  #endif
  public static extern void Selector_SetSelectedIndex(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_GetSelectedItem")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_GetSelectedItem")]
  #endif
  public static extern IntPtr Selector_GetSelectedItem(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_SetSelectedItem")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_SetSelectedItem")]
  #endif
  public static extern void Selector_SetSelectedItem(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_GetSelectedValuePath")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_GetSelectedValuePath")]
  #endif
  public static extern IntPtr Selector_GetSelectedValuePath(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_SetSelectedValuePath")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_SetSelectedValuePath")]
  #endif
  public static extern void Selector_SetSelectedValuePath(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_GetSelectedValue")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_GetSelectedValue")]
  #endif
  public static extern IntPtr Selector_GetSelectedValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_SetSelectedValue")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_SetSelectedValue")]
  #endif
  public static extern void Selector_SetSelectedValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_IsSelectedProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_IsSelectedProperty_set")]
  #endif
  public static extern void Selector_IsSelectedProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_IsSelectedProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_IsSelectedProperty_get")]
  #endif
  public static extern IntPtr Selector_IsSelectedProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_IsSelectionActiveProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_IsSelectionActiveProperty_set")]
  #endif
  public static extern void Selector_IsSelectionActiveProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_IsSelectionActiveProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_IsSelectionActiveProperty_get")]
  #endif
  public static extern IntPtr Selector_IsSelectionActiveProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_IsSynchronizedWithCurrentItemProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_IsSynchronizedWithCurrentItemProperty_set")]
  #endif
  public static extern void Selector_IsSynchronizedWithCurrentItemProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_IsSynchronizedWithCurrentItemProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_IsSynchronizedWithCurrentItemProperty_get")]
  #endif
  public static extern IntPtr Selector_IsSynchronizedWithCurrentItemProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_SelectedIndexProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_SelectedIndexProperty_set")]
  #endif
  public static extern void Selector_SelectedIndexProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_SelectedIndexProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_SelectedIndexProperty_get")]
  #endif
  public static extern IntPtr Selector_SelectedIndexProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_SelectedItemProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_SelectedItemProperty_set")]
  #endif
  public static extern void Selector_SelectedItemProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_SelectedItemProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_SelectedItemProperty_get")]
  #endif
  public static extern IntPtr Selector_SelectedItemProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_SelectedValuePathProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_SelectedValuePathProperty_set")]
  #endif
  public static extern void Selector_SelectedValuePathProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_SelectedValuePathProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_SelectedValuePathProperty_get")]
  #endif
  public static extern IntPtr Selector_SelectedValuePathProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_SelectedValueProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_SelectedValueProperty_set")]
  #endif
  public static extern void Selector_SelectedValueProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_SelectedValueProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_SelectedValueProperty_get")]
  #endif
  public static extern IntPtr Selector_SelectedValueProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_AdornerDecorator__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_AdornerDecorator__SWIG_0")]
  #endif
  public static extern IntPtr new_AdornerDecorator__SWIG_0(bool jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_AdornerDecorator__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_AdornerDecorator__SWIG_1")]
  #endif
  public static extern IntPtr new_AdornerDecorator__SWIG_1();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_AdornerDecorator")]
  #else
  [DllImport("Noesis", EntryPoint="delete_AdornerDecorator")]
  #endif
  public static extern void delete_AdornerDecorator(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AdornerDecorator_AddLayer")]
  #else
  [DllImport("Noesis", EntryPoint="AdornerDecorator_AddLayer")]
  #endif
  public static extern void AdornerDecorator_AddLayer(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AdornerDecorator_RemoveLayer")]
  #else
  [DllImport("Noesis", EntryPoint="AdornerDecorator_RemoveLayer")]
  #endif
  public static extern void AdornerDecorator_RemoveLayer(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Animatable")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Animatable")]
  #endif
  public static extern void delete_Animatable(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Geometry")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Geometry")]
  #endif
  public static extern void delete_Geometry(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Geometry_Parse")]
  #else
  [DllImport("Noesis", EntryPoint="Geometry_Parse")]
  #endif
  public static extern IntPtr Geometry_Parse(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Geometry_TryParse")]
  #else
  [DllImport("Noesis", EntryPoint="Geometry_TryParse")]
  #endif
  public static extern bool Geometry_TryParse(string jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Geometry_IsEmpty")]
  #else
  [DllImport("Noesis", EntryPoint="Geometry_IsEmpty")]
  #endif
  public static extern bool Geometry_IsEmpty(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Geometry_GetBounds")]
  #else
  [DllImport("Noesis", EntryPoint="Geometry_GetBounds")]
  #endif
  public static extern IntPtr Geometry_GetBounds(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Geometry_GetRenderBounds")]
  #else
  [DllImport("Noesis", EntryPoint="Geometry_GetRenderBounds")]
  #endif
  public static extern IntPtr Geometry_GetRenderBounds(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Geometry_FillContains")]
  #else
  [DllImport("Noesis", EntryPoint="Geometry_FillContains")]
  #endif
  public static extern bool Geometry_FillContains(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Geometry_StrokeContains")]
  #else
  [DllImport("Noesis", EntryPoint="Geometry_StrokeContains")]
  #endif
  public static extern bool Geometry_StrokeContains(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Geometry_GetTransform")]
  #else
  [DllImport("Noesis", EntryPoint="Geometry_GetTransform")]
  #endif
  public static extern IntPtr Geometry_GetTransform(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Geometry_SetTransform")]
  #else
  [DllImport("Noesis", EntryPoint="Geometry_SetTransform")]
  #endif
  public static extern void Geometry_SetTransform(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Geometry_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="Geometry_UpdateRenderProxy")]
  #endif
  public static extern void Geometry_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Geometry_UnregisterRenderer")]
  #else
  [DllImport("Noesis", EntryPoint="Geometry_UnregisterRenderer")]
  #endif
  public static extern void Geometry_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Geometry_TransformProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Geometry_TransformProperty_set")]
  #endif
  public static extern void Geometry_TransformProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Geometry_TransformProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Geometry_TransformProperty_get")]
  #endif
  public static extern IntPtr Geometry_TransformProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ImageSource")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ImageSource")]
  #endif
  public static extern void delete_ImageSource(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ImageSource_Register")]
  #else
  [DllImport("Noesis", EntryPoint="ImageSource_Register")]
  #endif
  public static extern void ImageSource_Register(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ImageSource_IsRegistered")]
  #else
  [DllImport("Noesis", EntryPoint="ImageSource_IsRegistered")]
  #endif
  public static extern bool ImageSource_IsRegistered(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ImageSource_ClearCache")]
  #else
  [DllImport("Noesis", EntryPoint="ImageSource_ClearCache")]
  #endif
  public static extern void ImageSource_ClearCache();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ImageSource_GetSource")]
  #else
  [DllImport("Noesis", EntryPoint="ImageSource_GetSource")]
  #endif
  public static extern IntPtr ImageSource_GetSource(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ImageSource_GetWidth")]
  #else
  [DllImport("Noesis", EntryPoint="ImageSource_GetWidth")]
  #endif
  public static extern float ImageSource_GetWidth(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ImageSource_GetHeight")]
  #else
  [DllImport("Noesis", EntryPoint="ImageSource_GetHeight")]
  #endif
  public static extern float ImageSource_GetHeight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Application")]
  #else
  [DllImport("Noesis", EntryPoint="new_Application")]
  #endif
  public static extern IntPtr new_Application();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Application")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Application")]
  #endif
  public static extern void delete_Application(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Application_Current")]
  #else
  [DllImport("Noesis", EntryPoint="Application_Current")]
  #endif
  public static extern IntPtr Application_Current();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Application_GetStartupUri")]
  #else
  [DllImport("Noesis", EntryPoint="Application_GetStartupUri")]
  #endif
  public static extern string Application_GetStartupUri(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Application_SetStartupUri")]
  #else
  [DllImport("Noesis", EntryPoint="Application_SetStartupUri")]
  #endif
  public static extern void Application_SetStartupUri(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Application_GetResources")]
  #else
  [DllImport("Noesis", EntryPoint="Application_GetResources")]
  #endif
  public static extern IntPtr Application_GetResources(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Application_SetResources")]
  #else
  [DllImport("Noesis", EntryPoint="Application_SetResources")]
  #endif
  public static extern void Application_SetResources(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Application_GetMainWindow")]
  #else
  [DllImport("Noesis", EntryPoint="Application_GetMainWindow")]
  #endif
  public static extern IntPtr Application_GetMainWindow(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Application_Tick")]
  #else
  [DllImport("Noesis", EntryPoint="Application_Tick")]
  #endif
  public static extern void Application_Tick(HandleRef jarg1, double jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Application_ShowMessageBox__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Application_ShowMessageBox__SWIG_0")]
  #endif
  public static extern IntPtr Application_ShowMessageBox__SWIG_0(HandleRef jarg1, string jarg2, string jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Application_ShowMessageBox__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Application_ShowMessageBox__SWIG_1")]
  #endif
  public static extern IntPtr Application_ShowMessageBox__SWIG_1(HandleRef jarg1, string jarg2, string jarg3, HandleRef jarg4, HandleRef jarg5);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Application_ShowMessageBox__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="Application_ShowMessageBox__SWIG_2")]
  #endif
  public static extern IntPtr Application_ShowMessageBox__SWIG_2(HandleRef jarg1, string jarg2, string jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Application_ShowMessageBox__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="Application_ShowMessageBox__SWIG_3")]
  #endif
  public static extern IntPtr Application_ShowMessageBox__SWIG_3(HandleRef jarg1, string jarg2, string jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Application_ShowMessageBox__SWIG_4")]
  #else
  [DllImport("Noesis", EntryPoint="Application_ShowMessageBox__SWIG_4")]
  #endif
  public static extern IntPtr Application_ShowMessageBox__SWIG_4(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Application_IsInitialized")]
  #else
  [DllImport("Noesis", EntryPoint="Application_IsInitialized")]
  #endif
  public static extern bool Application_IsInitialized(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Application_Init")]
  #else
  [DllImport("Noesis", EntryPoint="Application_Init")]
  #endif
  public static extern void Application_Init(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_CancelPrintCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_CancelPrintCommand_set")]
  #endif
  public static extern void ApplicationCommands_CancelPrintCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_CancelPrintCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_CancelPrintCommand_get")]
  #endif
  public static extern IntPtr ApplicationCommands_CancelPrintCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_CloseCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_CloseCommand_set")]
  #endif
  public static extern void ApplicationCommands_CloseCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_CloseCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_CloseCommand_get")]
  #endif
  public static extern IntPtr ApplicationCommands_CloseCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_ContextMenuCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_ContextMenuCommand_set")]
  #endif
  public static extern void ApplicationCommands_ContextMenuCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_ContextMenuCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_ContextMenuCommand_get")]
  #endif
  public static extern IntPtr ApplicationCommands_ContextMenuCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_CopyCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_CopyCommand_set")]
  #endif
  public static extern void ApplicationCommands_CopyCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_CopyCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_CopyCommand_get")]
  #endif
  public static extern IntPtr ApplicationCommands_CopyCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_CorrectionListCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_CorrectionListCommand_set")]
  #endif
  public static extern void ApplicationCommands_CorrectionListCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_CorrectionListCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_CorrectionListCommand_get")]
  #endif
  public static extern IntPtr ApplicationCommands_CorrectionListCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_CutCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_CutCommand_set")]
  #endif
  public static extern void ApplicationCommands_CutCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_CutCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_CutCommand_get")]
  #endif
  public static extern IntPtr ApplicationCommands_CutCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_DeleteCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_DeleteCommand_set")]
  #endif
  public static extern void ApplicationCommands_DeleteCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_DeleteCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_DeleteCommand_get")]
  #endif
  public static extern IntPtr ApplicationCommands_DeleteCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_FindCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_FindCommand_set")]
  #endif
  public static extern void ApplicationCommands_FindCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_FindCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_FindCommand_get")]
  #endif
  public static extern IntPtr ApplicationCommands_FindCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_HelpCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_HelpCommand_set")]
  #endif
  public static extern void ApplicationCommands_HelpCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_HelpCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_HelpCommand_get")]
  #endif
  public static extern IntPtr ApplicationCommands_HelpCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_NewCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_NewCommand_set")]
  #endif
  public static extern void ApplicationCommands_NewCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_NewCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_NewCommand_get")]
  #endif
  public static extern IntPtr ApplicationCommands_NewCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_OpenCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_OpenCommand_set")]
  #endif
  public static extern void ApplicationCommands_OpenCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_OpenCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_OpenCommand_get")]
  #endif
  public static extern IntPtr ApplicationCommands_OpenCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_PasteCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_PasteCommand_set")]
  #endif
  public static extern void ApplicationCommands_PasteCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_PasteCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_PasteCommand_get")]
  #endif
  public static extern IntPtr ApplicationCommands_PasteCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_PrintCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_PrintCommand_set")]
  #endif
  public static extern void ApplicationCommands_PrintCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_PrintCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_PrintCommand_get")]
  #endif
  public static extern IntPtr ApplicationCommands_PrintCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_PrintPreviewCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_PrintPreviewCommand_set")]
  #endif
  public static extern void ApplicationCommands_PrintPreviewCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_PrintPreviewCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_PrintPreviewCommand_get")]
  #endif
  public static extern IntPtr ApplicationCommands_PrintPreviewCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_PropertiesCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_PropertiesCommand_set")]
  #endif
  public static extern void ApplicationCommands_PropertiesCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_PropertiesCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_PropertiesCommand_get")]
  #endif
  public static extern IntPtr ApplicationCommands_PropertiesCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_RedoCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_RedoCommand_set")]
  #endif
  public static extern void ApplicationCommands_RedoCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_RedoCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_RedoCommand_get")]
  #endif
  public static extern IntPtr ApplicationCommands_RedoCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_ReplaceCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_ReplaceCommand_set")]
  #endif
  public static extern void ApplicationCommands_ReplaceCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_ReplaceCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_ReplaceCommand_get")]
  #endif
  public static extern IntPtr ApplicationCommands_ReplaceCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_SaveCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_SaveCommand_set")]
  #endif
  public static extern void ApplicationCommands_SaveCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_SaveCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_SaveCommand_get")]
  #endif
  public static extern IntPtr ApplicationCommands_SaveCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_SaveAsCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_SaveAsCommand_set")]
  #endif
  public static extern void ApplicationCommands_SaveAsCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_SaveAsCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_SaveAsCommand_get")]
  #endif
  public static extern IntPtr ApplicationCommands_SaveAsCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_SelectAllCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_SelectAllCommand_set")]
  #endif
  public static extern void ApplicationCommands_SelectAllCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_SelectAllCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_SelectAllCommand_get")]
  #endif
  public static extern IntPtr ApplicationCommands_SelectAllCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_StopCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_StopCommand_set")]
  #endif
  public static extern void ApplicationCommands_StopCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_StopCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_StopCommand_get")]
  #endif
  public static extern IntPtr ApplicationCommands_StopCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_UndoCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_UndoCommand_set")]
  #endif
  public static extern void ApplicationCommands_UndoCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ApplicationCommands_UndoCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ApplicationCommands_UndoCommand_get")]
  #endif
  public static extern IntPtr ApplicationCommands_UndoCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ApplicationCommands")]
  #else
  [DllImport("Noesis", EntryPoint="new_ApplicationCommands")]
  #endif
  public static extern IntPtr new_ApplicationCommands();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ApplicationCommands")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ApplicationCommands")]
  #endif
  public static extern void delete_ApplicationCommands(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_AtlasSource__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_AtlasSource__SWIG_0")]
  #endif
  public static extern IntPtr new_AtlasSource__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_AtlasSource__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_AtlasSource__SWIG_1")]
  #endif
  public static extern IntPtr new_AtlasSource__SWIG_1(HandleRef jarg1, uint jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_AtlasSource__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_AtlasSource__SWIG_2")]
  #endif
  public static extern IntPtr new_AtlasSource__SWIG_2(HandleRef jarg1, uint jarg2, HandleRef jarg3, float jarg4, float jarg5);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_AtlasSource")]
  #else
  [DllImport("Noesis", EntryPoint="delete_AtlasSource")]
  #endif
  public static extern void delete_AtlasSource(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AtlasSource_GetAtlasList")]
  #else
  [DllImport("Noesis", EntryPoint="AtlasSource_GetAtlasList")]
  #endif
  public static extern IntPtr AtlasSource_GetAtlasList(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AtlasSource_SetAtlasList")]
  #else
  [DllImport("Noesis", EntryPoint="AtlasSource_SetAtlasList")]
  #endif
  public static extern void AtlasSource_SetAtlasList(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AtlasSource_GetAtlasIndex")]
  #else
  [DllImport("Noesis", EntryPoint="AtlasSource_GetAtlasIndex")]
  #endif
  public static extern uint AtlasSource_GetAtlasIndex(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AtlasSource_SetAtlasIndex")]
  #else
  [DllImport("Noesis", EntryPoint="AtlasSource_SetAtlasIndex")]
  #endif
  public static extern void AtlasSource_SetAtlasIndex(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AtlasSource_GetRect")]
  #else
  [DllImport("Noesis", EntryPoint="AtlasSource_GetRect")]
  #endif
  public static extern IntPtr AtlasSource_GetRect(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AtlasSource_SetRect")]
  #else
  [DllImport("Noesis", EntryPoint="AtlasSource_SetRect")]
  #endif
  public static extern void AtlasSource_SetRect(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AtlasSource_GetDpiX")]
  #else
  [DllImport("Noesis", EntryPoint="AtlasSource_GetDpiX")]
  #endif
  public static extern float AtlasSource_GetDpiX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AtlasSource_SetDpiX")]
  #else
  [DllImport("Noesis", EntryPoint="AtlasSource_SetDpiX")]
  #endif
  public static extern void AtlasSource_SetDpiX(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AtlasSource_GetDpiY")]
  #else
  [DllImport("Noesis", EntryPoint="AtlasSource_GetDpiY")]
  #endif
  public static extern float AtlasSource_GetDpiY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AtlasSource_SetDpiY")]
  #else
  [DllImport("Noesis", EntryPoint="AtlasSource_SetDpiY")]
  #endif
  public static extern void AtlasSource_SetDpiY(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AtlasSource_GetPixelWidth")]
  #else
  [DllImport("Noesis", EntryPoint="AtlasSource_GetPixelWidth")]
  #endif
  public static extern int AtlasSource_GetPixelWidth(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AtlasSource_GetPixelHeight")]
  #else
  [DllImport("Noesis", EntryPoint="AtlasSource_GetPixelHeight")]
  #endif
  public static extern int AtlasSource_GetPixelHeight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AtlasSource_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="AtlasSource_CreateRenderProxy")]
  #endif
  public static extern void AtlasSource_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AtlasSource_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="AtlasSource_UpdateRenderProxy")]
  #endif
  public static extern void AtlasSource_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AtlasSource_UnregisterRenderer")]
  #else
  [DllImport("Noesis", EntryPoint="AtlasSource_UnregisterRenderer")]
  #endif
  public static extern void AtlasSource_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_BaseBinding")]
  #else
  [DllImport("Noesis", EntryPoint="delete_BaseBinding")]
  #endif
  public static extern void delete_BaseBinding(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseBinding_GetStringFormat")]
  #else
  [DllImport("Noesis", EntryPoint="BaseBinding_GetStringFormat")]
  #endif
  public static extern string BaseBinding_GetStringFormat(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseBinding_SetStringFormat")]
  #else
  [DllImport("Noesis", EntryPoint="BaseBinding_SetStringFormat")]
  #endif
  public static extern void BaseBinding_SetStringFormat(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_BaseBindingExpression")]
  #else
  [DllImport("Noesis", EntryPoint="delete_BaseBindingExpression")]
  #endif
  public static extern void delete_BaseBindingExpression(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseBindingExpression_GetBinding")]
  #else
  [DllImport("Noesis", EntryPoint="BaseBindingExpression_GetBinding")]
  #endif
  public static extern IntPtr BaseBindingExpression_GetBinding(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_BaseButton")]
  #else
  [DllImport("Noesis", EntryPoint="delete_BaseButton")]
  #endif
  public static extern void delete_BaseButton(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseButton_GetClickMode")]
  #else
  [DllImport("Noesis", EntryPoint="BaseButton_GetClickMode")]
  #endif
  public static extern int BaseButton_GetClickMode(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseButton_SetClickMode")]
  #else
  [DllImport("Noesis", EntryPoint="BaseButton_SetClickMode")]
  #endif
  public static extern void BaseButton_SetClickMode(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseButton_GetCommandParameter")]
  #else
  [DllImport("Noesis", EntryPoint="BaseButton_GetCommandParameter")]
  #endif
  public static extern IntPtr BaseButton_GetCommandParameter(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseButton_SetCommandParameter")]
  #else
  [DllImport("Noesis", EntryPoint="BaseButton_SetCommandParameter")]
  #endif
  public static extern void BaseButton_SetCommandParameter(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseButton_GetCommandTarget")]
  #else
  [DllImport("Noesis", EntryPoint="BaseButton_GetCommandTarget")]
  #endif
  public static extern IntPtr BaseButton_GetCommandTarget(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseButton_SetCommandTarget")]
  #else
  [DllImport("Noesis", EntryPoint="BaseButton_SetCommandTarget")]
  #endif
  public static extern void BaseButton_SetCommandTarget(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseButton_GetIsPressed")]
  #else
  [DllImport("Noesis", EntryPoint="BaseButton_GetIsPressed")]
  #endif
  public static extern bool BaseButton_GetIsPressed(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseButton_ClickModeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BaseButton_ClickModeProperty_set")]
  #endif
  public static extern void BaseButton_ClickModeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseButton_ClickModeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BaseButton_ClickModeProperty_get")]
  #endif
  public static extern IntPtr BaseButton_ClickModeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseButton_CommandProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BaseButton_CommandProperty_set")]
  #endif
  public static extern void BaseButton_CommandProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseButton_CommandProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BaseButton_CommandProperty_get")]
  #endif
  public static extern IntPtr BaseButton_CommandProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseButton_CommandParameterProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BaseButton_CommandParameterProperty_set")]
  #endif
  public static extern void BaseButton_CommandParameterProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseButton_CommandParameterProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BaseButton_CommandParameterProperty_get")]
  #endif
  public static extern IntPtr BaseButton_CommandParameterProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseButton_CommandTargetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BaseButton_CommandTargetProperty_set")]
  #endif
  public static extern void BaseButton_CommandTargetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseButton_CommandTargetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BaseButton_CommandTargetProperty_get")]
  #endif
  public static extern IntPtr BaseButton_CommandTargetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseButton_IsPressedProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BaseButton_IsPressedProperty_set")]
  #endif
  public static extern void BaseButton_IsPressedProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseButton_IsPressedProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BaseButton_IsPressedProperty_get")]
  #endif
  public static extern IntPtr BaseButton_IsPressedProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ToggleButton")]
  #else
  [DllImport("Noesis", EntryPoint="new_ToggleButton")]
  #endif
  public static extern IntPtr new_ToggleButton();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToggleButton_GetIsChecked")]
  #else
  [DllImport("Noesis", EntryPoint="ToggleButton_GetIsChecked")]
  #endif
  public static extern IntPtr ToggleButton_GetIsChecked(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToggleButton_SetIsChecked")]
  #else
  [DllImport("Noesis", EntryPoint="ToggleButton_SetIsChecked")]
  #endif
  public static extern void ToggleButton_SetIsChecked(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToggleButton_GetIsThreeState")]
  #else
  [DllImport("Noesis", EntryPoint="ToggleButton_GetIsThreeState")]
  #endif
  public static extern bool ToggleButton_GetIsThreeState(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToggleButton_SetIsThreeState")]
  #else
  [DllImport("Noesis", EntryPoint="ToggleButton_SetIsThreeState")]
  #endif
  public static extern void ToggleButton_SetIsThreeState(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToggleButton_IsCheckedProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToggleButton_IsCheckedProperty_set")]
  #endif
  public static extern void ToggleButton_IsCheckedProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToggleButton_IsCheckedProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToggleButton_IsCheckedProperty_get")]
  #endif
  public static extern IntPtr ToggleButton_IsCheckedProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToggleButton_IsThreeStateProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToggleButton_IsThreeStateProperty_set")]
  #endif
  public static extern void ToggleButton_IsThreeStateProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToggleButton_IsThreeStateProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToggleButton_IsThreeStateProperty_get")]
  #endif
  public static extern IntPtr ToggleButton_IsThreeStateProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ToggleButton")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ToggleButton")]
  #endif
  public static extern void delete_ToggleButton(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_BaseCommand")]
  #else
  [DllImport("Noesis", EntryPoint="delete_BaseCommand")]
  #endif
  public static extern void delete_BaseCommand(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseCommand_GetName")]
  #else
  [DllImport("Noesis", EntryPoint="BaseCommand_GetName")]
  #endif
  public static extern IntPtr BaseCommand_GetName(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseCommand_GetOwnerType")]
  #else
  [DllImport("Noesis", EntryPoint="BaseCommand_GetOwnerType")]
  #endif
  public static extern IntPtr BaseCommand_GetOwnerType(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseCommand_CanExecuteChanged")]
  #else
  [DllImport("Noesis", EntryPoint="BaseCommand_CanExecuteChanged")]
  #endif
  public static extern IntPtr BaseCommand_CanExecuteChanged(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseCommand_CanExecute")]
  #else
  [DllImport("Noesis", EntryPoint="BaseCommand_CanExecute")]
  #endif
  public static extern bool BaseCommand_CanExecute(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseCommand_Execute")]
  #else
  [DllImport("Noesis", EntryPoint="BaseCommand_Execute")]
  #endif
  public static extern void BaseCommand_Execute(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_BaseDefinition")]
  #else
  [DllImport("Noesis", EntryPoint="delete_BaseDefinition")]
  #endif
  public static extern void delete_BaseDefinition(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseDefinition_GetSharedSizeGroup")]
  #else
  [DllImport("Noesis", EntryPoint="BaseDefinition_GetSharedSizeGroup")]
  #endif
  public static extern IntPtr BaseDefinition_GetSharedSizeGroup(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseDefinition_SetSharedSizeGroup")]
  #else
  [DllImport("Noesis", EntryPoint="BaseDefinition_SetSharedSizeGroup")]
  #endif
  public static extern void BaseDefinition_SetSharedSizeGroup(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseDefinition_SharedSizeGroupProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BaseDefinition_SharedSizeGroupProperty_set")]
  #endif
  public static extern void BaseDefinition_SharedSizeGroupProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseDefinition_SharedSizeGroupProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BaseDefinition_SharedSizeGroupProperty_get")]
  #endif
  public static extern IntPtr BaseDefinition_SharedSizeGroupProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_BaseMenu")]
  #else
  [DllImport("Noesis", EntryPoint="delete_BaseMenu")]
  #endif
  public static extern void delete_BaseMenu(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_BaseTextBox")]
  #else
  [DllImport("Noesis", EntryPoint="delete_BaseTextBox")]
  #endif
  public static extern void delete_BaseTextBox(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_GetAcceptsReturn")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_GetAcceptsReturn")]
  #endif
  public static extern bool BaseTextBox_GetAcceptsReturn(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_SetAcceptsReturn")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_SetAcceptsReturn")]
  #endif
  public static extern void BaseTextBox_SetAcceptsReturn(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_GetAcceptsTab")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_GetAcceptsTab")]
  #endif
  public static extern bool BaseTextBox_GetAcceptsTab(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_SetAcceptsTab")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_SetAcceptsTab")]
  #endif
  public static extern void BaseTextBox_SetAcceptsTab(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_GetAutoWordSelection")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_GetAutoWordSelection")]
  #endif
  public static extern bool BaseTextBox_GetAutoWordSelection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_SetAutoWordSelection")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_SetAutoWordSelection")]
  #endif
  public static extern void BaseTextBox_SetAutoWordSelection(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_GetCaretBrush")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_GetCaretBrush")]
  #endif
  public static extern IntPtr BaseTextBox_GetCaretBrush(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_SetCaretBrush")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_SetCaretBrush")]
  #endif
  public static extern void BaseTextBox_SetCaretBrush(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_GetHorizontalScrollBarVisibility")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_GetHorizontalScrollBarVisibility")]
  #endif
  public static extern int BaseTextBox_GetHorizontalScrollBarVisibility(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_SetHorizontalScrollBarVisibility")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_SetHorizontalScrollBarVisibility")]
  #endif
  public static extern void BaseTextBox_SetHorizontalScrollBarVisibility(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_GetIsReadOnly")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_GetIsReadOnly")]
  #endif
  public static extern bool BaseTextBox_GetIsReadOnly(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_SetIsReadOnly")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_SetIsReadOnly")]
  #endif
  public static extern void BaseTextBox_SetIsReadOnly(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_GetIsUndoEnabled")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_GetIsUndoEnabled")]
  #endif
  public static extern bool BaseTextBox_GetIsUndoEnabled(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_SetIsUndoEnabled")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_SetIsUndoEnabled")]
  #endif
  public static extern void BaseTextBox_SetIsUndoEnabled(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_GetSelectionBrush")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_GetSelectionBrush")]
  #endif
  public static extern IntPtr BaseTextBox_GetSelectionBrush(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_SetSelectionBrush")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_SetSelectionBrush")]
  #endif
  public static extern void BaseTextBox_SetSelectionBrush(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_GetSelectionOpacity")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_GetSelectionOpacity")]
  #endif
  public static extern float BaseTextBox_GetSelectionOpacity(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_SetSelectionOpacity")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_SetSelectionOpacity")]
  #endif
  public static extern void BaseTextBox_SetSelectionOpacity(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_GetUndoLimit")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_GetUndoLimit")]
  #endif
  public static extern int BaseTextBox_GetUndoLimit(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_SetUndoLimit")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_SetUndoLimit")]
  #endif
  public static extern void BaseTextBox_SetUndoLimit(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_GetVerticalScrollBarVisibility")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_GetVerticalScrollBarVisibility")]
  #endif
  public static extern int BaseTextBox_GetVerticalScrollBarVisibility(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_SetVerticalScrollBarVisibility")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_SetVerticalScrollBarVisibility")]
  #endif
  public static extern void BaseTextBox_SetVerticalScrollBarVisibility(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_AcceptsReturnProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_AcceptsReturnProperty_set")]
  #endif
  public static extern void BaseTextBox_AcceptsReturnProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_AcceptsReturnProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_AcceptsReturnProperty_get")]
  #endif
  public static extern IntPtr BaseTextBox_AcceptsReturnProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_AcceptsTabProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_AcceptsTabProperty_set")]
  #endif
  public static extern void BaseTextBox_AcceptsTabProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_AcceptsTabProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_AcceptsTabProperty_get")]
  #endif
  public static extern IntPtr BaseTextBox_AcceptsTabProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_AutoWordSelectionProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_AutoWordSelectionProperty_set")]
  #endif
  public static extern void BaseTextBox_AutoWordSelectionProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_AutoWordSelectionProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_AutoWordSelectionProperty_get")]
  #endif
  public static extern IntPtr BaseTextBox_AutoWordSelectionProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_CaretBrushProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_CaretBrushProperty_set")]
  #endif
  public static extern void BaseTextBox_CaretBrushProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_CaretBrushProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_CaretBrushProperty_get")]
  #endif
  public static extern IntPtr BaseTextBox_CaretBrushProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_HorizontalScrollBarVisibilityProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_HorizontalScrollBarVisibilityProperty_set")]
  #endif
  public static extern void BaseTextBox_HorizontalScrollBarVisibilityProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_HorizontalScrollBarVisibilityProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_HorizontalScrollBarVisibilityProperty_get")]
  #endif
  public static extern IntPtr BaseTextBox_HorizontalScrollBarVisibilityProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_IsReadOnlyProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_IsReadOnlyProperty_set")]
  #endif
  public static extern void BaseTextBox_IsReadOnlyProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_IsReadOnlyProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_IsReadOnlyProperty_get")]
  #endif
  public static extern IntPtr BaseTextBox_IsReadOnlyProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_IsUndoEnabledProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_IsUndoEnabledProperty_set")]
  #endif
  public static extern void BaseTextBox_IsUndoEnabledProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_IsUndoEnabledProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_IsUndoEnabledProperty_get")]
  #endif
  public static extern IntPtr BaseTextBox_IsUndoEnabledProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_SelectionBrushProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_SelectionBrushProperty_set")]
  #endif
  public static extern void BaseTextBox_SelectionBrushProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_SelectionBrushProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_SelectionBrushProperty_get")]
  #endif
  public static extern IntPtr BaseTextBox_SelectionBrushProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_SelectionOpacityProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_SelectionOpacityProperty_set")]
  #endif
  public static extern void BaseTextBox_SelectionOpacityProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_SelectionOpacityProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_SelectionOpacityProperty_get")]
  #endif
  public static extern IntPtr BaseTextBox_SelectionOpacityProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_UndoLimitProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_UndoLimitProperty_set")]
  #endif
  public static extern void BaseTextBox_UndoLimitProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_UndoLimitProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_UndoLimitProperty_get")]
  #endif
  public static extern IntPtr BaseTextBox_UndoLimitProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_VerticalScrollBarVisibilityProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_VerticalScrollBarVisibilityProperty_set")]
  #endif
  public static extern void BaseTextBox_VerticalScrollBarVisibilityProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_VerticalScrollBarVisibilityProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_VerticalScrollBarVisibilityProperty_get")]
  #endif
  public static extern IntPtr BaseTextBox_VerticalScrollBarVisibilityProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_BaseTrigger")]
  #else
  [DllImport("Noesis", EntryPoint="delete_BaseTrigger")]
  #endif
  public static extern void delete_BaseTrigger(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTrigger_GetEnterActions")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTrigger_GetEnterActions")]
  #endif
  public static extern IntPtr BaseTrigger_GetEnterActions(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTrigger_GetExitActions")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTrigger_GetExitActions")]
  #endif
  public static extern IntPtr BaseTrigger_GetExitActions(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTrigger_RegisterSources")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTrigger_RegisterSources")]
  #endif
  public static extern void BaseTrigger_RegisterSources(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTrigger_UnregisterSources")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTrigger_UnregisterSources")]
  #endif
  public static extern void BaseTrigger_UnregisterSources(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTrigger_RegisterEvents")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTrigger_RegisterEvents")]
  #endif
  public static extern void BaseTrigger_RegisterEvents(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTrigger_UnregisterEvents")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTrigger_UnregisterEvents")]
  #endif
  public static extern void BaseTrigger_UnregisterEvents(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTrigger_Check")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTrigger_Check")]
  #endif
  public static extern bool BaseTrigger_Check(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, bool jarg6);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTrigger_FindValue")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTrigger_FindValue")]
  #endif
  public static extern IntPtr BaseTrigger_FindValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTrigger_Invalidate__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTrigger_Invalidate__SWIG_0")]
  #endif
  public static extern void BaseTrigger_Invalidate__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4, bool jarg5, byte jarg6);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTrigger_Invalidate__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTrigger_Invalidate__SWIG_1")]
  #endif
  public static extern void BaseTrigger_Invalidate__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6, HandleRef jarg7, bool jarg8, bool jarg9, byte jarg10);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTrigger_FireEnterActions__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTrigger_FireEnterActions__SWIG_0")]
  #endif
  public static extern void BaseTrigger_FireEnterActions__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTrigger_FireEnterActions__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTrigger_FireEnterActions__SWIG_1")]
  #endif
  public static extern void BaseTrigger_FireEnterActions__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTrigger_FireExitActions__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTrigger_FireExitActions__SWIG_0")]
  #endif
  public static extern void BaseTrigger_FireExitActions__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTrigger_FireExitActions__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTrigger_FireExitActions__SWIG_1")]
  #endif
  public static extern void BaseTrigger_FireExitActions__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_BaseValueConverter")]
  #else
  [DllImport("Noesis", EntryPoint="delete_BaseValueConverter")]
  #endif
  public static extern void delete_BaseValueConverter(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseValueConverter_Convert")]
  #else
  [DllImport("Noesis", EntryPoint="BaseValueConverter_Convert")]
  #endif
  public static extern IntPtr BaseValueConverter_Convert(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseValueConverter_TryConvert")]
  #else
  [DllImport("Noesis", EntryPoint="BaseValueConverter_TryConvert")]
  #endif
  public static extern bool BaseValueConverter_TryConvert(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseValueConverter_ConvertBack")]
  #else
  [DllImport("Noesis", EntryPoint="BaseValueConverter_ConvertBack")]
  #endif
  public static extern IntPtr BaseValueConverter_ConvertBack(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseValueConverter_TryConvertBack")]
  #else
  [DllImport("Noesis", EntryPoint="BaseValueConverter_TryConvertBack")]
  #endif
  public static extern bool BaseValueConverter_TryConvertBack(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Binding__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_Binding__SWIG_0")]
  #endif
  public static extern IntPtr new_Binding__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Binding__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_Binding__SWIG_1")]
  #endif
  public static extern IntPtr new_Binding__SWIG_1(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Binding__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_Binding__SWIG_2")]
  #endif
  public static extern IntPtr new_Binding__SWIG_2(string jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Binding__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="new_Binding__SWIG_3")]
  #endif
  public static extern IntPtr new_Binding__SWIG_3(string jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Binding__SWIG_4")]
  #else
  [DllImport("Noesis", EntryPoint="new_Binding__SWIG_4")]
  #endif
  public static extern IntPtr new_Binding__SWIG_4(string jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Binding")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Binding")]
  #endif
  public static extern void delete_Binding(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Binding_GetElementName")]
  #else
  [DllImport("Noesis", EntryPoint="Binding_GetElementName")]
  #endif
  public static extern IntPtr Binding_GetElementName(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Binding_SetElementName")]
  #else
  [DllImport("Noesis", EntryPoint="Binding_SetElementName")]
  #endif
  public static extern void Binding_SetElementName(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Binding_GetSource")]
  #else
  [DllImport("Noesis", EntryPoint="Binding_GetSource")]
  #endif
  public static extern IntPtr Binding_GetSource(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Binding_SetSource")]
  #else
  [DllImport("Noesis", EntryPoint="Binding_SetSource")]
  #endif
  public static extern void Binding_SetSource(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Binding_GetRelativeSource")]
  #else
  [DllImport("Noesis", EntryPoint="Binding_GetRelativeSource")]
  #endif
  public static extern IntPtr Binding_GetRelativeSource(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Binding_SetRelativeSource")]
  #else
  [DllImport("Noesis", EntryPoint="Binding_SetRelativeSource")]
  #endif
  public static extern void Binding_SetRelativeSource(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Binding_GetPath")]
  #else
  [DllImport("Noesis", EntryPoint="Binding_GetPath")]
  #endif
  public static extern IntPtr Binding_GetPath(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Binding_SetPath")]
  #else
  [DllImport("Noesis", EntryPoint="Binding_SetPath")]
  #endif
  public static extern void Binding_SetPath(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Binding_GetMode")]
  #else
  [DllImport("Noesis", EntryPoint="Binding_GetMode")]
  #endif
  public static extern int Binding_GetMode(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Binding_SetMode")]
  #else
  [DllImport("Noesis", EntryPoint="Binding_SetMode")]
  #endif
  public static extern void Binding_SetMode(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Binding_GetConverter")]
  #else
  [DllImport("Noesis", EntryPoint="Binding_GetConverter")]
  #endif
  public static extern IntPtr Binding_GetConverter(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Binding_SetConverter")]
  #else
  [DllImport("Noesis", EntryPoint="Binding_SetConverter")]
  #endif
  public static extern void Binding_SetConverter(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Binding_GetConverterParameter")]
  #else
  [DllImport("Noesis", EntryPoint="Binding_GetConverterParameter")]
  #endif
  public static extern IntPtr Binding_GetConverterParameter(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Binding_SetConverterParameter")]
  #else
  [DllImport("Noesis", EntryPoint="Binding_SetConverterParameter")]
  #endif
  public static extern void Binding_SetConverterParameter(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Binding_GetFallbackValue")]
  #else
  [DllImport("Noesis", EntryPoint="Binding_GetFallbackValue")]
  #endif
  public static extern IntPtr Binding_GetFallbackValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Binding_SetFallbackValue")]
  #else
  [DllImport("Noesis", EntryPoint="Binding_SetFallbackValue")]
  #endif
  public static extern void Binding_SetFallbackValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Binding_GetUpdateSourceTrigger")]
  #else
  [DllImport("Noesis", EntryPoint="Binding_GetUpdateSourceTrigger")]
  #endif
  public static extern IntPtr Binding_GetUpdateSourceTrigger(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Binding_SetUpdateSourceTrigger")]
  #else
  [DllImport("Noesis", EntryPoint="Binding_SetUpdateSourceTrigger")]
  #endif
  public static extern void Binding_SetUpdateSourceTrigger(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Binding_GetSourceObject")]
  #else
  [DllImport("Noesis", EntryPoint="Binding_GetSourceObject")]
  #endif
  public static extern IntPtr Binding_GetSourceObject(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Binding_ProvideValue")]
  #else
  [DllImport("Noesis", EntryPoint="Binding_ProvideValue")]
  #endif
  public static extern IntPtr Binding_ProvideValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ClearAllBindings")]
  #else
  [DllImport("Noesis", EntryPoint="ClearAllBindings")]
  #endif
  public static extern void ClearAllBindings(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ClearBinding")]
  #else
  [DllImport("Noesis", EntryPoint="ClearBinding")]
  #endif
  public static extern void ClearBinding(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GetBindingBase")]
  #else
  [DllImport("Noesis", EntryPoint="GetBindingBase")]
  #endif
  public static extern IntPtr GetBindingBase(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GetBindingExpression")]
  #else
  [DllImport("Noesis", EntryPoint="GetBindingExpression")]
  #endif
  public static extern IntPtr GetBindingExpression(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SetBinding")]
  #else
  [DllImport("Noesis", EntryPoint="SetBinding")]
  #endif
  public static extern IntPtr SetBinding(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_BitmapSource__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_BitmapSource__SWIG_0")]
  #endif
  public static extern IntPtr new_BitmapSource__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_BitmapSource__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_BitmapSource__SWIG_1")]
  #endif
  public static extern IntPtr new_BitmapSource__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_BitmapSource")]
  #else
  [DllImport("Noesis", EntryPoint="delete_BitmapSource")]
  #endif
  public static extern void delete_BitmapSource(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BitmapSource_GetImage")]
  #else
  [DllImport("Noesis", EntryPoint="BitmapSource_GetImage")]
  #endif
  public static extern IntPtr BitmapSource_GetImage(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BitmapSource_SetImage")]
  #else
  [DllImport("Noesis", EntryPoint="BitmapSource_SetImage")]
  #endif
  public static extern void BitmapSource_SetImage(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BitmapSource_GetDpiX")]
  #else
  [DllImport("Noesis", EntryPoint="BitmapSource_GetDpiX")]
  #endif
  public static extern float BitmapSource_GetDpiX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BitmapSource_GetDpiY")]
  #else
  [DllImport("Noesis", EntryPoint="BitmapSource_GetDpiY")]
  #endif
  public static extern float BitmapSource_GetDpiY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BitmapSource_GetPixelWidth")]
  #else
  [DllImport("Noesis", EntryPoint="BitmapSource_GetPixelWidth")]
  #endif
  public static extern int BitmapSource_GetPixelWidth(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BitmapSource_GetPixelHeight")]
  #else
  [DllImport("Noesis", EntryPoint="BitmapSource_GetPixelHeight")]
  #endif
  public static extern int BitmapSource_GetPixelHeight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BitmapSource_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="BitmapSource_CreateRenderProxy")]
  #endif
  public static extern void BitmapSource_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BitmapSource_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="BitmapSource_UpdateRenderProxy")]
  #endif
  public static extern void BitmapSource_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BitmapSource_UnregisterRenderer")]
  #else
  [DllImport("Noesis", EntryPoint="BitmapSource_UnregisterRenderer")]
  #endif
  public static extern void BitmapSource_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Border__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_Border__SWIG_0")]
  #endif
  public static extern IntPtr new_Border__SWIG_0(bool jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Border__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_Border__SWIG_1")]
  #endif
  public static extern IntPtr new_Border__SWIG_1();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Border")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Border")]
  #endif
  public static extern void delete_Border(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Border_GetBackground")]
  #else
  [DllImport("Noesis", EntryPoint="Border_GetBackground")]
  #endif
  public static extern IntPtr Border_GetBackground(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Border_SetBackground")]
  #else
  [DllImport("Noesis", EntryPoint="Border_SetBackground")]
  #endif
  public static extern void Border_SetBackground(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Border_GetBorderBrush")]
  #else
  [DllImport("Noesis", EntryPoint="Border_GetBorderBrush")]
  #endif
  public static extern IntPtr Border_GetBorderBrush(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Border_SetBorderBrush")]
  #else
  [DllImport("Noesis", EntryPoint="Border_SetBorderBrush")]
  #endif
  public static extern void Border_SetBorderBrush(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Border_GetBorderThickness")]
  #else
  [DllImport("Noesis", EntryPoint="Border_GetBorderThickness")]
  #endif
  public static extern IntPtr Border_GetBorderThickness(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Border_SetBorderThickness")]
  #else
  [DllImport("Noesis", EntryPoint="Border_SetBorderThickness")]
  #endif
  public static extern void Border_SetBorderThickness(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Border_GetCornerRadius")]
  #else
  [DllImport("Noesis", EntryPoint="Border_GetCornerRadius")]
  #endif
  public static extern IntPtr Border_GetCornerRadius(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Border_SetCornerRadius")]
  #else
  [DllImport("Noesis", EntryPoint="Border_SetCornerRadius")]
  #endif
  public static extern void Border_SetCornerRadius(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Border_GetPadding")]
  #else
  [DllImport("Noesis", EntryPoint="Border_GetPadding")]
  #endif
  public static extern IntPtr Border_GetPadding(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Border_SetPadding")]
  #else
  [DllImport("Noesis", EntryPoint="Border_SetPadding")]
  #endif
  public static extern void Border_SetPadding(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Border_BackgroundProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Border_BackgroundProperty_set")]
  #endif
  public static extern void Border_BackgroundProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Border_BackgroundProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Border_BackgroundProperty_get")]
  #endif
  public static extern IntPtr Border_BackgroundProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Border_BorderBrushProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Border_BorderBrushProperty_set")]
  #endif
  public static extern void Border_BorderBrushProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Border_BorderBrushProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Border_BorderBrushProperty_get")]
  #endif
  public static extern IntPtr Border_BorderBrushProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Border_BorderThicknessProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Border_BorderThicknessProperty_set")]
  #endif
  public static extern void Border_BorderThicknessProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Border_BorderThicknessProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Border_BorderThicknessProperty_get")]
  #endif
  public static extern IntPtr Border_BorderThicknessProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Border_CornerRadiusProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Border_CornerRadiusProperty_set")]
  #endif
  public static extern void Border_CornerRadiusProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Border_CornerRadiusProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Border_CornerRadiusProperty_get")]
  #endif
  public static extern IntPtr Border_CornerRadiusProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Border_PaddingProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Border_PaddingProperty_set")]
  #endif
  public static extern void Border_PaddingProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Border_PaddingProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Border_PaddingProperty_get")]
  #endif
  public static extern IntPtr Border_PaddingProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Brush")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Brush")]
  #endif
  public static extern void delete_Brush(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brush_Parse")]
  #else
  [DllImport("Noesis", EntryPoint="Brush_Parse")]
  #endif
  public static extern IntPtr Brush_Parse(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brush_TryParse")]
  #else
  [DllImport("Noesis", EntryPoint="Brush_TryParse")]
  #endif
  public static extern bool Brush_TryParse(string jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brush_GetOpacity")]
  #else
  [DllImport("Noesis", EntryPoint="Brush_GetOpacity")]
  #endif
  public static extern float Brush_GetOpacity(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brush_SetOpacity")]
  #else
  [DllImport("Noesis", EntryPoint="Brush_SetOpacity")]
  #endif
  public static extern void Brush_SetOpacity(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brush_GetRelativeTransform")]
  #else
  [DllImport("Noesis", EntryPoint="Brush_GetRelativeTransform")]
  #endif
  public static extern IntPtr Brush_GetRelativeTransform(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brush_SetRelativeTransform")]
  #else
  [DllImport("Noesis", EntryPoint="Brush_SetRelativeTransform")]
  #endif
  public static extern void Brush_SetRelativeTransform(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brush_GetTransform")]
  #else
  [DllImport("Noesis", EntryPoint="Brush_GetTransform")]
  #endif
  public static extern IntPtr Brush_GetTransform(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brush_SetTransform")]
  #else
  [DllImport("Noesis", EntryPoint="Brush_SetTransform")]
  #endif
  public static extern void Brush_SetTransform(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brush_IsTransparent")]
  #else
  [DllImport("Noesis", EntryPoint="Brush_IsTransparent")]
  #endif
  public static extern bool Brush_IsTransparent(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brush_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="Brush_UpdateRenderProxy")]
  #endif
  public static extern void Brush_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brush_UnregisterRenderer")]
  #else
  [DllImport("Noesis", EntryPoint="Brush_UnregisterRenderer")]
  #endif
  public static extern void Brush_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brush_OpacityProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Brush_OpacityProperty_set")]
  #endif
  public static extern void Brush_OpacityProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brush_OpacityProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Brush_OpacityProperty_get")]
  #endif
  public static extern IntPtr Brush_OpacityProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brush_RelativeTransformProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Brush_RelativeTransformProperty_set")]
  #endif
  public static extern void Brush_RelativeTransformProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brush_RelativeTransformProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Brush_RelativeTransformProperty_get")]
  #endif
  public static extern IntPtr Brush_RelativeTransformProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brush_TransformProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Brush_TransformProperty_set")]
  #endif
  public static extern void Brush_TransformProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brush_TransformProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Brush_TransformProperty_get")]
  #endif
  public static extern IntPtr Brush_TransformProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_AliceBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_AliceBlue")]
  #endif
  public static extern IntPtr Brushes_AliceBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_AntiqueWhite")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_AntiqueWhite")]
  #endif
  public static extern IntPtr Brushes_AntiqueWhite();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Aqua")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Aqua")]
  #endif
  public static extern IntPtr Brushes_Aqua();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Aquamarine")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Aquamarine")]
  #endif
  public static extern IntPtr Brushes_Aquamarine();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Azure")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Azure")]
  #endif
  public static extern IntPtr Brushes_Azure();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Beige")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Beige")]
  #endif
  public static extern IntPtr Brushes_Beige();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Bisque")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Bisque")]
  #endif
  public static extern IntPtr Brushes_Bisque();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Black")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Black")]
  #endif
  public static extern IntPtr Brushes_Black();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_BlanchedAlmond")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_BlanchedAlmond")]
  #endif
  public static extern IntPtr Brushes_BlanchedAlmond();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Blue")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Blue")]
  #endif
  public static extern IntPtr Brushes_Blue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_BlueViolet")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_BlueViolet")]
  #endif
  public static extern IntPtr Brushes_BlueViolet();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Brown")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Brown")]
  #endif
  public static extern IntPtr Brushes_Brown();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_BurlyWood")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_BurlyWood")]
  #endif
  public static extern IntPtr Brushes_BurlyWood();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_CadetBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_CadetBlue")]
  #endif
  public static extern IntPtr Brushes_CadetBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Chartreuse")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Chartreuse")]
  #endif
  public static extern IntPtr Brushes_Chartreuse();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Chocolate")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Chocolate")]
  #endif
  public static extern IntPtr Brushes_Chocolate();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Coral")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Coral")]
  #endif
  public static extern IntPtr Brushes_Coral();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_CornflowerBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_CornflowerBlue")]
  #endif
  public static extern IntPtr Brushes_CornflowerBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Cornsilk")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Cornsilk")]
  #endif
  public static extern IntPtr Brushes_Cornsilk();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Crimson")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Crimson")]
  #endif
  public static extern IntPtr Brushes_Crimson();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Cyan")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Cyan")]
  #endif
  public static extern IntPtr Brushes_Cyan();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_DarkBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_DarkBlue")]
  #endif
  public static extern IntPtr Brushes_DarkBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_DarkCyan")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_DarkCyan")]
  #endif
  public static extern IntPtr Brushes_DarkCyan();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_DarkGoldenrod")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_DarkGoldenrod")]
  #endif
  public static extern IntPtr Brushes_DarkGoldenrod();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_DarkGray")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_DarkGray")]
  #endif
  public static extern IntPtr Brushes_DarkGray();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_DarkGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_DarkGreen")]
  #endif
  public static extern IntPtr Brushes_DarkGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_DarkKhaki")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_DarkKhaki")]
  #endif
  public static extern IntPtr Brushes_DarkKhaki();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_DarkMagenta")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_DarkMagenta")]
  #endif
  public static extern IntPtr Brushes_DarkMagenta();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_DarkOliveGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_DarkOliveGreen")]
  #endif
  public static extern IntPtr Brushes_DarkOliveGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_DarkOrange")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_DarkOrange")]
  #endif
  public static extern IntPtr Brushes_DarkOrange();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_DarkOrchid")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_DarkOrchid")]
  #endif
  public static extern IntPtr Brushes_DarkOrchid();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_DarkRed")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_DarkRed")]
  #endif
  public static extern IntPtr Brushes_DarkRed();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_DarkSalmon")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_DarkSalmon")]
  #endif
  public static extern IntPtr Brushes_DarkSalmon();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_DarkSeaGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_DarkSeaGreen")]
  #endif
  public static extern IntPtr Brushes_DarkSeaGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_DarkSlateBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_DarkSlateBlue")]
  #endif
  public static extern IntPtr Brushes_DarkSlateBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_DarkSlateGray")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_DarkSlateGray")]
  #endif
  public static extern IntPtr Brushes_DarkSlateGray();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_DarkTurquoise")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_DarkTurquoise")]
  #endif
  public static extern IntPtr Brushes_DarkTurquoise();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_DarkViolet")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_DarkViolet")]
  #endif
  public static extern IntPtr Brushes_DarkViolet();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_DeepPink")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_DeepPink")]
  #endif
  public static extern IntPtr Brushes_DeepPink();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_DeepSkyBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_DeepSkyBlue")]
  #endif
  public static extern IntPtr Brushes_DeepSkyBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_DimGray")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_DimGray")]
  #endif
  public static extern IntPtr Brushes_DimGray();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_DodgerBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_DodgerBlue")]
  #endif
  public static extern IntPtr Brushes_DodgerBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Firebrick")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Firebrick")]
  #endif
  public static extern IntPtr Brushes_Firebrick();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_FloralWhite")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_FloralWhite")]
  #endif
  public static extern IntPtr Brushes_FloralWhite();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_ForestGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_ForestGreen")]
  #endif
  public static extern IntPtr Brushes_ForestGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Fuchsia")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Fuchsia")]
  #endif
  public static extern IntPtr Brushes_Fuchsia();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Gainsboro")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Gainsboro")]
  #endif
  public static extern IntPtr Brushes_Gainsboro();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_GhostWhite")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_GhostWhite")]
  #endif
  public static extern IntPtr Brushes_GhostWhite();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Gold")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Gold")]
  #endif
  public static extern IntPtr Brushes_Gold();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Goldenrod")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Goldenrod")]
  #endif
  public static extern IntPtr Brushes_Goldenrod();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Gray")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Gray")]
  #endif
  public static extern IntPtr Brushes_Gray();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Green")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Green")]
  #endif
  public static extern IntPtr Brushes_Green();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_GreenYellow")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_GreenYellow")]
  #endif
  public static extern IntPtr Brushes_GreenYellow();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Honeydew")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Honeydew")]
  #endif
  public static extern IntPtr Brushes_Honeydew();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_HotPink")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_HotPink")]
  #endif
  public static extern IntPtr Brushes_HotPink();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_IndianRed")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_IndianRed")]
  #endif
  public static extern IntPtr Brushes_IndianRed();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Indigo")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Indigo")]
  #endif
  public static extern IntPtr Brushes_Indigo();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Ivory")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Ivory")]
  #endif
  public static extern IntPtr Brushes_Ivory();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Khaki")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Khaki")]
  #endif
  public static extern IntPtr Brushes_Khaki();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Lavender")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Lavender")]
  #endif
  public static extern IntPtr Brushes_Lavender();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_LavenderBlush")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_LavenderBlush")]
  #endif
  public static extern IntPtr Brushes_LavenderBlush();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_LawnGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_LawnGreen")]
  #endif
  public static extern IntPtr Brushes_LawnGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_LemonChiffon")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_LemonChiffon")]
  #endif
  public static extern IntPtr Brushes_LemonChiffon();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_LightBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_LightBlue")]
  #endif
  public static extern IntPtr Brushes_LightBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_LightCoral")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_LightCoral")]
  #endif
  public static extern IntPtr Brushes_LightCoral();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_LightCyan")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_LightCyan")]
  #endif
  public static extern IntPtr Brushes_LightCyan();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_LightGoldenrodYellow")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_LightGoldenrodYellow")]
  #endif
  public static extern IntPtr Brushes_LightGoldenrodYellow();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_LightGray")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_LightGray")]
  #endif
  public static extern IntPtr Brushes_LightGray();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_LightGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_LightGreen")]
  #endif
  public static extern IntPtr Brushes_LightGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_LightPink")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_LightPink")]
  #endif
  public static extern IntPtr Brushes_LightPink();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_LightSalmon")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_LightSalmon")]
  #endif
  public static extern IntPtr Brushes_LightSalmon();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_LightSeaGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_LightSeaGreen")]
  #endif
  public static extern IntPtr Brushes_LightSeaGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_LightSkyBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_LightSkyBlue")]
  #endif
  public static extern IntPtr Brushes_LightSkyBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_LightSlateGray")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_LightSlateGray")]
  #endif
  public static extern IntPtr Brushes_LightSlateGray();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_LightSteelBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_LightSteelBlue")]
  #endif
  public static extern IntPtr Brushes_LightSteelBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_LightYellow")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_LightYellow")]
  #endif
  public static extern IntPtr Brushes_LightYellow();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Lime")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Lime")]
  #endif
  public static extern IntPtr Brushes_Lime();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_LimeGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_LimeGreen")]
  #endif
  public static extern IntPtr Brushes_LimeGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Linen")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Linen")]
  #endif
  public static extern IntPtr Brushes_Linen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Magenta")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Magenta")]
  #endif
  public static extern IntPtr Brushes_Magenta();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Maroon")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Maroon")]
  #endif
  public static extern IntPtr Brushes_Maroon();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_MediumAquamarine")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_MediumAquamarine")]
  #endif
  public static extern IntPtr Brushes_MediumAquamarine();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_MediumBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_MediumBlue")]
  #endif
  public static extern IntPtr Brushes_MediumBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_MediumOrchid")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_MediumOrchid")]
  #endif
  public static extern IntPtr Brushes_MediumOrchid();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_MediumPurple")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_MediumPurple")]
  #endif
  public static extern IntPtr Brushes_MediumPurple();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_MediumSeaGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_MediumSeaGreen")]
  #endif
  public static extern IntPtr Brushes_MediumSeaGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_MediumSlateBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_MediumSlateBlue")]
  #endif
  public static extern IntPtr Brushes_MediumSlateBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_MediumSpringGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_MediumSpringGreen")]
  #endif
  public static extern IntPtr Brushes_MediumSpringGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_MediumTurquoise")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_MediumTurquoise")]
  #endif
  public static extern IntPtr Brushes_MediumTurquoise();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_MediumVioletRed")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_MediumVioletRed")]
  #endif
  public static extern IntPtr Brushes_MediumVioletRed();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_MidnightBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_MidnightBlue")]
  #endif
  public static extern IntPtr Brushes_MidnightBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_MintCream")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_MintCream")]
  #endif
  public static extern IntPtr Brushes_MintCream();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_MistyRose")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_MistyRose")]
  #endif
  public static extern IntPtr Brushes_MistyRose();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Moccasin")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Moccasin")]
  #endif
  public static extern IntPtr Brushes_Moccasin();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_NavajoWhite")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_NavajoWhite")]
  #endif
  public static extern IntPtr Brushes_NavajoWhite();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Navy")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Navy")]
  #endif
  public static extern IntPtr Brushes_Navy();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_OldLace")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_OldLace")]
  #endif
  public static extern IntPtr Brushes_OldLace();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Olive")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Olive")]
  #endif
  public static extern IntPtr Brushes_Olive();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_OliveDrab")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_OliveDrab")]
  #endif
  public static extern IntPtr Brushes_OliveDrab();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Orange")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Orange")]
  #endif
  public static extern IntPtr Brushes_Orange();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_OrangeRed")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_OrangeRed")]
  #endif
  public static extern IntPtr Brushes_OrangeRed();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Orchid")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Orchid")]
  #endif
  public static extern IntPtr Brushes_Orchid();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_PaleGoldenrod")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_PaleGoldenrod")]
  #endif
  public static extern IntPtr Brushes_PaleGoldenrod();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_PaleGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_PaleGreen")]
  #endif
  public static extern IntPtr Brushes_PaleGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_PaleTurquoise")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_PaleTurquoise")]
  #endif
  public static extern IntPtr Brushes_PaleTurquoise();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_PaleVioletRed")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_PaleVioletRed")]
  #endif
  public static extern IntPtr Brushes_PaleVioletRed();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_PapayaWhip")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_PapayaWhip")]
  #endif
  public static extern IntPtr Brushes_PapayaWhip();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_PeachPuff")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_PeachPuff")]
  #endif
  public static extern IntPtr Brushes_PeachPuff();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Peru")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Peru")]
  #endif
  public static extern IntPtr Brushes_Peru();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Pink")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Pink")]
  #endif
  public static extern IntPtr Brushes_Pink();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Plum")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Plum")]
  #endif
  public static extern IntPtr Brushes_Plum();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_PowderBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_PowderBlue")]
  #endif
  public static extern IntPtr Brushes_PowderBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Purple")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Purple")]
  #endif
  public static extern IntPtr Brushes_Purple();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Red")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Red")]
  #endif
  public static extern IntPtr Brushes_Red();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_RosyBrown")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_RosyBrown")]
  #endif
  public static extern IntPtr Brushes_RosyBrown();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_RoyalBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_RoyalBlue")]
  #endif
  public static extern IntPtr Brushes_RoyalBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_SaddleBrown")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_SaddleBrown")]
  #endif
  public static extern IntPtr Brushes_SaddleBrown();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Salmon")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Salmon")]
  #endif
  public static extern IntPtr Brushes_Salmon();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_SandyBrown")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_SandyBrown")]
  #endif
  public static extern IntPtr Brushes_SandyBrown();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_SeaGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_SeaGreen")]
  #endif
  public static extern IntPtr Brushes_SeaGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_SeaShell")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_SeaShell")]
  #endif
  public static extern IntPtr Brushes_SeaShell();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Sienna")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Sienna")]
  #endif
  public static extern IntPtr Brushes_Sienna();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Silver")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Silver")]
  #endif
  public static extern IntPtr Brushes_Silver();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_SkyBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_SkyBlue")]
  #endif
  public static extern IntPtr Brushes_SkyBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_SlateBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_SlateBlue")]
  #endif
  public static extern IntPtr Brushes_SlateBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_SlateGray")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_SlateGray")]
  #endif
  public static extern IntPtr Brushes_SlateGray();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Snow")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Snow")]
  #endif
  public static extern IntPtr Brushes_Snow();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_SpringGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_SpringGreen")]
  #endif
  public static extern IntPtr Brushes_SpringGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_SteelBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_SteelBlue")]
  #endif
  public static extern IntPtr Brushes_SteelBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Tan")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Tan")]
  #endif
  public static extern IntPtr Brushes_Tan();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Teal")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Teal")]
  #endif
  public static extern IntPtr Brushes_Teal();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Thistle")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Thistle")]
  #endif
  public static extern IntPtr Brushes_Thistle();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Tomato")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Tomato")]
  #endif
  public static extern IntPtr Brushes_Tomato();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Transparent")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Transparent")]
  #endif
  public static extern IntPtr Brushes_Transparent();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Turquoise")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Turquoise")]
  #endif
  public static extern IntPtr Brushes_Turquoise();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Violet")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Violet")]
  #endif
  public static extern IntPtr Brushes_Violet();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Wheat")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Wheat")]
  #endif
  public static extern IntPtr Brushes_Wheat();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_White")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_White")]
  #endif
  public static extern IntPtr Brushes_White();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_WhiteSmoke")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_WhiteSmoke")]
  #endif
  public static extern IntPtr Brushes_WhiteSmoke();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_Yellow")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_Yellow")]
  #endif
  public static extern IntPtr Brushes_Yellow();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_YellowGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_YellowGreen")]
  #endif
  public static extern IntPtr Brushes_YellowGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brushes_FromColor")]
  #else
  [DllImport("Noesis", EntryPoint="Brushes_FromColor")]
  #endif
  public static extern IntPtr Brushes_FromColor(uint jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Brushes")]
  #else
  [DllImport("Noesis", EntryPoint="new_Brushes")]
  #endif
  public static extern IntPtr new_Brushes();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Brushes")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Brushes")]
  #endif
  public static extern void delete_Brushes(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_BulletDecorator")]
  #else
  [DllImport("Noesis", EntryPoint="new_BulletDecorator")]
  #endif
  public static extern IntPtr new_BulletDecorator();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_BulletDecorator")]
  #else
  [DllImport("Noesis", EntryPoint="delete_BulletDecorator")]
  #endif
  public static extern void delete_BulletDecorator(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BulletDecorator_GetBackground")]
  #else
  [DllImport("Noesis", EntryPoint="BulletDecorator_GetBackground")]
  #endif
  public static extern IntPtr BulletDecorator_GetBackground(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BulletDecorator_SetBackground")]
  #else
  [DllImport("Noesis", EntryPoint="BulletDecorator_SetBackground")]
  #endif
  public static extern void BulletDecorator_SetBackground(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BulletDecorator_GetBullet")]
  #else
  [DllImport("Noesis", EntryPoint="BulletDecorator_GetBullet")]
  #endif
  public static extern IntPtr BulletDecorator_GetBullet(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BulletDecorator_SetBullet")]
  #else
  [DllImport("Noesis", EntryPoint="BulletDecorator_SetBullet")]
  #endif
  public static extern void BulletDecorator_SetBullet(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BulletDecorator_BackgroundProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BulletDecorator_BackgroundProperty_set")]
  #endif
  public static extern void BulletDecorator_BackgroundProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BulletDecorator_BackgroundProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BulletDecorator_BackgroundProperty_get")]
  #endif
  public static extern IntPtr BulletDecorator_BackgroundProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Button")]
  #else
  [DllImport("Noesis", EntryPoint="new_Button")]
  #endif
  public static extern IntPtr new_Button();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Button")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Button")]
  #endif
  public static extern void delete_Button(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Button_GetIsCancel")]
  #else
  [DllImport("Noesis", EntryPoint="Button_GetIsCancel")]
  #endif
  public static extern bool Button_GetIsCancel(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Button_SetIsCancel")]
  #else
  [DllImport("Noesis", EntryPoint="Button_SetIsCancel")]
  #endif
  public static extern void Button_SetIsCancel(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Button_GetIsDefault")]
  #else
  [DllImport("Noesis", EntryPoint="Button_GetIsDefault")]
  #endif
  public static extern bool Button_GetIsDefault(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Button_SetIsDefault")]
  #else
  [DllImport("Noesis", EntryPoint="Button_SetIsDefault")]
  #endif
  public static extern void Button_SetIsDefault(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Button_GetIsDefaulted")]
  #else
  [DllImport("Noesis", EntryPoint="Button_GetIsDefaulted")]
  #endif
  public static extern bool Button_GetIsDefaulted(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Button_IsCancelProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Button_IsCancelProperty_set")]
  #endif
  public static extern void Button_IsCancelProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Button_IsCancelProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Button_IsCancelProperty_get")]
  #endif
  public static extern IntPtr Button_IsCancelProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Button_IsDefaultProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Button_IsDefaultProperty_set")]
  #endif
  public static extern void Button_IsDefaultProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Button_IsDefaultProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Button_IsDefaultProperty_get")]
  #endif
  public static extern IntPtr Button_IsDefaultProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Button_IsDefaultedProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Button_IsDefaultedProperty_set")]
  #endif
  public static extern void Button_IsDefaultedProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Button_IsDefaultedProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Button_IsDefaultedProperty_get")]
  #endif
  public static extern IntPtr Button_IsDefaultedProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Canvas")]
  #else
  [DllImport("Noesis", EntryPoint="new_Canvas")]
  #endif
  public static extern IntPtr new_Canvas();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Canvas_GetLeft")]
  #else
  [DllImport("Noesis", EntryPoint="Canvas_GetLeft")]
  #endif
  public static extern float Canvas_GetLeft(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Canvas_SetLeft")]
  #else
  [DllImport("Noesis", EntryPoint="Canvas_SetLeft")]
  #endif
  public static extern void Canvas_SetLeft(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Canvas_GetTop")]
  #else
  [DllImport("Noesis", EntryPoint="Canvas_GetTop")]
  #endif
  public static extern float Canvas_GetTop(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Canvas_SetTop")]
  #else
  [DllImport("Noesis", EntryPoint="Canvas_SetTop")]
  #endif
  public static extern void Canvas_SetTop(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Canvas_GetRight")]
  #else
  [DllImport("Noesis", EntryPoint="Canvas_GetRight")]
  #endif
  public static extern float Canvas_GetRight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Canvas_SetRight")]
  #else
  [DllImport("Noesis", EntryPoint="Canvas_SetRight")]
  #endif
  public static extern void Canvas_SetRight(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Canvas_GetBottom")]
  #else
  [DllImport("Noesis", EntryPoint="Canvas_GetBottom")]
  #endif
  public static extern float Canvas_GetBottom(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Canvas_SetBottom")]
  #else
  [DllImport("Noesis", EntryPoint="Canvas_SetBottom")]
  #endif
  public static extern void Canvas_SetBottom(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Canvas_BottomProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Canvas_BottomProperty_set")]
  #endif
  public static extern void Canvas_BottomProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Canvas_BottomProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Canvas_BottomProperty_get")]
  #endif
  public static extern IntPtr Canvas_BottomProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Canvas_LeftProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Canvas_LeftProperty_set")]
  #endif
  public static extern void Canvas_LeftProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Canvas_LeftProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Canvas_LeftProperty_get")]
  #endif
  public static extern IntPtr Canvas_LeftProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Canvas_RightProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Canvas_RightProperty_set")]
  #endif
  public static extern void Canvas_RightProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Canvas_RightProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Canvas_RightProperty_get")]
  #endif
  public static extern IntPtr Canvas_RightProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Canvas_TopProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Canvas_TopProperty_set")]
  #endif
  public static extern void Canvas_TopProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Canvas_TopProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Canvas_TopProperty_get")]
  #endif
  public static extern IntPtr Canvas_TopProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Canvas")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Canvas")]
  #endif
  public static extern void delete_Canvas(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CheckBox")]
  #else
  [DllImport("Noesis", EntryPoint="new_CheckBox")]
  #endif
  public static extern IntPtr new_CheckBox();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_CheckBox")]
  #else
  [DllImport("Noesis", EntryPoint="delete_CheckBox")]
  #endif
  public static extern void delete_CheckBox(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CollectionView__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_CollectionView__SWIG_0")]
  #endif
  public static extern IntPtr new_CollectionView__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CollectionView__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_CollectionView__SWIG_1")]
  #endif
  public static extern IntPtr new_CollectionView__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_CollectionView")]
  #else
  [DllImport("Noesis", EntryPoint="delete_CollectionView")]
  #endif
  public static extern void delete_CollectionView(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionView_GetCollection")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionView_GetCollection")]
  #endif
  public static extern IntPtr CollectionView_GetCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionView_CanFilter")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionView_CanFilter")]
  #endif
  public static extern bool CollectionView_CanFilter(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionView_CanGroup")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionView_CanGroup")]
  #endif
  public static extern bool CollectionView_CanGroup(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionView_CanSort")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionView_CanSort")]
  #endif
  public static extern bool CollectionView_CanSort(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionView_Contains")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionView_Contains")]
  #endif
  public static extern bool CollectionView_Contains(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionView_CurrentItem")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionView_CurrentItem")]
  #endif
  public static extern IntPtr CollectionView_CurrentItem(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionView_CurrentPosition")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionView_CurrentPosition")]
  #endif
  public static extern int CollectionView_CurrentPosition(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionView_IsCurrentAfterLast")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionView_IsCurrentAfterLast")]
  #endif
  public static extern bool CollectionView_IsCurrentAfterLast(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionView_IsCurrentBeforeFirst")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionView_IsCurrentBeforeFirst")]
  #endif
  public static extern bool CollectionView_IsCurrentBeforeFirst(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionView_IsEmpty")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionView_IsEmpty")]
  #endif
  public static extern bool CollectionView_IsEmpty(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionView_MoveCurrentTo")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionView_MoveCurrentTo")]
  #endif
  public static extern bool CollectionView_MoveCurrentTo(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionView_MoveCurrentToFirst")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionView_MoveCurrentToFirst")]
  #endif
  public static extern bool CollectionView_MoveCurrentToFirst(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionView_MoveCurrentToLast")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionView_MoveCurrentToLast")]
  #endif
  public static extern bool CollectionView_MoveCurrentToLast(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionView_MoveCurrentToNext")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionView_MoveCurrentToNext")]
  #endif
  public static extern bool CollectionView_MoveCurrentToNext(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionView_MoveCurrentToPosition")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionView_MoveCurrentToPosition")]
  #endif
  public static extern bool CollectionView_MoveCurrentToPosition(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionView_MoveCurrentToPrevious")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionView_MoveCurrentToPrevious")]
  #endif
  public static extern bool CollectionView_MoveCurrentToPrevious(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionView_Refresh")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionView_Refresh")]
  #endif
  public static extern void CollectionView_Refresh(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionView_CurrentChanged")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionView_CurrentChanged")]
  #endif
  public static extern IntPtr CollectionView_CurrentChanged(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionView_GetIterator")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionView_GetIterator")]
  #endif
  public static extern IntPtr CollectionView_GetIterator(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionView_CollectionChanged")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionView_CollectionChanged")]
  #endif
  public static extern IntPtr CollectionView_CollectionChanged(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionView_IsInitialized")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionView_IsInitialized")]
  #endif
  public static extern bool CollectionView_IsInitialized(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionView_Init")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionView_Init")]
  #endif
  public static extern void CollectionView_Init(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CollectionViewSource")]
  #else
  [DllImport("Noesis", EntryPoint="new_CollectionViewSource")]
  #endif
  public static extern IntPtr new_CollectionViewSource();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_CollectionViewSource")]
  #else
  [DllImport("Noesis", EntryPoint="delete_CollectionViewSource")]
  #endif
  public static extern void delete_CollectionViewSource(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionViewSource_GetCollectionViewType")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionViewSource_GetCollectionViewType")]
  #endif
  public static extern IntPtr CollectionViewSource_GetCollectionViewType(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionViewSource_SetCollectionViewType")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionViewSource_SetCollectionViewType")]
  #endif
  public static extern void CollectionViewSource_SetCollectionViewType(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionViewSource_GetSource")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionViewSource_GetSource")]
  #endif
  public static extern IntPtr CollectionViewSource_GetSource(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionViewSource_SetSource")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionViewSource_SetSource")]
  #endif
  public static extern void CollectionViewSource_SetSource(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionViewSource_GetView")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionViewSource_GetView")]
  #endif
  public static extern IntPtr CollectionViewSource_GetView(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionViewSource_SetView")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionViewSource_SetView")]
  #endif
  public static extern void CollectionViewSource_SetView(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionViewSource_GetGroupDescriptions")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionViewSource_GetGroupDescriptions")]
  #endif
  public static extern IntPtr CollectionViewSource_GetGroupDescriptions(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionViewSource_SetGroupDescriptions")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionViewSource_SetGroupDescriptions")]
  #endif
  public static extern void CollectionViewSource_SetGroupDescriptions(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionViewSource_GetSortDescriptions")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionViewSource_GetSortDescriptions")]
  #endif
  public static extern IntPtr CollectionViewSource_GetSortDescriptions(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionViewSource_SetSortDescriptions")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionViewSource_SetSortDescriptions")]
  #endif
  public static extern void CollectionViewSource_SetSortDescriptions(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionViewSource_CollectionViewTypeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionViewSource_CollectionViewTypeProperty_set")]
  #endif
  public static extern void CollectionViewSource_CollectionViewTypeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionViewSource_CollectionViewTypeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionViewSource_CollectionViewTypeProperty_get")]
  #endif
  public static extern IntPtr CollectionViewSource_CollectionViewTypeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionViewSource_SourceProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionViewSource_SourceProperty_set")]
  #endif
  public static extern void CollectionViewSource_SourceProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionViewSource_SourceProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionViewSource_SourceProperty_get")]
  #endif
  public static extern IntPtr CollectionViewSource_SourceProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionViewSource_ViewProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionViewSource_ViewProperty_set")]
  #endif
  public static extern void CollectionViewSource_ViewProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionViewSource_ViewProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionViewSource_ViewProperty_get")]
  #endif
  public static extern IntPtr CollectionViewSource_ViewProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_AliceBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_AliceBlue")]
  #endif
  public static extern IntPtr Colors_AliceBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_AntiqueWhite")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_AntiqueWhite")]
  #endif
  public static extern IntPtr Colors_AntiqueWhite();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Aqua")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Aqua")]
  #endif
  public static extern IntPtr Colors_Aqua();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Aquamarine")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Aquamarine")]
  #endif
  public static extern IntPtr Colors_Aquamarine();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Azure")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Azure")]
  #endif
  public static extern IntPtr Colors_Azure();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Beige")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Beige")]
  #endif
  public static extern IntPtr Colors_Beige();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Bisque")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Bisque")]
  #endif
  public static extern IntPtr Colors_Bisque();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Black")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Black")]
  #endif
  public static extern IntPtr Colors_Black();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_BlanchedAlmond")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_BlanchedAlmond")]
  #endif
  public static extern IntPtr Colors_BlanchedAlmond();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Blue")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Blue")]
  #endif
  public static extern IntPtr Colors_Blue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_BlueViolet")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_BlueViolet")]
  #endif
  public static extern IntPtr Colors_BlueViolet();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Brown")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Brown")]
  #endif
  public static extern IntPtr Colors_Brown();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_BurlyWood")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_BurlyWood")]
  #endif
  public static extern IntPtr Colors_BurlyWood();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_CadetBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_CadetBlue")]
  #endif
  public static extern IntPtr Colors_CadetBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Chartreuse")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Chartreuse")]
  #endif
  public static extern IntPtr Colors_Chartreuse();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Chocolate")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Chocolate")]
  #endif
  public static extern IntPtr Colors_Chocolate();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Coral")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Coral")]
  #endif
  public static extern IntPtr Colors_Coral();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_CornflowerBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_CornflowerBlue")]
  #endif
  public static extern IntPtr Colors_CornflowerBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Cornsilk")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Cornsilk")]
  #endif
  public static extern IntPtr Colors_Cornsilk();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Crimson")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Crimson")]
  #endif
  public static extern IntPtr Colors_Crimson();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Cyan")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Cyan")]
  #endif
  public static extern IntPtr Colors_Cyan();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_DarkBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_DarkBlue")]
  #endif
  public static extern IntPtr Colors_DarkBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_DarkCyan")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_DarkCyan")]
  #endif
  public static extern IntPtr Colors_DarkCyan();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_DarkGoldenrod")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_DarkGoldenrod")]
  #endif
  public static extern IntPtr Colors_DarkGoldenrod();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_DarkGray")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_DarkGray")]
  #endif
  public static extern IntPtr Colors_DarkGray();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_DarkGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_DarkGreen")]
  #endif
  public static extern IntPtr Colors_DarkGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_DarkKhaki")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_DarkKhaki")]
  #endif
  public static extern IntPtr Colors_DarkKhaki();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_DarkMagenta")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_DarkMagenta")]
  #endif
  public static extern IntPtr Colors_DarkMagenta();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_DarkOliveGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_DarkOliveGreen")]
  #endif
  public static extern IntPtr Colors_DarkOliveGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_DarkOrange")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_DarkOrange")]
  #endif
  public static extern IntPtr Colors_DarkOrange();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_DarkOrchid")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_DarkOrchid")]
  #endif
  public static extern IntPtr Colors_DarkOrchid();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_DarkRed")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_DarkRed")]
  #endif
  public static extern IntPtr Colors_DarkRed();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_DarkSalmon")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_DarkSalmon")]
  #endif
  public static extern IntPtr Colors_DarkSalmon();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_DarkSeaGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_DarkSeaGreen")]
  #endif
  public static extern IntPtr Colors_DarkSeaGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_DarkSlateBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_DarkSlateBlue")]
  #endif
  public static extern IntPtr Colors_DarkSlateBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_DarkSlateGray")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_DarkSlateGray")]
  #endif
  public static extern IntPtr Colors_DarkSlateGray();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_DarkTurquoise")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_DarkTurquoise")]
  #endif
  public static extern IntPtr Colors_DarkTurquoise();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_DarkViolet")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_DarkViolet")]
  #endif
  public static extern IntPtr Colors_DarkViolet();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_DeepPink")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_DeepPink")]
  #endif
  public static extern IntPtr Colors_DeepPink();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_DeepSkyBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_DeepSkyBlue")]
  #endif
  public static extern IntPtr Colors_DeepSkyBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_DimGray")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_DimGray")]
  #endif
  public static extern IntPtr Colors_DimGray();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_DodgerBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_DodgerBlue")]
  #endif
  public static extern IntPtr Colors_DodgerBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Firebrick")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Firebrick")]
  #endif
  public static extern IntPtr Colors_Firebrick();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_FloralWhite")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_FloralWhite")]
  #endif
  public static extern IntPtr Colors_FloralWhite();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_ForestGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_ForestGreen")]
  #endif
  public static extern IntPtr Colors_ForestGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Fuchsia")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Fuchsia")]
  #endif
  public static extern IntPtr Colors_Fuchsia();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Gainsboro")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Gainsboro")]
  #endif
  public static extern IntPtr Colors_Gainsboro();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_GhostWhite")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_GhostWhite")]
  #endif
  public static extern IntPtr Colors_GhostWhite();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Gold")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Gold")]
  #endif
  public static extern IntPtr Colors_Gold();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Goldenrod")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Goldenrod")]
  #endif
  public static extern IntPtr Colors_Goldenrod();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Gray")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Gray")]
  #endif
  public static extern IntPtr Colors_Gray();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Green")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Green")]
  #endif
  public static extern IntPtr Colors_Green();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_GreenYellow")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_GreenYellow")]
  #endif
  public static extern IntPtr Colors_GreenYellow();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Honeydew")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Honeydew")]
  #endif
  public static extern IntPtr Colors_Honeydew();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_HotPink")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_HotPink")]
  #endif
  public static extern IntPtr Colors_HotPink();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_IndianRed")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_IndianRed")]
  #endif
  public static extern IntPtr Colors_IndianRed();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Indigo")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Indigo")]
  #endif
  public static extern IntPtr Colors_Indigo();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Ivory")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Ivory")]
  #endif
  public static extern IntPtr Colors_Ivory();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Khaki")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Khaki")]
  #endif
  public static extern IntPtr Colors_Khaki();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Lavender")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Lavender")]
  #endif
  public static extern IntPtr Colors_Lavender();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_LavenderBlush")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_LavenderBlush")]
  #endif
  public static extern IntPtr Colors_LavenderBlush();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_LawnGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_LawnGreen")]
  #endif
  public static extern IntPtr Colors_LawnGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_LemonChiffon")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_LemonChiffon")]
  #endif
  public static extern IntPtr Colors_LemonChiffon();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_LightBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_LightBlue")]
  #endif
  public static extern IntPtr Colors_LightBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_LightCoral")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_LightCoral")]
  #endif
  public static extern IntPtr Colors_LightCoral();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_LightCyan")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_LightCyan")]
  #endif
  public static extern IntPtr Colors_LightCyan();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_LightGoldenrodYellow")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_LightGoldenrodYellow")]
  #endif
  public static extern IntPtr Colors_LightGoldenrodYellow();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_LightGray")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_LightGray")]
  #endif
  public static extern IntPtr Colors_LightGray();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_LightGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_LightGreen")]
  #endif
  public static extern IntPtr Colors_LightGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_LightPink")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_LightPink")]
  #endif
  public static extern IntPtr Colors_LightPink();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_LightSalmon")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_LightSalmon")]
  #endif
  public static extern IntPtr Colors_LightSalmon();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_LightSeaGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_LightSeaGreen")]
  #endif
  public static extern IntPtr Colors_LightSeaGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_LightSkyBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_LightSkyBlue")]
  #endif
  public static extern IntPtr Colors_LightSkyBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_LightSlateGray")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_LightSlateGray")]
  #endif
  public static extern IntPtr Colors_LightSlateGray();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_LightSteelBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_LightSteelBlue")]
  #endif
  public static extern IntPtr Colors_LightSteelBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_LightYellow")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_LightYellow")]
  #endif
  public static extern IntPtr Colors_LightYellow();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Lime")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Lime")]
  #endif
  public static extern IntPtr Colors_Lime();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_LimeGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_LimeGreen")]
  #endif
  public static extern IntPtr Colors_LimeGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Linen")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Linen")]
  #endif
  public static extern IntPtr Colors_Linen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Magenta")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Magenta")]
  #endif
  public static extern IntPtr Colors_Magenta();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Maroon")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Maroon")]
  #endif
  public static extern IntPtr Colors_Maroon();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_MediumAquamarine")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_MediumAquamarine")]
  #endif
  public static extern IntPtr Colors_MediumAquamarine();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_MediumBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_MediumBlue")]
  #endif
  public static extern IntPtr Colors_MediumBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_MediumOrchid")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_MediumOrchid")]
  #endif
  public static extern IntPtr Colors_MediumOrchid();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_MediumPurple")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_MediumPurple")]
  #endif
  public static extern IntPtr Colors_MediumPurple();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_MediumSeaGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_MediumSeaGreen")]
  #endif
  public static extern IntPtr Colors_MediumSeaGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_MediumSlateBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_MediumSlateBlue")]
  #endif
  public static extern IntPtr Colors_MediumSlateBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_MediumSpringGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_MediumSpringGreen")]
  #endif
  public static extern IntPtr Colors_MediumSpringGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_MediumTurquoise")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_MediumTurquoise")]
  #endif
  public static extern IntPtr Colors_MediumTurquoise();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_MediumVioletRed")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_MediumVioletRed")]
  #endif
  public static extern IntPtr Colors_MediumVioletRed();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_MidnightBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_MidnightBlue")]
  #endif
  public static extern IntPtr Colors_MidnightBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_MintCream")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_MintCream")]
  #endif
  public static extern IntPtr Colors_MintCream();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_MistyRose")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_MistyRose")]
  #endif
  public static extern IntPtr Colors_MistyRose();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Moccasin")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Moccasin")]
  #endif
  public static extern IntPtr Colors_Moccasin();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_NavajoWhite")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_NavajoWhite")]
  #endif
  public static extern IntPtr Colors_NavajoWhite();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Navy")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Navy")]
  #endif
  public static extern IntPtr Colors_Navy();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_OldLace")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_OldLace")]
  #endif
  public static extern IntPtr Colors_OldLace();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Olive")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Olive")]
  #endif
  public static extern IntPtr Colors_Olive();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_OliveDrab")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_OliveDrab")]
  #endif
  public static extern IntPtr Colors_OliveDrab();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Orange")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Orange")]
  #endif
  public static extern IntPtr Colors_Orange();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_OrangeRed")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_OrangeRed")]
  #endif
  public static extern IntPtr Colors_OrangeRed();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Orchid")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Orchid")]
  #endif
  public static extern IntPtr Colors_Orchid();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_PaleGoldenrod")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_PaleGoldenrod")]
  #endif
  public static extern IntPtr Colors_PaleGoldenrod();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_PaleGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_PaleGreen")]
  #endif
  public static extern IntPtr Colors_PaleGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_PaleTurquoise")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_PaleTurquoise")]
  #endif
  public static extern IntPtr Colors_PaleTurquoise();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_PaleVioletRed")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_PaleVioletRed")]
  #endif
  public static extern IntPtr Colors_PaleVioletRed();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_PapayaWhip")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_PapayaWhip")]
  #endif
  public static extern IntPtr Colors_PapayaWhip();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_PeachPuff")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_PeachPuff")]
  #endif
  public static extern IntPtr Colors_PeachPuff();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Peru")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Peru")]
  #endif
  public static extern IntPtr Colors_Peru();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Pink")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Pink")]
  #endif
  public static extern IntPtr Colors_Pink();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Plum")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Plum")]
  #endif
  public static extern IntPtr Colors_Plum();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_PowderBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_PowderBlue")]
  #endif
  public static extern IntPtr Colors_PowderBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Purple")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Purple")]
  #endif
  public static extern IntPtr Colors_Purple();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Red")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Red")]
  #endif
  public static extern IntPtr Colors_Red();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_RosyBrown")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_RosyBrown")]
  #endif
  public static extern IntPtr Colors_RosyBrown();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_RoyalBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_RoyalBlue")]
  #endif
  public static extern IntPtr Colors_RoyalBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_SaddleBrown")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_SaddleBrown")]
  #endif
  public static extern IntPtr Colors_SaddleBrown();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Salmon")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Salmon")]
  #endif
  public static extern IntPtr Colors_Salmon();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_SandyBrown")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_SandyBrown")]
  #endif
  public static extern IntPtr Colors_SandyBrown();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_SeaGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_SeaGreen")]
  #endif
  public static extern IntPtr Colors_SeaGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_SeaShell")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_SeaShell")]
  #endif
  public static extern IntPtr Colors_SeaShell();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Sienna")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Sienna")]
  #endif
  public static extern IntPtr Colors_Sienna();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Silver")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Silver")]
  #endif
  public static extern IntPtr Colors_Silver();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_SkyBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_SkyBlue")]
  #endif
  public static extern IntPtr Colors_SkyBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_SlateBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_SlateBlue")]
  #endif
  public static extern IntPtr Colors_SlateBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_SlateGray")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_SlateGray")]
  #endif
  public static extern IntPtr Colors_SlateGray();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Snow")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Snow")]
  #endif
  public static extern IntPtr Colors_Snow();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_SpringGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_SpringGreen")]
  #endif
  public static extern IntPtr Colors_SpringGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_SteelBlue")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_SteelBlue")]
  #endif
  public static extern IntPtr Colors_SteelBlue();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Tan")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Tan")]
  #endif
  public static extern IntPtr Colors_Tan();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Teal")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Teal")]
  #endif
  public static extern IntPtr Colors_Teal();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Thistle")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Thistle")]
  #endif
  public static extern IntPtr Colors_Thistle();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Tomato")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Tomato")]
  #endif
  public static extern IntPtr Colors_Tomato();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Transparent")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Transparent")]
  #endif
  public static extern IntPtr Colors_Transparent();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Turquoise")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Turquoise")]
  #endif
  public static extern IntPtr Colors_Turquoise();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Violet")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Violet")]
  #endif
  public static extern IntPtr Colors_Violet();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Wheat")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Wheat")]
  #endif
  public static extern IntPtr Colors_Wheat();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_White")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_White")]
  #endif
  public static extern IntPtr Colors_White();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_WhiteSmoke")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_WhiteSmoke")]
  #endif
  public static extern IntPtr Colors_WhiteSmoke();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_Yellow")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_Yellow")]
  #endif
  public static extern IntPtr Colors_Yellow();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Colors_YellowGreen")]
  #else
  [DllImport("Noesis", EntryPoint="Colors_YellowGreen")]
  #endif
  public static extern IntPtr Colors_YellowGreen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Colors")]
  #else
  [DllImport("Noesis", EntryPoint="new_Colors")]
  #endif
  public static extern IntPtr new_Colors();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Colors")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Colors")]
  #endif
  public static extern void delete_Colors(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ColumnDefinition")]
  #else
  [DllImport("Noesis", EntryPoint="new_ColumnDefinition")]
  #endif
  public static extern IntPtr new_ColumnDefinition();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColumnDefinition_GetWidth")]
  #else
  [DllImport("Noesis", EntryPoint="ColumnDefinition_GetWidth")]
  #endif
  public static extern IntPtr ColumnDefinition_GetWidth(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColumnDefinition_SetWidth")]
  #else
  [DllImport("Noesis", EntryPoint="ColumnDefinition_SetWidth")]
  #endif
  public static extern void ColumnDefinition_SetWidth(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColumnDefinition_GetMinWidth")]
  #else
  [DllImport("Noesis", EntryPoint="ColumnDefinition_GetMinWidth")]
  #endif
  public static extern float ColumnDefinition_GetMinWidth(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColumnDefinition_SetMinWidth")]
  #else
  [DllImport("Noesis", EntryPoint="ColumnDefinition_SetMinWidth")]
  #endif
  public static extern void ColumnDefinition_SetMinWidth(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColumnDefinition_GetMaxWidth")]
  #else
  [DllImport("Noesis", EntryPoint="ColumnDefinition_GetMaxWidth")]
  #endif
  public static extern float ColumnDefinition_GetMaxWidth(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColumnDefinition_SetMaxWidth")]
  #else
  [DllImport("Noesis", EntryPoint="ColumnDefinition_SetMaxWidth")]
  #endif
  public static extern void ColumnDefinition_SetMaxWidth(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColumnDefinition_WidthProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ColumnDefinition_WidthProperty_set")]
  #endif
  public static extern void ColumnDefinition_WidthProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColumnDefinition_WidthProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ColumnDefinition_WidthProperty_get")]
  #endif
  public static extern IntPtr ColumnDefinition_WidthProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColumnDefinition_MinWidthProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ColumnDefinition_MinWidthProperty_set")]
  #endif
  public static extern void ColumnDefinition_MinWidthProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColumnDefinition_MinWidthProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ColumnDefinition_MinWidthProperty_get")]
  #endif
  public static extern IntPtr ColumnDefinition_MinWidthProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColumnDefinition_MaxWidthProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ColumnDefinition_MaxWidthProperty_set")]
  #endif
  public static extern void ColumnDefinition_MaxWidthProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColumnDefinition_MaxWidthProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ColumnDefinition_MaxWidthProperty_get")]
  #endif
  public static extern IntPtr ColumnDefinition_MaxWidthProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ColumnDefinition")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ColumnDefinition")]
  #endif
  public static extern void delete_ColumnDefinition(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CombinedGeometry__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_CombinedGeometry__SWIG_0")]
  #endif
  public static extern IntPtr new_CombinedGeometry__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CombinedGeometry__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_CombinedGeometry__SWIG_1")]
  #endif
  public static extern IntPtr new_CombinedGeometry__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CombinedGeometry_GetGeometry1")]
  #else
  [DllImport("Noesis", EntryPoint="CombinedGeometry_GetGeometry1")]
  #endif
  public static extern IntPtr CombinedGeometry_GetGeometry1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CombinedGeometry_SetGeometry1")]
  #else
  [DllImport("Noesis", EntryPoint="CombinedGeometry_SetGeometry1")]
  #endif
  public static extern void CombinedGeometry_SetGeometry1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CombinedGeometry_GetGeometry2")]
  #else
  [DllImport("Noesis", EntryPoint="CombinedGeometry_GetGeometry2")]
  #endif
  public static extern IntPtr CombinedGeometry_GetGeometry2(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CombinedGeometry_SetGeometry2")]
  #else
  [DllImport("Noesis", EntryPoint="CombinedGeometry_SetGeometry2")]
  #endif
  public static extern void CombinedGeometry_SetGeometry2(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CombinedGeometry_GetGeometryCombineMode")]
  #else
  [DllImport("Noesis", EntryPoint="CombinedGeometry_GetGeometryCombineMode")]
  #endif
  public static extern int CombinedGeometry_GetGeometryCombineMode(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CombinedGeometry_SetGeometryCombineMode")]
  #else
  [DllImport("Noesis", EntryPoint="CombinedGeometry_SetGeometryCombineMode")]
  #endif
  public static extern void CombinedGeometry_SetGeometryCombineMode(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CombinedGeometry_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="CombinedGeometry_CreateRenderProxy")]
  #endif
  public static extern void CombinedGeometry_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CombinedGeometry_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="CombinedGeometry_UpdateRenderProxy")]
  #endif
  public static extern void CombinedGeometry_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CombinedGeometry_Geometry1Property_set")]
  #else
  [DllImport("Noesis", EntryPoint="CombinedGeometry_Geometry1Property_set")]
  #endif
  public static extern void CombinedGeometry_Geometry1Property_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CombinedGeometry_Geometry1Property_get")]
  #else
  [DllImport("Noesis", EntryPoint="CombinedGeometry_Geometry1Property_get")]
  #endif
  public static extern IntPtr CombinedGeometry_Geometry1Property_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CombinedGeometry_Geometry2Property_set")]
  #else
  [DllImport("Noesis", EntryPoint="CombinedGeometry_Geometry2Property_set")]
  #endif
  public static extern void CombinedGeometry_Geometry2Property_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CombinedGeometry_Geometry2Property_get")]
  #else
  [DllImport("Noesis", EntryPoint="CombinedGeometry_Geometry2Property_get")]
  #endif
  public static extern IntPtr CombinedGeometry_Geometry2Property_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CombinedGeometry_GeometryCombineModeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="CombinedGeometry_GeometryCombineModeProperty_set")]
  #endif
  public static extern void CombinedGeometry_GeometryCombineModeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CombinedGeometry_GeometryCombineModeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="CombinedGeometry_GeometryCombineModeProperty_get")]
  #endif
  public static extern IntPtr CombinedGeometry_GeometryCombineModeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_CombinedGeometry")]
  #else
  [DllImport("Noesis", EntryPoint="delete_CombinedGeometry")]
  #endif
  public static extern void delete_CombinedGeometry(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ComboBox")]
  #else
  [DllImport("Noesis", EntryPoint="new_ComboBox")]
  #endif
  public static extern IntPtr new_ComboBox();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ComboBox")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ComboBox")]
  #endif
  public static extern void delete_ComboBox(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_GetIsDropDownOpen")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_GetIsDropDownOpen")]
  #endif
  public static extern bool ComboBox_GetIsDropDownOpen(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_SetIsDropDownOpen")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_SetIsDropDownOpen")]
  #endif
  public static extern void ComboBox_SetIsDropDownOpen(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_GetIsEditable")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_GetIsEditable")]
  #endif
  public static extern bool ComboBox_GetIsEditable(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_SetIsEditable")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_SetIsEditable")]
  #endif
  public static extern void ComboBox_SetIsEditable(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_GetIsReadOnly")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_GetIsReadOnly")]
  #endif
  public static extern bool ComboBox_GetIsReadOnly(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_SetIsReadOnly")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_SetIsReadOnly")]
  #endif
  public static extern void ComboBox_SetIsReadOnly(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_GetMaxDropDownHeight")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_GetMaxDropDownHeight")]
  #endif
  public static extern float ComboBox_GetMaxDropDownHeight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_SetMaxDropDownHeight")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_SetMaxDropDownHeight")]
  #endif
  public static extern void ComboBox_SetMaxDropDownHeight(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_GetSelectionBoxItem")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_GetSelectionBoxItem")]
  #endif
  public static extern IntPtr ComboBox_GetSelectionBoxItem(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_GetSelectionBoxItemTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_GetSelectionBoxItemTemplate")]
  #endif
  public static extern IntPtr ComboBox_GetSelectionBoxItemTemplate(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_GetStaysOpenOnEdit")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_GetStaysOpenOnEdit")]
  #endif
  public static extern bool ComboBox_GetStaysOpenOnEdit(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_SetStaysOpenOnEdit")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_SetStaysOpenOnEdit")]
  #endif
  public static extern void ComboBox_SetStaysOpenOnEdit(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_GetText")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_GetText")]
  #endif
  public static extern IntPtr ComboBox_GetText(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_SetText")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_SetText")]
  #endif
  public static extern void ComboBox_SetText(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_ItemClicked")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_ItemClicked")]
  #endif
  public static extern void ComboBox_ItemClicked(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_ItemEntered")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_ItemEntered")]
  #endif
  public static extern void ComboBox_ItemEntered(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_IsDropDownOpenProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_IsDropDownOpenProperty_set")]
  #endif
  public static extern void ComboBox_IsDropDownOpenProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_IsDropDownOpenProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_IsDropDownOpenProperty_get")]
  #endif
  public static extern IntPtr ComboBox_IsDropDownOpenProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_IsEditableProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_IsEditableProperty_set")]
  #endif
  public static extern void ComboBox_IsEditableProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_IsEditableProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_IsEditableProperty_get")]
  #endif
  public static extern IntPtr ComboBox_IsEditableProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_IsReadOnlyProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_IsReadOnlyProperty_set")]
  #endif
  public static extern void ComboBox_IsReadOnlyProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_IsReadOnlyProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_IsReadOnlyProperty_get")]
  #endif
  public static extern IntPtr ComboBox_IsReadOnlyProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_MaxDropDownHeightProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_MaxDropDownHeightProperty_set")]
  #endif
  public static extern void ComboBox_MaxDropDownHeightProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_MaxDropDownHeightProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_MaxDropDownHeightProperty_get")]
  #endif
  public static extern IntPtr ComboBox_MaxDropDownHeightProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_SelectionBoxItemProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_SelectionBoxItemProperty_set")]
  #endif
  public static extern void ComboBox_SelectionBoxItemProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_SelectionBoxItemProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_SelectionBoxItemProperty_get")]
  #endif
  public static extern IntPtr ComboBox_SelectionBoxItemProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_SelectionBoxItemTemplateProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_SelectionBoxItemTemplateProperty_set")]
  #endif
  public static extern void ComboBox_SelectionBoxItemTemplateProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_SelectionBoxItemTemplateProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_SelectionBoxItemTemplateProperty_get")]
  #endif
  public static extern IntPtr ComboBox_SelectionBoxItemTemplateProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_StaysOpenOnEditProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_StaysOpenOnEditProperty_set")]
  #endif
  public static extern void ComboBox_StaysOpenOnEditProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_StaysOpenOnEditProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_StaysOpenOnEditProperty_get")]
  #endif
  public static extern IntPtr ComboBox_StaysOpenOnEditProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_TextProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_TextProperty_set")]
  #endif
  public static extern void ComboBox_TextProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_TextProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_TextProperty_get")]
  #endif
  public static extern IntPtr ComboBox_TextProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ListBoxItem")]
  #else
  [DllImport("Noesis", EntryPoint="new_ListBoxItem")]
  #endif
  public static extern IntPtr new_ListBoxItem();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ListBoxItem_GetIsSelected")]
  #else
  [DllImport("Noesis", EntryPoint="ListBoxItem_GetIsSelected")]
  #endif
  public static extern bool ListBoxItem_GetIsSelected(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ListBoxItem_SetIsSelected")]
  #else
  [DllImport("Noesis", EntryPoint="ListBoxItem_SetIsSelected")]
  #endif
  public static extern void ListBoxItem_SetIsSelected(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ListBoxItem_IsSelectedProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ListBoxItem_IsSelectedProperty_set")]
  #endif
  public static extern void ListBoxItem_IsSelectedProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ListBoxItem_IsSelectedProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ListBoxItem_IsSelectedProperty_get")]
  #endif
  public static extern IntPtr ListBoxItem_IsSelectedProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ListBoxItem")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ListBoxItem")]
  #endif
  public static extern void delete_ListBoxItem(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ComboBoxItem")]
  #else
  [DllImport("Noesis", EntryPoint="new_ComboBoxItem")]
  #endif
  public static extern IntPtr new_ComboBoxItem();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBoxItem_GetIsHighlighted")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBoxItem_GetIsHighlighted")]
  #endif
  public static extern bool ComboBoxItem_GetIsHighlighted(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBoxItem_SetHighlighted")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBoxItem_SetHighlighted")]
  #endif
  public static extern void ComboBoxItem_SetHighlighted(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBoxItem_IsHighlightedProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBoxItem_IsHighlightedProperty_set")]
  #endif
  public static extern void ComboBoxItem_IsHighlightedProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBoxItem_IsHighlightedProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBoxItem_IsHighlightedProperty_get")]
  #endif
  public static extern IntPtr ComboBoxItem_IsHighlightedProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ComboBoxItem")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ComboBoxItem")]
  #endif
  public static extern void delete_ComboBoxItem(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CanExecuteRoutedEventArgs_command_set")]
  #else
  [DllImport("Noesis", EntryPoint="CanExecuteRoutedEventArgs_command_set")]
  #endif
  public static extern void CanExecuteRoutedEventArgs_command_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CanExecuteRoutedEventArgs_command_get")]
  #else
  [DllImport("Noesis", EntryPoint="CanExecuteRoutedEventArgs_command_get")]
  #endif
  public static extern IntPtr CanExecuteRoutedEventArgs_command_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CanExecuteRoutedEventArgs_parameter_set")]
  #else
  [DllImport("Noesis", EntryPoint="CanExecuteRoutedEventArgs_parameter_set")]
  #endif
  public static extern void CanExecuteRoutedEventArgs_parameter_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CanExecuteRoutedEventArgs_parameter_get")]
  #else
  [DllImport("Noesis", EntryPoint="CanExecuteRoutedEventArgs_parameter_get")]
  #endif
  public static extern IntPtr CanExecuteRoutedEventArgs_parameter_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CanExecuteRoutedEventArgs_canExecute_set")]
  #else
  [DllImport("Noesis", EntryPoint="CanExecuteRoutedEventArgs_canExecute_set")]
  #endif
  public static extern void CanExecuteRoutedEventArgs_canExecute_set(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CanExecuteRoutedEventArgs_canExecute_get")]
  #else
  [DllImport("Noesis", EntryPoint="CanExecuteRoutedEventArgs_canExecute_get")]
  #endif
  public static extern bool CanExecuteRoutedEventArgs_canExecute_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CanExecuteRoutedEventArgs_continueRouting_set")]
  #else
  [DllImport("Noesis", EntryPoint="CanExecuteRoutedEventArgs_continueRouting_set")]
  #endif
  public static extern void CanExecuteRoutedEventArgs_continueRouting_set(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CanExecuteRoutedEventArgs_continueRouting_get")]
  #else
  [DllImport("Noesis", EntryPoint="CanExecuteRoutedEventArgs_continueRouting_get")]
  #endif
  public static extern bool CanExecuteRoutedEventArgs_continueRouting_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CanExecuteRoutedEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_CanExecuteRoutedEventArgs")]
  #endif
  public static extern IntPtr new_CanExecuteRoutedEventArgs(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_CanExecuteRoutedEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_CanExecuteRoutedEventArgs")]
  #endif
  public static extern void delete_CanExecuteRoutedEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ExecutedRoutedEventArgs_command_set")]
  #else
  [DllImport("Noesis", EntryPoint="ExecutedRoutedEventArgs_command_set")]
  #endif
  public static extern void ExecutedRoutedEventArgs_command_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ExecutedRoutedEventArgs_command_get")]
  #else
  [DllImport("Noesis", EntryPoint="ExecutedRoutedEventArgs_command_get")]
  #endif
  public static extern IntPtr ExecutedRoutedEventArgs_command_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ExecutedRoutedEventArgs_parameter_set")]
  #else
  [DllImport("Noesis", EntryPoint="ExecutedRoutedEventArgs_parameter_set")]
  #endif
  public static extern void ExecutedRoutedEventArgs_parameter_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ExecutedRoutedEventArgs_parameter_get")]
  #else
  [DllImport("Noesis", EntryPoint="ExecutedRoutedEventArgs_parameter_get")]
  #endif
  public static extern IntPtr ExecutedRoutedEventArgs_parameter_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ExecutedRoutedEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_ExecutedRoutedEventArgs")]
  #endif
  public static extern IntPtr new_ExecutedRoutedEventArgs(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ExecutedRoutedEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ExecutedRoutedEventArgs")]
  #endif
  public static extern void delete_ExecutedRoutedEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandManager_PreviewCanExecuteEvent_set")]
  #else
  [DllImport("Noesis", EntryPoint="CommandManager_PreviewCanExecuteEvent_set")]
  #endif
  public static extern void CommandManager_PreviewCanExecuteEvent_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandManager_PreviewCanExecuteEvent_get")]
  #else
  [DllImport("Noesis", EntryPoint="CommandManager_PreviewCanExecuteEvent_get")]
  #endif
  public static extern IntPtr CommandManager_PreviewCanExecuteEvent_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandManager_CanExecuteEvent_set")]
  #else
  [DllImport("Noesis", EntryPoint="CommandManager_CanExecuteEvent_set")]
  #endif
  public static extern void CommandManager_CanExecuteEvent_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandManager_CanExecuteEvent_get")]
  #else
  [DllImport("Noesis", EntryPoint="CommandManager_CanExecuteEvent_get")]
  #endif
  public static extern IntPtr CommandManager_CanExecuteEvent_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandManager_PreviewExecutedEvent_set")]
  #else
  [DllImport("Noesis", EntryPoint="CommandManager_PreviewExecutedEvent_set")]
  #endif
  public static extern void CommandManager_PreviewExecutedEvent_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandManager_PreviewExecutedEvent_get")]
  #else
  [DllImport("Noesis", EntryPoint="CommandManager_PreviewExecutedEvent_get")]
  #endif
  public static extern IntPtr CommandManager_PreviewExecutedEvent_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandManager_ExecutedEvent_set")]
  #else
  [DllImport("Noesis", EntryPoint="CommandManager_ExecutedEvent_set")]
  #endif
  public static extern void CommandManager_ExecutedEvent_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandManager_ExecutedEvent_get")]
  #else
  [DllImport("Noesis", EntryPoint="CommandManager_ExecutedEvent_get")]
  #endif
  public static extern IntPtr CommandManager_ExecutedEvent_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandManager_ProcessKeyboardInput")]
  #else
  [DllImport("Noesis", EntryPoint="CommandManager_ProcessKeyboardInput")]
  #endif
  public static extern void CommandManager_ProcessKeyboardInput(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CommandManager")]
  #else
  [DllImport("Noesis", EntryPoint="new_CommandManager")]
  #endif
  public static extern IntPtr new_CommandManager();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_CommandManager")]
  #else
  [DllImport("Noesis", EntryPoint="delete_CommandManager")]
  #endif
  public static extern void delete_CommandManager(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CommandBinding__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_CommandBinding__SWIG_0")]
  #endif
  public static extern IntPtr new_CommandBinding__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CommandBinding__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_CommandBinding__SWIG_1")]
  #endif
  public static extern IntPtr new_CommandBinding__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CommandBinding__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_CommandBinding__SWIG_2")]
  #endif
  public static extern IntPtr new_CommandBinding__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CommandBinding__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="new_CommandBinding__SWIG_3")]
  #endif
  public static extern IntPtr new_CommandBinding__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CommandBinding__SWIG_4")]
  #else
  [DllImport("Noesis", EntryPoint="new_CommandBinding__SWIG_4")]
  #endif
  public static extern IntPtr new_CommandBinding__SWIG_4(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_CommandBinding")]
  #else
  [DllImport("Noesis", EntryPoint="delete_CommandBinding")]
  #endif
  public static extern void delete_CommandBinding(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandBinding_GetCommand")]
  #else
  [DllImport("Noesis", EntryPoint="CommandBinding_GetCommand")]
  #endif
  public static extern IntPtr CommandBinding_GetCommand(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandBinding_SetCommand")]
  #else
  [DllImport("Noesis", EntryPoint="CommandBinding_SetCommand")]
  #endif
  public static extern void CommandBinding_SetCommand(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandBinding_PreviewCanExecute")]
  #else
  [DllImport("Noesis", EntryPoint="CommandBinding_PreviewCanExecute")]
  #endif
  public static extern IntPtr CommandBinding_PreviewCanExecute(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandBinding_CanExecute")]
  #else
  [DllImport("Noesis", EntryPoint="CommandBinding_CanExecute")]
  #endif
  public static extern IntPtr CommandBinding_CanExecute(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandBinding_PreviewExecuted")]
  #else
  [DllImport("Noesis", EntryPoint="CommandBinding_PreviewExecuted")]
  #endif
  public static extern IntPtr CommandBinding_PreviewExecuted(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandBinding_Executed")]
  #else
  [DllImport("Noesis", EntryPoint="CommandBinding_Executed")]
  #endif
  public static extern IntPtr CommandBinding_Executed(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandBinding_RaisePreviewCanExecute")]
  #else
  [DllImport("Noesis", EntryPoint="CommandBinding_RaisePreviewCanExecute")]
  #endif
  public static extern void CommandBinding_RaisePreviewCanExecute(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandBinding_RaiseCanExecute")]
  #else
  [DllImport("Noesis", EntryPoint="CommandBinding_RaiseCanExecute")]
  #endif
  public static extern void CommandBinding_RaiseCanExecute(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandBinding_RaisePreviewExecuted")]
  #else
  [DllImport("Noesis", EntryPoint="CommandBinding_RaisePreviewExecuted")]
  #endif
  public static extern void CommandBinding_RaisePreviewExecuted(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandBinding_RaiseExecuted")]
  #else
  [DllImport("Noesis", EntryPoint="CommandBinding_RaiseExecuted")]
  #endif
  public static extern void CommandBinding_RaiseExecuted(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CommandData")]
  #else
  [DllImport("Noesis", EntryPoint="new_CommandData")]
  #endif
  public static extern IntPtr new_CommandData(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_CommandData")]
  #else
  [DllImport("Noesis", EntryPoint="delete_CommandData")]
  #endif
  public static extern void delete_CommandData(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandData_FindCommand")]
  #else
  [DllImport("Noesis", EntryPoint="CommandData_FindCommand")]
  #endif
  public static extern IntPtr CommandData_FindCommand(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandData_EnumCommands")]
  #else
  [DllImport("Noesis", EntryPoint="CommandData_EnumCommands")]
  #endif
  public static extern IntPtr CommandData_EnumCommands(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandData_RegisterCommandHandler__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="CommandData_RegisterCommandHandler__SWIG_0")]
  #endif
  public static extern void CommandData_RegisterCommandHandler__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandData_RegisterCommandHandler__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="CommandData_RegisterCommandHandler__SWIG_1")]
  #endif
  public static extern void CommandData_RegisterCommandHandler__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandData_RegisterCommandHandler__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="CommandData_RegisterCommandHandler__SWIG_2")]
  #endif
  public static extern void CommandData_RegisterCommandHandler__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandData_RegisterCommandHandler__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="CommandData_RegisterCommandHandler__SWIG_3")]
  #endif
  public static extern void CommandData_RegisterCommandHandler__SWIG_3(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandData_RegisterCommandHandler__SWIG_4")]
  #else
  [DllImport("Noesis", EntryPoint="CommandData_RegisterCommandHandler__SWIG_4")]
  #endif
  public static extern void CommandData_RegisterCommandHandler__SWIG_4(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandData_RegisterCommandHandler__SWIG_5")]
  #else
  [DllImport("Noesis", EntryPoint="CommandData_RegisterCommandHandler__SWIG_5")]
  #endif
  public static extern void CommandData_RegisterCommandHandler__SWIG_5(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandData_GetCommandBindings")]
  #else
  [DllImport("Noesis", EntryPoint="CommandData_GetCommandBindings")]
  #endif
  public static extern IntPtr CommandData_GetCommandBindings(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandData_GetInputBindings")]
  #else
  [DllImport("Noesis", EntryPoint="CommandData_GetInputBindings")]
  #endif
  public static extern IntPtr CommandData_GetInputBindings(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_UITransform")]
  #else
  [DllImport("Noesis", EntryPoint="delete_UITransform")]
  #endif
  public static extern void delete_UITransform(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UITransform_GetIdentity")]
  #else
  [DllImport("Noesis", EntryPoint="UITransform_GetIdentity")]
  #endif
  public static extern IntPtr UITransform_GetIdentity();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UITransform_GetTransform")]
  #else
  [DllImport("Noesis", EntryPoint="UITransform_GetTransform")]
  #endif
  public static extern IntPtr UITransform_GetTransform(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CompositeTransform")]
  #else
  [DllImport("Noesis", EntryPoint="new_CompositeTransform")]
  #endif
  public static extern IntPtr new_CompositeTransform();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_GetCenterX")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_GetCenterX")]
  #endif
  public static extern float CompositeTransform_GetCenterX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_SetCenterX")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_SetCenterX")]
  #endif
  public static extern void CompositeTransform_SetCenterX(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_GetCenterY")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_GetCenterY")]
  #endif
  public static extern float CompositeTransform_GetCenterY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_SetCenterY")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_SetCenterY")]
  #endif
  public static extern void CompositeTransform_SetCenterY(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_GetRotation")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_GetRotation")]
  #endif
  public static extern float CompositeTransform_GetRotation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_SetRotation")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_SetRotation")]
  #endif
  public static extern void CompositeTransform_SetRotation(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_GetScaleX")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_GetScaleX")]
  #endif
  public static extern float CompositeTransform_GetScaleX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_SetScaleX")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_SetScaleX")]
  #endif
  public static extern void CompositeTransform_SetScaleX(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_GetScaleY")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_GetScaleY")]
  #endif
  public static extern float CompositeTransform_GetScaleY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_SetScaleY")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_SetScaleY")]
  #endif
  public static extern void CompositeTransform_SetScaleY(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_GetSkewX")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_GetSkewX")]
  #endif
  public static extern float CompositeTransform_GetSkewX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_SetSkewX")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_SetSkewX")]
  #endif
  public static extern void CompositeTransform_SetSkewX(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_GetSkewY")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_GetSkewY")]
  #endif
  public static extern float CompositeTransform_GetSkewY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_SetSkewY")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_SetSkewY")]
  #endif
  public static extern void CompositeTransform_SetSkewY(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_GetTranslateX")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_GetTranslateX")]
  #endif
  public static extern float CompositeTransform_GetTranslateX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_SetTranslateX")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_SetTranslateX")]
  #endif
  public static extern void CompositeTransform_SetTranslateX(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_GetTranslateY")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_GetTranslateY")]
  #endif
  public static extern float CompositeTransform_GetTranslateY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_SetTranslateY")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_SetTranslateY")]
  #endif
  public static extern void CompositeTransform_SetTranslateY(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_GetTransform")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_GetTransform")]
  #endif
  public static extern IntPtr CompositeTransform_GetTransform(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_CreateRenderProxy")]
  #endif
  public static extern void CompositeTransform_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_UpdateRenderProxy")]
  #endif
  public static extern void CompositeTransform_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_UnregisterRenderer")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_UnregisterRenderer")]
  #endif
  public static extern void CompositeTransform_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_CenterXProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_CenterXProperty_set")]
  #endif
  public static extern void CompositeTransform_CenterXProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_CenterXProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_CenterXProperty_get")]
  #endif
  public static extern IntPtr CompositeTransform_CenterXProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_CenterYProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_CenterYProperty_set")]
  #endif
  public static extern void CompositeTransform_CenterYProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_CenterYProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_CenterYProperty_get")]
  #endif
  public static extern IntPtr CompositeTransform_CenterYProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_RotationProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_RotationProperty_set")]
  #endif
  public static extern void CompositeTransform_RotationProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_RotationProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_RotationProperty_get")]
  #endif
  public static extern IntPtr CompositeTransform_RotationProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_ScaleXProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_ScaleXProperty_set")]
  #endif
  public static extern void CompositeTransform_ScaleXProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_ScaleXProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_ScaleXProperty_get")]
  #endif
  public static extern IntPtr CompositeTransform_ScaleXProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_ScaleYProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_ScaleYProperty_set")]
  #endif
  public static extern void CompositeTransform_ScaleYProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_ScaleYProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_ScaleYProperty_get")]
  #endif
  public static extern IntPtr CompositeTransform_ScaleYProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_SkewXProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_SkewXProperty_set")]
  #endif
  public static extern void CompositeTransform_SkewXProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_SkewXProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_SkewXProperty_get")]
  #endif
  public static extern IntPtr CompositeTransform_SkewXProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_SkewYProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_SkewYProperty_set")]
  #endif
  public static extern void CompositeTransform_SkewYProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_SkewYProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_SkewYProperty_get")]
  #endif
  public static extern IntPtr CompositeTransform_SkewYProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_TranslateXProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_TranslateXProperty_set")]
  #endif
  public static extern void CompositeTransform_TranslateXProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_TranslateXProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_TranslateXProperty_get")]
  #endif
  public static extern IntPtr CompositeTransform_TranslateXProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_TranslateYProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_TranslateYProperty_set")]
  #endif
  public static extern void CompositeTransform_TranslateYProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_TranslateYProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_TranslateYProperty_get")]
  #endif
  public static extern IntPtr CompositeTransform_TranslateYProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_CompositeTransform")]
  #else
  [DllImport("Noesis", EntryPoint="delete_CompositeTransform")]
  #endif
  public static extern void delete_CompositeTransform(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Condition")]
  #else
  [DllImport("Noesis", EntryPoint="new_Condition")]
  #endif
  public static extern IntPtr new_Condition();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Condition_GetProperty")]
  #else
  [DllImport("Noesis", EntryPoint="Condition_GetProperty")]
  #endif
  public static extern IntPtr Condition_GetProperty(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Condition_SetProperty")]
  #else
  [DllImport("Noesis", EntryPoint="Condition_SetProperty")]
  #endif
  public static extern void Condition_SetProperty(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Condition_GetSourceName")]
  #else
  [DllImport("Noesis", EntryPoint="Condition_GetSourceName")]
  #endif
  public static extern IntPtr Condition_GetSourceName(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Condition_SetSourceName")]
  #else
  [DllImport("Noesis", EntryPoint="Condition_SetSourceName")]
  #endif
  public static extern void Condition_SetSourceName(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Condition_GetValue")]
  #else
  [DllImport("Noesis", EntryPoint="Condition_GetValue")]
  #endif
  public static extern IntPtr Condition_GetValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Condition_SetValue")]
  #else
  [DllImport("Noesis", EntryPoint="Condition_SetValue")]
  #endif
  public static extern void Condition_SetValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Condition_IsInitialized")]
  #else
  [DllImport("Noesis", EntryPoint="Condition_IsInitialized")]
  #endif
  public static extern bool Condition_IsInitialized(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Condition_Init")]
  #else
  [DllImport("Noesis", EntryPoint="Condition_Init")]
  #endif
  public static extern void Condition_Init(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Condition")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Condition")]
  #endif
  public static extern void delete_Condition(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ContentPresenter")]
  #else
  [DllImport("Noesis", EntryPoint="new_ContentPresenter")]
  #endif
  public static extern IntPtr new_ContentPresenter();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ContentPresenter")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ContentPresenter")]
  #endif
  public static extern void delete_ContentPresenter(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentPresenter_GetContent")]
  #else
  [DllImport("Noesis", EntryPoint="ContentPresenter_GetContent")]
  #endif
  public static extern IntPtr ContentPresenter_GetContent(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentPresenter_SetContent__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="ContentPresenter_SetContent__SWIG_0")]
  #endif
  public static extern void ContentPresenter_SetContent__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentPresenter_SetContent__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="ContentPresenter_SetContent__SWIG_1")]
  #endif
  public static extern void ContentPresenter_SetContent__SWIG_1(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentPresenter_GetContentSource")]
  #else
  [DllImport("Noesis", EntryPoint="ContentPresenter_GetContentSource")]
  #endif
  public static extern IntPtr ContentPresenter_GetContentSource(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentPresenter_SetContentSource")]
  #else
  [DllImport("Noesis", EntryPoint="ContentPresenter_SetContentSource")]
  #endif
  public static extern void ContentPresenter_SetContentSource(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentPresenter_GetContentTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="ContentPresenter_GetContentTemplate")]
  #endif
  public static extern IntPtr ContentPresenter_GetContentTemplate(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentPresenter_SetContentTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="ContentPresenter_SetContentTemplate")]
  #endif
  public static extern void ContentPresenter_SetContentTemplate(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentPresenter_GetContentTemplateSelector")]
  #else
  [DllImport("Noesis", EntryPoint="ContentPresenter_GetContentTemplateSelector")]
  #endif
  public static extern IntPtr ContentPresenter_GetContentTemplateSelector(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentPresenter_SetContentTemplateSelector")]
  #else
  [DllImport("Noesis", EntryPoint="ContentPresenter_SetContentTemplateSelector")]
  #endif
  public static extern void ContentPresenter_SetContentTemplateSelector(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentPresenter_GetRecognizesAccessKey")]
  #else
  [DllImport("Noesis", EntryPoint="ContentPresenter_GetRecognizesAccessKey")]
  #endif
  public static extern bool ContentPresenter_GetRecognizesAccessKey(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentPresenter_SetRecognizesAccessKey")]
  #else
  [DllImport("Noesis", EntryPoint="ContentPresenter_SetRecognizesAccessKey")]
  #endif
  public static extern void ContentPresenter_SetRecognizesAccessKey(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentPresenter_ContentProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContentPresenter_ContentProperty_set")]
  #endif
  public static extern void ContentPresenter_ContentProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentPresenter_ContentProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContentPresenter_ContentProperty_get")]
  #endif
  public static extern IntPtr ContentPresenter_ContentProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentPresenter_ContentSourceProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContentPresenter_ContentSourceProperty_set")]
  #endif
  public static extern void ContentPresenter_ContentSourceProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentPresenter_ContentSourceProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContentPresenter_ContentSourceProperty_get")]
  #endif
  public static extern IntPtr ContentPresenter_ContentSourceProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentPresenter_ContentTemplateProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContentPresenter_ContentTemplateProperty_set")]
  #endif
  public static extern void ContentPresenter_ContentTemplateProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentPresenter_ContentTemplateProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContentPresenter_ContentTemplateProperty_get")]
  #endif
  public static extern IntPtr ContentPresenter_ContentTemplateProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentPresenter_ContentTemplateSelectorProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContentPresenter_ContentTemplateSelectorProperty_set")]
  #endif
  public static extern void ContentPresenter_ContentTemplateSelectorProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentPresenter_ContentTemplateSelectorProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContentPresenter_ContentTemplateSelectorProperty_get")]
  #endif
  public static extern IntPtr ContentPresenter_ContentTemplateSelectorProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentPresenter_RecognizesAccessKeyProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContentPresenter_RecognizesAccessKeyProperty_set")]
  #endif
  public static extern void ContentPresenter_RecognizesAccessKeyProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentPresenter_RecognizesAccessKeyProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContentPresenter_RecognizesAccessKeyProperty_get")]
  #endif
  public static extern IntPtr ContentPresenter_RecognizesAccessKeyProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ContextMenu")]
  #else
  [DllImport("Noesis", EntryPoint="new_ContextMenu")]
  #endif
  public static extern IntPtr new_ContextMenu();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_GetCustomPopupPlacementCallback")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_GetCustomPopupPlacementCallback")]
  #endif
  public static extern IntPtr ContextMenu_GetCustomPopupPlacementCallback(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_SetCustomPopupPlacementCallback")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_SetCustomPopupPlacementCallback")]
  #endif
  public static extern void ContextMenu_SetCustomPopupPlacementCallback(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_GetHasDropShadow")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_GetHasDropShadow")]
  #endif
  public static extern bool ContextMenu_GetHasDropShadow(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_SetHasDropShadow")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_SetHasDropShadow")]
  #endif
  public static extern void ContextMenu_SetHasDropShadow(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_GetHorizontalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_GetHorizontalOffset")]
  #endif
  public static extern float ContextMenu_GetHorizontalOffset(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_SetHorizontalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_SetHorizontalOffset")]
  #endif
  public static extern void ContextMenu_SetHorizontalOffset(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_GetIsOpen")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_GetIsOpen")]
  #endif
  public static extern bool ContextMenu_GetIsOpen(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_SetIsOpen")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_SetIsOpen")]
  #endif
  public static extern void ContextMenu_SetIsOpen(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_GetPlacement")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_GetPlacement")]
  #endif
  public static extern int ContextMenu_GetPlacement(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_SetPlacement")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_SetPlacement")]
  #endif
  public static extern void ContextMenu_SetPlacement(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_GetPlacementRectangle")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_GetPlacementRectangle")]
  #endif
  public static extern IntPtr ContextMenu_GetPlacementRectangle(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_SetPlacementRectangle")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_SetPlacementRectangle")]
  #endif
  public static extern void ContextMenu_SetPlacementRectangle(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_GetPlacementTarget")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_GetPlacementTarget")]
  #endif
  public static extern IntPtr ContextMenu_GetPlacementTarget(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_SetPlacementTarget")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_SetPlacementTarget")]
  #endif
  public static extern void ContextMenu_SetPlacementTarget(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_GetStaysOpen")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_GetStaysOpen")]
  #endif
  public static extern bool ContextMenu_GetStaysOpen(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_SetStaysOpen")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_SetStaysOpen")]
  #endif
  public static extern void ContextMenu_SetStaysOpen(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_GetVerticalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_GetVerticalOffset")]
  #endif
  public static extern float ContextMenu_GetVerticalOffset(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_SetVerticalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_SetVerticalOffset")]
  #endif
  public static extern void ContextMenu_SetVerticalOffset(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_GetPopup")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_GetPopup")]
  #endif
  public static extern IntPtr ContextMenu_GetPopup(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_CustomPopupPlacementCallbackProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_CustomPopupPlacementCallbackProperty_set")]
  #endif
  public static extern void ContextMenu_CustomPopupPlacementCallbackProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_CustomPopupPlacementCallbackProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_CustomPopupPlacementCallbackProperty_get")]
  #endif
  public static extern IntPtr ContextMenu_CustomPopupPlacementCallbackProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_HasDropShadowProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_HasDropShadowProperty_set")]
  #endif
  public static extern void ContextMenu_HasDropShadowProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_HasDropShadowProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_HasDropShadowProperty_get")]
  #endif
  public static extern IntPtr ContextMenu_HasDropShadowProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_HorizontalOffsetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_HorizontalOffsetProperty_set")]
  #endif
  public static extern void ContextMenu_HorizontalOffsetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_HorizontalOffsetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_HorizontalOffsetProperty_get")]
  #endif
  public static extern IntPtr ContextMenu_HorizontalOffsetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_IsOpenProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_IsOpenProperty_set")]
  #endif
  public static extern void ContextMenu_IsOpenProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_IsOpenProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_IsOpenProperty_get")]
  #endif
  public static extern IntPtr ContextMenu_IsOpenProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_PlacementProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_PlacementProperty_set")]
  #endif
  public static extern void ContextMenu_PlacementProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_PlacementProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_PlacementProperty_get")]
  #endif
  public static extern IntPtr ContextMenu_PlacementProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_PlacementRectangleProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_PlacementRectangleProperty_set")]
  #endif
  public static extern void ContextMenu_PlacementRectangleProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_PlacementRectangleProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_PlacementRectangleProperty_get")]
  #endif
  public static extern IntPtr ContextMenu_PlacementRectangleProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_PlacementTargetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_PlacementTargetProperty_set")]
  #endif
  public static extern void ContextMenu_PlacementTargetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_PlacementTargetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_PlacementTargetProperty_get")]
  #endif
  public static extern IntPtr ContextMenu_PlacementTargetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_StaysOpenProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_StaysOpenProperty_set")]
  #endif
  public static extern void ContextMenu_StaysOpenProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_StaysOpenProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_StaysOpenProperty_get")]
  #endif
  public static extern IntPtr ContextMenu_StaysOpenProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_VerticalOffsetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_VerticalOffsetProperty_set")]
  #endif
  public static extern void ContextMenu_VerticalOffsetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_VerticalOffsetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_VerticalOffsetProperty_get")]
  #endif
  public static extern IntPtr ContextMenu_VerticalOffsetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ContextMenu")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ContextMenu")]
  #endif
  public static extern void delete_ContextMenu(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_ContextMenuProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_ContextMenuProperty_set")]
  #endif
  public static extern void ContextMenuService_ContextMenuProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_ContextMenuProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_ContextMenuProperty_get")]
  #endif
  public static extern IntPtr ContextMenuService_ContextMenuProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_HasDropShadowProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_HasDropShadowProperty_set")]
  #endif
  public static extern void ContextMenuService_HasDropShadowProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_HasDropShadowProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_HasDropShadowProperty_get")]
  #endif
  public static extern IntPtr ContextMenuService_HasDropShadowProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_HorizontalOffsetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_HorizontalOffsetProperty_set")]
  #endif
  public static extern void ContextMenuService_HorizontalOffsetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_HorizontalOffsetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_HorizontalOffsetProperty_get")]
  #endif
  public static extern IntPtr ContextMenuService_HorizontalOffsetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_IsEnabledProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_IsEnabledProperty_set")]
  #endif
  public static extern void ContextMenuService_IsEnabledProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_IsEnabledProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_IsEnabledProperty_get")]
  #endif
  public static extern IntPtr ContextMenuService_IsEnabledProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_PlacementProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_PlacementProperty_set")]
  #endif
  public static extern void ContextMenuService_PlacementProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_PlacementProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_PlacementProperty_get")]
  #endif
  public static extern IntPtr ContextMenuService_PlacementProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_PlacementRectangleProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_PlacementRectangleProperty_set")]
  #endif
  public static extern void ContextMenuService_PlacementRectangleProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_PlacementRectangleProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_PlacementRectangleProperty_get")]
  #endif
  public static extern IntPtr ContextMenuService_PlacementRectangleProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_PlacementTargetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_PlacementTargetProperty_set")]
  #endif
  public static extern void ContextMenuService_PlacementTargetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_PlacementTargetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_PlacementTargetProperty_get")]
  #endif
  public static extern IntPtr ContextMenuService_PlacementTargetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_ShowOnDisabledProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_ShowOnDisabledProperty_set")]
  #endif
  public static extern void ContextMenuService_ShowOnDisabledProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_ShowOnDisabledProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_ShowOnDisabledProperty_get")]
  #endif
  public static extern IntPtr ContextMenuService_ShowOnDisabledProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_VerticalOffsetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_VerticalOffsetProperty_set")]
  #endif
  public static extern void ContextMenuService_VerticalOffsetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_VerticalOffsetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_VerticalOffsetProperty_get")]
  #endif
  public static extern IntPtr ContextMenuService_VerticalOffsetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_ContextMenuClosingEvent_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_ContextMenuClosingEvent_set")]
  #endif
  public static extern void ContextMenuService_ContextMenuClosingEvent_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_ContextMenuClosingEvent_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_ContextMenuClosingEvent_get")]
  #endif
  public static extern IntPtr ContextMenuService_ContextMenuClosingEvent_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_ContextMenuOpeningEvent_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_ContextMenuOpeningEvent_set")]
  #endif
  public static extern void ContextMenuService_ContextMenuOpeningEvent_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_ContextMenuOpeningEvent_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_ContextMenuOpeningEvent_get")]
  #endif
  public static extern IntPtr ContextMenuService_ContextMenuOpeningEvent_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_GetContextMenu")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_GetContextMenu")]
  #endif
  public static extern IntPtr ContextMenuService_GetContextMenu(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_SetContextMenu")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_SetContextMenu")]
  #endif
  public static extern void ContextMenuService_SetContextMenu(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_GetHasDropShadow")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_GetHasDropShadow")]
  #endif
  public static extern bool ContextMenuService_GetHasDropShadow(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_SetHasDropShadow")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_SetHasDropShadow")]
  #endif
  public static extern void ContextMenuService_SetHasDropShadow(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_GetHorizontalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_GetHorizontalOffset")]
  #endif
  public static extern float ContextMenuService_GetHorizontalOffset(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_SetHorizontalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_SetHorizontalOffset")]
  #endif
  public static extern void ContextMenuService_SetHorizontalOffset(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_GetIsEnabled")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_GetIsEnabled")]
  #endif
  public static extern bool ContextMenuService_GetIsEnabled(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_SetIsEnabled")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_SetIsEnabled")]
  #endif
  public static extern void ContextMenuService_SetIsEnabled(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_GetPlacement")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_GetPlacement")]
  #endif
  public static extern int ContextMenuService_GetPlacement(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_SetPlacement")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_SetPlacement")]
  #endif
  public static extern void ContextMenuService_SetPlacement(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_GetPlacementRectangle")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_GetPlacementRectangle")]
  #endif
  public static extern IntPtr ContextMenuService_GetPlacementRectangle(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_SetPlacementRectangle")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_SetPlacementRectangle")]
  #endif
  public static extern void ContextMenuService_SetPlacementRectangle(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_GetPlacementTarget")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_GetPlacementTarget")]
  #endif
  public static extern IntPtr ContextMenuService_GetPlacementTarget(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_SetPlacementTarget")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_SetPlacementTarget")]
  #endif
  public static extern void ContextMenuService_SetPlacementTarget(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_GetShowOnDisabled")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_GetShowOnDisabled")]
  #endif
  public static extern bool ContextMenuService_GetShowOnDisabled(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_SetShowOnDisabled")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_SetShowOnDisabled")]
  #endif
  public static extern void ContextMenuService_SetShowOnDisabled(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_GetVerticalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_GetVerticalOffset")]
  #endif
  public static extern float ContextMenuService_GetVerticalOffset(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuService_SetVerticalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuService_SetVerticalOffset")]
  #endif
  public static extern void ContextMenuService_SetVerticalOffset(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ContextMenuService")]
  #else
  [DllImport("Noesis", EntryPoint="new_ContextMenuService")]
  #endif
  public static extern IntPtr new_ContextMenuService();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ContextMenuService")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ContextMenuService")]
  #endif
  public static extern void delete_ContextMenuService(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DashStyle")]
  #else
  [DllImport("Noesis", EntryPoint="new_DashStyle")]
  #endif
  public static extern IntPtr new_DashStyle();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DashStyle_GetDashes")]
  #else
  [DllImport("Noesis", EntryPoint="DashStyle_GetDashes")]
  #endif
  public static extern IntPtr DashStyle_GetDashes(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DashStyle_SetDashes")]
  #else
  [DllImport("Noesis", EntryPoint="DashStyle_SetDashes")]
  #endif
  public static extern void DashStyle_SetDashes(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DashStyle_GetOffset")]
  #else
  [DllImport("Noesis", EntryPoint="DashStyle_GetOffset")]
  #endif
  public static extern float DashStyle_GetOffset(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DashStyle_SetOffset")]
  #else
  [DllImport("Noesis", EntryPoint="DashStyle_SetOffset")]
  #endif
  public static extern void DashStyle_SetOffset(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DashStyle_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="DashStyle_CreateRenderProxy")]
  #endif
  public static extern void DashStyle_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DashStyle_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="DashStyle_UpdateRenderProxy")]
  #endif
  public static extern void DashStyle_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DashStyle_UnregisterRenderer")]
  #else
  [DllImport("Noesis", EntryPoint="DashStyle_UnregisterRenderer")]
  #endif
  public static extern void DashStyle_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DashStyle_DashesProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="DashStyle_DashesProperty_set")]
  #endif
  public static extern void DashStyle_DashesProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DashStyle_DashesProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="DashStyle_DashesProperty_get")]
  #endif
  public static extern IntPtr DashStyle_DashesProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DashStyle_OffsetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="DashStyle_OffsetProperty_set")]
  #endif
  public static extern void DashStyle_OffsetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DashStyle_OffsetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="DashStyle_OffsetProperty_get")]
  #endif
  public static extern IntPtr DashStyle_OffsetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DashStyle")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DashStyle")]
  #endif
  public static extern void delete_DashStyle(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DataTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="new_DataTemplate")]
  #endif
  public static extern IntPtr new_DataTemplate();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DataTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DataTemplate")]
  #endif
  public static extern void delete_DataTemplate(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DataTemplate_GetDataType")]
  #else
  [DllImport("Noesis", EntryPoint="DataTemplate_GetDataType")]
  #endif
  public static extern IntPtr DataTemplate_GetDataType(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DataTemplate_SetDataType")]
  #else
  [DllImport("Noesis", EntryPoint="DataTemplate_SetDataType")]
  #endif
  public static extern void DataTemplate_SetDataType(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DataTemplate_GetTriggers")]
  #else
  [DllImport("Noesis", EntryPoint="DataTemplate_GetTriggers")]
  #endif
  public static extern IntPtr DataTemplate_GetTriggers(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DataTemplateSelector")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DataTemplateSelector")]
  #endif
  public static extern void delete_DataTemplateSelector(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DataTemplateSelector_SelectTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="DataTemplateSelector_SelectTemplate")]
  #endif
  public static extern IntPtr DataTemplateSelector_SelectTemplate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Dialog")]
  #else
  [DllImport("Noesis", EntryPoint="new_Dialog")]
  #endif
  public static extern IntPtr new_Dialog();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Dialog")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Dialog")]
  #endif
  public static extern void delete_Dialog(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Dialog_GetChild")]
  #else
  [DllImport("Noesis", EntryPoint="Dialog_GetChild")]
  #endif
  public static extern IntPtr Dialog_GetChild(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Dialog_SetChild")]
  #else
  [DllImport("Noesis", EntryPoint="Dialog_SetChild")]
  #endif
  public static extern void Dialog_SetChild(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Dialog_GetDialogResult")]
  #else
  [DllImport("Noesis", EntryPoint="Dialog_GetDialogResult")]
  #endif
  public static extern bool Dialog_GetDialogResult(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Dialog_SetDialogResult")]
  #else
  [DllImport("Noesis", EntryPoint="Dialog_SetDialogResult")]
  #endif
  public static extern void Dialog_SetDialogResult(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Dialog_Show")]
  #else
  [DllImport("Noesis", EntryPoint="Dialog_Show")]
  #endif
  public static extern bool Dialog_Show(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Dialog_Close")]
  #else
  [DllImport("Noesis", EntryPoint="Dialog_Close")]
  #endif
  public static extern void Dialog_Close(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DictionaryMapLess")]
  #else
  [DllImport("Noesis", EntryPoint="new_DictionaryMapLess")]
  #endif
  public static extern IntPtr new_DictionaryMapLess();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DictionaryMapLess")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DictionaryMapLess")]
  #endif
  public static extern void delete_DictionaryMapLess(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DockPanel")]
  #else
  [DllImport("Noesis", EntryPoint="new_DockPanel")]
  #endif
  public static extern IntPtr new_DockPanel();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DockPanel_GetDock")]
  #else
  [DllImport("Noesis", EntryPoint="DockPanel_GetDock")]
  #endif
  public static extern int DockPanel_GetDock(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DockPanel_SetDock")]
  #else
  [DllImport("Noesis", EntryPoint="DockPanel_SetDock")]
  #endif
  public static extern void DockPanel_SetDock(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DockPanel_GetLastChildFill")]
  #else
  [DllImport("Noesis", EntryPoint="DockPanel_GetLastChildFill")]
  #endif
  public static extern bool DockPanel_GetLastChildFill(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DockPanel_SetLastChildFill")]
  #else
  [DllImport("Noesis", EntryPoint="DockPanel_SetLastChildFill")]
  #endif
  public static extern void DockPanel_SetLastChildFill(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DockPanel_DockProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="DockPanel_DockProperty_set")]
  #endif
  public static extern void DockPanel_DockProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DockPanel_DockProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="DockPanel_DockProperty_get")]
  #endif
  public static extern IntPtr DockPanel_DockProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DockPanel_LastChildFillProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="DockPanel_LastChildFillProperty_set")]
  #endif
  public static extern void DockPanel_LastChildFillProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DockPanel_LastChildFillProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="DockPanel_LastChildFillProperty_get")]
  #endif
  public static extern IntPtr DockPanel_LastChildFillProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DockPanel")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DockPanel")]
  #endif
  public static extern void delete_DockPanel(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DrawingContext")]
  #else
  [DllImport("Noesis", EntryPoint="new_DrawingContext")]
  #endif
  public static extern IntPtr new_DrawingContext();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DrawingContext")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DrawingContext")]
  #endif
  public static extern void delete_DrawingContext(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DrawingContext_GetDrawingCommands")]
  #else
  [DllImport("Noesis", EntryPoint="DrawingContext_GetDrawingCommands")]
  #endif
  public static extern IntPtr DrawingContext_GetDrawingCommands(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DrawingContext_Reset")]
  #else
  [DllImport("Noesis", EntryPoint="DrawingContext_Reset")]
  #endif
  public static extern void DrawingContext_Reset(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DrawingContext_DrawDelegate")]
  #else
  [DllImport("Noesis", EntryPoint="DrawingContext_DrawDelegate")]
  #endif
  public static extern void DrawingContext_DrawDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DrawingContext_DrawEllipse")]
  #else
  [DllImport("Noesis", EntryPoint="DrawingContext_DrawEllipse")]
  #endif
  public static extern void DrawingContext_DrawEllipse(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, float jarg5, float jarg6);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DrawingContext_DrawGeometry")]
  #else
  [DllImport("Noesis", EntryPoint="DrawingContext_DrawGeometry")]
  #endif
  public static extern void DrawingContext_DrawGeometry(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DrawingContext_DrawImage")]
  #else
  [DllImport("Noesis", EntryPoint="DrawingContext_DrawImage")]
  #endif
  public static extern void DrawingContext_DrawImage(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DrawingContext_DrawLine")]
  #else
  [DllImport("Noesis", EntryPoint="DrawingContext_DrawLine")]
  #endif
  public static extern void DrawingContext_DrawLine(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DrawingContext_DrawRectangle")]
  #else
  [DllImport("Noesis", EntryPoint="DrawingContext_DrawRectangle")]
  #endif
  public static extern void DrawingContext_DrawRectangle(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DrawingContext_DrawRoundedRectangle")]
  #else
  [DllImport("Noesis", EntryPoint="DrawingContext_DrawRoundedRectangle")]
  #endif
  public static extern void DrawingContext_DrawRoundedRectangle(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, float jarg5, float jarg6);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DrawingContext_DrawText")]
  #else
  [DllImport("Noesis", EntryPoint="DrawingContext_DrawText")]
  #endif
  public static extern void DrawingContext_DrawText(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DrawingContext_Pop")]
  #else
  [DllImport("Noesis", EntryPoint="DrawingContext_Pop")]
  #endif
  public static extern void DrawingContext_Pop(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DrawingContext_PushClip")]
  #else
  [DllImport("Noesis", EntryPoint="DrawingContext_PushClip")]
  #endif
  public static extern void DrawingContext_PushClip(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DrawingContext_PushOpacity")]
  #else
  [DllImport("Noesis", EntryPoint="DrawingContext_PushOpacity")]
  #endif
  public static extern void DrawingContext_PushOpacity(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DrawingContext_PushOpacityMask")]
  #else
  [DllImport("Noesis", EntryPoint="DrawingContext_PushOpacityMask")]
  #endif
  public static extern void DrawingContext_PushOpacityMask(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DrawingContext_PushTransform")]
  #else
  [DllImport("Noesis", EntryPoint="DrawingContext_PushTransform")]
  #endif
  public static extern void DrawingContext_PushTransform(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Effect")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Effect")]
  #endif
  public static extern void delete_Effect(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DropShadowEffect")]
  #else
  [DllImport("Noesis", EntryPoint="new_DropShadowEffect")]
  #endif
  public static extern IntPtr new_DropShadowEffect();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DropShadowEffect")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DropShadowEffect")]
  #endif
  public static extern void delete_DropShadowEffect(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_GetBlurRadius")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_GetBlurRadius")]
  #endif
  public static extern float DropShadowEffect_GetBlurRadius(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_SetBlurRadius")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_SetBlurRadius")]
  #endif
  public static extern void DropShadowEffect_SetBlurRadius(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_GetColor")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_GetColor")]
  #endif
  public static extern IntPtr DropShadowEffect_GetColor(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_SetColor")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_SetColor")]
  #endif
  public static extern void DropShadowEffect_SetColor(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_GetDirection")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_GetDirection")]
  #endif
  public static extern float DropShadowEffect_GetDirection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_SetDirection")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_SetDirection")]
  #endif
  public static extern void DropShadowEffect_SetDirection(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_GetOpacity")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_GetOpacity")]
  #endif
  public static extern float DropShadowEffect_GetOpacity(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_SetOpacity")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_SetOpacity")]
  #endif
  public static extern void DropShadowEffect_SetOpacity(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_GetRenderingBias")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_GetRenderingBias")]
  #endif
  public static extern int DropShadowEffect_GetRenderingBias(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_SetRenderingBias")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_SetRenderingBias")]
  #endif
  public static extern void DropShadowEffect_SetRenderingBias(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_GetShadowDepth")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_GetShadowDepth")]
  #endif
  public static extern float DropShadowEffect_GetShadowDepth(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_SetShadowDepth")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_SetShadowDepth")]
  #endif
  public static extern void DropShadowEffect_SetShadowDepth(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_BlurRadiusProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_BlurRadiusProperty_set")]
  #endif
  public static extern void DropShadowEffect_BlurRadiusProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_BlurRadiusProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_BlurRadiusProperty_get")]
  #endif
  public static extern IntPtr DropShadowEffect_BlurRadiusProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_ColorProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_ColorProperty_set")]
  #endif
  public static extern void DropShadowEffect_ColorProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_ColorProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_ColorProperty_get")]
  #endif
  public static extern IntPtr DropShadowEffect_ColorProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_DirectionProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_DirectionProperty_set")]
  #endif
  public static extern void DropShadowEffect_DirectionProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_DirectionProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_DirectionProperty_get")]
  #endif
  public static extern IntPtr DropShadowEffect_DirectionProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_OpacityProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_OpacityProperty_set")]
  #endif
  public static extern void DropShadowEffect_OpacityProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_OpacityProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_OpacityProperty_get")]
  #endif
  public static extern IntPtr DropShadowEffect_OpacityProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_RenderingBiasProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_RenderingBiasProperty_set")]
  #endif
  public static extern void DropShadowEffect_RenderingBiasProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_RenderingBiasProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_RenderingBiasProperty_get")]
  #endif
  public static extern IntPtr DropShadowEffect_RenderingBiasProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_ShadowDepthProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_ShadowDepthProperty_set")]
  #endif
  public static extern void DropShadowEffect_ShadowDepthProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_ShadowDepthProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_ShadowDepthProperty_get")]
  #endif
  public static extern IntPtr DropShadowEffect_ShadowDepthProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Shape")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Shape")]
  #endif
  public static extern void delete_Shape(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_GetFill")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_GetFill")]
  #endif
  public static extern IntPtr Shape_GetFill(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_SetFill")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_SetFill")]
  #endif
  public static extern void Shape_SetFill(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_GetStretch")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_GetStretch")]
  #endif
  public static extern int Shape_GetStretch(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_SetStretch")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_SetStretch")]
  #endif
  public static extern void Shape_SetStretch(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_GetStroke")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_GetStroke")]
  #endif
  public static extern IntPtr Shape_GetStroke(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_SetStroke")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_SetStroke")]
  #endif
  public static extern void Shape_SetStroke(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_GetStrokeDashArray")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_GetStrokeDashArray")]
  #endif
  public static extern IntPtr Shape_GetStrokeDashArray(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_SetStrokeDashArray")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_SetStrokeDashArray")]
  #endif
  public static extern void Shape_SetStrokeDashArray(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_GetStrokeDashCap")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_GetStrokeDashCap")]
  #endif
  public static extern int Shape_GetStrokeDashCap(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_SetStrokeDashCap")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_SetStrokeDashCap")]
  #endif
  public static extern void Shape_SetStrokeDashCap(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_GetStrokeDashOffset")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_GetStrokeDashOffset")]
  #endif
  public static extern float Shape_GetStrokeDashOffset(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_SetStrokeDashOffset")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_SetStrokeDashOffset")]
  #endif
  public static extern void Shape_SetStrokeDashOffset(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_GetStrokeEndLineCap")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_GetStrokeEndLineCap")]
  #endif
  public static extern int Shape_GetStrokeEndLineCap(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_SetStrokeEndLineCap")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_SetStrokeEndLineCap")]
  #endif
  public static extern void Shape_SetStrokeEndLineCap(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_GetStrokeLineJoin")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_GetStrokeLineJoin")]
  #endif
  public static extern int Shape_GetStrokeLineJoin(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_SetStrokeLineJoin")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_SetStrokeLineJoin")]
  #endif
  public static extern void Shape_SetStrokeLineJoin(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_GetStrokeMiterLimit")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_GetStrokeMiterLimit")]
  #endif
  public static extern float Shape_GetStrokeMiterLimit(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_SetStrokeMiterLimit")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_SetStrokeMiterLimit")]
  #endif
  public static extern void Shape_SetStrokeMiterLimit(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_GetStrokeStartLineCap")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_GetStrokeStartLineCap")]
  #endif
  public static extern int Shape_GetStrokeStartLineCap(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_SetStrokeStartLineCap")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_SetStrokeStartLineCap")]
  #endif
  public static extern void Shape_SetStrokeStartLineCap(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_GetStrokeThickness")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_GetStrokeThickness")]
  #endif
  public static extern float Shape_GetStrokeThickness(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_SetStrokeThickness")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_SetStrokeThickness")]
  #endif
  public static extern void Shape_SetStrokeThickness(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_FillProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_FillProperty_set")]
  #endif
  public static extern void Shape_FillProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_FillProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_FillProperty_get")]
  #endif
  public static extern IntPtr Shape_FillProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_StretchProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_StretchProperty_set")]
  #endif
  public static extern void Shape_StretchProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_StretchProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_StretchProperty_get")]
  #endif
  public static extern IntPtr Shape_StretchProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_StrokeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_StrokeProperty_set")]
  #endif
  public static extern void Shape_StrokeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_StrokeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_StrokeProperty_get")]
  #endif
  public static extern IntPtr Shape_StrokeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_StrokeDashArrayProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_StrokeDashArrayProperty_set")]
  #endif
  public static extern void Shape_StrokeDashArrayProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_StrokeDashArrayProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_StrokeDashArrayProperty_get")]
  #endif
  public static extern IntPtr Shape_StrokeDashArrayProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_StrokeDashCapProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_StrokeDashCapProperty_set")]
  #endif
  public static extern void Shape_StrokeDashCapProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_StrokeDashCapProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_StrokeDashCapProperty_get")]
  #endif
  public static extern IntPtr Shape_StrokeDashCapProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_StrokeDashOffsetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_StrokeDashOffsetProperty_set")]
  #endif
  public static extern void Shape_StrokeDashOffsetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_StrokeDashOffsetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_StrokeDashOffsetProperty_get")]
  #endif
  public static extern IntPtr Shape_StrokeDashOffsetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_StrokeEndLineCapProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_StrokeEndLineCapProperty_set")]
  #endif
  public static extern void Shape_StrokeEndLineCapProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_StrokeEndLineCapProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_StrokeEndLineCapProperty_get")]
  #endif
  public static extern IntPtr Shape_StrokeEndLineCapProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_StrokeLineJoinProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_StrokeLineJoinProperty_set")]
  #endif
  public static extern void Shape_StrokeLineJoinProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_StrokeLineJoinProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_StrokeLineJoinProperty_get")]
  #endif
  public static extern IntPtr Shape_StrokeLineJoinProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_StrokeMiterLimitProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_StrokeMiterLimitProperty_set")]
  #endif
  public static extern void Shape_StrokeMiterLimitProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_StrokeMiterLimitProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_StrokeMiterLimitProperty_get")]
  #endif
  public static extern IntPtr Shape_StrokeMiterLimitProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_StrokeStartLineCapProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_StrokeStartLineCapProperty_set")]
  #endif
  public static extern void Shape_StrokeStartLineCapProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_StrokeStartLineCapProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_StrokeStartLineCapProperty_get")]
  #endif
  public static extern IntPtr Shape_StrokeStartLineCapProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_StrokeThicknessProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_StrokeThicknessProperty_set")]
  #endif
  public static extern void Shape_StrokeThicknessProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_StrokeThicknessProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_StrokeThicknessProperty_get")]
  #endif
  public static extern IntPtr Shape_StrokeThicknessProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Ellipse")]
  #else
  [DllImport("Noesis", EntryPoint="new_Ellipse")]
  #endif
  public static extern IntPtr new_Ellipse();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Ellipse")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Ellipse")]
  #endif
  public static extern void delete_Ellipse(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_EllipseGeometry__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_EllipseGeometry__SWIG_0")]
  #endif
  public static extern IntPtr new_EllipseGeometry__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_EllipseGeometry__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_EllipseGeometry__SWIG_1")]
  #endif
  public static extern IntPtr new_EllipseGeometry__SWIG_1(HandleRef jarg1, float jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EllipseGeometry_GetCenter")]
  #else
  [DllImport("Noesis", EntryPoint="EllipseGeometry_GetCenter")]
  #endif
  public static extern IntPtr EllipseGeometry_GetCenter(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EllipseGeometry_SetCenter")]
  #else
  [DllImport("Noesis", EntryPoint="EllipseGeometry_SetCenter")]
  #endif
  public static extern void EllipseGeometry_SetCenter(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EllipseGeometry_GetRadiusX")]
  #else
  [DllImport("Noesis", EntryPoint="EllipseGeometry_GetRadiusX")]
  #endif
  public static extern float EllipseGeometry_GetRadiusX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EllipseGeometry_SetRadiusX")]
  #else
  [DllImport("Noesis", EntryPoint="EllipseGeometry_SetRadiusX")]
  #endif
  public static extern void EllipseGeometry_SetRadiusX(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EllipseGeometry_GetRadiusY")]
  #else
  [DllImport("Noesis", EntryPoint="EllipseGeometry_GetRadiusY")]
  #endif
  public static extern float EllipseGeometry_GetRadiusY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EllipseGeometry_SetRadiusY")]
  #else
  [DllImport("Noesis", EntryPoint="EllipseGeometry_SetRadiusY")]
  #endif
  public static extern void EllipseGeometry_SetRadiusY(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EllipseGeometry_IsEmpty")]
  #else
  [DllImport("Noesis", EntryPoint="EllipseGeometry_IsEmpty")]
  #endif
  public static extern bool EllipseGeometry_IsEmpty(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EllipseGeometry_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="EllipseGeometry_CreateRenderProxy")]
  #endif
  public static extern void EllipseGeometry_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EllipseGeometry_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="EllipseGeometry_UpdateRenderProxy")]
  #endif
  public static extern void EllipseGeometry_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EllipseGeometry_CenterProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="EllipseGeometry_CenterProperty_set")]
  #endif
  public static extern void EllipseGeometry_CenterProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EllipseGeometry_CenterProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="EllipseGeometry_CenterProperty_get")]
  #endif
  public static extern IntPtr EllipseGeometry_CenterProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EllipseGeometry_RadiusXProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="EllipseGeometry_RadiusXProperty_set")]
  #endif
  public static extern void EllipseGeometry_RadiusXProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EllipseGeometry_RadiusXProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="EllipseGeometry_RadiusXProperty_get")]
  #endif
  public static extern IntPtr EllipseGeometry_RadiusXProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EllipseGeometry_RadiusYProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="EllipseGeometry_RadiusYProperty_set")]
  #endif
  public static extern void EllipseGeometry_RadiusYProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EllipseGeometry_RadiusYProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="EllipseGeometry_RadiusYProperty_get")]
  #endif
  public static extern IntPtr EllipseGeometry_RadiusYProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_EllipseGeometry")]
  #else
  [DllImport("Noesis", EntryPoint="delete_EllipseGeometry")]
  #endif
  public static extern void delete_EllipseGeometry(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_EventTrigger")]
  #else
  [DllImport("Noesis", EntryPoint="new_EventTrigger")]
  #endif
  public static extern IntPtr new_EventTrigger();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_EventTrigger")]
  #else
  [DllImport("Noesis", EntryPoint="delete_EventTrigger")]
  #endif
  public static extern void delete_EventTrigger(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EventTrigger_GetActions")]
  #else
  [DllImport("Noesis", EntryPoint="EventTrigger_GetActions")]
  #endif
  public static extern IntPtr EventTrigger_GetActions(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EventTrigger_GetRoutedEvent")]
  #else
  [DllImport("Noesis", EntryPoint="EventTrigger_GetRoutedEvent")]
  #endif
  public static extern IntPtr EventTrigger_GetRoutedEvent(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EventTrigger_SetRoutedEvent")]
  #else
  [DllImport("Noesis", EntryPoint="EventTrigger_SetRoutedEvent")]
  #endif
  public static extern void EventTrigger_SetRoutedEvent(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EventTrigger_GetSourceName")]
  #else
  [DllImport("Noesis", EntryPoint="EventTrigger_GetSourceName")]
  #endif
  public static extern string EventTrigger_GetSourceName(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EventTrigger_SetSourceName")]
  #else
  [DllImport("Noesis", EntryPoint="EventTrigger_SetSourceName")]
  #endif
  public static extern void EventTrigger_SetSourceName(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EventTrigger_AddToLocalTriggers")]
  #else
  [DllImport("Noesis", EntryPoint="EventTrigger_AddToLocalTriggers")]
  #endif
  public static extern void EventTrigger_AddToLocalTriggers(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EventTrigger_RegisterSources")]
  #else
  [DllImport("Noesis", EntryPoint="EventTrigger_RegisterSources")]
  #endif
  public static extern void EventTrigger_RegisterSources(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EventTrigger_UnregisterSources")]
  #else
  [DllImport("Noesis", EntryPoint="EventTrigger_UnregisterSources")]
  #endif
  public static extern void EventTrigger_UnregisterSources(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EventTrigger_RegisterEvents")]
  #else
  [DllImport("Noesis", EntryPoint="EventTrigger_RegisterEvents")]
  #endif
  public static extern void EventTrigger_RegisterEvents(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EventTrigger_UnregisterEvents")]
  #else
  [DllImport("Noesis", EntryPoint="EventTrigger_UnregisterEvents")]
  #endif
  public static extern void EventTrigger_UnregisterEvents(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EventTrigger_Check")]
  #else
  [DllImport("Noesis", EntryPoint="EventTrigger_Check")]
  #endif
  public static extern bool EventTrigger_Check(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, bool jarg6);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EventTrigger_FindValue")]
  #else
  [DllImport("Noesis", EntryPoint="EventTrigger_FindValue")]
  #endif
  public static extern IntPtr EventTrigger_FindValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EventTrigger_Invalidate__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="EventTrigger_Invalidate__SWIG_0")]
  #endif
  public static extern void EventTrigger_Invalidate__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4, bool jarg5, byte jarg6);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EventTrigger_Invalidate__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="EventTrigger_Invalidate__SWIG_1")]
  #endif
  public static extern void EventTrigger_Invalidate__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6, HandleRef jarg7, bool jarg8, bool jarg9, byte jarg10);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_HeaderedContentControl")]
  #else
  [DllImport("Noesis", EntryPoint="new_HeaderedContentControl")]
  #endif
  public static extern IntPtr new_HeaderedContentControl();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_HeaderedContentControl")]
  #else
  [DllImport("Noesis", EntryPoint="delete_HeaderedContentControl")]
  #endif
  public static extern void delete_HeaderedContentControl(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedContentControl_GetHasHeader")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedContentControl_GetHasHeader")]
  #endif
  public static extern bool HeaderedContentControl_GetHasHeader(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedContentControl_GetHeader")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedContentControl_GetHeader")]
  #endif
  public static extern IntPtr HeaderedContentControl_GetHeader(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedContentControl_SetHeader")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedContentControl_SetHeader")]
  #endif
  public static extern void HeaderedContentControl_SetHeader(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedContentControl_GetHeaderTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedContentControl_GetHeaderTemplate")]
  #endif
  public static extern IntPtr HeaderedContentControl_GetHeaderTemplate(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedContentControl_SetHeaderTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedContentControl_SetHeaderTemplate")]
  #endif
  public static extern void HeaderedContentControl_SetHeaderTemplate(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedContentControl_GetHeaderTemplateSelector")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedContentControl_GetHeaderTemplateSelector")]
  #endif
  public static extern IntPtr HeaderedContentControl_GetHeaderTemplateSelector(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedContentControl_SetHeaderTemplateSelector")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedContentControl_SetHeaderTemplateSelector")]
  #endif
  public static extern void HeaderedContentControl_SetHeaderTemplateSelector(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedContentControl_HasHeaderProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedContentControl_HasHeaderProperty_set")]
  #endif
  public static extern void HeaderedContentControl_HasHeaderProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedContentControl_HasHeaderProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedContentControl_HasHeaderProperty_get")]
  #endif
  public static extern IntPtr HeaderedContentControl_HasHeaderProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedContentControl_HeaderProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedContentControl_HeaderProperty_set")]
  #endif
  public static extern void HeaderedContentControl_HeaderProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedContentControl_HeaderProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedContentControl_HeaderProperty_get")]
  #endif
  public static extern IntPtr HeaderedContentControl_HeaderProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedContentControl_HeaderTemplateProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedContentControl_HeaderTemplateProperty_set")]
  #endif
  public static extern void HeaderedContentControl_HeaderTemplateProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedContentControl_HeaderTemplateProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedContentControl_HeaderTemplateProperty_get")]
  #endif
  public static extern IntPtr HeaderedContentControl_HeaderTemplateProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedContentControl_HeaderTemplateSelectorProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedContentControl_HeaderTemplateSelectorProperty_set")]
  #endif
  public static extern void HeaderedContentControl_HeaderTemplateSelectorProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedContentControl_HeaderTemplateSelectorProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedContentControl_HeaderTemplateSelectorProperty_get")]
  #endif
  public static extern IntPtr HeaderedContentControl_HeaderTemplateSelectorProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Expander")]
  #else
  [DllImport("Noesis", EntryPoint="new_Expander")]
  #endif
  public static extern IntPtr new_Expander();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Expander_GetExpandDirection")]
  #else
  [DllImport("Noesis", EntryPoint="Expander_GetExpandDirection")]
  #endif
  public static extern int Expander_GetExpandDirection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Expander_SetExpandDirection")]
  #else
  [DllImport("Noesis", EntryPoint="Expander_SetExpandDirection")]
  #endif
  public static extern void Expander_SetExpandDirection(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Expander_GetIsExpanded")]
  #else
  [DllImport("Noesis", EntryPoint="Expander_GetIsExpanded")]
  #endif
  public static extern bool Expander_GetIsExpanded(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Expander_SetIsExpanded")]
  #else
  [DllImport("Noesis", EntryPoint="Expander_SetIsExpanded")]
  #endif
  public static extern void Expander_SetIsExpanded(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Expander_ExpandDirectionProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Expander_ExpandDirectionProperty_set")]
  #endif
  public static extern void Expander_ExpandDirectionProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Expander_ExpandDirectionProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Expander_ExpandDirectionProperty_get")]
  #endif
  public static extern IntPtr Expander_ExpandDirectionProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Expander_IsExpandedProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Expander_IsExpandedProperty_set")]
  #endif
  public static extern void Expander_IsExpandedProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Expander_IsExpandedProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Expander_IsExpandedProperty_get")]
  #endif
  public static extern IntPtr Expander_IsExpandedProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Expander")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Expander")]
  #endif
  public static extern void delete_Expander(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FocusManager_GetFocusedElement")]
  #else
  [DllImport("Noesis", EntryPoint="FocusManager_GetFocusedElement")]
  #endif
  public static extern IntPtr FocusManager_GetFocusedElement(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FocusManager_SetFocusedElement")]
  #else
  [DllImport("Noesis", EntryPoint="FocusManager_SetFocusedElement")]
  #endif
  public static extern void FocusManager_SetFocusedElement(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FocusManager_GetFocusScope")]
  #else
  [DllImport("Noesis", EntryPoint="FocusManager_GetFocusScope")]
  #endif
  public static extern IntPtr FocusManager_GetFocusScope(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FocusManager_GetIsFocusScope")]
  #else
  [DllImport("Noesis", EntryPoint="FocusManager_GetIsFocusScope")]
  #endif
  public static extern bool FocusManager_GetIsFocusScope(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FocusManager_SetIsFocusScope")]
  #else
  [DllImport("Noesis", EntryPoint="FocusManager_SetIsFocusScope")]
  #endif
  public static extern void FocusManager_SetIsFocusScope(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FocusManager_FocusedElementProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FocusManager_FocusedElementProperty_set")]
  #endif
  public static extern void FocusManager_FocusedElementProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FocusManager_FocusedElementProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FocusManager_FocusedElementProperty_get")]
  #endif
  public static extern IntPtr FocusManager_FocusedElementProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FocusManager_IsFocusScopeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="FocusManager_IsFocusScopeProperty_set")]
  #endif
  public static extern void FocusManager_IsFocusScopeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FocusManager_IsFocusScopeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="FocusManager_IsFocusScopeProperty_get")]
  #endif
  public static extern IntPtr FocusManager_IsFocusScopeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_FocusManager")]
  #else
  [DllImport("Noesis", EntryPoint="delete_FocusManager")]
  #endif
  public static extern void delete_FocusManager(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_FormattedText")]
  #else
  [DllImport("Noesis", EntryPoint="new_FormattedText")]
  #endif
  public static extern IntPtr new_FormattedText();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_FormattedText")]
  #else
  [DllImport("Noesis", EntryPoint="delete_FormattedText")]
  #endif
  public static extern void delete_FormattedText(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_GetText")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_GetText")]
  #endif
  public static extern IntPtr FormattedText_GetText(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_SetText")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_SetText")]
  #endif
  public static extern void FormattedText_SetText(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_GetTextAlignment")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_GetTextAlignment")]
  #endif
  public static extern int FormattedText_GetTextAlignment(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_SetTextAlignment")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_SetTextAlignment")]
  #endif
  public static extern void FormattedText_SetTextAlignment(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_GetFontFamily")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_GetFontFamily")]
  #endif
  public static extern IntPtr FormattedText_GetFontFamily(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_SetFontFamily")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_SetFontFamily")]
  #endif
  public static extern void FormattedText_SetFontFamily(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_GetFontSize")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_GetFontSize")]
  #endif
  public static extern float FormattedText_GetFontSize(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_SetFontSize")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_SetFontSize")]
  #endif
  public static extern void FormattedText_SetFontSize(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_GetFontStretch")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_GetFontStretch")]
  #endif
  public static extern int FormattedText_GetFontStretch(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_SetFontStretch")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_SetFontStretch")]
  #endif
  public static extern void FormattedText_SetFontStretch(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_GetFontStyle")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_GetFontStyle")]
  #endif
  public static extern int FormattedText_GetFontStyle(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_SetFontStyle")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_SetFontStyle")]
  #endif
  public static extern void FormattedText_SetFontStyle(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_GetFontWeight")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_GetFontWeight")]
  #endif
  public static extern int FormattedText_GetFontWeight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_SetFontWeight")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_SetFontWeight")]
  #endif
  public static extern void FormattedText_SetFontWeight(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_GetForeground")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_GetForeground")]
  #endif
  public static extern IntPtr FormattedText_GetForeground(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_SetForeground")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_SetForeground")]
  #endif
  public static extern void FormattedText_SetForeground(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_GetStroke")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_GetStroke")]
  #endif
  public static extern IntPtr FormattedText_GetStroke(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_SetStroke")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_SetStroke")]
  #endif
  public static extern void FormattedText_SetStroke(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_GetStrokeThickness")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_GetStrokeThickness")]
  #endif
  public static extern float FormattedText_GetStrokeThickness(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_SetStrokeThickness")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_SetStrokeThickness")]
  #endif
  public static extern void FormattedText_SetStrokeThickness(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_GetFont")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_GetFont")]
  #endif
  public static extern IntPtr FormattedText_GetFont(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_CreateRenderProxy")]
  #endif
  public static extern void FormattedText_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_UpdateRenderProxy")]
  #endif
  public static extern void FormattedText_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_UnregisterRenderer")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_UnregisterRenderer")]
  #endif
  public static extern void FormattedText_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuEventArgs_owner_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuEventArgs_owner_set")]
  #endif
  public static extern void ContextMenuEventArgs_owner_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuEventArgs_owner_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuEventArgs_owner_get")]
  #endif
  public static extern IntPtr ContextMenuEventArgs_owner_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuEventArgs_cursorLeft_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuEventArgs_cursorLeft_set")]
  #endif
  public static extern void ContextMenuEventArgs_cursorLeft_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuEventArgs_cursorLeft_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuEventArgs_cursorLeft_get")]
  #endif
  public static extern float ContextMenuEventArgs_cursorLeft_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuEventArgs_cursorTop_set")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuEventArgs_cursorTop_set")]
  #endif
  public static extern void ContextMenuEventArgs_cursorTop_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuEventArgs_cursorTop_get")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuEventArgs_cursorTop_get")]
  #endif
  public static extern float ContextMenuEventArgs_cursorTop_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ContextMenuEventArgs__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_ContextMenuEventArgs__SWIG_0")]
  #endif
  public static extern IntPtr new_ContextMenuEventArgs__SWIG_0(HandleRef jarg1, HandleRef jarg2, float jarg3, float jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ContextMenuEventArgs__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_ContextMenuEventArgs__SWIG_1")]
  #endif
  public static extern IntPtr new_ContextMenuEventArgs__SWIG_1(HandleRef jarg1, HandleRef jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ContextMenuEventArgs__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_ContextMenuEventArgs__SWIG_2")]
  #endif
  public static extern IntPtr new_ContextMenuEventArgs__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ContextMenuEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ContextMenuEventArgs")]
  #endif
  public static extern void delete_ContextMenuEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ToolTipEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_ToolTipEventArgs")]
  #endif
  public static extern IntPtr new_ToolTipEventArgs(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ToolTipEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ToolTipEventArgs")]
  #endif
  public static extern void delete_ToolTipEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RequestBringIntoViewEventArgs_targetObject_set")]
  #else
  [DllImport("Noesis", EntryPoint="RequestBringIntoViewEventArgs_targetObject_set")]
  #endif
  public static extern void RequestBringIntoViewEventArgs_targetObject_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RequestBringIntoViewEventArgs_targetObject_get")]
  #else
  [DllImport("Noesis", EntryPoint="RequestBringIntoViewEventArgs_targetObject_get")]
  #endif
  public static extern IntPtr RequestBringIntoViewEventArgs_targetObject_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RequestBringIntoViewEventArgs_targetRect_set")]
  #else
  [DllImport("Noesis", EntryPoint="RequestBringIntoViewEventArgs_targetRect_set")]
  #endif
  public static extern void RequestBringIntoViewEventArgs_targetRect_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RequestBringIntoViewEventArgs_targetRect_get")]
  #else
  [DllImport("Noesis", EntryPoint="RequestBringIntoViewEventArgs_targetRect_get")]
  #endif
  public static extern IntPtr RequestBringIntoViewEventArgs_targetRect_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_RequestBringIntoViewEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_RequestBringIntoViewEventArgs")]
  #endif
  public static extern IntPtr new_RequestBringIntoViewEventArgs(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_RequestBringIntoViewEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_RequestBringIntoViewEventArgs")]
  #endif
  public static extern void delete_RequestBringIntoViewEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_FreezableCollection__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_FreezableCollection__SWIG_0")]
  #endif
  public static extern IntPtr new_FreezableCollection__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_FreezableCollection__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_FreezableCollection__SWIG_1")]
  #endif
  public static extern IntPtr new_FreezableCollection__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_FreezableCollection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_FreezableCollection")]
  #endif
  public static extern void delete_FreezableCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FreezableCollection_Count")]
  #else
  [DllImport("Noesis", EntryPoint="FreezableCollection_Count")]
  #endif
  public static extern uint FreezableCollection_Count(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FreezableCollection_Get")]
  #else
  [DllImport("Noesis", EntryPoint="FreezableCollection_Get")]
  #endif
  public static extern IntPtr FreezableCollection_Get(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FreezableCollection_Set__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="FreezableCollection_Set__SWIG_0")]
  #endif
  public static extern void FreezableCollection_Set__SWIG_0(HandleRef jarg1, uint jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FreezableCollection_Set__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="FreezableCollection_Set__SWIG_1")]
  #endif
  public static extern void FreezableCollection_Set__SWIG_1(HandleRef jarg1, uint jarg2, string jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FreezableCollection_Add__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="FreezableCollection_Add__SWIG_0")]
  #endif
  public static extern uint FreezableCollection_Add__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FreezableCollection_Add__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="FreezableCollection_Add__SWIG_1")]
  #endif
  public static extern uint FreezableCollection_Add__SWIG_1(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FreezableCollection_Clear")]
  #else
  [DllImport("Noesis", EntryPoint="FreezableCollection_Clear")]
  #endif
  public static extern void FreezableCollection_Clear(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FreezableCollection_Contains")]
  #else
  [DllImport("Noesis", EntryPoint="FreezableCollection_Contains")]
  #endif
  public static extern bool FreezableCollection_Contains(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FreezableCollection_IndexOf")]
  #else
  [DllImport("Noesis", EntryPoint="FreezableCollection_IndexOf")]
  #endif
  public static extern int FreezableCollection_IndexOf(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FreezableCollection_Insert__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="FreezableCollection_Insert__SWIG_0")]
  #endif
  public static extern void FreezableCollection_Insert__SWIG_0(HandleRef jarg1, uint jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FreezableCollection_Insert__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="FreezableCollection_Insert__SWIG_1")]
  #endif
  public static extern void FreezableCollection_Insert__SWIG_1(HandleRef jarg1, uint jarg2, string jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FreezableCollection_Remove")]
  #else
  [DllImport("Noesis", EntryPoint="FreezableCollection_Remove")]
  #endif
  public static extern void FreezableCollection_Remove(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FreezableCollection_RemoveAt")]
  #else
  [DllImport("Noesis", EntryPoint="FreezableCollection_RemoveAt")]
  #endif
  public static extern void FreezableCollection_RemoveAt(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FreezableCollection_GetIterator")]
  #else
  [DllImport("Noesis", EntryPoint="FreezableCollection_GetIterator")]
  #endif
  public static extern IntPtr FreezableCollection_GetIterator(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FreezableCollection_CollectionChanged")]
  #else
  [DllImport("Noesis", EntryPoint="FreezableCollection_CollectionChanged")]
  #endif
  public static extern IntPtr FreezableCollection_CollectionChanged(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="IdOfTypedFreezableCollection")]
  #else
  [DllImport("Noesis", EntryPoint="IdOfTypedFreezableCollection")]
  #endif
  public static extern IntPtr IdOfTypedFreezableCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_GeometryGroup")]
  #else
  [DllImport("Noesis", EntryPoint="new_GeometryGroup")]
  #endif
  public static extern IntPtr new_GeometryGroup();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_GeometryGroup")]
  #else
  [DllImport("Noesis", EntryPoint="delete_GeometryGroup")]
  #endif
  public static extern void delete_GeometryGroup(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GeometryGroup_GetChildren")]
  #else
  [DllImport("Noesis", EntryPoint="GeometryGroup_GetChildren")]
  #endif
  public static extern IntPtr GeometryGroup_GetChildren(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GeometryGroup_SetChildren")]
  #else
  [DllImport("Noesis", EntryPoint="GeometryGroup_SetChildren")]
  #endif
  public static extern void GeometryGroup_SetChildren(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GeometryGroup_GetFillRule")]
  #else
  [DllImport("Noesis", EntryPoint="GeometryGroup_GetFillRule")]
  #endif
  public static extern int GeometryGroup_GetFillRule(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GeometryGroup_SetFillRule")]
  #else
  [DllImport("Noesis", EntryPoint="GeometryGroup_SetFillRule")]
  #endif
  public static extern void GeometryGroup_SetFillRule(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GeometryGroup_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="GeometryGroup_CreateRenderProxy")]
  #endif
  public static extern void GeometryGroup_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GeometryGroup_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="GeometryGroup_UpdateRenderProxy")]
  #endif
  public static extern void GeometryGroup_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GeometryGroup_ChildrenProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="GeometryGroup_ChildrenProperty_set")]
  #endif
  public static extern void GeometryGroup_ChildrenProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GeometryGroup_ChildrenProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="GeometryGroup_ChildrenProperty_get")]
  #endif
  public static extern IntPtr GeometryGroup_ChildrenProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GeometryGroup_FillRuleProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="GeometryGroup_FillRuleProperty_set")]
  #endif
  public static extern void GeometryGroup_FillRuleProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GeometryGroup_FillRuleProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="GeometryGroup_FillRuleProperty_get")]
  #endif
  public static extern IntPtr GeometryGroup_FillRuleProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_GradientBrush")]
  #else
  [DllImport("Noesis", EntryPoint="delete_GradientBrush")]
  #endif
  public static extern void delete_GradientBrush(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientBrush_GetColorInterpolationMode")]
  #else
  [DllImport("Noesis", EntryPoint="GradientBrush_GetColorInterpolationMode")]
  #endif
  public static extern int GradientBrush_GetColorInterpolationMode(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientBrush_SetColorInterpolationMode")]
  #else
  [DllImport("Noesis", EntryPoint="GradientBrush_SetColorInterpolationMode")]
  #endif
  public static extern void GradientBrush_SetColorInterpolationMode(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientBrush_GetGradientStops")]
  #else
  [DllImport("Noesis", EntryPoint="GradientBrush_GetGradientStops")]
  #endif
  public static extern IntPtr GradientBrush_GetGradientStops(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientBrush_SetGradientStops")]
  #else
  [DllImport("Noesis", EntryPoint="GradientBrush_SetGradientStops")]
  #endif
  public static extern void GradientBrush_SetGradientStops(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientBrush_GetMappingMode")]
  #else
  [DllImport("Noesis", EntryPoint="GradientBrush_GetMappingMode")]
  #endif
  public static extern int GradientBrush_GetMappingMode(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientBrush_SetMappingMode")]
  #else
  [DllImport("Noesis", EntryPoint="GradientBrush_SetMappingMode")]
  #endif
  public static extern void GradientBrush_SetMappingMode(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientBrush_GetSpreadMethod")]
  #else
  [DllImport("Noesis", EntryPoint="GradientBrush_GetSpreadMethod")]
  #endif
  public static extern int GradientBrush_GetSpreadMethod(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientBrush_SetSpreadMethod")]
  #else
  [DllImport("Noesis", EntryPoint="GradientBrush_SetSpreadMethod")]
  #endif
  public static extern void GradientBrush_SetSpreadMethod(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientBrush_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="GradientBrush_UpdateRenderProxy")]
  #endif
  public static extern void GradientBrush_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientBrush_ColorInterpolationModeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="GradientBrush_ColorInterpolationModeProperty_set")]
  #endif
  public static extern void GradientBrush_ColorInterpolationModeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientBrush_ColorInterpolationModeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="GradientBrush_ColorInterpolationModeProperty_get")]
  #endif
  public static extern IntPtr GradientBrush_ColorInterpolationModeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientBrush_GradientStopsProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="GradientBrush_GradientStopsProperty_set")]
  #endif
  public static extern void GradientBrush_GradientStopsProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientBrush_GradientStopsProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="GradientBrush_GradientStopsProperty_get")]
  #endif
  public static extern IntPtr GradientBrush_GradientStopsProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientBrush_MappingModeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="GradientBrush_MappingModeProperty_set")]
  #endif
  public static extern void GradientBrush_MappingModeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientBrush_MappingModeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="GradientBrush_MappingModeProperty_get")]
  #endif
  public static extern IntPtr GradientBrush_MappingModeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientBrush_SpreadMethodProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="GradientBrush_SpreadMethodProperty_set")]
  #endif
  public static extern void GradientBrush_SpreadMethodProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientBrush_SpreadMethodProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="GradientBrush_SpreadMethodProperty_get")]
  #endif
  public static extern IntPtr GradientBrush_SpreadMethodProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_GradientStop")]
  #else
  [DllImport("Noesis", EntryPoint="new_GradientStop")]
  #endif
  public static extern IntPtr new_GradientStop();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientStop_GetColor")]
  #else
  [DllImport("Noesis", EntryPoint="GradientStop_GetColor")]
  #endif
  public static extern IntPtr GradientStop_GetColor(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientStop_SetColor")]
  #else
  [DllImport("Noesis", EntryPoint="GradientStop_SetColor")]
  #endif
  public static extern void GradientStop_SetColor(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientStop_GetOffset")]
  #else
  [DllImport("Noesis", EntryPoint="GradientStop_GetOffset")]
  #endif
  public static extern float GradientStop_GetOffset(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientStop_SetOffset")]
  #else
  [DllImport("Noesis", EntryPoint="GradientStop_SetOffset")]
  #endif
  public static extern void GradientStop_SetOffset(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientStop_ColorProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="GradientStop_ColorProperty_set")]
  #endif
  public static extern void GradientStop_ColorProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientStop_ColorProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="GradientStop_ColorProperty_get")]
  #endif
  public static extern IntPtr GradientStop_ColorProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientStop_OffsetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="GradientStop_OffsetProperty_set")]
  #endif
  public static extern void GradientStop_OffsetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientStop_OffsetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="GradientStop_OffsetProperty_get")]
  #endif
  public static extern IntPtr GradientStop_OffsetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_GradientStop")]
  #else
  [DllImport("Noesis", EntryPoint="delete_GradientStop")]
  #endif
  public static extern void delete_GradientStop(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_GradientStopCollection")]
  #else
  [DllImport("Noesis", EntryPoint="new_GradientStopCollection")]
  #endif
  public static extern IntPtr new_GradientStopCollection();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_GradientStopCollection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_GradientStopCollection")]
  #endif
  public static extern void delete_GradientStopCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientStopCollection_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="GradientStopCollection_CreateRenderProxy")]
  #endif
  public static extern void GradientStopCollection_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientStopCollection_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="GradientStopCollection_UpdateRenderProxy")]
  #endif
  public static extern void GradientStopCollection_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientStopCollection_UnregisterRenderer")]
  #else
  [DllImport("Noesis", EntryPoint="GradientStopCollection_UnregisterRenderer")]
  #endif
  public static extern void GradientStopCollection_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Grid")]
  #else
  [DllImport("Noesis", EntryPoint="new_Grid")]
  #endif
  public static extern IntPtr new_Grid();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Grid")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Grid")]
  #endif
  public static extern void delete_Grid(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_GetColumnDefinitions")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_GetColumnDefinitions")]
  #endif
  public static extern IntPtr Grid_GetColumnDefinitions(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_GetColumn")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_GetColumn")]
  #endif
  public static extern uint Grid_GetColumn(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_SetColumn")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_SetColumn")]
  #endif
  public static extern void Grid_SetColumn(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_GetColumnSpan")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_GetColumnSpan")]
  #endif
  public static extern uint Grid_GetColumnSpan(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_SetColumnSpan")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_SetColumnSpan")]
  #endif
  public static extern void Grid_SetColumnSpan(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_GetIsSharedSizeScope")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_GetIsSharedSizeScope")]
  #endif
  public static extern bool Grid_GetIsSharedSizeScope(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_SetIsSharedSizeScope")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_SetIsSharedSizeScope")]
  #endif
  public static extern void Grid_SetIsSharedSizeScope(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_GetRowDefinitions")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_GetRowDefinitions")]
  #endif
  public static extern IntPtr Grid_GetRowDefinitions(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_GetRow")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_GetRow")]
  #endif
  public static extern uint Grid_GetRow(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_SetRow")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_SetRow")]
  #endif
  public static extern void Grid_SetRow(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_GetRowSpan")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_GetRowSpan")]
  #endif
  public static extern uint Grid_GetRowSpan(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_SetRowSpan")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_SetRowSpan")]
  #endif
  public static extern void Grid_SetRowSpan(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_GetShowGridLines")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_GetShowGridLines")]
  #endif
  public static extern bool Grid_GetShowGridLines(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_SetShowGridLines")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_SetShowGridLines")]
  #endif
  public static extern void Grid_SetShowGridLines(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_ColumnProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_ColumnProperty_set")]
  #endif
  public static extern void Grid_ColumnProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_ColumnProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_ColumnProperty_get")]
  #endif
  public static extern IntPtr Grid_ColumnProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_ColumnSpanProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_ColumnSpanProperty_set")]
  #endif
  public static extern void Grid_ColumnSpanProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_ColumnSpanProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_ColumnSpanProperty_get")]
  #endif
  public static extern IntPtr Grid_ColumnSpanProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_IsSharedSizeScopeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_IsSharedSizeScopeProperty_set")]
  #endif
  public static extern void Grid_IsSharedSizeScopeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_IsSharedSizeScopeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_IsSharedSizeScopeProperty_get")]
  #endif
  public static extern IntPtr Grid_IsSharedSizeScopeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_RowProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_RowProperty_set")]
  #endif
  public static extern void Grid_RowProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_RowProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_RowProperty_get")]
  #endif
  public static extern IntPtr Grid_RowProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_RowSpanProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_RowSpanProperty_set")]
  #endif
  public static extern void Grid_RowSpanProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_RowSpanProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_RowSpanProperty_get")]
  #endif
  public static extern IntPtr Grid_RowSpanProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_ShowGridLinesProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_ShowGridLinesProperty_set")]
  #endif
  public static extern void Grid_ShowGridLinesProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_ShowGridLinesProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_ShowGridLinesProperty_get")]
  #endif
  public static extern IntPtr Grid_ShowGridLinesProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_GridLength__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_GridLength__SWIG_0")]
  #endif
  public static extern IntPtr new_GridLength__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_GridLength__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_GridLength__SWIG_1")]
  #endif
  public static extern IntPtr new_GridLength__SWIG_1(float jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_GridLength__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_GridLength__SWIG_2")]
  #endif
  public static extern IntPtr new_GridLength__SWIG_2(float jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GridLength_GetGridUnitType")]
  #else
  [DllImport("Noesis", EntryPoint="GridLength_GetGridUnitType")]
  #endif
  public static extern int GridLength_GetGridUnitType(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GridLength_IsAbsolute")]
  #else
  [DllImport("Noesis", EntryPoint="GridLength_IsAbsolute")]
  #endif
  public static extern bool GridLength_IsAbsolute(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GridLength_IsAuto")]
  #else
  [DllImport("Noesis", EntryPoint="GridLength_IsAuto")]
  #endif
  public static extern bool GridLength_IsAuto(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GridLength_IsStar")]
  #else
  [DllImport("Noesis", EntryPoint="GridLength_IsStar")]
  #endif
  public static extern bool GridLength_IsStar(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GridLength_GetValue")]
  #else
  [DllImport("Noesis", EntryPoint="GridLength_GetValue")]
  #endif
  public static extern float GridLength_GetValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_GridLength__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="new_GridLength__SWIG_3")]
  #endif
  public static extern IntPtr new_GridLength__SWIG_3(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GridLength_Parse")]
  #else
  [DllImport("Noesis", EntryPoint="GridLength_Parse")]
  #endif
  public static extern IntPtr GridLength_Parse(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GridLength_TryParse")]
  #else
  [DllImport("Noesis", EntryPoint="GridLength_TryParse")]
  #endif
  public static extern bool GridLength_TryParse(string jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_GridLength")]
  #else
  [DllImport("Noesis", EntryPoint="delete_GridLength")]
  #endif
  public static extern void delete_GridLength(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_GroupBox")]
  #else
  [DllImport("Noesis", EntryPoint="new_GroupBox")]
  #endif
  public static extern IntPtr new_GroupBox();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_GroupBox")]
  #else
  [DllImport("Noesis", EntryPoint="delete_GroupBox")]
  #endif
  public static extern void delete_GroupBox(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_GroupDescription")]
  #else
  [DllImport("Noesis", EntryPoint="new_GroupDescription")]
  #endif
  public static extern IntPtr new_GroupDescription();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_GroupDescription")]
  #else
  [DllImport("Noesis", EntryPoint="delete_GroupDescription")]
  #endif
  public static extern void delete_GroupDescription(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_HeaderedItemsControl")]
  #else
  [DllImport("Noesis", EntryPoint="new_HeaderedItemsControl")]
  #endif
  public static extern IntPtr new_HeaderedItemsControl();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_HeaderedItemsControl")]
  #else
  [DllImport("Noesis", EntryPoint="delete_HeaderedItemsControl")]
  #endif
  public static extern void delete_HeaderedItemsControl(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedItemsControl_GetHasHeader")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedItemsControl_GetHasHeader")]
  #endif
  public static extern bool HeaderedItemsControl_GetHasHeader(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedItemsControl_GetHeader")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedItemsControl_GetHeader")]
  #endif
  public static extern IntPtr HeaderedItemsControl_GetHeader(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedItemsControl_SetHeader")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedItemsControl_SetHeader")]
  #endif
  public static extern void HeaderedItemsControl_SetHeader(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedItemsControl_GetHeaderStringFormat")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedItemsControl_GetHeaderStringFormat")]
  #endif
  public static extern IntPtr HeaderedItemsControl_GetHeaderStringFormat(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedItemsControl_SetHeaderStringFormat")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedItemsControl_SetHeaderStringFormat")]
  #endif
  public static extern void HeaderedItemsControl_SetHeaderStringFormat(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedItemsControl_GetHeaderTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedItemsControl_GetHeaderTemplate")]
  #endif
  public static extern IntPtr HeaderedItemsControl_GetHeaderTemplate(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedItemsControl_SetHeaderTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedItemsControl_SetHeaderTemplate")]
  #endif
  public static extern void HeaderedItemsControl_SetHeaderTemplate(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedItemsControl_GetHeaderTemplateSelector")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedItemsControl_GetHeaderTemplateSelector")]
  #endif
  public static extern IntPtr HeaderedItemsControl_GetHeaderTemplateSelector(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedItemsControl_SetHeaderTemplateSelector")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedItemsControl_SetHeaderTemplateSelector")]
  #endif
  public static extern void HeaderedItemsControl_SetHeaderTemplateSelector(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedItemsControl_PrepareContainerForItem")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedItemsControl_PrepareContainerForItem")]
  #endif
  public static extern void HeaderedItemsControl_PrepareContainerForItem(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedItemsControl_HasHeaderProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedItemsControl_HasHeaderProperty_set")]
  #endif
  public static extern void HeaderedItemsControl_HasHeaderProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedItemsControl_HasHeaderProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedItemsControl_HasHeaderProperty_get")]
  #endif
  public static extern IntPtr HeaderedItemsControl_HasHeaderProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedItemsControl_HeaderProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedItemsControl_HeaderProperty_set")]
  #endif
  public static extern void HeaderedItemsControl_HeaderProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedItemsControl_HeaderProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedItemsControl_HeaderProperty_get")]
  #endif
  public static extern IntPtr HeaderedItemsControl_HeaderProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedItemsControl_HeaderStringFormatProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedItemsControl_HeaderStringFormatProperty_set")]
  #endif
  public static extern void HeaderedItemsControl_HeaderStringFormatProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedItemsControl_HeaderStringFormatProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedItemsControl_HeaderStringFormatProperty_get")]
  #endif
  public static extern IntPtr HeaderedItemsControl_HeaderStringFormatProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedItemsControl_HeaderTemplateProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedItemsControl_HeaderTemplateProperty_set")]
  #endif
  public static extern void HeaderedItemsControl_HeaderTemplateProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedItemsControl_HeaderTemplateProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedItemsControl_HeaderTemplateProperty_get")]
  #endif
  public static extern IntPtr HeaderedItemsControl_HeaderTemplateProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedItemsControl_HeaderTemplateSelectorProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedItemsControl_HeaderTemplateSelectorProperty_set")]
  #endif
  public static extern void HeaderedItemsControl_HeaderTemplateSelectorProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedItemsControl_HeaderTemplateSelectorProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedItemsControl_HeaderTemplateSelectorProperty_get")]
  #endif
  public static extern IntPtr HeaderedItemsControl_HeaderTemplateSelectorProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_IconSource__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_IconSource__SWIG_0")]
  #endif
  public static extern IntPtr new_IconSource__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_IconSource__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_IconSource__SWIG_1")]
  #endif
  public static extern IntPtr new_IconSource__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_IconSource")]
  #else
  [DllImport("Noesis", EntryPoint="delete_IconSource")]
  #endif
  public static extern void delete_IconSource(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="IconSource_Register")]
  #else
  [DllImport("Noesis", EntryPoint="IconSource_Register")]
  #endif
  public static extern void IconSource_Register(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="IconSource_IsRegistered")]
  #else
  [DllImport("Noesis", EntryPoint="IconSource_IsRegistered")]
  #endif
  public static extern bool IconSource_IsRegistered(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="IconSource_ClearCache")]
  #else
  [DllImport("Noesis", EntryPoint="IconSource_ClearCache")]
  #endif
  public static extern void IconSource_ClearCache();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="IconSource_GetSource")]
  #else
  [DllImport("Noesis", EntryPoint="IconSource_GetSource")]
  #endif
  public static extern IntPtr IconSource_GetSource(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="IconSource_GetImageSet")]
  #else
  [DllImport("Noesis", EntryPoint="IconSource_GetImageSet")]
  #endif
  public static extern IntPtr IconSource_GetImageSet(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="IconSource_SetImageSet")]
  #else
  [DllImport("Noesis", EntryPoint="IconSource_SetImageSet")]
  #endif
  public static extern void IconSource_SetImageSet(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Image")]
  #else
  [DllImport("Noesis", EntryPoint="new_Image")]
  #endif
  public static extern IntPtr new_Image();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Image")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Image")]
  #endif
  public static extern void delete_Image(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Image_GetSource")]
  #else
  [DllImport("Noesis", EntryPoint="Image_GetSource")]
  #endif
  public static extern IntPtr Image_GetSource(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Image_SetSource")]
  #else
  [DllImport("Noesis", EntryPoint="Image_SetSource")]
  #endif
  public static extern void Image_SetSource(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Image_GetStretch")]
  #else
  [DllImport("Noesis", EntryPoint="Image_GetStretch")]
  #endif
  public static extern int Image_GetStretch(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Image_SetStretch")]
  #else
  [DllImport("Noesis", EntryPoint="Image_SetStretch")]
  #endif
  public static extern void Image_SetStretch(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Image_GetStretchDirection")]
  #else
  [DllImport("Noesis", EntryPoint="Image_GetStretchDirection")]
  #endif
  public static extern int Image_GetStretchDirection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Image_SetStretchDirection")]
  #else
  [DllImport("Noesis", EntryPoint="Image_SetStretchDirection")]
  #endif
  public static extern void Image_SetStretchDirection(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Image_InvalidateImage")]
  #else
  [DllImport("Noesis", EntryPoint="Image_InvalidateImage")]
  #endif
  public static extern void Image_InvalidateImage(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Image_SourceProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Image_SourceProperty_set")]
  #endif
  public static extern void Image_SourceProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Image_SourceProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Image_SourceProperty_get")]
  #endif
  public static extern IntPtr Image_SourceProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Image_StretchProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Image_StretchProperty_set")]
  #endif
  public static extern void Image_StretchProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Image_StretchProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Image_StretchProperty_get")]
  #endif
  public static extern IntPtr Image_StretchProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Image_StretchDirectionProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Image_StretchDirectionProperty_set")]
  #endif
  public static extern void Image_StretchDirectionProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Image_StretchDirectionProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Image_StretchDirectionProperty_get")]
  #endif
  public static extern IntPtr Image_StretchDirectionProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ImageAtlasList")]
  #else
  [DllImport("Noesis", EntryPoint="new_ImageAtlasList")]
  #endif
  public static extern IntPtr new_ImageAtlasList();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ImageAtlasList")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ImageAtlasList")]
  #endif
  public static extern void delete_ImageAtlasList(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ImageAtlasList_Add")]
  #else
  [DllImport("Noesis", EntryPoint="ImageAtlasList_Add")]
  #endif
  public static extern void ImageAtlasList_Add(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ImageAtlasList_Count")]
  #else
  [DllImport("Noesis", EntryPoint="ImageAtlasList_Count")]
  #endif
  public static extern uint ImageAtlasList_Count(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ImageAtlasList_Get")]
  #else
  [DllImport("Noesis", EntryPoint="ImageAtlasList_Get")]
  #endif
  public static extern IntPtr ImageAtlasList_Get(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ImageAtlasList_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="ImageAtlasList_CreateRenderProxy")]
  #endif
  public static extern void ImageAtlasList_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ImageAtlasList_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="ImageAtlasList_UpdateRenderProxy")]
  #endif
  public static extern void ImageAtlasList_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ImageAtlasList_UnregisterRenderer")]
  #else
  [DllImport("Noesis", EntryPoint="ImageAtlasList_UnregisterRenderer")]
  #endif
  public static extern void ImageAtlasList_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TileBrush")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TileBrush")]
  #endif
  public static extern void delete_TileBrush(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_GetAlignmentX")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_GetAlignmentX")]
  #endif
  public static extern int TileBrush_GetAlignmentX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_SetAlignmentX")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_SetAlignmentX")]
  #endif
  public static extern void TileBrush_SetAlignmentX(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_GetAlignmentY")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_GetAlignmentY")]
  #endif
  public static extern int TileBrush_GetAlignmentY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_SetAlignmentY")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_SetAlignmentY")]
  #endif
  public static extern void TileBrush_SetAlignmentY(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_GetStretch")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_GetStretch")]
  #endif
  public static extern int TileBrush_GetStretch(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_SetStretch")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_SetStretch")]
  #endif
  public static extern void TileBrush_SetStretch(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_GetTileMode")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_GetTileMode")]
  #endif
  public static extern int TileBrush_GetTileMode(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_SetTileMode")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_SetTileMode")]
  #endif
  public static extern void TileBrush_SetTileMode(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_GetViewbox")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_GetViewbox")]
  #endif
  public static extern IntPtr TileBrush_GetViewbox(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_SetViewbox")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_SetViewbox")]
  #endif
  public static extern void TileBrush_SetViewbox(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_GetViewboxUnits")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_GetViewboxUnits")]
  #endif
  public static extern int TileBrush_GetViewboxUnits(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_SetViewboxUnits")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_SetViewboxUnits")]
  #endif
  public static extern void TileBrush_SetViewboxUnits(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_GetViewport")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_GetViewport")]
  #endif
  public static extern IntPtr TileBrush_GetViewport(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_SetViewport")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_SetViewport")]
  #endif
  public static extern void TileBrush_SetViewport(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_GetViewportUnits")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_GetViewportUnits")]
  #endif
  public static extern int TileBrush_GetViewportUnits(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_SetViewportUnits")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_SetViewportUnits")]
  #endif
  public static extern void TileBrush_SetViewportUnits(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_UpdateRenderProxy")]
  #endif
  public static extern void TileBrush_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_AlignmentXProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_AlignmentXProperty_set")]
  #endif
  public static extern void TileBrush_AlignmentXProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_AlignmentXProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_AlignmentXProperty_get")]
  #endif
  public static extern IntPtr TileBrush_AlignmentXProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_AlignmentYProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_AlignmentYProperty_set")]
  #endif
  public static extern void TileBrush_AlignmentYProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_AlignmentYProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_AlignmentYProperty_get")]
  #endif
  public static extern IntPtr TileBrush_AlignmentYProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_StretchProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_StretchProperty_set")]
  #endif
  public static extern void TileBrush_StretchProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_StretchProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_StretchProperty_get")]
  #endif
  public static extern IntPtr TileBrush_StretchProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_TileModeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_TileModeProperty_set")]
  #endif
  public static extern void TileBrush_TileModeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_TileModeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_TileModeProperty_get")]
  #endif
  public static extern IntPtr TileBrush_TileModeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_ViewboxProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_ViewboxProperty_set")]
  #endif
  public static extern void TileBrush_ViewboxProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_ViewboxProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_ViewboxProperty_get")]
  #endif
  public static extern IntPtr TileBrush_ViewboxProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_ViewboxUnitsProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_ViewboxUnitsProperty_set")]
  #endif
  public static extern void TileBrush_ViewboxUnitsProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_ViewboxUnitsProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_ViewboxUnitsProperty_get")]
  #endif
  public static extern IntPtr TileBrush_ViewboxUnitsProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_ViewportProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_ViewportProperty_set")]
  #endif
  public static extern void TileBrush_ViewportProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_ViewportProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_ViewportProperty_get")]
  #endif
  public static extern IntPtr TileBrush_ViewportProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_ViewportUnitsProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_ViewportUnitsProperty_set")]
  #endif
  public static extern void TileBrush_ViewportUnitsProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_ViewportUnitsProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_ViewportUnitsProperty_get")]
  #endif
  public static extern IntPtr TileBrush_ViewportUnitsProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ImageBrush")]
  #else
  [DllImport("Noesis", EntryPoint="new_ImageBrush")]
  #endif
  public static extern IntPtr new_ImageBrush();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ImageBrush")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ImageBrush")]
  #endif
  public static extern void delete_ImageBrush(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ImageBrush_GetImageSource")]
  #else
  [DllImport("Noesis", EntryPoint="ImageBrush_GetImageSource")]
  #endif
  public static extern IntPtr ImageBrush_GetImageSource(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ImageBrush_SetImageSource")]
  #else
  [DllImport("Noesis", EntryPoint="ImageBrush_SetImageSource")]
  #endif
  public static extern void ImageBrush_SetImageSource(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ImageBrush_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="ImageBrush_CreateRenderProxy")]
  #endif
  public static extern void ImageBrush_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ImageBrush_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="ImageBrush_UpdateRenderProxy")]
  #endif
  public static extern void ImageBrush_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ImageBrush_ImageSourceProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ImageBrush_ImageSourceProperty_set")]
  #endif
  public static extern void ImageBrush_ImageSourceProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ImageBrush_ImageSourceProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ImageBrush_ImageSourceProperty_get")]
  #endif
  public static extern IntPtr ImageBrush_ImageSourceProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_InputBinding__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_InputBinding__SWIG_0")]
  #endif
  public static extern IntPtr new_InputBinding__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_InputBinding__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_InputBinding__SWIG_1")]
  #endif
  public static extern IntPtr new_InputBinding__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_InputBinding")]
  #else
  [DllImport("Noesis", EntryPoint="delete_InputBinding")]
  #endif
  public static extern void delete_InputBinding(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="InputBinding_GetCommand")]
  #else
  [DllImport("Noesis", EntryPoint="InputBinding_GetCommand")]
  #endif
  public static extern IntPtr InputBinding_GetCommand(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="InputBinding_SetCommand")]
  #else
  [DllImport("Noesis", EntryPoint="InputBinding_SetCommand")]
  #endif
  public static extern void InputBinding_SetCommand(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="InputBinding_GetCommandParameter")]
  #else
  [DllImport("Noesis", EntryPoint="InputBinding_GetCommandParameter")]
  #endif
  public static extern IntPtr InputBinding_GetCommandParameter(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="InputBinding_SetCommandParameter")]
  #else
  [DllImport("Noesis", EntryPoint="InputBinding_SetCommandParameter")]
  #endif
  public static extern void InputBinding_SetCommandParameter(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="InputBinding_GetCommandTarget")]
  #else
  [DllImport("Noesis", EntryPoint="InputBinding_GetCommandTarget")]
  #endif
  public static extern IntPtr InputBinding_GetCommandTarget(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="InputBinding_SetCommandTarget")]
  #else
  [DllImport("Noesis", EntryPoint="InputBinding_SetCommandTarget")]
  #endif
  public static extern void InputBinding_SetCommandTarget(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="InputBinding_GetGesture")]
  #else
  [DllImport("Noesis", EntryPoint="InputBinding_GetGesture")]
  #endif
  public static extern IntPtr InputBinding_GetGesture(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="InputBinding_SetGesture")]
  #else
  [DllImport("Noesis", EntryPoint="InputBinding_SetGesture")]
  #endif
  public static extern void InputBinding_SetGesture(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_InputGesture")]
  #else
  [DllImport("Noesis", EntryPoint="delete_InputGesture")]
  #endif
  public static extern void delete_InputGesture(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="InputGesture_Matches")]
  #else
  [DllImport("Noesis", EntryPoint="InputGesture_Matches")]
  #endif
  public static extern bool InputGesture_Matches(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ItemCollection__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_ItemCollection__SWIG_0")]
  #endif
  public static extern IntPtr new_ItemCollection__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ItemCollection__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_ItemCollection__SWIG_1")]
  #endif
  public static extern IntPtr new_ItemCollection__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ItemCollection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ItemCollection")]
  #endif
  public static extern void delete_ItemCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_SetItemsControlOwner")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_SetItemsControlOwner")]
  #endif
  public static extern void ItemCollection_SetItemsControlOwner(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_SetView")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_SetView")]
  #endif
  public static extern void ItemCollection_SetView(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_IsReadOnly")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_IsReadOnly")]
  #endif
  public static extern bool ItemCollection_IsReadOnly(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_CanFilter")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_CanFilter")]
  #endif
  public static extern bool ItemCollection_CanFilter(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_CanGroup")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_CanGroup")]
  #endif
  public static extern bool ItemCollection_CanGroup(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_CanSort")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_CanSort")]
  #endif
  public static extern bool ItemCollection_CanSort(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_Contains")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_Contains")]
  #endif
  public static extern bool ItemCollection_Contains(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_CurrentItem")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_CurrentItem")]
  #endif
  public static extern IntPtr ItemCollection_CurrentItem(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_CurrentPosition")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_CurrentPosition")]
  #endif
  public static extern int ItemCollection_CurrentPosition(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_IsCurrentAfterLast")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_IsCurrentAfterLast")]
  #endif
  public static extern bool ItemCollection_IsCurrentAfterLast(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_IsCurrentBeforeFirst")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_IsCurrentBeforeFirst")]
  #endif
  public static extern bool ItemCollection_IsCurrentBeforeFirst(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_IsEmpty")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_IsEmpty")]
  #endif
  public static extern bool ItemCollection_IsEmpty(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_MoveCurrentTo")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_MoveCurrentTo")]
  #endif
  public static extern bool ItemCollection_MoveCurrentTo(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_MoveCurrentToFirst")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_MoveCurrentToFirst")]
  #endif
  public static extern bool ItemCollection_MoveCurrentToFirst(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_MoveCurrentToLast")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_MoveCurrentToLast")]
  #endif
  public static extern bool ItemCollection_MoveCurrentToLast(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_MoveCurrentToNext")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_MoveCurrentToNext")]
  #endif
  public static extern bool ItemCollection_MoveCurrentToNext(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_MoveCurrentToPosition")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_MoveCurrentToPosition")]
  #endif
  public static extern bool ItemCollection_MoveCurrentToPosition(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_MoveCurrentToPrevious")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_MoveCurrentToPrevious")]
  #endif
  public static extern bool ItemCollection_MoveCurrentToPrevious(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_Refresh")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_Refresh")]
  #endif
  public static extern void ItemCollection_Refresh(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_CurrentChanged")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_CurrentChanged")]
  #endif
  public static extern IntPtr ItemCollection_CurrentChanged(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_Count")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_Count")]
  #endif
  public static extern uint ItemCollection_Count(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_Get")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_Get")]
  #endif
  public static extern IntPtr ItemCollection_Get(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_Set__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_Set__SWIG_0")]
  #endif
  public static extern void ItemCollection_Set__SWIG_0(HandleRef jarg1, uint jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_Set__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_Set__SWIG_1")]
  #endif
  public static extern void ItemCollection_Set__SWIG_1(HandleRef jarg1, uint jarg2, string jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_Add__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_Add__SWIG_0")]
  #endif
  public static extern uint ItemCollection_Add__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_Add__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_Add__SWIG_1")]
  #endif
  public static extern uint ItemCollection_Add__SWIG_1(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_Clear")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_Clear")]
  #endif
  public static extern void ItemCollection_Clear(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_IndexOf")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_IndexOf")]
  #endif
  public static extern int ItemCollection_IndexOf(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_Insert__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_Insert__SWIG_0")]
  #endif
  public static extern void ItemCollection_Insert__SWIG_0(HandleRef jarg1, uint jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_Insert__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_Insert__SWIG_1")]
  #endif
  public static extern void ItemCollection_Insert__SWIG_1(HandleRef jarg1, uint jarg2, string jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_Remove")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_Remove")]
  #endif
  public static extern void ItemCollection_Remove(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_RemoveAt")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_RemoveAt")]
  #endif
  public static extern void ItemCollection_RemoveAt(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_CollectionChanged")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_CollectionChanged")]
  #endif
  public static extern IntPtr ItemCollection_CollectionChanged(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_IsInitialized")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_IsInitialized")]
  #endif
  public static extern bool ItemCollection_IsInitialized(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_Init")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_Init")]
  #endif
  public static extern void ItemCollection_Init(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ItemsPanelTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="new_ItemsPanelTemplate")]
  #endif
  public static extern IntPtr new_ItemsPanelTemplate();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ItemsPanelTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ItemsPanelTemplate")]
  #endif
  public static extern void delete_ItemsPanelTemplate(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ItemsPresenter")]
  #else
  [DllImport("Noesis", EntryPoint="new_ItemsPresenter")]
  #endif
  public static extern IntPtr new_ItemsPresenter();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ItemsPresenter")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ItemsPresenter")]
  #endif
  public static extern void delete_ItemsPresenter(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_KeyBinding__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_KeyBinding__SWIG_0")]
  #endif
  public static extern IntPtr new_KeyBinding__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_KeyBinding__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_KeyBinding__SWIG_1")]
  #endif
  public static extern IntPtr new_KeyBinding__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_KeyBinding")]
  #else
  [DllImport("Noesis", EntryPoint="delete_KeyBinding")]
  #endif
  public static extern void delete_KeyBinding(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyBinding_GetKey")]
  #else
  [DllImport("Noesis", EntryPoint="KeyBinding_GetKey")]
  #endif
  public static extern uint KeyBinding_GetKey(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyBinding_GetModifiers")]
  #else
  [DllImport("Noesis", EntryPoint="KeyBinding_GetModifiers")]
  #endif
  public static extern uint KeyBinding_GetModifiers(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Keyboard")]
  #else
  [DllImport("Noesis", EntryPoint="new_Keyboard")]
  #endif
  public static extern IntPtr new_Keyboard(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Keyboard")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Keyboard")]
  #endif
  public static extern void delete_Keyboard(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Keyboard_ResetState")]
  #else
  [DllImport("Noesis", EntryPoint="Keyboard_ResetState")]
  #endif
  public static extern void Keyboard_ResetState(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Keyboard_GetModifiers")]
  #else
  [DllImport("Noesis", EntryPoint="Keyboard_GetModifiers")]
  #endif
  public static extern uint Keyboard_GetModifiers(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Keyboard_GetKeyStates")]
  #else
  [DllImport("Noesis", EntryPoint="Keyboard_GetKeyStates")]
  #endif
  public static extern uint Keyboard_GetKeyStates(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Keyboard_IsKeyDown")]
  #else
  [DllImport("Noesis", EntryPoint="Keyboard_IsKeyDown")]
  #endif
  public static extern bool Keyboard_IsKeyDown(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Keyboard_IsKeyUp")]
  #else
  [DllImport("Noesis", EntryPoint="Keyboard_IsKeyUp")]
  #endif
  public static extern bool Keyboard_IsKeyUp(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Keyboard_IsKeyToggled")]
  #else
  [DllImport("Noesis", EntryPoint="Keyboard_IsKeyToggled")]
  #endif
  public static extern bool Keyboard_IsKeyToggled(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Keyboard_GetFocused")]
  #else
  [DllImport("Noesis", EntryPoint="Keyboard_GetFocused")]
  #endif
  public static extern IntPtr Keyboard_GetFocused(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Keyboard_Focus")]
  #else
  [DllImport("Noesis", EntryPoint="Keyboard_Focus")]
  #endif
  public static extern IntPtr Keyboard_Focus(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_KeyboardNavigation__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_KeyboardNavigation__SWIG_0")]
  #endif
  public static extern IntPtr new_KeyboardNavigation__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_KeyboardNavigation__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_KeyboardNavigation__SWIG_1")]
  #endif
  public static extern IntPtr new_KeyboardNavigation__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_KeyboardNavigation")]
  #else
  [DllImport("Noesis", EntryPoint="delete_KeyboardNavigation")]
  #endif
  public static extern void delete_KeyboardNavigation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_GetTabNavigation")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_GetTabNavigation")]
  #endif
  public static extern int KeyboardNavigation_GetTabNavigation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_SetTabNavigation")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_SetTabNavigation")]
  #endif
  public static extern void KeyboardNavigation_SetTabNavigation(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_GetControlTabNavigation")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_GetControlTabNavigation")]
  #endif
  public static extern int KeyboardNavigation_GetControlTabNavigation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_SetControlTabNavigation")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_SetControlTabNavigation")]
  #endif
  public static extern void KeyboardNavigation_SetControlTabNavigation(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_GetDirectionalNavigation")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_GetDirectionalNavigation")]
  #endif
  public static extern int KeyboardNavigation_GetDirectionalNavigation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_SetDirectionalNavigation")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_SetDirectionalNavigation")]
  #endif
  public static extern void KeyboardNavigation_SetDirectionalNavigation(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_GetAcceptsReturn")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_GetAcceptsReturn")]
  #endif
  public static extern bool KeyboardNavigation_GetAcceptsReturn(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_SetAcceptsReturn")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_SetAcceptsReturn")]
  #endif
  public static extern void KeyboardNavigation_SetAcceptsReturn(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_GetIsTabStop")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_GetIsTabStop")]
  #endif
  public static extern bool KeyboardNavigation_GetIsTabStop(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_SetIsTabStop")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_SetIsTabStop")]
  #endif
  public static extern void KeyboardNavigation_SetIsTabStop(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_GetTabIndex")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_GetTabIndex")]
  #endif
  public static extern int KeyboardNavigation_GetTabIndex(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_SetTabIndex")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_SetTabIndex")]
  #endif
  public static extern void KeyboardNavigation_SetTabIndex(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_OnVirtualEvent")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_OnVirtualEvent")]
  #endif
  public static extern void KeyboardNavigation_OnVirtualEvent(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_OnFocused")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_OnFocused")]
  #endif
  public static extern void KeyboardNavigation_OnFocused(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_PredictFocus")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_PredictFocus")]
  #endif
  public static extern IntPtr KeyboardNavigation_PredictFocus(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_AcceptsReturnProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_AcceptsReturnProperty_set")]
  #endif
  public static extern void KeyboardNavigation_AcceptsReturnProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_AcceptsReturnProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_AcceptsReturnProperty_get")]
  #endif
  public static extern IntPtr KeyboardNavigation_AcceptsReturnProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_ControlTabNavigationProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_ControlTabNavigationProperty_set")]
  #endif
  public static extern void KeyboardNavigation_ControlTabNavigationProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_ControlTabNavigationProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_ControlTabNavigationProperty_get")]
  #endif
  public static extern IntPtr KeyboardNavigation_ControlTabNavigationProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_DirectionalNavigationProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_DirectionalNavigationProperty_set")]
  #endif
  public static extern void KeyboardNavigation_DirectionalNavigationProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_DirectionalNavigationProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_DirectionalNavigationProperty_get")]
  #endif
  public static extern IntPtr KeyboardNavigation_DirectionalNavigationProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_IsTabStopProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_IsTabStopProperty_set")]
  #endif
  public static extern void KeyboardNavigation_IsTabStopProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_IsTabStopProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_IsTabStopProperty_get")]
  #endif
  public static extern IntPtr KeyboardNavigation_IsTabStopProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_TabIndexProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_TabIndexProperty_set")]
  #endif
  public static extern void KeyboardNavigation_TabIndexProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_TabIndexProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_TabIndexProperty_get")]
  #endif
  public static extern IntPtr KeyboardNavigation_TabIndexProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_TabNavigationProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_TabNavigationProperty_set")]
  #endif
  public static extern void KeyboardNavigation_TabNavigationProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_TabNavigationProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_TabNavigationProperty_get")]
  #endif
  public static extern IntPtr KeyboardNavigation_TabNavigationProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_KeyGesture__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_KeyGesture__SWIG_0")]
  #endif
  public static extern IntPtr new_KeyGesture__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_KeyGesture__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_KeyGesture__SWIG_1")]
  #endif
  public static extern IntPtr new_KeyGesture__SWIG_1(uint jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_KeyGesture__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_KeyGesture__SWIG_2")]
  #endif
  public static extern IntPtr new_KeyGesture__SWIG_2(uint jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_KeyGesture")]
  #else
  [DllImport("Noesis", EntryPoint="delete_KeyGesture")]
  #endif
  public static extern void delete_KeyGesture(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyGesture_GetKey")]
  #else
  [DllImport("Noesis", EntryPoint="KeyGesture_GetKey")]
  #endif
  public static extern uint KeyGesture_GetKey(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyGesture_GetModifiers")]
  #else
  [DllImport("Noesis", EntryPoint="KeyGesture_GetModifiers")]
  #endif
  public static extern uint KeyGesture_GetModifiers(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyGesture_GetDisplayString")]
  #else
  [DllImport("Noesis", EntryPoint="KeyGesture_GetDisplayString")]
  #endif
  public static extern IntPtr KeyGesture_GetDisplayString(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyGesture_Matches")]
  #else
  [DllImport("Noesis", EntryPoint="KeyGesture_Matches")]
  #endif
  public static extern bool KeyGesture_Matches(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Label")]
  #else
  [DllImport("Noesis", EntryPoint="new_Label")]
  #endif
  public static extern IntPtr new_Label();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Label_GetTarget")]
  #else
  [DllImport("Noesis", EntryPoint="Label_GetTarget")]
  #endif
  public static extern IntPtr Label_GetTarget(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Label_SetTarget")]
  #else
  [DllImport("Noesis", EntryPoint="Label_SetTarget")]
  #endif
  public static extern void Label_SetTarget(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Label_TargetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Label_TargetProperty_set")]
  #endif
  public static extern void Label_TargetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Label_TargetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Label_TargetProperty_get")]
  #endif
  public static extern IntPtr Label_TargetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Label")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Label")]
  #endif
  public static extern void delete_Label(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FindLayer")]
  #else
  [DllImport("Noesis", EntryPoint="FindLayer")]
  #endif
  public static extern IntPtr FindLayer(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FindRootLayer")]
  #else
  [DllImport("Noesis", EntryPoint="FindRootLayer")]
  #endif
  public static extern IntPtr FindRootLayer(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Line")]
  #else
  [DllImport("Noesis", EntryPoint="new_Line")]
  #endif
  public static extern IntPtr new_Line();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Line")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Line")]
  #endif
  public static extern void delete_Line(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Line_GetX1")]
  #else
  [DllImport("Noesis", EntryPoint="Line_GetX1")]
  #endif
  public static extern float Line_GetX1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Line_SetX1")]
  #else
  [DllImport("Noesis", EntryPoint="Line_SetX1")]
  #endif
  public static extern void Line_SetX1(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Line_GetY1")]
  #else
  [DllImport("Noesis", EntryPoint="Line_GetY1")]
  #endif
  public static extern float Line_GetY1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Line_SetY1")]
  #else
  [DllImport("Noesis", EntryPoint="Line_SetY1")]
  #endif
  public static extern void Line_SetY1(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Line_GetX2")]
  #else
  [DllImport("Noesis", EntryPoint="Line_GetX2")]
  #endif
  public static extern float Line_GetX2(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Line_SetX2")]
  #else
  [DllImport("Noesis", EntryPoint="Line_SetX2")]
  #endif
  public static extern void Line_SetX2(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Line_GetY2")]
  #else
  [DllImport("Noesis", EntryPoint="Line_GetY2")]
  #endif
  public static extern float Line_GetY2(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Line_SetY2")]
  #else
  [DllImport("Noesis", EntryPoint="Line_SetY2")]
  #endif
  public static extern void Line_SetY2(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Line_X1Property_set")]
  #else
  [DllImport("Noesis", EntryPoint="Line_X1Property_set")]
  #endif
  public static extern void Line_X1Property_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Line_X1Property_get")]
  #else
  [DllImport("Noesis", EntryPoint="Line_X1Property_get")]
  #endif
  public static extern IntPtr Line_X1Property_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Line_Y1Property_set")]
  #else
  [DllImport("Noesis", EntryPoint="Line_Y1Property_set")]
  #endif
  public static extern void Line_Y1Property_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Line_Y1Property_get")]
  #else
  [DllImport("Noesis", EntryPoint="Line_Y1Property_get")]
  #endif
  public static extern IntPtr Line_Y1Property_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Line_X2Property_set")]
  #else
  [DllImport("Noesis", EntryPoint="Line_X2Property_set")]
  #endif
  public static extern void Line_X2Property_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Line_X2Property_get")]
  #else
  [DllImport("Noesis", EntryPoint="Line_X2Property_get")]
  #endif
  public static extern IntPtr Line_X2Property_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Line_Y2Property_set")]
  #else
  [DllImport("Noesis", EntryPoint="Line_Y2Property_set")]
  #endif
  public static extern void Line_Y2Property_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Line_Y2Property_get")]
  #else
  [DllImport("Noesis", EntryPoint="Line_Y2Property_get")]
  #endif
  public static extern IntPtr Line_Y2Property_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_LinearGradientBrush")]
  #else
  [DllImport("Noesis", EntryPoint="new_LinearGradientBrush")]
  #endif
  public static extern IntPtr new_LinearGradientBrush();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LinearGradientBrush_GetStartPoint")]
  #else
  [DllImport("Noesis", EntryPoint="LinearGradientBrush_GetStartPoint")]
  #endif
  public static extern IntPtr LinearGradientBrush_GetStartPoint(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LinearGradientBrush_SetStartPoint")]
  #else
  [DllImport("Noesis", EntryPoint="LinearGradientBrush_SetStartPoint")]
  #endif
  public static extern void LinearGradientBrush_SetStartPoint(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LinearGradientBrush_GetEndPoint")]
  #else
  [DllImport("Noesis", EntryPoint="LinearGradientBrush_GetEndPoint")]
  #endif
  public static extern IntPtr LinearGradientBrush_GetEndPoint(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LinearGradientBrush_SetEndPoint")]
  #else
  [DllImport("Noesis", EntryPoint="LinearGradientBrush_SetEndPoint")]
  #endif
  public static extern void LinearGradientBrush_SetEndPoint(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LinearGradientBrush_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="LinearGradientBrush_CreateRenderProxy")]
  #endif
  public static extern void LinearGradientBrush_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LinearGradientBrush_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="LinearGradientBrush_UpdateRenderProxy")]
  #endif
  public static extern void LinearGradientBrush_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LinearGradientBrush_EndPointProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="LinearGradientBrush_EndPointProperty_set")]
  #endif
  public static extern void LinearGradientBrush_EndPointProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LinearGradientBrush_EndPointProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="LinearGradientBrush_EndPointProperty_get")]
  #endif
  public static extern IntPtr LinearGradientBrush_EndPointProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LinearGradientBrush_StartPointProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="LinearGradientBrush_StartPointProperty_set")]
  #endif
  public static extern void LinearGradientBrush_StartPointProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LinearGradientBrush_StartPointProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="LinearGradientBrush_StartPointProperty_get")]
  #endif
  public static extern IntPtr LinearGradientBrush_StartPointProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_LinearGradientBrush")]
  #else
  [DllImport("Noesis", EntryPoint="delete_LinearGradientBrush")]
  #endif
  public static extern void delete_LinearGradientBrush(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_LineGeometry__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_LineGeometry__SWIG_0")]
  #endif
  public static extern IntPtr new_LineGeometry__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_LineGeometry__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_LineGeometry__SWIG_1")]
  #endif
  public static extern IntPtr new_LineGeometry__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LineGeometry_GetEndPoint")]
  #else
  [DllImport("Noesis", EntryPoint="LineGeometry_GetEndPoint")]
  #endif
  public static extern IntPtr LineGeometry_GetEndPoint(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LineGeometry_SetEndPoint")]
  #else
  [DllImport("Noesis", EntryPoint="LineGeometry_SetEndPoint")]
  #endif
  public static extern void LineGeometry_SetEndPoint(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LineGeometry_GetStartPoint")]
  #else
  [DllImport("Noesis", EntryPoint="LineGeometry_GetStartPoint")]
  #endif
  public static extern IntPtr LineGeometry_GetStartPoint(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LineGeometry_SetStartPoint")]
  #else
  [DllImport("Noesis", EntryPoint="LineGeometry_SetStartPoint")]
  #endif
  public static extern void LineGeometry_SetStartPoint(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LineGeometry_IsEmpty")]
  #else
  [DllImport("Noesis", EntryPoint="LineGeometry_IsEmpty")]
  #endif
  public static extern bool LineGeometry_IsEmpty(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LineGeometry_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="LineGeometry_CreateRenderProxy")]
  #endif
  public static extern void LineGeometry_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LineGeometry_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="LineGeometry_UpdateRenderProxy")]
  #endif
  public static extern void LineGeometry_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LineGeometry_EndPointProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="LineGeometry_EndPointProperty_set")]
  #endif
  public static extern void LineGeometry_EndPointProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LineGeometry_EndPointProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="LineGeometry_EndPointProperty_get")]
  #endif
  public static extern IntPtr LineGeometry_EndPointProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LineGeometry_StartPointProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="LineGeometry_StartPointProperty_set")]
  #endif
  public static extern void LineGeometry_StartPointProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LineGeometry_StartPointProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="LineGeometry_StartPointProperty_get")]
  #endif
  public static extern IntPtr LineGeometry_StartPointProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_LineGeometry")]
  #else
  [DllImport("Noesis", EntryPoint="delete_LineGeometry")]
  #endif
  public static extern void delete_LineGeometry(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ListBox")]
  #else
  [DllImport("Noesis", EntryPoint="new_ListBox")]
  #endif
  public static extern IntPtr new_ListBox();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ListBox_GetSelectedItems")]
  #else
  [DllImport("Noesis", EntryPoint="ListBox_GetSelectedItems")]
  #endif
  public static extern IntPtr ListBox_GetSelectedItems(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ListBox_GetSelectionMode")]
  #else
  [DllImport("Noesis", EntryPoint="ListBox_GetSelectionMode")]
  #endif
  public static extern int ListBox_GetSelectionMode(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ListBox_SetSelectionMode")]
  #else
  [DllImport("Noesis", EntryPoint="ListBox_SetSelectionMode")]
  #endif
  public static extern void ListBox_SetSelectionMode(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ListBox_ScrollIntoView")]
  #else
  [DllImport("Noesis", EntryPoint="ListBox_ScrollIntoView")]
  #endif
  public static extern void ListBox_ScrollIntoView(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ListBox_UnselectAll")]
  #else
  [DllImport("Noesis", EntryPoint="ListBox_UnselectAll")]
  #endif
  public static extern void ListBox_UnselectAll(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ListBox_ItemClicked")]
  #else
  [DllImport("Noesis", EntryPoint="ListBox_ItemClicked")]
  #endif
  public static extern void ListBox_ItemClicked(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ListBox_ItemEntered")]
  #else
  [DllImport("Noesis", EntryPoint="ListBox_ItemEntered")]
  #endif
  public static extern void ListBox_ItemEntered(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ListBox_SelectedItemsProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ListBox_SelectedItemsProperty_set")]
  #endif
  public static extern void ListBox_SelectedItemsProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ListBox_SelectedItemsProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ListBox_SelectedItemsProperty_get")]
  #endif
  public static extern IntPtr ListBox_SelectedItemsProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ListBox_SelectionModeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ListBox_SelectionModeProperty_set")]
  #endif
  public static extern void ListBox_SelectionModeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ListBox_SelectionModeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ListBox_SelectionModeProperty_get")]
  #endif
  public static extern IntPtr ListBox_SelectionModeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ListBox")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ListBox")]
  #endif
  public static extern void delete_ListBox(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LogicalTreeHelper_GetParent")]
  #else
  [DllImport("Noesis", EntryPoint="LogicalTreeHelper_GetParent")]
  #endif
  public static extern IntPtr LogicalTreeHelper_GetParent(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LogicalTreeHelper_GetChildrenCount")]
  #else
  [DllImport("Noesis", EntryPoint="LogicalTreeHelper_GetChildrenCount")]
  #endif
  public static extern uint LogicalTreeHelper_GetChildrenCount(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LogicalTreeHelper_GetChild")]
  #else
  [DllImport("Noesis", EntryPoint="LogicalTreeHelper_GetChild")]
  #endif
  public static extern IntPtr LogicalTreeHelper_GetChild(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LogicalTreeHelper_FindName")]
  #else
  [DllImport("Noesis", EntryPoint="LogicalTreeHelper_FindName")]
  #endif
  public static extern IntPtr LogicalTreeHelper_FindName(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LogicalTreeHelper_PrintTree")]
  #else
  [DllImport("Noesis", EntryPoint="LogicalTreeHelper_PrintTree")]
  #endif
  public static extern void LogicalTreeHelper_PrintTree(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_LogicalTreeHelper")]
  #else
  [DllImport("Noesis", EntryPoint="new_LogicalTreeHelper")]
  #endif
  public static extern IntPtr new_LogicalTreeHelper();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_LogicalTreeHelper")]
  #else
  [DllImport("Noesis", EntryPoint="delete_LogicalTreeHelper")]
  #endif
  public static extern void delete_LogicalTreeHelper(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Projection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Projection")]
  #endif
  public static extern void delete_Projection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Projection_GetIdentity")]
  #else
  [DllImport("Noesis", EntryPoint="Projection_GetIdentity")]
  #endif
  public static extern IntPtr Projection_GetIdentity();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Projection_IsIdentity")]
  #else
  [DllImport("Noesis", EntryPoint="Projection_IsIdentity")]
  #endif
  public static extern bool Projection_IsIdentity(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Projection_GetProjection")]
  #else
  [DllImport("Noesis", EntryPoint="Projection_GetProjection")]
  #endif
  public static extern IntPtr Projection_GetProjection(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Matrix3DProjection")]
  #else
  [DllImport("Noesis", EntryPoint="new_Matrix3DProjection")]
  #endif
  public static extern IntPtr new_Matrix3DProjection();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Matrix3DProjection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Matrix3DProjection")]
  #endif
  public static extern void delete_Matrix3DProjection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix3DProjection_GetProjectionMatrix")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix3DProjection_GetProjectionMatrix")]
  #endif
  public static extern IntPtr Matrix3DProjection_GetProjectionMatrix(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix3DProjection_SetProjectionMatrix")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix3DProjection_SetProjectionMatrix")]
  #endif
  public static extern void Matrix3DProjection_SetProjectionMatrix(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix3DProjection_IsIdentity")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix3DProjection_IsIdentity")]
  #endif
  public static extern bool Matrix3DProjection_IsIdentity(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix3DProjection_GetProjection")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix3DProjection_GetProjection")]
  #endif
  public static extern IntPtr Matrix3DProjection_GetProjection(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix3DProjection_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix3DProjection_CreateRenderProxy")]
  #endif
  public static extern void Matrix3DProjection_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix3DProjection_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix3DProjection_UpdateRenderProxy")]
  #endif
  public static extern void Matrix3DProjection_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix3DProjection_UnregisterRenderer")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix3DProjection_UnregisterRenderer")]
  #endif
  public static extern void Matrix3DProjection_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix3DProjection_ProjectionMatrixProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix3DProjection_ProjectionMatrixProperty_set")]
  #endif
  public static extern void Matrix3DProjection_ProjectionMatrixProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix3DProjection_ProjectionMatrixProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix3DProjection_ProjectionMatrixProperty_get")]
  #endif
  public static extern IntPtr Matrix3DProjection_ProjectionMatrixProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_MatrixTransform__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_MatrixTransform__SWIG_0")]
  #endif
  public static extern IntPtr new_MatrixTransform__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_MatrixTransform__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_MatrixTransform__SWIG_1")]
  #endif
  public static extern IntPtr new_MatrixTransform__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MatrixTransform_GetMatrix")]
  #else
  [DllImport("Noesis", EntryPoint="MatrixTransform_GetMatrix")]
  #endif
  public static extern IntPtr MatrixTransform_GetMatrix(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MatrixTransform_SetMatrix")]
  #else
  [DllImport("Noesis", EntryPoint="MatrixTransform_SetMatrix")]
  #endif
  public static extern void MatrixTransform_SetMatrix(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MatrixTransform_GetTransform")]
  #else
  [DllImport("Noesis", EntryPoint="MatrixTransform_GetTransform")]
  #endif
  public static extern IntPtr MatrixTransform_GetTransform(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MatrixTransform_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="MatrixTransform_CreateRenderProxy")]
  #endif
  public static extern void MatrixTransform_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MatrixTransform_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="MatrixTransform_UpdateRenderProxy")]
  #endif
  public static extern void MatrixTransform_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MatrixTransform_UnregisterRenderer")]
  #else
  [DllImport("Noesis", EntryPoint="MatrixTransform_UnregisterRenderer")]
  #endif
  public static extern void MatrixTransform_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MatrixTransform_MatrixProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="MatrixTransform_MatrixProperty_set")]
  #endif
  public static extern void MatrixTransform_MatrixProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MatrixTransform_MatrixProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="MatrixTransform_MatrixProperty_get")]
  #endif
  public static extern IntPtr MatrixTransform_MatrixProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_MatrixTransform")]
  #else
  [DllImport("Noesis", EntryPoint="delete_MatrixTransform")]
  #endif
  public static extern void delete_MatrixTransform(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Menu")]
  #else
  [DllImport("Noesis", EntryPoint="new_Menu")]
  #endif
  public static extern IntPtr new_Menu();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Menu_GetIsMainMenu")]
  #else
  [DllImport("Noesis", EntryPoint="Menu_GetIsMainMenu")]
  #endif
  public static extern bool Menu_GetIsMainMenu(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Menu_SetIsMainMenu")]
  #else
  [DllImport("Noesis", EntryPoint="Menu_SetIsMainMenu")]
  #endif
  public static extern void Menu_SetIsMainMenu(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Menu_GetActivated")]
  #else
  [DllImport("Noesis", EntryPoint="Menu_GetActivated")]
  #endif
  public static extern bool Menu_GetActivated(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Menu_SetActivated")]
  #else
  [DllImport("Noesis", EntryPoint="Menu_SetActivated")]
  #endif
  public static extern void Menu_SetActivated(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Menu_IsMainMenuProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Menu_IsMainMenuProperty_set")]
  #endif
  public static extern void Menu_IsMainMenuProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Menu_IsMainMenuProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Menu_IsMainMenuProperty_get")]
  #endif
  public static extern IntPtr Menu_IsMainMenuProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Menu")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Menu")]
  #endif
  public static extern void delete_Menu(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_MenuItem")]
  #else
  [DllImport("Noesis", EntryPoint="new_MenuItem")]
  #endif
  public static extern IntPtr new_MenuItem();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_GetCommandParameter")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_GetCommandParameter")]
  #endif
  public static extern IntPtr MenuItem_GetCommandParameter(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_SetCommandParameter")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_SetCommandParameter")]
  #endif
  public static extern void MenuItem_SetCommandParameter(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_GetCommand")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_GetCommand")]
  #endif
  public static extern IntPtr MenuItem_GetCommand(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_SetCommand")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_SetCommand")]
  #endif
  public static extern void MenuItem_SetCommand(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_GetCommandTarget")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_GetCommandTarget")]
  #endif
  public static extern IntPtr MenuItem_GetCommandTarget(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_SetCommandTarget")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_SetCommandTarget")]
  #endif
  public static extern void MenuItem_SetCommandTarget(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_GetIcon")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_GetIcon")]
  #endif
  public static extern IntPtr MenuItem_GetIcon(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_SetIcon")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_SetIcon")]
  #endif
  public static extern void MenuItem_SetIcon(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_GetInputGestureText")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_GetInputGestureText")]
  #endif
  public static extern IntPtr MenuItem_GetInputGestureText(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_SetInputGestureText")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_SetInputGestureText")]
  #endif
  public static extern void MenuItem_SetInputGestureText(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_GetIsCheckable")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_GetIsCheckable")]
  #endif
  public static extern bool MenuItem_GetIsCheckable(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_SetIsCheckable")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_SetIsCheckable")]
  #endif
  public static extern void MenuItem_SetIsCheckable(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_GetIsChecked")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_GetIsChecked")]
  #endif
  public static extern bool MenuItem_GetIsChecked(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_SetIsChecked")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_SetIsChecked")]
  #endif
  public static extern void MenuItem_SetIsChecked(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_GetIsHighlighted")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_GetIsHighlighted")]
  #endif
  public static extern bool MenuItem_GetIsHighlighted(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_GetIsPressed")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_GetIsPressed")]
  #endif
  public static extern bool MenuItem_GetIsPressed(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_GetIsSubmenuOpen")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_GetIsSubmenuOpen")]
  #endif
  public static extern bool MenuItem_GetIsSubmenuOpen(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_SetIsSubmenuOpen")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_SetIsSubmenuOpen")]
  #endif
  public static extern void MenuItem_SetIsSubmenuOpen(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_GetIsSuspendingPopupAnimation")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_GetIsSuspendingPopupAnimation")]
  #endif
  public static extern bool MenuItem_GetIsSuspendingPopupAnimation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_GetRole")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_GetRole")]
  #endif
  public static extern int MenuItem_GetRole(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_GetStaysOpenOnClick")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_GetStaysOpenOnClick")]
  #endif
  public static extern bool MenuItem_GetStaysOpenOnClick(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_SetStaysOpenOnClick")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_SetStaysOpenOnClick")]
  #endif
  public static extern void MenuItem_SetStaysOpenOnClick(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_CommandParameterProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_CommandParameterProperty_set")]
  #endif
  public static extern void MenuItem_CommandParameterProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_CommandParameterProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_CommandParameterProperty_get")]
  #endif
  public static extern IntPtr MenuItem_CommandParameterProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_CommandProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_CommandProperty_set")]
  #endif
  public static extern void MenuItem_CommandProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_CommandProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_CommandProperty_get")]
  #endif
  public static extern IntPtr MenuItem_CommandProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_CommandTargetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_CommandTargetProperty_set")]
  #endif
  public static extern void MenuItem_CommandTargetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_CommandTargetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_CommandTargetProperty_get")]
  #endif
  public static extern IntPtr MenuItem_CommandTargetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_IconProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_IconProperty_set")]
  #endif
  public static extern void MenuItem_IconProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_IconProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_IconProperty_get")]
  #endif
  public static extern IntPtr MenuItem_IconProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_InputGestureTextProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_InputGestureTextProperty_set")]
  #endif
  public static extern void MenuItem_InputGestureTextProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_InputGestureTextProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_InputGestureTextProperty_get")]
  #endif
  public static extern IntPtr MenuItem_InputGestureTextProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_IsCheckableProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_IsCheckableProperty_set")]
  #endif
  public static extern void MenuItem_IsCheckableProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_IsCheckableProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_IsCheckableProperty_get")]
  #endif
  public static extern IntPtr MenuItem_IsCheckableProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_IsCheckedProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_IsCheckedProperty_set")]
  #endif
  public static extern void MenuItem_IsCheckedProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_IsCheckedProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_IsCheckedProperty_get")]
  #endif
  public static extern IntPtr MenuItem_IsCheckedProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_IsHighlightedProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_IsHighlightedProperty_set")]
  #endif
  public static extern void MenuItem_IsHighlightedProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_IsHighlightedProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_IsHighlightedProperty_get")]
  #endif
  public static extern IntPtr MenuItem_IsHighlightedProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_IsPressedProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_IsPressedProperty_set")]
  #endif
  public static extern void MenuItem_IsPressedProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_IsPressedProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_IsPressedProperty_get")]
  #endif
  public static extern IntPtr MenuItem_IsPressedProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_IsSubmenuOpenProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_IsSubmenuOpenProperty_set")]
  #endif
  public static extern void MenuItem_IsSubmenuOpenProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_IsSubmenuOpenProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_IsSubmenuOpenProperty_get")]
  #endif
  public static extern IntPtr MenuItem_IsSubmenuOpenProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_IsSuspendingPopupAnimationProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_IsSuspendingPopupAnimationProperty_set")]
  #endif
  public static extern void MenuItem_IsSuspendingPopupAnimationProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_IsSuspendingPopupAnimationProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_IsSuspendingPopupAnimationProperty_get")]
  #endif
  public static extern IntPtr MenuItem_IsSuspendingPopupAnimationProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_RoleProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_RoleProperty_set")]
  #endif
  public static extern void MenuItem_RoleProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_RoleProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_RoleProperty_get")]
  #endif
  public static extern IntPtr MenuItem_RoleProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_StaysOpenOnClickProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_StaysOpenOnClickProperty_set")]
  #endif
  public static extern void MenuItem_StaysOpenOnClickProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_StaysOpenOnClickProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_StaysOpenOnClickProperty_get")]
  #endif
  public static extern IntPtr MenuItem_StaysOpenOnClickProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_SeparatorStyleKey_set")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_SeparatorStyleKey_set")]
  #endif
  public static extern void MenuItem_SeparatorStyleKey_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_SeparatorStyleKey_get")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_SeparatorStyleKey_get")]
  #endif
  public static extern IntPtr MenuItem_SeparatorStyleKey_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_MenuItem")]
  #else
  [DllImport("Noesis", EntryPoint="delete_MenuItem")]
  #endif
  public static extern void delete_MenuItem(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UserControl_GetSource")]
  #else
  [DllImport("Noesis", EntryPoint="UserControl_GetSource")]
  #endif
  public static extern IntPtr UserControl_GetSource(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UserControl_SourceProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="UserControl_SourceProperty_set")]
  #endif
  public static extern void UserControl_SourceProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UserControl_SourceProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="UserControl_SourceProperty_get")]
  #endif
  public static extern IntPtr UserControl_SourceProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_UserControl")]
  #else
  [DllImport("Noesis", EntryPoint="new_UserControl")]
  #endif
  public static extern IntPtr new_UserControl();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_UserControl")]
  #else
  [DllImport("Noesis", EntryPoint="delete_UserControl")]
  #endif
  public static extern void delete_UserControl(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_MessageDialog")]
  #else
  [DllImport("Noesis", EntryPoint="new_MessageDialog")]
  #endif
  public static extern IntPtr new_MessageDialog();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_MessageDialog")]
  #else
  [DllImport("Noesis", EntryPoint="delete_MessageDialog")]
  #endif
  public static extern void delete_MessageDialog(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MessageDialog_GetMessage")]
  #else
  [DllImport("Noesis", EntryPoint="MessageDialog_GetMessage")]
  #endif
  public static extern IntPtr MessageDialog_GetMessage(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MessageDialog_SetMessage")]
  #else
  [DllImport("Noesis", EntryPoint="MessageDialog_SetMessage")]
  #endif
  public static extern void MessageDialog_SetMessage(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MessageDialog_GetCaption")]
  #else
  [DllImport("Noesis", EntryPoint="MessageDialog_GetCaption")]
  #endif
  public static extern IntPtr MessageDialog_GetCaption(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MessageDialog_SetCaption")]
  #else
  [DllImport("Noesis", EntryPoint="MessageDialog_SetCaption")]
  #endif
  public static extern void MessageDialog_SetCaption(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MessageDialog_GetButtons")]
  #else
  [DllImport("Noesis", EntryPoint="MessageDialog_GetButtons")]
  #endif
  public static extern IntPtr MessageDialog_GetButtons(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MessageDialog_SetButtons")]
  #else
  [DllImport("Noesis", EntryPoint="MessageDialog_SetButtons")]
  #endif
  public static extern void MessageDialog_SetButtons(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MessageDialog_GetImage")]
  #else
  [DllImport("Noesis", EntryPoint="MessageDialog_GetImage")]
  #endif
  public static extern IntPtr MessageDialog_GetImage(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MessageDialog_SetImage")]
  #else
  [DllImport("Noesis", EntryPoint="MessageDialog_SetImage")]
  #endif
  public static extern void MessageDialog_SetImage(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MessageDialog_Show__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="MessageDialog_Show__SWIG_0")]
  #endif
  public static extern IntPtr MessageDialog_Show__SWIG_0(HandleRef jarg1, string jarg2, string jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MessageDialog_Show__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="MessageDialog_Show__SWIG_1")]
  #endif
  public static extern IntPtr MessageDialog_Show__SWIG_1(HandleRef jarg1, string jarg2, string jarg3, HandleRef jarg4, HandleRef jarg5);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MessageDialog_Show__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="MessageDialog_Show__SWIG_2")]
  #endif
  public static extern IntPtr MessageDialog_Show__SWIG_2(HandleRef jarg1, string jarg2, string jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MessageDialog_Show__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="MessageDialog_Show__SWIG_3")]
  #endif
  public static extern IntPtr MessageDialog_Show__SWIG_3(HandleRef jarg1, string jarg2, string jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MessageDialog_Show__SWIG_4")]
  #else
  [DllImport("Noesis", EntryPoint="MessageDialog_Show__SWIG_4")]
  #endif
  public static extern IntPtr MessageDialog_Show__SWIG_4(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MessageDialog_MessageProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="MessageDialog_MessageProperty_set")]
  #endif
  public static extern void MessageDialog_MessageProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MessageDialog_MessageProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="MessageDialog_MessageProperty_get")]
  #endif
  public static extern IntPtr MessageDialog_MessageProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MessageDialog_CaptionProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="MessageDialog_CaptionProperty_set")]
  #endif
  public static extern void MessageDialog_CaptionProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MessageDialog_CaptionProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="MessageDialog_CaptionProperty_get")]
  #endif
  public static extern IntPtr MessageDialog_CaptionProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MessageDialog_ButtonsProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="MessageDialog_ButtonsProperty_set")]
  #endif
  public static extern void MessageDialog_ButtonsProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MessageDialog_ButtonsProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="MessageDialog_ButtonsProperty_get")]
  #endif
  public static extern IntPtr MessageDialog_ButtonsProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MessageDialog_ImageProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="MessageDialog_ImageProperty_set")]
  #endif
  public static extern void MessageDialog_ImageProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MessageDialog_ImageProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="MessageDialog_ImageProperty_get")]
  #endif
  public static extern IntPtr MessageDialog_ImageProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Mouse")]
  #else
  [DllImport("Noesis", EntryPoint="new_Mouse")]
  #endif
  public static extern IntPtr new_Mouse(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Mouse")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Mouse")]
  #endif
  public static extern void delete_Mouse(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Mouse_ResetState")]
  #else
  [DllImport("Noesis", EntryPoint="Mouse_ResetState")]
  #endif
  public static extern void Mouse_ResetState(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Mouse_GetPosition")]
  #else
  [DllImport("Noesis", EntryPoint="Mouse_GetPosition")]
  #endif
  public static extern IntPtr Mouse_GetPosition(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Mouse_GetButtonState")]
  #else
  [DllImport("Noesis", EntryPoint="Mouse_GetButtonState")]
  #endif
  public static extern int Mouse_GetButtonState(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Mouse_Capture__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Mouse_Capture__SWIG_0")]
  #endif
  public static extern bool Mouse_Capture__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Mouse_Capture__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Mouse_Capture__SWIG_1")]
  #endif
  public static extern bool Mouse_Capture__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Mouse_GetCaptured")]
  #else
  [DllImport("Noesis", EntryPoint="Mouse_GetCaptured")]
  #endif
  public static extern IntPtr Mouse_GetCaptured(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Mouse_DirectlyOverChanged")]
  #else
  [DllImport("Noesis", EntryPoint="Mouse_DirectlyOverChanged")]
  #endif
  public static extern IntPtr Mouse_DirectlyOverChanged(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_MultiTrigger")]
  #else
  [DllImport("Noesis", EntryPoint="new_MultiTrigger")]
  #endif
  public static extern IntPtr new_MultiTrigger();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_MultiTrigger")]
  #else
  [DllImport("Noesis", EntryPoint="delete_MultiTrigger")]
  #endif
  public static extern void delete_MultiTrigger(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MultiTrigger_GetConditions")]
  #else
  [DllImport("Noesis", EntryPoint="MultiTrigger_GetConditions")]
  #endif
  public static extern IntPtr MultiTrigger_GetConditions(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MultiTrigger_GetSetters")]
  #else
  [DllImport("Noesis", EntryPoint="MultiTrigger_GetSetters")]
  #endif
  public static extern IntPtr MultiTrigger_GetSetters(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MultiTrigger_FindSetter")]
  #else
  [DllImport("Noesis", EntryPoint="MultiTrigger_FindSetter")]
  #endif
  public static extern IntPtr MultiTrigger_FindSetter(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MultiTrigger_HasCondition")]
  #else
  [DllImport("Noesis", EntryPoint="MultiTrigger_HasCondition")]
  #endif
  public static extern bool MultiTrigger_HasCondition(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MultiTrigger_RegisterSources")]
  #else
  [DllImport("Noesis", EntryPoint="MultiTrigger_RegisterSources")]
  #endif
  public static extern void MultiTrigger_RegisterSources(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MultiTrigger_UnregisterSources")]
  #else
  [DllImport("Noesis", EntryPoint="MultiTrigger_UnregisterSources")]
  #endif
  public static extern void MultiTrigger_UnregisterSources(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MultiTrigger_RegisterEvents")]
  #else
  [DllImport("Noesis", EntryPoint="MultiTrigger_RegisterEvents")]
  #endif
  public static extern void MultiTrigger_RegisterEvents(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MultiTrigger_UnregisterEvents")]
  #else
  [DllImport("Noesis", EntryPoint="MultiTrigger_UnregisterEvents")]
  #endif
  public static extern void MultiTrigger_UnregisterEvents(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MultiTrigger_Check")]
  #else
  [DllImport("Noesis", EntryPoint="MultiTrigger_Check")]
  #endif
  public static extern bool MultiTrigger_Check(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, bool jarg6);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MultiTrigger_FindValue")]
  #else
  [DllImport("Noesis", EntryPoint="MultiTrigger_FindValue")]
  #endif
  public static extern IntPtr MultiTrigger_FindValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MultiTrigger_Invalidate__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="MultiTrigger_Invalidate__SWIG_0")]
  #endif
  public static extern void MultiTrigger_Invalidate__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4, bool jarg5, byte jarg6);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MultiTrigger_Invalidate__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="MultiTrigger_Invalidate__SWIG_1")]
  #endif
  public static extern void MultiTrigger_Invalidate__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6, HandleRef jarg7, bool jarg8, bool jarg9, byte jarg10);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_NameScope")]
  #else
  [DllImport("Noesis", EntryPoint="new_NameScope")]
  #endif
  public static extern IntPtr new_NameScope();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_NameScope")]
  #else
  [DllImport("Noesis", EntryPoint="delete_NameScope")]
  #endif
  public static extern void delete_NameScope(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NameScope_GetNameScope")]
  #else
  [DllImport("Noesis", EntryPoint="NameScope_GetNameScope")]
  #endif
  public static extern IntPtr NameScope_GetNameScope(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NameScope_SetNameScope")]
  #else
  [DllImport("Noesis", EntryPoint="NameScope_SetNameScope")]
  #endif
  public static extern void NameScope_SetNameScope(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NameScope_FindObject")]
  #else
  [DllImport("Noesis", EntryPoint="NameScope_FindObject")]
  #endif
  public static extern string NameScope_FindObject(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NameScope_EnumNamedObjects__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="NameScope_EnumNamedObjects__SWIG_0")]
  #endif
  public static extern void NameScope_EnumNamedObjects__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NameScope_EnumNamedObjects__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="NameScope_EnumNamedObjects__SWIG_1")]
  #endif
  public static extern void NameScope_EnumNamedObjects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NameScope_FindName")]
  #else
  [DllImport("Noesis", EntryPoint="NameScope_FindName")]
  #endif
  public static extern IntPtr NameScope_FindName(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NameScope_RegisterName")]
  #else
  [DllImport("Noesis", EntryPoint="NameScope_RegisterName")]
  #endif
  public static extern void NameScope_RegisterName(HandleRef jarg1, string jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NameScope_UnregisterName")]
  #else
  [DllImport("Noesis", EntryPoint="NameScope_UnregisterName")]
  #endif
  public static extern void NameScope_UnregisterName(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NameScope_UpdateName")]
  #else
  [DllImport("Noesis", EntryPoint="NameScope_UpdateName")]
  #endif
  public static extern void NameScope_UpdateName(HandleRef jarg1, string jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NameScope_NameScopeChanged")]
  #else
  [DllImport("Noesis", EntryPoint="NameScope_NameScopeChanged")]
  #endif
  public static extern IntPtr NameScope_NameScopeChanged(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NameScope_NameScopeDestroyed")]
  #else
  [DllImport("Noesis", EntryPoint="NameScope_NameScopeDestroyed")]
  #endif
  public static extern IntPtr NameScope_NameScopeDestroyed(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NameScope_EnumObjects")]
  #else
  [DllImport("Noesis", EntryPoint="NameScope_EnumObjects")]
  #endif
  public static extern IntPtr NameScope_EnumObjects(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NameScope_NameScopeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="NameScope_NameScopeProperty_set")]
  #endif
  public static extern void NameScope_NameScopeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NameScope_NameScopeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="NameScope_NameScopeProperty_get")]
  #endif
  public static extern IntPtr NameScope_NameScopeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Page")]
  #else
  [DllImport("Noesis", EntryPoint="new_Page")]
  #endif
  public static extern IntPtr new_Page();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Page")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Page")]
  #endif
  public static extern void delete_Page(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Page_GetIcon")]
  #else
  [DllImport("Noesis", EntryPoint="Page_GetIcon")]
  #endif
  public static extern IntPtr Page_GetIcon(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Page_SetIcon")]
  #else
  [DllImport("Noesis", EntryPoint="Page_SetIcon")]
  #endif
  public static extern void Page_SetIcon(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Page_GetTitle")]
  #else
  [DllImport("Noesis", EntryPoint="Page_GetTitle")]
  #endif
  public static extern IntPtr Page_GetTitle(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Page_SetTitle")]
  #else
  [DllImport("Noesis", EntryPoint="Page_SetTitle")]
  #endif
  public static extern void Page_SetTitle(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_PasswordBox")]
  #else
  [DllImport("Noesis", EntryPoint="new_PasswordBox")]
  #endif
  public static extern IntPtr new_PasswordBox();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PasswordBox_GetMaxLength")]
  #else
  [DllImport("Noesis", EntryPoint="PasswordBox_GetMaxLength")]
  #endif
  public static extern int PasswordBox_GetMaxLength(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PasswordBox_SetMaxLength")]
  #else
  [DllImport("Noesis", EntryPoint="PasswordBox_SetMaxLength")]
  #endif
  public static extern void PasswordBox_SetMaxLength(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PasswordBox_GetPasswordChar")]
  #else
  [DllImport("Noesis", EntryPoint="PasswordBox_GetPasswordChar")]
  #endif
  public static extern char PasswordBox_GetPasswordChar(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PasswordBox_SetPasswordChar")]
  #else
  [DllImport("Noesis", EntryPoint="PasswordBox_SetPasswordChar")]
  #endif
  public static extern void PasswordBox_SetPasswordChar(HandleRef jarg1, char jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PasswordBox_GetPassword")]
  #else
  [DllImport("Noesis", EntryPoint="PasswordBox_GetPassword")]
  #endif
  public static extern IntPtr PasswordBox_GetPassword(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PasswordBox_SetPassword")]
  #else
  [DllImport("Noesis", EntryPoint="PasswordBox_SetPassword")]
  #endif
  public static extern void PasswordBox_SetPassword(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PasswordBox_MaxLengthProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="PasswordBox_MaxLengthProperty_set")]
  #endif
  public static extern void PasswordBox_MaxLengthProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PasswordBox_MaxLengthProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="PasswordBox_MaxLengthProperty_get")]
  #endif
  public static extern IntPtr PasswordBox_MaxLengthProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PasswordBox_PasswordCharProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="PasswordBox_PasswordCharProperty_set")]
  #endif
  public static extern void PasswordBox_PasswordCharProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PasswordBox_PasswordCharProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="PasswordBox_PasswordCharProperty_get")]
  #endif
  public static extern IntPtr PasswordBox_PasswordCharProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_PasswordBox")]
  #else
  [DllImport("Noesis", EntryPoint="delete_PasswordBox")]
  #endif
  public static extern void delete_PasswordBox(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Path")]
  #else
  [DllImport("Noesis", EntryPoint="new_Path")]
  #endif
  public static extern IntPtr new_Path();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Path")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Path")]
  #endif
  public static extern void delete_Path(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Path_GetData")]
  #else
  [DllImport("Noesis", EntryPoint="Path_GetData")]
  #endif
  public static extern IntPtr Path_GetData(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Path_SetData")]
  #else
  [DllImport("Noesis", EntryPoint="Path_SetData")]
  #endif
  public static extern void Path_SetData(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Path_DataProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Path_DataProperty_set")]
  #endif
  public static extern void Path_DataProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Path_DataProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Path_DataProperty_get")]
  #endif
  public static extern IntPtr Path_DataProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Pen")]
  #else
  [DllImport("Noesis", EntryPoint="new_Pen")]
  #endif
  public static extern IntPtr new_Pen();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Pen")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Pen")]
  #endif
  public static extern void delete_Pen(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_GetBrush")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_GetBrush")]
  #endif
  public static extern IntPtr Pen_GetBrush(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_SetBrush")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_SetBrush")]
  #endif
  public static extern void Pen_SetBrush(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_GetDashCap")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_GetDashCap")]
  #endif
  public static extern int Pen_GetDashCap(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_SetDashCap")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_SetDashCap")]
  #endif
  public static extern void Pen_SetDashCap(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_GetDashStyle")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_GetDashStyle")]
  #endif
  public static extern IntPtr Pen_GetDashStyle(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_SetDashStyle")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_SetDashStyle")]
  #endif
  public static extern void Pen_SetDashStyle(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_GetEndLineCap")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_GetEndLineCap")]
  #endif
  public static extern int Pen_GetEndLineCap(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_SetEndLineCap")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_SetEndLineCap")]
  #endif
  public static extern void Pen_SetEndLineCap(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_GetLineJoin")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_GetLineJoin")]
  #endif
  public static extern int Pen_GetLineJoin(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_SetLineJoin")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_SetLineJoin")]
  #endif
  public static extern void Pen_SetLineJoin(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_GetMiterLimit")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_GetMiterLimit")]
  #endif
  public static extern float Pen_GetMiterLimit(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_SetMiterLimit")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_SetMiterLimit")]
  #endif
  public static extern void Pen_SetMiterLimit(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_GetStartLineCap")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_GetStartLineCap")]
  #endif
  public static extern int Pen_GetStartLineCap(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_SetStartLineCap")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_SetStartLineCap")]
  #endif
  public static extern void Pen_SetStartLineCap(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_GetThickness")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_GetThickness")]
  #endif
  public static extern float Pen_GetThickness(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_SetThickness")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_SetThickness")]
  #endif
  public static extern void Pen_SetThickness(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_IsRenderable")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_IsRenderable")]
  #endif
  public static extern bool Pen_IsRenderable(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_CreateRenderProxy")]
  #endif
  public static extern void Pen_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_UpdateRenderProxy")]
  #endif
  public static extern void Pen_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_UnregisterRenderer")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_UnregisterRenderer")]
  #endif
  public static extern void Pen_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_BrushProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_BrushProperty_set")]
  #endif
  public static extern void Pen_BrushProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_BrushProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_BrushProperty_get")]
  #endif
  public static extern IntPtr Pen_BrushProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_DashCapProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_DashCapProperty_set")]
  #endif
  public static extern void Pen_DashCapProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_DashCapProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_DashCapProperty_get")]
  #endif
  public static extern IntPtr Pen_DashCapProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_DashStyleProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_DashStyleProperty_set")]
  #endif
  public static extern void Pen_DashStyleProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_DashStyleProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_DashStyleProperty_get")]
  #endif
  public static extern IntPtr Pen_DashStyleProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_EndLineCapProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_EndLineCapProperty_set")]
  #endif
  public static extern void Pen_EndLineCapProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_EndLineCapProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_EndLineCapProperty_get")]
  #endif
  public static extern IntPtr Pen_EndLineCapProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_LineJoinProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_LineJoinProperty_set")]
  #endif
  public static extern void Pen_LineJoinProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_LineJoinProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_LineJoinProperty_get")]
  #endif
  public static extern IntPtr Pen_LineJoinProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_MiterLimitProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_MiterLimitProperty_set")]
  #endif
  public static extern void Pen_MiterLimitProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_MiterLimitProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_MiterLimitProperty_get")]
  #endif
  public static extern IntPtr Pen_MiterLimitProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_StartLineCapProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_StartLineCapProperty_set")]
  #endif
  public static extern void Pen_StartLineCapProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_StartLineCapProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_StartLineCapProperty_get")]
  #endif
  public static extern IntPtr Pen_StartLineCapProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_ThicknessProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_ThicknessProperty_set")]
  #endif
  public static extern void Pen_ThicknessProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_ThicknessProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_ThicknessProperty_get")]
  #endif
  public static extern IntPtr Pen_ThicknessProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_PlaneProjection")]
  #else
  [DllImport("Noesis", EntryPoint="new_PlaneProjection")]
  #endif
  public static extern IntPtr new_PlaneProjection();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_PlaneProjection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_PlaneProjection")]
  #endif
  public static extern void delete_PlaneProjection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_ConstructProjectionMatrix")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_ConstructProjectionMatrix")]
  #endif
  public static extern IntPtr PlaneProjection_ConstructProjectionMatrix(HandleRef jarg1, HandleRef jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10, float jarg11, float jarg12, float jarg13, float jarg14);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_GetCenterOfRotationX")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_GetCenterOfRotationX")]
  #endif
  public static extern float PlaneProjection_GetCenterOfRotationX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_SetCenterOfRotationX")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_SetCenterOfRotationX")]
  #endif
  public static extern void PlaneProjection_SetCenterOfRotationX(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_GetCenterOfRotationY")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_GetCenterOfRotationY")]
  #endif
  public static extern float PlaneProjection_GetCenterOfRotationY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_SetCenterOfRotationY")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_SetCenterOfRotationY")]
  #endif
  public static extern void PlaneProjection_SetCenterOfRotationY(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_GetCenterOfRotationZ")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_GetCenterOfRotationZ")]
  #endif
  public static extern float PlaneProjection_GetCenterOfRotationZ(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_SetCenterOfRotationZ")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_SetCenterOfRotationZ")]
  #endif
  public static extern void PlaneProjection_SetCenterOfRotationZ(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_GetGlobalOffsetX")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_GetGlobalOffsetX")]
  #endif
  public static extern float PlaneProjection_GetGlobalOffsetX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_SetGlobalOffsetX")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_SetGlobalOffsetX")]
  #endif
  public static extern void PlaneProjection_SetGlobalOffsetX(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_GetGlobalOffsetY")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_GetGlobalOffsetY")]
  #endif
  public static extern float PlaneProjection_GetGlobalOffsetY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_SetGlobalOffsetY")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_SetGlobalOffsetY")]
  #endif
  public static extern void PlaneProjection_SetGlobalOffsetY(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_GetGlobalOffsetZ")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_GetGlobalOffsetZ")]
  #endif
  public static extern float PlaneProjection_GetGlobalOffsetZ(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_SetGlobalOffsetZ")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_SetGlobalOffsetZ")]
  #endif
  public static extern void PlaneProjection_SetGlobalOffsetZ(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_GetLocalOffsetX")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_GetLocalOffsetX")]
  #endif
  public static extern float PlaneProjection_GetLocalOffsetX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_SetLocalOffsetX")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_SetLocalOffsetX")]
  #endif
  public static extern void PlaneProjection_SetLocalOffsetX(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_GetLocalOffsetY")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_GetLocalOffsetY")]
  #endif
  public static extern float PlaneProjection_GetLocalOffsetY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_SetLocalOffsetY")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_SetLocalOffsetY")]
  #endif
  public static extern void PlaneProjection_SetLocalOffsetY(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_GetLocalOffsetZ")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_GetLocalOffsetZ")]
  #endif
  public static extern float PlaneProjection_GetLocalOffsetZ(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_SetLocalOffsetZ")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_SetLocalOffsetZ")]
  #endif
  public static extern void PlaneProjection_SetLocalOffsetZ(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_GetProjectionMatrix")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_GetProjectionMatrix")]
  #endif
  public static extern IntPtr PlaneProjection_GetProjectionMatrix(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_GetRotationX")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_GetRotationX")]
  #endif
  public static extern float PlaneProjection_GetRotationX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_SetRotationX")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_SetRotationX")]
  #endif
  public static extern void PlaneProjection_SetRotationX(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_GetRotationY")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_GetRotationY")]
  #endif
  public static extern float PlaneProjection_GetRotationY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_SetRotationY")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_SetRotationY")]
  #endif
  public static extern void PlaneProjection_SetRotationY(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_GetRotationZ")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_GetRotationZ")]
  #endif
  public static extern float PlaneProjection_GetRotationZ(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_SetRotationZ")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_SetRotationZ")]
  #endif
  public static extern void PlaneProjection_SetRotationZ(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_IsIdentity")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_IsIdentity")]
  #endif
  public static extern bool PlaneProjection_IsIdentity(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_GetProjection")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_GetProjection")]
  #endif
  public static extern IntPtr PlaneProjection_GetProjection(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_CreateRenderProxy")]
  #endif
  public static extern void PlaneProjection_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_UpdateRenderProxy")]
  #endif
  public static extern void PlaneProjection_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_UnregisterRenderer")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_UnregisterRenderer")]
  #endif
  public static extern void PlaneProjection_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_CenterOfRotationXProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_CenterOfRotationXProperty_set")]
  #endif
  public static extern void PlaneProjection_CenterOfRotationXProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_CenterOfRotationXProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_CenterOfRotationXProperty_get")]
  #endif
  public static extern IntPtr PlaneProjection_CenterOfRotationXProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_CenterOfRotationYProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_CenterOfRotationYProperty_set")]
  #endif
  public static extern void PlaneProjection_CenterOfRotationYProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_CenterOfRotationYProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_CenterOfRotationYProperty_get")]
  #endif
  public static extern IntPtr PlaneProjection_CenterOfRotationYProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_CenterOfRotationZProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_CenterOfRotationZProperty_set")]
  #endif
  public static extern void PlaneProjection_CenterOfRotationZProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_CenterOfRotationZProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_CenterOfRotationZProperty_get")]
  #endif
  public static extern IntPtr PlaneProjection_CenterOfRotationZProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_GlobalOffsetXProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_GlobalOffsetXProperty_set")]
  #endif
  public static extern void PlaneProjection_GlobalOffsetXProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_GlobalOffsetXProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_GlobalOffsetXProperty_get")]
  #endif
  public static extern IntPtr PlaneProjection_GlobalOffsetXProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_GlobalOffsetYProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_GlobalOffsetYProperty_set")]
  #endif
  public static extern void PlaneProjection_GlobalOffsetYProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_GlobalOffsetYProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_GlobalOffsetYProperty_get")]
  #endif
  public static extern IntPtr PlaneProjection_GlobalOffsetYProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_GlobalOffsetZProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_GlobalOffsetZProperty_set")]
  #endif
  public static extern void PlaneProjection_GlobalOffsetZProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_GlobalOffsetZProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_GlobalOffsetZProperty_get")]
  #endif
  public static extern IntPtr PlaneProjection_GlobalOffsetZProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_LocalOffsetXProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_LocalOffsetXProperty_set")]
  #endif
  public static extern void PlaneProjection_LocalOffsetXProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_LocalOffsetXProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_LocalOffsetXProperty_get")]
  #endif
  public static extern IntPtr PlaneProjection_LocalOffsetXProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_LocalOffsetYProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_LocalOffsetYProperty_set")]
  #endif
  public static extern void PlaneProjection_LocalOffsetYProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_LocalOffsetYProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_LocalOffsetYProperty_get")]
  #endif
  public static extern IntPtr PlaneProjection_LocalOffsetYProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_LocalOffsetZProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_LocalOffsetZProperty_set")]
  #endif
  public static extern void PlaneProjection_LocalOffsetZProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_LocalOffsetZProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_LocalOffsetZProperty_get")]
  #endif
  public static extern IntPtr PlaneProjection_LocalOffsetZProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_ProjectionMatrixProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_ProjectionMatrixProperty_set")]
  #endif
  public static extern void PlaneProjection_ProjectionMatrixProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_ProjectionMatrixProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_ProjectionMatrixProperty_get")]
  #endif
  public static extern IntPtr PlaneProjection_ProjectionMatrixProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_RotationXProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_RotationXProperty_set")]
  #endif
  public static extern void PlaneProjection_RotationXProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_RotationXProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_RotationXProperty_get")]
  #endif
  public static extern IntPtr PlaneProjection_RotationXProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_RotationYProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_RotationYProperty_set")]
  #endif
  public static extern void PlaneProjection_RotationYProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_RotationYProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_RotationYProperty_get")]
  #endif
  public static extern IntPtr PlaneProjection_RotationYProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_RotationZProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_RotationZProperty_set")]
  #endif
  public static extern void PlaneProjection_RotationZProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_RotationZProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_RotationZProperty_get")]
  #endif
  public static extern IntPtr PlaneProjection_RotationZProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CustomPopupPlacementCallback")]
  #else
  [DllImport("Noesis", EntryPoint="new_CustomPopupPlacementCallback")]
  #endif
  public static extern IntPtr new_CustomPopupPlacementCallback();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_CustomPopupPlacementCallback")]
  #else
  [DllImport("Noesis", EntryPoint="delete_CustomPopupPlacementCallback")]
  #endif
  public static extern void delete_CustomPopupPlacementCallback(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Popup")]
  #else
  [DllImport("Noesis", EntryPoint="new_Popup")]
  #endif
  public static extern IntPtr new_Popup();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Popup")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Popup")]
  #endif
  public static extern void delete_Popup(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_GetAllowsTransparency")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_GetAllowsTransparency")]
  #endif
  public static extern bool Popup_GetAllowsTransparency(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_SetAllowsTransparency")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_SetAllowsTransparency")]
  #endif
  public static extern void Popup_SetAllowsTransparency(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_GetChild")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_GetChild")]
  #endif
  public static extern IntPtr Popup_GetChild(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_SetChild")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_SetChild")]
  #endif
  public static extern void Popup_SetChild(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_GetHasDropShadow")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_GetHasDropShadow")]
  #endif
  public static extern bool Popup_GetHasDropShadow(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_SetHasDropShadow")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_SetHasDropShadow")]
  #endif
  public static extern void Popup_SetHasDropShadow(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_GetHorizontalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_GetHorizontalOffset")]
  #endif
  public static extern float Popup_GetHorizontalOffset(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_SetHorizontalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_SetHorizontalOffset")]
  #endif
  public static extern void Popup_SetHorizontalOffset(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_GetIsOpen")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_GetIsOpen")]
  #endif
  public static extern bool Popup_GetIsOpen(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_SetIsOpen")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_SetIsOpen")]
  #endif
  public static extern void Popup_SetIsOpen(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_GetPlacement")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_GetPlacement")]
  #endif
  public static extern int Popup_GetPlacement(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_SetPlacement")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_SetPlacement")]
  #endif
  public static extern void Popup_SetPlacement(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_GetPlacementRectangle")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_GetPlacementRectangle")]
  #endif
  public static extern IntPtr Popup_GetPlacementRectangle(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_SetPlacementRectangle")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_SetPlacementRectangle")]
  #endif
  public static extern void Popup_SetPlacementRectangle(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_GetPlacementTarget")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_GetPlacementTarget")]
  #endif
  public static extern IntPtr Popup_GetPlacementTarget(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_SetPlacementTarget")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_SetPlacementTarget")]
  #endif
  public static extern void Popup_SetPlacementTarget(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_GetPopupAnimation")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_GetPopupAnimation")]
  #endif
  public static extern int Popup_GetPopupAnimation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_SetPopupAnimation")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_SetPopupAnimation")]
  #endif
  public static extern void Popup_SetPopupAnimation(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_GetStaysOpen")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_GetStaysOpen")]
  #endif
  public static extern bool Popup_GetStaysOpen(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_SetStaysOpen")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_SetStaysOpen")]
  #endif
  public static extern void Popup_SetStaysOpen(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_GetVerticalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_GetVerticalOffset")]
  #endif
  public static extern float Popup_GetVerticalOffset(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_SetVerticalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_SetVerticalOffset")]
  #endif
  public static extern void Popup_SetVerticalOffset(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_IsDescendantOf")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_IsDescendantOf")]
  #endif
  public static extern bool Popup_IsDescendantOf(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_Closed")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_Closed")]
  #endif
  public static extern IntPtr Popup_Closed(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_Opened")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_Opened")]
  #endif
  public static extern IntPtr Popup_Opened(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_AllowsTransparencyProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_AllowsTransparencyProperty_set")]
  #endif
  public static extern void Popup_AllowsTransparencyProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_AllowsTransparencyProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_AllowsTransparencyProperty_get")]
  #endif
  public static extern IntPtr Popup_AllowsTransparencyProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_ChildProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_ChildProperty_set")]
  #endif
  public static extern void Popup_ChildProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_ChildProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_ChildProperty_get")]
  #endif
  public static extern IntPtr Popup_ChildProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_CustomPopupPlacementCallbackProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_CustomPopupPlacementCallbackProperty_set")]
  #endif
  public static extern void Popup_CustomPopupPlacementCallbackProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_CustomPopupPlacementCallbackProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_CustomPopupPlacementCallbackProperty_get")]
  #endif
  public static extern IntPtr Popup_CustomPopupPlacementCallbackProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_HasDropShadowProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_HasDropShadowProperty_set")]
  #endif
  public static extern void Popup_HasDropShadowProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_HasDropShadowProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_HasDropShadowProperty_get")]
  #endif
  public static extern IntPtr Popup_HasDropShadowProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_HorizontalOffsetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_HorizontalOffsetProperty_set")]
  #endif
  public static extern void Popup_HorizontalOffsetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_HorizontalOffsetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_HorizontalOffsetProperty_get")]
  #endif
  public static extern IntPtr Popup_HorizontalOffsetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_IsOpenProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_IsOpenProperty_set")]
  #endif
  public static extern void Popup_IsOpenProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_IsOpenProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_IsOpenProperty_get")]
  #endif
  public static extern IntPtr Popup_IsOpenProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_PlacementProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_PlacementProperty_set")]
  #endif
  public static extern void Popup_PlacementProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_PlacementProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_PlacementProperty_get")]
  #endif
  public static extern IntPtr Popup_PlacementProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_PlacementRectangleProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_PlacementRectangleProperty_set")]
  #endif
  public static extern void Popup_PlacementRectangleProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_PlacementRectangleProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_PlacementRectangleProperty_get")]
  #endif
  public static extern IntPtr Popup_PlacementRectangleProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_PlacementTargetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_PlacementTargetProperty_set")]
  #endif
  public static extern void Popup_PlacementTargetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_PlacementTargetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_PlacementTargetProperty_get")]
  #endif
  public static extern IntPtr Popup_PlacementTargetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_PopupAnimationProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_PopupAnimationProperty_set")]
  #endif
  public static extern void Popup_PopupAnimationProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_PopupAnimationProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_PopupAnimationProperty_get")]
  #endif
  public static extern IntPtr Popup_PopupAnimationProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_StaysOpenProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_StaysOpenProperty_set")]
  #endif
  public static extern void Popup_StaysOpenProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_StaysOpenProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_StaysOpenProperty_get")]
  #endif
  public static extern IntPtr Popup_StaysOpenProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_VerticalOffsetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_VerticalOffsetProperty_set")]
  #endif
  public static extern void Popup_VerticalOffsetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_VerticalOffsetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_VerticalOffsetProperty_get")]
  #endif
  public static extern IntPtr Popup_VerticalOffsetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_RangeBase")]
  #else
  [DllImport("Noesis", EntryPoint="delete_RangeBase")]
  #endif
  public static extern void delete_RangeBase(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RangeBase_GetLargeChange")]
  #else
  [DllImport("Noesis", EntryPoint="RangeBase_GetLargeChange")]
  #endif
  public static extern float RangeBase_GetLargeChange(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RangeBase_SetLargeChange")]
  #else
  [DllImport("Noesis", EntryPoint="RangeBase_SetLargeChange")]
  #endif
  public static extern void RangeBase_SetLargeChange(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RangeBase_GetMaximum")]
  #else
  [DllImport("Noesis", EntryPoint="RangeBase_GetMaximum")]
  #endif
  public static extern float RangeBase_GetMaximum(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RangeBase_SetMaximum")]
  #else
  [DllImport("Noesis", EntryPoint="RangeBase_SetMaximum")]
  #endif
  public static extern void RangeBase_SetMaximum(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RangeBase_GetMinimum")]
  #else
  [DllImport("Noesis", EntryPoint="RangeBase_GetMinimum")]
  #endif
  public static extern float RangeBase_GetMinimum(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RangeBase_SetMinimum")]
  #else
  [DllImport("Noesis", EntryPoint="RangeBase_SetMinimum")]
  #endif
  public static extern void RangeBase_SetMinimum(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RangeBase_GetSmallChange")]
  #else
  [DllImport("Noesis", EntryPoint="RangeBase_GetSmallChange")]
  #endif
  public static extern float RangeBase_GetSmallChange(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RangeBase_SetSmallChange")]
  #else
  [DllImport("Noesis", EntryPoint="RangeBase_SetSmallChange")]
  #endif
  public static extern void RangeBase_SetSmallChange(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RangeBase_GetValue")]
  #else
  [DllImport("Noesis", EntryPoint="RangeBase_GetValue")]
  #endif
  public static extern float RangeBase_GetValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RangeBase_SetValue")]
  #else
  [DllImport("Noesis", EntryPoint="RangeBase_SetValue")]
  #endif
  public static extern void RangeBase_SetValue(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RangeBase_LargeChangeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RangeBase_LargeChangeProperty_set")]
  #endif
  public static extern void RangeBase_LargeChangeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RangeBase_LargeChangeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RangeBase_LargeChangeProperty_get")]
  #endif
  public static extern IntPtr RangeBase_LargeChangeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RangeBase_MaximumProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RangeBase_MaximumProperty_set")]
  #endif
  public static extern void RangeBase_MaximumProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RangeBase_MaximumProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RangeBase_MaximumProperty_get")]
  #endif
  public static extern IntPtr RangeBase_MaximumProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RangeBase_MinimumProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RangeBase_MinimumProperty_set")]
  #endif
  public static extern void RangeBase_MinimumProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RangeBase_MinimumProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RangeBase_MinimumProperty_get")]
  #endif
  public static extern IntPtr RangeBase_MinimumProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RangeBase_SmallChangeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RangeBase_SmallChangeProperty_set")]
  #endif
  public static extern void RangeBase_SmallChangeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RangeBase_SmallChangeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RangeBase_SmallChangeProperty_get")]
  #endif
  public static extern IntPtr RangeBase_SmallChangeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RangeBase_ValueProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RangeBase_ValueProperty_set")]
  #endif
  public static extern void RangeBase_ValueProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RangeBase_ValueProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RangeBase_ValueProperty_get")]
  #endif
  public static extern IntPtr RangeBase_ValueProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ProgressBar")]
  #else
  [DllImport("Noesis", EntryPoint="new_ProgressBar")]
  #endif
  public static extern IntPtr new_ProgressBar();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ProgressBar_GetIsIndeterminate")]
  #else
  [DllImport("Noesis", EntryPoint="ProgressBar_GetIsIndeterminate")]
  #endif
  public static extern bool ProgressBar_GetIsIndeterminate(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ProgressBar_SetIsIndeterminate")]
  #else
  [DllImport("Noesis", EntryPoint="ProgressBar_SetIsIndeterminate")]
  #endif
  public static extern void ProgressBar_SetIsIndeterminate(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ProgressBar_GetOrientation")]
  #else
  [DllImport("Noesis", EntryPoint="ProgressBar_GetOrientation")]
  #endif
  public static extern int ProgressBar_GetOrientation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ProgressBar_SetOrientation")]
  #else
  [DllImport("Noesis", EntryPoint="ProgressBar_SetOrientation")]
  #endif
  public static extern void ProgressBar_SetOrientation(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ProgressBar_IsIndeterminateProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ProgressBar_IsIndeterminateProperty_set")]
  #endif
  public static extern void ProgressBar_IsIndeterminateProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ProgressBar_IsIndeterminateProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ProgressBar_IsIndeterminateProperty_get")]
  #endif
  public static extern IntPtr ProgressBar_IsIndeterminateProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ProgressBar_OrientationProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ProgressBar_OrientationProperty_set")]
  #endif
  public static extern void ProgressBar_OrientationProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ProgressBar_OrientationProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ProgressBar_OrientationProperty_get")]
  #endif
  public static extern IntPtr ProgressBar_OrientationProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ProgressBar")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ProgressBar")]
  #endif
  public static extern void delete_ProgressBar(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_PathElement__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_PathElement__SWIG_0")]
  #endif
  public static extern IntPtr new_PathElement__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_PathElement__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_PathElement__SWIG_1")]
  #endif
  public static extern IntPtr new_PathElement__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_PathElement")]
  #else
  [DllImport("Noesis", EntryPoint="delete_PathElement")]
  #endif
  public static extern void delete_PathElement(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PathElement_source_set")]
  #else
  [DllImport("Noesis", EntryPoint="PathElement_source_set")]
  #endif
  public static extern void PathElement_source_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PathElement_source_get")]
  #else
  [DllImport("Noesis", EntryPoint="PathElement_source_get")]
  #endif
  public static extern IntPtr PathElement_source_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PathElement_collection_set")]
  #else
  [DllImport("Noesis", EntryPoint="PathElement_collection_set")]
  #endif
  public static extern void PathElement_collection_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PathElement_collection_get")]
  #else
  [DllImport("Noesis", EntryPoint="PathElement_collection_get")]
  #endif
  public static extern IntPtr PathElement_collection_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PathElement_property_set")]
  #else
  [DllImport("Noesis", EntryPoint="PathElement_property_set")]
  #endif
  public static extern void PathElement_property_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PathElement_property_get")]
  #else
  [DllImport("Noesis", EntryPoint="PathElement_property_get")]
  #endif
  public static extern IntPtr PathElement_property_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PathElement_dp_set")]
  #else
  [DllImport("Noesis", EntryPoint="PathElement_dp_set")]
  #endif
  public static extern void PathElement_dp_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PathElement_dp_get")]
  #else
  [DllImport("Noesis", EntryPoint="PathElement_dp_get")]
  #endif
  public static extern IntPtr PathElement_dp_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PathElement_index_set")]
  #else
  [DllImport("Noesis", EntryPoint="PathElement_index_set")]
  #endif
  public static extern void PathElement_index_set(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PathElement_index_get")]
  #else
  [DllImport("Noesis", EntryPoint="PathElement_index_get")]
  #endif
  public static extern uint PathElement_index_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PathElement_key_set")]
  #else
  [DllImport("Noesis", EntryPoint="PathElement_key_set")]
  #endif
  public static extern void PathElement_key_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PathElement_key_get")]
  #else
  [DllImport("Noesis", EntryPoint="PathElement_key_get")]
  #endif
  public static extern IntPtr PathElement_key_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_PropertyPath__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_PropertyPath__SWIG_0")]
  #endif
  public static extern IntPtr new_PropertyPath__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_PropertyPath__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_PropertyPath__SWIG_1")]
  #endif
  public static extern IntPtr new_PropertyPath__SWIG_1(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_PropertyPath")]
  #else
  [DllImport("Noesis", EntryPoint="delete_PropertyPath")]
  #endif
  public static extern void delete_PropertyPath(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PropertyPath_Parse")]
  #else
  [DllImport("Noesis", EntryPoint="PropertyPath_Parse")]
  #endif
  public static extern IntPtr PropertyPath_Parse(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PropertyPath_Create")]
  #else
  [DllImport("Noesis", EntryPoint="PropertyPath_Create")]
  #endif
  public static extern IntPtr PropertyPath_Create(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PropertyPath_GetPath")]
  #else
  [DllImport("Noesis", EntryPoint="PropertyPath_GetPath")]
  #endif
  public static extern IntPtr PropertyPath_GetPath(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PropertyPath_SetPath")]
  #else
  [DllImport("Noesis", EntryPoint="PropertyPath_SetPath")]
  #endif
  public static extern void PropertyPath_SetPath(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PropertyPath_GetPathElements")]
  #else
  [DllImport("Noesis", EntryPoint="PropertyPath_GetPathElements")]
  #endif
  public static extern bool PropertyPath_GetPathElements(HandleRef jarg1, HandleRef jarg2, bool jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PropertyPath_EnumPathElements__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="PropertyPath_EnumPathElements__SWIG_0")]
  #endif
  public static extern bool PropertyPath_EnumPathElements__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3, HandleRef jarg4, HandleRef jarg5);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PropertyPath_EnumPathElements__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="PropertyPath_EnumPathElements__SWIG_1")]
  #endif
  public static extern bool PropertyPath_EnumPathElements__SWIG_1(HandleRef jarg1, HandleRef jarg2, bool jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_RadialGradientBrush")]
  #else
  [DllImport("Noesis", EntryPoint="new_RadialGradientBrush")]
  #endif
  public static extern IntPtr new_RadialGradientBrush();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadialGradientBrush_GetCenter")]
  #else
  [DllImport("Noesis", EntryPoint="RadialGradientBrush_GetCenter")]
  #endif
  public static extern IntPtr RadialGradientBrush_GetCenter(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadialGradientBrush_SetCenter")]
  #else
  [DllImport("Noesis", EntryPoint="RadialGradientBrush_SetCenter")]
  #endif
  public static extern void RadialGradientBrush_SetCenter(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadialGradientBrush_GetGradientOrigin")]
  #else
  [DllImport("Noesis", EntryPoint="RadialGradientBrush_GetGradientOrigin")]
  #endif
  public static extern IntPtr RadialGradientBrush_GetGradientOrigin(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadialGradientBrush_SetGradientOrigin")]
  #else
  [DllImport("Noesis", EntryPoint="RadialGradientBrush_SetGradientOrigin")]
  #endif
  public static extern void RadialGradientBrush_SetGradientOrigin(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadialGradientBrush_GetRadiusX")]
  #else
  [DllImport("Noesis", EntryPoint="RadialGradientBrush_GetRadiusX")]
  #endif
  public static extern float RadialGradientBrush_GetRadiusX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadialGradientBrush_SetRadiusX")]
  #else
  [DllImport("Noesis", EntryPoint="RadialGradientBrush_SetRadiusX")]
  #endif
  public static extern void RadialGradientBrush_SetRadiusX(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadialGradientBrush_GetRadiusY")]
  #else
  [DllImport("Noesis", EntryPoint="RadialGradientBrush_GetRadiusY")]
  #endif
  public static extern float RadialGradientBrush_GetRadiusY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadialGradientBrush_SetRadiusY")]
  #else
  [DllImport("Noesis", EntryPoint="RadialGradientBrush_SetRadiusY")]
  #endif
  public static extern void RadialGradientBrush_SetRadiusY(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadialGradientBrush_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="RadialGradientBrush_CreateRenderProxy")]
  #endif
  public static extern void RadialGradientBrush_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadialGradientBrush_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="RadialGradientBrush_UpdateRenderProxy")]
  #endif
  public static extern void RadialGradientBrush_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadialGradientBrush_CenterProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RadialGradientBrush_CenterProperty_set")]
  #endif
  public static extern void RadialGradientBrush_CenterProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadialGradientBrush_CenterProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RadialGradientBrush_CenterProperty_get")]
  #endif
  public static extern IntPtr RadialGradientBrush_CenterProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadialGradientBrush_GradientOriginProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RadialGradientBrush_GradientOriginProperty_set")]
  #endif
  public static extern void RadialGradientBrush_GradientOriginProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadialGradientBrush_GradientOriginProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RadialGradientBrush_GradientOriginProperty_get")]
  #endif
  public static extern IntPtr RadialGradientBrush_GradientOriginProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadialGradientBrush_RadiusXProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RadialGradientBrush_RadiusXProperty_set")]
  #endif
  public static extern void RadialGradientBrush_RadiusXProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadialGradientBrush_RadiusXProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RadialGradientBrush_RadiusXProperty_get")]
  #endif
  public static extern IntPtr RadialGradientBrush_RadiusXProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadialGradientBrush_RadiusYProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RadialGradientBrush_RadiusYProperty_set")]
  #endif
  public static extern void RadialGradientBrush_RadiusYProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadialGradientBrush_RadiusYProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RadialGradientBrush_RadiusYProperty_get")]
  #endif
  public static extern IntPtr RadialGradientBrush_RadiusYProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_RadialGradientBrush")]
  #else
  [DllImport("Noesis", EntryPoint="delete_RadialGradientBrush")]
  #endif
  public static extern void delete_RadialGradientBrush(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_RadioButton")]
  #else
  [DllImport("Noesis", EntryPoint="new_RadioButton")]
  #endif
  public static extern IntPtr new_RadioButton();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_RadioButton")]
  #else
  [DllImport("Noesis", EntryPoint="delete_RadioButton")]
  #endif
  public static extern void delete_RadioButton(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadioButton_GetGroupName")]
  #else
  [DllImport("Noesis", EntryPoint="RadioButton_GetGroupName")]
  #endif
  public static extern IntPtr RadioButton_GetGroupName(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadioButton_SetGroupName")]
  #else
  [DllImport("Noesis", EntryPoint="RadioButton_SetGroupName")]
  #endif
  public static extern void RadioButton_SetGroupName(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadioButton_GroupNameProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RadioButton_GroupNameProperty_set")]
  #endif
  public static extern void RadioButton_GroupNameProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadioButton_GroupNameProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RadioButton_GroupNameProperty_get")]
  #endif
  public static extern IntPtr RadioButton_GroupNameProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Rectangle")]
  #else
  [DllImport("Noesis", EntryPoint="new_Rectangle")]
  #endif
  public static extern IntPtr new_Rectangle();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Rectangle")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Rectangle")]
  #endif
  public static extern void delete_Rectangle(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rectangle_GetRadiusX")]
  #else
  [DllImport("Noesis", EntryPoint="Rectangle_GetRadiusX")]
  #endif
  public static extern float Rectangle_GetRadiusX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rectangle_SetRadiusX")]
  #else
  [DllImport("Noesis", EntryPoint="Rectangle_SetRadiusX")]
  #endif
  public static extern void Rectangle_SetRadiusX(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rectangle_GetRadiusY")]
  #else
  [DllImport("Noesis", EntryPoint="Rectangle_GetRadiusY")]
  #endif
  public static extern float Rectangle_GetRadiusY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rectangle_SetRadiusY")]
  #else
  [DllImport("Noesis", EntryPoint="Rectangle_SetRadiusY")]
  #endif
  public static extern void Rectangle_SetRadiusY(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rectangle_RadiusXProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Rectangle_RadiusXProperty_set")]
  #endif
  public static extern void Rectangle_RadiusXProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rectangle_RadiusXProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Rectangle_RadiusXProperty_get")]
  #endif
  public static extern IntPtr Rectangle_RadiusXProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rectangle_RadiusYProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Rectangle_RadiusYProperty_set")]
  #endif
  public static extern void Rectangle_RadiusYProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rectangle_RadiusYProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Rectangle_RadiusYProperty_get")]
  #endif
  public static extern IntPtr Rectangle_RadiusYProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_RectangleGeometry__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_RectangleGeometry__SWIG_0")]
  #endif
  public static extern IntPtr new_RectangleGeometry__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_RectangleGeometry__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_RectangleGeometry__SWIG_1")]
  #endif
  public static extern IntPtr new_RectangleGeometry__SWIG_1(HandleRef jarg1, float jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_RectangleGeometry__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_RectangleGeometry__SWIG_2")]
  #endif
  public static extern IntPtr new_RectangleGeometry__SWIG_2(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_RectangleGeometry__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="new_RectangleGeometry__SWIG_3")]
  #endif
  public static extern IntPtr new_RectangleGeometry__SWIG_3(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectangleGeometry_GetRadiusX")]
  #else
  [DllImport("Noesis", EntryPoint="RectangleGeometry_GetRadiusX")]
  #endif
  public static extern float RectangleGeometry_GetRadiusX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectangleGeometry_SetRadiusX")]
  #else
  [DllImport("Noesis", EntryPoint="RectangleGeometry_SetRadiusX")]
  #endif
  public static extern void RectangleGeometry_SetRadiusX(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectangleGeometry_GetRadiusY")]
  #else
  [DllImport("Noesis", EntryPoint="RectangleGeometry_GetRadiusY")]
  #endif
  public static extern float RectangleGeometry_GetRadiusY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectangleGeometry_SetRadiusY")]
  #else
  [DllImport("Noesis", EntryPoint="RectangleGeometry_SetRadiusY")]
  #endif
  public static extern void RectangleGeometry_SetRadiusY(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectangleGeometry_GetRect")]
  #else
  [DllImport("Noesis", EntryPoint="RectangleGeometry_GetRect")]
  #endif
  public static extern IntPtr RectangleGeometry_GetRect(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectangleGeometry_SetRect")]
  #else
  [DllImport("Noesis", EntryPoint="RectangleGeometry_SetRect")]
  #endif
  public static extern void RectangleGeometry_SetRect(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectangleGeometry_IsEmpty")]
  #else
  [DllImport("Noesis", EntryPoint="RectangleGeometry_IsEmpty")]
  #endif
  public static extern bool RectangleGeometry_IsEmpty(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectangleGeometry_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="RectangleGeometry_CreateRenderProxy")]
  #endif
  public static extern void RectangleGeometry_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectangleGeometry_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="RectangleGeometry_UpdateRenderProxy")]
  #endif
  public static extern void RectangleGeometry_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectangleGeometry_RadiusXProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RectangleGeometry_RadiusXProperty_set")]
  #endif
  public static extern void RectangleGeometry_RadiusXProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectangleGeometry_RadiusXProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RectangleGeometry_RadiusXProperty_get")]
  #endif
  public static extern IntPtr RectangleGeometry_RadiusXProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectangleGeometry_RadiusYProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RectangleGeometry_RadiusYProperty_set")]
  #endif
  public static extern void RectangleGeometry_RadiusYProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectangleGeometry_RadiusYProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RectangleGeometry_RadiusYProperty_get")]
  #endif
  public static extern IntPtr RectangleGeometry_RadiusYProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectangleGeometry_RectProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RectangleGeometry_RectProperty_set")]
  #endif
  public static extern void RectangleGeometry_RectProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectangleGeometry_RectProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RectangleGeometry_RectProperty_get")]
  #endif
  public static extern IntPtr RectangleGeometry_RectProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_RectangleGeometry")]
  #else
  [DllImport("Noesis", EntryPoint="delete_RectangleGeometry")]
  #endif
  public static extern void delete_RectangleGeometry(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_RelativeSource__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_RelativeSource__SWIG_0")]
  #endif
  public static extern IntPtr new_RelativeSource__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_RelativeSource__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_RelativeSource__SWIG_1")]
  #endif
  public static extern IntPtr new_RelativeSource__SWIG_1(int jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_RelativeSource__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_RelativeSource__SWIG_2")]
  #endif
  public static extern IntPtr new_RelativeSource__SWIG_2(int jarg1, HandleRef jarg2, int jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_RelativeSource__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="new_RelativeSource__SWIG_3")]
  #endif
  public static extern IntPtr new_RelativeSource__SWIG_3(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_RelativeSource")]
  #else
  [DllImport("Noesis", EntryPoint="delete_RelativeSource")]
  #endif
  public static extern void delete_RelativeSource(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RelativeSource_GetPreviousData")]
  #else
  [DllImport("Noesis", EntryPoint="RelativeSource_GetPreviousData")]
  #endif
  public static extern IntPtr RelativeSource_GetPreviousData();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RelativeSource_GetSelf")]
  #else
  [DllImport("Noesis", EntryPoint="RelativeSource_GetSelf")]
  #endif
  public static extern IntPtr RelativeSource_GetSelf();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RelativeSource_GetTemplatedParent")]
  #else
  [DllImport("Noesis", EntryPoint="RelativeSource_GetTemplatedParent")]
  #endif
  public static extern IntPtr RelativeSource_GetTemplatedParent();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RelativeSource_GetMode")]
  #else
  [DllImport("Noesis", EntryPoint="RelativeSource_GetMode")]
  #endif
  public static extern int RelativeSource_GetMode(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RelativeSource_SetMode")]
  #else
  [DllImport("Noesis", EntryPoint="RelativeSource_SetMode")]
  #endif
  public static extern void RelativeSource_SetMode(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RelativeSource_GetAncestorType")]
  #else
  [DllImport("Noesis", EntryPoint="RelativeSource_GetAncestorType")]
  #endif
  public static extern IntPtr RelativeSource_GetAncestorType(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RelativeSource_SetAncestorType")]
  #else
  [DllImport("Noesis", EntryPoint="RelativeSource_SetAncestorType")]
  #endif
  public static extern void RelativeSource_SetAncestorType(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RelativeSource_GetAncestorLevel")]
  #else
  [DllImport("Noesis", EntryPoint="RelativeSource_GetAncestorLevel")]
  #endif
  public static extern int RelativeSource_GetAncestorLevel(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RelativeSource_SetAncestorLevel")]
  #else
  [DllImport("Noesis", EntryPoint="RelativeSource_SetAncestorLevel")]
  #endif
  public static extern void RelativeSource_SetAncestorLevel(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RelativeSource_ProvideValue")]
  #else
  [DllImport("Noesis", EntryPoint="RelativeSource_ProvideValue")]
  #endif
  public static extern IntPtr RelativeSource_ProvideValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_RepeatButton")]
  #else
  [DllImport("Noesis", EntryPoint="new_RepeatButton")]
  #endif
  public static extern IntPtr new_RepeatButton();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_RepeatButton")]
  #else
  [DllImport("Noesis", EntryPoint="delete_RepeatButton")]
  #endif
  public static extern void delete_RepeatButton(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RepeatButton_GetDelay")]
  #else
  [DllImport("Noesis", EntryPoint="RepeatButton_GetDelay")]
  #endif
  public static extern int RepeatButton_GetDelay(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RepeatButton_SetDelay")]
  #else
  [DllImport("Noesis", EntryPoint="RepeatButton_SetDelay")]
  #endif
  public static extern void RepeatButton_SetDelay(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RepeatButton_GetInterval")]
  #else
  [DllImport("Noesis", EntryPoint="RepeatButton_GetInterval")]
  #endif
  public static extern int RepeatButton_GetInterval(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RepeatButton_SetInterval")]
  #else
  [DllImport("Noesis", EntryPoint="RepeatButton_SetInterval")]
  #endif
  public static extern void RepeatButton_SetInterval(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RepeatButton_DelayProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RepeatButton_DelayProperty_set")]
  #endif
  public static extern void RepeatButton_DelayProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RepeatButton_DelayProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RepeatButton_DelayProperty_get")]
  #endif
  public static extern IntPtr RepeatButton_DelayProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RepeatButton_IntervalProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RepeatButton_IntervalProperty_set")]
  #endif
  public static extern void RepeatButton_IntervalProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RepeatButton_IntervalProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RepeatButton_IntervalProperty_get")]
  #endif
  public static extern IntPtr RepeatButton_IntervalProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_RotateTransform")]
  #else
  [DllImport("Noesis", EntryPoint="new_RotateTransform")]
  #endif
  public static extern IntPtr new_RotateTransform();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RotateTransform_GetAngle")]
  #else
  [DllImport("Noesis", EntryPoint="RotateTransform_GetAngle")]
  #endif
  public static extern float RotateTransform_GetAngle(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RotateTransform_SetAngle")]
  #else
  [DllImport("Noesis", EntryPoint="RotateTransform_SetAngle")]
  #endif
  public static extern void RotateTransform_SetAngle(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RotateTransform_GetCenterX")]
  #else
  [DllImport("Noesis", EntryPoint="RotateTransform_GetCenterX")]
  #endif
  public static extern float RotateTransform_GetCenterX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RotateTransform_SetCenterX")]
  #else
  [DllImport("Noesis", EntryPoint="RotateTransform_SetCenterX")]
  #endif
  public static extern void RotateTransform_SetCenterX(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RotateTransform_GetCenterY")]
  #else
  [DllImport("Noesis", EntryPoint="RotateTransform_GetCenterY")]
  #endif
  public static extern float RotateTransform_GetCenterY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RotateTransform_SetCenterY")]
  #else
  [DllImport("Noesis", EntryPoint="RotateTransform_SetCenterY")]
  #endif
  public static extern void RotateTransform_SetCenterY(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RotateTransform_GetTransform")]
  #else
  [DllImport("Noesis", EntryPoint="RotateTransform_GetTransform")]
  #endif
  public static extern IntPtr RotateTransform_GetTransform(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RotateTransform_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="RotateTransform_CreateRenderProxy")]
  #endif
  public static extern void RotateTransform_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RotateTransform_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="RotateTransform_UpdateRenderProxy")]
  #endif
  public static extern void RotateTransform_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RotateTransform_UnregisterRenderer")]
  #else
  [DllImport("Noesis", EntryPoint="RotateTransform_UnregisterRenderer")]
  #endif
  public static extern void RotateTransform_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RotateTransform_AngleProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RotateTransform_AngleProperty_set")]
  #endif
  public static extern void RotateTransform_AngleProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RotateTransform_AngleProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RotateTransform_AngleProperty_get")]
  #endif
  public static extern IntPtr RotateTransform_AngleProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RotateTransform_CenterXProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RotateTransform_CenterXProperty_set")]
  #endif
  public static extern void RotateTransform_CenterXProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RotateTransform_CenterXProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RotateTransform_CenterXProperty_get")]
  #endif
  public static extern IntPtr RotateTransform_CenterXProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RotateTransform_CenterYProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RotateTransform_CenterYProperty_set")]
  #endif
  public static extern void RotateTransform_CenterYProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RotateTransform_CenterYProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RotateTransform_CenterYProperty_get")]
  #endif
  public static extern IntPtr RotateTransform_CenterYProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_RotateTransform")]
  #else
  [DllImport("Noesis", EntryPoint="delete_RotateTransform")]
  #endif
  public static extern void delete_RotateTransform(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_RoutedCommand")]
  #else
  [DllImport("Noesis", EntryPoint="new_RoutedCommand")]
  #endif
  public static extern IntPtr new_RoutedCommand(IntPtr jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_RoutedCommand")]
  #else
  [DllImport("Noesis", EntryPoint="delete_RoutedCommand")]
  #endif
  public static extern void delete_RoutedCommand(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedCommand_Create__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedCommand_Create__SWIG_0")]
  #endif
  public static extern IntPtr RoutedCommand_Create__SWIG_0(string jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedCommand_Create__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedCommand_Create__SWIG_1")]
  #endif
  public static extern IntPtr RoutedCommand_Create__SWIG_1(string jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedCommand_Create__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedCommand_Create__SWIG_2")]
  #endif
  public static extern IntPtr RoutedCommand_Create__SWIG_2(string jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedCommand_GetInputGestures")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedCommand_GetInputGestures")]
  #endif
  public static extern IntPtr RoutedCommand_GetInputGestures(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedCommand_CanExecute__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedCommand_CanExecute__SWIG_0")]
  #endif
  public static extern bool RoutedCommand_CanExecute__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedCommand_Execute__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedCommand_Execute__SWIG_0")]
  #endif
  public static extern void RoutedCommand_Execute__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedCommand_CanExecute__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedCommand_CanExecute__SWIG_1")]
  #endif
  public static extern bool RoutedCommand_CanExecute__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedCommand_Execute__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedCommand_Execute__SWIG_1")]
  #endif
  public static extern void RoutedCommand_Execute__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_RoutedUICommand")]
  #else
  [DllImport("Noesis", EntryPoint="new_RoutedUICommand")]
  #endif
  public static extern IntPtr new_RoutedUICommand(string jarg1, IntPtr jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_RoutedUICommand")]
  #else
  [DllImport("Noesis", EntryPoint="delete_RoutedUICommand")]
  #endif
  public static extern void delete_RoutedUICommand(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedUICommand_Create__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedUICommand_Create__SWIG_0")]
  #endif
  public static extern IntPtr RoutedUICommand_Create__SWIG_0(string jarg1, string jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedUICommand_Create__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedUICommand_Create__SWIG_1")]
  #endif
  public static extern IntPtr RoutedUICommand_Create__SWIG_1(string jarg1, string jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedUICommand_Create__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedUICommand_Create__SWIG_2")]
  #endif
  public static extern IntPtr RoutedUICommand_Create__SWIG_2(string jarg1, string jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedUICommand_GetText")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedUICommand_GetText")]
  #endif
  public static extern string RoutedUICommand_GetText(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedUICommand_SetText")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedUICommand_SetText")]
  #endif
  public static extern void RoutedUICommand_SetText(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_RowDefinition")]
  #else
  [DllImport("Noesis", EntryPoint="new_RowDefinition")]
  #endif
  public static extern IntPtr new_RowDefinition();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RowDefinition_GetHeight")]
  #else
  [DllImport("Noesis", EntryPoint="RowDefinition_GetHeight")]
  #endif
  public static extern IntPtr RowDefinition_GetHeight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RowDefinition_SetHeight")]
  #else
  [DllImport("Noesis", EntryPoint="RowDefinition_SetHeight")]
  #endif
  public static extern void RowDefinition_SetHeight(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RowDefinition_GetMinHeight")]
  #else
  [DllImport("Noesis", EntryPoint="RowDefinition_GetMinHeight")]
  #endif
  public static extern float RowDefinition_GetMinHeight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RowDefinition_SetMinHeight")]
  #else
  [DllImport("Noesis", EntryPoint="RowDefinition_SetMinHeight")]
  #endif
  public static extern void RowDefinition_SetMinHeight(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RowDefinition_GetMaxHeight")]
  #else
  [DllImport("Noesis", EntryPoint="RowDefinition_GetMaxHeight")]
  #endif
  public static extern float RowDefinition_GetMaxHeight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RowDefinition_SetMaxHeight")]
  #else
  [DllImport("Noesis", EntryPoint="RowDefinition_SetMaxHeight")]
  #endif
  public static extern void RowDefinition_SetMaxHeight(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RowDefinition_HeightProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RowDefinition_HeightProperty_set")]
  #endif
  public static extern void RowDefinition_HeightProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RowDefinition_HeightProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RowDefinition_HeightProperty_get")]
  #endif
  public static extern IntPtr RowDefinition_HeightProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RowDefinition_MinHeightProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RowDefinition_MinHeightProperty_set")]
  #endif
  public static extern void RowDefinition_MinHeightProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RowDefinition_MinHeightProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RowDefinition_MinHeightProperty_get")]
  #endif
  public static extern IntPtr RowDefinition_MinHeightProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RowDefinition_MaxHeightProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RowDefinition_MaxHeightProperty_set")]
  #endif
  public static extern void RowDefinition_MaxHeightProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RowDefinition_MaxHeightProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RowDefinition_MaxHeightProperty_get")]
  #endif
  public static extern IntPtr RowDefinition_MaxHeightProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_RowDefinition")]
  #else
  [DllImport("Noesis", EntryPoint="delete_RowDefinition")]
  #endif
  public static extern void delete_RowDefinition(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ScaleTransform__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_ScaleTransform__SWIG_0")]
  #endif
  public static extern IntPtr new_ScaleTransform__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ScaleTransform__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_ScaleTransform__SWIG_1")]
  #endif
  public static extern IntPtr new_ScaleTransform__SWIG_1(float jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScaleTransform_GetScaleX")]
  #else
  [DllImport("Noesis", EntryPoint="ScaleTransform_GetScaleX")]
  #endif
  public static extern float ScaleTransform_GetScaleX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScaleTransform_SetScaleX")]
  #else
  [DllImport("Noesis", EntryPoint="ScaleTransform_SetScaleX")]
  #endif
  public static extern void ScaleTransform_SetScaleX(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScaleTransform_GetScaleY")]
  #else
  [DllImport("Noesis", EntryPoint="ScaleTransform_GetScaleY")]
  #endif
  public static extern float ScaleTransform_GetScaleY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScaleTransform_SetScaleY")]
  #else
  [DllImport("Noesis", EntryPoint="ScaleTransform_SetScaleY")]
  #endif
  public static extern void ScaleTransform_SetScaleY(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScaleTransform_GetCenterX")]
  #else
  [DllImport("Noesis", EntryPoint="ScaleTransform_GetCenterX")]
  #endif
  public static extern float ScaleTransform_GetCenterX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScaleTransform_SetCenterX")]
  #else
  [DllImport("Noesis", EntryPoint="ScaleTransform_SetCenterX")]
  #endif
  public static extern void ScaleTransform_SetCenterX(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScaleTransform_GetCenterY")]
  #else
  [DllImport("Noesis", EntryPoint="ScaleTransform_GetCenterY")]
  #endif
  public static extern float ScaleTransform_GetCenterY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScaleTransform_SetCenterY")]
  #else
  [DllImport("Noesis", EntryPoint="ScaleTransform_SetCenterY")]
  #endif
  public static extern void ScaleTransform_SetCenterY(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScaleTransform_GetTransform")]
  #else
  [DllImport("Noesis", EntryPoint="ScaleTransform_GetTransform")]
  #endif
  public static extern IntPtr ScaleTransform_GetTransform(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScaleTransform_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="ScaleTransform_CreateRenderProxy")]
  #endif
  public static extern void ScaleTransform_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScaleTransform_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="ScaleTransform_UpdateRenderProxy")]
  #endif
  public static extern void ScaleTransform_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScaleTransform_UnregisterRenderer")]
  #else
  [DllImport("Noesis", EntryPoint="ScaleTransform_UnregisterRenderer")]
  #endif
  public static extern void ScaleTransform_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScaleTransform_CenterXProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScaleTransform_CenterXProperty_set")]
  #endif
  public static extern void ScaleTransform_CenterXProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScaleTransform_CenterXProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScaleTransform_CenterXProperty_get")]
  #endif
  public static extern IntPtr ScaleTransform_CenterXProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScaleTransform_CenterYProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScaleTransform_CenterYProperty_set")]
  #endif
  public static extern void ScaleTransform_CenterYProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScaleTransform_CenterYProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScaleTransform_CenterYProperty_get")]
  #endif
  public static extern IntPtr ScaleTransform_CenterYProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScaleTransform_ScaleXProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScaleTransform_ScaleXProperty_set")]
  #endif
  public static extern void ScaleTransform_ScaleXProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScaleTransform_ScaleXProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScaleTransform_ScaleXProperty_get")]
  #endif
  public static extern IntPtr ScaleTransform_ScaleXProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScaleTransform_ScaleYProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScaleTransform_ScaleYProperty_set")]
  #endif
  public static extern void ScaleTransform_ScaleYProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScaleTransform_ScaleYProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScaleTransform_ScaleYProperty_get")]
  #endif
  public static extern IntPtr ScaleTransform_ScaleYProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ScaleTransform")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ScaleTransform")]
  #endif
  public static extern void delete_ScaleTransform(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollEventArgs_newValue_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollEventArgs_newValue_set")]
  #endif
  public static extern void ScrollEventArgs_newValue_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollEventArgs_newValue_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollEventArgs_newValue_get")]
  #endif
  public static extern float ScrollEventArgs_newValue_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollEventArgs_scrollEventType_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollEventArgs_scrollEventType_set")]
  #endif
  public static extern void ScrollEventArgs_scrollEventType_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollEventArgs_scrollEventType_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollEventArgs_scrollEventType_get")]
  #endif
  public static extern int ScrollEventArgs_scrollEventType_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ScrollEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_ScrollEventArgs")]
  #endif
  public static extern IntPtr new_ScrollEventArgs(HandleRef jarg1, float jarg2, int jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ScrollEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ScrollEventArgs")]
  #endif
  public static extern void delete_ScrollEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ScrollBar")]
  #else
  [DllImport("Noesis", EntryPoint="new_ScrollBar")]
  #endif
  public static extern IntPtr new_ScrollBar();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ScrollBar")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ScrollBar")]
  #endif
  public static extern void delete_ScrollBar(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_GetOrientation")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_GetOrientation")]
  #endif
  public static extern int ScrollBar_GetOrientation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_SetOrientation")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_SetOrientation")]
  #endif
  public static extern void ScrollBar_SetOrientation(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_GetViewportSize")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_GetViewportSize")]
  #endif
  public static extern float ScrollBar_GetViewportSize(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_SetViewportSize")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_SetViewportSize")]
  #endif
  public static extern void ScrollBar_SetViewportSize(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_GetTrack")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_GetTrack")]
  #endif
  public static extern IntPtr ScrollBar_GetTrack(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_OrientationProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_OrientationProperty_set")]
  #endif
  public static extern void ScrollBar_OrientationProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_OrientationProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_OrientationProperty_get")]
  #endif
  public static extern IntPtr ScrollBar_OrientationProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_ViewportSizeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_ViewportSizeProperty_set")]
  #endif
  public static extern void ScrollBar_ViewportSizeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_ViewportSizeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_ViewportSizeProperty_get")]
  #endif
  public static extern IntPtr ScrollBar_ViewportSizeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_DeferScrollToHorizontalOffsetCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_DeferScrollToHorizontalOffsetCommand_set")]
  #endif
  public static extern void ScrollBar_DeferScrollToHorizontalOffsetCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_DeferScrollToHorizontalOffsetCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_DeferScrollToHorizontalOffsetCommand_get")]
  #endif
  public static extern IntPtr ScrollBar_DeferScrollToHorizontalOffsetCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_DeferScrollToVerticalOffsetCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_DeferScrollToVerticalOffsetCommand_set")]
  #endif
  public static extern void ScrollBar_DeferScrollToVerticalOffsetCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_DeferScrollToVerticalOffsetCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_DeferScrollToVerticalOffsetCommand_get")]
  #endif
  public static extern IntPtr ScrollBar_DeferScrollToVerticalOffsetCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_LineDownCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_LineDownCommand_set")]
  #endif
  public static extern void ScrollBar_LineDownCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_LineDownCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_LineDownCommand_get")]
  #endif
  public static extern IntPtr ScrollBar_LineDownCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_LineLeftCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_LineLeftCommand_set")]
  #endif
  public static extern void ScrollBar_LineLeftCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_LineLeftCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_LineLeftCommand_get")]
  #endif
  public static extern IntPtr ScrollBar_LineLeftCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_LineRightCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_LineRightCommand_set")]
  #endif
  public static extern void ScrollBar_LineRightCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_LineRightCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_LineRightCommand_get")]
  #endif
  public static extern IntPtr ScrollBar_LineRightCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_LineUpCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_LineUpCommand_set")]
  #endif
  public static extern void ScrollBar_LineUpCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_LineUpCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_LineUpCommand_get")]
  #endif
  public static extern IntPtr ScrollBar_LineUpCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_PageDownCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_PageDownCommand_set")]
  #endif
  public static extern void ScrollBar_PageDownCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_PageDownCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_PageDownCommand_get")]
  #endif
  public static extern IntPtr ScrollBar_PageDownCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_PageLeftCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_PageLeftCommand_set")]
  #endif
  public static extern void ScrollBar_PageLeftCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_PageLeftCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_PageLeftCommand_get")]
  #endif
  public static extern IntPtr ScrollBar_PageLeftCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_PageRightCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_PageRightCommand_set")]
  #endif
  public static extern void ScrollBar_PageRightCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_PageRightCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_PageRightCommand_get")]
  #endif
  public static extern IntPtr ScrollBar_PageRightCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_PageUpCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_PageUpCommand_set")]
  #endif
  public static extern void ScrollBar_PageUpCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_PageUpCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_PageUpCommand_get")]
  #endif
  public static extern IntPtr ScrollBar_PageUpCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_ScrollHereCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_ScrollHereCommand_set")]
  #endif
  public static extern void ScrollBar_ScrollHereCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_ScrollHereCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_ScrollHereCommand_get")]
  #endif
  public static extern IntPtr ScrollBar_ScrollHereCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_ScrollToBottomCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_ScrollToBottomCommand_set")]
  #endif
  public static extern void ScrollBar_ScrollToBottomCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_ScrollToBottomCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_ScrollToBottomCommand_get")]
  #endif
  public static extern IntPtr ScrollBar_ScrollToBottomCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_ScrollToEndCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_ScrollToEndCommand_set")]
  #endif
  public static extern void ScrollBar_ScrollToEndCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_ScrollToEndCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_ScrollToEndCommand_get")]
  #endif
  public static extern IntPtr ScrollBar_ScrollToEndCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_ScrollToHomeCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_ScrollToHomeCommand_set")]
  #endif
  public static extern void ScrollBar_ScrollToHomeCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_ScrollToHomeCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_ScrollToHomeCommand_get")]
  #endif
  public static extern IntPtr ScrollBar_ScrollToHomeCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_ScrollToHorizontalOffsetCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_ScrollToHorizontalOffsetCommand_set")]
  #endif
  public static extern void ScrollBar_ScrollToHorizontalOffsetCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_ScrollToHorizontalOffsetCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_ScrollToHorizontalOffsetCommand_get")]
  #endif
  public static extern IntPtr ScrollBar_ScrollToHorizontalOffsetCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_ScrollToLeftEndCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_ScrollToLeftEndCommand_set")]
  #endif
  public static extern void ScrollBar_ScrollToLeftEndCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_ScrollToLeftEndCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_ScrollToLeftEndCommand_get")]
  #endif
  public static extern IntPtr ScrollBar_ScrollToLeftEndCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_ScrollToRightEndCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_ScrollToRightEndCommand_set")]
  #endif
  public static extern void ScrollBar_ScrollToRightEndCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_ScrollToRightEndCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_ScrollToRightEndCommand_get")]
  #endif
  public static extern IntPtr ScrollBar_ScrollToRightEndCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_ScrollToTopCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_ScrollToTopCommand_set")]
  #endif
  public static extern void ScrollBar_ScrollToTopCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_ScrollToTopCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_ScrollToTopCommand_get")]
  #endif
  public static extern IntPtr ScrollBar_ScrollToTopCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_ScrollToVerticalOffsetCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_ScrollToVerticalOffsetCommand_set")]
  #endif
  public static extern void ScrollBar_ScrollToVerticalOffsetCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_ScrollToVerticalOffsetCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_ScrollToVerticalOffsetCommand_get")]
  #endif
  public static extern IntPtr ScrollBar_ScrollToVerticalOffsetCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ScrollContentPresenter")]
  #else
  [DllImport("Noesis", EntryPoint="new_ScrollContentPresenter")]
  #endif
  public static extern IntPtr new_ScrollContentPresenter();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ScrollContentPresenter")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ScrollContentPresenter")]
  #endif
  public static extern void delete_ScrollContentPresenter(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_GetCanContentScroll")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_GetCanContentScroll")]
  #endif
  public static extern bool ScrollContentPresenter_GetCanContentScroll(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_SetCanContentScroll")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_SetCanContentScroll")]
  #endif
  public static extern void ScrollContentPresenter_SetCanContentScroll(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_GetCanHorizontallyScroll")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_GetCanHorizontallyScroll")]
  #endif
  public static extern bool ScrollContentPresenter_GetCanHorizontallyScroll(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_SetCanHorizontallyScroll")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_SetCanHorizontallyScroll")]
  #endif
  public static extern void ScrollContentPresenter_SetCanHorizontallyScroll(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_GetCanVerticallyScroll")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_GetCanVerticallyScroll")]
  #endif
  public static extern bool ScrollContentPresenter_GetCanVerticallyScroll(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_SetCanVerticallyScroll")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_SetCanVerticallyScroll")]
  #endif
  public static extern void ScrollContentPresenter_SetCanVerticallyScroll(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_GetExtentWidth")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_GetExtentWidth")]
  #endif
  public static extern float ScrollContentPresenter_GetExtentWidth(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_GetExtentHeight")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_GetExtentHeight")]
  #endif
  public static extern float ScrollContentPresenter_GetExtentHeight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_GetViewportWidth")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_GetViewportWidth")]
  #endif
  public static extern float ScrollContentPresenter_GetViewportWidth(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_GetViewportHeight")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_GetViewportHeight")]
  #endif
  public static extern float ScrollContentPresenter_GetViewportHeight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_GetHorizontalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_GetHorizontalOffset")]
  #endif
  public static extern float ScrollContentPresenter_GetHorizontalOffset(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_SetHorizontalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_SetHorizontalOffset")]
  #endif
  public static extern void ScrollContentPresenter_SetHorizontalOffset(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_GetVerticalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_GetVerticalOffset")]
  #endif
  public static extern float ScrollContentPresenter_GetVerticalOffset(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_SetVerticalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_SetVerticalOffset")]
  #endif
  public static extern void ScrollContentPresenter_SetVerticalOffset(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_GetScrollOwner")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_GetScrollOwner")]
  #endif
  public static extern IntPtr ScrollContentPresenter_GetScrollOwner(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_LineDown")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_LineDown")]
  #endif
  public static extern void ScrollContentPresenter_LineDown(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_LineLeft")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_LineLeft")]
  #endif
  public static extern void ScrollContentPresenter_LineLeft(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_LineRight")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_LineRight")]
  #endif
  public static extern void ScrollContentPresenter_LineRight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_LineUp")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_LineUp")]
  #endif
  public static extern void ScrollContentPresenter_LineUp(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_MakeVisible")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_MakeVisible")]
  #endif
  public static extern IntPtr ScrollContentPresenter_MakeVisible(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_MouseWheelDown")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_MouseWheelDown")]
  #endif
  public static extern void ScrollContentPresenter_MouseWheelDown(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_MouseWheelLeft")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_MouseWheelLeft")]
  #endif
  public static extern void ScrollContentPresenter_MouseWheelLeft(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_MouseWheelRight")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_MouseWheelRight")]
  #endif
  public static extern void ScrollContentPresenter_MouseWheelRight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_MouseWheelUp")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_MouseWheelUp")]
  #endif
  public static extern void ScrollContentPresenter_MouseWheelUp(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_PageDown")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_PageDown")]
  #endif
  public static extern void ScrollContentPresenter_PageDown(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_PageLeft")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_PageLeft")]
  #endif
  public static extern void ScrollContentPresenter_PageLeft(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_PageRight")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_PageRight")]
  #endif
  public static extern void ScrollContentPresenter_PageRight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_PageUp")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_PageUp")]
  #endif
  public static extern void ScrollContentPresenter_PageUp(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_AddLayer")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_AddLayer")]
  #endif
  public static extern void ScrollContentPresenter_AddLayer(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_RemoveLayer")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_RemoveLayer")]
  #endif
  public static extern void ScrollContentPresenter_RemoveLayer(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_CanContentScrollProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_CanContentScrollProperty_set")]
  #endif
  public static extern void ScrollContentPresenter_CanContentScrollProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_CanContentScrollProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_CanContentScrollProperty_get")]
  #endif
  public static extern IntPtr ScrollContentPresenter_CanContentScrollProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_extentHeight_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_extentHeight_set")]
  #endif
  public static extern void ScrollChangedEventArgs_extentHeight_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_extentHeight_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_extentHeight_get")]
  #endif
  public static extern float ScrollChangedEventArgs_extentHeight_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_extentHeightChange_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_extentHeightChange_set")]
  #endif
  public static extern void ScrollChangedEventArgs_extentHeightChange_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_extentHeightChange_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_extentHeightChange_get")]
  #endif
  public static extern float ScrollChangedEventArgs_extentHeightChange_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_extentWidth_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_extentWidth_set")]
  #endif
  public static extern void ScrollChangedEventArgs_extentWidth_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_extentWidth_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_extentWidth_get")]
  #endif
  public static extern float ScrollChangedEventArgs_extentWidth_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_extentWidthChange_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_extentWidthChange_set")]
  #endif
  public static extern void ScrollChangedEventArgs_extentWidthChange_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_extentWidthChange_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_extentWidthChange_get")]
  #endif
  public static extern float ScrollChangedEventArgs_extentWidthChange_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_horizontalChange_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_horizontalChange_set")]
  #endif
  public static extern void ScrollChangedEventArgs_horizontalChange_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_horizontalChange_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_horizontalChange_get")]
  #endif
  public static extern float ScrollChangedEventArgs_horizontalChange_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_horizontalOffset_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_horizontalOffset_set")]
  #endif
  public static extern void ScrollChangedEventArgs_horizontalOffset_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_horizontalOffset_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_horizontalOffset_get")]
  #endif
  public static extern float ScrollChangedEventArgs_horizontalOffset_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_verticalChange_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_verticalChange_set")]
  #endif
  public static extern void ScrollChangedEventArgs_verticalChange_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_verticalChange_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_verticalChange_get")]
  #endif
  public static extern float ScrollChangedEventArgs_verticalChange_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_verticalOffset_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_verticalOffset_set")]
  #endif
  public static extern void ScrollChangedEventArgs_verticalOffset_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_verticalOffset_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_verticalOffset_get")]
  #endif
  public static extern float ScrollChangedEventArgs_verticalOffset_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_viewportHeight_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_viewportHeight_set")]
  #endif
  public static extern void ScrollChangedEventArgs_viewportHeight_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_viewportHeight_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_viewportHeight_get")]
  #endif
  public static extern float ScrollChangedEventArgs_viewportHeight_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_viewportHeightChange_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_viewportHeightChange_set")]
  #endif
  public static extern void ScrollChangedEventArgs_viewportHeightChange_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_viewportHeightChange_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_viewportHeightChange_get")]
  #endif
  public static extern float ScrollChangedEventArgs_viewportHeightChange_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_viewportWidth_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_viewportWidth_set")]
  #endif
  public static extern void ScrollChangedEventArgs_viewportWidth_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_viewportWidth_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_viewportWidth_get")]
  #endif
  public static extern float ScrollChangedEventArgs_viewportWidth_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_viewportWidthChange_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_viewportWidthChange_set")]
  #endif
  public static extern void ScrollChangedEventArgs_viewportWidthChange_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_viewportWidthChange_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_viewportWidthChange_get")]
  #endif
  public static extern float ScrollChangedEventArgs_viewportWidthChange_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ScrollChangedEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_ScrollChangedEventArgs")]
  #endif
  public static extern IntPtr new_ScrollChangedEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ScrollChangedEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ScrollChangedEventArgs")]
  #endif
  public static extern void delete_ScrollChangedEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ScrollViewer")]
  #else
  [DllImport("Noesis", EntryPoint="new_ScrollViewer")]
  #endif
  public static extern IntPtr new_ScrollViewer();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ScrollViewer")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ScrollViewer")]
  #endif
  public static extern void delete_ScrollViewer(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_GetHorizontalScrollBarVisibility")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_GetHorizontalScrollBarVisibility")]
  #endif
  public static extern int ScrollViewer_GetHorizontalScrollBarVisibility(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_SetHorizontalScrollBarVisibility")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_SetHorizontalScrollBarVisibility")]
  #endif
  public static extern void ScrollViewer_SetHorizontalScrollBarVisibility(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_GetVerticalScrollBarVisibility")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_GetVerticalScrollBarVisibility")]
  #endif
  public static extern int ScrollViewer_GetVerticalScrollBarVisibility(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_SetVerticalScrollBarVisibility")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_SetVerticalScrollBarVisibility")]
  #endif
  public static extern void ScrollViewer_SetVerticalScrollBarVisibility(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_GetCanContentScroll")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_GetCanContentScroll")]
  #endif
  public static extern bool ScrollViewer_GetCanContentScroll(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_SetCanContentScroll")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_SetCanContentScroll")]
  #endif
  public static extern void ScrollViewer_SetCanContentScroll(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_GetComputedHorizontalScrollBarVisibility")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_GetComputedHorizontalScrollBarVisibility")]
  #endif
  public static extern int ScrollViewer_GetComputedHorizontalScrollBarVisibility(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_GetComputedVerticalScrollBarVisibility")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_GetComputedVerticalScrollBarVisibility")]
  #endif
  public static extern int ScrollViewer_GetComputedVerticalScrollBarVisibility(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_GetExtentHeight")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_GetExtentHeight")]
  #endif
  public static extern float ScrollViewer_GetExtentHeight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_GetExtentWidth")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_GetExtentWidth")]
  #endif
  public static extern float ScrollViewer_GetExtentWidth(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_GetHorizontalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_GetHorizontalOffset")]
  #endif
  public static extern float ScrollViewer_GetHorizontalOffset(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_GetScrollableHeight")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_GetScrollableHeight")]
  #endif
  public static extern float ScrollViewer_GetScrollableHeight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_GetScrollableWidth")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_GetScrollableWidth")]
  #endif
  public static extern float ScrollViewer_GetScrollableWidth(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_GetVerticalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_GetVerticalOffset")]
  #endif
  public static extern float ScrollViewer_GetVerticalOffset(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_GetViewportHeight")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_GetViewportHeight")]
  #endif
  public static extern float ScrollViewer_GetViewportHeight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_GetViewportWidth")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_GetViewportWidth")]
  #endif
  public static extern float ScrollViewer_GetViewportWidth(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_GetScrollInfo")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_GetScrollInfo")]
  #endif
  public static extern IntPtr ScrollViewer_GetScrollInfo(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_SetScrollInfo")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_SetScrollInfo")]
  #endif
  public static extern void ScrollViewer_SetScrollInfo(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_InvalidateScrollInfo")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_InvalidateScrollInfo")]
  #endif
  public static extern void ScrollViewer_InvalidateScrollInfo(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_ScrollToHorizontalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_ScrollToHorizontalOffset")]
  #endif
  public static extern void ScrollViewer_ScrollToHorizontalOffset(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_ScrollToVerticalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_ScrollToVerticalOffset")]
  #endif
  public static extern void ScrollViewer_ScrollToVerticalOffset(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_CanContentScrollProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_CanContentScrollProperty_set")]
  #endif
  public static extern void ScrollViewer_CanContentScrollProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_CanContentScrollProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_CanContentScrollProperty_get")]
  #endif
  public static extern IntPtr ScrollViewer_CanContentScrollProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_ComputedHorizontalScrollBarVisibilityProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_ComputedHorizontalScrollBarVisibilityProperty_set")]
  #endif
  public static extern void ScrollViewer_ComputedHorizontalScrollBarVisibilityProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_ComputedHorizontalScrollBarVisibilityProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_ComputedHorizontalScrollBarVisibilityProperty_get")]
  #endif
  public static extern IntPtr ScrollViewer_ComputedHorizontalScrollBarVisibilityProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_ComputedVerticalScrollBarVisibilityProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_ComputedVerticalScrollBarVisibilityProperty_set")]
  #endif
  public static extern void ScrollViewer_ComputedVerticalScrollBarVisibilityProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_ComputedVerticalScrollBarVisibilityProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_ComputedVerticalScrollBarVisibilityProperty_get")]
  #endif
  public static extern IntPtr ScrollViewer_ComputedVerticalScrollBarVisibilityProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_ExtentHeightProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_ExtentHeightProperty_set")]
  #endif
  public static extern void ScrollViewer_ExtentHeightProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_ExtentHeightProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_ExtentHeightProperty_get")]
  #endif
  public static extern IntPtr ScrollViewer_ExtentHeightProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_ExtentWidthProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_ExtentWidthProperty_set")]
  #endif
  public static extern void ScrollViewer_ExtentWidthProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_ExtentWidthProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_ExtentWidthProperty_get")]
  #endif
  public static extern IntPtr ScrollViewer_ExtentWidthProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_HorizontalOffsetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_HorizontalOffsetProperty_set")]
  #endif
  public static extern void ScrollViewer_HorizontalOffsetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_HorizontalOffsetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_HorizontalOffsetProperty_get")]
  #endif
  public static extern IntPtr ScrollViewer_HorizontalOffsetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_HorizontalScrollBarVisibilityProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_HorizontalScrollBarVisibilityProperty_set")]
  #endif
  public static extern void ScrollViewer_HorizontalScrollBarVisibilityProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_HorizontalScrollBarVisibilityProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_HorizontalScrollBarVisibilityProperty_get")]
  #endif
  public static extern IntPtr ScrollViewer_HorizontalScrollBarVisibilityProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_ScrollableHeightProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_ScrollableHeightProperty_set")]
  #endif
  public static extern void ScrollViewer_ScrollableHeightProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_ScrollableHeightProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_ScrollableHeightProperty_get")]
  #endif
  public static extern IntPtr ScrollViewer_ScrollableHeightProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_ScrollableWidthProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_ScrollableWidthProperty_set")]
  #endif
  public static extern void ScrollViewer_ScrollableWidthProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_ScrollableWidthProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_ScrollableWidthProperty_get")]
  #endif
  public static extern IntPtr ScrollViewer_ScrollableWidthProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_VerticalOffsetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_VerticalOffsetProperty_set")]
  #endif
  public static extern void ScrollViewer_VerticalOffsetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_VerticalOffsetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_VerticalOffsetProperty_get")]
  #endif
  public static extern IntPtr ScrollViewer_VerticalOffsetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_VerticalScrollBarVisibilityProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_VerticalScrollBarVisibilityProperty_set")]
  #endif
  public static extern void ScrollViewer_VerticalScrollBarVisibilityProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_VerticalScrollBarVisibilityProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_VerticalScrollBarVisibilityProperty_get")]
  #endif
  public static extern IntPtr ScrollViewer_VerticalScrollBarVisibilityProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_ViewportHeightProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_ViewportHeightProperty_set")]
  #endif
  public static extern void ScrollViewer_ViewportHeightProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_ViewportHeightProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_ViewportHeightProperty_get")]
  #endif
  public static extern IntPtr ScrollViewer_ViewportHeightProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_ViewportWidthProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_ViewportWidthProperty_set")]
  #endif
  public static extern void ScrollViewer_ViewportWidthProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_ViewportWidthProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_ViewportWidthProperty_get")]
  #endif
  public static extern IntPtr ScrollViewer_ViewportWidthProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Separator")]
  #else
  [DllImport("Noesis", EntryPoint="new_Separator")]
  #endif
  public static extern IntPtr new_Separator();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Separator")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Separator")]
  #endif
  public static extern void delete_Separator(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Setter")]
  #else
  [DllImport("Noesis", EntryPoint="new_Setter")]
  #endif
  public static extern IntPtr new_Setter();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Setter_GetTargetName")]
  #else
  [DllImport("Noesis", EntryPoint="Setter_GetTargetName")]
  #endif
  public static extern IntPtr Setter_GetTargetName(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Setter_SetTargetName")]
  #else
  [DllImport("Noesis", EntryPoint="Setter_SetTargetName")]
  #endif
  public static extern void Setter_SetTargetName(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Setter_GetProperty")]
  #else
  [DllImport("Noesis", EntryPoint="Setter_GetProperty")]
  #endif
  public static extern IntPtr Setter_GetProperty(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Setter_SetProperty")]
  #else
  [DllImport("Noesis", EntryPoint="Setter_SetProperty")]
  #endif
  public static extern void Setter_SetProperty(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Setter_GetValue")]
  #else
  [DllImport("Noesis", EntryPoint="Setter_GetValue")]
  #endif
  public static extern IntPtr Setter_GetValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Setter_SetValue")]
  #else
  [DllImport("Noesis", EntryPoint="Setter_SetValue")]
  #endif
  public static extern void Setter_SetValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Setter")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Setter")]
  #endif
  public static extern void delete_Setter(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeChangedInfo_newSize_set")]
  #else
  [DllImport("Noesis", EntryPoint="SizeChangedInfo_newSize_set")]
  #endif
  public static extern void SizeChangedInfo_newSize_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeChangedInfo_newSize_get")]
  #else
  [DllImport("Noesis", EntryPoint="SizeChangedInfo_newSize_get")]
  #endif
  public static extern IntPtr SizeChangedInfo_newSize_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeChangedInfo_previousSize_set")]
  #else
  [DllImport("Noesis", EntryPoint="SizeChangedInfo_previousSize_set")]
  #endif
  public static extern void SizeChangedInfo_previousSize_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeChangedInfo_previousSize_get")]
  #else
  [DllImport("Noesis", EntryPoint="SizeChangedInfo_previousSize_get")]
  #endif
  public static extern IntPtr SizeChangedInfo_previousSize_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeChangedInfo_widthChanged_set")]
  #else
  [DllImport("Noesis", EntryPoint="SizeChangedInfo_widthChanged_set")]
  #endif
  public static extern void SizeChangedInfo_widthChanged_set(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeChangedInfo_widthChanged_get")]
  #else
  [DllImport("Noesis", EntryPoint="SizeChangedInfo_widthChanged_get")]
  #endif
  public static extern bool SizeChangedInfo_widthChanged_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeChangedInfo_heightChanged_set")]
  #else
  [DllImport("Noesis", EntryPoint="SizeChangedInfo_heightChanged_set")]
  #endif
  public static extern void SizeChangedInfo_heightChanged_set(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeChangedInfo_heightChanged_get")]
  #else
  [DllImport("Noesis", EntryPoint="SizeChangedInfo_heightChanged_get")]
  #endif
  public static extern bool SizeChangedInfo_heightChanged_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_SizeChangedInfo")]
  #else
  [DllImport("Noesis", EntryPoint="new_SizeChangedInfo")]
  #endif
  public static extern IntPtr new_SizeChangedInfo();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_SizeChangedInfo")]
  #else
  [DllImport("Noesis", EntryPoint="delete_SizeChangedInfo")]
  #endif
  public static extern void delete_SizeChangedInfo(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeChangedEventArgs_sizeChangedInfo_set")]
  #else
  [DllImport("Noesis", EntryPoint="SizeChangedEventArgs_sizeChangedInfo_set")]
  #endif
  public static extern void SizeChangedEventArgs_sizeChangedInfo_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeChangedEventArgs_sizeChangedInfo_get")]
  #else
  [DllImport("Noesis", EntryPoint="SizeChangedEventArgs_sizeChangedInfo_get")]
  #endif
  public static extern IntPtr SizeChangedEventArgs_sizeChangedInfo_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_SizeChangedEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_SizeChangedEventArgs")]
  #endif
  public static extern IntPtr new_SizeChangedEventArgs(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_SizeChangedEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_SizeChangedEventArgs")]
  #endif
  public static extern void delete_SizeChangedEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_SkewTransform")]
  #else
  [DllImport("Noesis", EntryPoint="new_SkewTransform")]
  #endif
  public static extern IntPtr new_SkewTransform();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SkewTransform_GetAngleX")]
  #else
  [DllImport("Noesis", EntryPoint="SkewTransform_GetAngleX")]
  #endif
  public static extern float SkewTransform_GetAngleX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SkewTransform_SetAngleX")]
  #else
  [DllImport("Noesis", EntryPoint="SkewTransform_SetAngleX")]
  #endif
  public static extern void SkewTransform_SetAngleX(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SkewTransform_GetAngleY")]
  #else
  [DllImport("Noesis", EntryPoint="SkewTransform_GetAngleY")]
  #endif
  public static extern float SkewTransform_GetAngleY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SkewTransform_SetAngleY")]
  #else
  [DllImport("Noesis", EntryPoint="SkewTransform_SetAngleY")]
  #endif
  public static extern void SkewTransform_SetAngleY(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SkewTransform_GetCenterX")]
  #else
  [DllImport("Noesis", EntryPoint="SkewTransform_GetCenterX")]
  #endif
  public static extern float SkewTransform_GetCenterX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SkewTransform_SetCenterX")]
  #else
  [DllImport("Noesis", EntryPoint="SkewTransform_SetCenterX")]
  #endif
  public static extern void SkewTransform_SetCenterX(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SkewTransform_GetCenterY")]
  #else
  [DllImport("Noesis", EntryPoint="SkewTransform_GetCenterY")]
  #endif
  public static extern float SkewTransform_GetCenterY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SkewTransform_SetCenterY")]
  #else
  [DllImport("Noesis", EntryPoint="SkewTransform_SetCenterY")]
  #endif
  public static extern void SkewTransform_SetCenterY(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SkewTransform_GetTransform")]
  #else
  [DllImport("Noesis", EntryPoint="SkewTransform_GetTransform")]
  #endif
  public static extern IntPtr SkewTransform_GetTransform(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SkewTransform_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="SkewTransform_CreateRenderProxy")]
  #endif
  public static extern void SkewTransform_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SkewTransform_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="SkewTransform_UpdateRenderProxy")]
  #endif
  public static extern void SkewTransform_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SkewTransform_UnregisterRenderer")]
  #else
  [DllImport("Noesis", EntryPoint="SkewTransform_UnregisterRenderer")]
  #endif
  public static extern void SkewTransform_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SkewTransform_AngleXProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="SkewTransform_AngleXProperty_set")]
  #endif
  public static extern void SkewTransform_AngleXProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SkewTransform_AngleXProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="SkewTransform_AngleXProperty_get")]
  #endif
  public static extern IntPtr SkewTransform_AngleXProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SkewTransform_AngleYProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="SkewTransform_AngleYProperty_set")]
  #endif
  public static extern void SkewTransform_AngleYProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SkewTransform_AngleYProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="SkewTransform_AngleYProperty_get")]
  #endif
  public static extern IntPtr SkewTransform_AngleYProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SkewTransform_CenterXProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="SkewTransform_CenterXProperty_set")]
  #endif
  public static extern void SkewTransform_CenterXProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SkewTransform_CenterXProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="SkewTransform_CenterXProperty_get")]
  #endif
  public static extern IntPtr SkewTransform_CenterXProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SkewTransform_CenterYProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="SkewTransform_CenterYProperty_set")]
  #endif
  public static extern void SkewTransform_CenterYProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SkewTransform_CenterYProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="SkewTransform_CenterYProperty_get")]
  #endif
  public static extern IntPtr SkewTransform_CenterYProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_SkewTransform")]
  #else
  [DllImport("Noesis", EntryPoint="delete_SkewTransform")]
  #endif
  public static extern void delete_SkewTransform(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Slider")]
  #else
  [DllImport("Noesis", EntryPoint="new_Slider")]
  #endif
  public static extern IntPtr new_Slider();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Slider")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Slider")]
  #endif
  public static extern void delete_Slider(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_GetAutoToolTipPlacement")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_GetAutoToolTipPlacement")]
  #endif
  public static extern int Slider_GetAutoToolTipPlacement(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_SetAutoToolTipPlacement")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_SetAutoToolTipPlacement")]
  #endif
  public static extern void Slider_SetAutoToolTipPlacement(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_GetAutoToolTipPrecision")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_GetAutoToolTipPrecision")]
  #endif
  public static extern int Slider_GetAutoToolTipPrecision(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_SetAutoToolTipPrecision")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_SetAutoToolTipPrecision")]
  #endif
  public static extern void Slider_SetAutoToolTipPrecision(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_GetDelay")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_GetDelay")]
  #endif
  public static extern int Slider_GetDelay(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_SetDelay")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_SetDelay")]
  #endif
  public static extern void Slider_SetDelay(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_GetInterval")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_GetInterval")]
  #endif
  public static extern int Slider_GetInterval(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_SetInterval")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_SetInterval")]
  #endif
  public static extern void Slider_SetInterval(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_GetIsDirectionReversed")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_GetIsDirectionReversed")]
  #endif
  public static extern bool Slider_GetIsDirectionReversed(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_SetIsDirectionReversed")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_SetIsDirectionReversed")]
  #endif
  public static extern void Slider_SetIsDirectionReversed(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_GetIsMoveToPointEnabled")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_GetIsMoveToPointEnabled")]
  #endif
  public static extern bool Slider_GetIsMoveToPointEnabled(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_SetIsMoveToPointEnabled")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_SetIsMoveToPointEnabled")]
  #endif
  public static extern void Slider_SetIsMoveToPointEnabled(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_GetIsSelectionRangeEnabled")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_GetIsSelectionRangeEnabled")]
  #endif
  public static extern bool Slider_GetIsSelectionRangeEnabled(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_SetIsSelectionRangeEnabled")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_SetIsSelectionRangeEnabled")]
  #endif
  public static extern void Slider_SetIsSelectionRangeEnabled(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_GetIsSnapToTickEnabled")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_GetIsSnapToTickEnabled")]
  #endif
  public static extern bool Slider_GetIsSnapToTickEnabled(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_SetIsSnapToTickEnabled")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_SetIsSnapToTickEnabled")]
  #endif
  public static extern void Slider_SetIsSnapToTickEnabled(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_GetOrientation")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_GetOrientation")]
  #endif
  public static extern int Slider_GetOrientation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_SetOrientation")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_SetOrientation")]
  #endif
  public static extern void Slider_SetOrientation(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_GetSelectionEnd")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_GetSelectionEnd")]
  #endif
  public static extern float Slider_GetSelectionEnd(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_SetSelectionEnd")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_SetSelectionEnd")]
  #endif
  public static extern void Slider_SetSelectionEnd(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_GetSelectionStart")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_GetSelectionStart")]
  #endif
  public static extern float Slider_GetSelectionStart(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_SetSelectionStart")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_SetSelectionStart")]
  #endif
  public static extern void Slider_SetSelectionStart(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_GetTickFrequency")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_GetTickFrequency")]
  #endif
  public static extern float Slider_GetTickFrequency(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_SetTickFrequency")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_SetTickFrequency")]
  #endif
  public static extern void Slider_SetTickFrequency(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_GetTickPlacement")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_GetTickPlacement")]
  #endif
  public static extern int Slider_GetTickPlacement(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_SetTickPlacement")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_SetTickPlacement")]
  #endif
  public static extern void Slider_SetTickPlacement(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_GetTicks")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_GetTicks")]
  #endif
  public static extern IntPtr Slider_GetTicks(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_SetTicks")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_SetTicks")]
  #endif
  public static extern void Slider_SetTicks(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_GetTrack")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_GetTrack")]
  #endif
  public static extern IntPtr Slider_GetTrack(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_AutoToolTipPlacementProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_AutoToolTipPlacementProperty_set")]
  #endif
  public static extern void Slider_AutoToolTipPlacementProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_AutoToolTipPlacementProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_AutoToolTipPlacementProperty_get")]
  #endif
  public static extern IntPtr Slider_AutoToolTipPlacementProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_AutoToolTipPrecisionProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_AutoToolTipPrecisionProperty_set")]
  #endif
  public static extern void Slider_AutoToolTipPrecisionProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_AutoToolTipPrecisionProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_AutoToolTipPrecisionProperty_get")]
  #endif
  public static extern IntPtr Slider_AutoToolTipPrecisionProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_DelayProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_DelayProperty_set")]
  #endif
  public static extern void Slider_DelayProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_DelayProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_DelayProperty_get")]
  #endif
  public static extern IntPtr Slider_DelayProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_IntervalProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_IntervalProperty_set")]
  #endif
  public static extern void Slider_IntervalProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_IntervalProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_IntervalProperty_get")]
  #endif
  public static extern IntPtr Slider_IntervalProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_IsDirectionReversedProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_IsDirectionReversedProperty_set")]
  #endif
  public static extern void Slider_IsDirectionReversedProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_IsDirectionReversedProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_IsDirectionReversedProperty_get")]
  #endif
  public static extern IntPtr Slider_IsDirectionReversedProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_IsMoveToPointEnabledProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_IsMoveToPointEnabledProperty_set")]
  #endif
  public static extern void Slider_IsMoveToPointEnabledProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_IsMoveToPointEnabledProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_IsMoveToPointEnabledProperty_get")]
  #endif
  public static extern IntPtr Slider_IsMoveToPointEnabledProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_IsSelectionRangeEnabledProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_IsSelectionRangeEnabledProperty_set")]
  #endif
  public static extern void Slider_IsSelectionRangeEnabledProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_IsSelectionRangeEnabledProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_IsSelectionRangeEnabledProperty_get")]
  #endif
  public static extern IntPtr Slider_IsSelectionRangeEnabledProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_IsSnapToTickEnabledProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_IsSnapToTickEnabledProperty_set")]
  #endif
  public static extern void Slider_IsSnapToTickEnabledProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_IsSnapToTickEnabledProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_IsSnapToTickEnabledProperty_get")]
  #endif
  public static extern IntPtr Slider_IsSnapToTickEnabledProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_OrientationProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_OrientationProperty_set")]
  #endif
  public static extern void Slider_OrientationProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_OrientationProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_OrientationProperty_get")]
  #endif
  public static extern IntPtr Slider_OrientationProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_SelectionEndProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_SelectionEndProperty_set")]
  #endif
  public static extern void Slider_SelectionEndProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_SelectionEndProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_SelectionEndProperty_get")]
  #endif
  public static extern IntPtr Slider_SelectionEndProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_SelectionStartProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_SelectionStartProperty_set")]
  #endif
  public static extern void Slider_SelectionStartProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_SelectionStartProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_SelectionStartProperty_get")]
  #endif
  public static extern IntPtr Slider_SelectionStartProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_TickFrequencyProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_TickFrequencyProperty_set")]
  #endif
  public static extern void Slider_TickFrequencyProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_TickFrequencyProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_TickFrequencyProperty_get")]
  #endif
  public static extern IntPtr Slider_TickFrequencyProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_TickPlacementProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_TickPlacementProperty_set")]
  #endif
  public static extern void Slider_TickPlacementProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_TickPlacementProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_TickPlacementProperty_get")]
  #endif
  public static extern IntPtr Slider_TickPlacementProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_TicksProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_TicksProperty_set")]
  #endif
  public static extern void Slider_TicksProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_TicksProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_TicksProperty_get")]
  #endif
  public static extern IntPtr Slider_TicksProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_DecreaseLargeCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_DecreaseLargeCommand_set")]
  #endif
  public static extern void Slider_DecreaseLargeCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_DecreaseLargeCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_DecreaseLargeCommand_get")]
  #endif
  public static extern IntPtr Slider_DecreaseLargeCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_DecreaseSmallCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_DecreaseSmallCommand_set")]
  #endif
  public static extern void Slider_DecreaseSmallCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_DecreaseSmallCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_DecreaseSmallCommand_get")]
  #endif
  public static extern IntPtr Slider_DecreaseSmallCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_IncreaseLargeCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_IncreaseLargeCommand_set")]
  #endif
  public static extern void Slider_IncreaseLargeCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_IncreaseLargeCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_IncreaseLargeCommand_get")]
  #endif
  public static extern IntPtr Slider_IncreaseLargeCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_IncreaseSmallCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_IncreaseSmallCommand_set")]
  #endif
  public static extern void Slider_IncreaseSmallCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_IncreaseSmallCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_IncreaseSmallCommand_get")]
  #endif
  public static extern IntPtr Slider_IncreaseSmallCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_MaximizeValueCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_MaximizeValueCommand_set")]
  #endif
  public static extern void Slider_MaximizeValueCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_MaximizeValueCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_MaximizeValueCommand_get")]
  #endif
  public static extern IntPtr Slider_MaximizeValueCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_MinimizeValueCommand_set")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_MinimizeValueCommand_set")]
  #endif
  public static extern void Slider_MinimizeValueCommand_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_MinimizeValueCommand_get")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_MinimizeValueCommand_get")]
  #endif
  public static extern IntPtr Slider_MinimizeValueCommand_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_SolidColorBrush__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_SolidColorBrush__SWIG_0")]
  #endif
  public static extern IntPtr new_SolidColorBrush__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_SolidColorBrush__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_SolidColorBrush__SWIG_1")]
  #endif
  public static extern IntPtr new_SolidColorBrush__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SolidColorBrush_GetColor")]
  #else
  [DllImport("Noesis", EntryPoint="SolidColorBrush_GetColor")]
  #endif
  public static extern IntPtr SolidColorBrush_GetColor(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SolidColorBrush_SetColor")]
  #else
  [DllImport("Noesis", EntryPoint="SolidColorBrush_SetColor")]
  #endif
  public static extern void SolidColorBrush_SetColor(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SolidColorBrush_TryParse")]
  #else
  [DllImport("Noesis", EntryPoint="SolidColorBrush_TryParse")]
  #endif
  public static extern bool SolidColorBrush_TryParse(string jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SolidColorBrush_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="SolidColorBrush_CreateRenderProxy")]
  #endif
  public static extern void SolidColorBrush_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SolidColorBrush_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="SolidColorBrush_UpdateRenderProxy")]
  #endif
  public static extern void SolidColorBrush_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SolidColorBrush_ColorProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="SolidColorBrush_ColorProperty_set")]
  #endif
  public static extern void SolidColorBrush_ColorProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SolidColorBrush_ColorProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="SolidColorBrush_ColorProperty_get")]
  #endif
  public static extern IntPtr SolidColorBrush_ColorProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_SolidColorBrush")]
  #else
  [DllImport("Noesis", EntryPoint="delete_SolidColorBrush")]
  #endif
  public static extern void delete_SolidColorBrush(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SortDescription_direction_set")]
  #else
  [DllImport("Noesis", EntryPoint="SortDescription_direction_set")]
  #endif
  public static extern void SortDescription_direction_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SortDescription_direction_get")]
  #else
  [DllImport("Noesis", EntryPoint="SortDescription_direction_get")]
  #endif
  public static extern int SortDescription_direction_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_SortDescription")]
  #else
  [DllImport("Noesis", EntryPoint="new_SortDescription")]
  #endif
  public static extern IntPtr new_SortDescription();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_SortDescription")]
  #else
  [DllImport("Noesis", EntryPoint="delete_SortDescription")]
  #endif
  public static extern void delete_SortDescription(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_StackPanel")]
  #else
  [DllImport("Noesis", EntryPoint="new_StackPanel")]
  #endif
  public static extern IntPtr new_StackPanel();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StackPanel_GetOrientation")]
  #else
  [DllImport("Noesis", EntryPoint="StackPanel_GetOrientation")]
  #endif
  public static extern int StackPanel_GetOrientation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StackPanel_SetOrientation")]
  #else
  [DllImport("Noesis", EntryPoint="StackPanel_SetOrientation")]
  #endif
  public static extern void StackPanel_SetOrientation(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StackPanel_OrientationProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="StackPanel_OrientationProperty_set")]
  #endif
  public static extern void StackPanel_OrientationProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StackPanel_OrientationProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="StackPanel_OrientationProperty_get")]
  #endif
  public static extern IntPtr StackPanel_OrientationProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_StackPanel")]
  #else
  [DllImport("Noesis", EntryPoint="delete_StackPanel")]
  #endif
  public static extern void delete_StackPanel(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_StatusBar")]
  #else
  [DllImport("Noesis", EntryPoint="new_StatusBar")]
  #endif
  public static extern IntPtr new_StatusBar();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_StatusBar")]
  #else
  [DllImport("Noesis", EntryPoint="delete_StatusBar")]
  #endif
  public static extern void delete_StatusBar(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StatusBar_SeparatorStyleKey_set")]
  #else
  [DllImport("Noesis", EntryPoint="StatusBar_SeparatorStyleKey_set")]
  #endif
  public static extern void StatusBar_SeparatorStyleKey_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StatusBar_SeparatorStyleKey_get")]
  #else
  [DllImport("Noesis", EntryPoint="StatusBar_SeparatorStyleKey_get")]
  #endif
  public static extern IntPtr StatusBar_SeparatorStyleKey_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_StatusBarItem")]
  #else
  [DllImport("Noesis", EntryPoint="new_StatusBarItem")]
  #endif
  public static extern IntPtr new_StatusBarItem();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_StatusBarItem")]
  #else
  [DllImport("Noesis", EntryPoint="delete_StatusBarItem")]
  #endif
  public static extern void delete_StatusBarItem(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_StreamGeometry__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_StreamGeometry__SWIG_0")]
  #endif
  public static extern IntPtr new_StreamGeometry__SWIG_0(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_StreamGeometry__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_StreamGeometry__SWIG_1")]
  #endif
  public static extern IntPtr new_StreamGeometry__SWIG_1();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StreamGeometry_SetData")]
  #else
  [DllImport("Noesis", EntryPoint="StreamGeometry_SetData")]
  #endif
  public static extern void StreamGeometry_SetData(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StreamGeometry_TrySetData")]
  #else
  [DllImport("Noesis", EntryPoint="StreamGeometry_TrySetData")]
  #endif
  public static extern bool StreamGeometry_TrySetData(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StreamGeometry_GetData")]
  #else
  [DllImport("Noesis", EntryPoint="StreamGeometry_GetData")]
  #endif
  public static extern IntPtr StreamGeometry_GetData(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StreamGeometry_Open__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="StreamGeometry_Open__SWIG_0")]
  #endif
  public static extern IntPtr StreamGeometry_Open__SWIG_0(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StreamGeometry_Open__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="StreamGeometry_Open__SWIG_1")]
  #endif
  public static extern IntPtr StreamGeometry_Open__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StreamGeometry_Close")]
  #else
  [DllImport("Noesis", EntryPoint="StreamGeometry_Close")]
  #endif
  public static extern void StreamGeometry_Close(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StreamGeometry_GetFillRule")]
  #else
  [DllImport("Noesis", EntryPoint="StreamGeometry_GetFillRule")]
  #endif
  public static extern int StreamGeometry_GetFillRule(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StreamGeometry_SetFillRule")]
  #else
  [DllImport("Noesis", EntryPoint="StreamGeometry_SetFillRule")]
  #endif
  public static extern void StreamGeometry_SetFillRule(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StreamGeometry_IsEmpty")]
  #else
  [DllImport("Noesis", EntryPoint="StreamGeometry_IsEmpty")]
  #endif
  public static extern bool StreamGeometry_IsEmpty(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StreamGeometry_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="StreamGeometry_CreateRenderProxy")]
  #endif
  public static extern void StreamGeometry_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StreamGeometry_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="StreamGeometry_UpdateRenderProxy")]
  #endif
  public static extern void StreamGeometry_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StreamGeometry_FillRuleProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="StreamGeometry_FillRuleProperty_set")]
  #endif
  public static extern void StreamGeometry_FillRuleProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StreamGeometry_FillRuleProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="StreamGeometry_FillRuleProperty_get")]
  #endif
  public static extern IntPtr StreamGeometry_FillRuleProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_StreamGeometry")]
  #else
  [DllImport("Noesis", EntryPoint="delete_StreamGeometry")]
  #endif
  public static extern void delete_StreamGeometry(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_StreamGeometryContext")]
  #else
  [DllImport("Noesis", EntryPoint="new_StreamGeometryContext")]
  #endif
  public static extern IntPtr new_StreamGeometryContext(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StreamGeometryContext_BeginFigure")]
  #else
  [DllImport("Noesis", EntryPoint="StreamGeometryContext_BeginFigure")]
  #endif
  public static extern void StreamGeometryContext_BeginFigure(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StreamGeometryContext_LineTo")]
  #else
  [DllImport("Noesis", EntryPoint="StreamGeometryContext_LineTo")]
  #endif
  public static extern void StreamGeometryContext_LineTo(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StreamGeometryContext_CubicTo")]
  #else
  [DllImport("Noesis", EntryPoint="StreamGeometryContext_CubicTo")]
  #endif
  public static extern void StreamGeometryContext_CubicTo(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StreamGeometryContext_QuadraticTo")]
  #else
  [DllImport("Noesis", EntryPoint="StreamGeometryContext_QuadraticTo")]
  #endif
  public static extern void StreamGeometryContext_QuadraticTo(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StreamGeometryContext_SmoothCubicTo")]
  #else
  [DllImport("Noesis", EntryPoint="StreamGeometryContext_SmoothCubicTo")]
  #endif
  public static extern void StreamGeometryContext_SmoothCubicTo(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StreamGeometryContext_SmoothQuadraticTo")]
  #else
  [DllImport("Noesis", EntryPoint="StreamGeometryContext_SmoothQuadraticTo")]
  #endif
  public static extern void StreamGeometryContext_SmoothQuadraticTo(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StreamGeometryContext_ArcTo")]
  #else
  [DllImport("Noesis", EntryPoint="StreamGeometryContext_ArcTo")]
  #endif
  public static extern void StreamGeometryContext_ArcTo(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4, bool jarg5, bool jarg6);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_StreamGeometryContext")]
  #else
  [DllImport("Noesis", EntryPoint="delete_StreamGeometryContext")]
  #endif
  public static extern void delete_StreamGeometryContext(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TabControl")]
  #else
  [DllImport("Noesis", EntryPoint="new_TabControl")]
  #endif
  public static extern IntPtr new_TabControl();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TabControl")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TabControl")]
  #endif
  public static extern void delete_TabControl(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabControl_GetContentTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="TabControl_GetContentTemplate")]
  #endif
  public static extern IntPtr TabControl_GetContentTemplate(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabControl_SetContentTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="TabControl_SetContentTemplate")]
  #endif
  public static extern void TabControl_SetContentTemplate(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabControl_GetContentTemplateSelector")]
  #else
  [DllImport("Noesis", EntryPoint="TabControl_GetContentTemplateSelector")]
  #endif
  public static extern IntPtr TabControl_GetContentTemplateSelector(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabControl_SetContentTemplateSelector")]
  #else
  [DllImport("Noesis", EntryPoint="TabControl_SetContentTemplateSelector")]
  #endif
  public static extern void TabControl_SetContentTemplateSelector(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabControl_GetSelectedContent")]
  #else
  [DllImport("Noesis", EntryPoint="TabControl_GetSelectedContent")]
  #endif
  public static extern IntPtr TabControl_GetSelectedContent(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabControl_GetSelectedContentTemplate")]
  #else
  [DllImport("Noesis", EntryPoint="TabControl_GetSelectedContentTemplate")]
  #endif
  public static extern IntPtr TabControl_GetSelectedContentTemplate(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabControl_GetSelectedContentTemplateSelector")]
  #else
  [DllImport("Noesis", EntryPoint="TabControl_GetSelectedContentTemplateSelector")]
  #endif
  public static extern IntPtr TabControl_GetSelectedContentTemplateSelector(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabControl_GetTabStripPlacement")]
  #else
  [DllImport("Noesis", EntryPoint="TabControl_GetTabStripPlacement")]
  #endif
  public static extern int TabControl_GetTabStripPlacement(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabControl_SetTabStripPlacement")]
  #else
  [DllImport("Noesis", EntryPoint="TabControl_SetTabStripPlacement")]
  #endif
  public static extern void TabControl_SetTabStripPlacement(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabControl_ContentTemplateProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TabControl_ContentTemplateProperty_set")]
  #endif
  public static extern void TabControl_ContentTemplateProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabControl_ContentTemplateProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TabControl_ContentTemplateProperty_get")]
  #endif
  public static extern IntPtr TabControl_ContentTemplateProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabControl_ContentTemplateSelectorProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TabControl_ContentTemplateSelectorProperty_set")]
  #endif
  public static extern void TabControl_ContentTemplateSelectorProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabControl_ContentTemplateSelectorProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TabControl_ContentTemplateSelectorProperty_get")]
  #endif
  public static extern IntPtr TabControl_ContentTemplateSelectorProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabControl_SelectedContentProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TabControl_SelectedContentProperty_set")]
  #endif
  public static extern void TabControl_SelectedContentProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabControl_SelectedContentProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TabControl_SelectedContentProperty_get")]
  #endif
  public static extern IntPtr TabControl_SelectedContentProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabControl_SelectedContentTemplateProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TabControl_SelectedContentTemplateProperty_set")]
  #endif
  public static extern void TabControl_SelectedContentTemplateProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabControl_SelectedContentTemplateProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TabControl_SelectedContentTemplateProperty_get")]
  #endif
  public static extern IntPtr TabControl_SelectedContentTemplateProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabControl_SelectedContentTemplateSelectorProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TabControl_SelectedContentTemplateSelectorProperty_set")]
  #endif
  public static extern void TabControl_SelectedContentTemplateSelectorProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabControl_SelectedContentTemplateSelectorProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TabControl_SelectedContentTemplateSelectorProperty_get")]
  #endif
  public static extern IntPtr TabControl_SelectedContentTemplateSelectorProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabControl_TabStripPlacementProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TabControl_TabStripPlacementProperty_set")]
  #endif
  public static extern void TabControl_TabStripPlacementProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabControl_TabStripPlacementProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TabControl_TabStripPlacementProperty_get")]
  #endif
  public static extern IntPtr TabControl_TabStripPlacementProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TabItem")]
  #else
  [DllImport("Noesis", EntryPoint="new_TabItem")]
  #endif
  public static extern IntPtr new_TabItem();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabItem_GetIsSelected")]
  #else
  [DllImport("Noesis", EntryPoint="TabItem_GetIsSelected")]
  #endif
  public static extern bool TabItem_GetIsSelected(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabItem_SetIsSelected")]
  #else
  [DllImport("Noesis", EntryPoint="TabItem_SetIsSelected")]
  #endif
  public static extern void TabItem_SetIsSelected(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabItem_GetTabStripPlacement")]
  #else
  [DllImport("Noesis", EntryPoint="TabItem_GetTabStripPlacement")]
  #endif
  public static extern int TabItem_GetTabStripPlacement(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabItem_IsSelectedProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TabItem_IsSelectedProperty_set")]
  #endif
  public static extern void TabItem_IsSelectedProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabItem_IsSelectedProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TabItem_IsSelectedProperty_get")]
  #endif
  public static extern IntPtr TabItem_IsSelectedProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabItem_TabStripPlacementProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TabItem_TabStripPlacementProperty_set")]
  #endif
  public static extern void TabItem_TabStripPlacementProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabItem_TabStripPlacementProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TabItem_TabStripPlacementProperty_get")]
  #endif
  public static extern IntPtr TabItem_TabStripPlacementProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TabItem")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TabItem")]
  #endif
  public static extern void delete_TabItem(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TabPanel")]
  #else
  [DllImport("Noesis", EntryPoint="new_TabPanel")]
  #endif
  public static extern IntPtr new_TabPanel();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TabPanel")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TabPanel")]
  #endif
  public static extern void delete_TabPanel(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TemplateBinding__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_TemplateBinding__SWIG_0")]
  #endif
  public static extern IntPtr new_TemplateBinding__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TemplateBinding__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_TemplateBinding__SWIG_1")]
  #endif
  public static extern IntPtr new_TemplateBinding__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TemplateBinding_GetProperty")]
  #else
  [DllImport("Noesis", EntryPoint="TemplateBinding_GetProperty")]
  #endif
  public static extern IntPtr TemplateBinding_GetProperty(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TemplateBinding_SetProperty")]
  #else
  [DllImport("Noesis", EntryPoint="TemplateBinding_SetProperty")]
  #endif
  public static extern void TemplateBinding_SetProperty(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TemplateBinding_ProvideValue")]
  #else
  [DllImport("Noesis", EntryPoint="TemplateBinding_ProvideValue")]
  #endif
  public static extern IntPtr TemplateBinding_ProvideValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TemplateBinding")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TemplateBinding")]
  #endif
  public static extern void delete_TemplateBinding(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TextBlock__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_TextBlock__SWIG_0")]
  #endif
  public static extern IntPtr new_TextBlock__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TextBlock__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_TextBlock__SWIG_1")]
  #endif
  public static extern IntPtr new_TextBlock__SWIG_1(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TextBlock")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TextBlock")]
  #endif
  public static extern void delete_TextBlock(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_GetBackground")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_GetBackground")]
  #endif
  public static extern IntPtr TextBlock_GetBackground(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_SetBackground")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_SetBackground")]
  #endif
  public static extern void TextBlock_SetBackground(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_GetBaselineOffset")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_GetBaselineOffset")]
  #endif
  public static extern float TextBlock_GetBaselineOffset(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_SetBaselineOffset")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_SetBaselineOffset")]
  #endif
  public static extern void TextBlock_SetBaselineOffset(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_GetFontFamily")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_GetFontFamily")]
  #endif
  public static extern IntPtr TextBlock_GetFontFamily(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_SetFontFamily")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_SetFontFamily")]
  #endif
  public static extern void TextBlock_SetFontFamily(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_GetFontSize")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_GetFontSize")]
  #endif
  public static extern float TextBlock_GetFontSize(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_SetFontSize")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_SetFontSize")]
  #endif
  public static extern void TextBlock_SetFontSize(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_GetFontStretch")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_GetFontStretch")]
  #endif
  public static extern int TextBlock_GetFontStretch(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_SetFontStretch")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_SetFontStretch")]
  #endif
  public static extern void TextBlock_SetFontStretch(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_GetFontStyle")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_GetFontStyle")]
  #endif
  public static extern int TextBlock_GetFontStyle(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_SetFontStyle")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_SetFontStyle")]
  #endif
  public static extern void TextBlock_SetFontStyle(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_GetFontWeight")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_GetFontWeight")]
  #endif
  public static extern int TextBlock_GetFontWeight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_SetFontWeight")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_SetFontWeight")]
  #endif
  public static extern void TextBlock_SetFontWeight(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_GetForeground")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_GetForeground")]
  #endif
  public static extern IntPtr TextBlock_GetForeground(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_SetForeground")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_SetForeground")]
  #endif
  public static extern void TextBlock_SetForeground(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_GetIsHyphenationEnabled")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_GetIsHyphenationEnabled")]
  #endif
  public static extern bool TextBlock_GetIsHyphenationEnabled(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_SetIsHyphenationEnabled")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_SetIsHyphenationEnabled")]
  #endif
  public static extern void TextBlock_SetIsHyphenationEnabled(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_GetLineHeight")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_GetLineHeight")]
  #endif
  public static extern float TextBlock_GetLineHeight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_SetLineHeight")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_SetLineHeight")]
  #endif
  public static extern void TextBlock_SetLineHeight(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_GetLineStackingStrategy")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_GetLineStackingStrategy")]
  #endif
  public static extern int TextBlock_GetLineStackingStrategy(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_SetLineStackingStrategy")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_SetLineStackingStrategy")]
  #endif
  public static extern void TextBlock_SetLineStackingStrategy(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_GetPadding")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_GetPadding")]
  #endif
  public static extern IntPtr TextBlock_GetPadding(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_SetPadding")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_SetPadding")]
  #endif
  public static extern void TextBlock_SetPadding(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_GetStroke")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_GetStroke")]
  #endif
  public static extern IntPtr TextBlock_GetStroke(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_SetStroke")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_SetStroke")]
  #endif
  public static extern void TextBlock_SetStroke(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_GetStrokeThickness")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_GetStrokeThickness")]
  #endif
  public static extern float TextBlock_GetStrokeThickness(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_SetStrokeThickness")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_SetStrokeThickness")]
  #endif
  public static extern void TextBlock_SetStrokeThickness(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_GetTextAlignment")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_GetTextAlignment")]
  #endif
  public static extern int TextBlock_GetTextAlignment(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_SetTextAlignment")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_SetTextAlignment")]
  #endif
  public static extern void TextBlock_SetTextAlignment(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_GetTextDecorationCollection")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_GetTextDecorationCollection")]
  #endif
  public static extern IntPtr TextBlock_GetTextDecorationCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_SetTextDecorationCollection")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_SetTextDecorationCollection")]
  #endif
  public static extern void TextBlock_SetTextDecorationCollection(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_GetTextEffects")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_GetTextEffects")]
  #endif
  public static extern IntPtr TextBlock_GetTextEffects(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_SetTextEffects")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_SetTextEffects")]
  #endif
  public static extern void TextBlock_SetTextEffects(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_GetText")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_GetText")]
  #endif
  public static extern IntPtr TextBlock_GetText(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_SetText")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_SetText")]
  #endif
  public static extern void TextBlock_SetText(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_GetTextTrimming")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_GetTextTrimming")]
  #endif
  public static extern int TextBlock_GetTextTrimming(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_SetTextTrimming")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_SetTextTrimming")]
  #endif
  public static extern void TextBlock_SetTextTrimming(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_GetTextWrapping")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_GetTextWrapping")]
  #endif
  public static extern int TextBlock_GetTextWrapping(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_SetTextWrapping")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_SetTextWrapping")]
  #endif
  public static extern void TextBlock_SetTextWrapping(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_BackgroundProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_BackgroundProperty_set")]
  #endif
  public static extern void TextBlock_BackgroundProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_BackgroundProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_BackgroundProperty_get")]
  #endif
  public static extern IntPtr TextBlock_BackgroundProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_BaselineOffsetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_BaselineOffsetProperty_set")]
  #endif
  public static extern void TextBlock_BaselineOffsetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_BaselineOffsetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_BaselineOffsetProperty_get")]
  #endif
  public static extern IntPtr TextBlock_BaselineOffsetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_FontFamilyProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_FontFamilyProperty_set")]
  #endif
  public static extern void TextBlock_FontFamilyProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_FontFamilyProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_FontFamilyProperty_get")]
  #endif
  public static extern IntPtr TextBlock_FontFamilyProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_FontSizeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_FontSizeProperty_set")]
  #endif
  public static extern void TextBlock_FontSizeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_FontSizeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_FontSizeProperty_get")]
  #endif
  public static extern IntPtr TextBlock_FontSizeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_FontStretchProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_FontStretchProperty_set")]
  #endif
  public static extern void TextBlock_FontStretchProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_FontStretchProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_FontStretchProperty_get")]
  #endif
  public static extern IntPtr TextBlock_FontStretchProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_FontStyleProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_FontStyleProperty_set")]
  #endif
  public static extern void TextBlock_FontStyleProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_FontStyleProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_FontStyleProperty_get")]
  #endif
  public static extern IntPtr TextBlock_FontStyleProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_FontWeightProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_FontWeightProperty_set")]
  #endif
  public static extern void TextBlock_FontWeightProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_FontWeightProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_FontWeightProperty_get")]
  #endif
  public static extern IntPtr TextBlock_FontWeightProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_ForegroundProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_ForegroundProperty_set")]
  #endif
  public static extern void TextBlock_ForegroundProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_ForegroundProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_ForegroundProperty_get")]
  #endif
  public static extern IntPtr TextBlock_ForegroundProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_IsHyphenationEnabledProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_IsHyphenationEnabledProperty_set")]
  #endif
  public static extern void TextBlock_IsHyphenationEnabledProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_IsHyphenationEnabledProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_IsHyphenationEnabledProperty_get")]
  #endif
  public static extern IntPtr TextBlock_IsHyphenationEnabledProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_LineHeightProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_LineHeightProperty_set")]
  #endif
  public static extern void TextBlock_LineHeightProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_LineHeightProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_LineHeightProperty_get")]
  #endif
  public static extern IntPtr TextBlock_LineHeightProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_LineStackingStrategyProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_LineStackingStrategyProperty_set")]
  #endif
  public static extern void TextBlock_LineStackingStrategyProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_LineStackingStrategyProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_LineStackingStrategyProperty_get")]
  #endif
  public static extern IntPtr TextBlock_LineStackingStrategyProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_PaddingProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_PaddingProperty_set")]
  #endif
  public static extern void TextBlock_PaddingProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_PaddingProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_PaddingProperty_get")]
  #endif
  public static extern IntPtr TextBlock_PaddingProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_StrokeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_StrokeProperty_set")]
  #endif
  public static extern void TextBlock_StrokeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_StrokeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_StrokeProperty_get")]
  #endif
  public static extern IntPtr TextBlock_StrokeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_StrokeThicknessProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_StrokeThicknessProperty_set")]
  #endif
  public static extern void TextBlock_StrokeThicknessProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_StrokeThicknessProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_StrokeThicknessProperty_get")]
  #endif
  public static extern IntPtr TextBlock_StrokeThicknessProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_TextAlignmentProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_TextAlignmentProperty_set")]
  #endif
  public static extern void TextBlock_TextAlignmentProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_TextAlignmentProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_TextAlignmentProperty_get")]
  #endif
  public static extern IntPtr TextBlock_TextAlignmentProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_TextDecorationsProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_TextDecorationsProperty_set")]
  #endif
  public static extern void TextBlock_TextDecorationsProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_TextDecorationsProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_TextDecorationsProperty_get")]
  #endif
  public static extern IntPtr TextBlock_TextDecorationsProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_TextEffectsProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_TextEffectsProperty_set")]
  #endif
  public static extern void TextBlock_TextEffectsProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_TextEffectsProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_TextEffectsProperty_get")]
  #endif
  public static extern IntPtr TextBlock_TextEffectsProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_TextProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_TextProperty_set")]
  #endif
  public static extern void TextBlock_TextProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_TextProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_TextProperty_get")]
  #endif
  public static extern IntPtr TextBlock_TextProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_TextTrimmingProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_TextTrimmingProperty_set")]
  #endif
  public static extern void TextBlock_TextTrimmingProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_TextTrimmingProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_TextTrimmingProperty_get")]
  #endif
  public static extern IntPtr TextBlock_TextTrimmingProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_TextWrappingProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_TextWrappingProperty_set")]
  #endif
  public static extern void TextBlock_TextWrappingProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_TextWrappingProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_TextWrappingProperty_get")]
  #endif
  public static extern IntPtr TextBlock_TextWrappingProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TextBox")]
  #else
  [DllImport("Noesis", EntryPoint="new_TextBox")]
  #endif
  public static extern IntPtr new_TextBox();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TextBox")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TextBox")]
  #endif
  public static extern void delete_TextBox(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_GetCharacterCasing")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_GetCharacterCasing")]
  #endif
  public static extern int TextBox_GetCharacterCasing(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_SetCharacterCasing")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_SetCharacterCasing")]
  #endif
  public static extern void TextBox_SetCharacterCasing(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_GetMaxLength")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_GetMaxLength")]
  #endif
  public static extern int TextBox_GetMaxLength(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_SetMaxLength")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_SetMaxLength")]
  #endif
  public static extern void TextBox_SetMaxLength(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_GetMaxLines")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_GetMaxLines")]
  #endif
  public static extern int TextBox_GetMaxLines(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_SetMaxLines")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_SetMaxLines")]
  #endif
  public static extern void TextBox_SetMaxLines(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_GetMinLines")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_GetMinLines")]
  #endif
  public static extern int TextBox_GetMinLines(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_SetMinLines")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_SetMinLines")]
  #endif
  public static extern void TextBox_SetMinLines(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_GetTextAlignment")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_GetTextAlignment")]
  #endif
  public static extern int TextBox_GetTextAlignment(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_SetTextAlignment")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_SetTextAlignment")]
  #endif
  public static extern void TextBox_SetTextAlignment(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_GetTextDecorations")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_GetTextDecorations")]
  #endif
  public static extern IntPtr TextBox_GetTextDecorations(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_GetText")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_GetText")]
  #endif
  public static extern IntPtr TextBox_GetText(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_SetText")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_SetText")]
  #endif
  public static extern void TextBox_SetText(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_GetTextWrapping")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_GetTextWrapping")]
  #endif
  public static extern int TextBox_GetTextWrapping(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_SetTextWrapping")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_SetTextWrapping")]
  #endif
  public static extern void TextBox_SetTextWrapping(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_GetViewportSize")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_GetViewportSize")]
  #endif
  public static extern IntPtr TextBox_GetViewportSize(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_GetScrollOffset")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_GetScrollOffset")]
  #endif
  public static extern IntPtr TextBox_GetScrollOffset(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_SelectAll")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_SelectAll")]
  #endif
  public static extern void TextBox_SelectAll(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_CharacterCasingProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_CharacterCasingProperty_set")]
  #endif
  public static extern void TextBox_CharacterCasingProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_CharacterCasingProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_CharacterCasingProperty_get")]
  #endif
  public static extern IntPtr TextBox_CharacterCasingProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_MaxLengthProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_MaxLengthProperty_set")]
  #endif
  public static extern void TextBox_MaxLengthProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_MaxLengthProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_MaxLengthProperty_get")]
  #endif
  public static extern IntPtr TextBox_MaxLengthProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_MaxLinesProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_MaxLinesProperty_set")]
  #endif
  public static extern void TextBox_MaxLinesProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_MaxLinesProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_MaxLinesProperty_get")]
  #endif
  public static extern IntPtr TextBox_MaxLinesProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_MinLinesProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_MinLinesProperty_set")]
  #endif
  public static extern void TextBox_MinLinesProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_MinLinesProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_MinLinesProperty_get")]
  #endif
  public static extern IntPtr TextBox_MinLinesProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_TextAlignmentProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_TextAlignmentProperty_set")]
  #endif
  public static extern void TextBox_TextAlignmentProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_TextAlignmentProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_TextAlignmentProperty_get")]
  #endif
  public static extern IntPtr TextBox_TextAlignmentProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_TextDecorationsProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_TextDecorationsProperty_set")]
  #endif
  public static extern void TextBox_TextDecorationsProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_TextDecorationsProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_TextDecorationsProperty_get")]
  #endif
  public static extern IntPtr TextBox_TextDecorationsProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_TextProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_TextProperty_set")]
  #endif
  public static extern void TextBox_TextProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_TextProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_TextProperty_get")]
  #endif
  public static extern IntPtr TextBox_TextProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_TextWrappingProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_TextWrappingProperty_set")]
  #endif
  public static extern void TextBox_TextWrappingProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_TextWrappingProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_TextWrappingProperty_get")]
  #endif
  public static extern IntPtr TextBox_TextWrappingProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_BackgroundProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_BackgroundProperty_set")]
  #endif
  public static extern void TextElement_BackgroundProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_BackgroundProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_BackgroundProperty_get")]
  #endif
  public static extern IntPtr TextElement_BackgroundProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_FontFamilyProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_FontFamilyProperty_set")]
  #endif
  public static extern void TextElement_FontFamilyProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_FontFamilyProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_FontFamilyProperty_get")]
  #endif
  public static extern IntPtr TextElement_FontFamilyProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_FontSizeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_FontSizeProperty_set")]
  #endif
  public static extern void TextElement_FontSizeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_FontSizeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_FontSizeProperty_get")]
  #endif
  public static extern IntPtr TextElement_FontSizeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_FontStretchProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_FontStretchProperty_set")]
  #endif
  public static extern void TextElement_FontStretchProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_FontStretchProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_FontStretchProperty_get")]
  #endif
  public static extern IntPtr TextElement_FontStretchProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_FontStyleProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_FontStyleProperty_set")]
  #endif
  public static extern void TextElement_FontStyleProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_FontStyleProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_FontStyleProperty_get")]
  #endif
  public static extern IntPtr TextElement_FontStyleProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_FontWeightProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_FontWeightProperty_set")]
  #endif
  public static extern void TextElement_FontWeightProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_FontWeightProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_FontWeightProperty_get")]
  #endif
  public static extern IntPtr TextElement_FontWeightProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_ForegroundProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_ForegroundProperty_set")]
  #endif
  public static extern void TextElement_ForegroundProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_ForegroundProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_ForegroundProperty_get")]
  #endif
  public static extern IntPtr TextElement_ForegroundProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_StrokeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_StrokeProperty_set")]
  #endif
  public static extern void TextElement_StrokeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_StrokeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_StrokeProperty_get")]
  #endif
  public static extern IntPtr TextElement_StrokeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_StrokeThicknessProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_StrokeThicknessProperty_set")]
  #endif
  public static extern void TextElement_StrokeThicknessProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_StrokeThicknessProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_StrokeThicknessProperty_get")]
  #endif
  public static extern IntPtr TextElement_StrokeThicknessProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_TextEffectsProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_TextEffectsProperty_set")]
  #endif
  public static extern void TextElement_TextEffectsProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_TextEffectsProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_TextEffectsProperty_get")]
  #endif
  public static extern IntPtr TextElement_TextEffectsProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_GetBackground")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_GetBackground")]
  #endif
  public static extern IntPtr TextElement_GetBackground(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_SetBackground")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_SetBackground")]
  #endif
  public static extern void TextElement_SetBackground(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_GetFontFamily")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_GetFontFamily")]
  #endif
  public static extern IntPtr TextElement_GetFontFamily(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_SetFontFamily")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_SetFontFamily")]
  #endif
  public static extern void TextElement_SetFontFamily(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_GetFontSize")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_GetFontSize")]
  #endif
  public static extern float TextElement_GetFontSize(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_SetFontSize")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_SetFontSize")]
  #endif
  public static extern void TextElement_SetFontSize(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_GetFontStretch")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_GetFontStretch")]
  #endif
  public static extern int TextElement_GetFontStretch(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_SetFontStretch")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_SetFontStretch")]
  #endif
  public static extern void TextElement_SetFontStretch(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_GetFontStyle")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_GetFontStyle")]
  #endif
  public static extern int TextElement_GetFontStyle(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_SetFontStyle")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_SetFontStyle")]
  #endif
  public static extern void TextElement_SetFontStyle(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_GetFontWeight")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_GetFontWeight")]
  #endif
  public static extern int TextElement_GetFontWeight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_SetFontWeight")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_SetFontWeight")]
  #endif
  public static extern void TextElement_SetFontWeight(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_GetForeground")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_GetForeground")]
  #endif
  public static extern IntPtr TextElement_GetForeground(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_SetForeground")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_SetForeground")]
  #endif
  public static extern void TextElement_SetForeground(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_GetStroke")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_GetStroke")]
  #endif
  public static extern IntPtr TextElement_GetStroke(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_SetStroke")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_SetStroke")]
  #endif
  public static extern void TextElement_SetStroke(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_GetStrokeThickness")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_GetStrokeThickness")]
  #endif
  public static extern float TextElement_GetStrokeThickness(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_SetStrokeThickness")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_SetStrokeThickness")]
  #endif
  public static extern void TextElement_SetStrokeThickness(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_GetTextEffects")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_GetTextEffects")]
  #endif
  public static extern IntPtr TextElement_GetTextEffects(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextElement_SetTextEffects")]
  #else
  [DllImport("Noesis", EntryPoint="TextElement_SetTextEffects")]
  #endif
  public static extern void TextElement_SetTextEffects(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TextElement")]
  #else
  [DllImport("Noesis", EntryPoint="new_TextElement")]
  #endif
  public static extern IntPtr new_TextElement();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TextElement")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TextElement")]
  #endif
  public static extern void delete_TextElement(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TextureSource__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_TextureSource__SWIG_0")]
  #endif
  public static extern IntPtr new_TextureSource__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TextureSource__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_TextureSource__SWIG_1")]
  #endif
  public static extern IntPtr new_TextureSource__SWIG_1(HandleRef jarg1, uint jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TextureSource__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_TextureSource__SWIG_2")]
  #endif
  public static extern IntPtr new_TextureSource__SWIG_2(HandleRef jarg1, uint jarg2, uint jarg3, float jarg4, float jarg5);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TextureSource")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TextureSource")]
  #endif
  public static extern void delete_TextureSource(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextureSource_GetTexture")]
  #else
  [DllImport("Noesis", EntryPoint="TextureSource_GetTexture")]
  #endif
  public static extern IntPtr TextureSource_GetTexture(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextureSource_SetTexture")]
  #else
  [DllImport("Noesis", EntryPoint="TextureSource_SetTexture")]
  #endif
  public static extern void TextureSource_SetTexture(HandleRef jarg1, HandleRef jarg2, uint jarg3, uint jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextureSource_GetDpiX")]
  #else
  [DllImport("Noesis", EntryPoint="TextureSource_GetDpiX")]
  #endif
  public static extern float TextureSource_GetDpiX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextureSource_SetDpiX")]
  #else
  [DllImport("Noesis", EntryPoint="TextureSource_SetDpiX")]
  #endif
  public static extern void TextureSource_SetDpiX(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextureSource_GetDpiY")]
  #else
  [DllImport("Noesis", EntryPoint="TextureSource_GetDpiY")]
  #endif
  public static extern float TextureSource_GetDpiY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextureSource_SetDpiY")]
  #else
  [DllImport("Noesis", EntryPoint="TextureSource_SetDpiY")]
  #endif
  public static extern void TextureSource_SetDpiY(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextureSource_GetPixelWidth")]
  #else
  [DllImport("Noesis", EntryPoint="TextureSource_GetPixelWidth")]
  #endif
  public static extern int TextureSource_GetPixelWidth(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextureSource_GetPixelHeight")]
  #else
  [DllImport("Noesis", EntryPoint="TextureSource_GetPixelHeight")]
  #endif
  public static extern int TextureSource_GetPixelHeight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextureSource_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="TextureSource_CreateRenderProxy")]
  #endif
  public static extern void TextureSource_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextureSource_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="TextureSource_UpdateRenderProxy")]
  #endif
  public static extern void TextureSource_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextureSource_UnregisterRenderer")]
  #else
  [DllImport("Noesis", EntryPoint="TextureSource_UnregisterRenderer")]
  #endif
  public static extern void TextureSource_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragCompletedEventArgs_canceled_set")]
  #else
  [DllImport("Noesis", EntryPoint="DragCompletedEventArgs_canceled_set")]
  #endif
  public static extern void DragCompletedEventArgs_canceled_set(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragCompletedEventArgs_canceled_get")]
  #else
  [DllImport("Noesis", EntryPoint="DragCompletedEventArgs_canceled_get")]
  #endif
  public static extern bool DragCompletedEventArgs_canceled_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragCompletedEventArgs_horizontalChange_set")]
  #else
  [DllImport("Noesis", EntryPoint="DragCompletedEventArgs_horizontalChange_set")]
  #endif
  public static extern void DragCompletedEventArgs_horizontalChange_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragCompletedEventArgs_horizontalChange_get")]
  #else
  [DllImport("Noesis", EntryPoint="DragCompletedEventArgs_horizontalChange_get")]
  #endif
  public static extern float DragCompletedEventArgs_horizontalChange_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragCompletedEventArgs_verticalChange_set")]
  #else
  [DllImport("Noesis", EntryPoint="DragCompletedEventArgs_verticalChange_set")]
  #endif
  public static extern void DragCompletedEventArgs_verticalChange_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragCompletedEventArgs_verticalChange_get")]
  #else
  [DllImport("Noesis", EntryPoint="DragCompletedEventArgs_verticalChange_get")]
  #endif
  public static extern float DragCompletedEventArgs_verticalChange_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DragCompletedEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_DragCompletedEventArgs")]
  #endif
  public static extern IntPtr new_DragCompletedEventArgs(HandleRef jarg1, bool jarg2, float jarg3, float jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DragCompletedEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DragCompletedEventArgs")]
  #endif
  public static extern void delete_DragCompletedEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragStartedEventArgs_horizontalOffset_set")]
  #else
  [DllImport("Noesis", EntryPoint="DragStartedEventArgs_horizontalOffset_set")]
  #endif
  public static extern void DragStartedEventArgs_horizontalOffset_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragStartedEventArgs_horizontalOffset_get")]
  #else
  [DllImport("Noesis", EntryPoint="DragStartedEventArgs_horizontalOffset_get")]
  #endif
  public static extern float DragStartedEventArgs_horizontalOffset_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragStartedEventArgs_verticalOffset_set")]
  #else
  [DllImport("Noesis", EntryPoint="DragStartedEventArgs_verticalOffset_set")]
  #endif
  public static extern void DragStartedEventArgs_verticalOffset_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragStartedEventArgs_verticalOffset_get")]
  #else
  [DllImport("Noesis", EntryPoint="DragStartedEventArgs_verticalOffset_get")]
  #endif
  public static extern float DragStartedEventArgs_verticalOffset_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DragStartedEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_DragStartedEventArgs")]
  #endif
  public static extern IntPtr new_DragStartedEventArgs(HandleRef jarg1, float jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DragStartedEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DragStartedEventArgs")]
  #endif
  public static extern void delete_DragStartedEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragDeltaEventArgs_horizontalChange_set")]
  #else
  [DllImport("Noesis", EntryPoint="DragDeltaEventArgs_horizontalChange_set")]
  #endif
  public static extern void DragDeltaEventArgs_horizontalChange_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragDeltaEventArgs_horizontalChange_get")]
  #else
  [DllImport("Noesis", EntryPoint="DragDeltaEventArgs_horizontalChange_get")]
  #endif
  public static extern float DragDeltaEventArgs_horizontalChange_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragDeltaEventArgs_verticalChange_set")]
  #else
  [DllImport("Noesis", EntryPoint="DragDeltaEventArgs_verticalChange_set")]
  #endif
  public static extern void DragDeltaEventArgs_verticalChange_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragDeltaEventArgs_verticalChange_get")]
  #else
  [DllImport("Noesis", EntryPoint="DragDeltaEventArgs_verticalChange_get")]
  #endif
  public static extern float DragDeltaEventArgs_verticalChange_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DragDeltaEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_DragDeltaEventArgs")]
  #endif
  public static extern IntPtr new_DragDeltaEventArgs(HandleRef jarg1, float jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DragDeltaEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DragDeltaEventArgs")]
  #endif
  public static extern void delete_DragDeltaEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Thumb")]
  #else
  [DllImport("Noesis", EntryPoint="new_Thumb")]
  #endif
  public static extern IntPtr new_Thumb();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Thumb_GetIsDragging")]
  #else
  [DllImport("Noesis", EntryPoint="Thumb_GetIsDragging")]
  #endif
  public static extern bool Thumb_GetIsDragging(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Thumb_CancelDrag")]
  #else
  [DllImport("Noesis", EntryPoint="Thumb_CancelDrag")]
  #endif
  public static extern void Thumb_CancelDrag(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Thumb_IsDraggingProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Thumb_IsDraggingProperty_set")]
  #endif
  public static extern void Thumb_IsDraggingProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Thumb_IsDraggingProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Thumb_IsDraggingProperty_get")]
  #endif
  public static extern IntPtr Thumb_IsDraggingProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Thumb")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Thumb")]
  #endif
  public static extern void delete_Thumb(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TickBar")]
  #else
  [DllImport("Noesis", EntryPoint="new_TickBar")]
  #endif
  public static extern IntPtr new_TickBar();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TickBar")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TickBar")]
  #endif
  public static extern void delete_TickBar(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_GetFill")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_GetFill")]
  #endif
  public static extern IntPtr TickBar_GetFill(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_SetFill")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_SetFill")]
  #endif
  public static extern void TickBar_SetFill(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_GetIsDirectionReversed")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_GetIsDirectionReversed")]
  #endif
  public static extern bool TickBar_GetIsDirectionReversed(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_SetIsDirectionReversed")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_SetIsDirectionReversed")]
  #endif
  public static extern void TickBar_SetIsDirectionReversed(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_GetIsSelectionRangeEnabled")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_GetIsSelectionRangeEnabled")]
  #endif
  public static extern bool TickBar_GetIsSelectionRangeEnabled(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_SetIsSelectionRangeEnabled")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_SetIsSelectionRangeEnabled")]
  #endif
  public static extern void TickBar_SetIsSelectionRangeEnabled(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_GetMaximum")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_GetMaximum")]
  #endif
  public static extern float TickBar_GetMaximum(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_SetMaximum")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_SetMaximum")]
  #endif
  public static extern void TickBar_SetMaximum(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_GetMinimum")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_GetMinimum")]
  #endif
  public static extern float TickBar_GetMinimum(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_SetMinimum")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_SetMinimum")]
  #endif
  public static extern void TickBar_SetMinimum(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_GetPlacement")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_GetPlacement")]
  #endif
  public static extern int TickBar_GetPlacement(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_SetPlacement")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_SetPlacement")]
  #endif
  public static extern void TickBar_SetPlacement(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_GetReservedSpace")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_GetReservedSpace")]
  #endif
  public static extern float TickBar_GetReservedSpace(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_SetReservedSpace")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_SetReservedSpace")]
  #endif
  public static extern void TickBar_SetReservedSpace(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_GetSelectionEnd")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_GetSelectionEnd")]
  #endif
  public static extern float TickBar_GetSelectionEnd(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_SetSelectionEnd")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_SetSelectionEnd")]
  #endif
  public static extern void TickBar_SetSelectionEnd(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_GetSelectionStart")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_GetSelectionStart")]
  #endif
  public static extern float TickBar_GetSelectionStart(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_SetSelectionStart")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_SetSelectionStart")]
  #endif
  public static extern void TickBar_SetSelectionStart(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_GetTickFrequency")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_GetTickFrequency")]
  #endif
  public static extern float TickBar_GetTickFrequency(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_SetTickFrequency")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_SetTickFrequency")]
  #endif
  public static extern void TickBar_SetTickFrequency(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_GetTicks")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_GetTicks")]
  #endif
  public static extern IntPtr TickBar_GetTicks(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_SetTicks")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_SetTicks")]
  #endif
  public static extern void TickBar_SetTicks(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_FillProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_FillProperty_set")]
  #endif
  public static extern void TickBar_FillProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_FillProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_FillProperty_get")]
  #endif
  public static extern IntPtr TickBar_FillProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_IsDirectionReversedProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_IsDirectionReversedProperty_set")]
  #endif
  public static extern void TickBar_IsDirectionReversedProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_IsDirectionReversedProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_IsDirectionReversedProperty_get")]
  #endif
  public static extern IntPtr TickBar_IsDirectionReversedProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_IsSelectionRangeEnabledProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_IsSelectionRangeEnabledProperty_set")]
  #endif
  public static extern void TickBar_IsSelectionRangeEnabledProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_IsSelectionRangeEnabledProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_IsSelectionRangeEnabledProperty_get")]
  #endif
  public static extern IntPtr TickBar_IsSelectionRangeEnabledProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_MaximumProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_MaximumProperty_set")]
  #endif
  public static extern void TickBar_MaximumProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_MaximumProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_MaximumProperty_get")]
  #endif
  public static extern IntPtr TickBar_MaximumProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_MinimumProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_MinimumProperty_set")]
  #endif
  public static extern void TickBar_MinimumProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_MinimumProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_MinimumProperty_get")]
  #endif
  public static extern IntPtr TickBar_MinimumProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_PlacementProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_PlacementProperty_set")]
  #endif
  public static extern void TickBar_PlacementProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_PlacementProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_PlacementProperty_get")]
  #endif
  public static extern IntPtr TickBar_PlacementProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_ReservedSpaceProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_ReservedSpaceProperty_set")]
  #endif
  public static extern void TickBar_ReservedSpaceProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_ReservedSpaceProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_ReservedSpaceProperty_get")]
  #endif
  public static extern IntPtr TickBar_ReservedSpaceProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_SelectionEndProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_SelectionEndProperty_set")]
  #endif
  public static extern void TickBar_SelectionEndProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_SelectionEndProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_SelectionEndProperty_get")]
  #endif
  public static extern IntPtr TickBar_SelectionEndProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_SelectionStartProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_SelectionStartProperty_set")]
  #endif
  public static extern void TickBar_SelectionStartProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_SelectionStartProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_SelectionStartProperty_get")]
  #endif
  public static extern IntPtr TickBar_SelectionStartProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_TickFrequencyProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_TickFrequencyProperty_set")]
  #endif
  public static extern void TickBar_TickFrequencyProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_TickFrequencyProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_TickFrequencyProperty_get")]
  #endif
  public static extern IntPtr TickBar_TickFrequencyProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_TicksProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_TicksProperty_set")]
  #endif
  public static extern void TickBar_TicksProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_TicksProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_TicksProperty_get")]
  #endif
  public static extern IntPtr TickBar_TicksProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ToolBar")]
  #else
  [DllImport("Noesis", EntryPoint="new_ToolBar")]
  #endif
  public static extern IntPtr new_ToolBar();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ToolBar")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ToolBar")]
  #endif
  public static extern void delete_ToolBar(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_GetOverflowMode")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_GetOverflowMode")]
  #endif
  public static extern int ToolBar_GetOverflowMode(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_SetOverflowMode")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_SetOverflowMode")]
  #endif
  public static extern void ToolBar_SetOverflowMode(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_GetIsOverflowItem")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_GetIsOverflowItem")]
  #endif
  public static extern bool ToolBar_GetIsOverflowItem(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_SetIsOverflowItem")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_SetIsOverflowItem")]
  #endif
  public static extern void ToolBar_SetIsOverflowItem(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_GetBandIndex")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_GetBandIndex")]
  #endif
  public static extern int ToolBar_GetBandIndex(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_SetBandIndex")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_SetBandIndex")]
  #endif
  public static extern void ToolBar_SetBandIndex(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_GetBand")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_GetBand")]
  #endif
  public static extern int ToolBar_GetBand(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_SetBand")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_SetBand")]
  #endif
  public static extern void ToolBar_SetBand(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_GetHasOverflowItems")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_GetHasOverflowItems")]
  #endif
  public static extern bool ToolBar_GetHasOverflowItems(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_GetIsOverflowOpen")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_GetIsOverflowOpen")]
  #endif
  public static extern bool ToolBar_GetIsOverflowOpen(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_GetOrientation")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_GetOrientation")]
  #endif
  public static extern int ToolBar_GetOrientation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_GetPanel")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_GetPanel")]
  #endif
  public static extern IntPtr ToolBar_GetPanel(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_GetOverflowPanel")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_GetOverflowPanel")]
  #endif
  public static extern IntPtr ToolBar_GetOverflowPanel(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_UpdateHasOverflowItems")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_UpdateHasOverflowItems")]
  #endif
  public static extern void ToolBar_UpdateHasOverflowItems(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_BandIndexProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_BandIndexProperty_set")]
  #endif
  public static extern void ToolBar_BandIndexProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_BandIndexProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_BandIndexProperty_get")]
  #endif
  public static extern IntPtr ToolBar_BandIndexProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_BandProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_BandProperty_set")]
  #endif
  public static extern void ToolBar_BandProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_BandProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_BandProperty_get")]
  #endif
  public static extern IntPtr ToolBar_BandProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_HasOverflowItemsProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_HasOverflowItemsProperty_set")]
  #endif
  public static extern void ToolBar_HasOverflowItemsProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_HasOverflowItemsProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_HasOverflowItemsProperty_get")]
  #endif
  public static extern IntPtr ToolBar_HasOverflowItemsProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_IsOverflowItemProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_IsOverflowItemProperty_set")]
  #endif
  public static extern void ToolBar_IsOverflowItemProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_IsOverflowItemProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_IsOverflowItemProperty_get")]
  #endif
  public static extern IntPtr ToolBar_IsOverflowItemProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_IsOverflowOpenProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_IsOverflowOpenProperty_set")]
  #endif
  public static extern void ToolBar_IsOverflowOpenProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_IsOverflowOpenProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_IsOverflowOpenProperty_get")]
  #endif
  public static extern IntPtr ToolBar_IsOverflowOpenProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_OrientationProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_OrientationProperty_set")]
  #endif
  public static extern void ToolBar_OrientationProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_OrientationProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_OrientationProperty_get")]
  #endif
  public static extern IntPtr ToolBar_OrientationProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_OverflowModeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_OverflowModeProperty_set")]
  #endif
  public static extern void ToolBar_OverflowModeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_OverflowModeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_OverflowModeProperty_get")]
  #endif
  public static extern IntPtr ToolBar_OverflowModeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_ButtonStyleKey_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_ButtonStyleKey_set")]
  #endif
  public static extern void ToolBar_ButtonStyleKey_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_ButtonStyleKey_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_ButtonStyleKey_get")]
  #endif
  public static extern IntPtr ToolBar_ButtonStyleKey_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_ToggleButtonStyleKey_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_ToggleButtonStyleKey_set")]
  #endif
  public static extern void ToolBar_ToggleButtonStyleKey_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_ToggleButtonStyleKey_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_ToggleButtonStyleKey_get")]
  #endif
  public static extern IntPtr ToolBar_ToggleButtonStyleKey_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_CheckBoxStyleKey_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_CheckBoxStyleKey_set")]
  #endif
  public static extern void ToolBar_CheckBoxStyleKey_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_CheckBoxStyleKey_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_CheckBoxStyleKey_get")]
  #endif
  public static extern IntPtr ToolBar_CheckBoxStyleKey_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_RadioButtonStyleKey_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_RadioButtonStyleKey_set")]
  #endif
  public static extern void ToolBar_RadioButtonStyleKey_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_RadioButtonStyleKey_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_RadioButtonStyleKey_get")]
  #endif
  public static extern IntPtr ToolBar_RadioButtonStyleKey_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_TextBoxStyleKey_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_TextBoxStyleKey_set")]
  #endif
  public static extern void ToolBar_TextBoxStyleKey_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_TextBoxStyleKey_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_TextBoxStyleKey_get")]
  #endif
  public static extern IntPtr ToolBar_TextBoxStyleKey_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_ComboBoxStyleKey_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_ComboBoxStyleKey_set")]
  #endif
  public static extern void ToolBar_ComboBoxStyleKey_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_ComboBoxStyleKey_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_ComboBoxStyleKey_get")]
  #endif
  public static extern IntPtr ToolBar_ComboBoxStyleKey_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_SeparatorStyleKey_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_SeparatorStyleKey_set")]
  #endif
  public static extern void ToolBar_SeparatorStyleKey_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_SeparatorStyleKey_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_SeparatorStyleKey_get")]
  #endif
  public static extern IntPtr ToolBar_SeparatorStyleKey_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_MenuStyleKey_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_MenuStyleKey_set")]
  #endif
  public static extern void ToolBar_MenuStyleKey_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_MenuStyleKey_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_MenuStyleKey_get")]
  #endif
  public static extern IntPtr ToolBar_MenuStyleKey_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ToolBarOverflowPanel")]
  #else
  [DllImport("Noesis", EntryPoint="new_ToolBarOverflowPanel")]
  #endif
  public static extern IntPtr new_ToolBarOverflowPanel();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBarOverflowPanel_GetWrapWidth")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBarOverflowPanel_GetWrapWidth")]
  #endif
  public static extern float ToolBarOverflowPanel_GetWrapWidth(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBarOverflowPanel_SetWrapWidth")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBarOverflowPanel_SetWrapWidth")]
  #endif
  public static extern void ToolBarOverflowPanel_SetWrapWidth(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBarOverflowPanel_WrapWidthProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBarOverflowPanel_WrapWidthProperty_set")]
  #endif
  public static extern void ToolBarOverflowPanel_WrapWidthProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBarOverflowPanel_WrapWidthProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBarOverflowPanel_WrapWidthProperty_get")]
  #endif
  public static extern IntPtr ToolBarOverflowPanel_WrapWidthProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ToolBarOverflowPanel")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ToolBarOverflowPanel")]
  #endif
  public static extern void delete_ToolBarOverflowPanel(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ToolBarPanel")]
  #else
  [DllImport("Noesis", EntryPoint="new_ToolBarPanel")]
  #endif
  public static extern IntPtr new_ToolBarPanel();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ToolBarPanel")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ToolBarPanel")]
  #endif
  public static extern void delete_ToolBarPanel(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ToolBarTray")]
  #else
  [DllImport("Noesis", EntryPoint="new_ToolBarTray")]
  #endif
  public static extern IntPtr new_ToolBarTray();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ToolBarTray")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ToolBarTray")]
  #endif
  public static extern void delete_ToolBarTray(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBarTray_GetIsLocked")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBarTray_GetIsLocked")]
  #endif
  public static extern bool ToolBarTray_GetIsLocked(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBarTray_SetIsLocked")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBarTray_SetIsLocked")]
  #endif
  public static extern void ToolBarTray_SetIsLocked(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBarTray_GetBackground")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBarTray_GetBackground")]
  #endif
  public static extern IntPtr ToolBarTray_GetBackground(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBarTray_SetBackground")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBarTray_SetBackground")]
  #endif
  public static extern void ToolBarTray_SetBackground(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBarTray_GetOrientation")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBarTray_GetOrientation")]
  #endif
  public static extern int ToolBarTray_GetOrientation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBarTray_SetOrientation")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBarTray_SetOrientation")]
  #endif
  public static extern void ToolBarTray_SetOrientation(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBarTray_BackgroundProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBarTray_BackgroundProperty_set")]
  #endif
  public static extern void ToolBarTray_BackgroundProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBarTray_BackgroundProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBarTray_BackgroundProperty_get")]
  #endif
  public static extern IntPtr ToolBarTray_BackgroundProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBarTray_IsLockedProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBarTray_IsLockedProperty_set")]
  #endif
  public static extern void ToolBarTray_IsLockedProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBarTray_IsLockedProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBarTray_IsLockedProperty_get")]
  #endif
  public static extern IntPtr ToolBarTray_IsLockedProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBarTray_OrientationProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBarTray_OrientationProperty_set")]
  #endif
  public static extern void ToolBarTray_OrientationProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBarTray_OrientationProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBarTray_OrientationProperty_get")]
  #endif
  public static extern IntPtr ToolBarTray_OrientationProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ToolTip")]
  #else
  [DllImport("Noesis", EntryPoint="new_ToolTip")]
  #endif
  public static extern IntPtr new_ToolTip();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_GetCustomPopupPlacementCallback")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_GetCustomPopupPlacementCallback")]
  #endif
  public static extern IntPtr ToolTip_GetCustomPopupPlacementCallback(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_SetCustomPopupPlacementCallback")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_SetCustomPopupPlacementCallback")]
  #endif
  public static extern void ToolTip_SetCustomPopupPlacementCallback(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_GetHasDropShadow")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_GetHasDropShadow")]
  #endif
  public static extern bool ToolTip_GetHasDropShadow(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_SetHasDropShadow")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_SetHasDropShadow")]
  #endif
  public static extern void ToolTip_SetHasDropShadow(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_GetHorizontalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_GetHorizontalOffset")]
  #endif
  public static extern float ToolTip_GetHorizontalOffset(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_SetHorizontalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_SetHorizontalOffset")]
  #endif
  public static extern void ToolTip_SetHorizontalOffset(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_GetIsOpen")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_GetIsOpen")]
  #endif
  public static extern bool ToolTip_GetIsOpen(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_SetIsOpen")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_SetIsOpen")]
  #endif
  public static extern void ToolTip_SetIsOpen(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_GetPlacement")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_GetPlacement")]
  #endif
  public static extern int ToolTip_GetPlacement(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_SetPlacement")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_SetPlacement")]
  #endif
  public static extern void ToolTip_SetPlacement(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_GetPlacementRectangle")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_GetPlacementRectangle")]
  #endif
  public static extern IntPtr ToolTip_GetPlacementRectangle(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_SetPlacementRectangle")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_SetPlacementRectangle")]
  #endif
  public static extern void ToolTip_SetPlacementRectangle(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_GetPlacementTarget")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_GetPlacementTarget")]
  #endif
  public static extern IntPtr ToolTip_GetPlacementTarget(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_SetPlacementTarget")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_SetPlacementTarget")]
  #endif
  public static extern void ToolTip_SetPlacementTarget(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_GetStaysOpen")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_GetStaysOpen")]
  #endif
  public static extern bool ToolTip_GetStaysOpen(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_SetStaysOpen")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_SetStaysOpen")]
  #endif
  public static extern void ToolTip_SetStaysOpen(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_GetVerticalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_GetVerticalOffset")]
  #endif
  public static extern float ToolTip_GetVerticalOffset(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_SetVerticalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_SetVerticalOffset")]
  #endif
  public static extern void ToolTip_SetVerticalOffset(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_GetPopup")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_GetPopup")]
  #endif
  public static extern IntPtr ToolTip_GetPopup(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_CustomPopupPlacementCallbackProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_CustomPopupPlacementCallbackProperty_set")]
  #endif
  public static extern void ToolTip_CustomPopupPlacementCallbackProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_CustomPopupPlacementCallbackProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_CustomPopupPlacementCallbackProperty_get")]
  #endif
  public static extern IntPtr ToolTip_CustomPopupPlacementCallbackProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_HasDropShadowProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_HasDropShadowProperty_set")]
  #endif
  public static extern void ToolTip_HasDropShadowProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_HasDropShadowProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_HasDropShadowProperty_get")]
  #endif
  public static extern IntPtr ToolTip_HasDropShadowProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_HorizontalOffsetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_HorizontalOffsetProperty_set")]
  #endif
  public static extern void ToolTip_HorizontalOffsetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_HorizontalOffsetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_HorizontalOffsetProperty_get")]
  #endif
  public static extern IntPtr ToolTip_HorizontalOffsetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_IsOpenProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_IsOpenProperty_set")]
  #endif
  public static extern void ToolTip_IsOpenProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_IsOpenProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_IsOpenProperty_get")]
  #endif
  public static extern IntPtr ToolTip_IsOpenProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_PlacementProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_PlacementProperty_set")]
  #endif
  public static extern void ToolTip_PlacementProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_PlacementProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_PlacementProperty_get")]
  #endif
  public static extern IntPtr ToolTip_PlacementProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_PlacementRectangleProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_PlacementRectangleProperty_set")]
  #endif
  public static extern void ToolTip_PlacementRectangleProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_PlacementRectangleProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_PlacementRectangleProperty_get")]
  #endif
  public static extern IntPtr ToolTip_PlacementRectangleProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_PlacementTargetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_PlacementTargetProperty_set")]
  #endif
  public static extern void ToolTip_PlacementTargetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_PlacementTargetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_PlacementTargetProperty_get")]
  #endif
  public static extern IntPtr ToolTip_PlacementTargetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_StaysOpenProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_StaysOpenProperty_set")]
  #endif
  public static extern void ToolTip_StaysOpenProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_StaysOpenProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_StaysOpenProperty_get")]
  #endif
  public static extern IntPtr ToolTip_StaysOpenProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_VerticalOffsetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_VerticalOffsetProperty_set")]
  #endif
  public static extern void ToolTip_VerticalOffsetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_VerticalOffsetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_VerticalOffsetProperty_get")]
  #endif
  public static extern IntPtr ToolTip_VerticalOffsetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ToolTip")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ToolTip")]
  #endif
  public static extern void delete_ToolTip(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_BetweenShowDelayProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_BetweenShowDelayProperty_set")]
  #endif
  public static extern void ToolTipService_BetweenShowDelayProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_BetweenShowDelayProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_BetweenShowDelayProperty_get")]
  #endif
  public static extern IntPtr ToolTipService_BetweenShowDelayProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_HasDropShadowProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_HasDropShadowProperty_set")]
  #endif
  public static extern void ToolTipService_HasDropShadowProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_HasDropShadowProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_HasDropShadowProperty_get")]
  #endif
  public static extern IntPtr ToolTipService_HasDropShadowProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_HorizontalOffsetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_HorizontalOffsetProperty_set")]
  #endif
  public static extern void ToolTipService_HorizontalOffsetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_HorizontalOffsetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_HorizontalOffsetProperty_get")]
  #endif
  public static extern IntPtr ToolTipService_HorizontalOffsetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_InitialShowDelayProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_InitialShowDelayProperty_set")]
  #endif
  public static extern void ToolTipService_InitialShowDelayProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_InitialShowDelayProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_InitialShowDelayProperty_get")]
  #endif
  public static extern IntPtr ToolTipService_InitialShowDelayProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_IsEnabledProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_IsEnabledProperty_set")]
  #endif
  public static extern void ToolTipService_IsEnabledProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_IsEnabledProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_IsEnabledProperty_get")]
  #endif
  public static extern IntPtr ToolTipService_IsEnabledProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_IsOpenProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_IsOpenProperty_set")]
  #endif
  public static extern void ToolTipService_IsOpenProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_IsOpenProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_IsOpenProperty_get")]
  #endif
  public static extern IntPtr ToolTipService_IsOpenProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_PlacementProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_PlacementProperty_set")]
  #endif
  public static extern void ToolTipService_PlacementProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_PlacementProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_PlacementProperty_get")]
  #endif
  public static extern IntPtr ToolTipService_PlacementProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_PlacementRectangleProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_PlacementRectangleProperty_set")]
  #endif
  public static extern void ToolTipService_PlacementRectangleProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_PlacementRectangleProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_PlacementRectangleProperty_get")]
  #endif
  public static extern IntPtr ToolTipService_PlacementRectangleProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_PlacementTargetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_PlacementTargetProperty_set")]
  #endif
  public static extern void ToolTipService_PlacementTargetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_PlacementTargetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_PlacementTargetProperty_get")]
  #endif
  public static extern IntPtr ToolTipService_PlacementTargetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_ShowDurationProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_ShowDurationProperty_set")]
  #endif
  public static extern void ToolTipService_ShowDurationProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_ShowDurationProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_ShowDurationProperty_get")]
  #endif
  public static extern IntPtr ToolTipService_ShowDurationProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_ShowOnDisabledProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_ShowOnDisabledProperty_set")]
  #endif
  public static extern void ToolTipService_ShowOnDisabledProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_ShowOnDisabledProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_ShowOnDisabledProperty_get")]
  #endif
  public static extern IntPtr ToolTipService_ShowOnDisabledProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_ToolTipProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_ToolTipProperty_set")]
  #endif
  public static extern void ToolTipService_ToolTipProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_ToolTipProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_ToolTipProperty_get")]
  #endif
  public static extern IntPtr ToolTipService_ToolTipProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_VerticalOffsetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_VerticalOffsetProperty_set")]
  #endif
  public static extern void ToolTipService_VerticalOffsetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_VerticalOffsetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_VerticalOffsetProperty_get")]
  #endif
  public static extern IntPtr ToolTipService_VerticalOffsetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_ToolTipClosingEvent_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_ToolTipClosingEvent_set")]
  #endif
  public static extern void ToolTipService_ToolTipClosingEvent_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_ToolTipClosingEvent_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_ToolTipClosingEvent_get")]
  #endif
  public static extern IntPtr ToolTipService_ToolTipClosingEvent_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_ToolTipOpeningEvent_set")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_ToolTipOpeningEvent_set")]
  #endif
  public static extern void ToolTipService_ToolTipOpeningEvent_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_ToolTipOpeningEvent_get")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_ToolTipOpeningEvent_get")]
  #endif
  public static extern IntPtr ToolTipService_ToolTipOpeningEvent_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_GetBetweenShowDelay")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_GetBetweenShowDelay")]
  #endif
  public static extern int ToolTipService_GetBetweenShowDelay(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_SetBetweenShowDelay")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_SetBetweenShowDelay")]
  #endif
  public static extern void ToolTipService_SetBetweenShowDelay(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_GetHasDropShadow")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_GetHasDropShadow")]
  #endif
  public static extern bool ToolTipService_GetHasDropShadow(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_SetHasDropShadow")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_SetHasDropShadow")]
  #endif
  public static extern void ToolTipService_SetHasDropShadow(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_GetHorizontalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_GetHorizontalOffset")]
  #endif
  public static extern float ToolTipService_GetHorizontalOffset(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_SetHorizontalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_SetHorizontalOffset")]
  #endif
  public static extern void ToolTipService_SetHorizontalOffset(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_GetInitialShowDelay")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_GetInitialShowDelay")]
  #endif
  public static extern int ToolTipService_GetInitialShowDelay(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_SetInitialShowDelay")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_SetInitialShowDelay")]
  #endif
  public static extern void ToolTipService_SetInitialShowDelay(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_GetIsEnabled")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_GetIsEnabled")]
  #endif
  public static extern bool ToolTipService_GetIsEnabled(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_SetIsEnabled")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_SetIsEnabled")]
  #endif
  public static extern void ToolTipService_SetIsEnabled(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_GetIsOpen")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_GetIsOpen")]
  #endif
  public static extern bool ToolTipService_GetIsOpen(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_SetIsOpen")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_SetIsOpen")]
  #endif
  public static extern void ToolTipService_SetIsOpen(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_GetPlacement")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_GetPlacement")]
  #endif
  public static extern int ToolTipService_GetPlacement(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_SetPlacement")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_SetPlacement")]
  #endif
  public static extern void ToolTipService_SetPlacement(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_GetPlacementRectangle")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_GetPlacementRectangle")]
  #endif
  public static extern IntPtr ToolTipService_GetPlacementRectangle(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_SetPlacementRectangle")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_SetPlacementRectangle")]
  #endif
  public static extern void ToolTipService_SetPlacementRectangle(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_GetPlacementTarget")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_GetPlacementTarget")]
  #endif
  public static extern IntPtr ToolTipService_GetPlacementTarget(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_SetPlacementTarget")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_SetPlacementTarget")]
  #endif
  public static extern void ToolTipService_SetPlacementTarget(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_GetShowDuration")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_GetShowDuration")]
  #endif
  public static extern int ToolTipService_GetShowDuration(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_SetShowDuration")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_SetShowDuration")]
  #endif
  public static extern void ToolTipService_SetShowDuration(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_GetShowOnDisabled")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_GetShowOnDisabled")]
  #endif
  public static extern bool ToolTipService_GetShowOnDisabled(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_SetShowOnDisabled")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_SetShowOnDisabled")]
  #endif
  public static extern void ToolTipService_SetShowOnDisabled(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_GetToolTip")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_GetToolTip")]
  #endif
  public static extern IntPtr ToolTipService_GetToolTip(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_SetToolTip")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_SetToolTip")]
  #endif
  public static extern void ToolTipService_SetToolTip(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_GetVerticalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_GetVerticalOffset")]
  #endif
  public static extern float ToolTipService_GetVerticalOffset(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_SetVerticalOffset")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_SetVerticalOffset")]
  #endif
  public static extern void ToolTipService_SetVerticalOffset(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipService_FindValidToolTipOwner")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipService_FindValidToolTipOwner")]
  #endif
  public static extern IntPtr ToolTipService_FindValidToolTipOwner(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ToolTipService")]
  #else
  [DllImport("Noesis", EntryPoint="new_ToolTipService")]
  #endif
  public static extern IntPtr new_ToolTipService();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ToolTipService")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ToolTipService")]
  #endif
  public static extern void delete_ToolTipService(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Track")]
  #else
  [DllImport("Noesis", EntryPoint="new_Track")]
  #endif
  public static extern IntPtr new_Track();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Track")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Track")]
  #endif
  public static extern void delete_Track(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_GetDecreaseRepeatButton")]
  #else
  [DllImport("Noesis", EntryPoint="Track_GetDecreaseRepeatButton")]
  #endif
  public static extern IntPtr Track_GetDecreaseRepeatButton(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_SetDecreaseRepeatButton")]
  #else
  [DllImport("Noesis", EntryPoint="Track_SetDecreaseRepeatButton")]
  #endif
  public static extern void Track_SetDecreaseRepeatButton(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_GetIncreaseRepeatButton")]
  #else
  [DllImport("Noesis", EntryPoint="Track_GetIncreaseRepeatButton")]
  #endif
  public static extern IntPtr Track_GetIncreaseRepeatButton(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_SetIncreaseRepeatButton")]
  #else
  [DllImport("Noesis", EntryPoint="Track_SetIncreaseRepeatButton")]
  #endif
  public static extern void Track_SetIncreaseRepeatButton(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_GetIsDirectionReversed")]
  #else
  [DllImport("Noesis", EntryPoint="Track_GetIsDirectionReversed")]
  #endif
  public static extern bool Track_GetIsDirectionReversed(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_SetIsDirectionReversed")]
  #else
  [DllImport("Noesis", EntryPoint="Track_SetIsDirectionReversed")]
  #endif
  public static extern void Track_SetIsDirectionReversed(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_GetMaximum")]
  #else
  [DllImport("Noesis", EntryPoint="Track_GetMaximum")]
  #endif
  public static extern float Track_GetMaximum(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_SetMaximum")]
  #else
  [DllImport("Noesis", EntryPoint="Track_SetMaximum")]
  #endif
  public static extern void Track_SetMaximum(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_GetMinimum")]
  #else
  [DllImport("Noesis", EntryPoint="Track_GetMinimum")]
  #endif
  public static extern float Track_GetMinimum(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_SetMinimum")]
  #else
  [DllImport("Noesis", EntryPoint="Track_SetMinimum")]
  #endif
  public static extern void Track_SetMinimum(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_GetOrientation")]
  #else
  [DllImport("Noesis", EntryPoint="Track_GetOrientation")]
  #endif
  public static extern int Track_GetOrientation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_SetOrientation")]
  #else
  [DllImport("Noesis", EntryPoint="Track_SetOrientation")]
  #endif
  public static extern void Track_SetOrientation(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_GetThumb")]
  #else
  [DllImport("Noesis", EntryPoint="Track_GetThumb")]
  #endif
  public static extern IntPtr Track_GetThumb(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_SetThumb")]
  #else
  [DllImport("Noesis", EntryPoint="Track_SetThumb")]
  #endif
  public static extern void Track_SetThumb(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_GetValue")]
  #else
  [DllImport("Noesis", EntryPoint="Track_GetValue")]
  #endif
  public static extern float Track_GetValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_SetValue")]
  #else
  [DllImport("Noesis", EntryPoint="Track_SetValue")]
  #endif
  public static extern void Track_SetValue(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_GetViewportSize")]
  #else
  [DllImport("Noesis", EntryPoint="Track_GetViewportSize")]
  #endif
  public static extern float Track_GetViewportSize(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_SetViewportSize")]
  #else
  [DllImport("Noesis", EntryPoint="Track_SetViewportSize")]
  #endif
  public static extern void Track_SetViewportSize(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_ValueFromDistance")]
  #else
  [DllImport("Noesis", EntryPoint="Track_ValueFromDistance")]
  #endif
  public static extern float Track_ValueFromDistance(HandleRef jarg1, float jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_ValueFromPoint")]
  #else
  [DllImport("Noesis", EntryPoint="Track_ValueFromPoint")]
  #endif
  public static extern float Track_ValueFromPoint(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_IsDirectionReversedProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Track_IsDirectionReversedProperty_set")]
  #endif
  public static extern void Track_IsDirectionReversedProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_IsDirectionReversedProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Track_IsDirectionReversedProperty_get")]
  #endif
  public static extern IntPtr Track_IsDirectionReversedProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_MaximumProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Track_MaximumProperty_set")]
  #endif
  public static extern void Track_MaximumProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_MaximumProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Track_MaximumProperty_get")]
  #endif
  public static extern IntPtr Track_MaximumProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_MinimumProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Track_MinimumProperty_set")]
  #endif
  public static extern void Track_MinimumProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_MinimumProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Track_MinimumProperty_get")]
  #endif
  public static extern IntPtr Track_MinimumProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_OrientationProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Track_OrientationProperty_set")]
  #endif
  public static extern void Track_OrientationProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_OrientationProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Track_OrientationProperty_get")]
  #endif
  public static extern IntPtr Track_OrientationProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_ValueProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Track_ValueProperty_set")]
  #endif
  public static extern void Track_ValueProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_ValueProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Track_ValueProperty_get")]
  #endif
  public static extern IntPtr Track_ValueProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_ViewportSizeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Track_ViewportSizeProperty_set")]
  #endif
  public static extern void Track_ViewportSizeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_ViewportSizeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Track_ViewportSizeProperty_get")]
  #endif
  public static extern IntPtr Track_ViewportSizeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TransformGroup")]
  #else
  [DllImport("Noesis", EntryPoint="new_TransformGroup")]
  #endif
  public static extern IntPtr new_TransformGroup();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TransformGroup")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TransformGroup")]
  #endif
  public static extern void delete_TransformGroup(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TransformGroup_GetNumChildren")]
  #else
  [DllImport("Noesis", EntryPoint="TransformGroup_GetNumChildren")]
  #endif
  public static extern uint TransformGroup_GetNumChildren(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TransformGroup_GetChild")]
  #else
  [DllImport("Noesis", EntryPoint="TransformGroup_GetChild")]
  #endif
  public static extern IntPtr TransformGroup_GetChild(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TransformGroup_GetChildren")]
  #else
  [DllImport("Noesis", EntryPoint="TransformGroup_GetChildren")]
  #endif
  public static extern IntPtr TransformGroup_GetChildren(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TransformGroup_SetChildren")]
  #else
  [DllImport("Noesis", EntryPoint="TransformGroup_SetChildren")]
  #endif
  public static extern void TransformGroup_SetChildren(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TransformGroup_GetTransform")]
  #else
  [DllImport("Noesis", EntryPoint="TransformGroup_GetTransform")]
  #endif
  public static extern IntPtr TransformGroup_GetTransform(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TransformGroup_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="TransformGroup_CreateRenderProxy")]
  #endif
  public static extern void TransformGroup_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TransformGroup_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="TransformGroup_UpdateRenderProxy")]
  #endif
  public static extern void TransformGroup_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TransformGroup_UnregisterRenderer")]
  #else
  [DllImport("Noesis", EntryPoint="TransformGroup_UnregisterRenderer")]
  #endif
  public static extern void TransformGroup_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TransformGroup_ChildrenProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TransformGroup_ChildrenProperty_set")]
  #endif
  public static extern void TransformGroup_ChildrenProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TransformGroup_ChildrenProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TransformGroup_ChildrenProperty_get")]
  #endif
  public static extern IntPtr TransformGroup_ChildrenProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TranslateTransform__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_TranslateTransform__SWIG_0")]
  #endif
  public static extern IntPtr new_TranslateTransform__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TranslateTransform__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_TranslateTransform__SWIG_1")]
  #endif
  public static extern IntPtr new_TranslateTransform__SWIG_1(float jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TranslateTransform_GetX")]
  #else
  [DllImport("Noesis", EntryPoint="TranslateTransform_GetX")]
  #endif
  public static extern float TranslateTransform_GetX(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TranslateTransform_SetX")]
  #else
  [DllImport("Noesis", EntryPoint="TranslateTransform_SetX")]
  #endif
  public static extern void TranslateTransform_SetX(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TranslateTransform_GetY")]
  #else
  [DllImport("Noesis", EntryPoint="TranslateTransform_GetY")]
  #endif
  public static extern float TranslateTransform_GetY(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TranslateTransform_SetY")]
  #else
  [DllImport("Noesis", EntryPoint="TranslateTransform_SetY")]
  #endif
  public static extern void TranslateTransform_SetY(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TranslateTransform_GetTransform")]
  #else
  [DllImport("Noesis", EntryPoint="TranslateTransform_GetTransform")]
  #endif
  public static extern IntPtr TranslateTransform_GetTransform(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TranslateTransform_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="TranslateTransform_CreateRenderProxy")]
  #endif
  public static extern void TranslateTransform_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TranslateTransform_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="TranslateTransform_UpdateRenderProxy")]
  #endif
  public static extern void TranslateTransform_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TranslateTransform_UnregisterRenderer")]
  #else
  [DllImport("Noesis", EntryPoint="TranslateTransform_UnregisterRenderer")]
  #endif
  public static extern void TranslateTransform_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TranslateTransform_XProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TranslateTransform_XProperty_set")]
  #endif
  public static extern void TranslateTransform_XProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TranslateTransform_XProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TranslateTransform_XProperty_get")]
  #endif
  public static extern IntPtr TranslateTransform_XProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TranslateTransform_YProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TranslateTransform_YProperty_set")]
  #endif
  public static extern void TranslateTransform_YProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TranslateTransform_YProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TranslateTransform_YProperty_get")]
  #endif
  public static extern IntPtr TranslateTransform_YProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TranslateTransform")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TranslateTransform")]
  #endif
  public static extern void delete_TranslateTransform(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TreeView")]
  #else
  [DllImport("Noesis", EntryPoint="new_TreeView")]
  #endif
  public static extern IntPtr new_TreeView();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TreeView")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TreeView")]
  #endif
  public static extern void delete_TreeView(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeView_GetSelectedItem")]
  #else
  [DllImport("Noesis", EntryPoint="TreeView_GetSelectedItem")]
  #endif
  public static extern IntPtr TreeView_GetSelectedItem(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeView_GetSelectedValue")]
  #else
  [DllImport("Noesis", EntryPoint="TreeView_GetSelectedValue")]
  #endif
  public static extern IntPtr TreeView_GetSelectedValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeView_GetSelectedValuePath")]
  #else
  [DllImport("Noesis", EntryPoint="TreeView_GetSelectedValuePath")]
  #endif
  public static extern IntPtr TreeView_GetSelectedValuePath(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeView_SetSelectedValuePath")]
  #else
  [DllImport("Noesis", EntryPoint="TreeView_SetSelectedValuePath")]
  #endif
  public static extern void TreeView_SetSelectedValuePath(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeView_ItemClicked")]
  #else
  [DllImport("Noesis", EntryPoint="TreeView_ItemClicked")]
  #endif
  public static extern void TreeView_ItemClicked(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeView_ItemExpanded")]
  #else
  [DllImport("Noesis", EntryPoint="TreeView_ItemExpanded")]
  #endif
  public static extern void TreeView_ItemExpanded(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeView_SelectedItemProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TreeView_SelectedItemProperty_set")]
  #endif
  public static extern void TreeView_SelectedItemProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeView_SelectedItemProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TreeView_SelectedItemProperty_get")]
  #endif
  public static extern IntPtr TreeView_SelectedItemProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeView_SelectedValuePathProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TreeView_SelectedValuePathProperty_set")]
  #endif
  public static extern void TreeView_SelectedValuePathProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeView_SelectedValuePathProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TreeView_SelectedValuePathProperty_get")]
  #endif
  public static extern IntPtr TreeView_SelectedValuePathProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeView_SelectedValueProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TreeView_SelectedValueProperty_set")]
  #endif
  public static extern void TreeView_SelectedValueProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeView_SelectedValueProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TreeView_SelectedValueProperty_get")]
  #endif
  public static extern IntPtr TreeView_SelectedValueProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TreeViewItem")]
  #else
  [DllImport("Noesis", EntryPoint="new_TreeViewItem")]
  #endif
  public static extern IntPtr new_TreeViewItem();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TreeViewItem")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TreeViewItem")]
  #endif
  public static extern void delete_TreeViewItem(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeViewItem_GetIsExpanded")]
  #else
  [DllImport("Noesis", EntryPoint="TreeViewItem_GetIsExpanded")]
  #endif
  public static extern bool TreeViewItem_GetIsExpanded(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeViewItem_SetIsExpanded")]
  #else
  [DllImport("Noesis", EntryPoint="TreeViewItem_SetIsExpanded")]
  #endif
  public static extern void TreeViewItem_SetIsExpanded(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeViewItem_GetIsSelected")]
  #else
  [DllImport("Noesis", EntryPoint="TreeViewItem_GetIsSelected")]
  #endif
  public static extern bool TreeViewItem_GetIsSelected(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeViewItem_SetIsSelected")]
  #else
  [DllImport("Noesis", EntryPoint="TreeViewItem_SetIsSelected")]
  #endif
  public static extern void TreeViewItem_SetIsSelected(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeViewItem_GetIsSelectionActive")]
  #else
  [DllImport("Noesis", EntryPoint="TreeViewItem_GetIsSelectionActive")]
  #endif
  public static extern bool TreeViewItem_GetIsSelectionActive(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeViewItem_SetIsSelectionActive")]
  #else
  [DllImport("Noesis", EntryPoint="TreeViewItem_SetIsSelectionActive")]
  #endif
  public static extern void TreeViewItem_SetIsSelectionActive(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeViewItem_IsExpandedProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TreeViewItem_IsExpandedProperty_set")]
  #endif
  public static extern void TreeViewItem_IsExpandedProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeViewItem_IsExpandedProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TreeViewItem_IsExpandedProperty_get")]
  #endif
  public static extern IntPtr TreeViewItem_IsExpandedProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeViewItem_IsSelectedProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TreeViewItem_IsSelectedProperty_set")]
  #endif
  public static extern void TreeViewItem_IsSelectedProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeViewItem_IsSelectedProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TreeViewItem_IsSelectedProperty_get")]
  #endif
  public static extern IntPtr TreeViewItem_IsSelectedProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeViewItem_IsSelectionActiveProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TreeViewItem_IsSelectionActiveProperty_set")]
  #endif
  public static extern void TreeViewItem_IsSelectionActiveProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeViewItem_IsSelectionActiveProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TreeViewItem_IsSelectionActiveProperty_get")]
  #endif
  public static extern IntPtr TreeViewItem_IsSelectionActiveProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Trigger")]
  #else
  [DllImport("Noesis", EntryPoint="new_Trigger")]
  #endif
  public static extern IntPtr new_Trigger();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Trigger")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Trigger")]
  #endif
  public static extern void delete_Trigger(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Trigger_GetProperty")]
  #else
  [DllImport("Noesis", EntryPoint="Trigger_GetProperty")]
  #endif
  public static extern IntPtr Trigger_GetProperty(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Trigger_SetProperty")]
  #else
  [DllImport("Noesis", EntryPoint="Trigger_SetProperty")]
  #endif
  public static extern void Trigger_SetProperty(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Trigger_GetSetters")]
  #else
  [DllImport("Noesis", EntryPoint="Trigger_GetSetters")]
  #endif
  public static extern IntPtr Trigger_GetSetters(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Trigger_GetSourceName")]
  #else
  [DllImport("Noesis", EntryPoint="Trigger_GetSourceName")]
  #endif
  public static extern IntPtr Trigger_GetSourceName(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Trigger_SetSourceName")]
  #else
  [DllImport("Noesis", EntryPoint="Trigger_SetSourceName")]
  #endif
  public static extern void Trigger_SetSourceName(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Trigger_GetValue")]
  #else
  [DllImport("Noesis", EntryPoint="Trigger_GetValue")]
  #endif
  public static extern IntPtr Trigger_GetValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Trigger_SetValue")]
  #else
  [DllImport("Noesis", EntryPoint="Trigger_SetValue")]
  #endif
  public static extern void Trigger_SetValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Trigger_FindSetter")]
  #else
  [DllImport("Noesis", EntryPoint="Trigger_FindSetter")]
  #endif
  public static extern IntPtr Trigger_FindSetter(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Trigger_RegisterSources")]
  #else
  [DllImport("Noesis", EntryPoint="Trigger_RegisterSources")]
  #endif
  public static extern void Trigger_RegisterSources(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Trigger_UnregisterSources")]
  #else
  [DllImport("Noesis", EntryPoint="Trigger_UnregisterSources")]
  #endif
  public static extern void Trigger_UnregisterSources(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Trigger_RegisterEvents")]
  #else
  [DllImport("Noesis", EntryPoint="Trigger_RegisterEvents")]
  #endif
  public static extern void Trigger_RegisterEvents(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Trigger_UnregisterEvents")]
  #else
  [DllImport("Noesis", EntryPoint="Trigger_UnregisterEvents")]
  #endif
  public static extern void Trigger_UnregisterEvents(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Trigger_Check")]
  #else
  [DllImport("Noesis", EntryPoint="Trigger_Check")]
  #endif
  public static extern bool Trigger_Check(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, bool jarg6);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Trigger_FindValue")]
  #else
  [DllImport("Noesis", EntryPoint="Trigger_FindValue")]
  #endif
  public static extern IntPtr Trigger_FindValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Trigger_Invalidate__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Trigger_Invalidate__SWIG_0")]
  #endif
  public static extern void Trigger_Invalidate__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4, bool jarg5, byte jarg6);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Trigger_Invalidate__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Trigger_Invalidate__SWIG_1")]
  #endif
  public static extern void Trigger_Invalidate__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6, HandleRef jarg7, bool jarg8, bool jarg9, byte jarg10);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TriggerAction")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TriggerAction")]
  #endif
  public static extern void delete_TriggerAction(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TriggerAction_Invoke__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="TriggerAction_Invoke__SWIG_0")]
  #endif
  public static extern void TriggerAction_Invoke__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TriggerAction_Invoke__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="TriggerAction_Invoke__SWIG_1")]
  #endif
  public static extern void TriggerAction_Invoke__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_UIElementData")]
  #else
  [DllImport("Noesis", EntryPoint="new_UIElementData")]
  #endif
  public static extern IntPtr new_UIElementData(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElementData_RegisterEvent")]
  #else
  [DllImport("Noesis", EntryPoint="UIElementData_RegisterEvent")]
  #endif
  public static extern void UIElementData_RegisterEvent(HandleRef jarg1, HandleRef jarg2, string jarg3, int jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElementData_AddEventOwner")]
  #else
  [DllImport("Noesis", EntryPoint="UIElementData_AddEventOwner")]
  #endif
  public static extern void UIElementData_AddEventOwner(HandleRef jarg1, HandleRef jarg2, string jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElementData_FindEvent")]
  #else
  [DllImport("Noesis", EntryPoint="UIElementData_FindEvent")]
  #endif
  public static extern IntPtr UIElementData_FindEvent(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElementData_EnumEvents")]
  #else
  [DllImport("Noesis", EntryPoint="UIElementData_EnumEvents")]
  #endif
  public static extern IntPtr UIElementData_EnumEvents(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElementData_RegisterEventHandler")]
  #else
  [DllImport("Noesis", EntryPoint="UIElementData_RegisterEventHandler")]
  #endif
  public static extern void UIElementData_RegisterEventHandler(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElementData_FindEventHandler")]
  #else
  [DllImport("Noesis", EntryPoint="UIElementData_FindEventHandler")]
  #endif
  public static extern IntPtr UIElementData_FindEventHandler(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElementData_RegisterNonRouted")]
  #else
  [DllImport("Noesis", EntryPoint="UIElementData_RegisterNonRouted")]
  #endif
  public static extern void UIElementData_RegisterNonRouted(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElementData_IsNonRoutedRegistered")]
  #else
  [DllImport("Noesis", EntryPoint="UIElementData_IsNonRoutedRegistered")]
  #endif
  public static extern bool UIElementData_IsNonRoutedRegistered(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_UIElementData")]
  #else
  [DllImport("Noesis", EntryPoint="delete_UIElementData")]
  #endif
  public static extern void delete_UIElementData(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FindRoutedEventRecursive")]
  #else
  [DllImport("Noesis", EntryPoint="FindRoutedEventRecursive")]
  #endif
  public static extern IntPtr FindRoutedEventRecursive(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="IsNonRoutedEventRegisteredRecursive")]
  #else
  [DllImport("Noesis", EntryPoint="IsNonRoutedEventRegisteredRecursive")]
  #endif
  public static extern bool IsNonRoutedEventRegisteredRecursive(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MouseEventArgs_position_set")]
  #else
  [DllImport("Noesis", EntryPoint="MouseEventArgs_position_set")]
  #endif
  public static extern void MouseEventArgs_position_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MouseEventArgs_position_get")]
  #else
  [DllImport("Noesis", EntryPoint="MouseEventArgs_position_get")]
  #endif
  public static extern IntPtr MouseEventArgs_position_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MouseEventArgs_leftButton_set")]
  #else
  [DllImport("Noesis", EntryPoint="MouseEventArgs_leftButton_set")]
  #endif
  public static extern void MouseEventArgs_leftButton_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MouseEventArgs_leftButton_get")]
  #else
  [DllImport("Noesis", EntryPoint="MouseEventArgs_leftButton_get")]
  #endif
  public static extern int MouseEventArgs_leftButton_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MouseEventArgs_middleButton_set")]
  #else
  [DllImport("Noesis", EntryPoint="MouseEventArgs_middleButton_set")]
  #endif
  public static extern void MouseEventArgs_middleButton_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MouseEventArgs_middleButton_get")]
  #else
  [DllImport("Noesis", EntryPoint="MouseEventArgs_middleButton_get")]
  #endif
  public static extern int MouseEventArgs_middleButton_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MouseEventArgs_rightButton_set")]
  #else
  [DllImport("Noesis", EntryPoint="MouseEventArgs_rightButton_set")]
  #endif
  public static extern void MouseEventArgs_rightButton_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MouseEventArgs_rightButton_get")]
  #else
  [DllImport("Noesis", EntryPoint="MouseEventArgs_rightButton_get")]
  #endif
  public static extern int MouseEventArgs_rightButton_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MouseEventArgs_xButton1Button_set")]
  #else
  [DllImport("Noesis", EntryPoint="MouseEventArgs_xButton1Button_set")]
  #endif
  public static extern void MouseEventArgs_xButton1Button_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MouseEventArgs_xButton1Button_get")]
  #else
  [DllImport("Noesis", EntryPoint="MouseEventArgs_xButton1Button_get")]
  #endif
  public static extern int MouseEventArgs_xButton1Button_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MouseEventArgs_xButton2Button_set")]
  #else
  [DllImport("Noesis", EntryPoint="MouseEventArgs_xButton2Button_set")]
  #endif
  public static extern void MouseEventArgs_xButton2Button_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MouseEventArgs_xButton2Button_get")]
  #else
  [DllImport("Noesis", EntryPoint="MouseEventArgs_xButton2Button_get")]
  #endif
  public static extern int MouseEventArgs_xButton2Button_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_MouseEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_MouseEventArgs")]
  #endif
  public static extern IntPtr new_MouseEventArgs(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_MouseEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_MouseEventArgs")]
  #endif
  public static extern void delete_MouseEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MouseButtonEventArgs_changedButton_set")]
  #else
  [DllImport("Noesis", EntryPoint="MouseButtonEventArgs_changedButton_set")]
  #endif
  public static extern void MouseButtonEventArgs_changedButton_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MouseButtonEventArgs_changedButton_get")]
  #else
  [DllImport("Noesis", EntryPoint="MouseButtonEventArgs_changedButton_get")]
  #endif
  public static extern int MouseButtonEventArgs_changedButton_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MouseButtonEventArgs_buttonState_set")]
  #else
  [DllImport("Noesis", EntryPoint="MouseButtonEventArgs_buttonState_set")]
  #endif
  public static extern void MouseButtonEventArgs_buttonState_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MouseButtonEventArgs_buttonState_get")]
  #else
  [DllImport("Noesis", EntryPoint="MouseButtonEventArgs_buttonState_get")]
  #endif
  public static extern int MouseButtonEventArgs_buttonState_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MouseButtonEventArgs_buttonClicks_set")]
  #else
  [DllImport("Noesis", EntryPoint="MouseButtonEventArgs_buttonClicks_set")]
  #endif
  public static extern void MouseButtonEventArgs_buttonClicks_set(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MouseButtonEventArgs_buttonClicks_get")]
  #else
  [DllImport("Noesis", EntryPoint="MouseButtonEventArgs_buttonClicks_get")]
  #endif
  public static extern uint MouseButtonEventArgs_buttonClicks_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_MouseButtonEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_MouseButtonEventArgs")]
  #endif
  public static extern IntPtr new_MouseButtonEventArgs(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4, int jarg5, uint jarg6);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_MouseButtonEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_MouseButtonEventArgs")]
  #endif
  public static extern void delete_MouseButtonEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MouseWheelEventArgs_wheelRotation_set")]
  #else
  [DllImport("Noesis", EntryPoint="MouseWheelEventArgs_wheelRotation_set")]
  #endif
  public static extern void MouseWheelEventArgs_wheelRotation_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MouseWheelEventArgs_wheelRotation_get")]
  #else
  [DllImport("Noesis", EntryPoint="MouseWheelEventArgs_wheelRotation_get")]
  #endif
  public static extern int MouseWheelEventArgs_wheelRotation_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_MouseWheelEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_MouseWheelEventArgs")]
  #endif
  public static extern IntPtr new_MouseWheelEventArgs(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_MouseWheelEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_MouseWheelEventArgs")]
  #endif
  public static extern void delete_MouseWheelEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AccessKeyEventArgs_isMultiple_set")]
  #else
  [DllImport("Noesis", EntryPoint="AccessKeyEventArgs_isMultiple_set")]
  #endif
  public static extern void AccessKeyEventArgs_isMultiple_set(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AccessKeyEventArgs_isMultiple_get")]
  #else
  [DllImport("Noesis", EntryPoint="AccessKeyEventArgs_isMultiple_get")]
  #endif
  public static extern bool AccessKeyEventArgs_isMultiple_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_AccessKeyEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_AccessKeyEventArgs")]
  #endif
  public static extern IntPtr new_AccessKeyEventArgs();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_AccessKeyEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_AccessKeyEventArgs")]
  #endif
  public static extern void delete_AccessKeyEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardFocusChangedEventArgs_oldFocus_set")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardFocusChangedEventArgs_oldFocus_set")]
  #endif
  public static extern void KeyboardFocusChangedEventArgs_oldFocus_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardFocusChangedEventArgs_oldFocus_get")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardFocusChangedEventArgs_oldFocus_get")]
  #endif
  public static extern IntPtr KeyboardFocusChangedEventArgs_oldFocus_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardFocusChangedEventArgs_newFocus_set")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardFocusChangedEventArgs_newFocus_set")]
  #endif
  public static extern void KeyboardFocusChangedEventArgs_newFocus_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardFocusChangedEventArgs_newFocus_get")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardFocusChangedEventArgs_newFocus_get")]
  #endif
  public static extern IntPtr KeyboardFocusChangedEventArgs_newFocus_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_KeyboardFocusChangedEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_KeyboardFocusChangedEventArgs")]
  #endif
  public static extern IntPtr new_KeyboardFocusChangedEventArgs(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_KeyboardFocusChangedEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_KeyboardFocusChangedEventArgs")]
  #endif
  public static extern void delete_KeyboardFocusChangedEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyEventArgs_deadCharProcessedKey_set")]
  #else
  [DllImport("Noesis", EntryPoint="KeyEventArgs_deadCharProcessedKey_set")]
  #endif
  public static extern void KeyEventArgs_deadCharProcessedKey_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyEventArgs_deadCharProcessedKey_get")]
  #else
  [DllImport("Noesis", EntryPoint="KeyEventArgs_deadCharProcessedKey_get")]
  #endif
  public static extern int KeyEventArgs_deadCharProcessedKey_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyEventArgs_imeProcessedKey_set")]
  #else
  [DllImport("Noesis", EntryPoint="KeyEventArgs_imeProcessedKey_set")]
  #endif
  public static extern void KeyEventArgs_imeProcessedKey_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyEventArgs_imeProcessedKey_get")]
  #else
  [DllImport("Noesis", EntryPoint="KeyEventArgs_imeProcessedKey_get")]
  #endif
  public static extern int KeyEventArgs_imeProcessedKey_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyEventArgs_key_set")]
  #else
  [DllImport("Noesis", EntryPoint="KeyEventArgs_key_set")]
  #endif
  public static extern void KeyEventArgs_key_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyEventArgs_key_get")]
  #else
  [DllImport("Noesis", EntryPoint="KeyEventArgs_key_get")]
  #endif
  public static extern int KeyEventArgs_key_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyEventArgs_keyStates_set")]
  #else
  [DllImport("Noesis", EntryPoint="KeyEventArgs_keyStates_set")]
  #endif
  public static extern void KeyEventArgs_keyStates_set(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyEventArgs_keyStates_get")]
  #else
  [DllImport("Noesis", EntryPoint="KeyEventArgs_keyStates_get")]
  #endif
  public static extern uint KeyEventArgs_keyStates_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyEventArgs_systemKey_set")]
  #else
  [DllImport("Noesis", EntryPoint="KeyEventArgs_systemKey_set")]
  #endif
  public static extern void KeyEventArgs_systemKey_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyEventArgs_systemKey_get")]
  #else
  [DllImport("Noesis", EntryPoint="KeyEventArgs_systemKey_get")]
  #endif
  public static extern int KeyEventArgs_systemKey_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_KeyEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_KeyEventArgs")]
  #endif
  public static extern IntPtr new_KeyEventArgs(HandleRef jarg1, HandleRef jarg2, int jarg3, uint jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyEventArgs_GetIsDown")]
  #else
  [DllImport("Noesis", EntryPoint="KeyEventArgs_GetIsDown")]
  #endif
  public static extern bool KeyEventArgs_GetIsDown(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyEventArgs_GetIsRepeat")]
  #else
  [DllImport("Noesis", EntryPoint="KeyEventArgs_GetIsRepeat")]
  #endif
  public static extern bool KeyEventArgs_GetIsRepeat(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyEventArgs_GetIsToggled")]
  #else
  [DllImport("Noesis", EntryPoint="KeyEventArgs_GetIsToggled")]
  #endif
  public static extern bool KeyEventArgs_GetIsToggled(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyEventArgs_GetIsUp")]
  #else
  [DllImport("Noesis", EntryPoint="KeyEventArgs_GetIsUp")]
  #endif
  public static extern bool KeyEventArgs_GetIsUp(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_KeyEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_KeyEventArgs")]
  #endif
  public static extern void delete_KeyEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragEventArgs_allowedEffects_set")]
  #else
  [DllImport("Noesis", EntryPoint="DragEventArgs_allowedEffects_set")]
  #endif
  public static extern void DragEventArgs_allowedEffects_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragEventArgs_allowedEffects_get")]
  #else
  [DllImport("Noesis", EntryPoint="DragEventArgs_allowedEffects_get")]
  #endif
  public static extern int DragEventArgs_allowedEffects_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragEventArgs_data_set")]
  #else
  [DllImport("Noesis", EntryPoint="DragEventArgs_data_set")]
  #endif
  public static extern void DragEventArgs_data_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragEventArgs_data_get")]
  #else
  [DllImport("Noesis", EntryPoint="DragEventArgs_data_get")]
  #endif
  public static extern IntPtr DragEventArgs_data_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragEventArgs_effects_set")]
  #else
  [DllImport("Noesis", EntryPoint="DragEventArgs_effects_set")]
  #endif
  public static extern void DragEventArgs_effects_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragEventArgs_effects_get")]
  #else
  [DllImport("Noesis", EntryPoint="DragEventArgs_effects_get")]
  #endif
  public static extern int DragEventArgs_effects_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragEventArgs_keyStates_set")]
  #else
  [DllImport("Noesis", EntryPoint="DragEventArgs_keyStates_set")]
  #endif
  public static extern void DragEventArgs_keyStates_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragEventArgs_keyStates_get")]
  #else
  [DllImport("Noesis", EntryPoint="DragEventArgs_keyStates_get")]
  #endif
  public static extern int DragEventArgs_keyStates_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DragEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_DragEventArgs")]
  #endif
  public static extern IntPtr new_DragEventArgs(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DragEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DragEventArgs")]
  #endif
  public static extern void delete_DragEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GiveFeedbackEventArgs_effects_set")]
  #else
  [DllImport("Noesis", EntryPoint="GiveFeedbackEventArgs_effects_set")]
  #endif
  public static extern void GiveFeedbackEventArgs_effects_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GiveFeedbackEventArgs_effects_get")]
  #else
  [DllImport("Noesis", EntryPoint="GiveFeedbackEventArgs_effects_get")]
  #endif
  public static extern int GiveFeedbackEventArgs_effects_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GiveFeedbackEventArgs_useDefaultCursors_set")]
  #else
  [DllImport("Noesis", EntryPoint="GiveFeedbackEventArgs_useDefaultCursors_set")]
  #endif
  public static extern void GiveFeedbackEventArgs_useDefaultCursors_set(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GiveFeedbackEventArgs_useDefaultCursors_get")]
  #else
  [DllImport("Noesis", EntryPoint="GiveFeedbackEventArgs_useDefaultCursors_get")]
  #endif
  public static extern bool GiveFeedbackEventArgs_useDefaultCursors_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_GiveFeedbackEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_GiveFeedbackEventArgs")]
  #endif
  public static extern IntPtr new_GiveFeedbackEventArgs(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_GiveFeedbackEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_GiveFeedbackEventArgs")]
  #endif
  public static extern void delete_GiveFeedbackEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="QueryContinueDragEventArgs_action_set")]
  #else
  [DllImport("Noesis", EntryPoint="QueryContinueDragEventArgs_action_set")]
  #endif
  public static extern void QueryContinueDragEventArgs_action_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="QueryContinueDragEventArgs_action_get")]
  #else
  [DllImport("Noesis", EntryPoint="QueryContinueDragEventArgs_action_get")]
  #endif
  public static extern int QueryContinueDragEventArgs_action_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="QueryContinueDragEventArgs_escapePressed_set")]
  #else
  [DllImport("Noesis", EntryPoint="QueryContinueDragEventArgs_escapePressed_set")]
  #endif
  public static extern void QueryContinueDragEventArgs_escapePressed_set(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="QueryContinueDragEventArgs_escapePressed_get")]
  #else
  [DllImport("Noesis", EntryPoint="QueryContinueDragEventArgs_escapePressed_get")]
  #endif
  public static extern bool QueryContinueDragEventArgs_escapePressed_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="QueryContinueDragEventArgs_keyStates_set")]
  #else
  [DllImport("Noesis", EntryPoint="QueryContinueDragEventArgs_keyStates_set")]
  #endif
  public static extern void QueryContinueDragEventArgs_keyStates_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="QueryContinueDragEventArgs_keyStates_get")]
  #else
  [DllImport("Noesis", EntryPoint="QueryContinueDragEventArgs_keyStates_get")]
  #endif
  public static extern int QueryContinueDragEventArgs_keyStates_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_QueryContinueDragEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_QueryContinueDragEventArgs")]
  #endif
  public static extern IntPtr new_QueryContinueDragEventArgs(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_QueryContinueDragEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_QueryContinueDragEventArgs")]
  #endif
  public static extern void delete_QueryContinueDragEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextCompositionEventArgs_ch_set")]
  #else
  [DllImport("Noesis", EntryPoint="TextCompositionEventArgs_ch_set")]
  #endif
  public static extern void TextCompositionEventArgs_ch_set(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextCompositionEventArgs_ch_get")]
  #else
  [DllImport("Noesis", EntryPoint="TextCompositionEventArgs_ch_get")]
  #endif
  public static extern uint TextCompositionEventArgs_ch_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TextCompositionEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_TextCompositionEventArgs")]
  #endif
  public static extern IntPtr new_TextCompositionEventArgs(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TextCompositionEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TextCompositionEventArgs")]
  #endif
  public static extern void delete_TextCompositionEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_QueryCursorEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_QueryCursorEventArgs")]
  #endif
  public static extern IntPtr new_QueryCursorEventArgs(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_QueryCursorEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_QueryCursorEventArgs")]
  #endif
  public static extern void delete_QueryCursorEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TraversalRequest_focusNavigationDirection_set")]
  #else
  [DllImport("Noesis", EntryPoint="TraversalRequest_focusNavigationDirection_set")]
  #endif
  public static extern void TraversalRequest_focusNavigationDirection_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TraversalRequest_focusNavigationDirection_get")]
  #else
  [DllImport("Noesis", EntryPoint="TraversalRequest_focusNavigationDirection_get")]
  #endif
  public static extern int TraversalRequest_focusNavigationDirection_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TraversalRequest_wrapped_set")]
  #else
  [DllImport("Noesis", EntryPoint="TraversalRequest_wrapped_set")]
  #endif
  public static extern void TraversalRequest_wrapped_set(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TraversalRequest_wrapped_get")]
  #else
  [DllImport("Noesis", EntryPoint="TraversalRequest_wrapped_get")]
  #endif
  public static extern bool TraversalRequest_wrapped_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TraversalRequest")]
  #else
  [DllImport("Noesis", EntryPoint="new_TraversalRequest")]
  #endif
  public static extern IntPtr new_TraversalRequest();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TraversalRequest")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TraversalRequest")]
  #endif
  public static extern void delete_TraversalRequest(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ValueTargetProvider")]
  #else
  [DllImport("Noesis", EntryPoint="new_ValueTargetProvider")]
  #endif
  public static extern IntPtr new_ValueTargetProvider(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ValueTargetProvider_GetTargetObject")]
  #else
  [DllImport("Noesis", EntryPoint="ValueTargetProvider_GetTargetObject")]
  #endif
  public static extern IntPtr ValueTargetProvider_GetTargetObject(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ValueTargetProvider_GetTargetProperty")]
  #else
  [DllImport("Noesis", EntryPoint="ValueTargetProvider_GetTargetProperty")]
  #endif
  public static extern IntPtr ValueTargetProvider_GetTargetProperty(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ValueTargetProvider")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ValueTargetProvider")]
  #endif
  public static extern void delete_ValueTargetProvider(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Viewbox")]
  #else
  [DllImport("Noesis", EntryPoint="new_Viewbox")]
  #endif
  public static extern IntPtr new_Viewbox();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Viewbox")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Viewbox")]
  #endif
  public static extern void delete_Viewbox(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Viewbox_GetStretchScale__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Viewbox_GetStretchScale__SWIG_0")]
  #endif
  public static extern IntPtr Viewbox_GetStretchScale__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Viewbox_GetStretchScale__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Viewbox_GetStretchScale__SWIG_1")]
  #endif
  public static extern IntPtr Viewbox_GetStretchScale__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Viewbox_GetStretchDirection")]
  #else
  [DllImport("Noesis", EntryPoint="Viewbox_GetStretchDirection")]
  #endif
  public static extern int Viewbox_GetStretchDirection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Viewbox_SetStretchDirection")]
  #else
  [DllImport("Noesis", EntryPoint="Viewbox_SetStretchDirection")]
  #endif
  public static extern void Viewbox_SetStretchDirection(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Viewbox_GetStretch")]
  #else
  [DllImport("Noesis", EntryPoint="Viewbox_GetStretch")]
  #endif
  public static extern int Viewbox_GetStretch(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Viewbox_SetStretch")]
  #else
  [DllImport("Noesis", EntryPoint="Viewbox_SetStretch")]
  #endif
  public static extern void Viewbox_SetStretch(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Viewbox_GetChild")]
  #else
  [DllImport("Noesis", EntryPoint="Viewbox_GetChild")]
  #endif
  public static extern IntPtr Viewbox_GetChild(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Viewbox_SetChild")]
  #else
  [DllImport("Noesis", EntryPoint="Viewbox_SetChild")]
  #endif
  public static extern void Viewbox_SetChild(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Viewbox_StretchDirectionProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Viewbox_StretchDirectionProperty_set")]
  #endif
  public static extern void Viewbox_StretchDirectionProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Viewbox_StretchDirectionProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Viewbox_StretchDirectionProperty_get")]
  #endif
  public static extern IntPtr Viewbox_StretchDirectionProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Viewbox_StretchProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Viewbox_StretchProperty_set")]
  #endif
  public static extern void Viewbox_StretchProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Viewbox_StretchProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Viewbox_StretchProperty_get")]
  #endif
  public static extern IntPtr Viewbox_StretchProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_VisualBrush")]
  #else
  [DllImport("Noesis", EntryPoint="new_VisualBrush")]
  #endif
  public static extern IntPtr new_VisualBrush();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_VisualBrush")]
  #else
  [DllImport("Noesis", EntryPoint="delete_VisualBrush")]
  #endif
  public static extern void delete_VisualBrush(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualBrush_GetAutoLayoutContent")]
  #else
  [DllImport("Noesis", EntryPoint="VisualBrush_GetAutoLayoutContent")]
  #endif
  public static extern bool VisualBrush_GetAutoLayoutContent(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualBrush_SetAutoLayoutContent")]
  #else
  [DllImport("Noesis", EntryPoint="VisualBrush_SetAutoLayoutContent")]
  #endif
  public static extern void VisualBrush_SetAutoLayoutContent(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualBrush_GetVisual")]
  #else
  [DllImport("Noesis", EntryPoint="VisualBrush_GetVisual")]
  #endif
  public static extern IntPtr VisualBrush_GetVisual(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualBrush_SetVisual")]
  #else
  [DllImport("Noesis", EntryPoint="VisualBrush_SetVisual")]
  #endif
  public static extern void VisualBrush_SetVisual(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualBrush_CreateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="VisualBrush_CreateRenderProxy")]
  #endif
  public static extern void VisualBrush_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualBrush_UpdateRenderProxy")]
  #else
  [DllImport("Noesis", EntryPoint="VisualBrush_UpdateRenderProxy")]
  #endif
  public static extern void VisualBrush_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualBrush_AutoLayoutContentProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="VisualBrush_AutoLayoutContentProperty_set")]
  #endif
  public static extern void VisualBrush_AutoLayoutContentProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualBrush_AutoLayoutContentProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="VisualBrush_AutoLayoutContentProperty_get")]
  #endif
  public static extern IntPtr VisualBrush_AutoLayoutContentProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualBrush_VisualProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="VisualBrush_VisualProperty_set")]
  #endif
  public static extern void VisualBrush_VisualProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualBrush_VisualProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="VisualBrush_VisualProperty_get")]
  #endif
  public static extern IntPtr VisualBrush_VisualProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualTreeHelper_GetRoot")]
  #else
  [DllImport("Noesis", EntryPoint="VisualTreeHelper_GetRoot")]
  #endif
  public static extern IntPtr VisualTreeHelper_GetRoot(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualTreeHelper_GetParent")]
  #else
  [DllImport("Noesis", EntryPoint="VisualTreeHelper_GetParent")]
  #endif
  public static extern IntPtr VisualTreeHelper_GetParent(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualTreeHelper_GetChildrenCount")]
  #else
  [DllImport("Noesis", EntryPoint="VisualTreeHelper_GetChildrenCount")]
  #endif
  public static extern uint VisualTreeHelper_GetChildrenCount(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualTreeHelper_GetChild")]
  #else
  [DllImport("Noesis", EntryPoint="VisualTreeHelper_GetChild")]
  #endif
  public static extern IntPtr VisualTreeHelper_GetChild(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualTreeHelper_GetContentBounds")]
  #else
  [DllImport("Noesis", EntryPoint="VisualTreeHelper_GetContentBounds")]
  #endif
  public static extern IntPtr VisualTreeHelper_GetContentBounds(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualTreeHelper_GetDescendantBounds")]
  #else
  [DllImport("Noesis", EntryPoint="VisualTreeHelper_GetDescendantBounds")]
  #endif
  public static extern IntPtr VisualTreeHelper_GetDescendantBounds(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualTreeHelper_HitTest__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="VisualTreeHelper_HitTest__SWIG_0")]
  #endif
  public static extern IntPtr VisualTreeHelper_HitTest__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualTreeHelper_HitTest__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="VisualTreeHelper_HitTest__SWIG_1")]
  #endif
  public static extern IntPtr VisualTreeHelper_HitTest__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualTreeHelper_PrintTree")]
  #else
  [DllImport("Noesis", EntryPoint="VisualTreeHelper_PrintTree")]
  #endif
  public static extern void VisualTreeHelper_PrintTree(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_VisualTreeHelper")]
  #else
  [DllImport("Noesis", EntryPoint="new_VisualTreeHelper")]
  #endif
  public static extern IntPtr new_VisualTreeHelper();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_VisualTreeHelper")]
  #else
  [DllImport("Noesis", EntryPoint="delete_VisualTreeHelper")]
  #endif
  public static extern void delete_VisualTreeHelper(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CancelEventArgs_cancel_set")]
  #else
  [DllImport("Noesis", EntryPoint="CancelEventArgs_cancel_set")]
  #endif
  public static extern void CancelEventArgs_cancel_set(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CancelEventArgs_cancel_get")]
  #else
  [DllImport("Noesis", EntryPoint="CancelEventArgs_cancel_get")]
  #endif
  public static extern bool CancelEventArgs_cancel_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CancelEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_CancelEventArgs")]
  #endif
  public static extern IntPtr new_CancelEventArgs();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_CancelEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_CancelEventArgs")]
  #endif
  public static extern void delete_CancelEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Window")]
  #else
  [DllImport("Noesis", EntryPoint="new_Window")]
  #endif
  public static extern IntPtr new_Window();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Window")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Window")]
  #endif
  public static extern void delete_Window(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_GetContentSize")]
  #else
  [DllImport("Noesis", EntryPoint="Window_GetContentSize")]
  #endif
  public static extern IntPtr Window_GetContentSize(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_GetSystemWindow")]
  #else
  [DllImport("Noesis", EntryPoint="Window_GetSystemWindow")]
  #endif
  public static extern IntPtr Window_GetSystemWindow(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_Attach")]
  #else
  [DllImport("Noesis", EntryPoint="Window_Attach")]
  #endif
  public static extern void Window_Attach(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_Detach")]
  #else
  [DllImport("Noesis", EntryPoint="Window_Detach")]
  #endif
  public static extern void Window_Detach(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_Create")]
  #else
  [DllImport("Noesis", EntryPoint="Window_Create")]
  #endif
  public static extern void Window_Create(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_Show")]
  #else
  [DllImport("Noesis", EntryPoint="Window_Show")]
  #endif
  public static extern void Window_Show(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_ShowDialog")]
  #else
  [DllImport("Noesis", EntryPoint="Window_ShowDialog")]
  #endif
  public static extern bool Window_ShowDialog(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_Activate")]
  #else
  [DllImport("Noesis", EntryPoint="Window_Activate")]
  #endif
  public static extern bool Window_Activate(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_Hide")]
  #else
  [DllImport("Noesis", EntryPoint="Window_Hide")]
  #endif
  public static extern void Window_Hide(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_Close__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Window_Close__SWIG_0")]
  #endif
  public static extern void Window_Close__SWIG_0(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_Close__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Window_Close__SWIG_1")]
  #endif
  public static extern void Window_Close__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_GetAllowsTransparency")]
  #else
  [DllImport("Noesis", EntryPoint="Window_GetAllowsTransparency")]
  #endif
  public static extern bool Window_GetAllowsTransparency(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_SetAllowsTransparency")]
  #else
  [DllImport("Noesis", EntryPoint="Window_SetAllowsTransparency")]
  #endif
  public static extern void Window_SetAllowsTransparency(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_GetDialogResult")]
  #else
  [DllImport("Noesis", EntryPoint="Window_GetDialogResult")]
  #endif
  public static extern bool Window_GetDialogResult(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_SetDialogResult")]
  #else
  [DllImport("Noesis", EntryPoint="Window_SetDialogResult")]
  #endif
  public static extern void Window_SetDialogResult(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_GetFullscreen")]
  #else
  [DllImport("Noesis", EntryPoint="Window_GetFullscreen")]
  #endif
  public static extern bool Window_GetFullscreen(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_SetFullscreen")]
  #else
  [DllImport("Noesis", EntryPoint="Window_SetFullscreen")]
  #endif
  public static extern void Window_SetFullscreen(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_GetIcon")]
  #else
  [DllImport("Noesis", EntryPoint="Window_GetIcon")]
  #endif
  public static extern IntPtr Window_GetIcon(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_SetIcon")]
  #else
  [DllImport("Noesis", EntryPoint="Window_SetIcon")]
  #endif
  public static extern void Window_SetIcon(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_GetIsActive")]
  #else
  [DllImport("Noesis", EntryPoint="Window_GetIsActive")]
  #endif
  public static extern bool Window_GetIsActive(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_SetIsActive")]
  #else
  [DllImport("Noesis", EntryPoint="Window_SetIsActive")]
  #endif
  public static extern void Window_SetIsActive(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_GetLeft")]
  #else
  [DllImport("Noesis", EntryPoint="Window_GetLeft")]
  #endif
  public static extern float Window_GetLeft(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_SetLeft")]
  #else
  [DllImport("Noesis", EntryPoint="Window_SetLeft")]
  #endif
  public static extern void Window_SetLeft(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_GetResizeMode")]
  #else
  [DllImport("Noesis", EntryPoint="Window_GetResizeMode")]
  #endif
  public static extern IntPtr Window_GetResizeMode(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_SetResizeMode")]
  #else
  [DllImport("Noesis", EntryPoint="Window_SetResizeMode")]
  #endif
  public static extern void Window_SetResizeMode(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_GetShowInTaskbar")]
  #else
  [DllImport("Noesis", EntryPoint="Window_GetShowInTaskbar")]
  #endif
  public static extern bool Window_GetShowInTaskbar(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_SetShowInTaskbar")]
  #else
  [DllImport("Noesis", EntryPoint="Window_SetShowInTaskbar")]
  #endif
  public static extern void Window_SetShowInTaskbar(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_GetSizeToContent")]
  #else
  [DllImport("Noesis", EntryPoint="Window_GetSizeToContent")]
  #endif
  public static extern int Window_GetSizeToContent(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_SetSizeToContent")]
  #else
  [DllImport("Noesis", EntryPoint="Window_SetSizeToContent")]
  #endif
  public static extern void Window_SetSizeToContent(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_GetTitle")]
  #else
  [DllImport("Noesis", EntryPoint="Window_GetTitle")]
  #endif
  public static extern IntPtr Window_GetTitle(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_SetTitle")]
  #else
  [DllImport("Noesis", EntryPoint="Window_SetTitle")]
  #endif
  public static extern void Window_SetTitle(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_GetTop")]
  #else
  [DllImport("Noesis", EntryPoint="Window_GetTop")]
  #endif
  public static extern float Window_GetTop(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_SetTop")]
  #else
  [DllImport("Noesis", EntryPoint="Window_SetTop")]
  #endif
  public static extern void Window_SetTop(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_GetTopmost")]
  #else
  [DllImport("Noesis", EntryPoint="Window_GetTopmost")]
  #endif
  public static extern bool Window_GetTopmost(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_SetTopmost")]
  #else
  [DllImport("Noesis", EntryPoint="Window_SetTopmost")]
  #endif
  public static extern void Window_SetTopmost(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_GetWindowState")]
  #else
  [DllImport("Noesis", EntryPoint="Window_GetWindowState")]
  #endif
  public static extern IntPtr Window_GetWindowState(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_SetWindowState")]
  #else
  [DllImport("Noesis", EntryPoint="Window_SetWindowState")]
  #endif
  public static extern void Window_SetWindowState(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_GetWindowStyle")]
  #else
  [DllImport("Noesis", EntryPoint="Window_GetWindowStyle")]
  #endif
  public static extern IntPtr Window_GetWindowStyle(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_SetWindowStyle")]
  #else
  [DllImport("Noesis", EntryPoint="Window_SetWindowStyle")]
  #endif
  public static extern void Window_SetWindowStyle(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_GetWindowStartupLocation")]
  #else
  [DllImport("Noesis", EntryPoint="Window_GetWindowStartupLocation")]
  #endif
  public static extern IntPtr Window_GetWindowStartupLocation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_SetWindowStartupLocation")]
  #else
  [DllImport("Noesis", EntryPoint="Window_SetWindowStartupLocation")]
  #endif
  public static extern void Window_SetWindowStartupLocation(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_Activated")]
  #else
  [DllImport("Noesis", EntryPoint="Window_Activated")]
  #endif
  public static extern IntPtr Window_Activated(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_Deactivated")]
  #else
  [DllImport("Noesis", EntryPoint="Window_Deactivated")]
  #endif
  public static extern IntPtr Window_Deactivated(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_Closing")]
  #else
  [DllImport("Noesis", EntryPoint="Window_Closing")]
  #endif
  public static extern IntPtr Window_Closing(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_Closed")]
  #else
  [DllImport("Noesis", EntryPoint="Window_Closed")]
  #endif
  public static extern IntPtr Window_Closed(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_LocationChanged")]
  #else
  [DllImport("Noesis", EntryPoint="Window_LocationChanged")]
  #endif
  public static extern IntPtr Window_LocationChanged(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_StateChanged")]
  #else
  [DllImport("Noesis", EntryPoint="Window_StateChanged")]
  #endif
  public static extern IntPtr Window_StateChanged(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_ContentRendered")]
  #else
  [DllImport("Noesis", EntryPoint="Window_ContentRendered")]
  #endif
  public static extern IntPtr Window_ContentRendered(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_AllowsTransparencyProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Window_AllowsTransparencyProperty_set")]
  #endif
  public static extern void Window_AllowsTransparencyProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_AllowsTransparencyProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Window_AllowsTransparencyProperty_get")]
  #endif
  public static extern IntPtr Window_AllowsTransparencyProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_FullscreenProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Window_FullscreenProperty_set")]
  #endif
  public static extern void Window_FullscreenProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_FullscreenProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Window_FullscreenProperty_get")]
  #endif
  public static extern IntPtr Window_FullscreenProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_IconProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Window_IconProperty_set")]
  #endif
  public static extern void Window_IconProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_IconProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Window_IconProperty_get")]
  #endif
  public static extern IntPtr Window_IconProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_IsActiveProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Window_IsActiveProperty_set")]
  #endif
  public static extern void Window_IsActiveProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_IsActiveProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Window_IsActiveProperty_get")]
  #endif
  public static extern IntPtr Window_IsActiveProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_LeftProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Window_LeftProperty_set")]
  #endif
  public static extern void Window_LeftProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_LeftProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Window_LeftProperty_get")]
  #endif
  public static extern IntPtr Window_LeftProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_ResizeModeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Window_ResizeModeProperty_set")]
  #endif
  public static extern void Window_ResizeModeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_ResizeModeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Window_ResizeModeProperty_get")]
  #endif
  public static extern IntPtr Window_ResizeModeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_ShowInTaskbarProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Window_ShowInTaskbarProperty_set")]
  #endif
  public static extern void Window_ShowInTaskbarProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_ShowInTaskbarProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Window_ShowInTaskbarProperty_get")]
  #endif
  public static extern IntPtr Window_ShowInTaskbarProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_SizeToContentProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Window_SizeToContentProperty_set")]
  #endif
  public static extern void Window_SizeToContentProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_SizeToContentProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Window_SizeToContentProperty_get")]
  #endif
  public static extern IntPtr Window_SizeToContentProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_TitleProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Window_TitleProperty_set")]
  #endif
  public static extern void Window_TitleProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_TitleProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Window_TitleProperty_get")]
  #endif
  public static extern IntPtr Window_TitleProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_TopmostProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Window_TopmostProperty_set")]
  #endif
  public static extern void Window_TopmostProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_TopmostProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Window_TopmostProperty_get")]
  #endif
  public static extern IntPtr Window_TopmostProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_TopProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Window_TopProperty_set")]
  #endif
  public static extern void Window_TopProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_TopProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Window_TopProperty_get")]
  #endif
  public static extern IntPtr Window_TopProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_WindowStateProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Window_WindowStateProperty_set")]
  #endif
  public static extern void Window_WindowStateProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_WindowStateProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Window_WindowStateProperty_get")]
  #endif
  public static extern IntPtr Window_WindowStateProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_WindowStyleProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Window_WindowStyleProperty_set")]
  #endif
  public static extern void Window_WindowStyleProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_WindowStyleProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Window_WindowStyleProperty_get")]
  #endif
  public static extern IntPtr Window_WindowStyleProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_WindowStartupLocationProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Window_WindowStartupLocationProperty_set")]
  #endif
  public static extern void Window_WindowStartupLocationProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_WindowStartupLocationProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Window_WindowStartupLocationProperty_get")]
  #endif
  public static extern IntPtr Window_WindowStartupLocationProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_WrapPanel")]
  #else
  [DllImport("Noesis", EntryPoint="new_WrapPanel")]
  #endif
  public static extern IntPtr new_WrapPanel();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="WrapPanel_GetItemWidth")]
  #else
  [DllImport("Noesis", EntryPoint="WrapPanel_GetItemWidth")]
  #endif
  public static extern float WrapPanel_GetItemWidth(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="WrapPanel_SetItemWidth")]
  #else
  [DllImport("Noesis", EntryPoint="WrapPanel_SetItemWidth")]
  #endif
  public static extern void WrapPanel_SetItemWidth(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="WrapPanel_GetItemHeight")]
  #else
  [DllImport("Noesis", EntryPoint="WrapPanel_GetItemHeight")]
  #endif
  public static extern float WrapPanel_GetItemHeight(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="WrapPanel_SetItemHeight")]
  #else
  [DllImport("Noesis", EntryPoint="WrapPanel_SetItemHeight")]
  #endif
  public static extern void WrapPanel_SetItemHeight(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="WrapPanel_GetOrientation")]
  #else
  [DllImport("Noesis", EntryPoint="WrapPanel_GetOrientation")]
  #endif
  public static extern int WrapPanel_GetOrientation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="WrapPanel_SetOrientation")]
  #else
  [DllImport("Noesis", EntryPoint="WrapPanel_SetOrientation")]
  #endif
  public static extern void WrapPanel_SetOrientation(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="WrapPanel_ItemWidthProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="WrapPanel_ItemWidthProperty_set")]
  #endif
  public static extern void WrapPanel_ItemWidthProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="WrapPanel_ItemWidthProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="WrapPanel_ItemWidthProperty_get")]
  #endif
  public static extern IntPtr WrapPanel_ItemWidthProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="WrapPanel_ItemHeightProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="WrapPanel_ItemHeightProperty_set")]
  #endif
  public static extern void WrapPanel_ItemHeightProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="WrapPanel_ItemHeightProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="WrapPanel_ItemHeightProperty_get")]
  #endif
  public static extern IntPtr WrapPanel_ItemHeightProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="WrapPanel_OrientationProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="WrapPanel_OrientationProperty_set")]
  #endif
  public static extern void WrapPanel_OrientationProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="WrapPanel_OrientationProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="WrapPanel_OrientationProperty_get")]
  #endif
  public static extern IntPtr WrapPanel_OrientationProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_WrapPanel")]
  #else
  [DllImport("Noesis", EntryPoint="delete_WrapPanel")]
  #endif
  public static extern void delete_WrapPanel(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MScorlibBoolean_ProvideValue")]
  #else
  [DllImport("Noesis", EntryPoint="MScorlibBoolean_ProvideValue")]
  #endif
  public static extern IntPtr MScorlibBoolean_ProvideValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_MScorlibBoolean")]
  #else
  [DllImport("Noesis", EntryPoint="new_MScorlibBoolean")]
  #endif
  public static extern IntPtr new_MScorlibBoolean();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_MScorlibBoolean")]
  #else
  [DllImport("Noesis", EntryPoint="delete_MScorlibBoolean")]
  #endif
  public static extern void delete_MScorlibBoolean(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MScorlibString_ProvideValue")]
  #else
  [DllImport("Noesis", EntryPoint="MScorlibString_ProvideValue")]
  #endif
  public static extern IntPtr MScorlibString_ProvideValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_MScorlibString")]
  #else
  [DllImport("Noesis", EntryPoint="new_MScorlibString")]
  #endif
  public static extern IntPtr new_MScorlibString();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_MScorlibString")]
  #else
  [DllImport("Noesis", EntryPoint="delete_MScorlibString")]
  #endif
  public static extern void delete_MScorlibString(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_AnimationClock")]
  #else
  [DllImport("Noesis", EntryPoint="new_AnimationClock")]
  #endif
  public static extern IntPtr new_AnimationClock(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationClock_Start__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationClock_Start__SWIG_0")]
  #endif
  public static extern void AnimationClock_Start__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationClock_Start__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationClock_Start__SWIG_1")]
  #endif
  public static extern void AnimationClock_Start__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_AnimationClock")]
  #else
  [DllImport("Noesis", EntryPoint="delete_AnimationClock")]
  #endif
  public static extern void delete_AnimationClock(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_AnimationTimeline")]
  #else
  [DllImport("Noesis", EntryPoint="delete_AnimationTimeline")]
  #endif
  public static extern void delete_AnimationTimeline(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationTimeline_GetAnimatedValue")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationTimeline_GetAnimatedValue")]
  #endif
  public static extern IntPtr AnimationTimeline_GetAnimatedValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationTimeline_Start__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationTimeline_Start__SWIG_0")]
  #endif
  public static extern void AnimationTimeline_Start__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationTimeline_Start__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationTimeline_Start__SWIG_1")]
  #endif
  public static extern void AnimationTimeline_Start__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationTimeline_GetIsAdditive")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationTimeline_GetIsAdditive")]
  #endif
  public static extern bool AnimationTimeline_GetIsAdditive(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationTimeline_SetIsAdditive")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationTimeline_SetIsAdditive")]
  #endif
  public static extern void AnimationTimeline_SetIsAdditive(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationTimeline_GetIsCumulative")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationTimeline_GetIsCumulative")]
  #endif
  public static extern bool AnimationTimeline_GetIsCumulative(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationTimeline_SetIsCumulative")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationTimeline_SetIsCumulative")]
  #endif
  public static extern void AnimationTimeline_SetIsCumulative(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationTimeline_CreateTransitionFrom")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationTimeline_CreateTransitionFrom")]
  #endif
  public static extern IntPtr AnimationTimeline_CreateTransitionFrom(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationTimeline_CreateTransitionTo")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationTimeline_CreateTransitionTo")]
  #endif
  public static extern IntPtr AnimationTimeline_CreateTransitionTo(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationTimeline_IsAdditiveProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationTimeline_IsAdditiveProperty_set")]
  #endif
  public static extern void AnimationTimeline_IsAdditiveProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationTimeline_IsAdditiveProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationTimeline_IsAdditiveProperty_get")]
  #endif
  public static extern IntPtr AnimationTimeline_IsAdditiveProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationTimeline_IsCumulativeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationTimeline_IsCumulativeProperty_set")]
  #endif
  public static extern void AnimationTimeline_IsCumulativeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationTimeline_IsCumulativeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationTimeline_IsCumulativeProperty_get")]
  #endif
  public static extern IntPtr AnimationTimeline_IsCumulativeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_EasingFunctionBase")]
  #else
  [DllImport("Noesis", EntryPoint="delete_EasingFunctionBase")]
  #endif
  public static extern void delete_EasingFunctionBase(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingFunctionBase_GetEasingMode")]
  #else
  [DllImport("Noesis", EntryPoint="EasingFunctionBase_GetEasingMode")]
  #endif
  public static extern int EasingFunctionBase_GetEasingMode(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingFunctionBase_SetEasingMode")]
  #else
  [DllImport("Noesis", EntryPoint="EasingFunctionBase_SetEasingMode")]
  #endif
  public static extern void EasingFunctionBase_SetEasingMode(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingFunctionBase_Ease")]
  #else
  [DllImport("Noesis", EntryPoint="EasingFunctionBase_Ease")]
  #endif
  public static extern float EasingFunctionBase_Ease(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingFunctionBase_EasingModeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="EasingFunctionBase_EasingModeProperty_set")]
  #endif
  public static extern void EasingFunctionBase_EasingModeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingFunctionBase_EasingModeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="EasingFunctionBase_EasingModeProperty_get")]
  #endif
  public static extern IntPtr EasingFunctionBase_EasingModeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_BackEase")]
  #else
  [DllImport("Noesis", EntryPoint="new_BackEase")]
  #endif
  public static extern IntPtr new_BackEase();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BackEase_GetAmplitude")]
  #else
  [DllImport("Noesis", EntryPoint="BackEase_GetAmplitude")]
  #endif
  public static extern float BackEase_GetAmplitude(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BackEase_SetAmplitude")]
  #else
  [DllImport("Noesis", EntryPoint="BackEase_SetAmplitude")]
  #endif
  public static extern void BackEase_SetAmplitude(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BackEase_AmplitudeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BackEase_AmplitudeProperty_set")]
  #endif
  public static extern void BackEase_AmplitudeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BackEase_AmplitudeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BackEase_AmplitudeProperty_get")]
  #endif
  public static extern IntPtr BackEase_AmplitudeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_BackEase")]
  #else
  [DllImport("Noesis", EntryPoint="delete_BackEase")]
  #endif
  public static extern void delete_BackEase(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_BaseAnimation")]
  #else
  [DllImport("Noesis", EntryPoint="delete_BaseAnimation")]
  #endif
  public static extern void delete_BaseAnimation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseAnimation_GetEasingFunction")]
  #else
  [DllImport("Noesis", EntryPoint="BaseAnimation_GetEasingFunction")]
  #endif
  public static extern IntPtr BaseAnimation_GetEasingFunction(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseAnimation_SetEasingFunction")]
  #else
  [DllImport("Noesis", EntryPoint="BaseAnimation_SetEasingFunction")]
  #endif
  public static extern void BaseAnimation_SetEasingFunction(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseAnimation_EasingFunctionProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BaseAnimation_EasingFunctionProperty_set")]
  #endif
  public static extern void BaseAnimation_EasingFunctionProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseAnimation_EasingFunctionProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BaseAnimation_EasingFunctionProperty_get")]
  #endif
  public static extern IntPtr BaseAnimation_EasingFunctionProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_BeginStoryboard")]
  #else
  [DllImport("Noesis", EntryPoint="new_BeginStoryboard")]
  #endif
  public static extern IntPtr new_BeginStoryboard();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BeginStoryboard_GetHandoffBehavior")]
  #else
  [DllImport("Noesis", EntryPoint="BeginStoryboard_GetHandoffBehavior")]
  #endif
  public static extern IntPtr BeginStoryboard_GetHandoffBehavior(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BeginStoryboard_SetHandoffBehavior")]
  #else
  [DllImport("Noesis", EntryPoint="BeginStoryboard_SetHandoffBehavior")]
  #endif
  public static extern void BeginStoryboard_SetHandoffBehavior(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BeginStoryboard_GetName")]
  #else
  [DllImport("Noesis", EntryPoint="BeginStoryboard_GetName")]
  #endif
  public static extern string BeginStoryboard_GetName(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BeginStoryboard_SetName")]
  #else
  [DllImport("Noesis", EntryPoint="BeginStoryboard_SetName")]
  #endif
  public static extern void BeginStoryboard_SetName(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BeginStoryboard_GetStoryboard")]
  #else
  [DllImport("Noesis", EntryPoint="BeginStoryboard_GetStoryboard")]
  #endif
  public static extern IntPtr BeginStoryboard_GetStoryboard(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BeginStoryboard_SetStoryboard")]
  #else
  [DllImport("Noesis", EntryPoint="BeginStoryboard_SetStoryboard")]
  #endif
  public static extern void BeginStoryboard_SetStoryboard(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BeginStoryboard_Invoke__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="BeginStoryboard_Invoke__SWIG_0")]
  #endif
  public static extern void BeginStoryboard_Invoke__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BeginStoryboard_Invoke__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="BeginStoryboard_Invoke__SWIG_1")]
  #endif
  public static extern void BeginStoryboard_Invoke__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BeginStoryboard_StoryboardProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BeginStoryboard_StoryboardProperty_set")]
  #endif
  public static extern void BeginStoryboard_StoryboardProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BeginStoryboard_StoryboardProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BeginStoryboard_StoryboardProperty_get")]
  #endif
  public static extern IntPtr BeginStoryboard_StoryboardProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_BeginStoryboard")]
  #else
  [DllImport("Noesis", EntryPoint="delete_BeginStoryboard")]
  #endif
  public static extern void delete_BeginStoryboard(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_BounceEase")]
  #else
  [DllImport("Noesis", EntryPoint="new_BounceEase")]
  #endif
  public static extern IntPtr new_BounceEase();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BounceEase_GetBounces")]
  #else
  [DllImport("Noesis", EntryPoint="BounceEase_GetBounces")]
  #endif
  public static extern int BounceEase_GetBounces(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BounceEase_SetBounces")]
  #else
  [DllImport("Noesis", EntryPoint="BounceEase_SetBounces")]
  #endif
  public static extern void BounceEase_SetBounces(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BounceEase_GetBounciness")]
  #else
  [DllImport("Noesis", EntryPoint="BounceEase_GetBounciness")]
  #endif
  public static extern float BounceEase_GetBounciness(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BounceEase_SetBounciness")]
  #else
  [DllImport("Noesis", EntryPoint="BounceEase_SetBounciness")]
  #endif
  public static extern void BounceEase_SetBounciness(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BounceEase_BouncesProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BounceEase_BouncesProperty_set")]
  #endif
  public static extern void BounceEase_BouncesProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BounceEase_BouncesProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BounceEase_BouncesProperty_get")]
  #endif
  public static extern IntPtr BounceEase_BouncesProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BounceEase_BouncinessProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BounceEase_BouncinessProperty_set")]
  #endif
  public static extern void BounceEase_BouncinessProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BounceEase_BouncinessProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BounceEase_BouncinessProperty_get")]
  #endif
  public static extern IntPtr BounceEase_BouncinessProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_BounceEase")]
  #else
  [DllImport("Noesis", EntryPoint="delete_BounceEase")]
  #endif
  public static extern void delete_BounceEase(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CircleEase")]
  #else
  [DllImport("Noesis", EntryPoint="new_CircleEase")]
  #endif
  public static extern IntPtr new_CircleEase();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_CircleEase")]
  #else
  [DllImport("Noesis", EntryPoint="delete_CircleEase")]
  #endif
  public static extern void delete_CircleEase(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Clock")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Clock")]
  #endif
  public static extern void delete_Clock(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Clock_GetCurrentIteration")]
  #else
  [DllImport("Noesis", EntryPoint="Clock_GetCurrentIteration")]
  #endif
  public static extern int Clock_GetCurrentIteration(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Clock_GetCurrentProgress")]
  #else
  [DllImport("Noesis", EntryPoint="Clock_GetCurrentProgress")]
  #endif
  public static extern float Clock_GetCurrentProgress(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Clock_GetCurrentTime")]
  #else
  [DllImport("Noesis", EntryPoint="Clock_GetCurrentTime")]
  #endif
  public static extern double Clock_GetCurrentTime(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Clock_GetCurrentState")]
  #else
  [DllImport("Noesis", EntryPoint="Clock_GetCurrentState")]
  #endif
  public static extern int Clock_GetCurrentState(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Clock_HasControllableRoot")]
  #else
  [DllImport("Noesis", EntryPoint="Clock_HasControllableRoot")]
  #endif
  public static extern bool Clock_HasControllableRoot(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Clock_GetParent")]
  #else
  [DllImport("Noesis", EntryPoint="Clock_GetParent")]
  #endif
  public static extern IntPtr Clock_GetParent(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Clock_GetTimeline")]
  #else
  [DllImport("Noesis", EntryPoint="Clock_GetTimeline")]
  #endif
  public static extern IntPtr Clock_GetTimeline(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Clock_Completed")]
  #else
  [DllImport("Noesis", EntryPoint="Clock_Completed")]
  #endif
  public static extern IntPtr Clock_Completed(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Clock_Tick")]
  #else
  [DllImport("Noesis", EntryPoint="Clock_Tick")]
  #endif
  public static extern bool Clock_Tick(HandleRef jarg1, double jarg2, int jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Clock_FlattenChildren")]
  #else
  [DllImport("Noesis", EntryPoint="Clock_FlattenChildren")]
  #endif
  public static extern void Clock_FlattenChildren(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ClockController")]
  #else
  [DllImport("Noesis", EntryPoint="new_ClockController")]
  #endif
  public static extern IntPtr new_ClockController(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ClockController")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ClockController")]
  #endif
  public static extern void delete_ClockController(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ClockGroup")]
  #else
  [DllImport("Noesis", EntryPoint="new_ClockGroup")]
  #endif
  public static extern IntPtr new_ClockGroup(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ClockGroup")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ClockGroup")]
  #endif
  public static extern void delete_ClockGroup(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ClockGroup_Add")]
  #else
  [DllImport("Noesis", EntryPoint="ClockGroup_Add")]
  #endif
  public static extern void ClockGroup_Add(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ClockGroup_GetChildrenCount")]
  #else
  [DllImport("Noesis", EntryPoint="ClockGroup_GetChildrenCount")]
  #endif
  public static extern uint ClockGroup_GetChildrenCount(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ClockGroup_GetChild")]
  #else
  [DllImport("Noesis", EntryPoint="ClockGroup_GetChild")]
  #endif
  public static extern IntPtr ClockGroup_GetChild(HandleRef jarg1, uint jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ClockGroup_Tick")]
  #else
  [DllImport("Noesis", EntryPoint="ClockGroup_Tick")]
  #endif
  public static extern bool ClockGroup_Tick(HandleRef jarg1, double jarg2, int jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ClockGroup_FlattenChildren")]
  #else
  [DllImport("Noesis", EntryPoint="ClockGroup_FlattenChildren")]
  #endif
  public static extern void ClockGroup_FlattenChildren(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ControllableStoryboardAction")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ControllableStoryboardAction")]
  #endif
  public static extern void delete_ControllableStoryboardAction(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ControllableStoryboardAction_GetBeginStoryboardName")]
  #else
  [DllImport("Noesis", EntryPoint="ControllableStoryboardAction_GetBeginStoryboardName")]
  #endif
  public static extern string ControllableStoryboardAction_GetBeginStoryboardName(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ControllableStoryboardAction_SetBeginStoryboardName")]
  #else
  [DllImport("Noesis", EntryPoint="ControllableStoryboardAction_SetBeginStoryboardName")]
  #endif
  public static extern void ControllableStoryboardAction_SetBeginStoryboardName(HandleRef jarg1, string jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ControllableStoryboardAction_Invoke__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="ControllableStoryboardAction_Invoke__SWIG_0")]
  #endif
  public static extern void ControllableStoryboardAction_Invoke__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ControllableStoryboardAction_Invoke__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="ControllableStoryboardAction_Invoke__SWIG_1")]
  #endif
  public static extern void ControllableStoryboardAction_Invoke__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_CubicEase")]
  #else
  [DllImport("Noesis", EntryPoint="new_CubicEase")]
  #endif
  public static extern IntPtr new_CubicEase();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_CubicEase")]
  #else
  [DllImport("Noesis", EntryPoint="delete_CubicEase")]
  #endif
  public static extern void delete_CubicEase(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Duration__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_Duration__SWIG_0")]
  #endif
  public static extern IntPtr new_Duration__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Duration__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_Duration__SWIG_1")]
  #endif
  public static extern IntPtr new_Duration__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Duration_Automatic")]
  #else
  [DllImport("Noesis", EntryPoint="Duration_Automatic")]
  #endif
  public static extern IntPtr Duration_Automatic();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Duration_Forever")]
  #else
  [DllImport("Noesis", EntryPoint="Duration_Forever")]
  #endif
  public static extern IntPtr Duration_Forever();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Duration_Parse")]
  #else
  [DllImport("Noesis", EntryPoint="Duration_Parse")]
  #endif
  public static extern IntPtr Duration_Parse(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Duration_TryParse")]
  #else
  [DllImport("Noesis", EntryPoint="Duration_TryParse")]
  #endif
  public static extern bool Duration_TryParse(string jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Duration_GetTimeSpan")]
  #else
  [DllImport("Noesis", EntryPoint="Duration_GetTimeSpan")]
  #endif
  public static extern IntPtr Duration_GetTimeSpan(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Duration_GetDurationType")]
  #else
  [DllImport("Noesis", EntryPoint="Duration_GetDurationType")]
  #endif
  public static extern int Duration_GetDurationType(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Duration_ToStr")]
  #else
  [DllImport("Noesis", EntryPoint="Duration_ToStr")]
  #endif
  public static extern IntPtr Duration_ToStr(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Duration")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Duration")]
  #endif
  public static extern void delete_Duration(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ElasticEase")]
  #else
  [DllImport("Noesis", EntryPoint="new_ElasticEase")]
  #endif
  public static extern IntPtr new_ElasticEase();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ElasticEase_GetOscillations")]
  #else
  [DllImport("Noesis", EntryPoint="ElasticEase_GetOscillations")]
  #endif
  public static extern int ElasticEase_GetOscillations(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ElasticEase_SetOscillations")]
  #else
  [DllImport("Noesis", EntryPoint="ElasticEase_SetOscillations")]
  #endif
  public static extern void ElasticEase_SetOscillations(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ElasticEase_GetSpringiness")]
  #else
  [DllImport("Noesis", EntryPoint="ElasticEase_GetSpringiness")]
  #endif
  public static extern float ElasticEase_GetSpringiness(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ElasticEase_SetSpringiness")]
  #else
  [DllImport("Noesis", EntryPoint="ElasticEase_SetSpringiness")]
  #endif
  public static extern void ElasticEase_SetSpringiness(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ElasticEase_OscillationsProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ElasticEase_OscillationsProperty_set")]
  #endif
  public static extern void ElasticEase_OscillationsProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ElasticEase_OscillationsProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ElasticEase_OscillationsProperty_get")]
  #endif
  public static extern IntPtr ElasticEase_OscillationsProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ElasticEase_SpringinessProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ElasticEase_SpringinessProperty_set")]
  #endif
  public static extern void ElasticEase_SpringinessProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ElasticEase_SpringinessProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ElasticEase_SpringinessProperty_get")]
  #endif
  public static extern IntPtr ElasticEase_SpringinessProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ElasticEase")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ElasticEase")]
  #endif
  public static extern void delete_ElasticEase(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ExponentialEase")]
  #else
  [DllImport("Noesis", EntryPoint="new_ExponentialEase")]
  #endif
  public static extern IntPtr new_ExponentialEase();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ExponentialEase_GetExponent")]
  #else
  [DllImport("Noesis", EntryPoint="ExponentialEase_GetExponent")]
  #endif
  public static extern float ExponentialEase_GetExponent(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ExponentialEase_SetExponent")]
  #else
  [DllImport("Noesis", EntryPoint="ExponentialEase_SetExponent")]
  #endif
  public static extern void ExponentialEase_SetExponent(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ExponentialEase_ExponentProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ExponentialEase_ExponentProperty_set")]
  #endif
  public static extern void ExponentialEase_ExponentProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ExponentialEase_ExponentProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ExponentialEase_ExponentProperty_get")]
  #endif
  public static extern IntPtr ExponentialEase_ExponentProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ExponentialEase")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ExponentialEase")]
  #endif
  public static extern void delete_ExponentialEase(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_KeySpline__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_KeySpline__SWIG_0")]
  #endif
  public static extern IntPtr new_KeySpline__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_KeySpline__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_KeySpline__SWIG_1")]
  #endif
  public static extern IntPtr new_KeySpline__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_KeySpline__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_KeySpline__SWIG_2")]
  #endif
  public static extern IntPtr new_KeySpline__SWIG_2(float jarg1, float jarg2, float jarg3, float jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeySpline_GetControlPoint1")]
  #else
  [DllImport("Noesis", EntryPoint="KeySpline_GetControlPoint1")]
  #endif
  public static extern IntPtr KeySpline_GetControlPoint1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeySpline_SetControlPoint1")]
  #else
  [DllImport("Noesis", EntryPoint="KeySpline_SetControlPoint1")]
  #endif
  public static extern void KeySpline_SetControlPoint1(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeySpline_GetControlPoint2")]
  #else
  [DllImport("Noesis", EntryPoint="KeySpline_GetControlPoint2")]
  #endif
  public static extern IntPtr KeySpline_GetControlPoint2(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeySpline_SetControlPoint2")]
  #else
  [DllImport("Noesis", EntryPoint="KeySpline_SetControlPoint2")]
  #endif
  public static extern void KeySpline_SetControlPoint2(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeySpline_GetSplineProgress")]
  #else
  [DllImport("Noesis", EntryPoint="KeySpline_GetSplineProgress")]
  #endif
  public static extern float KeySpline_GetSplineProgress(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeySpline_Parse")]
  #else
  [DllImport("Noesis", EntryPoint="KeySpline_Parse")]
  #endif
  public static extern IntPtr KeySpline_Parse(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeySpline_TryParse")]
  #else
  [DllImport("Noesis", EntryPoint="KeySpline_TryParse")]
  #endif
  public static extern bool KeySpline_TryParse(string jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_KeySpline")]
  #else
  [DllImport("Noesis", EntryPoint="delete_KeySpline")]
  #endif
  public static extern void delete_KeySpline(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_KeyTime")]
  #else
  [DllImport("Noesis", EntryPoint="new_KeyTime")]
  #endif
  public static extern IntPtr new_KeyTime();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyTime_FromPercent")]
  #else
  [DllImport("Noesis", EntryPoint="KeyTime_FromPercent")]
  #endif
  public static extern IntPtr KeyTime_FromPercent(float jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyTime_FromTimeSpan")]
  #else
  [DllImport("Noesis", EntryPoint="KeyTime_FromTimeSpan")]
  #endif
  public static extern IntPtr KeyTime_FromTimeSpan(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyTime_Paced")]
  #else
  [DllImport("Noesis", EntryPoint="KeyTime_Paced")]
  #endif
  public static extern IntPtr KeyTime_Paced();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyTime_Uniform")]
  #else
  [DllImport("Noesis", EntryPoint="KeyTime_Uniform")]
  #endif
  public static extern IntPtr KeyTime_Uniform();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyTime_Parse")]
  #else
  [DllImport("Noesis", EntryPoint="KeyTime_Parse")]
  #endif
  public static extern IntPtr KeyTime_Parse(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyTime_TryParse")]
  #else
  [DllImport("Noesis", EntryPoint="KeyTime_TryParse")]
  #endif
  public static extern bool KeyTime_TryParse(string jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyTime_GetKeyTimeType")]
  #else
  [DllImport("Noesis", EntryPoint="KeyTime_GetKeyTimeType")]
  #endif
  public static extern int KeyTime_GetKeyTimeType(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyTime_GetTimeSpan")]
  #else
  [DllImport("Noesis", EntryPoint="KeyTime_GetTimeSpan")]
  #endif
  public static extern IntPtr KeyTime_GetTimeSpan(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyTime_GetPercent")]
  #else
  [DllImport("Noesis", EntryPoint="KeyTime_GetPercent")]
  #endif
  public static extern float KeyTime_GetPercent(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_KeyTime")]
  #else
  [DllImport("Noesis", EntryPoint="delete_KeyTime")]
  #endif
  public static extern void delete_KeyTime(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TimelineEventArgs_target_set")]
  #else
  [DllImport("Noesis", EntryPoint="TimelineEventArgs_target_set")]
  #endif
  public static extern void TimelineEventArgs_target_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TimelineEventArgs_target_get")]
  #else
  [DllImport("Noesis", EntryPoint="TimelineEventArgs_target_get")]
  #endif
  public static extern IntPtr TimelineEventArgs_target_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TimelineEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="new_TimelineEventArgs")]
  #endif
  public static extern IntPtr new_TimelineEventArgs();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TimelineEventArgs")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TimelineEventArgs")]
  #endif
  public static extern void delete_TimelineEventArgs(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Timeline")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Timeline")]
  #endif
  public static extern void delete_Timeline(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_GetDesiredFrameRate")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_GetDesiredFrameRate")]
  #endif
  public static extern int Timeline_GetDesiredFrameRate(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_SetDesiredFrameRate")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_SetDesiredFrameRate")]
  #endif
  public static extern void Timeline_SetDesiredFrameRate(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_GetAccelerationRatio")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_GetAccelerationRatio")]
  #endif
  public static extern float Timeline_GetAccelerationRatio(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_SetAccelerationRatio")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_SetAccelerationRatio")]
  #endif
  public static extern void Timeline_SetAccelerationRatio(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_GetAutoReverse")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_GetAutoReverse")]
  #endif
  public static extern bool Timeline_GetAutoReverse(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_SetAutoReverse")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_SetAutoReverse")]
  #endif
  public static extern void Timeline_SetAutoReverse(HandleRef jarg1, bool jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_GetBeginTime")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_GetBeginTime")]
  #endif
  public static extern IntPtr Timeline_GetBeginTime(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_SetBeginTime")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_SetBeginTime")]
  #endif
  public static extern void Timeline_SetBeginTime(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_GetDecelerationRatio")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_GetDecelerationRatio")]
  #endif
  public static extern float Timeline_GetDecelerationRatio(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_SetDecelerationRatio")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_SetDecelerationRatio")]
  #endif
  public static extern void Timeline_SetDecelerationRatio(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_GetDuration")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_GetDuration")]
  #endif
  public static extern IntPtr Timeline_GetDuration(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_SetDuration")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_SetDuration")]
  #endif
  public static extern void Timeline_SetDuration(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_GetFillBehavior")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_GetFillBehavior")]
  #endif
  public static extern int Timeline_GetFillBehavior(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_SetFillBehavior")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_SetFillBehavior")]
  #endif
  public static extern void Timeline_SetFillBehavior(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_GetName")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_GetName")]
  #endif
  public static extern IntPtr Timeline_GetName(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_SetName")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_SetName")]
  #endif
  public static extern void Timeline_SetName(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_GetRepeatBehavior")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_GetRepeatBehavior")]
  #endif
  public static extern IntPtr Timeline_GetRepeatBehavior(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_SetRepeatBehavior")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_SetRepeatBehavior")]
  #endif
  public static extern void Timeline_SetRepeatBehavior(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_GetSpeedRatio")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_GetSpeedRatio")]
  #endif
  public static extern float Timeline_GetSpeedRatio(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_SetSpeedRatio")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_SetSpeedRatio")]
  #endif
  public static extern void Timeline_SetSpeedRatio(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_CreateClock")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_CreateClock")]
  #endif
  public static extern IntPtr Timeline_CreateClock(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_GetNaturalDuration")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_GetNaturalDuration")]
  #endif
  public static extern IntPtr Timeline_GetNaturalDuration(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_GetSinglePassDuration")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_GetSinglePassDuration")]
  #endif
  public static extern IntPtr Timeline_GetSinglePassDuration(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_GetIterationDuration")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_GetIterationDuration")]
  #endif
  public static extern IntPtr Timeline_GetIterationDuration(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_GetTotalDuration")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_GetTotalDuration")]
  #endif
  public static extern IntPtr Timeline_GetTotalDuration(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_IsTotalDurationAbsolute")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_IsTotalDurationAbsolute")]
  #endif
  public static extern bool Timeline_IsTotalDurationAbsolute(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_GetNormalizedDuration")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_GetNormalizedDuration")]
  #endif
  public static extern IntPtr Timeline_GetNormalizedDuration(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_CalculateEffectiveDurations")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_CalculateEffectiveDurations")]
  #endif
  public static extern void Timeline_CalculateEffectiveDurations(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_GetEffectiveDuration")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_GetEffectiveDuration")]
  #endif
  public static extern IntPtr Timeline_GetEffectiveDuration(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_OnClockDestroyed")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_OnClockDestroyed")]
  #endif
  public static extern void Timeline_OnClockDestroyed(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_AccelerationRatioProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_AccelerationRatioProperty_set")]
  #endif
  public static extern void Timeline_AccelerationRatioProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_AccelerationRatioProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_AccelerationRatioProperty_get")]
  #endif
  public static extern IntPtr Timeline_AccelerationRatioProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_AutoReverseProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_AutoReverseProperty_set")]
  #endif
  public static extern void Timeline_AutoReverseProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_AutoReverseProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_AutoReverseProperty_get")]
  #endif
  public static extern IntPtr Timeline_AutoReverseProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_BeginTimeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_BeginTimeProperty_set")]
  #endif
  public static extern void Timeline_BeginTimeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_BeginTimeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_BeginTimeProperty_get")]
  #endif
  public static extern IntPtr Timeline_BeginTimeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_DecelerationRatioProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_DecelerationRatioProperty_set")]
  #endif
  public static extern void Timeline_DecelerationRatioProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_DecelerationRatioProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_DecelerationRatioProperty_get")]
  #endif
  public static extern IntPtr Timeline_DecelerationRatioProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_DesiredFrameRateProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_DesiredFrameRateProperty_set")]
  #endif
  public static extern void Timeline_DesiredFrameRateProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_DesiredFrameRateProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_DesiredFrameRateProperty_get")]
  #endif
  public static extern IntPtr Timeline_DesiredFrameRateProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_DurationProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_DurationProperty_set")]
  #endif
  public static extern void Timeline_DurationProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_DurationProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_DurationProperty_get")]
  #endif
  public static extern IntPtr Timeline_DurationProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_FillBehaviorProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_FillBehaviorProperty_set")]
  #endif
  public static extern void Timeline_FillBehaviorProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_FillBehaviorProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_FillBehaviorProperty_get")]
  #endif
  public static extern IntPtr Timeline_FillBehaviorProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_NameProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_NameProperty_set")]
  #endif
  public static extern void Timeline_NameProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_NameProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_NameProperty_get")]
  #endif
  public static extern IntPtr Timeline_NameProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_RepeatBehaviorProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_RepeatBehaviorProperty_set")]
  #endif
  public static extern void Timeline_RepeatBehaviorProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_RepeatBehaviorProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_RepeatBehaviorProperty_get")]
  #endif
  public static extern IntPtr Timeline_RepeatBehaviorProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_SpeedRatioProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_SpeedRatioProperty_set")]
  #endif
  public static extern void Timeline_SpeedRatioProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_SpeedRatioProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_SpeedRatioProperty_get")]
  #endif
  public static extern IntPtr Timeline_SpeedRatioProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TimelineGroup")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TimelineGroup")]
  #endif
  public static extern void delete_TimelineGroup(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TimelineGroup_GetChildren")]
  #else
  [DllImport("Noesis", EntryPoint="TimelineGroup_GetChildren")]
  #endif
  public static extern IntPtr TimelineGroup_GetChildren(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TimelineGroup_SetChildren")]
  #else
  [DllImport("Noesis", EntryPoint="TimelineGroup_SetChildren")]
  #endif
  public static extern void TimelineGroup_SetChildren(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TimelineGroup_ChildrenProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="TimelineGroup_ChildrenProperty_set")]
  #endif
  public static extern void TimelineGroup_ChildrenProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TimelineGroup_ChildrenProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="TimelineGroup_ChildrenProperty_get")]
  #endif
  public static extern IntPtr TimelineGroup_ChildrenProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ParallelTimeline__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_ParallelTimeline__SWIG_0")]
  #endif
  public static extern IntPtr new_ParallelTimeline__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ParallelTimeline__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_ParallelTimeline__SWIG_1")]
  #endif
  public static extern IntPtr new_ParallelTimeline__SWIG_1(bool jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ParallelTimeline")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ParallelTimeline")]
  #endif
  public static extern void delete_ParallelTimeline(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ParallelTimeline_GetSlipBehavior")]
  #else
  [DllImport("Noesis", EntryPoint="ParallelTimeline_GetSlipBehavior")]
  #endif
  public static extern int ParallelTimeline_GetSlipBehavior(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ParallelTimeline_SetSlipBehavior")]
  #else
  [DllImport("Noesis", EntryPoint="ParallelTimeline_SetSlipBehavior")]
  #endif
  public static extern void ParallelTimeline_SetSlipBehavior(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ParallelTimeline_GetNaturalDuration")]
  #else
  [DllImport("Noesis", EntryPoint="ParallelTimeline_GetNaturalDuration")]
  #endif
  public static extern IntPtr ParallelTimeline_GetNaturalDuration(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ParallelTimeline_GetEffectiveDuration")]
  #else
  [DllImport("Noesis", EntryPoint="ParallelTimeline_GetEffectiveDuration")]
  #endif
  public static extern IntPtr ParallelTimeline_GetEffectiveDuration(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ParallelTimeline_SlipBehaviorProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ParallelTimeline_SlipBehaviorProperty_set")]
  #endif
  public static extern void ParallelTimeline_SlipBehaviorProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ParallelTimeline_SlipBehaviorProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ParallelTimeline_SlipBehaviorProperty_get")]
  #endif
  public static extern IntPtr ParallelTimeline_SlipBehaviorProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_PauseStoryboard")]
  #else
  [DllImport("Noesis", EntryPoint="new_PauseStoryboard")]
  #endif
  public static extern IntPtr new_PauseStoryboard();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_PauseStoryboard")]
  #else
  [DllImport("Noesis", EntryPoint="delete_PauseStoryboard")]
  #endif
  public static extern void delete_PauseStoryboard(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_PowerEase")]
  #else
  [DllImport("Noesis", EntryPoint="new_PowerEase")]
  #endif
  public static extern IntPtr new_PowerEase();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PowerEase_GetPower")]
  #else
  [DllImport("Noesis", EntryPoint="PowerEase_GetPower")]
  #endif
  public static extern float PowerEase_GetPower(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PowerEase_SetPower")]
  #else
  [DllImport("Noesis", EntryPoint="PowerEase_SetPower")]
  #endif
  public static extern void PowerEase_SetPower(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PowerEase_PowerProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="PowerEase_PowerProperty_set")]
  #endif
  public static extern void PowerEase_PowerProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PowerEase_PowerProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="PowerEase_PowerProperty_get")]
  #endif
  public static extern IntPtr PowerEase_PowerProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_PowerEase")]
  #else
  [DllImport("Noesis", EntryPoint="delete_PowerEase")]
  #endif
  public static extern void delete_PowerEase(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_QuadraticEase")]
  #else
  [DllImport("Noesis", EntryPoint="new_QuadraticEase")]
  #endif
  public static extern IntPtr new_QuadraticEase();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_QuadraticEase")]
  #else
  [DllImport("Noesis", EntryPoint="delete_QuadraticEase")]
  #endif
  public static extern void delete_QuadraticEase(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_QuarticEase")]
  #else
  [DllImport("Noesis", EntryPoint="new_QuarticEase")]
  #endif
  public static extern IntPtr new_QuarticEase();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_QuarticEase")]
  #else
  [DllImport("Noesis", EntryPoint="delete_QuarticEase")]
  #endif
  public static extern void delete_QuarticEase(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_QuinticEase")]
  #else
  [DllImport("Noesis", EntryPoint="new_QuinticEase")]
  #endif
  public static extern IntPtr new_QuinticEase();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_QuinticEase")]
  #else
  [DllImport("Noesis", EntryPoint="delete_QuinticEase")]
  #endif
  public static extern void delete_QuinticEase(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_RepeatBehavior__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_RepeatBehavior__SWIG_0")]
  #endif
  public static extern IntPtr new_RepeatBehavior__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_RepeatBehavior__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_RepeatBehavior__SWIG_1")]
  #endif
  public static extern IntPtr new_RepeatBehavior__SWIG_1(float jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_RepeatBehavior__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_RepeatBehavior__SWIG_2")]
  #endif
  public static extern IntPtr new_RepeatBehavior__SWIG_2(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RepeatBehavior_Forever")]
  #else
  [DllImport("Noesis", EntryPoint="RepeatBehavior_Forever")]
  #endif
  public static extern IntPtr RepeatBehavior_Forever();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RepeatBehavior_Parse")]
  #else
  [DllImport("Noesis", EntryPoint="RepeatBehavior_Parse")]
  #endif
  public static extern IntPtr RepeatBehavior_Parse(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RepeatBehavior_TryParse")]
  #else
  [DllImport("Noesis", EntryPoint="RepeatBehavior_TryParse")]
  #endif
  public static extern bool RepeatBehavior_TryParse(string jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RepeatBehavior_GetRepeatMode")]
  #else
  [DllImport("Noesis", EntryPoint="RepeatBehavior_GetRepeatMode")]
  #endif
  public static extern int RepeatBehavior_GetRepeatMode(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RepeatBehavior_GetCount")]
  #else
  [DllImport("Noesis", EntryPoint="RepeatBehavior_GetCount")]
  #endif
  public static extern float RepeatBehavior_GetCount(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RepeatBehavior_GetDuration")]
  #else
  [DllImport("Noesis", EntryPoint="RepeatBehavior_GetDuration")]
  #endif
  public static extern IntPtr RepeatBehavior_GetDuration(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_RepeatBehavior")]
  #else
  [DllImport("Noesis", EntryPoint="delete_RepeatBehavior")]
  #endif
  public static extern void delete_RepeatBehavior(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ResumeStoryboard")]
  #else
  [DllImport("Noesis", EntryPoint="new_ResumeStoryboard")]
  #endif
  public static extern IntPtr new_ResumeStoryboard();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ResumeStoryboard")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ResumeStoryboard")]
  #endif
  public static extern void delete_ResumeStoryboard(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_SineEase")]
  #else
  [DllImport("Noesis", EntryPoint="new_SineEase")]
  #endif
  public static extern IntPtr new_SineEase();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_SineEase")]
  #else
  [DllImport("Noesis", EntryPoint="delete_SineEase")]
  #endif
  public static extern void delete_SineEase(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_StopStoryboard")]
  #else
  [DllImport("Noesis", EntryPoint="new_StopStoryboard")]
  #endif
  public static extern IntPtr new_StopStoryboard();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_StopStoryboard")]
  #else
  [DllImport("Noesis", EntryPoint="delete_StopStoryboard")]
  #endif
  public static extern void delete_StopStoryboard(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationTarget__object_set")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationTarget__object_set")]
  #endif
  public static extern void AnimationTarget__object_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationTarget__object_get")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationTarget__object_get")]
  #endif
  public static extern IntPtr AnimationTarget__object_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationTarget_dp_set")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationTarget_dp_set")]
  #endif
  public static extern void AnimationTarget_dp_set(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationTarget_dp_get")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationTarget_dp_get")]
  #endif
  public static extern IntPtr AnimationTarget_dp_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_AnimationTarget")]
  #else
  [DllImport("Noesis", EntryPoint="new_AnimationTarget")]
  #endif
  public static extern IntPtr new_AnimationTarget();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_AnimationTarget")]
  #else
  [DllImport("Noesis", EntryPoint="delete_AnimationTarget")]
  #endif
  public static extern void delete_AnimationTarget(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Storyboard__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_Storyboard__SWIG_0")]
  #endif
  public static extern IntPtr new_Storyboard__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Storyboard__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_Storyboard__SWIG_1")]
  #endif
  public static extern IntPtr new_Storyboard__SWIG_1(bool jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Storyboard")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Storyboard")]
  #endif
  public static extern void delete_Storyboard(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_GetTargetName")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_GetTargetName")]
  #endif
  public static extern IntPtr Storyboard_GetTargetName(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_SetTargetName")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_SetTargetName")]
  #endif
  public static extern void Storyboard_SetTargetName(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_GetTargetProperty")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_GetTargetProperty")]
  #endif
  public static extern IntPtr Storyboard_GetTargetProperty(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_SetTargetProperty")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_SetTargetProperty")]
  #endif
  public static extern void Storyboard_SetTargetProperty(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_GetTarget")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_GetTarget")]
  #endif
  public static extern IntPtr Storyboard_GetTarget(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_SetTarget")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_SetTarget")]
  #endif
  public static extern void Storyboard_SetTarget(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_Begin__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_Begin__SWIG_0")]
  #endif
  public static extern void Storyboard_Begin__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4, HandleRef jarg5);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_Begin__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_Begin__SWIG_1")]
  #endif
  public static extern void Storyboard_Begin__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_Begin__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_Begin__SWIG_2")]
  #endif
  public static extern void Storyboard_Begin__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_Begin__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_Begin__SWIG_3")]
  #endif
  public static extern void Storyboard_Begin__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_Pause")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_Pause")]
  #endif
  public static extern void Storyboard_Pause(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_Resume")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_Resume")]
  #endif
  public static extern void Storyboard_Resume(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_Stop")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_Stop")]
  #endif
  public static extern void Storyboard_Stop(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_Remove")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_Remove")]
  #endif
  public static extern void Storyboard_Remove(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_IsPlaying")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_IsPlaying")]
  #endif
  public static extern bool Storyboard_IsPlaying(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_IsPaused")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_IsPaused")]
  #endif
  public static extern bool Storyboard_IsPaused(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_AnimationCompleted")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_AnimationCompleted")]
  #endif
  public static extern IntPtr Storyboard_AnimationCompleted(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_TargetNameProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_TargetNameProperty_set")]
  #endif
  public static extern void Storyboard_TargetNameProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_TargetNameProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_TargetNameProperty_get")]
  #endif
  public static extern IntPtr Storyboard_TargetNameProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_TargetProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_TargetProperty_set")]
  #endif
  public static extern void Storyboard_TargetProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_TargetProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_TargetProperty_get")]
  #endif
  public static extern IntPtr Storyboard_TargetProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_TargetPropertyProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_TargetPropertyProperty_set")]
  #endif
  public static extern void Storyboard_TargetPropertyProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_TargetPropertyProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_TargetPropertyProperty_get")]
  #endif
  public static extern IntPtr Storyboard_TargetPropertyProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TimeSpan__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_TimeSpan__SWIG_0")]
  #endif
  public static extern IntPtr new_TimeSpan__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TimeSpan__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_TimeSpan__SWIG_1")]
  #endif
  public static extern IntPtr new_TimeSpan__SWIG_1(long jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TimeSpan__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_TimeSpan__SWIG_2")]
  #endif
  public static extern IntPtr new_TimeSpan__SWIG_2(double jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TimeSpan__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="new_TimeSpan__SWIG_3")]
  #endif
  public static extern IntPtr new_TimeSpan__SWIG_3(int jarg1, int jarg2, int jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TimeSpan__SWIG_4")]
  #else
  [DllImport("Noesis", EntryPoint="new_TimeSpan__SWIG_4")]
  #endif
  public static extern IntPtr new_TimeSpan__SWIG_4(int jarg1, int jarg2, int jarg3, int jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_TimeSpan__SWIG_5")]
  #else
  [DllImport("Noesis", EntryPoint="new_TimeSpan__SWIG_5")]
  #endif
  public static extern IntPtr new_TimeSpan__SWIG_5(int jarg1, int jarg2, int jarg3, int jarg4, int jarg5);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TimeSpan_Parse")]
  #else
  [DllImport("Noesis", EntryPoint="TimeSpan_Parse")]
  #endif
  public static extern IntPtr TimeSpan_Parse(string jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TimeSpan_TryParse")]
  #else
  [DllImport("Noesis", EntryPoint="TimeSpan_TryParse")]
  #endif
  public static extern bool TimeSpan_TryParse(string jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TimeSpan_ToStr")]
  #else
  [DllImport("Noesis", EntryPoint="TimeSpan_ToStr")]
  #endif
  public static extern IntPtr TimeSpan_ToStr(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TimeSpan_Zero")]
  #else
  [DllImport("Noesis", EntryPoint="TimeSpan_Zero")]
  #endif
  public static extern IntPtr TimeSpan_Zero();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TimeSpan_GetDays")]
  #else
  [DllImport("Noesis", EntryPoint="TimeSpan_GetDays")]
  #endif
  public static extern int TimeSpan_GetDays(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TimeSpan_GetHours")]
  #else
  [DllImport("Noesis", EntryPoint="TimeSpan_GetHours")]
  #endif
  public static extern int TimeSpan_GetHours(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TimeSpan_GetMinutes")]
  #else
  [DllImport("Noesis", EntryPoint="TimeSpan_GetMinutes")]
  #endif
  public static extern int TimeSpan_GetMinutes(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TimeSpan_GetSeconds")]
  #else
  [DllImport("Noesis", EntryPoint="TimeSpan_GetSeconds")]
  #endif
  public static extern int TimeSpan_GetSeconds(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TimeSpan_GetMilliseconds")]
  #else
  [DllImport("Noesis", EntryPoint="TimeSpan_GetMilliseconds")]
  #endif
  public static extern int TimeSpan_GetMilliseconds(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TimeSpan_GetTicks")]
  #else
  [DllImport("Noesis", EntryPoint="TimeSpan_GetTicks")]
  #endif
  public static extern long TimeSpan_GetTicks(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TimeSpan_GetTimeInSeconds")]
  #else
  [DllImport("Noesis", EntryPoint="TimeSpan_GetTimeInSeconds")]
  #endif
  public static extern double TimeSpan_GetTimeInSeconds(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TimeSpan")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TimeSpan")]
  #endif
  public static extern void delete_TimeSpan(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_VisualState")]
  #else
  [DllImport("Noesis", EntryPoint="new_VisualState")]
  #endif
  public static extern IntPtr new_VisualState();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualState_GetName")]
  #else
  [DllImport("Noesis", EntryPoint="VisualState_GetName")]
  #endif
  public static extern IntPtr VisualState_GetName(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualState_SetName")]
  #else
  [DllImport("Noesis", EntryPoint="VisualState_SetName")]
  #endif
  public static extern void VisualState_SetName(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualState_GetStoryboard")]
  #else
  [DllImport("Noesis", EntryPoint="VisualState_GetStoryboard")]
  #endif
  public static extern IntPtr VisualState_GetStoryboard(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualState_SetStoryboard")]
  #else
  [DllImport("Noesis", EntryPoint="VisualState_SetStoryboard")]
  #endif
  public static extern void VisualState_SetStoryboard(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_VisualState")]
  #else
  [DllImport("Noesis", EntryPoint="delete_VisualState")]
  #endif
  public static extern void delete_VisualState(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_VisualStateGroup")]
  #else
  [DllImport("Noesis", EntryPoint="new_VisualStateGroup")]
  #endif
  public static extern IntPtr new_VisualStateGroup();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_VisualStateGroup")]
  #else
  [DllImport("Noesis", EntryPoint="delete_VisualStateGroup")]
  #endif
  public static extern void delete_VisualStateGroup(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualStateGroup_GetName")]
  #else
  [DllImport("Noesis", EntryPoint="VisualStateGroup_GetName")]
  #endif
  public static extern string VisualStateGroup_GetName(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualStateGroup_GetStates")]
  #else
  [DllImport("Noesis", EntryPoint="VisualStateGroup_GetStates")]
  #endif
  public static extern IntPtr VisualStateGroup_GetStates(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualStateGroup_GetTransitions")]
  #else
  [DllImport("Noesis", EntryPoint="VisualStateGroup_GetTransitions")]
  #endif
  public static extern IntPtr VisualStateGroup_GetTransitions(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualStateGroup_GetCurrentState")]
  #else
  [DllImport("Noesis", EntryPoint="VisualStateGroup_GetCurrentState")]
  #endif
  public static extern IntPtr VisualStateGroup_GetCurrentState(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualStateGroup_SetCurrentState")]
  #else
  [DllImport("Noesis", EntryPoint="VisualStateGroup_SetCurrentState")]
  #endif
  public static extern void VisualStateGroup_SetCurrentState(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualStateGroup_FindState")]
  #else
  [DllImport("Noesis", EntryPoint="VisualStateGroup_FindState")]
  #endif
  public static extern IntPtr VisualStateGroup_FindState(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualStateGroup_FindTransition")]
  #else
  [DllImport("Noesis", EntryPoint="VisualStateGroup_FindTransition")]
  #endif
  public static extern IntPtr VisualStateGroup_FindTransition(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualStateGroup_UpdateAnimations__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="VisualStateGroup_UpdateAnimations__SWIG_0")]
  #endif
  public static extern void VisualStateGroup_UpdateAnimations__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualStateGroup_UpdateAnimations__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="VisualStateGroup_UpdateAnimations__SWIG_1")]
  #endif
  public static extern void VisualStateGroup_UpdateAnimations__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualStateGroup_CreateTransitionStoryboard")]
  #else
  [DllImport("Noesis", EntryPoint="VisualStateGroup_CreateTransitionStoryboard")]
  #endif
  public static extern IntPtr VisualStateGroup_CreateTransitionStoryboard(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_VisualStateManager")]
  #else
  [DllImport("Noesis", EntryPoint="new_VisualStateManager")]
  #endif
  public static extern IntPtr new_VisualStateManager();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_VisualStateManager")]
  #else
  [DllImport("Noesis", EntryPoint="delete_VisualStateManager")]
  #endif
  public static extern void delete_VisualStateManager(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualStateManager_GetCustomVisualStateManager")]
  #else
  [DllImport("Noesis", EntryPoint="VisualStateManager_GetCustomVisualStateManager")]
  #endif
  public static extern IntPtr VisualStateManager_GetCustomVisualStateManager(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualStateManager_SetCustomVisualStateManager")]
  #else
  [DllImport("Noesis", EntryPoint="VisualStateManager_SetCustomVisualStateManager")]
  #endif
  public static extern void VisualStateManager_SetCustomVisualStateManager(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualStateManager_GetVisualStateGroups")]
  #else
  [DllImport("Noesis", EntryPoint="VisualStateManager_GetVisualStateGroups")]
  #endif
  public static extern IntPtr VisualStateManager_GetVisualStateGroups(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualStateManager_SetVisualStateGroups")]
  #else
  [DllImport("Noesis", EntryPoint="VisualStateManager_SetVisualStateGroups")]
  #endif
  public static extern void VisualStateManager_SetVisualStateGroups(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualStateManager_GoToState")]
  #else
  [DllImport("Noesis", EntryPoint="VisualStateManager_GoToState")]
  #endif
  public static extern bool VisualStateManager_GoToState(HandleRef jarg1, IntPtr jarg2, bool jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualStateManager_GoToElementState")]
  #else
  [DllImport("Noesis", EntryPoint="VisualStateManager_GoToElementState")]
  #endif
  public static extern bool VisualStateManager_GoToElementState(HandleRef jarg1, IntPtr jarg2, bool jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualStateManager_CustomVisualStateManagerProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="VisualStateManager_CustomVisualStateManagerProperty_set")]
  #endif
  public static extern void VisualStateManager_CustomVisualStateManagerProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualStateManager_CustomVisualStateManagerProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="VisualStateManager_CustomVisualStateManagerProperty_get")]
  #endif
  public static extern IntPtr VisualStateManager_CustomVisualStateManagerProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualStateManager_VisualStateGroupsProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="VisualStateManager_VisualStateGroupsProperty_set")]
  #endif
  public static extern void VisualStateManager_VisualStateGroupsProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualStateManager_VisualStateGroupsProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="VisualStateManager_VisualStateGroupsProperty_get")]
  #endif
  public static extern IntPtr VisualStateManager_VisualStateGroupsProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_VisualTransition")]
  #else
  [DllImport("Noesis", EntryPoint="new_VisualTransition")]
  #endif
  public static extern IntPtr new_VisualTransition();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_VisualTransition")]
  #else
  [DllImport("Noesis", EntryPoint="delete_VisualTransition")]
  #endif
  public static extern void delete_VisualTransition(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualTransition_GetFrom")]
  #else
  [DllImport("Noesis", EntryPoint="VisualTransition_GetFrom")]
  #endif
  public static extern IntPtr VisualTransition_GetFrom(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualTransition_SetFrom")]
  #else
  [DllImport("Noesis", EntryPoint="VisualTransition_SetFrom")]
  #endif
  public static extern void VisualTransition_SetFrom(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualTransition_GetTo")]
  #else
  [DllImport("Noesis", EntryPoint="VisualTransition_GetTo")]
  #endif
  public static extern IntPtr VisualTransition_GetTo(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualTransition_SetTo")]
  #else
  [DllImport("Noesis", EntryPoint="VisualTransition_SetTo")]
  #endif
  public static extern void VisualTransition_SetTo(HandleRef jarg1, IntPtr jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualTransition_GetGeneratedDuration")]
  #else
  [DllImport("Noesis", EntryPoint="VisualTransition_GetGeneratedDuration")]
  #endif
  public static extern IntPtr VisualTransition_GetGeneratedDuration(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualTransition_SetGeneratedDuration")]
  #else
  [DllImport("Noesis", EntryPoint="VisualTransition_SetGeneratedDuration")]
  #endif
  public static extern void VisualTransition_SetGeneratedDuration(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualTransition_GetGeneratedEasingFunction")]
  #else
  [DllImport("Noesis", EntryPoint="VisualTransition_GetGeneratedEasingFunction")]
  #endif
  public static extern IntPtr VisualTransition_GetGeneratedEasingFunction(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualTransition_SetGeneratedEasingFunction")]
  #else
  [DllImport("Noesis", EntryPoint="VisualTransition_SetGeneratedEasingFunction")]
  #endif
  public static extern void VisualTransition_SetGeneratedEasingFunction(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualTransition_GetStoryboard")]
  #else
  [DllImport("Noesis", EntryPoint="VisualTransition_GetStoryboard")]
  #endif
  public static extern IntPtr VisualTransition_GetStoryboard(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualTransition_SetStoryboard")]
  #else
  [DllImport("Noesis", EntryPoint="VisualTransition_SetStoryboard")]
  #endif
  public static extern void VisualTransition_SetStoryboard(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualTransition_IsDefault")]
  #else
  [DllImport("Noesis", EntryPoint="VisualTransition_IsDefault")]
  #endif
  public static extern bool VisualTransition_IsDefault(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_BaseSetterCollection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_BaseSetterCollection")]
  #endif
  public static extern void delete_BaseSetterCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TriggerActionCollection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TriggerActionCollection")]
  #endif
  public static extern void delete_TriggerActionCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_GroupDescriptionCollection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_GroupDescriptionCollection")]
  #endif
  public static extern void delete_GroupDescriptionCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_SortDescriptionCollection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_SortDescriptionCollection")]
  #endif
  public static extern void delete_SortDescriptionCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_CommandBindingCollection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_CommandBindingCollection")]
  #endif
  public static extern void delete_CommandBindingCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_InputBindingCollection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_InputBindingCollection")]
  #endif
  public static extern void delete_InputBindingCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandIterator_Get")]
  #else
  [DllImport("Noesis", EntryPoint="CommandIterator_Get")]
  #endif
  public static extern IntPtr CommandIterator_Get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandIterator_Advance")]
  #else
  [DllImport("Noesis", EntryPoint="CommandIterator_Advance")]
  #endif
  public static extern void CommandIterator_Advance(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandIterator_End")]
  #else
  [DllImport("Noesis", EntryPoint="CommandIterator_End")]
  #endif
  public static extern bool CommandIterator_End(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_CommandIterator")]
  #else
  [DllImport("Noesis", EntryPoint="delete_CommandIterator")]
  #endif
  public static extern void delete_CommandIterator(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_GeometryCollection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_GeometryCollection")]
  #endif
  public static extern void delete_GeometryCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ColumnDefinitionCollection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ColumnDefinitionCollection")]
  #endif
  public static extern void delete_ColumnDefinitionCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_RowDefinitionCollection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_RowDefinitionCollection")]
  #endif
  public static extern void delete_RowDefinitionCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Transform2f__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_Transform2f__SWIG_0")]
  #endif
  public static extern IntPtr new_Transform2f__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Transform2f__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_Transform2f__SWIG_1")]
  #endif
  public static extern IntPtr new_Transform2f__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Transform2f__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_Transform2f__SWIG_2")]
  #endif
  public static extern IntPtr new_Transform2f__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Transform2f__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="new_Transform2f__SWIG_3")]
  #endif
  public static extern IntPtr new_Transform2f__SWIG_3(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Transform2f__SWIG_4")]
  #else
  [DllImport("Noesis", EntryPoint="new_Transform2f__SWIG_4")]
  #endif
  public static extern IntPtr new_Transform2f__SWIG_4(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Transform2f_GetData")]
  #else
  [DllImport("Noesis", EntryPoint="Transform2f_GetData")]
  #endif
  public static extern IntPtr Transform2f_GetData(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Transform2f_SetUpper2x2")]
  #else
  [DllImport("Noesis", EntryPoint="Transform2f_SetUpper2x2")]
  #endif
  public static extern void Transform2f_SetUpper2x2(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Transform2f_SetTranslation")]
  #else
  [DllImport("Noesis", EntryPoint="Transform2f_SetTranslation")]
  #endif
  public static extern void Transform2f_SetTranslation(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Transform2f_GetUpper2x2")]
  #else
  [DllImport("Noesis", EntryPoint="Transform2f_GetUpper2x2")]
  #endif
  public static extern IntPtr Transform2f_GetUpper2x2(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Transform2f_GetTranslation")]
  #else
  [DllImport("Noesis", EntryPoint="Transform2f_GetTranslation")]
  #endif
  public static extern IntPtr Transform2f_GetTranslation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Transform2f_Identity")]
  #else
  [DllImport("Noesis", EntryPoint="Transform2f_Identity")]
  #endif
  public static extern IntPtr Transform2f_Identity();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Transform2f_Scale")]
  #else
  [DllImport("Noesis", EntryPoint="Transform2f_Scale")]
  #endif
  public static extern IntPtr Transform2f_Scale(float jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Transform2f_Trans")]
  #else
  [DllImport("Noesis", EntryPoint="Transform2f_Trans")]
  #endif
  public static extern IntPtr Transform2f_Trans(float jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Transform2f_Rot")]
  #else
  [DllImport("Noesis", EntryPoint="Transform2f_Rot")]
  #endif
  public static extern IntPtr Transform2f_Rot(float jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Transform2f_ShearXY")]
  #else
  [DllImport("Noesis", EntryPoint="Transform2f_ShearXY")]
  #endif
  public static extern IntPtr Transform2f_ShearXY(float jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Transform2f_ShearYX")]
  #else
  [DllImport("Noesis", EntryPoint="Transform2f_ShearYX")]
  #endif
  public static extern IntPtr Transform2f_ShearYX(float jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Transform2f_Skew")]
  #else
  [DllImport("Noesis", EntryPoint="Transform2f_Skew")]
  #endif
  public static extern IntPtr Transform2f_Skew(float jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Transform2f")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Transform2f")]
  #endif
  public static extern void delete_Transform2f(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ConditionCollection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ConditionCollection")]
  #endif
  public static extern void delete_ConditionCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Matrix4f__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_Matrix4f__SWIG_0")]
  #endif
  public static extern IntPtr new_Matrix4f__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Matrix4f__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_Matrix4f__SWIG_1")]
  #endif
  public static extern IntPtr new_Matrix4f__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10, float jarg11, float jarg12, float jarg13, float jarg14, float jarg15, float jarg16);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Matrix4f__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_Matrix4f__SWIG_2")]
  #endif
  public static extern IntPtr new_Matrix4f__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Matrix4f__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="new_Matrix4f__SWIG_3")]
  #endif
  public static extern IntPtr new_Matrix4f__SWIG_3(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Matrix4f__SWIG_4")]
  #else
  [DllImport("Noesis", EntryPoint="new_Matrix4f__SWIG_4")]
  #endif
  public static extern IntPtr new_Matrix4f__SWIG_4(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Matrix4f__SWIG_5")]
  #else
  [DllImport("Noesis", EntryPoint="new_Matrix4f__SWIG_5")]
  #endif
  public static extern IntPtr new_Matrix4f__SWIG_5(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix4f_GetData")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix4f_GetData")]
  #endif
  public static extern IntPtr Matrix4f_GetData(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix4f_Identity")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix4f_Identity")]
  #endif
  public static extern IntPtr Matrix4f_Identity();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix4f_Scale")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix4f_Scale")]
  #endif
  public static extern IntPtr Matrix4f_Scale(float jarg1, float jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix4f_RotX")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix4f_RotX")]
  #endif
  public static extern IntPtr Matrix4f_RotX(float jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix4f_RotY")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix4f_RotY")]
  #endif
  public static extern IntPtr Matrix4f_RotY(float jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix4f_RotZ")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix4f_RotZ")]
  #endif
  public static extern IntPtr Matrix4f_RotZ(float jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix4f_Ortho__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix4f_Ortho__SWIG_0")]
  #endif
  public static extern IntPtr Matrix4f_Ortho__SWIG_0(float jarg1, float jarg2, float jarg3, float jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix4f_Ortho__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix4f_Ortho__SWIG_1")]
  #endif
  public static extern IntPtr Matrix4f_Ortho__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix4f_Perspective__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix4f_Perspective__SWIG_0")]
  #endif
  public static extern IntPtr Matrix4f_Perspective__SWIG_0(float jarg1, float jarg2, float jarg3, float jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix4f_PerspectiveFov")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix4f_PerspectiveFov")]
  #endif
  public static extern IntPtr Matrix4f_PerspectiveFov(float jarg1, float jarg2, float jarg3, float jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix4f_Perspective__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix4f_Perspective__SWIG_1")]
  #endif
  public static extern IntPtr Matrix4f_Perspective__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix4f_Viewport")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix4f_Viewport")]
  #endif
  public static extern IntPtr Matrix4f_Viewport(float jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Matrix4f")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Matrix4f")]
  #endif
  public static extern void delete_Matrix4f(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ResourceDictionaryCollection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ResourceDictionaryCollection")]
  #endif
  public static extern void delete_ResourceDictionaryCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_InputGestureCollection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_InputGestureCollection")]
  #endif
  public static extern void delete_InputGestureCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Vector2f_x_set")]
  #else
  [DllImport("Noesis", EntryPoint="Vector2f_x_set")]
  #endif
  public static extern void Vector2f_x_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Vector2f_x_get")]
  #else
  [DllImport("Noesis", EntryPoint="Vector2f_x_get")]
  #endif
  public static extern float Vector2f_x_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Vector2f_y_set")]
  #else
  [DllImport("Noesis", EntryPoint="Vector2f_y_set")]
  #endif
  public static extern void Vector2f_y_set(HandleRef jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Vector2f_y_get")]
  #else
  [DllImport("Noesis", EntryPoint="Vector2f_y_get")]
  #endif
  public static extern float Vector2f_y_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Vector2f__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_Vector2f__SWIG_0")]
  #endif
  public static extern IntPtr new_Vector2f__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Vector2f__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_Vector2f__SWIG_1")]
  #endif
  public static extern IntPtr new_Vector2f__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Vector2f__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_Vector2f__SWIG_2")]
  #endif
  public static extern IntPtr new_Vector2f__SWIG_2(float jarg1, float jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Vector2f__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="new_Vector2f__SWIG_3")]
  #endif
  public static extern IntPtr new_Vector2f__SWIG_3(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Vector2f_GetData")]
  #else
  [DllImport("Noesis", EntryPoint="Vector2f_GetData")]
  #endif
  public static extern IntPtr Vector2f_GetData(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Vector2f_Zero")]
  #else
  [DllImport("Noesis", EntryPoint="Vector2f_Zero")]
  #endif
  public static extern IntPtr Vector2f_Zero();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Vector2f_XAxis")]
  #else
  [DllImport("Noesis", EntryPoint="Vector2f_XAxis")]
  #endif
  public static extern IntPtr Vector2f_XAxis();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Vector2f_YAxis")]
  #else
  [DllImport("Noesis", EntryPoint="Vector2f_YAxis")]
  #endif
  public static extern IntPtr Vector2f_YAxis();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Vector2f")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Vector2f")]
  #endif
  public static extern void delete_Vector2f(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TransformCollection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TransformCollection")]
  #endif
  public static extern void delete_TransformCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EventIterator_Get")]
  #else
  [DllImport("Noesis", EntryPoint="EventIterator_Get")]
  #endif
  public static extern IntPtr EventIterator_Get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EventIterator_Advance")]
  #else
  [DllImport("Noesis", EntryPoint="EventIterator_Advance")]
  #endif
  public static extern void EventIterator_Advance(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EventIterator_End")]
  #else
  [DllImport("Noesis", EntryPoint="EventIterator_End")]
  #endif
  public static extern bool EventIterator_End(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_EventIterator")]
  #else
  [DllImport("Noesis", EntryPoint="delete_EventIterator")]
  #endif
  public static extern void delete_EventIterator(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Vector2i_x_set")]
  #else
  [DllImport("Noesis", EntryPoint="Vector2i_x_set")]
  #endif
  public static extern void Vector2i_x_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Vector2i_x_get")]
  #else
  [DllImport("Noesis", EntryPoint="Vector2i_x_get")]
  #endif
  public static extern int Vector2i_x_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Vector2i_y_set")]
  #else
  [DllImport("Noesis", EntryPoint="Vector2i_y_set")]
  #endif
  public static extern void Vector2i_y_set(HandleRef jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Vector2i_y_get")]
  #else
  [DllImport("Noesis", EntryPoint="Vector2i_y_get")]
  #endif
  public static extern int Vector2i_y_get(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Vector2i__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_Vector2i__SWIG_0")]
  #endif
  public static extern IntPtr new_Vector2i__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Vector2i__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_Vector2i__SWIG_1")]
  #endif
  public static extern IntPtr new_Vector2i__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Vector2i__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_Vector2i__SWIG_2")]
  #endif
  public static extern IntPtr new_Vector2i__SWIG_2(int jarg1, int jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Vector2i__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="new_Vector2i__SWIG_3")]
  #endif
  public static extern IntPtr new_Vector2i__SWIG_3(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Vector2i_GetData")]
  #else
  [DllImport("Noesis", EntryPoint="Vector2i_GetData")]
  #endif
  public static extern IntPtr Vector2i_GetData(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Vector2i_Zero")]
  #else
  [DllImport("Noesis", EntryPoint="Vector2i_Zero")]
  #endif
  public static extern IntPtr Vector2i_Zero();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Vector2i_XAxis")]
  #else
  [DllImport("Noesis", EntryPoint="Vector2i_XAxis")]
  #endif
  public static extern IntPtr Vector2i_XAxis();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Vector2i_YAxis")]
  #else
  [DllImport("Noesis", EntryPoint="Vector2i_YAxis")]
  #endif
  public static extern IntPtr Vector2i_YAxis();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Vector2i")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Vector2i")]
  #endif
  public static extern void delete_Vector2i(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Matrix3f__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_Matrix3f__SWIG_0")]
  #endif
  public static extern IntPtr new_Matrix3f__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Matrix3f__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_Matrix3f__SWIG_1")]
  #endif
  public static extern IntPtr new_Matrix3f__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Matrix3f__SWIG_2")]
  #else
  [DllImport("Noesis", EntryPoint="new_Matrix3f__SWIG_2")]
  #endif
  public static extern IntPtr new_Matrix3f__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Matrix3f__SWIG_3")]
  #else
  [DllImport("Noesis", EntryPoint="new_Matrix3f__SWIG_3")]
  #endif
  public static extern IntPtr new_Matrix3f__SWIG_3(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Matrix3f__SWIG_4")]
  #else
  [DllImport("Noesis", EntryPoint="new_Matrix3f__SWIG_4")]
  #endif
  public static extern IntPtr new_Matrix3f__SWIG_4(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Matrix3f__SWIG_5")]
  #else
  [DllImport("Noesis", EntryPoint="new_Matrix3f__SWIG_5")]
  #endif
  public static extern IntPtr new_Matrix3f__SWIG_5(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix3f_GetData")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix3f_GetData")]
  #endif
  public static extern IntPtr Matrix3f_GetData(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix3f_Identity")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix3f_Identity")]
  #endif
  public static extern IntPtr Matrix3f_Identity();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix3f_Scale")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix3f_Scale")]
  #endif
  public static extern IntPtr Matrix3f_Scale(float jarg1, float jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix3f_RotX")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix3f_RotX")]
  #endif
  public static extern IntPtr Matrix3f_RotX(float jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix3f_RotY")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix3f_RotY")]
  #endif
  public static extern IntPtr Matrix3f_RotY(float jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix3f_RotZ")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix3f_RotZ")]
  #endif
  public static extern IntPtr Matrix3f_RotZ(float jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix3f_EulerZXY")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix3f_EulerZXY")]
  #endif
  public static extern IntPtr Matrix3f_EulerZXY(float jarg1, float jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Matrix3f")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Matrix3f")]
  #endif
  public static extern void delete_Matrix3f(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_NullableBool__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_NullableBool__SWIG_0")]
  #endif
  public static extern IntPtr new_NullableBool__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_NullableBool__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_NullableBool__SWIG_1")]
  #endif
  public static extern IntPtr new_NullableBool__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NullableBool_GetValue")]
  #else
  [DllImport("Noesis", EntryPoint="NullableBool_GetValue")]
  #endif
  public static extern IntPtr NullableBool_GetValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_NullableBool")]
  #else
  [DllImport("Noesis", EntryPoint="delete_NullableBool")]
  #endif
  public static extern void delete_NullableBool(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_NullableFloat__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_NullableFloat__SWIG_0")]
  #endif
  public static extern IntPtr new_NullableFloat__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_NullableFloat__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_NullableFloat__SWIG_1")]
  #endif
  public static extern IntPtr new_NullableFloat__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NullableFloat_GetValue")]
  #else
  [DllImport("Noesis", EntryPoint="NullableFloat_GetValue")]
  #endif
  public static extern IntPtr NullableFloat_GetValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_NullableFloat")]
  #else
  [DllImport("Noesis", EntryPoint="delete_NullableFloat")]
  #endif
  public static extern void delete_NullableFloat(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_NullableInt16__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_NullableInt16__SWIG_0")]
  #endif
  public static extern IntPtr new_NullableInt16__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_NullableInt16__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_NullableInt16__SWIG_1")]
  #endif
  public static extern IntPtr new_NullableInt16__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NullableInt16_GetValue")]
  #else
  [DllImport("Noesis", EntryPoint="NullableInt16_GetValue")]
  #endif
  public static extern IntPtr NullableInt16_GetValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_NullableInt16")]
  #else
  [DllImport("Noesis", EntryPoint="delete_NullableInt16")]
  #endif
  public static extern void delete_NullableInt16(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_NullableInt32__SWIG_0")]
  #else
  [DllImport("Noesis", EntryPoint="new_NullableInt32__SWIG_0")]
  #endif
  public static extern IntPtr new_NullableInt32__SWIG_0();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_NullableInt32__SWIG_1")]
  #else
  [DllImport("Noesis", EntryPoint="new_NullableInt32__SWIG_1")]
  #endif
  public static extern IntPtr new_NullableInt32__SWIG_1(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NullableInt32_GetValue")]
  #else
  [DllImport("Noesis", EntryPoint="NullableInt32_GetValue")]
  #endif
  public static extern IntPtr NullableInt32_GetValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_NullableInt32")]
  #else
  [DllImport("Noesis", EntryPoint="delete_NullableInt32")]
  #endif
  public static extern void delete_NullableInt32(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DoubleAnimation")]
  #else
  [DllImport("Noesis", EntryPoint="new_DoubleAnimation")]
  #endif
  public static extern IntPtr new_DoubleAnimation();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DoubleAnimation")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DoubleAnimation")]
  #endif
  public static extern void delete_DoubleAnimation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleAnimation_GetBy")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleAnimation_GetBy")]
  #endif
  public static extern IntPtr DoubleAnimation_GetBy(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleAnimation_SetBy")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleAnimation_SetBy")]
  #endif
  public static extern void DoubleAnimation_SetBy(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleAnimation_GetFrom")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleAnimation_GetFrom")]
  #endif
  public static extern IntPtr DoubleAnimation_GetFrom(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleAnimation_SetFrom")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleAnimation_SetFrom")]
  #endif
  public static extern void DoubleAnimation_SetFrom(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleAnimation_GetTo")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleAnimation_GetTo")]
  #endif
  public static extern IntPtr DoubleAnimation_GetTo(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleAnimation_SetTo")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleAnimation_SetTo")]
  #endif
  public static extern void DoubleAnimation_SetTo(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleAnimation_ByProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleAnimation_ByProperty_set")]
  #endif
  public static extern void DoubleAnimation_ByProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleAnimation_ByProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleAnimation_ByProperty_get")]
  #endif
  public static extern IntPtr DoubleAnimation_ByProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleAnimation_FromProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleAnimation_FromProperty_set")]
  #endif
  public static extern void DoubleAnimation_FromProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleAnimation_FromProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleAnimation_FromProperty_get")]
  #endif
  public static extern IntPtr DoubleAnimation_FromProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleAnimation_ToProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleAnimation_ToProperty_set")]
  #endif
  public static extern void DoubleAnimation_ToProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleAnimation_ToProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleAnimation_ToProperty_get")]
  #endif
  public static extern IntPtr DoubleAnimation_ToProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Int16Animation")]
  #else
  [DllImport("Noesis", EntryPoint="new_Int16Animation")]
  #endif
  public static extern IntPtr new_Int16Animation();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Int16Animation")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Int16Animation")]
  #endif
  public static extern void delete_Int16Animation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16Animation_GetBy")]
  #else
  [DllImport("Noesis", EntryPoint="Int16Animation_GetBy")]
  #endif
  public static extern IntPtr Int16Animation_GetBy(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16Animation_SetBy")]
  #else
  [DllImport("Noesis", EntryPoint="Int16Animation_SetBy")]
  #endif
  public static extern void Int16Animation_SetBy(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16Animation_GetFrom")]
  #else
  [DllImport("Noesis", EntryPoint="Int16Animation_GetFrom")]
  #endif
  public static extern IntPtr Int16Animation_GetFrom(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16Animation_SetFrom")]
  #else
  [DllImport("Noesis", EntryPoint="Int16Animation_SetFrom")]
  #endif
  public static extern void Int16Animation_SetFrom(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16Animation_GetTo")]
  #else
  [DllImport("Noesis", EntryPoint="Int16Animation_GetTo")]
  #endif
  public static extern IntPtr Int16Animation_GetTo(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16Animation_SetTo")]
  #else
  [DllImport("Noesis", EntryPoint="Int16Animation_SetTo")]
  #endif
  public static extern void Int16Animation_SetTo(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16Animation_ByProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Int16Animation_ByProperty_set")]
  #endif
  public static extern void Int16Animation_ByProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16Animation_ByProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Int16Animation_ByProperty_get")]
  #endif
  public static extern IntPtr Int16Animation_ByProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16Animation_FromProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Int16Animation_FromProperty_set")]
  #endif
  public static extern void Int16Animation_FromProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16Animation_FromProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Int16Animation_FromProperty_get")]
  #endif
  public static extern IntPtr Int16Animation_FromProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16Animation_ToProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Int16Animation_ToProperty_set")]
  #endif
  public static extern void Int16Animation_ToProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16Animation_ToProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Int16Animation_ToProperty_get")]
  #endif
  public static extern IntPtr Int16Animation_ToProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Int32Animation")]
  #else
  [DllImport("Noesis", EntryPoint="new_Int32Animation")]
  #endif
  public static extern IntPtr new_Int32Animation();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Int32Animation")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Int32Animation")]
  #endif
  public static extern void delete_Int32Animation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32Animation_GetBy")]
  #else
  [DllImport("Noesis", EntryPoint="Int32Animation_GetBy")]
  #endif
  public static extern IntPtr Int32Animation_GetBy(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32Animation_SetBy")]
  #else
  [DllImport("Noesis", EntryPoint="Int32Animation_SetBy")]
  #endif
  public static extern void Int32Animation_SetBy(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32Animation_GetFrom")]
  #else
  [DllImport("Noesis", EntryPoint="Int32Animation_GetFrom")]
  #endif
  public static extern IntPtr Int32Animation_GetFrom(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32Animation_SetFrom")]
  #else
  [DllImport("Noesis", EntryPoint="Int32Animation_SetFrom")]
  #endif
  public static extern void Int32Animation_SetFrom(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32Animation_GetTo")]
  #else
  [DllImport("Noesis", EntryPoint="Int32Animation_GetTo")]
  #endif
  public static extern IntPtr Int32Animation_GetTo(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32Animation_SetTo")]
  #else
  [DllImport("Noesis", EntryPoint="Int32Animation_SetTo")]
  #endif
  public static extern void Int32Animation_SetTo(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32Animation_ByProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Int32Animation_ByProperty_set")]
  #endif
  public static extern void Int32Animation_ByProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32Animation_ByProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Int32Animation_ByProperty_get")]
  #endif
  public static extern IntPtr Int32Animation_ByProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32Animation_FromProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Int32Animation_FromProperty_set")]
  #endif
  public static extern void Int32Animation_FromProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32Animation_FromProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Int32Animation_FromProperty_get")]
  #endif
  public static extern IntPtr Int32Animation_FromProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32Animation_ToProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Int32Animation_ToProperty_set")]
  #endif
  public static extern void Int32Animation_ToProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32Animation_ToProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Int32Animation_ToProperty_get")]
  #endif
  public static extern IntPtr Int32Animation_ToProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_Int64Animation")]
  #else
  [DllImport("Noesis", EntryPoint="new_Int64Animation")]
  #endif
  public static extern IntPtr new_Int64Animation();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Int64Animation")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Int64Animation")]
  #endif
  public static extern void delete_Int64Animation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int64Animation_GetBy")]
  #else
  [DllImport("Noesis", EntryPoint="Int64Animation_GetBy")]
  #endif
  public static extern IntPtr Int64Animation_GetBy(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int64Animation_SetBy")]
  #else
  [DllImport("Noesis", EntryPoint="Int64Animation_SetBy")]
  #endif
  public static extern void Int64Animation_SetBy(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int64Animation_GetFrom")]
  #else
  [DllImport("Noesis", EntryPoint="Int64Animation_GetFrom")]
  #endif
  public static extern IntPtr Int64Animation_GetFrom(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int64Animation_SetFrom")]
  #else
  [DllImport("Noesis", EntryPoint="Int64Animation_SetFrom")]
  #endif
  public static extern void Int64Animation_SetFrom(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int64Animation_GetTo")]
  #else
  [DllImport("Noesis", EntryPoint="Int64Animation_GetTo")]
  #endif
  public static extern IntPtr Int64Animation_GetTo(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int64Animation_SetTo")]
  #else
  [DllImport("Noesis", EntryPoint="Int64Animation_SetTo")]
  #endif
  public static extern void Int64Animation_SetTo(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int64Animation_ByProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Int64Animation_ByProperty_set")]
  #endif
  public static extern void Int64Animation_ByProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int64Animation_ByProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Int64Animation_ByProperty_get")]
  #endif
  public static extern IntPtr Int64Animation_ByProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int64Animation_FromProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Int64Animation_FromProperty_set")]
  #endif
  public static extern void Int64Animation_FromProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int64Animation_FromProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Int64Animation_FromProperty_get")]
  #endif
  public static extern IntPtr Int64Animation_FromProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int64Animation_ToProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Int64Animation_ToProperty_set")]
  #endif
  public static extern void Int64Animation_ToProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int64Animation_ToProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Int64Animation_ToProperty_get")]
  #endif
  public static extern IntPtr Int64Animation_ToProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ColorAnimation")]
  #else
  [DllImport("Noesis", EntryPoint="new_ColorAnimation")]
  #endif
  public static extern IntPtr new_ColorAnimation();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ColorAnimation")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ColorAnimation")]
  #endif
  public static extern void delete_ColorAnimation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorAnimation_GetBy")]
  #else
  [DllImport("Noesis", EntryPoint="ColorAnimation_GetBy")]
  #endif
  public static extern IntPtr ColorAnimation_GetBy(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorAnimation_SetBy")]
  #else
  [DllImport("Noesis", EntryPoint="ColorAnimation_SetBy")]
  #endif
  public static extern void ColorAnimation_SetBy(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorAnimation_GetFrom")]
  #else
  [DllImport("Noesis", EntryPoint="ColorAnimation_GetFrom")]
  #endif
  public static extern IntPtr ColorAnimation_GetFrom(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorAnimation_SetFrom")]
  #else
  [DllImport("Noesis", EntryPoint="ColorAnimation_SetFrom")]
  #endif
  public static extern void ColorAnimation_SetFrom(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorAnimation_GetTo")]
  #else
  [DllImport("Noesis", EntryPoint="ColorAnimation_GetTo")]
  #endif
  public static extern IntPtr ColorAnimation_GetTo(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorAnimation_SetTo")]
  #else
  [DllImport("Noesis", EntryPoint="ColorAnimation_SetTo")]
  #endif
  public static extern void ColorAnimation_SetTo(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorAnimation_ByProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ColorAnimation_ByProperty_set")]
  #endif
  public static extern void ColorAnimation_ByProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorAnimation_ByProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ColorAnimation_ByProperty_get")]
  #endif
  public static extern IntPtr ColorAnimation_ByProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorAnimation_FromProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ColorAnimation_FromProperty_set")]
  #endif
  public static extern void ColorAnimation_FromProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorAnimation_FromProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ColorAnimation_FromProperty_get")]
  #endif
  public static extern IntPtr ColorAnimation_FromProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorAnimation_ToProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ColorAnimation_ToProperty_set")]
  #endif
  public static extern void ColorAnimation_ToProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorAnimation_ToProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ColorAnimation_ToProperty_get")]
  #endif
  public static extern IntPtr ColorAnimation_ToProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_PointAnimation")]
  #else
  [DllImport("Noesis", EntryPoint="new_PointAnimation")]
  #endif
  public static extern IntPtr new_PointAnimation();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_PointAnimation")]
  #else
  [DllImport("Noesis", EntryPoint="delete_PointAnimation")]
  #endif
  public static extern void delete_PointAnimation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointAnimation_GetBy")]
  #else
  [DllImport("Noesis", EntryPoint="PointAnimation_GetBy")]
  #endif
  public static extern IntPtr PointAnimation_GetBy(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointAnimation_SetBy")]
  #else
  [DllImport("Noesis", EntryPoint="PointAnimation_SetBy")]
  #endif
  public static extern void PointAnimation_SetBy(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointAnimation_GetFrom")]
  #else
  [DllImport("Noesis", EntryPoint="PointAnimation_GetFrom")]
  #endif
  public static extern IntPtr PointAnimation_GetFrom(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointAnimation_SetFrom")]
  #else
  [DllImport("Noesis", EntryPoint="PointAnimation_SetFrom")]
  #endif
  public static extern void PointAnimation_SetFrom(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointAnimation_GetTo")]
  #else
  [DllImport("Noesis", EntryPoint="PointAnimation_GetTo")]
  #endif
  public static extern IntPtr PointAnimation_GetTo(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointAnimation_SetTo")]
  #else
  [DllImport("Noesis", EntryPoint="PointAnimation_SetTo")]
  #endif
  public static extern void PointAnimation_SetTo(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointAnimation_ByProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="PointAnimation_ByProperty_set")]
  #endif
  public static extern void PointAnimation_ByProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointAnimation_ByProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="PointAnimation_ByProperty_get")]
  #endif
  public static extern IntPtr PointAnimation_ByProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointAnimation_FromProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="PointAnimation_FromProperty_set")]
  #endif
  public static extern void PointAnimation_FromProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointAnimation_FromProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="PointAnimation_FromProperty_get")]
  #endif
  public static extern IntPtr PointAnimation_FromProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointAnimation_ToProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="PointAnimation_ToProperty_set")]
  #endif
  public static extern void PointAnimation_ToProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointAnimation_ToProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="PointAnimation_ToProperty_get")]
  #endif
  public static extern IntPtr PointAnimation_ToProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_RectAnimation")]
  #else
  [DllImport("Noesis", EntryPoint="new_RectAnimation")]
  #endif
  public static extern IntPtr new_RectAnimation();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_RectAnimation")]
  #else
  [DllImport("Noesis", EntryPoint="delete_RectAnimation")]
  #endif
  public static extern void delete_RectAnimation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectAnimation_GetBy")]
  #else
  [DllImport("Noesis", EntryPoint="RectAnimation_GetBy")]
  #endif
  public static extern IntPtr RectAnimation_GetBy(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectAnimation_SetBy")]
  #else
  [DllImport("Noesis", EntryPoint="RectAnimation_SetBy")]
  #endif
  public static extern void RectAnimation_SetBy(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectAnimation_GetFrom")]
  #else
  [DllImport("Noesis", EntryPoint="RectAnimation_GetFrom")]
  #endif
  public static extern IntPtr RectAnimation_GetFrom(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectAnimation_SetFrom")]
  #else
  [DllImport("Noesis", EntryPoint="RectAnimation_SetFrom")]
  #endif
  public static extern void RectAnimation_SetFrom(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectAnimation_GetTo")]
  #else
  [DllImport("Noesis", EntryPoint="RectAnimation_GetTo")]
  #endif
  public static extern IntPtr RectAnimation_GetTo(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectAnimation_SetTo")]
  #else
  [DllImport("Noesis", EntryPoint="RectAnimation_SetTo")]
  #endif
  public static extern void RectAnimation_SetTo(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectAnimation_ByProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RectAnimation_ByProperty_set")]
  #endif
  public static extern void RectAnimation_ByProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectAnimation_ByProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RectAnimation_ByProperty_get")]
  #endif
  public static extern IntPtr RectAnimation_ByProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectAnimation_FromProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RectAnimation_FromProperty_set")]
  #endif
  public static extern void RectAnimation_FromProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectAnimation_FromProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RectAnimation_FromProperty_get")]
  #endif
  public static extern IntPtr RectAnimation_FromProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectAnimation_ToProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RectAnimation_ToProperty_set")]
  #endif
  public static extern void RectAnimation_ToProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectAnimation_ToProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RectAnimation_ToProperty_get")]
  #endif
  public static extern IntPtr RectAnimation_ToProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_SizeAnimation")]
  #else
  [DllImport("Noesis", EntryPoint="new_SizeAnimation")]
  #endif
  public static extern IntPtr new_SizeAnimation();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_SizeAnimation")]
  #else
  [DllImport("Noesis", EntryPoint="delete_SizeAnimation")]
  #endif
  public static extern void delete_SizeAnimation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeAnimation_GetBy")]
  #else
  [DllImport("Noesis", EntryPoint="SizeAnimation_GetBy")]
  #endif
  public static extern IntPtr SizeAnimation_GetBy(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeAnimation_SetBy")]
  #else
  [DllImport("Noesis", EntryPoint="SizeAnimation_SetBy")]
  #endif
  public static extern void SizeAnimation_SetBy(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeAnimation_GetFrom")]
  #else
  [DllImport("Noesis", EntryPoint="SizeAnimation_GetFrom")]
  #endif
  public static extern IntPtr SizeAnimation_GetFrom(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeAnimation_SetFrom")]
  #else
  [DllImport("Noesis", EntryPoint="SizeAnimation_SetFrom")]
  #endif
  public static extern void SizeAnimation_SetFrom(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeAnimation_GetTo")]
  #else
  [DllImport("Noesis", EntryPoint="SizeAnimation_GetTo")]
  #endif
  public static extern IntPtr SizeAnimation_GetTo(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeAnimation_SetTo")]
  #else
  [DllImport("Noesis", EntryPoint="SizeAnimation_SetTo")]
  #endif
  public static extern void SizeAnimation_SetTo(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeAnimation_ByProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="SizeAnimation_ByProperty_set")]
  #endif
  public static extern void SizeAnimation_ByProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeAnimation_ByProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="SizeAnimation_ByProperty_get")]
  #endif
  public static extern IntPtr SizeAnimation_ByProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeAnimation_FromProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="SizeAnimation_FromProperty_set")]
  #endif
  public static extern void SizeAnimation_FromProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeAnimation_FromProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="SizeAnimation_FromProperty_get")]
  #endif
  public static extern IntPtr SizeAnimation_FromProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeAnimation_ToProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="SizeAnimation_ToProperty_set")]
  #endif
  public static extern void SizeAnimation_ToProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeAnimation_ToProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="SizeAnimation_ToProperty_get")]
  #endif
  public static extern IntPtr SizeAnimation_ToProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_ThicknessAnimation")]
  #else
  [DllImport("Noesis", EntryPoint="new_ThicknessAnimation")]
  #endif
  public static extern IntPtr new_ThicknessAnimation();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ThicknessAnimation")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ThicknessAnimation")]
  #endif
  public static extern void delete_ThicknessAnimation(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessAnimation_GetBy")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessAnimation_GetBy")]
  #endif
  public static extern IntPtr ThicknessAnimation_GetBy(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessAnimation_SetBy")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessAnimation_SetBy")]
  #endif
  public static extern void ThicknessAnimation_SetBy(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessAnimation_GetFrom")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessAnimation_GetFrom")]
  #endif
  public static extern IntPtr ThicknessAnimation_GetFrom(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessAnimation_SetFrom")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessAnimation_SetFrom")]
  #endif
  public static extern void ThicknessAnimation_SetFrom(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessAnimation_GetTo")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessAnimation_GetTo")]
  #endif
  public static extern IntPtr ThicknessAnimation_GetTo(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessAnimation_SetTo")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessAnimation_SetTo")]
  #endif
  public static extern void ThicknessAnimation_SetTo(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessAnimation_ByProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessAnimation_ByProperty_set")]
  #endif
  public static extern void ThicknessAnimation_ByProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessAnimation_ByProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessAnimation_ByProperty_get")]
  #endif
  public static extern IntPtr ThicknessAnimation_ByProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessAnimation_FromProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessAnimation_FromProperty_set")]
  #endif
  public static extern void ThicknessAnimation_FromProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessAnimation_FromProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessAnimation_FromProperty_get")]
  #endif
  public static extern IntPtr ThicknessAnimation_FromProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessAnimation_ToProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessAnimation_ToProperty_set")]
  #endif
  public static extern void ThicknessAnimation_ToProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessAnimation_ToProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessAnimation_ToProperty_get")]
  #endif
  public static extern IntPtr ThicknessAnimation_ToProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_BooleanKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_BooleanKeyFrame")]
  #endif
  public static extern void delete_BooleanKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BooleanKeyFrame_GetKeyTime")]
  #else
  [DllImport("Noesis", EntryPoint="BooleanKeyFrame_GetKeyTime")]
  #endif
  public static extern IntPtr BooleanKeyFrame_GetKeyTime(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BooleanKeyFrame_SetKeyTime")]
  #else
  [DllImport("Noesis", EntryPoint="BooleanKeyFrame_SetKeyTime")]
  #endif
  public static extern void BooleanKeyFrame_SetKeyTime(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BooleanKeyFrame_GetValue")]
  #else
  [DllImport("Noesis", EntryPoint="BooleanKeyFrame_GetValue")]
  #endif
  public static extern IntPtr BooleanKeyFrame_GetValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BooleanKeyFrame_SetValue")]
  #else
  [DllImport("Noesis", EntryPoint="BooleanKeyFrame_SetValue")]
  #endif
  public static extern void BooleanKeyFrame_SetValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BooleanKeyFrame_InterpolateValue")]
  #else
  [DllImport("Noesis", EntryPoint="BooleanKeyFrame_InterpolateValue")]
  #endif
  public static extern IntPtr BooleanKeyFrame_InterpolateValue(HandleRef jarg1, HandleRef jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BooleanKeyFrame_BoxValue")]
  #else
  [DllImport("Noesis", EntryPoint="BooleanKeyFrame_BoxValue")]
  #endif
  public static extern IntPtr BooleanKeyFrame_BoxValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BooleanKeyFrame_UnboxValue")]
  #else
  [DllImport("Noesis", EntryPoint="BooleanKeyFrame_UnboxValue")]
  #endif
  public static extern bool BooleanKeyFrame_UnboxValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BooleanKeyFrame_Len")]
  #else
  [DllImport("Noesis", EntryPoint="BooleanKeyFrame_Len")]
  #endif
  public static extern float BooleanKeyFrame_Len(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BooleanKeyFrame_KeyTimeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BooleanKeyFrame_KeyTimeProperty_set")]
  #endif
  public static extern void BooleanKeyFrame_KeyTimeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BooleanKeyFrame_KeyTimeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BooleanKeyFrame_KeyTimeProperty_get")]
  #endif
  public static extern IntPtr BooleanKeyFrame_KeyTimeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BooleanKeyFrame_ValueProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="BooleanKeyFrame_ValueProperty_set")]
  #endif
  public static extern void BooleanKeyFrame_ValueProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BooleanKeyFrame_ValueProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="BooleanKeyFrame_ValueProperty_get")]
  #endif
  public static extern IntPtr BooleanKeyFrame_ValueProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DoubleKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DoubleKeyFrame")]
  #endif
  public static extern void delete_DoubleKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleKeyFrame_GetKeyTime")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleKeyFrame_GetKeyTime")]
  #endif
  public static extern IntPtr DoubleKeyFrame_GetKeyTime(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleKeyFrame_SetKeyTime")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleKeyFrame_SetKeyTime")]
  #endif
  public static extern void DoubleKeyFrame_SetKeyTime(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleKeyFrame_GetValue")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleKeyFrame_GetValue")]
  #endif
  public static extern IntPtr DoubleKeyFrame_GetValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleKeyFrame_SetValue")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleKeyFrame_SetValue")]
  #endif
  public static extern void DoubleKeyFrame_SetValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleKeyFrame_InterpolateValue")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleKeyFrame_InterpolateValue")]
  #endif
  public static extern IntPtr DoubleKeyFrame_InterpolateValue(HandleRef jarg1, HandleRef jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleKeyFrame_BoxValue")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleKeyFrame_BoxValue")]
  #endif
  public static extern IntPtr DoubleKeyFrame_BoxValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleKeyFrame_UnboxValue")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleKeyFrame_UnboxValue")]
  #endif
  public static extern float DoubleKeyFrame_UnboxValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleKeyFrame_Len")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleKeyFrame_Len")]
  #endif
  public static extern float DoubleKeyFrame_Len(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleKeyFrame_KeyTimeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleKeyFrame_KeyTimeProperty_set")]
  #endif
  public static extern void DoubleKeyFrame_KeyTimeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleKeyFrame_KeyTimeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleKeyFrame_KeyTimeProperty_get")]
  #endif
  public static extern IntPtr DoubleKeyFrame_KeyTimeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleKeyFrame_ValueProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleKeyFrame_ValueProperty_set")]
  #endif
  public static extern void DoubleKeyFrame_ValueProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleKeyFrame_ValueProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleKeyFrame_ValueProperty_get")]
  #endif
  public static extern IntPtr DoubleKeyFrame_ValueProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Int16KeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Int16KeyFrame")]
  #endif
  public static extern void delete_Int16KeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16KeyFrame_GetKeyTime")]
  #else
  [DllImport("Noesis", EntryPoint="Int16KeyFrame_GetKeyTime")]
  #endif
  public static extern IntPtr Int16KeyFrame_GetKeyTime(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16KeyFrame_SetKeyTime")]
  #else
  [DllImport("Noesis", EntryPoint="Int16KeyFrame_SetKeyTime")]
  #endif
  public static extern void Int16KeyFrame_SetKeyTime(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16KeyFrame_GetValue")]
  #else
  [DllImport("Noesis", EntryPoint="Int16KeyFrame_GetValue")]
  #endif
  public static extern IntPtr Int16KeyFrame_GetValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16KeyFrame_SetValue")]
  #else
  [DllImport("Noesis", EntryPoint="Int16KeyFrame_SetValue")]
  #endif
  public static extern void Int16KeyFrame_SetValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16KeyFrame_InterpolateValue")]
  #else
  [DllImport("Noesis", EntryPoint="Int16KeyFrame_InterpolateValue")]
  #endif
  public static extern IntPtr Int16KeyFrame_InterpolateValue(HandleRef jarg1, HandleRef jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16KeyFrame_BoxValue")]
  #else
  [DllImport("Noesis", EntryPoint="Int16KeyFrame_BoxValue")]
  #endif
  public static extern IntPtr Int16KeyFrame_BoxValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16KeyFrame_UnboxValue")]
  #else
  [DllImport("Noesis", EntryPoint="Int16KeyFrame_UnboxValue")]
  #endif
  public static extern short Int16KeyFrame_UnboxValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16KeyFrame_Len")]
  #else
  [DllImport("Noesis", EntryPoint="Int16KeyFrame_Len")]
  #endif
  public static extern float Int16KeyFrame_Len(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16KeyFrame_KeyTimeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Int16KeyFrame_KeyTimeProperty_set")]
  #endif
  public static extern void Int16KeyFrame_KeyTimeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16KeyFrame_KeyTimeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Int16KeyFrame_KeyTimeProperty_get")]
  #endif
  public static extern IntPtr Int16KeyFrame_KeyTimeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16KeyFrame_ValueProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Int16KeyFrame_ValueProperty_set")]
  #endif
  public static extern void Int16KeyFrame_ValueProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16KeyFrame_ValueProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Int16KeyFrame_ValueProperty_get")]
  #endif
  public static extern IntPtr Int16KeyFrame_ValueProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_Int32KeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_Int32KeyFrame")]
  #endif
  public static extern void delete_Int32KeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32KeyFrame_GetKeyTime")]
  #else
  [DllImport("Noesis", EntryPoint="Int32KeyFrame_GetKeyTime")]
  #endif
  public static extern IntPtr Int32KeyFrame_GetKeyTime(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32KeyFrame_SetKeyTime")]
  #else
  [DllImport("Noesis", EntryPoint="Int32KeyFrame_SetKeyTime")]
  #endif
  public static extern void Int32KeyFrame_SetKeyTime(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32KeyFrame_GetValue")]
  #else
  [DllImport("Noesis", EntryPoint="Int32KeyFrame_GetValue")]
  #endif
  public static extern IntPtr Int32KeyFrame_GetValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32KeyFrame_SetValue")]
  #else
  [DllImport("Noesis", EntryPoint="Int32KeyFrame_SetValue")]
  #endif
  public static extern void Int32KeyFrame_SetValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32KeyFrame_InterpolateValue")]
  #else
  [DllImport("Noesis", EntryPoint="Int32KeyFrame_InterpolateValue")]
  #endif
  public static extern IntPtr Int32KeyFrame_InterpolateValue(HandleRef jarg1, HandleRef jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32KeyFrame_BoxValue")]
  #else
  [DllImport("Noesis", EntryPoint="Int32KeyFrame_BoxValue")]
  #endif
  public static extern IntPtr Int32KeyFrame_BoxValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32KeyFrame_UnboxValue")]
  #else
  [DllImport("Noesis", EntryPoint="Int32KeyFrame_UnboxValue")]
  #endif
  public static extern int Int32KeyFrame_UnboxValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32KeyFrame_Len")]
  #else
  [DllImport("Noesis", EntryPoint="Int32KeyFrame_Len")]
  #endif
  public static extern float Int32KeyFrame_Len(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32KeyFrame_KeyTimeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Int32KeyFrame_KeyTimeProperty_set")]
  #endif
  public static extern void Int32KeyFrame_KeyTimeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32KeyFrame_KeyTimeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Int32KeyFrame_KeyTimeProperty_get")]
  #endif
  public static extern IntPtr Int32KeyFrame_KeyTimeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32KeyFrame_ValueProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="Int32KeyFrame_ValueProperty_set")]
  #endif
  public static extern void Int32KeyFrame_ValueProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32KeyFrame_ValueProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="Int32KeyFrame_ValueProperty_get")]
  #endif
  public static extern IntPtr Int32KeyFrame_ValueProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ColorKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ColorKeyFrame")]
  #endif
  public static extern void delete_ColorKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorKeyFrame_GetKeyTime")]
  #else
  [DllImport("Noesis", EntryPoint="ColorKeyFrame_GetKeyTime")]
  #endif
  public static extern IntPtr ColorKeyFrame_GetKeyTime(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorKeyFrame_SetKeyTime")]
  #else
  [DllImport("Noesis", EntryPoint="ColorKeyFrame_SetKeyTime")]
  #endif
  public static extern void ColorKeyFrame_SetKeyTime(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorKeyFrame_GetValue")]
  #else
  [DllImport("Noesis", EntryPoint="ColorKeyFrame_GetValue")]
  #endif
  public static extern IntPtr ColorKeyFrame_GetValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorKeyFrame_SetValue")]
  #else
  [DllImport("Noesis", EntryPoint="ColorKeyFrame_SetValue")]
  #endif
  public static extern void ColorKeyFrame_SetValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorKeyFrame_InterpolateValue")]
  #else
  [DllImport("Noesis", EntryPoint="ColorKeyFrame_InterpolateValue")]
  #endif
  public static extern IntPtr ColorKeyFrame_InterpolateValue(HandleRef jarg1, HandleRef jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorKeyFrame_BoxValue")]
  #else
  [DllImport("Noesis", EntryPoint="ColorKeyFrame_BoxValue")]
  #endif
  public static extern IntPtr ColorKeyFrame_BoxValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorKeyFrame_UnboxValue")]
  #else
  [DllImport("Noesis", EntryPoint="ColorKeyFrame_UnboxValue")]
  #endif
  public static extern IntPtr ColorKeyFrame_UnboxValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorKeyFrame_Len")]
  #else
  [DllImport("Noesis", EntryPoint="ColorKeyFrame_Len")]
  #endif
  public static extern float ColorKeyFrame_Len(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorKeyFrame_KeyTimeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ColorKeyFrame_KeyTimeProperty_set")]
  #endif
  public static extern void ColorKeyFrame_KeyTimeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorKeyFrame_KeyTimeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ColorKeyFrame_KeyTimeProperty_get")]
  #endif
  public static extern IntPtr ColorKeyFrame_KeyTimeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorKeyFrame_ValueProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ColorKeyFrame_ValueProperty_set")]
  #endif
  public static extern void ColorKeyFrame_ValueProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorKeyFrame_ValueProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ColorKeyFrame_ValueProperty_get")]
  #endif
  public static extern IntPtr ColorKeyFrame_ValueProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_PointKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_PointKeyFrame")]
  #endif
  public static extern void delete_PointKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointKeyFrame_GetKeyTime")]
  #else
  [DllImport("Noesis", EntryPoint="PointKeyFrame_GetKeyTime")]
  #endif
  public static extern IntPtr PointKeyFrame_GetKeyTime(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointKeyFrame_SetKeyTime")]
  #else
  [DllImport("Noesis", EntryPoint="PointKeyFrame_SetKeyTime")]
  #endif
  public static extern void PointKeyFrame_SetKeyTime(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointKeyFrame_GetValue")]
  #else
  [DllImport("Noesis", EntryPoint="PointKeyFrame_GetValue")]
  #endif
  public static extern IntPtr PointKeyFrame_GetValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointKeyFrame_SetValue")]
  #else
  [DllImport("Noesis", EntryPoint="PointKeyFrame_SetValue")]
  #endif
  public static extern void PointKeyFrame_SetValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointKeyFrame_InterpolateValue")]
  #else
  [DllImport("Noesis", EntryPoint="PointKeyFrame_InterpolateValue")]
  #endif
  public static extern IntPtr PointKeyFrame_InterpolateValue(HandleRef jarg1, HandleRef jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointKeyFrame_BoxValue")]
  #else
  [DllImport("Noesis", EntryPoint="PointKeyFrame_BoxValue")]
  #endif
  public static extern IntPtr PointKeyFrame_BoxValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointKeyFrame_UnboxValue")]
  #else
  [DllImport("Noesis", EntryPoint="PointKeyFrame_UnboxValue")]
  #endif
  public static extern IntPtr PointKeyFrame_UnboxValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointKeyFrame_Len")]
  #else
  [DllImport("Noesis", EntryPoint="PointKeyFrame_Len")]
  #endif
  public static extern float PointKeyFrame_Len(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointKeyFrame_KeyTimeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="PointKeyFrame_KeyTimeProperty_set")]
  #endif
  public static extern void PointKeyFrame_KeyTimeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointKeyFrame_KeyTimeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="PointKeyFrame_KeyTimeProperty_get")]
  #endif
  public static extern IntPtr PointKeyFrame_KeyTimeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointKeyFrame_ValueProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="PointKeyFrame_ValueProperty_set")]
  #endif
  public static extern void PointKeyFrame_ValueProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointKeyFrame_ValueProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="PointKeyFrame_ValueProperty_get")]
  #endif
  public static extern IntPtr PointKeyFrame_ValueProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_RectKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_RectKeyFrame")]
  #endif
  public static extern void delete_RectKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectKeyFrame_GetKeyTime")]
  #else
  [DllImport("Noesis", EntryPoint="RectKeyFrame_GetKeyTime")]
  #endif
  public static extern IntPtr RectKeyFrame_GetKeyTime(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectKeyFrame_SetKeyTime")]
  #else
  [DllImport("Noesis", EntryPoint="RectKeyFrame_SetKeyTime")]
  #endif
  public static extern void RectKeyFrame_SetKeyTime(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectKeyFrame_GetValue")]
  #else
  [DllImport("Noesis", EntryPoint="RectKeyFrame_GetValue")]
  #endif
  public static extern IntPtr RectKeyFrame_GetValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectKeyFrame_SetValue")]
  #else
  [DllImport("Noesis", EntryPoint="RectKeyFrame_SetValue")]
  #endif
  public static extern void RectKeyFrame_SetValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectKeyFrame_InterpolateValue")]
  #else
  [DllImport("Noesis", EntryPoint="RectKeyFrame_InterpolateValue")]
  #endif
  public static extern IntPtr RectKeyFrame_InterpolateValue(HandleRef jarg1, HandleRef jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectKeyFrame_BoxValue")]
  #else
  [DllImport("Noesis", EntryPoint="RectKeyFrame_BoxValue")]
  #endif
  public static extern IntPtr RectKeyFrame_BoxValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectKeyFrame_UnboxValue")]
  #else
  [DllImport("Noesis", EntryPoint="RectKeyFrame_UnboxValue")]
  #endif
  public static extern IntPtr RectKeyFrame_UnboxValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectKeyFrame_Len")]
  #else
  [DllImport("Noesis", EntryPoint="RectKeyFrame_Len")]
  #endif
  public static extern float RectKeyFrame_Len(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectKeyFrame_KeyTimeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RectKeyFrame_KeyTimeProperty_set")]
  #endif
  public static extern void RectKeyFrame_KeyTimeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectKeyFrame_KeyTimeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RectKeyFrame_KeyTimeProperty_get")]
  #endif
  public static extern IntPtr RectKeyFrame_KeyTimeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectKeyFrame_ValueProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="RectKeyFrame_ValueProperty_set")]
  #endif
  public static extern void RectKeyFrame_ValueProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectKeyFrame_ValueProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="RectKeyFrame_ValueProperty_get")]
  #endif
  public static extern IntPtr RectKeyFrame_ValueProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_SizeKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_SizeKeyFrame")]
  #endif
  public static extern void delete_SizeKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeKeyFrame_GetKeyTime")]
  #else
  [DllImport("Noesis", EntryPoint="SizeKeyFrame_GetKeyTime")]
  #endif
  public static extern IntPtr SizeKeyFrame_GetKeyTime(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeKeyFrame_SetKeyTime")]
  #else
  [DllImport("Noesis", EntryPoint="SizeKeyFrame_SetKeyTime")]
  #endif
  public static extern void SizeKeyFrame_SetKeyTime(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeKeyFrame_GetValue")]
  #else
  [DllImport("Noesis", EntryPoint="SizeKeyFrame_GetValue")]
  #endif
  public static extern IntPtr SizeKeyFrame_GetValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeKeyFrame_SetValue")]
  #else
  [DllImport("Noesis", EntryPoint="SizeKeyFrame_SetValue")]
  #endif
  public static extern void SizeKeyFrame_SetValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeKeyFrame_InterpolateValue")]
  #else
  [DllImport("Noesis", EntryPoint="SizeKeyFrame_InterpolateValue")]
  #endif
  public static extern IntPtr SizeKeyFrame_InterpolateValue(HandleRef jarg1, HandleRef jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeKeyFrame_BoxValue")]
  #else
  [DllImport("Noesis", EntryPoint="SizeKeyFrame_BoxValue")]
  #endif
  public static extern IntPtr SizeKeyFrame_BoxValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeKeyFrame_UnboxValue")]
  #else
  [DllImport("Noesis", EntryPoint="SizeKeyFrame_UnboxValue")]
  #endif
  public static extern IntPtr SizeKeyFrame_UnboxValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeKeyFrame_Len")]
  #else
  [DllImport("Noesis", EntryPoint="SizeKeyFrame_Len")]
  #endif
  public static extern float SizeKeyFrame_Len(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeKeyFrame_KeyTimeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="SizeKeyFrame_KeyTimeProperty_set")]
  #endif
  public static extern void SizeKeyFrame_KeyTimeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeKeyFrame_KeyTimeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="SizeKeyFrame_KeyTimeProperty_get")]
  #endif
  public static extern IntPtr SizeKeyFrame_KeyTimeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeKeyFrame_ValueProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="SizeKeyFrame_ValueProperty_set")]
  #endif
  public static extern void SizeKeyFrame_ValueProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeKeyFrame_ValueProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="SizeKeyFrame_ValueProperty_get")]
  #endif
  public static extern IntPtr SizeKeyFrame_ValueProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_ThicknessKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_ThicknessKeyFrame")]
  #endif
  public static extern void delete_ThicknessKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessKeyFrame_GetKeyTime")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessKeyFrame_GetKeyTime")]
  #endif
  public static extern IntPtr ThicknessKeyFrame_GetKeyTime(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessKeyFrame_SetKeyTime")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessKeyFrame_SetKeyTime")]
  #endif
  public static extern void ThicknessKeyFrame_SetKeyTime(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessKeyFrame_GetValue")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessKeyFrame_GetValue")]
  #endif
  public static extern IntPtr ThicknessKeyFrame_GetValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessKeyFrame_SetValue")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessKeyFrame_SetValue")]
  #endif
  public static extern void ThicknessKeyFrame_SetValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessKeyFrame_InterpolateValue")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessKeyFrame_InterpolateValue")]
  #endif
  public static extern IntPtr ThicknessKeyFrame_InterpolateValue(HandleRef jarg1, HandleRef jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessKeyFrame_BoxValue")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessKeyFrame_BoxValue")]
  #endif
  public static extern IntPtr ThicknessKeyFrame_BoxValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessKeyFrame_UnboxValue")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessKeyFrame_UnboxValue")]
  #endif
  public static extern IntPtr ThicknessKeyFrame_UnboxValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessKeyFrame_Len")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessKeyFrame_Len")]
  #endif
  public static extern float ThicknessKeyFrame_Len(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessKeyFrame_KeyTimeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessKeyFrame_KeyTimeProperty_set")]
  #endif
  public static extern void ThicknessKeyFrame_KeyTimeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessKeyFrame_KeyTimeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessKeyFrame_KeyTimeProperty_get")]
  #endif
  public static extern IntPtr ThicknessKeyFrame_KeyTimeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessKeyFrame_ValueProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessKeyFrame_ValueProperty_set")]
  #endif
  public static extern void ThicknessKeyFrame_ValueProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessKeyFrame_ValueProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessKeyFrame_ValueProperty_get")]
  #endif
  public static extern IntPtr ThicknessKeyFrame_ValueProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_StringKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_StringKeyFrame")]
  #endif
  public static extern void delete_StringKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StringKeyFrame_GetKeyTime")]
  #else
  [DllImport("Noesis", EntryPoint="StringKeyFrame_GetKeyTime")]
  #endif
  public static extern IntPtr StringKeyFrame_GetKeyTime(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StringKeyFrame_SetKeyTime")]
  #else
  [DllImport("Noesis", EntryPoint="StringKeyFrame_SetKeyTime")]
  #endif
  public static extern void StringKeyFrame_SetKeyTime(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StringKeyFrame_GetValue")]
  #else
  [DllImport("Noesis", EntryPoint="StringKeyFrame_GetValue")]
  #endif
  public static extern IntPtr StringKeyFrame_GetValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StringKeyFrame_SetValue")]
  #else
  [DllImport("Noesis", EntryPoint="StringKeyFrame_SetValue")]
  #endif
  public static extern void StringKeyFrame_SetValue(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StringKeyFrame_InterpolateValue")]
  #else
  [DllImport("Noesis", EntryPoint="StringKeyFrame_InterpolateValue")]
  #endif
  public static extern IntPtr StringKeyFrame_InterpolateValue(HandleRef jarg1, HandleRef jarg2, float jarg3);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StringKeyFrame_BoxValue")]
  #else
  [DllImport("Noesis", EntryPoint="StringKeyFrame_BoxValue")]
  #endif
  public static extern IntPtr StringKeyFrame_BoxValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StringKeyFrame_UnboxValue")]
  #else
  [DllImport("Noesis", EntryPoint="StringKeyFrame_UnboxValue")]
  #endif
  public static extern IntPtr StringKeyFrame_UnboxValue(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StringKeyFrame_Len")]
  #else
  [DllImport("Noesis", EntryPoint="StringKeyFrame_Len")]
  #endif
  public static extern float StringKeyFrame_Len(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StringKeyFrame_KeyTimeProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="StringKeyFrame_KeyTimeProperty_set")]
  #endif
  public static extern void StringKeyFrame_KeyTimeProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StringKeyFrame_KeyTimeProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="StringKeyFrame_KeyTimeProperty_get")]
  #endif
  public static extern IntPtr StringKeyFrame_KeyTimeProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StringKeyFrame_ValueProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="StringKeyFrame_ValueProperty_set")]
  #endif
  public static extern void StringKeyFrame_ValueProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StringKeyFrame_ValueProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="StringKeyFrame_ValueProperty_get")]
  #endif
  public static extern IntPtr StringKeyFrame_ValueProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DiscreteBooleanKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_DiscreteBooleanKeyFrame")]
  #endif
  public static extern IntPtr new_DiscreteBooleanKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DiscreteBooleanKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DiscreteBooleanKeyFrame")]
  #endif
  public static extern void delete_DiscreteBooleanKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DiscreteDoubleKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_DiscreteDoubleKeyFrame")]
  #endif
  public static extern IntPtr new_DiscreteDoubleKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DiscreteDoubleKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DiscreteDoubleKeyFrame")]
  #endif
  public static extern void delete_DiscreteDoubleKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DiscreteInt16KeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_DiscreteInt16KeyFrame")]
  #endif
  public static extern IntPtr new_DiscreteInt16KeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DiscreteInt16KeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DiscreteInt16KeyFrame")]
  #endif
  public static extern void delete_DiscreteInt16KeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DiscreteInt32KeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_DiscreteInt32KeyFrame")]
  #endif
  public static extern IntPtr new_DiscreteInt32KeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DiscreteInt32KeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DiscreteInt32KeyFrame")]
  #endif
  public static extern void delete_DiscreteInt32KeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DiscreteColorKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_DiscreteColorKeyFrame")]
  #endif
  public static extern IntPtr new_DiscreteColorKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DiscreteColorKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DiscreteColorKeyFrame")]
  #endif
  public static extern void delete_DiscreteColorKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DiscretePointKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_DiscretePointKeyFrame")]
  #endif
  public static extern IntPtr new_DiscretePointKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DiscretePointKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DiscretePointKeyFrame")]
  #endif
  public static extern void delete_DiscretePointKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DiscreteRectKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_DiscreteRectKeyFrame")]
  #endif
  public static extern IntPtr new_DiscreteRectKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DiscreteRectKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DiscreteRectKeyFrame")]
  #endif
  public static extern void delete_DiscreteRectKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DiscreteSizeKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_DiscreteSizeKeyFrame")]
  #endif
  public static extern IntPtr new_DiscreteSizeKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DiscreteSizeKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DiscreteSizeKeyFrame")]
  #endif
  public static extern void delete_DiscreteSizeKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DiscreteThicknessKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_DiscreteThicknessKeyFrame")]
  #endif
  public static extern IntPtr new_DiscreteThicknessKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DiscreteThicknessKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DiscreteThicknessKeyFrame")]
  #endif
  public static extern void delete_DiscreteThicknessKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_DiscreteStringKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_DiscreteStringKeyFrame")]
  #endif
  public static extern IntPtr new_DiscreteStringKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_DiscreteStringKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_DiscreteStringKeyFrame")]
  #endif
  public static extern void delete_DiscreteStringKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_EasingDoubleKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_EasingDoubleKeyFrame")]
  #endif
  public static extern IntPtr new_EasingDoubleKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_EasingDoubleKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_EasingDoubleKeyFrame")]
  #endif
  public static extern void delete_EasingDoubleKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingDoubleKeyFrame_GetEasingFunction")]
  #else
  [DllImport("Noesis", EntryPoint="EasingDoubleKeyFrame_GetEasingFunction")]
  #endif
  public static extern IntPtr EasingDoubleKeyFrame_GetEasingFunction(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingDoubleKeyFrame_SetEasingFunction")]
  #else
  [DllImport("Noesis", EntryPoint="EasingDoubleKeyFrame_SetEasingFunction")]
  #endif
  public static extern void EasingDoubleKeyFrame_SetEasingFunction(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingDoubleKeyFrame_EasingFunctionProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="EasingDoubleKeyFrame_EasingFunctionProperty_set")]
  #endif
  public static extern void EasingDoubleKeyFrame_EasingFunctionProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingDoubleKeyFrame_EasingFunctionProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="EasingDoubleKeyFrame_EasingFunctionProperty_get")]
  #endif
  public static extern IntPtr EasingDoubleKeyFrame_EasingFunctionProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_EasingInt16KeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_EasingInt16KeyFrame")]
  #endif
  public static extern IntPtr new_EasingInt16KeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_EasingInt16KeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_EasingInt16KeyFrame")]
  #endif
  public static extern void delete_EasingInt16KeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingInt16KeyFrame_GetEasingFunction")]
  #else
  [DllImport("Noesis", EntryPoint="EasingInt16KeyFrame_GetEasingFunction")]
  #endif
  public static extern IntPtr EasingInt16KeyFrame_GetEasingFunction(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingInt16KeyFrame_SetEasingFunction")]
  #else
  [DllImport("Noesis", EntryPoint="EasingInt16KeyFrame_SetEasingFunction")]
  #endif
  public static extern void EasingInt16KeyFrame_SetEasingFunction(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingInt16KeyFrame_EasingFunctionProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="EasingInt16KeyFrame_EasingFunctionProperty_set")]
  #endif
  public static extern void EasingInt16KeyFrame_EasingFunctionProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingInt16KeyFrame_EasingFunctionProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="EasingInt16KeyFrame_EasingFunctionProperty_get")]
  #endif
  public static extern IntPtr EasingInt16KeyFrame_EasingFunctionProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_EasingInt32KeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_EasingInt32KeyFrame")]
  #endif
  public static extern IntPtr new_EasingInt32KeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_EasingInt32KeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_EasingInt32KeyFrame")]
  #endif
  public static extern void delete_EasingInt32KeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingInt32KeyFrame_GetEasingFunction")]
  #else
  [DllImport("Noesis", EntryPoint="EasingInt32KeyFrame_GetEasingFunction")]
  #endif
  public static extern IntPtr EasingInt32KeyFrame_GetEasingFunction(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingInt32KeyFrame_SetEasingFunction")]
  #else
  [DllImport("Noesis", EntryPoint="EasingInt32KeyFrame_SetEasingFunction")]
  #endif
  public static extern void EasingInt32KeyFrame_SetEasingFunction(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingInt32KeyFrame_EasingFunctionProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="EasingInt32KeyFrame_EasingFunctionProperty_set")]
  #endif
  public static extern void EasingInt32KeyFrame_EasingFunctionProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingInt32KeyFrame_EasingFunctionProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="EasingInt32KeyFrame_EasingFunctionProperty_get")]
  #endif
  public static extern IntPtr EasingInt32KeyFrame_EasingFunctionProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_EasingColorKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_EasingColorKeyFrame")]
  #endif
  public static extern IntPtr new_EasingColorKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_EasingColorKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_EasingColorKeyFrame")]
  #endif
  public static extern void delete_EasingColorKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingColorKeyFrame_GetEasingFunction")]
  #else
  [DllImport("Noesis", EntryPoint="EasingColorKeyFrame_GetEasingFunction")]
  #endif
  public static extern IntPtr EasingColorKeyFrame_GetEasingFunction(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingColorKeyFrame_SetEasingFunction")]
  #else
  [DllImport("Noesis", EntryPoint="EasingColorKeyFrame_SetEasingFunction")]
  #endif
  public static extern void EasingColorKeyFrame_SetEasingFunction(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingColorKeyFrame_EasingFunctionProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="EasingColorKeyFrame_EasingFunctionProperty_set")]
  #endif
  public static extern void EasingColorKeyFrame_EasingFunctionProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingColorKeyFrame_EasingFunctionProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="EasingColorKeyFrame_EasingFunctionProperty_get")]
  #endif
  public static extern IntPtr EasingColorKeyFrame_EasingFunctionProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_EasingPointKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_EasingPointKeyFrame")]
  #endif
  public static extern IntPtr new_EasingPointKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_EasingPointKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_EasingPointKeyFrame")]
  #endif
  public static extern void delete_EasingPointKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingPointKeyFrame_GetEasingFunction")]
  #else
  [DllImport("Noesis", EntryPoint="EasingPointKeyFrame_GetEasingFunction")]
  #endif
  public static extern IntPtr EasingPointKeyFrame_GetEasingFunction(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingPointKeyFrame_SetEasingFunction")]
  #else
  [DllImport("Noesis", EntryPoint="EasingPointKeyFrame_SetEasingFunction")]
  #endif
  public static extern void EasingPointKeyFrame_SetEasingFunction(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingPointKeyFrame_EasingFunctionProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="EasingPointKeyFrame_EasingFunctionProperty_set")]
  #endif
  public static extern void EasingPointKeyFrame_EasingFunctionProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingPointKeyFrame_EasingFunctionProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="EasingPointKeyFrame_EasingFunctionProperty_get")]
  #endif
  public static extern IntPtr EasingPointKeyFrame_EasingFunctionProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_EasingRectKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_EasingRectKeyFrame")]
  #endif
  public static extern IntPtr new_EasingRectKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_EasingRectKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_EasingRectKeyFrame")]
  #endif
  public static extern void delete_EasingRectKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingRectKeyFrame_GetEasingFunction")]
  #else
  [DllImport("Noesis", EntryPoint="EasingRectKeyFrame_GetEasingFunction")]
  #endif
  public static extern IntPtr EasingRectKeyFrame_GetEasingFunction(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingRectKeyFrame_SetEasingFunction")]
  #else
  [DllImport("Noesis", EntryPoint="EasingRectKeyFrame_SetEasingFunction")]
  #endif
  public static extern void EasingRectKeyFrame_SetEasingFunction(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingRectKeyFrame_EasingFunctionProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="EasingRectKeyFrame_EasingFunctionProperty_set")]
  #endif
  public static extern void EasingRectKeyFrame_EasingFunctionProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingRectKeyFrame_EasingFunctionProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="EasingRectKeyFrame_EasingFunctionProperty_get")]
  #endif
  public static extern IntPtr EasingRectKeyFrame_EasingFunctionProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_EasingSizeKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_EasingSizeKeyFrame")]
  #endif
  public static extern IntPtr new_EasingSizeKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_EasingSizeKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_EasingSizeKeyFrame")]
  #endif
  public static extern void delete_EasingSizeKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingSizeKeyFrame_GetEasingFunction")]
  #else
  [DllImport("Noesis", EntryPoint="EasingSizeKeyFrame_GetEasingFunction")]
  #endif
  public static extern IntPtr EasingSizeKeyFrame_GetEasingFunction(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingSizeKeyFrame_SetEasingFunction")]
  #else
  [DllImport("Noesis", EntryPoint="EasingSizeKeyFrame_SetEasingFunction")]
  #endif
  public static extern void EasingSizeKeyFrame_SetEasingFunction(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingSizeKeyFrame_EasingFunctionProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="EasingSizeKeyFrame_EasingFunctionProperty_set")]
  #endif
  public static extern void EasingSizeKeyFrame_EasingFunctionProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingSizeKeyFrame_EasingFunctionProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="EasingSizeKeyFrame_EasingFunctionProperty_get")]
  #endif
  public static extern IntPtr EasingSizeKeyFrame_EasingFunctionProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_EasingThicknessKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_EasingThicknessKeyFrame")]
  #endif
  public static extern IntPtr new_EasingThicknessKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_EasingThicknessKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_EasingThicknessKeyFrame")]
  #endif
  public static extern void delete_EasingThicknessKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingThicknessKeyFrame_GetEasingFunction")]
  #else
  [DllImport("Noesis", EntryPoint="EasingThicknessKeyFrame_GetEasingFunction")]
  #endif
  public static extern IntPtr EasingThicknessKeyFrame_GetEasingFunction(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingThicknessKeyFrame_SetEasingFunction")]
  #else
  [DllImport("Noesis", EntryPoint="EasingThicknessKeyFrame_SetEasingFunction")]
  #endif
  public static extern void EasingThicknessKeyFrame_SetEasingFunction(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingThicknessKeyFrame_EasingFunctionProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="EasingThicknessKeyFrame_EasingFunctionProperty_set")]
  #endif
  public static extern void EasingThicknessKeyFrame_EasingFunctionProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingThicknessKeyFrame_EasingFunctionProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="EasingThicknessKeyFrame_EasingFunctionProperty_get")]
  #endif
  public static extern IntPtr EasingThicknessKeyFrame_EasingFunctionProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_LinearDoubleKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_LinearDoubleKeyFrame")]
  #endif
  public static extern IntPtr new_LinearDoubleKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_LinearDoubleKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_LinearDoubleKeyFrame")]
  #endif
  public static extern void delete_LinearDoubleKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_LinearInt16KeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_LinearInt16KeyFrame")]
  #endif
  public static extern IntPtr new_LinearInt16KeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_LinearInt16KeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_LinearInt16KeyFrame")]
  #endif
  public static extern void delete_LinearInt16KeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_LinearInt32KeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_LinearInt32KeyFrame")]
  #endif
  public static extern IntPtr new_LinearInt32KeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_LinearInt32KeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_LinearInt32KeyFrame")]
  #endif
  public static extern void delete_LinearInt32KeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_LinearColorKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_LinearColorKeyFrame")]
  #endif
  public static extern IntPtr new_LinearColorKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_LinearColorKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_LinearColorKeyFrame")]
  #endif
  public static extern void delete_LinearColorKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_LinearPointKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_LinearPointKeyFrame")]
  #endif
  public static extern IntPtr new_LinearPointKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_LinearPointKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_LinearPointKeyFrame")]
  #endif
  public static extern void delete_LinearPointKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_LinearRectKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_LinearRectKeyFrame")]
  #endif
  public static extern IntPtr new_LinearRectKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_LinearRectKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_LinearRectKeyFrame")]
  #endif
  public static extern void delete_LinearRectKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_LinearSizeKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_LinearSizeKeyFrame")]
  #endif
  public static extern IntPtr new_LinearSizeKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_LinearSizeKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_LinearSizeKeyFrame")]
  #endif
  public static extern void delete_LinearSizeKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_LinearThicknessKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_LinearThicknessKeyFrame")]
  #endif
  public static extern IntPtr new_LinearThicknessKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_LinearThicknessKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_LinearThicknessKeyFrame")]
  #endif
  public static extern void delete_LinearThicknessKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_SplineDoubleKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_SplineDoubleKeyFrame")]
  #endif
  public static extern IntPtr new_SplineDoubleKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_SplineDoubleKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_SplineDoubleKeyFrame")]
  #endif
  public static extern void delete_SplineDoubleKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineDoubleKeyFrame_GetKeySpline")]
  #else
  [DllImport("Noesis", EntryPoint="SplineDoubleKeyFrame_GetKeySpline")]
  #endif
  public static extern IntPtr SplineDoubleKeyFrame_GetKeySpline(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineDoubleKeyFrame_SetKeySpline")]
  #else
  [DllImport("Noesis", EntryPoint="SplineDoubleKeyFrame_SetKeySpline")]
  #endif
  public static extern void SplineDoubleKeyFrame_SetKeySpline(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineDoubleKeyFrame_KeySplineProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="SplineDoubleKeyFrame_KeySplineProperty_set")]
  #endif
  public static extern void SplineDoubleKeyFrame_KeySplineProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineDoubleKeyFrame_KeySplineProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="SplineDoubleKeyFrame_KeySplineProperty_get")]
  #endif
  public static extern IntPtr SplineDoubleKeyFrame_KeySplineProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_SplineInt16KeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_SplineInt16KeyFrame")]
  #endif
  public static extern IntPtr new_SplineInt16KeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_SplineInt16KeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_SplineInt16KeyFrame")]
  #endif
  public static extern void delete_SplineInt16KeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineInt16KeyFrame_GetKeySpline")]
  #else
  [DllImport("Noesis", EntryPoint="SplineInt16KeyFrame_GetKeySpline")]
  #endif
  public static extern IntPtr SplineInt16KeyFrame_GetKeySpline(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineInt16KeyFrame_SetKeySpline")]
  #else
  [DllImport("Noesis", EntryPoint="SplineInt16KeyFrame_SetKeySpline")]
  #endif
  public static extern void SplineInt16KeyFrame_SetKeySpline(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineInt16KeyFrame_KeySplineProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="SplineInt16KeyFrame_KeySplineProperty_set")]
  #endif
  public static extern void SplineInt16KeyFrame_KeySplineProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineInt16KeyFrame_KeySplineProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="SplineInt16KeyFrame_KeySplineProperty_get")]
  #endif
  public static extern IntPtr SplineInt16KeyFrame_KeySplineProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_SplineInt32KeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_SplineInt32KeyFrame")]
  #endif
  public static extern IntPtr new_SplineInt32KeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_SplineInt32KeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_SplineInt32KeyFrame")]
  #endif
  public static extern void delete_SplineInt32KeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineInt32KeyFrame_GetKeySpline")]
  #else
  [DllImport("Noesis", EntryPoint="SplineInt32KeyFrame_GetKeySpline")]
  #endif
  public static extern IntPtr SplineInt32KeyFrame_GetKeySpline(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineInt32KeyFrame_SetKeySpline")]
  #else
  [DllImport("Noesis", EntryPoint="SplineInt32KeyFrame_SetKeySpline")]
  #endif
  public static extern void SplineInt32KeyFrame_SetKeySpline(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineInt32KeyFrame_KeySplineProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="SplineInt32KeyFrame_KeySplineProperty_set")]
  #endif
  public static extern void SplineInt32KeyFrame_KeySplineProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineInt32KeyFrame_KeySplineProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="SplineInt32KeyFrame_KeySplineProperty_get")]
  #endif
  public static extern IntPtr SplineInt32KeyFrame_KeySplineProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_SplineColorKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_SplineColorKeyFrame")]
  #endif
  public static extern IntPtr new_SplineColorKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_SplineColorKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_SplineColorKeyFrame")]
  #endif
  public static extern void delete_SplineColorKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineColorKeyFrame_GetKeySpline")]
  #else
  [DllImport("Noesis", EntryPoint="SplineColorKeyFrame_GetKeySpline")]
  #endif
  public static extern IntPtr SplineColorKeyFrame_GetKeySpline(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineColorKeyFrame_SetKeySpline")]
  #else
  [DllImport("Noesis", EntryPoint="SplineColorKeyFrame_SetKeySpline")]
  #endif
  public static extern void SplineColorKeyFrame_SetKeySpline(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineColorKeyFrame_KeySplineProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="SplineColorKeyFrame_KeySplineProperty_set")]
  #endif
  public static extern void SplineColorKeyFrame_KeySplineProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineColorKeyFrame_KeySplineProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="SplineColorKeyFrame_KeySplineProperty_get")]
  #endif
  public static extern IntPtr SplineColorKeyFrame_KeySplineProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_SplinePointKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_SplinePointKeyFrame")]
  #endif
  public static extern IntPtr new_SplinePointKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_SplinePointKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_SplinePointKeyFrame")]
  #endif
  public static extern void delete_SplinePointKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplinePointKeyFrame_GetKeySpline")]
  #else
  [DllImport("Noesis", EntryPoint="SplinePointKeyFrame_GetKeySpline")]
  #endif
  public static extern IntPtr SplinePointKeyFrame_GetKeySpline(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplinePointKeyFrame_SetKeySpline")]
  #else
  [DllImport("Noesis", EntryPoint="SplinePointKeyFrame_SetKeySpline")]
  #endif
  public static extern void SplinePointKeyFrame_SetKeySpline(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplinePointKeyFrame_KeySplineProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="SplinePointKeyFrame_KeySplineProperty_set")]
  #endif
  public static extern void SplinePointKeyFrame_KeySplineProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplinePointKeyFrame_KeySplineProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="SplinePointKeyFrame_KeySplineProperty_get")]
  #endif
  public static extern IntPtr SplinePointKeyFrame_KeySplineProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_SplineRectKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_SplineRectKeyFrame")]
  #endif
  public static extern IntPtr new_SplineRectKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_SplineRectKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_SplineRectKeyFrame")]
  #endif
  public static extern void delete_SplineRectKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineRectKeyFrame_GetKeySpline")]
  #else
  [DllImport("Noesis", EntryPoint="SplineRectKeyFrame_GetKeySpline")]
  #endif
  public static extern IntPtr SplineRectKeyFrame_GetKeySpline(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineRectKeyFrame_SetKeySpline")]
  #else
  [DllImport("Noesis", EntryPoint="SplineRectKeyFrame_SetKeySpline")]
  #endif
  public static extern void SplineRectKeyFrame_SetKeySpline(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineRectKeyFrame_KeySplineProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="SplineRectKeyFrame_KeySplineProperty_set")]
  #endif
  public static extern void SplineRectKeyFrame_KeySplineProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineRectKeyFrame_KeySplineProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="SplineRectKeyFrame_KeySplineProperty_get")]
  #endif
  public static extern IntPtr SplineRectKeyFrame_KeySplineProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_SplineSizeKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_SplineSizeKeyFrame")]
  #endif
  public static extern IntPtr new_SplineSizeKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_SplineSizeKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_SplineSizeKeyFrame")]
  #endif
  public static extern void delete_SplineSizeKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineSizeKeyFrame_GetKeySpline")]
  #else
  [DllImport("Noesis", EntryPoint="SplineSizeKeyFrame_GetKeySpline")]
  #endif
  public static extern IntPtr SplineSizeKeyFrame_GetKeySpline(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineSizeKeyFrame_SetKeySpline")]
  #else
  [DllImport("Noesis", EntryPoint="SplineSizeKeyFrame_SetKeySpline")]
  #endif
  public static extern void SplineSizeKeyFrame_SetKeySpline(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineSizeKeyFrame_KeySplineProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="SplineSizeKeyFrame_KeySplineProperty_set")]
  #endif
  public static extern void SplineSizeKeyFrame_KeySplineProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineSizeKeyFrame_KeySplineProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="SplineSizeKeyFrame_KeySplineProperty_get")]
  #endif
  public static extern IntPtr SplineSizeKeyFrame_KeySplineProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_SplineThicknessKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="new_SplineThicknessKeyFrame")]
  #endif
  public static extern IntPtr new_SplineThicknessKeyFrame();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_SplineThicknessKeyFrame")]
  #else
  [DllImport("Noesis", EntryPoint="delete_SplineThicknessKeyFrame")]
  #endif
  public static extern void delete_SplineThicknessKeyFrame(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineThicknessKeyFrame_GetKeySpline")]
  #else
  [DllImport("Noesis", EntryPoint="SplineThicknessKeyFrame_GetKeySpline")]
  #endif
  public static extern IntPtr SplineThicknessKeyFrame_GetKeySpline(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineThicknessKeyFrame_SetKeySpline")]
  #else
  [DllImport("Noesis", EntryPoint="SplineThicknessKeyFrame_SetKeySpline")]
  #endif
  public static extern void SplineThicknessKeyFrame_SetKeySpline(HandleRef jarg1, HandleRef jarg2);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineThicknessKeyFrame_KeySplineProperty_set")]
  #else
  [DllImport("Noesis", EntryPoint="SplineThicknessKeyFrame_KeySplineProperty_set")]
  #endif
  public static extern void SplineThicknessKeyFrame_KeySplineProperty_set(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineThicknessKeyFrame_KeySplineProperty_get")]
  #else
  [DllImport("Noesis", EntryPoint="SplineThicknessKeyFrame_KeySplineProperty_get")]
  #endif
  public static extern IntPtr SplineThicknessKeyFrame_KeySplineProperty_get();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_AnimationUsingKeyFramesBool")]
  #else
  [DllImport("Noesis", EntryPoint="new_AnimationUsingKeyFramesBool")]
  #endif
  public static extern IntPtr new_AnimationUsingKeyFramesBool();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_AnimationUsingKeyFramesBool")]
  #else
  [DllImport("Noesis", EntryPoint="delete_AnimationUsingKeyFramesBool")]
  #endif
  public static extern void delete_AnimationUsingKeyFramesBool(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesBool_GetKeyFrames")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesBool_GetKeyFrames")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesBool_GetKeyFrames(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesBool_GetAnimatedValue")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesBool_GetAnimatedValue")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesBool_GetAnimatedValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_AnimationUsingKeyFramesFloat")]
  #else
  [DllImport("Noesis", EntryPoint="new_AnimationUsingKeyFramesFloat")]
  #endif
  public static extern IntPtr new_AnimationUsingKeyFramesFloat();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_AnimationUsingKeyFramesFloat")]
  #else
  [DllImport("Noesis", EntryPoint="delete_AnimationUsingKeyFramesFloat")]
  #endif
  public static extern void delete_AnimationUsingKeyFramesFloat(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesFloat_GetKeyFrames")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesFloat_GetKeyFrames")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesFloat_GetKeyFrames(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesFloat_GetAnimatedValue")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesFloat_GetAnimatedValue")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesFloat_GetAnimatedValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_AnimationUsingKeyFramesInt16")]
  #else
  [DllImport("Noesis", EntryPoint="new_AnimationUsingKeyFramesInt16")]
  #endif
  public static extern IntPtr new_AnimationUsingKeyFramesInt16();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_AnimationUsingKeyFramesInt16")]
  #else
  [DllImport("Noesis", EntryPoint="delete_AnimationUsingKeyFramesInt16")]
  #endif
  public static extern void delete_AnimationUsingKeyFramesInt16(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesInt16_GetKeyFrames")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesInt16_GetKeyFrames")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesInt16_GetKeyFrames(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesInt16_GetAnimatedValue")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesInt16_GetAnimatedValue")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesInt16_GetAnimatedValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_AnimationUsingKeyFramesInt32")]
  #else
  [DllImport("Noesis", EntryPoint="new_AnimationUsingKeyFramesInt32")]
  #endif
  public static extern IntPtr new_AnimationUsingKeyFramesInt32();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_AnimationUsingKeyFramesInt32")]
  #else
  [DllImport("Noesis", EntryPoint="delete_AnimationUsingKeyFramesInt32")]
  #endif
  public static extern void delete_AnimationUsingKeyFramesInt32(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesInt32_GetKeyFrames")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesInt32_GetKeyFrames")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesInt32_GetKeyFrames(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesInt32_GetAnimatedValue")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesInt32_GetAnimatedValue")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesInt32_GetAnimatedValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_AnimationUsingKeyFramesColor")]
  #else
  [DllImport("Noesis", EntryPoint="new_AnimationUsingKeyFramesColor")]
  #endif
  public static extern IntPtr new_AnimationUsingKeyFramesColor();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_AnimationUsingKeyFramesColor")]
  #else
  [DllImport("Noesis", EntryPoint="delete_AnimationUsingKeyFramesColor")]
  #endif
  public static extern void delete_AnimationUsingKeyFramesColor(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesColor_GetKeyFrames")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesColor_GetKeyFrames")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesColor_GetKeyFrames(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesColor_GetAnimatedValue")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesColor_GetAnimatedValue")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesColor_GetAnimatedValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_AnimationUsingKeyFramesPoint")]
  #else
  [DllImport("Noesis", EntryPoint="new_AnimationUsingKeyFramesPoint")]
  #endif
  public static extern IntPtr new_AnimationUsingKeyFramesPoint();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_AnimationUsingKeyFramesPoint")]
  #else
  [DllImport("Noesis", EntryPoint="delete_AnimationUsingKeyFramesPoint")]
  #endif
  public static extern void delete_AnimationUsingKeyFramesPoint(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesPoint_GetKeyFrames")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesPoint_GetKeyFrames")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesPoint_GetKeyFrames(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesPoint_GetAnimatedValue")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesPoint_GetAnimatedValue")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesPoint_GetAnimatedValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_AnimationUsingKeyFramesRect")]
  #else
  [DllImport("Noesis", EntryPoint="new_AnimationUsingKeyFramesRect")]
  #endif
  public static extern IntPtr new_AnimationUsingKeyFramesRect();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_AnimationUsingKeyFramesRect")]
  #else
  [DllImport("Noesis", EntryPoint="delete_AnimationUsingKeyFramesRect")]
  #endif
  public static extern void delete_AnimationUsingKeyFramesRect(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesRect_GetKeyFrames")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesRect_GetKeyFrames")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesRect_GetKeyFrames(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesRect_GetAnimatedValue")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesRect_GetAnimatedValue")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesRect_GetAnimatedValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_AnimationUsingKeyFramesSize")]
  #else
  [DllImport("Noesis", EntryPoint="new_AnimationUsingKeyFramesSize")]
  #endif
  public static extern IntPtr new_AnimationUsingKeyFramesSize();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_AnimationUsingKeyFramesSize")]
  #else
  [DllImport("Noesis", EntryPoint="delete_AnimationUsingKeyFramesSize")]
  #endif
  public static extern void delete_AnimationUsingKeyFramesSize(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesSize_GetKeyFrames")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesSize_GetKeyFrames")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesSize_GetKeyFrames(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesSize_GetAnimatedValue")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesSize_GetAnimatedValue")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesSize_GetAnimatedValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_AnimationUsingKeyFramesThickness")]
  #else
  [DllImport("Noesis", EntryPoint="new_AnimationUsingKeyFramesThickness")]
  #endif
  public static extern IntPtr new_AnimationUsingKeyFramesThickness();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_AnimationUsingKeyFramesThickness")]
  #else
  [DllImport("Noesis", EntryPoint="delete_AnimationUsingKeyFramesThickness")]
  #endif
  public static extern void delete_AnimationUsingKeyFramesThickness(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesThickness_GetKeyFrames")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesThickness_GetKeyFrames")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesThickness_GetKeyFrames(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesThickness_GetAnimatedValue")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesThickness_GetAnimatedValue")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesThickness_GetAnimatedValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="new_AnimationUsingKeyFramesNsString")]
  #else
  [DllImport("Noesis", EntryPoint="new_AnimationUsingKeyFramesNsString")]
  #endif
  public static extern IntPtr new_AnimationUsingKeyFramesNsString();

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_AnimationUsingKeyFramesNsString")]
  #else
  [DllImport("Noesis", EntryPoint="delete_AnimationUsingKeyFramesNsString")]
  #endif
  public static extern void delete_AnimationUsingKeyFramesNsString(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesNsString_GetKeyFrames")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesNsString_GetKeyFrames")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesNsString_GetKeyFrames(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesNsString_GetAnimatedValue")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesNsString_GetAnimatedValue")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesNsString_GetAnimatedValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="delete_TimelineCollection")]
  #else
  [DllImport("Noesis", EntryPoint="delete_TimelineCollection")]
  #endif
  public static extern void delete_TimelineCollection(HandleRef jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SerializableComponent_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="SerializableComponent_SWIGUpcast")]
  #endif
  public static extern IntPtr SerializableComponent_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyObject_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyObject_SWIGUpcast")]
  #endif
  public static extern IntPtr DependencyObject_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DependencyProperty_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DependencyProperty_SWIGUpcast")]
  #endif
  public static extern IntPtr DependencyProperty_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Freezable_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Freezable_SWIGUpcast")]
  #endif
  public static extern IntPtr Freezable_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseExpression_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="BaseExpression_SWIGUpcast")]
  #endif
  public static extern IntPtr BaseExpression_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PropertyMetadata_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="PropertyMetadata_SWIGUpcast")]
  #endif
  public static extern IntPtr PropertyMetadata_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIPropertyMetadata_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="UIPropertyMetadata_SWIGUpcast")]
  #endif
  public static extern IntPtr UIPropertyMetadata_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkPropertyMetadata_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkPropertyMetadata_SWIGUpcast")]
  #endif
  public static extern IntPtr FrameworkPropertyMetadata_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Visual_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Visual_SWIGUpcast")]
  #endif
  public static extern IntPtr Visual_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Collection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Collection_SWIGUpcast")]
  #endif
  public static extern IntPtr Collection_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualCollection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="VisualCollection_SWIGUpcast")]
  #endif
  public static extern IntPtr VisualCollection_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElement_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="UIElement_SWIGUpcast")]
  #endif
  public static extern IntPtr UIElement_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElementCollection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="UIElementCollection_SWIGUpcast")]
  #endif
  public static extern IntPtr UIElementCollection_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TriggerCollection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="TriggerCollection_SWIGUpcast")]
  #endif
  public static extern IntPtr TriggerCollection_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseSetter_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="BaseSetter_SWIGUpcast")]
  #endif
  public static extern IntPtr BaseSetter_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseDictionary_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="BaseDictionary_SWIGUpcast")]
  #endif
  public static extern IntPtr BaseDictionary_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionary_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionary_SWIGUpcast")]
  #endif
  public static extern IntPtr ResourceDictionary_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceKeyString_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceKeyString_SWIGUpcast")]
  #endif
  public static extern IntPtr ResourceKeyString_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceKeyType_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceKeyType_SWIGUpcast")]
  #endif
  public static extern IntPtr ResourceKeyType_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Style_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Style_SWIGUpcast")]
  #endif
  public static extern IntPtr Style_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TimeManagerRef_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="TimeManagerRef_SWIGUpcast")]
  #endif
  public static extern IntPtr TimeManagerRef_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkElement_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkElement_SWIGUpcast")]
  #endif
  public static extern IntPtr FrameworkElement_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FrameworkTemplate_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="FrameworkTemplate_SWIGUpcast")]
  #endif
  public static extern IntPtr FrameworkTemplate_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ControlTemplate_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ControlTemplate_SWIGUpcast")]
  #endif
  public static extern IntPtr ControlTemplate_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Control_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Control_SWIGUpcast")]
  #endif
  public static extern IntPtr Control_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentControl_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ContentControl_SWIGUpcast")]
  #endif
  public static extern IntPtr ContentControl_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Decorator_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Decorator_SWIGUpcast")]
  #endif
  public static extern IntPtr Decorator_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Panel_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Panel_SWIGUpcast")]
  #endif
  public static extern IntPtr Panel_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedEvent_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedEvent_SWIGUpcast")]
  #endif
  public static extern IntPtr RoutedEvent_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr RoutedEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsControl_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsControl_SWIGUpcast")]
  #endif
  public static extern IntPtr ItemsControl_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SelectionChangedEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="SelectionChangedEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr SelectionChangedEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Selector_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Selector_SWIGUpcast")]
  #endif
  public static extern IntPtr Selector_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AdornerDecorator_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="AdornerDecorator_SWIGUpcast")]
  #endif
  public static extern IntPtr AdornerDecorator_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Animatable_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Animatable_SWIGUpcast")]
  #endif
  public static extern IntPtr Animatable_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Geometry_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Geometry_SWIGUpcast")]
  #endif
  public static extern IntPtr Geometry_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ImageSource_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ImageSource_SWIGUpcast")]
  #endif
  public static extern IntPtr ImageSource_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Application_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Application_SWIGUpcast")]
  #endif
  public static extern IntPtr Application_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AtlasSource_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="AtlasSource_SWIGUpcast")]
  #endif
  public static extern IntPtr AtlasSource_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseBinding_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="BaseBinding_SWIGUpcast")]
  #endif
  public static extern IntPtr BaseBinding_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseBindingExpression_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="BaseBindingExpression_SWIGUpcast")]
  #endif
  public static extern IntPtr BaseBindingExpression_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseButton_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="BaseButton_SWIGUpcast")]
  #endif
  public static extern IntPtr BaseButton_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToggleButton_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ToggleButton_SWIGUpcast")]
  #endif
  public static extern IntPtr ToggleButton_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseCommand_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="BaseCommand_SWIGUpcast")]
  #endif
  public static extern IntPtr BaseCommand_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseDefinition_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="BaseDefinition_SWIGUpcast")]
  #endif
  public static extern IntPtr BaseDefinition_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseMenu_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="BaseMenu_SWIGUpcast")]
  #endif
  public static extern IntPtr BaseMenu_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTextBox_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTextBox_SWIGUpcast")]
  #endif
  public static extern IntPtr BaseTextBox_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseTrigger_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="BaseTrigger_SWIGUpcast")]
  #endif
  public static extern IntPtr BaseTrigger_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseValueConverter_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="BaseValueConverter_SWIGUpcast")]
  #endif
  public static extern IntPtr BaseValueConverter_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Binding_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Binding_SWIGUpcast")]
  #endif
  public static extern IntPtr Binding_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BitmapSource_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="BitmapSource_SWIGUpcast")]
  #endif
  public static extern IntPtr BitmapSource_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Border_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Border_SWIGUpcast")]
  #endif
  public static extern IntPtr Border_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Brush_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Brush_SWIGUpcast")]
  #endif
  public static extern IntPtr Brush_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BulletDecorator_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="BulletDecorator_SWIGUpcast")]
  #endif
  public static extern IntPtr BulletDecorator_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Button_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Button_SWIGUpcast")]
  #endif
  public static extern IntPtr Button_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Canvas_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Canvas_SWIGUpcast")]
  #endif
  public static extern IntPtr Canvas_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CheckBox_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="CheckBox_SWIGUpcast")]
  #endif
  public static extern IntPtr CheckBox_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionView_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionView_SWIGUpcast")]
  #endif
  public static extern IntPtr CollectionView_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CollectionViewSource_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="CollectionViewSource_SWIGUpcast")]
  #endif
  public static extern IntPtr CollectionViewSource_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColumnDefinition_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ColumnDefinition_SWIGUpcast")]
  #endif
  public static extern IntPtr ColumnDefinition_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CombinedGeometry_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="CombinedGeometry_SWIGUpcast")]
  #endif
  public static extern IntPtr CombinedGeometry_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBox_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBox_SWIGUpcast")]
  #endif
  public static extern IntPtr ComboBox_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ListBoxItem_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ListBoxItem_SWIGUpcast")]
  #endif
  public static extern IntPtr ListBoxItem_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ComboBoxItem_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ComboBoxItem_SWIGUpcast")]
  #endif
  public static extern IntPtr ComboBoxItem_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CanExecuteRoutedEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="CanExecuteRoutedEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr CanExecuteRoutedEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ExecutedRoutedEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ExecutedRoutedEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr ExecutedRoutedEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandBinding_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="CommandBinding_SWIGUpcast")]
  #endif
  public static extern IntPtr CommandBinding_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UITransform_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="UITransform_SWIGUpcast")]
  #endif
  public static extern IntPtr UITransform_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CompositeTransform_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="CompositeTransform_SWIGUpcast")]
  #endif
  public static extern IntPtr CompositeTransform_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Condition_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Condition_SWIGUpcast")]
  #endif
  public static extern IntPtr Condition_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContentPresenter_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ContentPresenter_SWIGUpcast")]
  #endif
  public static extern IntPtr ContentPresenter_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenu_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenu_SWIGUpcast")]
  #endif
  public static extern IntPtr ContextMenu_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DashStyle_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DashStyle_SWIGUpcast")]
  #endif
  public static extern IntPtr DashStyle_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DataTemplate_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DataTemplate_SWIGUpcast")]
  #endif
  public static extern IntPtr DataTemplate_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DataTemplateSelector_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DataTemplateSelector_SWIGUpcast")]
  #endif
  public static extern IntPtr DataTemplateSelector_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Dialog_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Dialog_SWIGUpcast")]
  #endif
  public static extern IntPtr Dialog_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DockPanel_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DockPanel_SWIGUpcast")]
  #endif
  public static extern IntPtr DockPanel_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DrawingContext_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DrawingContext_SWIGUpcast")]
  #endif
  public static extern IntPtr DrawingContext_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Effect_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Effect_SWIGUpcast")]
  #endif
  public static extern IntPtr Effect_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DropShadowEffect_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DropShadowEffect_SWIGUpcast")]
  #endif
  public static extern IntPtr DropShadowEffect_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Shape_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Shape_SWIGUpcast")]
  #endif
  public static extern IntPtr Shape_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Ellipse_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Ellipse_SWIGUpcast")]
  #endif
  public static extern IntPtr Ellipse_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EllipseGeometry_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="EllipseGeometry_SWIGUpcast")]
  #endif
  public static extern IntPtr EllipseGeometry_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EventTrigger_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="EventTrigger_SWIGUpcast")]
  #endif
  public static extern IntPtr EventTrigger_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedContentControl_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedContentControl_SWIGUpcast")]
  #endif
  public static extern IntPtr HeaderedContentControl_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Expander_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Expander_SWIGUpcast")]
  #endif
  public static extern IntPtr Expander_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FormattedText_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="FormattedText_SWIGUpcast")]
  #endif
  public static extern IntPtr FormattedText_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ContextMenuEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ContextMenuEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr ContextMenuEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTipEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTipEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr ToolTipEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RequestBringIntoViewEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="RequestBringIntoViewEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr RequestBringIntoViewEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="FreezableCollection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="FreezableCollection_SWIGUpcast")]
  #endif
  public static extern IntPtr FreezableCollection_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GeometryGroup_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="GeometryGroup_SWIGUpcast")]
  #endif
  public static extern IntPtr GeometryGroup_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientBrush_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="GradientBrush_SWIGUpcast")]
  #endif
  public static extern IntPtr GradientBrush_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientStop_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="GradientStop_SWIGUpcast")]
  #endif
  public static extern IntPtr GradientStop_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GradientStopCollection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="GradientStopCollection_SWIGUpcast")]
  #endif
  public static extern IntPtr GradientStopCollection_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Grid_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Grid_SWIGUpcast")]
  #endif
  public static extern IntPtr Grid_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GroupBox_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="GroupBox_SWIGUpcast")]
  #endif
  public static extern IntPtr GroupBox_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="HeaderedItemsControl_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="HeaderedItemsControl_SWIGUpcast")]
  #endif
  public static extern IntPtr HeaderedItemsControl_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="IconSource_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="IconSource_SWIGUpcast")]
  #endif
  public static extern IntPtr IconSource_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Image_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Image_SWIGUpcast")]
  #endif
  public static extern IntPtr Image_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ImageAtlasList_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ImageAtlasList_SWIGUpcast")]
  #endif
  public static extern IntPtr ImageAtlasList_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TileBrush_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="TileBrush_SWIGUpcast")]
  #endif
  public static extern IntPtr TileBrush_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ImageBrush_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ImageBrush_SWIGUpcast")]
  #endif
  public static extern IntPtr ImageBrush_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="InputBinding_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="InputBinding_SWIGUpcast")]
  #endif
  public static extern IntPtr InputBinding_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="InputGesture_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="InputGesture_SWIGUpcast")]
  #endif
  public static extern IntPtr InputGesture_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemCollection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ItemCollection_SWIGUpcast")]
  #endif
  public static extern IntPtr ItemCollection_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsPanelTemplate_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsPanelTemplate_SWIGUpcast")]
  #endif
  public static extern IntPtr ItemsPanelTemplate_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ItemsPresenter_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ItemsPresenter_SWIGUpcast")]
  #endif
  public static extern IntPtr ItemsPresenter_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyBinding_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="KeyBinding_SWIGUpcast")]
  #endif
  public static extern IntPtr KeyBinding_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Keyboard_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Keyboard_SWIGUpcast")]
  #endif
  public static extern IntPtr Keyboard_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardNavigation_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardNavigation_SWIGUpcast")]
  #endif
  public static extern IntPtr KeyboardNavigation_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyGesture_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="KeyGesture_SWIGUpcast")]
  #endif
  public static extern IntPtr KeyGesture_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Label_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Label_SWIGUpcast")]
  #endif
  public static extern IntPtr Label_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Line_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Line_SWIGUpcast")]
  #endif
  public static extern IntPtr Line_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LinearGradientBrush_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="LinearGradientBrush_SWIGUpcast")]
  #endif
  public static extern IntPtr LinearGradientBrush_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LineGeometry_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="LineGeometry_SWIGUpcast")]
  #endif
  public static extern IntPtr LineGeometry_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ListBox_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ListBox_SWIGUpcast")]
  #endif
  public static extern IntPtr ListBox_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Projection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Projection_SWIGUpcast")]
  #endif
  public static extern IntPtr Projection_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Matrix3DProjection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Matrix3DProjection_SWIGUpcast")]
  #endif
  public static extern IntPtr Matrix3DProjection_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MatrixTransform_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="MatrixTransform_SWIGUpcast")]
  #endif
  public static extern IntPtr MatrixTransform_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Menu_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Menu_SWIGUpcast")]
  #endif
  public static extern IntPtr Menu_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MenuItem_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="MenuItem_SWIGUpcast")]
  #endif
  public static extern IntPtr MenuItem_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UserControl_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="UserControl_SWIGUpcast")]
  #endif
  public static extern IntPtr UserControl_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MessageDialog_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="MessageDialog_SWIGUpcast")]
  #endif
  public static extern IntPtr MessageDialog_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Mouse_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Mouse_SWIGUpcast")]
  #endif
  public static extern IntPtr Mouse_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MultiTrigger_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="MultiTrigger_SWIGUpcast")]
  #endif
  public static extern IntPtr MultiTrigger_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NameScope_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="NameScope_SWIGUpcast")]
  #endif
  public static extern IntPtr NameScope_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Page_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Page_SWIGUpcast")]
  #endif
  public static extern IntPtr Page_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PasswordBox_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="PasswordBox_SWIGUpcast")]
  #endif
  public static extern IntPtr PasswordBox_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Path_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Path_SWIGUpcast")]
  #endif
  public static extern IntPtr Path_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Pen_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Pen_SWIGUpcast")]
  #endif
  public static extern IntPtr Pen_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PlaneProjection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="PlaneProjection_SWIGUpcast")]
  #endif
  public static extern IntPtr PlaneProjection_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Popup_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Popup_SWIGUpcast")]
  #endif
  public static extern IntPtr Popup_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RangeBase_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="RangeBase_SWIGUpcast")]
  #endif
  public static extern IntPtr RangeBase_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ProgressBar_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ProgressBar_SWIGUpcast")]
  #endif
  public static extern IntPtr ProgressBar_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PropertyPath_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="PropertyPath_SWIGUpcast")]
  #endif
  public static extern IntPtr PropertyPath_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadialGradientBrush_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="RadialGradientBrush_SWIGUpcast")]
  #endif
  public static extern IntPtr RadialGradientBrush_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RadioButton_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="RadioButton_SWIGUpcast")]
  #endif
  public static extern IntPtr RadioButton_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Rectangle_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Rectangle_SWIGUpcast")]
  #endif
  public static extern IntPtr Rectangle_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectangleGeometry_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="RectangleGeometry_SWIGUpcast")]
  #endif
  public static extern IntPtr RectangleGeometry_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RelativeSource_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="RelativeSource_SWIGUpcast")]
  #endif
  public static extern IntPtr RelativeSource_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RepeatButton_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="RepeatButton_SWIGUpcast")]
  #endif
  public static extern IntPtr RepeatButton_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RotateTransform_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="RotateTransform_SWIGUpcast")]
  #endif
  public static extern IntPtr RotateTransform_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedCommand_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedCommand_SWIGUpcast")]
  #endif
  public static extern IntPtr RoutedCommand_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RoutedUICommand_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="RoutedUICommand_SWIGUpcast")]
  #endif
  public static extern IntPtr RoutedUICommand_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RowDefinition_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="RowDefinition_SWIGUpcast")]
  #endif
  public static extern IntPtr RowDefinition_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScaleTransform_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ScaleTransform_SWIGUpcast")]
  #endif
  public static extern IntPtr ScaleTransform_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr ScrollEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollBar_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollBar_SWIGUpcast")]
  #endif
  public static extern IntPtr ScrollBar_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollContentPresenter_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollContentPresenter_SWIGUpcast")]
  #endif
  public static extern IntPtr ScrollContentPresenter_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollChangedEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollChangedEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr ScrollChangedEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ScrollViewer_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ScrollViewer_SWIGUpcast")]
  #endif
  public static extern IntPtr ScrollViewer_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Separator_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Separator_SWIGUpcast")]
  #endif
  public static extern IntPtr Separator_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Setter_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Setter_SWIGUpcast")]
  #endif
  public static extern IntPtr Setter_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeChangedEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="SizeChangedEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr SizeChangedEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SkewTransform_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="SkewTransform_SWIGUpcast")]
  #endif
  public static extern IntPtr SkewTransform_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Slider_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Slider_SWIGUpcast")]
  #endif
  public static extern IntPtr Slider_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SolidColorBrush_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="SolidColorBrush_SWIGUpcast")]
  #endif
  public static extern IntPtr SolidColorBrush_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StackPanel_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="StackPanel_SWIGUpcast")]
  #endif
  public static extern IntPtr StackPanel_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StatusBar_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="StatusBar_SWIGUpcast")]
  #endif
  public static extern IntPtr StatusBar_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StatusBarItem_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="StatusBarItem_SWIGUpcast")]
  #endif
  public static extern IntPtr StatusBarItem_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StreamGeometry_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="StreamGeometry_SWIGUpcast")]
  #endif
  public static extern IntPtr StreamGeometry_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabControl_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="TabControl_SWIGUpcast")]
  #endif
  public static extern IntPtr TabControl_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabItem_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="TabItem_SWIGUpcast")]
  #endif
  public static extern IntPtr TabItem_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TabPanel_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="TabPanel_SWIGUpcast")]
  #endif
  public static extern IntPtr TabPanel_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TemplateBinding_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="TemplateBinding_SWIGUpcast")]
  #endif
  public static extern IntPtr TemplateBinding_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBlock_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="TextBlock_SWIGUpcast")]
  #endif
  public static extern IntPtr TextBlock_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextBox_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="TextBox_SWIGUpcast")]
  #endif
  public static extern IntPtr TextBox_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextureSource_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="TextureSource_SWIGUpcast")]
  #endif
  public static extern IntPtr TextureSource_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragCompletedEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DragCompletedEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr DragCompletedEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragStartedEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DragStartedEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr DragStartedEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragDeltaEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DragDeltaEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr DragDeltaEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Thumb_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Thumb_SWIGUpcast")]
  #endif
  public static extern IntPtr Thumb_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TickBar_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="TickBar_SWIGUpcast")]
  #endif
  public static extern IntPtr TickBar_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBar_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBar_SWIGUpcast")]
  #endif
  public static extern IntPtr ToolBar_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBarOverflowPanel_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBarOverflowPanel_SWIGUpcast")]
  #endif
  public static extern IntPtr ToolBarOverflowPanel_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBarPanel_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBarPanel_SWIGUpcast")]
  #endif
  public static extern IntPtr ToolBarPanel_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolBarTray_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ToolBarTray_SWIGUpcast")]
  #endif
  public static extern IntPtr ToolBarTray_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ToolTip_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ToolTip_SWIGUpcast")]
  #endif
  public static extern IntPtr ToolTip_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Track_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Track_SWIGUpcast")]
  #endif
  public static extern IntPtr Track_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TransformGroup_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="TransformGroup_SWIGUpcast")]
  #endif
  public static extern IntPtr TransformGroup_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TranslateTransform_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="TranslateTransform_SWIGUpcast")]
  #endif
  public static extern IntPtr TranslateTransform_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeView_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="TreeView_SWIGUpcast")]
  #endif
  public static extern IntPtr TreeView_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TreeViewItem_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="TreeViewItem_SWIGUpcast")]
  #endif
  public static extern IntPtr TreeViewItem_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Trigger_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Trigger_SWIGUpcast")]
  #endif
  public static extern IntPtr Trigger_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TriggerAction_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="TriggerAction_SWIGUpcast")]
  #endif
  public static extern IntPtr TriggerAction_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="UIElementData_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="UIElementData_SWIGUpcast")]
  #endif
  public static extern IntPtr UIElementData_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MouseEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="MouseEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr MouseEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MouseButtonEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="MouseButtonEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr MouseButtonEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MouseWheelEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="MouseWheelEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr MouseWheelEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AccessKeyEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="AccessKeyEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr AccessKeyEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyboardFocusChangedEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="KeyboardFocusChangedEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr KeyboardFocusChangedEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeyEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="KeyEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr KeyEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DragEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DragEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr DragEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GiveFeedbackEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="GiveFeedbackEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr GiveFeedbackEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="QueryContinueDragEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="QueryContinueDragEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr QueryContinueDragEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TextCompositionEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="TextCompositionEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr TextCompositionEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="QueryCursorEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="QueryCursorEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr QueryCursorEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Viewbox_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Viewbox_SWIGUpcast")]
  #endif
  public static extern IntPtr Viewbox_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualBrush_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="VisualBrush_SWIGUpcast")]
  #endif
  public static extern IntPtr VisualBrush_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CancelEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="CancelEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr CancelEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Window_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Window_SWIGUpcast")]
  #endif
  public static extern IntPtr Window_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="WrapPanel_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="WrapPanel_SWIGUpcast")]
  #endif
  public static extern IntPtr WrapPanel_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MScorlibBoolean_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="MScorlibBoolean_SWIGUpcast")]
  #endif
  public static extern IntPtr MScorlibBoolean_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="MScorlibString_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="MScorlibString_SWIGUpcast")]
  #endif
  public static extern IntPtr MScorlibString_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationTimeline_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationTimeline_SWIGUpcast")]
  #endif
  public static extern IntPtr AnimationTimeline_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingFunctionBase_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="EasingFunctionBase_SWIGUpcast")]
  #endif
  public static extern IntPtr EasingFunctionBase_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BackEase_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="BackEase_SWIGUpcast")]
  #endif
  public static extern IntPtr BackEase_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseAnimation_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="BaseAnimation_SWIGUpcast")]
  #endif
  public static extern IntPtr BaseAnimation_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BeginStoryboard_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="BeginStoryboard_SWIGUpcast")]
  #endif
  public static extern IntPtr BeginStoryboard_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BounceEase_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="BounceEase_SWIGUpcast")]
  #endif
  public static extern IntPtr BounceEase_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CircleEase_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="CircleEase_SWIGUpcast")]
  #endif
  public static extern IntPtr CircleEase_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ClockController_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ClockController_SWIGUpcast")]
  #endif
  public static extern IntPtr ClockController_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ClockGroup_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ClockGroup_SWIGUpcast")]
  #endif
  public static extern IntPtr ClockGroup_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ControllableStoryboardAction_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ControllableStoryboardAction_SWIGUpcast")]
  #endif
  public static extern IntPtr ControllableStoryboardAction_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CubicEase_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="CubicEase_SWIGUpcast")]
  #endif
  public static extern IntPtr CubicEase_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ElasticEase_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ElasticEase_SWIGUpcast")]
  #endif
  public static extern IntPtr ElasticEase_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ExponentialEase_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ExponentialEase_SWIGUpcast")]
  #endif
  public static extern IntPtr ExponentialEase_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="KeySpline_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="KeySpline_SWIGUpcast")]
  #endif
  public static extern IntPtr KeySpline_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TimelineEventArgs_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="TimelineEventArgs_SWIGUpcast")]
  #endif
  public static extern IntPtr TimelineEventArgs_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Timeline_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Timeline_SWIGUpcast")]
  #endif
  public static extern IntPtr Timeline_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TimelineGroup_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="TimelineGroup_SWIGUpcast")]
  #endif
  public static extern IntPtr TimelineGroup_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ParallelTimeline_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ParallelTimeline_SWIGUpcast")]
  #endif
  public static extern IntPtr ParallelTimeline_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PauseStoryboard_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="PauseStoryboard_SWIGUpcast")]
  #endif
  public static extern IntPtr PauseStoryboard_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PowerEase_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="PowerEase_SWIGUpcast")]
  #endif
  public static extern IntPtr PowerEase_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="QuadraticEase_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="QuadraticEase_SWIGUpcast")]
  #endif
  public static extern IntPtr QuadraticEase_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="QuarticEase_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="QuarticEase_SWIGUpcast")]
  #endif
  public static extern IntPtr QuarticEase_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="QuinticEase_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="QuinticEase_SWIGUpcast")]
  #endif
  public static extern IntPtr QuinticEase_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResumeStoryboard_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ResumeStoryboard_SWIGUpcast")]
  #endif
  public static extern IntPtr ResumeStoryboard_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SineEase_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="SineEase_SWIGUpcast")]
  #endif
  public static extern IntPtr SineEase_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StopStoryboard_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="StopStoryboard_SWIGUpcast")]
  #endif
  public static extern IntPtr StopStoryboard_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Storyboard_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Storyboard_SWIGUpcast")]
  #endif
  public static extern IntPtr Storyboard_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualState_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="VisualState_SWIGUpcast")]
  #endif
  public static extern IntPtr VisualState_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualStateGroup_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="VisualStateGroup_SWIGUpcast")]
  #endif
  public static extern IntPtr VisualStateGroup_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualStateManager_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="VisualStateManager_SWIGUpcast")]
  #endif
  public static extern IntPtr VisualStateManager_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="VisualTransition_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="VisualTransition_SWIGUpcast")]
  #endif
  public static extern IntPtr VisualTransition_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BaseSetterCollection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="BaseSetterCollection_SWIGUpcast")]
  #endif
  public static extern IntPtr BaseSetterCollection_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TriggerActionCollection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="TriggerActionCollection_SWIGUpcast")]
  #endif
  public static extern IntPtr TriggerActionCollection_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GroupDescriptionCollection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="GroupDescriptionCollection_SWIGUpcast")]
  #endif
  public static extern IntPtr GroupDescriptionCollection_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SortDescriptionCollection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="SortDescriptionCollection_SWIGUpcast")]
  #endif
  public static extern IntPtr SortDescriptionCollection_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="CommandBindingCollection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="CommandBindingCollection_SWIGUpcast")]
  #endif
  public static extern IntPtr CommandBindingCollection_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="InputBindingCollection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="InputBindingCollection_SWIGUpcast")]
  #endif
  public static extern IntPtr InputBindingCollection_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="GeometryCollection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="GeometryCollection_SWIGUpcast")]
  #endif
  public static extern IntPtr GeometryCollection_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColumnDefinitionCollection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ColumnDefinitionCollection_SWIGUpcast")]
  #endif
  public static extern IntPtr ColumnDefinitionCollection_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RowDefinitionCollection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="RowDefinitionCollection_SWIGUpcast")]
  #endif
  public static extern IntPtr RowDefinitionCollection_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ConditionCollection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ConditionCollection_SWIGUpcast")]
  #endif
  public static extern IntPtr ConditionCollection_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ResourceDictionaryCollection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ResourceDictionaryCollection_SWIGUpcast")]
  #endif
  public static extern IntPtr ResourceDictionaryCollection_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="InputGestureCollection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="InputGestureCollection_SWIGUpcast")]
  #endif
  public static extern IntPtr InputGestureCollection_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TransformCollection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="TransformCollection_SWIGUpcast")]
  #endif
  public static extern IntPtr TransformCollection_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NullableBool_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="NullableBool_SWIGUpcast")]
  #endif
  public static extern IntPtr NullableBool_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NullableFloat_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="NullableFloat_SWIGUpcast")]
  #endif
  public static extern IntPtr NullableFloat_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NullableInt16_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="NullableInt16_SWIGUpcast")]
  #endif
  public static extern IntPtr NullableInt16_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="NullableInt32_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="NullableInt32_SWIGUpcast")]
  #endif
  public static extern IntPtr NullableInt32_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleAnimation_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleAnimation_SWIGUpcast")]
  #endif
  public static extern IntPtr DoubleAnimation_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16Animation_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Int16Animation_SWIGUpcast")]
  #endif
  public static extern IntPtr Int16Animation_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32Animation_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Int32Animation_SWIGUpcast")]
  #endif
  public static extern IntPtr Int32Animation_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int64Animation_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Int64Animation_SWIGUpcast")]
  #endif
  public static extern IntPtr Int64Animation_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorAnimation_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ColorAnimation_SWIGUpcast")]
  #endif
  public static extern IntPtr ColorAnimation_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointAnimation_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="PointAnimation_SWIGUpcast")]
  #endif
  public static extern IntPtr PointAnimation_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectAnimation_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="RectAnimation_SWIGUpcast")]
  #endif
  public static extern IntPtr RectAnimation_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeAnimation_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="SizeAnimation_SWIGUpcast")]
  #endif
  public static extern IntPtr SizeAnimation_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessAnimation_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessAnimation_SWIGUpcast")]
  #endif
  public static extern IntPtr ThicknessAnimation_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="BooleanKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="BooleanKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr BooleanKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DoubleKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DoubleKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr DoubleKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int16KeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Int16KeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr Int16KeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="Int32KeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="Int32KeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr Int32KeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ColorKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ColorKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr ColorKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="PointKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="PointKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr PointKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="RectKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="RectKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr RectKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SizeKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="SizeKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr SizeKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="ThicknessKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="ThicknessKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr ThicknessKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="StringKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="StringKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr StringKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DiscreteBooleanKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DiscreteBooleanKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr DiscreteBooleanKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DiscreteDoubleKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DiscreteDoubleKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr DiscreteDoubleKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DiscreteInt16KeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DiscreteInt16KeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr DiscreteInt16KeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DiscreteInt32KeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DiscreteInt32KeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr DiscreteInt32KeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DiscreteColorKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DiscreteColorKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr DiscreteColorKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DiscretePointKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DiscretePointKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr DiscretePointKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DiscreteRectKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DiscreteRectKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr DiscreteRectKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DiscreteSizeKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DiscreteSizeKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr DiscreteSizeKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DiscreteThicknessKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DiscreteThicknessKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr DiscreteThicknessKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="DiscreteStringKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="DiscreteStringKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr DiscreteStringKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingDoubleKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="EasingDoubleKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr EasingDoubleKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingInt16KeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="EasingInt16KeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr EasingInt16KeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingInt32KeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="EasingInt32KeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr EasingInt32KeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingColorKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="EasingColorKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr EasingColorKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingPointKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="EasingPointKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr EasingPointKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingRectKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="EasingRectKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr EasingRectKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingSizeKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="EasingSizeKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr EasingSizeKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="EasingThicknessKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="EasingThicknessKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr EasingThicknessKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LinearDoubleKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="LinearDoubleKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr LinearDoubleKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LinearInt16KeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="LinearInt16KeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr LinearInt16KeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LinearInt32KeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="LinearInt32KeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr LinearInt32KeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LinearColorKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="LinearColorKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr LinearColorKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LinearPointKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="LinearPointKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr LinearPointKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LinearRectKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="LinearRectKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr LinearRectKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LinearSizeKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="LinearSizeKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr LinearSizeKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="LinearThicknessKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="LinearThicknessKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr LinearThicknessKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineDoubleKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="SplineDoubleKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr SplineDoubleKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineInt16KeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="SplineInt16KeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr SplineInt16KeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineInt32KeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="SplineInt32KeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr SplineInt32KeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineColorKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="SplineColorKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr SplineColorKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplinePointKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="SplinePointKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr SplinePointKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineRectKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="SplineRectKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr SplineRectKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineSizeKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="SplineSizeKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr SplineSizeKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="SplineThicknessKeyFrame_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="SplineThicknessKeyFrame_SWIGUpcast")]
  #endif
  public static extern IntPtr SplineThicknessKeyFrame_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesBool_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesBool_SWIGUpcast")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesBool_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesFloat_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesFloat_SWIGUpcast")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesFloat_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesInt16_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesInt16_SWIGUpcast")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesInt16_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesInt32_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesInt32_SWIGUpcast")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesInt32_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesColor_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesColor_SWIGUpcast")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesColor_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesPoint_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesPoint_SWIGUpcast")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesPoint_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesRect_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesRect_SWIGUpcast")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesRect_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesSize_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesSize_SWIGUpcast")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesSize_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesThickness_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesThickness_SWIGUpcast")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesThickness_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="AnimationUsingKeyFramesNsString_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="AnimationUsingKeyFramesNsString_SWIGUpcast")]
  #endif
  public static extern IntPtr AnimationUsingKeyFramesNsString_SWIGUpcast(IntPtr jarg1);

  #if UNITY_IPHONE || UNITY_XBOX360
  [DllImport("__Internal", EntryPoint="TimelineCollection_SWIGUpcast")]
  #else
  [DllImport("Noesis", EntryPoint="TimelineCollection_SWIGUpcast")]
  #endif
  public static extern IntPtr TimelineCollection_SWIGUpcast(IntPtr jarg1);


public static void RuntimeInit()
{
    SWIGExceptionHelper.Init();
    swigExceptionHelper = new SWIGExceptionHelper();
    SWIGStringHelper.Init();
    swigStringHelper = new SWIGStringHelper();
}


#else

public static void RegisterFunctions(Noesis.Library lib)
{
    SWIGExceptionHelper._SWIGRegisterExceptionArgumentCallbacks_NoesisGUI_ = lib.Find<SWIGExceptionHelper.SWIGRegisterExceptionArgumentCallbacks_NoesisGUI_Delegate>("SWIGRegisterExceptionArgumentCallbacks_NoesisGUI_");
    SWIGStringHelper._SWIGRegisterStringCallback_NoesisGUI_ = lib.Find<SWIGStringHelper.SWIGRegisterStringCallback_NoesisGUI_Delegate>("SWIGRegisterStringCallback_NoesisGUI_");
    _CheckType_BaseComponent = lib.Find<CheckType_BaseComponentDelegate>("CheckType_BaseComponent");
    _CheckType_AdornerDecorator = lib.Find<CheckType_AdornerDecoratorDelegate>("CheckType_AdornerDecorator");
    _CheckType_Animatable = lib.Find<CheckType_AnimatableDelegate>("CheckType_Animatable");
    _CheckType_Application = lib.Find<CheckType_ApplicationDelegate>("CheckType_Application");
    _CheckType_AtlasSource = lib.Find<CheckType_AtlasSourceDelegate>("CheckType_AtlasSource");
    _CheckType_BaseBinding = lib.Find<CheckType_BaseBindingDelegate>("CheckType_BaseBinding");
    _CheckType_BaseBindingExpression = lib.Find<CheckType_BaseBindingExpressionDelegate>("CheckType_BaseBindingExpression");
    _CheckType_BaseButton = lib.Find<CheckType_BaseButtonDelegate>("CheckType_BaseButton");
    _CheckType_BaseCommand = lib.Find<CheckType_BaseCommandDelegate>("CheckType_BaseCommand");
    _CheckType_BaseDefinition = lib.Find<CheckType_BaseDefinitionDelegate>("CheckType_BaseDefinition");
    _CheckType_BaseDictionary = lib.Find<CheckType_BaseDictionaryDelegate>("CheckType_BaseDictionary");
    _CheckType_BaseMenu = lib.Find<CheckType_BaseMenuDelegate>("CheckType_BaseMenu");
    _CheckType_BaseSetter = lib.Find<CheckType_BaseSetterDelegate>("CheckType_BaseSetter");
    _CheckType_BaseTextBox = lib.Find<CheckType_BaseTextBoxDelegate>("CheckType_BaseTextBox");
    _CheckType_BaseTrigger = lib.Find<CheckType_BaseTriggerDelegate>("CheckType_BaseTrigger");
    _CheckType_BaseValueConverter = lib.Find<CheckType_BaseValueConverterDelegate>("CheckType_BaseValueConverter");
    _CheckType_Binding = lib.Find<CheckType_BindingDelegate>("CheckType_Binding");
    _CheckType_BitmapSource = lib.Find<CheckType_BitmapSourceDelegate>("CheckType_BitmapSource");
    _CheckType_Border = lib.Find<CheckType_BorderDelegate>("CheckType_Border");
    _CheckType_Brush = lib.Find<CheckType_BrushDelegate>("CheckType_Brush");
    _CheckType_BulletDecorator = lib.Find<CheckType_BulletDecoratorDelegate>("CheckType_BulletDecorator");
    _CheckType_Button = lib.Find<CheckType_ButtonDelegate>("CheckType_Button");
    _CheckType_Canvas = lib.Find<CheckType_CanvasDelegate>("CheckType_Canvas");
    _CheckType_CheckBox = lib.Find<CheckType_CheckBoxDelegate>("CheckType_CheckBox");
    _CheckType_Collection = lib.Find<CheckType_CollectionDelegate>("CheckType_Collection");
    _CheckType_CollectionView = lib.Find<CheckType_CollectionViewDelegate>("CheckType_CollectionView");
    _CheckType_CollectionViewSource = lib.Find<CheckType_CollectionViewSourceDelegate>("CheckType_CollectionViewSource");
    _CheckType_ColumnDefinition = lib.Find<CheckType_ColumnDefinitionDelegate>("CheckType_ColumnDefinition");
    _CheckType_CombinedGeometry = lib.Find<CheckType_CombinedGeometryDelegate>("CheckType_CombinedGeometry");
    _CheckType_ComboBox = lib.Find<CheckType_ComboBoxDelegate>("CheckType_ComboBox");
    _CheckType_ComboBoxItem = lib.Find<CheckType_ComboBoxItemDelegate>("CheckType_ComboBoxItem");
    _CheckType_CommandBinding = lib.Find<CheckType_CommandBindingDelegate>("CheckType_CommandBinding");
    _CheckType_CompositeTransform = lib.Find<CheckType_CompositeTransformDelegate>("CheckType_CompositeTransform");
    _CheckType_Condition = lib.Find<CheckType_ConditionDelegate>("CheckType_Condition");
    _CheckType_ContentControl = lib.Find<CheckType_ContentControlDelegate>("CheckType_ContentControl");
    _CheckType_ContentPresenter = lib.Find<CheckType_ContentPresenterDelegate>("CheckType_ContentPresenter");
    _CheckType_ContextMenu = lib.Find<CheckType_ContextMenuDelegate>("CheckType_ContextMenu");
    _CheckType_Control = lib.Find<CheckType_ControlDelegate>("CheckType_Control");
    _CheckType_ControlTemplate = lib.Find<CheckType_ControlTemplateDelegate>("CheckType_ControlTemplate");
    _CheckType_DashStyle = lib.Find<CheckType_DashStyleDelegate>("CheckType_DashStyle");
    _CheckType_DataTemplate = lib.Find<CheckType_DataTemplateDelegate>("CheckType_DataTemplate");
    _CheckType_DataTemplateSelector = lib.Find<CheckType_DataTemplateSelectorDelegate>("CheckType_DataTemplateSelector");
    _CheckType_Decorator = lib.Find<CheckType_DecoratorDelegate>("CheckType_Decorator");
    _CheckType_Dialog = lib.Find<CheckType_DialogDelegate>("CheckType_Dialog");
    _CheckType_DockPanel = lib.Find<CheckType_DockPanelDelegate>("CheckType_DockPanel");
    _CheckType_DrawingContext = lib.Find<CheckType_DrawingContextDelegate>("CheckType_DrawingContext");
    _CheckType_DropShadowEffect = lib.Find<CheckType_DropShadowEffectDelegate>("CheckType_DropShadowEffect");
    _CheckType_Effect = lib.Find<CheckType_EffectDelegate>("CheckType_Effect");
    _CheckType_Ellipse = lib.Find<CheckType_EllipseDelegate>("CheckType_Ellipse");
    _CheckType_EllipseGeometry = lib.Find<CheckType_EllipseGeometryDelegate>("CheckType_EllipseGeometry");
    _CheckType_EventTrigger = lib.Find<CheckType_EventTriggerDelegate>("CheckType_EventTrigger");
    _CheckType_Expander = lib.Find<CheckType_ExpanderDelegate>("CheckType_Expander");
    _CheckType_FormattedText = lib.Find<CheckType_FormattedTextDelegate>("CheckType_FormattedText");
    _CheckType_FrameworkElement = lib.Find<CheckType_FrameworkElementDelegate>("CheckType_FrameworkElement");
    _CheckType_FrameworkPropertyMetadata = lib.Find<CheckType_FrameworkPropertyMetadataDelegate>("CheckType_FrameworkPropertyMetadata");
    _CheckType_FrameworkTemplate = lib.Find<CheckType_FrameworkTemplateDelegate>("CheckType_FrameworkTemplate");
    _CheckType_FreezableCollection = lib.Find<CheckType_FreezableCollectionDelegate>("CheckType_FreezableCollection");
    _CheckType_Geometry = lib.Find<CheckType_GeometryDelegate>("CheckType_Geometry");
    _CheckType_GeometryGroup = lib.Find<CheckType_GeometryGroupDelegate>("CheckType_GeometryGroup");
    _CheckType_GradientBrush = lib.Find<CheckType_GradientBrushDelegate>("CheckType_GradientBrush");
    _CheckType_GradientStop = lib.Find<CheckType_GradientStopDelegate>("CheckType_GradientStop");
    _CheckType_GradientStopCollection = lib.Find<CheckType_GradientStopCollectionDelegate>("CheckType_GradientStopCollection");
    _CheckType_Grid = lib.Find<CheckType_GridDelegate>("CheckType_Grid");
    _CheckType_GroupBox = lib.Find<CheckType_GroupBoxDelegate>("CheckType_GroupBox");
    _CheckType_HeaderedContentControl = lib.Find<CheckType_HeaderedContentControlDelegate>("CheckType_HeaderedContentControl");
    _CheckType_HeaderedItemsControl = lib.Find<CheckType_HeaderedItemsControlDelegate>("CheckType_HeaderedItemsControl");
    _CheckType_IconSource = lib.Find<CheckType_IconSourceDelegate>("CheckType_IconSource");
    _CheckType_Image = lib.Find<CheckType_ImageDelegate>("CheckType_Image");
    _CheckType_ImageAtlasList = lib.Find<CheckType_ImageAtlasListDelegate>("CheckType_ImageAtlasList");
    _CheckType_ImageBrush = lib.Find<CheckType_ImageBrushDelegate>("CheckType_ImageBrush");
    _CheckType_ImageSource = lib.Find<CheckType_ImageSourceDelegate>("CheckType_ImageSource");
    _CheckType_InputBinding = lib.Find<CheckType_InputBindingDelegate>("CheckType_InputBinding");
    _CheckType_InputGesture = lib.Find<CheckType_InputGestureDelegate>("CheckType_InputGesture");
    _CheckType_ItemCollection = lib.Find<CheckType_ItemCollectionDelegate>("CheckType_ItemCollection");
    _CheckType_ItemsControl = lib.Find<CheckType_ItemsControlDelegate>("CheckType_ItemsControl");
    _CheckType_ItemsPanelTemplate = lib.Find<CheckType_ItemsPanelTemplateDelegate>("CheckType_ItemsPanelTemplate");
    _CheckType_ItemsPresenter = lib.Find<CheckType_ItemsPresenterDelegate>("CheckType_ItemsPresenter");
    _CheckType_KeyBinding = lib.Find<CheckType_KeyBindingDelegate>("CheckType_KeyBinding");
    _CheckType_Keyboard = lib.Find<CheckType_KeyboardDelegate>("CheckType_Keyboard");
    _CheckType_KeyboardNavigation = lib.Find<CheckType_KeyboardNavigationDelegate>("CheckType_KeyboardNavigation");
    _CheckType_KeyGesture = lib.Find<CheckType_KeyGestureDelegate>("CheckType_KeyGesture");
    _CheckType_Label = lib.Find<CheckType_LabelDelegate>("CheckType_Label");
    _CheckType_Line = lib.Find<CheckType_LineDelegate>("CheckType_Line");
    _CheckType_LinearGradientBrush = lib.Find<CheckType_LinearGradientBrushDelegate>("CheckType_LinearGradientBrush");
    _CheckType_LineGeometry = lib.Find<CheckType_LineGeometryDelegate>("CheckType_LineGeometry");
    _CheckType_ListBox = lib.Find<CheckType_ListBoxDelegate>("CheckType_ListBox");
    _CheckType_ListBoxItem = lib.Find<CheckType_ListBoxItemDelegate>("CheckType_ListBoxItem");
    _CheckType_Matrix3DProjection = lib.Find<CheckType_Matrix3DProjectionDelegate>("CheckType_Matrix3DProjection");
    _CheckType_MatrixTransform = lib.Find<CheckType_MatrixTransformDelegate>("CheckType_MatrixTransform");
    _CheckType_Menu = lib.Find<CheckType_MenuDelegate>("CheckType_Menu");
    _CheckType_MenuItem = lib.Find<CheckType_MenuItemDelegate>("CheckType_MenuItem");
    _CheckType_MessageDialog = lib.Find<CheckType_MessageDialogDelegate>("CheckType_MessageDialog");
    _CheckType_Mouse = lib.Find<CheckType_MouseDelegate>("CheckType_Mouse");
    _CheckType_MScorlibBoolean = lib.Find<CheckType_MScorlibBooleanDelegate>("CheckType_MScorlibBoolean");
    _CheckType_MScorlibString = lib.Find<CheckType_MScorlibStringDelegate>("CheckType_MScorlibString");
    _CheckType_MultiTrigger = lib.Find<CheckType_MultiTriggerDelegate>("CheckType_MultiTrigger");
    _CheckType_NameScope = lib.Find<CheckType_NameScopeDelegate>("CheckType_NameScope");
    _CheckType_Page = lib.Find<CheckType_PageDelegate>("CheckType_Page");
    _CheckType_Panel = lib.Find<CheckType_PanelDelegate>("CheckType_Panel");
    _CheckType_PasswordBox = lib.Find<CheckType_PasswordBoxDelegate>("CheckType_PasswordBox");
    _CheckType_Path = lib.Find<CheckType_PathDelegate>("CheckType_Path");
    _CheckType_Pen = lib.Find<CheckType_PenDelegate>("CheckType_Pen");
    _CheckType_PlaneProjection = lib.Find<CheckType_PlaneProjectionDelegate>("CheckType_PlaneProjection");
    _CheckType_Popup = lib.Find<CheckType_PopupDelegate>("CheckType_Popup");
    _CheckType_ProgressBar = lib.Find<CheckType_ProgressBarDelegate>("CheckType_ProgressBar");
    _CheckType_Projection = lib.Find<CheckType_ProjectionDelegate>("CheckType_Projection");
    _CheckType_PropertyPath = lib.Find<CheckType_PropertyPathDelegate>("CheckType_PropertyPath");
    _CheckType_RadialGradientBrush = lib.Find<CheckType_RadialGradientBrushDelegate>("CheckType_RadialGradientBrush");
    _CheckType_RadioButton = lib.Find<CheckType_RadioButtonDelegate>("CheckType_RadioButton");
    _CheckType_RangeBase = lib.Find<CheckType_RangeBaseDelegate>("CheckType_RangeBase");
    _CheckType_Rectangle = lib.Find<CheckType_RectangleDelegate>("CheckType_Rectangle");
    _CheckType_RectangleGeometry = lib.Find<CheckType_RectangleGeometryDelegate>("CheckType_RectangleGeometry");
    _CheckType_RelativeSource = lib.Find<CheckType_RelativeSourceDelegate>("CheckType_RelativeSource");
    _CheckType_RepeatButton = lib.Find<CheckType_RepeatButtonDelegate>("CheckType_RepeatButton");
    _CheckType_ResourceDictionary = lib.Find<CheckType_ResourceDictionaryDelegate>("CheckType_ResourceDictionary");
    _CheckType_ResourceKeyString = lib.Find<CheckType_ResourceKeyStringDelegate>("CheckType_ResourceKeyString");
    _CheckType_ResourceKeyType = lib.Find<CheckType_ResourceKeyTypeDelegate>("CheckType_ResourceKeyType");
    _CheckType_RotateTransform = lib.Find<CheckType_RotateTransformDelegate>("CheckType_RotateTransform");
    _CheckType_RoutedCommand = lib.Find<CheckType_RoutedCommandDelegate>("CheckType_RoutedCommand");
    _CheckType_RoutedEvent = lib.Find<CheckType_RoutedEventDelegate>("CheckType_RoutedEvent");
    _CheckType_RoutedUICommand = lib.Find<CheckType_RoutedUICommandDelegate>("CheckType_RoutedUICommand");
    _CheckType_RowDefinition = lib.Find<CheckType_RowDefinitionDelegate>("CheckType_RowDefinition");
    _CheckType_ScaleTransform = lib.Find<CheckType_ScaleTransformDelegate>("CheckType_ScaleTransform");
    _CheckType_ScrollBar = lib.Find<CheckType_ScrollBarDelegate>("CheckType_ScrollBar");
    _CheckType_ScrollContentPresenter = lib.Find<CheckType_ScrollContentPresenterDelegate>("CheckType_ScrollContentPresenter");
    _CheckType_ScrollViewer = lib.Find<CheckType_ScrollViewerDelegate>("CheckType_ScrollViewer");
    _CheckType_Selector = lib.Find<CheckType_SelectorDelegate>("CheckType_Selector");
    _CheckType_Separator = lib.Find<CheckType_SeparatorDelegate>("CheckType_Separator");
    _CheckType_Setter = lib.Find<CheckType_SetterDelegate>("CheckType_Setter");
    _CheckType_Shape = lib.Find<CheckType_ShapeDelegate>("CheckType_Shape");
    _CheckType_SkewTransform = lib.Find<CheckType_SkewTransformDelegate>("CheckType_SkewTransform");
    _CheckType_Slider = lib.Find<CheckType_SliderDelegate>("CheckType_Slider");
    _CheckType_SolidColorBrush = lib.Find<CheckType_SolidColorBrushDelegate>("CheckType_SolidColorBrush");
    _CheckType_StackPanel = lib.Find<CheckType_StackPanelDelegate>("CheckType_StackPanel");
    _CheckType_StatusBar = lib.Find<CheckType_StatusBarDelegate>("CheckType_StatusBar");
    _CheckType_StatusBarItem = lib.Find<CheckType_StatusBarItemDelegate>("CheckType_StatusBarItem");
    _CheckType_StreamGeometry = lib.Find<CheckType_StreamGeometryDelegate>("CheckType_StreamGeometry");
    _CheckType_Style = lib.Find<CheckType_StyleDelegate>("CheckType_Style");
    _CheckType_TabControl = lib.Find<CheckType_TabControlDelegate>("CheckType_TabControl");
    _CheckType_TabItem = lib.Find<CheckType_TabItemDelegate>("CheckType_TabItem");
    _CheckType_TabPanel = lib.Find<CheckType_TabPanelDelegate>("CheckType_TabPanel");
    _CheckType_TemplateBinding = lib.Find<CheckType_TemplateBindingDelegate>("CheckType_TemplateBinding");
    _CheckType_TextBlock = lib.Find<CheckType_TextBlockDelegate>("CheckType_TextBlock");
    _CheckType_TextBox = lib.Find<CheckType_TextBoxDelegate>("CheckType_TextBox");
    _CheckType_TextureSource = lib.Find<CheckType_TextureSourceDelegate>("CheckType_TextureSource");
    _CheckType_Thumb = lib.Find<CheckType_ThumbDelegate>("CheckType_Thumb");
    _CheckType_TickBar = lib.Find<CheckType_TickBarDelegate>("CheckType_TickBar");
    _CheckType_TileBrush = lib.Find<CheckType_TileBrushDelegate>("CheckType_TileBrush");
    _CheckType_ToggleButton = lib.Find<CheckType_ToggleButtonDelegate>("CheckType_ToggleButton");
    _CheckType_ToolBar = lib.Find<CheckType_ToolBarDelegate>("CheckType_ToolBar");
    _CheckType_ToolBarOverflowPanel = lib.Find<CheckType_ToolBarOverflowPanelDelegate>("CheckType_ToolBarOverflowPanel");
    _CheckType_ToolBarPanel = lib.Find<CheckType_ToolBarPanelDelegate>("CheckType_ToolBarPanel");
    _CheckType_ToolBarTray = lib.Find<CheckType_ToolBarTrayDelegate>("CheckType_ToolBarTray");
    _CheckType_ToolTip = lib.Find<CheckType_ToolTipDelegate>("CheckType_ToolTip");
    _CheckType_Track = lib.Find<CheckType_TrackDelegate>("CheckType_Track");
    _CheckType_TransformGroup = lib.Find<CheckType_TransformGroupDelegate>("CheckType_TransformGroup");
    _CheckType_TranslateTransform = lib.Find<CheckType_TranslateTransformDelegate>("CheckType_TranslateTransform");
    _CheckType_TreeView = lib.Find<CheckType_TreeViewDelegate>("CheckType_TreeView");
    _CheckType_TreeViewItem = lib.Find<CheckType_TreeViewItemDelegate>("CheckType_TreeViewItem");
    _CheckType_Trigger = lib.Find<CheckType_TriggerDelegate>("CheckType_Trigger");
    _CheckType_TriggerAction = lib.Find<CheckType_TriggerActionDelegate>("CheckType_TriggerAction");
    _CheckType_TriggerCollection = lib.Find<CheckType_TriggerCollectionDelegate>("CheckType_TriggerCollection");
    _CheckType_UIElement = lib.Find<CheckType_UIElementDelegate>("CheckType_UIElement");
    _CheckType_UIElementCollection = lib.Find<CheckType_UIElementCollectionDelegate>("CheckType_UIElementCollection");
    _CheckType_UIPropertyMetadata = lib.Find<CheckType_UIPropertyMetadataDelegate>("CheckType_UIPropertyMetadata");
    _CheckType_UserControl = lib.Find<CheckType_UserControlDelegate>("CheckType_UserControl");
    _CheckType_Viewbox = lib.Find<CheckType_ViewboxDelegate>("CheckType_Viewbox");
    _CheckType_Visual = lib.Find<CheckType_VisualDelegate>("CheckType_Visual");
    _CheckType_VisualBrush = lib.Find<CheckType_VisualBrushDelegate>("CheckType_VisualBrush");
    _CheckType_VisualCollection = lib.Find<CheckType_VisualCollectionDelegate>("CheckType_VisualCollection");
    _CheckType_Window = lib.Find<CheckType_WindowDelegate>("CheckType_Window");
    _CheckType_WrapPanel = lib.Find<CheckType_WrapPanelDelegate>("CheckType_WrapPanel");
    _CheckType_BaseExpression = lib.Find<CheckType_BaseExpressionDelegate>("CheckType_BaseExpression");
    _CheckType_DependencyObject = lib.Find<CheckType_DependencyObjectDelegate>("CheckType_DependencyObject");
    _CheckType_Freezable = lib.Find<CheckType_FreezableDelegate>("CheckType_Freezable");
    _CheckType_AnimationTimeline = lib.Find<CheckType_AnimationTimelineDelegate>("CheckType_AnimationTimeline");
    _CheckType_BackEase = lib.Find<CheckType_BackEaseDelegate>("CheckType_BackEase");
    _CheckType_BaseAnimation = lib.Find<CheckType_BaseAnimationDelegate>("CheckType_BaseAnimation");
    _CheckType_BeginStoryboard = lib.Find<CheckType_BeginStoryboardDelegate>("CheckType_BeginStoryboard");
    _CheckType_BounceEase = lib.Find<CheckType_BounceEaseDelegate>("CheckType_BounceEase");
    _CheckType_CircleEase = lib.Find<CheckType_CircleEaseDelegate>("CheckType_CircleEase");
    _CheckType_ClockController = lib.Find<CheckType_ClockControllerDelegate>("CheckType_ClockController");
    _CheckType_ControllableStoryboardAction = lib.Find<CheckType_ControllableStoryboardActionDelegate>("CheckType_ControllableStoryboardAction");
    _CheckType_CubicEase = lib.Find<CheckType_CubicEaseDelegate>("CheckType_CubicEase");
    _CheckType_EasingFunctionBase = lib.Find<CheckType_EasingFunctionBaseDelegate>("CheckType_EasingFunctionBase");
    _CheckType_ElasticEase = lib.Find<CheckType_ElasticEaseDelegate>("CheckType_ElasticEase");
    _CheckType_ExponentialEase = lib.Find<CheckType_ExponentialEaseDelegate>("CheckType_ExponentialEase");
    _CheckType_KeySpline = lib.Find<CheckType_KeySplineDelegate>("CheckType_KeySpline");
    _CheckType_ParallelTimeline = lib.Find<CheckType_ParallelTimelineDelegate>("CheckType_ParallelTimeline");
    _CheckType_PauseStoryboard = lib.Find<CheckType_PauseStoryboardDelegate>("CheckType_PauseStoryboard");
    _CheckType_PowerEase = lib.Find<CheckType_PowerEaseDelegate>("CheckType_PowerEase");
    _CheckType_QuadraticEase = lib.Find<CheckType_QuadraticEaseDelegate>("CheckType_QuadraticEase");
    _CheckType_QuarticEase = lib.Find<CheckType_QuarticEaseDelegate>("CheckType_QuarticEase");
    _CheckType_QuinticEase = lib.Find<CheckType_QuinticEaseDelegate>("CheckType_QuinticEase");
    _CheckType_ResumeStoryboard = lib.Find<CheckType_ResumeStoryboardDelegate>("CheckType_ResumeStoryboard");
    _CheckType_SineEase = lib.Find<CheckType_SineEaseDelegate>("CheckType_SineEase");
    _CheckType_StopStoryboard = lib.Find<CheckType_StopStoryboardDelegate>("CheckType_StopStoryboard");
    _CheckType_Storyboard = lib.Find<CheckType_StoryboardDelegate>("CheckType_Storyboard");
    _CheckType_Timeline = lib.Find<CheckType_TimelineDelegate>("CheckType_Timeline");
    _CheckType_TimelineGroup = lib.Find<CheckType_TimelineGroupDelegate>("CheckType_TimelineGroup");
    _CheckType_VisualState = lib.Find<CheckType_VisualStateDelegate>("CheckType_VisualState");
    _CheckType_VisualStateGroup = lib.Find<CheckType_VisualStateGroupDelegate>("CheckType_VisualStateGroup");
    _CheckType_VisualStateManager = lib.Find<CheckType_VisualStateManagerDelegate>("CheckType_VisualStateManager");
    _CheckType_VisualTransition = lib.Find<CheckType_VisualTransitionDelegate>("CheckType_VisualTransition");
    _BindEvent_Timeline_Completed = lib.Find<BindEvent_Timeline_CompletedDelegate>("BindEvent_Timeline_Completed");
    _UnbindEvent_Timeline_Completed = lib.Find<UnbindEvent_Timeline_CompletedDelegate>("UnbindEvent_Timeline_Completed");
    _BindEvent_RangeBase_ValueChanged = lib.Find<BindEvent_RangeBase_ValueChangedDelegate>("BindEvent_RangeBase_ValueChanged");
    _UnbindEvent_RangeBase_ValueChanged = lib.Find<UnbindEvent_RangeBase_ValueChangedDelegate>("UnbindEvent_RangeBase_ValueChanged");
    _BindEvent_TreeView_SelectedItemChanged = lib.Find<BindEvent_TreeView_SelectedItemChangedDelegate>("BindEvent_TreeView_SelectedItemChanged");
    _UnbindEvent_TreeView_SelectedItemChanged = lib.Find<UnbindEvent_TreeView_SelectedItemChangedDelegate>("UnbindEvent_TreeView_SelectedItemChanged");
    _new_NullableBool__ = lib.Find<new_NullableBool__Delegate>("new_NullableBool__");
    _NullableBool_GetValue__ = lib.Find<NullableBool_GetValue__Delegate>("NullableBool_GetValue__");
    _NullableBool_SetValue__ = lib.Find<NullableBool_SetValue__Delegate>("NullableBool_SetValue__");
    _new_NullableFloat__ = lib.Find<new_NullableFloat__Delegate>("new_NullableFloat__");
    _NullableFloat_GetValue__ = lib.Find<NullableFloat_GetValue__Delegate>("NullableFloat_GetValue__");
    _NullableFloat_SetValue__ = lib.Find<NullableFloat_SetValue__Delegate>("NullableFloat_SetValue__");
    _new_NullableInt16__ = lib.Find<new_NullableInt16__Delegate>("new_NullableInt16__");
    _NullableInt16_GetValue__ = lib.Find<NullableInt16_GetValue__Delegate>("NullableInt16_GetValue__");
    _NullableInt16_SetValue__ = lib.Find<NullableInt16_SetValue__Delegate>("NullableInt16_SetValue__");
    _new_NullableInt32__ = lib.Find<new_NullableInt32__Delegate>("new_NullableInt32__");
    _NullableInt32_GetValue__ = lib.Find<NullableInt32_GetValue__Delegate>("NullableInt32_GetValue__");
    _NullableInt32_SetValue__ = lib.Find<NullableInt32_SetValue__Delegate>("NullableInt32_SetValue__");
    _FrameworkElement_FindStringResource = lib.Find<FrameworkElement_FindStringResourceDelegate>("FrameworkElement_FindStringResource");
    _FrameworkElement_FindTypeResource = lib.Find<FrameworkElement_FindTypeResourceDelegate>("FrameworkElement_FindTypeResource");
    _Point_GetX = lib.Find<Point_GetXDelegate>("Point_GetX");
    _Point_SetX = lib.Find<Point_SetXDelegate>("Point_SetX");
    _Point_GetY = lib.Find<Point_GetYDelegate>("Point_GetY");
    _Point_SetY = lib.Find<Point_SetYDelegate>("Point_SetY");
    _Pointi_GetX = lib.Find<Pointi_GetXDelegate>("Pointi_GetX");
    _Pointi_SetX = lib.Find<Pointi_SetXDelegate>("Pointi_SetX");
    _Pointi_GetY = lib.Find<Pointi_GetYDelegate>("Pointi_GetY");
    _Pointi_SetY = lib.Find<Pointi_SetYDelegate>("Pointi_SetY");
    _BindEvent_BaseButton_Click = lib.Find<BindEvent_BaseButton_ClickDelegate>("BindEvent_BaseButton_Click");
    _UnbindEvent_BaseButton_Click = lib.Find<UnbindEvent_BaseButton_ClickDelegate>("UnbindEvent_BaseButton_Click");
    _BindEvent_BaseTextBox_SelectionChanged = lib.Find<BindEvent_BaseTextBox_SelectionChangedDelegate>("BindEvent_BaseTextBox_SelectionChanged");
    _UnbindEvent_BaseTextBox_SelectionChanged = lib.Find<UnbindEvent_BaseTextBox_SelectionChangedDelegate>("UnbindEvent_BaseTextBox_SelectionChanged");
    _BindEvent_BaseTextBox_TextChanged = lib.Find<BindEvent_BaseTextBox_TextChangedDelegate>("BindEvent_BaseTextBox_TextChanged");
    _UnbindEvent_BaseTextBox_TextChanged = lib.Find<UnbindEvent_BaseTextBox_TextChangedDelegate>("UnbindEvent_BaseTextBox_TextChanged");
    _BindEvent_ContextMenu_Closed = lib.Find<BindEvent_ContextMenu_ClosedDelegate>("BindEvent_ContextMenu_Closed");
    _UnbindEvent_ContextMenu_Closed = lib.Find<UnbindEvent_ContextMenu_ClosedDelegate>("UnbindEvent_ContextMenu_Closed");
    _BindEvent_ContextMenu_Opened = lib.Find<BindEvent_ContextMenu_OpenedDelegate>("BindEvent_ContextMenu_Opened");
    _UnbindEvent_ContextMenu_Opened = lib.Find<UnbindEvent_ContextMenu_OpenedDelegate>("UnbindEvent_ContextMenu_Opened");
    _BindEvent_Control_MouseDoubleClick = lib.Find<BindEvent_Control_MouseDoubleClickDelegate>("BindEvent_Control_MouseDoubleClick");
    _UnbindEvent_Control_MouseDoubleClick = lib.Find<UnbindEvent_Control_MouseDoubleClickDelegate>("UnbindEvent_Control_MouseDoubleClick");
    _BindEvent_Control_PreviewMouseDoubleClick = lib.Find<BindEvent_Control_PreviewMouseDoubleClickDelegate>("BindEvent_Control_PreviewMouseDoubleClick");
    _UnbindEvent_Control_PreviewMouseDoubleClick = lib.Find<UnbindEvent_Control_PreviewMouseDoubleClickDelegate>("UnbindEvent_Control_PreviewMouseDoubleClick");
    _BindEvent_Expander_Collapsed = lib.Find<BindEvent_Expander_CollapsedDelegate>("BindEvent_Expander_Collapsed");
    _UnbindEvent_Expander_Collapsed = lib.Find<UnbindEvent_Expander_CollapsedDelegate>("UnbindEvent_Expander_Collapsed");
    _BindEvent_Expander_Expanded = lib.Find<BindEvent_Expander_ExpandedDelegate>("BindEvent_Expander_Expanded");
    _UnbindEvent_Expander_Expanded = lib.Find<UnbindEvent_Expander_ExpandedDelegate>("UnbindEvent_Expander_Expanded");
    _BindEvent_FrameworkElement_ContextMenuClosing = lib.Find<BindEvent_FrameworkElement_ContextMenuClosingDelegate>("BindEvent_FrameworkElement_ContextMenuClosing");
    _UnbindEvent_FrameworkElement_ContextMenuClosing = lib.Find<UnbindEvent_FrameworkElement_ContextMenuClosingDelegate>("UnbindEvent_FrameworkElement_ContextMenuClosing");
    _BindEvent_FrameworkElement_ContextMenuOpening = lib.Find<BindEvent_FrameworkElement_ContextMenuOpeningDelegate>("BindEvent_FrameworkElement_ContextMenuOpening");
    _UnbindEvent_FrameworkElement_ContextMenuOpening = lib.Find<UnbindEvent_FrameworkElement_ContextMenuOpeningDelegate>("UnbindEvent_FrameworkElement_ContextMenuOpening");
    _BindEvent_FrameworkElement_DataContextChanged = lib.Find<BindEvent_FrameworkElement_DataContextChangedDelegate>("BindEvent_FrameworkElement_DataContextChanged");
    _UnbindEvent_FrameworkElement_DataContextChanged = lib.Find<UnbindEvent_FrameworkElement_DataContextChangedDelegate>("UnbindEvent_FrameworkElement_DataContextChanged");
    _BindEvent_FrameworkElement_Loaded = lib.Find<BindEvent_FrameworkElement_LoadedDelegate>("BindEvent_FrameworkElement_Loaded");
    _UnbindEvent_FrameworkElement_Loaded = lib.Find<UnbindEvent_FrameworkElement_LoadedDelegate>("UnbindEvent_FrameworkElement_Loaded");
    _BindEvent_FrameworkElement_SizeChanged = lib.Find<BindEvent_FrameworkElement_SizeChangedDelegate>("BindEvent_FrameworkElement_SizeChanged");
    _UnbindEvent_FrameworkElement_SizeChanged = lib.Find<UnbindEvent_FrameworkElement_SizeChangedDelegate>("UnbindEvent_FrameworkElement_SizeChanged");
    _BindEvent_FrameworkElement_ToolTipClosing = lib.Find<BindEvent_FrameworkElement_ToolTipClosingDelegate>("BindEvent_FrameworkElement_ToolTipClosing");
    _UnbindEvent_FrameworkElement_ToolTipClosing = lib.Find<UnbindEvent_FrameworkElement_ToolTipClosingDelegate>("UnbindEvent_FrameworkElement_ToolTipClosing");
    _BindEvent_FrameworkElement_ToolTipOpening = lib.Find<BindEvent_FrameworkElement_ToolTipOpeningDelegate>("BindEvent_FrameworkElement_ToolTipOpening");
    _UnbindEvent_FrameworkElement_ToolTipOpening = lib.Find<UnbindEvent_FrameworkElement_ToolTipOpeningDelegate>("UnbindEvent_FrameworkElement_ToolTipOpening");
    _BindEvent_FrameworkElement_Unloaded = lib.Find<BindEvent_FrameworkElement_UnloadedDelegate>("BindEvent_FrameworkElement_Unloaded");
    _UnbindEvent_FrameworkElement_Unloaded = lib.Find<UnbindEvent_FrameworkElement_UnloadedDelegate>("UnbindEvent_FrameworkElement_Unloaded");
    _BindEvent_ListBoxItem_Selected = lib.Find<BindEvent_ListBoxItem_SelectedDelegate>("BindEvent_ListBoxItem_Selected");
    _UnbindEvent_ListBoxItem_Selected = lib.Find<UnbindEvent_ListBoxItem_SelectedDelegate>("UnbindEvent_ListBoxItem_Selected");
    _BindEvent_ListBoxItem_Unselected = lib.Find<BindEvent_ListBoxItem_UnselectedDelegate>("BindEvent_ListBoxItem_Unselected");
    _UnbindEvent_ListBoxItem_Unselected = lib.Find<UnbindEvent_ListBoxItem_UnselectedDelegate>("UnbindEvent_ListBoxItem_Unselected");
    _BindEvent_MenuItem_Checked = lib.Find<BindEvent_MenuItem_CheckedDelegate>("BindEvent_MenuItem_Checked");
    _UnbindEvent_MenuItem_Checked = lib.Find<UnbindEvent_MenuItem_CheckedDelegate>("UnbindEvent_MenuItem_Checked");
    _BindEvent_MenuItem_Click = lib.Find<BindEvent_MenuItem_ClickDelegate>("BindEvent_MenuItem_Click");
    _UnbindEvent_MenuItem_Click = lib.Find<UnbindEvent_MenuItem_ClickDelegate>("UnbindEvent_MenuItem_Click");
    _BindEvent_MenuItem_SubmenuClosed = lib.Find<BindEvent_MenuItem_SubmenuClosedDelegate>("BindEvent_MenuItem_SubmenuClosed");
    _UnbindEvent_MenuItem_SubmenuClosed = lib.Find<UnbindEvent_MenuItem_SubmenuClosedDelegate>("UnbindEvent_MenuItem_SubmenuClosed");
    _BindEvent_MenuItem_SubmenuOpened = lib.Find<BindEvent_MenuItem_SubmenuOpenedDelegate>("BindEvent_MenuItem_SubmenuOpened");
    _UnbindEvent_MenuItem_SubmenuOpened = lib.Find<UnbindEvent_MenuItem_SubmenuOpenedDelegate>("UnbindEvent_MenuItem_SubmenuOpened");
    _BindEvent_MenuItem_Unchecked = lib.Find<BindEvent_MenuItem_UncheckedDelegate>("BindEvent_MenuItem_Unchecked");
    _UnbindEvent_MenuItem_Unchecked = lib.Find<UnbindEvent_MenuItem_UncheckedDelegate>("UnbindEvent_MenuItem_Unchecked");
    _BindEvent_ScrollBar_Scroll = lib.Find<BindEvent_ScrollBar_ScrollDelegate>("BindEvent_ScrollBar_Scroll");
    _UnbindEvent_ScrollBar_Scroll = lib.Find<UnbindEvent_ScrollBar_ScrollDelegate>("UnbindEvent_ScrollBar_Scroll");
    _BindEvent_ScrollViewer_ScrollChanged = lib.Find<BindEvent_ScrollViewer_ScrollChangedDelegate>("BindEvent_ScrollViewer_ScrollChanged");
    _UnbindEvent_ScrollViewer_ScrollChanged = lib.Find<UnbindEvent_ScrollViewer_ScrollChangedDelegate>("UnbindEvent_ScrollViewer_ScrollChanged");
    _BindEvent_Selector_SelectionChanged = lib.Find<BindEvent_Selector_SelectionChangedDelegate>("BindEvent_Selector_SelectionChanged");
    _UnbindEvent_Selector_SelectionChanged = lib.Find<UnbindEvent_Selector_SelectionChangedDelegate>("UnbindEvent_Selector_SelectionChanged");
    _BindEvent_Thumb_DragCompleted = lib.Find<BindEvent_Thumb_DragCompletedDelegate>("BindEvent_Thumb_DragCompleted");
    _UnbindEvent_Thumb_DragCompleted = lib.Find<UnbindEvent_Thumb_DragCompletedDelegate>("UnbindEvent_Thumb_DragCompleted");
    _BindEvent_Thumb_DragDelta = lib.Find<BindEvent_Thumb_DragDeltaDelegate>("BindEvent_Thumb_DragDelta");
    _UnbindEvent_Thumb_DragDelta = lib.Find<UnbindEvent_Thumb_DragDeltaDelegate>("UnbindEvent_Thumb_DragDelta");
    _BindEvent_Thumb_DragStarted = lib.Find<BindEvent_Thumb_DragStartedDelegate>("BindEvent_Thumb_DragStarted");
    _UnbindEvent_Thumb_DragStarted = lib.Find<UnbindEvent_Thumb_DragStartedDelegate>("UnbindEvent_Thumb_DragStarted");
    _BindEvent_ToggleButton_Checked = lib.Find<BindEvent_ToggleButton_CheckedDelegate>("BindEvent_ToggleButton_Checked");
    _UnbindEvent_ToggleButton_Checked = lib.Find<UnbindEvent_ToggleButton_CheckedDelegate>("UnbindEvent_ToggleButton_Checked");
    _BindEvent_ToggleButton_Indeterminate = lib.Find<BindEvent_ToggleButton_IndeterminateDelegate>("BindEvent_ToggleButton_Indeterminate");
    _UnbindEvent_ToggleButton_Indeterminate = lib.Find<UnbindEvent_ToggleButton_IndeterminateDelegate>("UnbindEvent_ToggleButton_Indeterminate");
    _BindEvent_ToggleButton_Unchecked = lib.Find<BindEvent_ToggleButton_UncheckedDelegate>("BindEvent_ToggleButton_Unchecked");
    _UnbindEvent_ToggleButton_Unchecked = lib.Find<UnbindEvent_ToggleButton_UncheckedDelegate>("UnbindEvent_ToggleButton_Unchecked");
    _BindEvent_ToolTip_Closed = lib.Find<BindEvent_ToolTip_ClosedDelegate>("BindEvent_ToolTip_Closed");
    _UnbindEvent_ToolTip_Closed = lib.Find<UnbindEvent_ToolTip_ClosedDelegate>("UnbindEvent_ToolTip_Closed");
    _BindEvent_ToolTip_Opened = lib.Find<BindEvent_ToolTip_OpenedDelegate>("BindEvent_ToolTip_Opened");
    _UnbindEvent_ToolTip_Opened = lib.Find<UnbindEvent_ToolTip_OpenedDelegate>("UnbindEvent_ToolTip_Opened");
    _BindEvent_TreeViewItem_Collapsed = lib.Find<BindEvent_TreeViewItem_CollapsedDelegate>("BindEvent_TreeViewItem_Collapsed");
    _UnbindEvent_TreeViewItem_Collapsed = lib.Find<UnbindEvent_TreeViewItem_CollapsedDelegate>("UnbindEvent_TreeViewItem_Collapsed");
    _BindEvent_TreeViewItem_Expanded = lib.Find<BindEvent_TreeViewItem_ExpandedDelegate>("BindEvent_TreeViewItem_Expanded");
    _UnbindEvent_TreeViewItem_Expanded = lib.Find<UnbindEvent_TreeViewItem_ExpandedDelegate>("UnbindEvent_TreeViewItem_Expanded");
    _BindEvent_TreeViewItem_Selected = lib.Find<BindEvent_TreeViewItem_SelectedDelegate>("BindEvent_TreeViewItem_Selected");
    _UnbindEvent_TreeViewItem_Selected = lib.Find<UnbindEvent_TreeViewItem_SelectedDelegate>("UnbindEvent_TreeViewItem_Selected");
    _BindEvent_TreeViewItem_Unselected = lib.Find<BindEvent_TreeViewItem_UnselectedDelegate>("BindEvent_TreeViewItem_Unselected");
    _UnbindEvent_TreeViewItem_Unselected = lib.Find<UnbindEvent_TreeViewItem_UnselectedDelegate>("UnbindEvent_TreeViewItem_Unselected");
    _BindEvent_UIElement_DragEnter = lib.Find<BindEvent_UIElement_DragEnterDelegate>("BindEvent_UIElement_DragEnter");
    _UnbindEvent_UIElement_DragEnter = lib.Find<UnbindEvent_UIElement_DragEnterDelegate>("UnbindEvent_UIElement_DragEnter");
    _BindEvent_UIElement_DragLeave = lib.Find<BindEvent_UIElement_DragLeaveDelegate>("BindEvent_UIElement_DragLeave");
    _UnbindEvent_UIElement_DragLeave = lib.Find<UnbindEvent_UIElement_DragLeaveDelegate>("UnbindEvent_UIElement_DragLeave");
    _BindEvent_UIElement_DragOver = lib.Find<BindEvent_UIElement_DragOverDelegate>("BindEvent_UIElement_DragOver");
    _UnbindEvent_UIElement_DragOver = lib.Find<UnbindEvent_UIElement_DragOverDelegate>("UnbindEvent_UIElement_DragOver");
    _BindEvent_UIElement_Drop = lib.Find<BindEvent_UIElement_DropDelegate>("BindEvent_UIElement_Drop");
    _UnbindEvent_UIElement_Drop = lib.Find<UnbindEvent_UIElement_DropDelegate>("UnbindEvent_UIElement_Drop");
    _BindEvent_UIElement_GiveFeedback = lib.Find<BindEvent_UIElement_GiveFeedbackDelegate>("BindEvent_UIElement_GiveFeedback");
    _UnbindEvent_UIElement_GiveFeedback = lib.Find<UnbindEvent_UIElement_GiveFeedbackDelegate>("UnbindEvent_UIElement_GiveFeedback");
    _BindEvent_UIElement_GotFocus = lib.Find<BindEvent_UIElement_GotFocusDelegate>("BindEvent_UIElement_GotFocus");
    _UnbindEvent_UIElement_GotFocus = lib.Find<UnbindEvent_UIElement_GotFocusDelegate>("UnbindEvent_UIElement_GotFocus");
    _BindEvent_UIElement_GotKeyboardFocus = lib.Find<BindEvent_UIElement_GotKeyboardFocusDelegate>("BindEvent_UIElement_GotKeyboardFocus");
    _UnbindEvent_UIElement_GotKeyboardFocus = lib.Find<UnbindEvent_UIElement_GotKeyboardFocusDelegate>("UnbindEvent_UIElement_GotKeyboardFocus");
    _BindEvent_UIElement_GotMouseCapture = lib.Find<BindEvent_UIElement_GotMouseCaptureDelegate>("BindEvent_UIElement_GotMouseCapture");
    _UnbindEvent_UIElement_GotMouseCapture = lib.Find<UnbindEvent_UIElement_GotMouseCaptureDelegate>("UnbindEvent_UIElement_GotMouseCapture");
    _BindEvent_UIElement_KeyDown = lib.Find<BindEvent_UIElement_KeyDownDelegate>("BindEvent_UIElement_KeyDown");
    _UnbindEvent_UIElement_KeyDown = lib.Find<UnbindEvent_UIElement_KeyDownDelegate>("UnbindEvent_UIElement_KeyDown");
    _BindEvent_UIElement_KeyUp = lib.Find<BindEvent_UIElement_KeyUpDelegate>("BindEvent_UIElement_KeyUp");
    _UnbindEvent_UIElement_KeyUp = lib.Find<UnbindEvent_UIElement_KeyUpDelegate>("UnbindEvent_UIElement_KeyUp");
    _BindEvent_UIElement_LostFocus = lib.Find<BindEvent_UIElement_LostFocusDelegate>("BindEvent_UIElement_LostFocus");
    _UnbindEvent_UIElement_LostFocus = lib.Find<UnbindEvent_UIElement_LostFocusDelegate>("UnbindEvent_UIElement_LostFocus");
    _BindEvent_UIElement_LostKeyboardFocus = lib.Find<BindEvent_UIElement_LostKeyboardFocusDelegate>("BindEvent_UIElement_LostKeyboardFocus");
    _UnbindEvent_UIElement_LostKeyboardFocus = lib.Find<UnbindEvent_UIElement_LostKeyboardFocusDelegate>("UnbindEvent_UIElement_LostKeyboardFocus");
    _BindEvent_UIElement_LostMouseCapture = lib.Find<BindEvent_UIElement_LostMouseCaptureDelegate>("BindEvent_UIElement_LostMouseCapture");
    _UnbindEvent_UIElement_LostMouseCapture = lib.Find<UnbindEvent_UIElement_LostMouseCaptureDelegate>("UnbindEvent_UIElement_LostMouseCapture");
    _BindEvent_UIElement_MouseDown = lib.Find<BindEvent_UIElement_MouseDownDelegate>("BindEvent_UIElement_MouseDown");
    _UnbindEvent_UIElement_MouseDown = lib.Find<UnbindEvent_UIElement_MouseDownDelegate>("UnbindEvent_UIElement_MouseDown");
    _BindEvent_UIElement_MouseEnter = lib.Find<BindEvent_UIElement_MouseEnterDelegate>("BindEvent_UIElement_MouseEnter");
    _UnbindEvent_UIElement_MouseEnter = lib.Find<UnbindEvent_UIElement_MouseEnterDelegate>("UnbindEvent_UIElement_MouseEnter");
    _BindEvent_UIElement_MouseLeave = lib.Find<BindEvent_UIElement_MouseLeaveDelegate>("BindEvent_UIElement_MouseLeave");
    _UnbindEvent_UIElement_MouseLeave = lib.Find<UnbindEvent_UIElement_MouseLeaveDelegate>("UnbindEvent_UIElement_MouseLeave");
    _BindEvent_UIElement_MouseLeftButtonDown = lib.Find<BindEvent_UIElement_MouseLeftButtonDownDelegate>("BindEvent_UIElement_MouseLeftButtonDown");
    _UnbindEvent_UIElement_MouseLeftButtonDown = lib.Find<UnbindEvent_UIElement_MouseLeftButtonDownDelegate>("UnbindEvent_UIElement_MouseLeftButtonDown");
    _BindEvent_UIElement_MouseLeftButtonUp = lib.Find<BindEvent_UIElement_MouseLeftButtonUpDelegate>("BindEvent_UIElement_MouseLeftButtonUp");
    _UnbindEvent_UIElement_MouseLeftButtonUp = lib.Find<UnbindEvent_UIElement_MouseLeftButtonUpDelegate>("UnbindEvent_UIElement_MouseLeftButtonUp");
    _BindEvent_UIElement_MouseMove = lib.Find<BindEvent_UIElement_MouseMoveDelegate>("BindEvent_UIElement_MouseMove");
    _UnbindEvent_UIElement_MouseMove = lib.Find<UnbindEvent_UIElement_MouseMoveDelegate>("UnbindEvent_UIElement_MouseMove");
    _BindEvent_UIElement_MouseRightButtonDown = lib.Find<BindEvent_UIElement_MouseRightButtonDownDelegate>("BindEvent_UIElement_MouseRightButtonDown");
    _UnbindEvent_UIElement_MouseRightButtonDown = lib.Find<UnbindEvent_UIElement_MouseRightButtonDownDelegate>("UnbindEvent_UIElement_MouseRightButtonDown");
    _BindEvent_UIElement_MouseRightButtonUp = lib.Find<BindEvent_UIElement_MouseRightButtonUpDelegate>("BindEvent_UIElement_MouseRightButtonUp");
    _UnbindEvent_UIElement_MouseRightButtonUp = lib.Find<UnbindEvent_UIElement_MouseRightButtonUpDelegate>("UnbindEvent_UIElement_MouseRightButtonUp");
    _BindEvent_UIElement_MouseUp = lib.Find<BindEvent_UIElement_MouseUpDelegate>("BindEvent_UIElement_MouseUp");
    _UnbindEvent_UIElement_MouseUp = lib.Find<UnbindEvent_UIElement_MouseUpDelegate>("UnbindEvent_UIElement_MouseUp");
    _BindEvent_UIElement_MouseWheel = lib.Find<BindEvent_UIElement_MouseWheelDelegate>("BindEvent_UIElement_MouseWheel");
    _UnbindEvent_UIElement_MouseWheel = lib.Find<UnbindEvent_UIElement_MouseWheelDelegate>("UnbindEvent_UIElement_MouseWheel");
    _BindEvent_UIElement_PreviewDragEnter = lib.Find<BindEvent_UIElement_PreviewDragEnterDelegate>("BindEvent_UIElement_PreviewDragEnter");
    _UnbindEvent_UIElement_PreviewDragEnter = lib.Find<UnbindEvent_UIElement_PreviewDragEnterDelegate>("UnbindEvent_UIElement_PreviewDragEnter");
    _BindEvent_UIElement_PreviewDragLeave = lib.Find<BindEvent_UIElement_PreviewDragLeaveDelegate>("BindEvent_UIElement_PreviewDragLeave");
    _UnbindEvent_UIElement_PreviewDragLeave = lib.Find<UnbindEvent_UIElement_PreviewDragLeaveDelegate>("UnbindEvent_UIElement_PreviewDragLeave");
    _BindEvent_UIElement_PreviewDragOver = lib.Find<BindEvent_UIElement_PreviewDragOverDelegate>("BindEvent_UIElement_PreviewDragOver");
    _UnbindEvent_UIElement_PreviewDragOver = lib.Find<UnbindEvent_UIElement_PreviewDragOverDelegate>("UnbindEvent_UIElement_PreviewDragOver");
    _BindEvent_UIElement_PreviewDrop = lib.Find<BindEvent_UIElement_PreviewDropDelegate>("BindEvent_UIElement_PreviewDrop");
    _UnbindEvent_UIElement_PreviewDrop = lib.Find<UnbindEvent_UIElement_PreviewDropDelegate>("UnbindEvent_UIElement_PreviewDrop");
    _BindEvent_UIElement_PreviewGiveFeedback = lib.Find<BindEvent_UIElement_PreviewGiveFeedbackDelegate>("BindEvent_UIElement_PreviewGiveFeedback");
    _UnbindEvent_UIElement_PreviewGiveFeedback = lib.Find<UnbindEvent_UIElement_PreviewGiveFeedbackDelegate>("UnbindEvent_UIElement_PreviewGiveFeedback");
    _BindEvent_UIElement_PreviewGotKeyboardFocus = lib.Find<BindEvent_UIElement_PreviewGotKeyboardFocusDelegate>("BindEvent_UIElement_PreviewGotKeyboardFocus");
    _UnbindEvent_UIElement_PreviewGotKeyboardFocus = lib.Find<UnbindEvent_UIElement_PreviewGotKeyboardFocusDelegate>("UnbindEvent_UIElement_PreviewGotKeyboardFocus");
    _BindEvent_UIElement_PreviewKeyDown = lib.Find<BindEvent_UIElement_PreviewKeyDownDelegate>("BindEvent_UIElement_PreviewKeyDown");
    _UnbindEvent_UIElement_PreviewKeyDown = lib.Find<UnbindEvent_UIElement_PreviewKeyDownDelegate>("UnbindEvent_UIElement_PreviewKeyDown");
    _BindEvent_UIElement_PreviewKeyUp = lib.Find<BindEvent_UIElement_PreviewKeyUpDelegate>("BindEvent_UIElement_PreviewKeyUp");
    _UnbindEvent_UIElement_PreviewKeyUp = lib.Find<UnbindEvent_UIElement_PreviewKeyUpDelegate>("UnbindEvent_UIElement_PreviewKeyUp");
    _BindEvent_UIElement_PreviewLostKeyboardFocus = lib.Find<BindEvent_UIElement_PreviewLostKeyboardFocusDelegate>("BindEvent_UIElement_PreviewLostKeyboardFocus");
    _UnbindEvent_UIElement_PreviewLostKeyboardFocus = lib.Find<UnbindEvent_UIElement_PreviewLostKeyboardFocusDelegate>("UnbindEvent_UIElement_PreviewLostKeyboardFocus");
    _BindEvent_UIElement_PreviewMouseDown = lib.Find<BindEvent_UIElement_PreviewMouseDownDelegate>("BindEvent_UIElement_PreviewMouseDown");
    _UnbindEvent_UIElement_PreviewMouseDown = lib.Find<UnbindEvent_UIElement_PreviewMouseDownDelegate>("UnbindEvent_UIElement_PreviewMouseDown");
    _BindEvent_UIElement_PreviewMouseLeftButtonDown = lib.Find<BindEvent_UIElement_PreviewMouseLeftButtonDownDelegate>("BindEvent_UIElement_PreviewMouseLeftButtonDown");
    _UnbindEvent_UIElement_PreviewMouseLeftButtonDown = lib.Find<UnbindEvent_UIElement_PreviewMouseLeftButtonDownDelegate>("UnbindEvent_UIElement_PreviewMouseLeftButtonDown");
    _BindEvent_UIElement_PreviewMouseLeftButtonUp = lib.Find<BindEvent_UIElement_PreviewMouseLeftButtonUpDelegate>("BindEvent_UIElement_PreviewMouseLeftButtonUp");
    _UnbindEvent_UIElement_PreviewMouseLeftButtonUp = lib.Find<UnbindEvent_UIElement_PreviewMouseLeftButtonUpDelegate>("UnbindEvent_UIElement_PreviewMouseLeftButtonUp");
    _BindEvent_UIElement_PreviewMouseMove = lib.Find<BindEvent_UIElement_PreviewMouseMoveDelegate>("BindEvent_UIElement_PreviewMouseMove");
    _UnbindEvent_UIElement_PreviewMouseMove = lib.Find<UnbindEvent_UIElement_PreviewMouseMoveDelegate>("UnbindEvent_UIElement_PreviewMouseMove");
    _BindEvent_UIElement_PreviewMouseRightButtonDown = lib.Find<BindEvent_UIElement_PreviewMouseRightButtonDownDelegate>("BindEvent_UIElement_PreviewMouseRightButtonDown");
    _UnbindEvent_UIElement_PreviewMouseRightButtonDown = lib.Find<UnbindEvent_UIElement_PreviewMouseRightButtonDownDelegate>("UnbindEvent_UIElement_PreviewMouseRightButtonDown");
    _BindEvent_UIElement_PreviewMouseRightButtonUp = lib.Find<BindEvent_UIElement_PreviewMouseRightButtonUpDelegate>("BindEvent_UIElement_PreviewMouseRightButtonUp");
    _UnbindEvent_UIElement_PreviewMouseRightButtonUp = lib.Find<UnbindEvent_UIElement_PreviewMouseRightButtonUpDelegate>("UnbindEvent_UIElement_PreviewMouseRightButtonUp");
    _BindEvent_UIElement_PreviewMouseUp = lib.Find<BindEvent_UIElement_PreviewMouseUpDelegate>("BindEvent_UIElement_PreviewMouseUp");
    _UnbindEvent_UIElement_PreviewMouseUp = lib.Find<UnbindEvent_UIElement_PreviewMouseUpDelegate>("UnbindEvent_UIElement_PreviewMouseUp");
    _BindEvent_UIElement_PreviewMouseWheel = lib.Find<BindEvent_UIElement_PreviewMouseWheelDelegate>("BindEvent_UIElement_PreviewMouseWheel");
    _UnbindEvent_UIElement_PreviewMouseWheel = lib.Find<UnbindEvent_UIElement_PreviewMouseWheelDelegate>("UnbindEvent_UIElement_PreviewMouseWheel");
    _BindEvent_UIElement_PreviewQueryContinueDrag = lib.Find<BindEvent_UIElement_PreviewQueryContinueDragDelegate>("BindEvent_UIElement_PreviewQueryContinueDrag");
    _UnbindEvent_UIElement_PreviewQueryContinueDrag = lib.Find<UnbindEvent_UIElement_PreviewQueryContinueDragDelegate>("UnbindEvent_UIElement_PreviewQueryContinueDrag");
    _BindEvent_UIElement_PreviewTextInput = lib.Find<BindEvent_UIElement_PreviewTextInputDelegate>("BindEvent_UIElement_PreviewTextInput");
    _UnbindEvent_UIElement_PreviewTextInput = lib.Find<UnbindEvent_UIElement_PreviewTextInputDelegate>("UnbindEvent_UIElement_PreviewTextInput");
    _BindEvent_UIElement_QueryContinueDrag = lib.Find<BindEvent_UIElement_QueryContinueDragDelegate>("BindEvent_UIElement_QueryContinueDrag");
    _UnbindEvent_UIElement_QueryContinueDrag = lib.Find<UnbindEvent_UIElement_QueryContinueDragDelegate>("UnbindEvent_UIElement_QueryContinueDrag");
    _BindEvent_UIElement_QueryCursor = lib.Find<BindEvent_UIElement_QueryCursorDelegate>("BindEvent_UIElement_QueryCursor");
    _UnbindEvent_UIElement_QueryCursor = lib.Find<UnbindEvent_UIElement_QueryCursorDelegate>("UnbindEvent_UIElement_QueryCursor");
    _BindEvent_UIElement_TextInput = lib.Find<BindEvent_UIElement_TextInputDelegate>("BindEvent_UIElement_TextInput");
    _UnbindEvent_UIElement_TextInput = lib.Find<UnbindEvent_UIElement_TextInputDelegate>("UnbindEvent_UIElement_TextInput");
    _UnboxString = lib.Find<UnboxStringDelegate>("UnboxString");
    _new_NsString = lib.Find<new_NsStringDelegate>("new_NsString");
    _NsString_c_str = lib.Find<NsString_c_strDelegate>("NsString_c_str");
    _delete_NsString = lib.Find<delete_NsStringDelegate>("delete_NsString");
    _new_NsSymbol = lib.Find<new_NsSymbolDelegate>("new_NsSymbol");
    _NsSymbol_GetStr = lib.Find<NsSymbol_GetStrDelegate>("NsSymbol_GetStr");
    _delete_NsSymbol = lib.Find<delete_NsSymbolDelegate>("delete_NsSymbol");
    _delete_BaseComponent = lib.Find<delete_BaseComponentDelegate>("delete_BaseComponent");
    _new_Color__SWIG_0 = lib.Find<new_Color__SWIG_0Delegate>("new_Color__SWIG_0");
    _new_Color__SWIG_1 = lib.Find<new_Color__SWIG_1Delegate>("new_Color__SWIG_1");
    _new_Color__SWIG_2 = lib.Find<new_Color__SWIG_2Delegate>("new_Color__SWIG_2");
    _new_Color__SWIG_3 = lib.Find<new_Color__SWIG_3Delegate>("new_Color__SWIG_3");
    _new_Color__SWIG_4 = lib.Find<new_Color__SWIG_4Delegate>("new_Color__SWIG_4");
    _Color_FromPackedBGRA = lib.Find<Color_FromPackedBGRADelegate>("Color_FromPackedBGRA");
    _Color_FromPackedRGBA = lib.Find<Color_FromPackedRGBADelegate>("Color_FromPackedRGBA");
    _Color_FromLinearRGB__SWIG_0 = lib.Find<Color_FromLinearRGB__SWIG_0Delegate>("Color_FromLinearRGB__SWIG_0");
    _Color_FromLinearRGB__SWIG_1 = lib.Find<Color_FromLinearRGB__SWIG_1Delegate>("Color_FromLinearRGB__SWIG_1");
    _Color_ToLinearRGB = lib.Find<Color_ToLinearRGBDelegate>("Color_ToLinearRGB");
    _Color_SetRed__SWIG_0 = lib.Find<Color_SetRed__SWIG_0Delegate>("Color_SetRed__SWIG_0");
    _Color_SetRed__SWIG_1 = lib.Find<Color_SetRed__SWIG_1Delegate>("Color_SetRed__SWIG_1");
    _Color_SetGreen__SWIG_0 = lib.Find<Color_SetGreen__SWIG_0Delegate>("Color_SetGreen__SWIG_0");
    _Color_SetGreen__SWIG_1 = lib.Find<Color_SetGreen__SWIG_1Delegate>("Color_SetGreen__SWIG_1");
    _Color_SetBlue__SWIG_0 = lib.Find<Color_SetBlue__SWIG_0Delegate>("Color_SetBlue__SWIG_0");
    _Color_SetBlue__SWIG_1 = lib.Find<Color_SetBlue__SWIG_1Delegate>("Color_SetBlue__SWIG_1");
    _Color_SetAlpha__SWIG_0 = lib.Find<Color_SetAlpha__SWIG_0Delegate>("Color_SetAlpha__SWIG_0");
    _Color_SetAlpha__SWIG_1 = lib.Find<Color_SetAlpha__SWIG_1Delegate>("Color_SetAlpha__SWIG_1");
    _Color_SetPackedColorBGRA = lib.Find<Color_SetPackedColorBGRADelegate>("Color_SetPackedColorBGRA");
    _Color_SetPackedColorRGBA = lib.Find<Color_SetPackedColorRGBADelegate>("Color_SetPackedColorRGBA");
    _Color_GetRedI = lib.Find<Color_GetRedIDelegate>("Color_GetRedI");
    _Color_GetGreenI = lib.Find<Color_GetGreenIDelegate>("Color_GetGreenI");
    _Color_GetBlueI = lib.Find<Color_GetBlueIDelegate>("Color_GetBlueI");
    _Color_GetAlphaI = lib.Find<Color_GetAlphaIDelegate>("Color_GetAlphaI");
    _Color_GetRedF = lib.Find<Color_GetRedFDelegate>("Color_GetRedF");
    _Color_GetGreenF = lib.Find<Color_GetGreenFDelegate>("Color_GetGreenF");
    _Color_GetBlueF = lib.Find<Color_GetBlueFDelegate>("Color_GetBlueF");
    _Color_GetAlphaF = lib.Find<Color_GetAlphaFDelegate>("Color_GetAlphaF");
    _Color_GetPackedColorBGRA = lib.Find<Color_GetPackedColorBGRADelegate>("Color_GetPackedColorBGRA");
    _Color_GetPackedColorRGBA = lib.Find<Color_GetPackedColorRGBADelegate>("Color_GetPackedColorRGBA");
    _Color_TryParse = lib.Find<Color_TryParseDelegate>("Color_TryParse");
    _Color_Parse = lib.Find<Color_ParseDelegate>("Color_Parse");
    _Color_Black_get = lib.Find<Color_Black_getDelegate>("Color_Black_get");
    _Color_Blue_get = lib.Find<Color_Blue_getDelegate>("Color_Blue_get");
    _Color_Cyan_get = lib.Find<Color_Cyan_getDelegate>("Color_Cyan_get");
    _Color_DarkGray_get = lib.Find<Color_DarkGray_getDelegate>("Color_DarkGray_get");
    _Color_Gray_get = lib.Find<Color_Gray_getDelegate>("Color_Gray_get");
    _Color_Green_get = lib.Find<Color_Green_getDelegate>("Color_Green_get");
    _Color_LightGray_get = lib.Find<Color_LightGray_getDelegate>("Color_LightGray_get");
    _Color_Magenta_get = lib.Find<Color_Magenta_getDelegate>("Color_Magenta_get");
    _Color_Orange_get = lib.Find<Color_Orange_getDelegate>("Color_Orange_get");
    _Color_Pink_get = lib.Find<Color_Pink_getDelegate>("Color_Pink_get");
    _Color_Red_get = lib.Find<Color_Red_getDelegate>("Color_Red_get");
    _Color_White_get = lib.Find<Color_White_getDelegate>("Color_White_get");
    _Color_Yellow_get = lib.Find<Color_Yellow_getDelegate>("Color_Yellow_get");
    _delete_Color = lib.Find<delete_ColorDelegate>("delete_Color");
    _PreMultiplyAlpha = lib.Find<PreMultiplyAlphaDelegate>("PreMultiplyAlpha");
    _Lerp__SWIG_0 = lib.Find<Lerp__SWIG_0Delegate>("Lerp__SWIG_0");
    _Lerp__SWIG_1 = lib.Find<Lerp__SWIG_1Delegate>("Lerp__SWIG_1");
    _Add__SWIG_0 = lib.Find<Add__SWIG_0Delegate>("Add__SWIG_0");
    _Add__SWIG_1 = lib.Find<Add__SWIG_1Delegate>("Add__SWIG_1");
    _Modulate = lib.Find<ModulateDelegate>("Modulate");
    _Size_width_set = lib.Find<Size_width_setDelegate>("Size_width_set");
    _Size_width_get = lib.Find<Size_width_getDelegate>("Size_width_get");
    _Size_height_set = lib.Find<Size_height_setDelegate>("Size_height_set");
    _Size_height_get = lib.Find<Size_height_getDelegate>("Size_height_get");
    _new_Size__SWIG_0 = lib.Find<new_Size__SWIG_0Delegate>("new_Size__SWIG_0");
    _new_Size__SWIG_1 = lib.Find<new_Size__SWIG_1Delegate>("new_Size__SWIG_1");
    _new_Size__SWIG_2 = lib.Find<new_Size__SWIG_2Delegate>("new_Size__SWIG_2");
    _new_Size__SWIG_3 = lib.Find<new_Size__SWIG_3Delegate>("new_Size__SWIG_3");
    _new_Size__SWIG_4 = lib.Find<new_Size__SWIG_4Delegate>("new_Size__SWIG_4");
    _new_Size__SWIG_5 = lib.Find<new_Size__SWIG_5Delegate>("new_Size__SWIG_5");
    _Size_Expand = lib.Find<Size_ExpandDelegate>("Size_Expand");
    _Size_Scale = lib.Find<Size_ScaleDelegate>("Size_Scale");
    _Size_Parse = lib.Find<Size_ParseDelegate>("Size_Parse");
    _Size_TryParse = lib.Find<Size_TryParseDelegate>("Size_TryParse");
    _Size_Zero = lib.Find<Size_ZeroDelegate>("Size_Zero");
    _Size_Infinite = lib.Find<Size_InfiniteDelegate>("Size_Infinite");
    _delete_Size = lib.Find<delete_SizeDelegate>("delete_Size");
    _Sizei_width_set = lib.Find<Sizei_width_setDelegate>("Sizei_width_set");
    _Sizei_width_get = lib.Find<Sizei_width_getDelegate>("Sizei_width_get");
    _Sizei_height_set = lib.Find<Sizei_height_setDelegate>("Sizei_height_set");
    _Sizei_height_get = lib.Find<Sizei_height_getDelegate>("Sizei_height_get");
    _new_Sizei__SWIG_0 = lib.Find<new_Sizei__SWIG_0Delegate>("new_Sizei__SWIG_0");
    _new_Sizei__SWIG_1 = lib.Find<new_Sizei__SWIG_1Delegate>("new_Sizei__SWIG_1");
    _new_Sizei__SWIG_2 = lib.Find<new_Sizei__SWIG_2Delegate>("new_Sizei__SWIG_2");
    _new_Sizei__SWIG_3 = lib.Find<new_Sizei__SWIG_3Delegate>("new_Sizei__SWIG_3");
    _new_Sizei__SWIG_4 = lib.Find<new_Sizei__SWIG_4Delegate>("new_Sizei__SWIG_4");
    _new_Sizei__SWIG_5 = lib.Find<new_Sizei__SWIG_5Delegate>("new_Sizei__SWIG_5");
    _Sizei_Expand = lib.Find<Sizei_ExpandDelegate>("Sizei_Expand");
    _Sizei_Scale = lib.Find<Sizei_ScaleDelegate>("Sizei_Scale");
    _Sizei_Parse = lib.Find<Sizei_ParseDelegate>("Sizei_Parse");
    _Sizei_TryParse = lib.Find<Sizei_TryParseDelegate>("Sizei_TryParse");
    _Sizei_Zero = lib.Find<Sizei_ZeroDelegate>("Sizei_Zero");
    _Sizei_Infinite = lib.Find<Sizei_InfiniteDelegate>("Sizei_Infinite");
    _delete_Sizei = lib.Find<delete_SizeiDelegate>("delete_Sizei");
    _new_Point__SWIG_0 = lib.Find<new_Point__SWIG_0Delegate>("new_Point__SWIG_0");
    _new_Point__SWIG_1 = lib.Find<new_Point__SWIG_1Delegate>("new_Point__SWIG_1");
    _new_Point__SWIG_2 = lib.Find<new_Point__SWIG_2Delegate>("new_Point__SWIG_2");
    _new_Point__SWIG_3 = lib.Find<new_Point__SWIG_3Delegate>("new_Point__SWIG_3");
    _new_Point__SWIG_4 = lib.Find<new_Point__SWIG_4Delegate>("new_Point__SWIG_4");
    _new_Point__SWIG_5 = lib.Find<new_Point__SWIG_5Delegate>("new_Point__SWIG_5");
    _Point_Parse = lib.Find<Point_ParseDelegate>("Point_Parse");
    _Point_TryParse = lib.Find<Point_TryParseDelegate>("Point_TryParse");
    _delete_Point = lib.Find<delete_PointDelegate>("delete_Point");
    _new_Pointi__SWIG_0 = lib.Find<new_Pointi__SWIG_0Delegate>("new_Pointi__SWIG_0");
    _new_Pointi__SWIG_1 = lib.Find<new_Pointi__SWIG_1Delegate>("new_Pointi__SWIG_1");
    _new_Pointi__SWIG_2 = lib.Find<new_Pointi__SWIG_2Delegate>("new_Pointi__SWIG_2");
    _new_Pointi__SWIG_3 = lib.Find<new_Pointi__SWIG_3Delegate>("new_Pointi__SWIG_3");
    _new_Pointi__SWIG_4 = lib.Find<new_Pointi__SWIG_4Delegate>("new_Pointi__SWIG_4");
    _new_Pointi__SWIG_5 = lib.Find<new_Pointi__SWIG_5Delegate>("new_Pointi__SWIG_5");
    _Pointi_Parse = lib.Find<Pointi_ParseDelegate>("Pointi_Parse");
    _Pointi_TryParse = lib.Find<Pointi_TryParseDelegate>("Pointi_TryParse");
    _delete_Pointi = lib.Find<delete_PointiDelegate>("delete_Pointi");
    _Rect_x_set = lib.Find<Rect_x_setDelegate>("Rect_x_set");
    _Rect_x_get = lib.Find<Rect_x_getDelegate>("Rect_x_get");
    _Rect_y_set = lib.Find<Rect_y_setDelegate>("Rect_y_set");
    _Rect_y_get = lib.Find<Rect_y_getDelegate>("Rect_y_get");
    _Rect_width_set = lib.Find<Rect_width_setDelegate>("Rect_width_set");
    _Rect_width_get = lib.Find<Rect_width_getDelegate>("Rect_width_get");
    _Rect_height_set = lib.Find<Rect_height_setDelegate>("Rect_height_set");
    _Rect_height_get = lib.Find<Rect_height_getDelegate>("Rect_height_get");
    _new_Rect__SWIG_0 = lib.Find<new_Rect__SWIG_0Delegate>("new_Rect__SWIG_0");
    _new_Rect__SWIG_1 = lib.Find<new_Rect__SWIG_1Delegate>("new_Rect__SWIG_1");
    _new_Rect__SWIG_2 = lib.Find<new_Rect__SWIG_2Delegate>("new_Rect__SWIG_2");
    _new_Rect__SWIG_3 = lib.Find<new_Rect__SWIG_3Delegate>("new_Rect__SWIG_3");
    _new_Rect__SWIG_4 = lib.Find<new_Rect__SWIG_4Delegate>("new_Rect__SWIG_4");
    _new_Rect__SWIG_5 = lib.Find<new_Rect__SWIG_5Delegate>("new_Rect__SWIG_5");
    _new_Rect__SWIG_6 = lib.Find<new_Rect__SWIG_6Delegate>("new_Rect__SWIG_6");
    _new_Rect__SWIG_7 = lib.Find<new_Rect__SWIG_7Delegate>("new_Rect__SWIG_7");
    _new_Rect__SWIG_8 = lib.Find<new_Rect__SWIG_8Delegate>("new_Rect__SWIG_8");
    _Rect_GetLocation = lib.Find<Rect_GetLocationDelegate>("Rect_GetLocation");
    _Rect_SetLocation = lib.Find<Rect_SetLocationDelegate>("Rect_SetLocation");
    _Rect_GetSize = lib.Find<Rect_GetSizeDelegate>("Rect_GetSize");
    _Rect_SetSize = lib.Find<Rect_SetSizeDelegate>("Rect_SetSize");
    _Rect_GetLeft = lib.Find<Rect_GetLeftDelegate>("Rect_GetLeft");
    _Rect_GetRight = lib.Find<Rect_GetRightDelegate>("Rect_GetRight");
    _Rect_GetTop = lib.Find<Rect_GetTopDelegate>("Rect_GetTop");
    _Rect_GetBottom = lib.Find<Rect_GetBottomDelegate>("Rect_GetBottom");
    _Rect_GetTopLeft = lib.Find<Rect_GetTopLeftDelegate>("Rect_GetTopLeft");
    _Rect_GetTopRight = lib.Find<Rect_GetTopRightDelegate>("Rect_GetTopRight");
    _Rect_GetBottomLeft = lib.Find<Rect_GetBottomLeftDelegate>("Rect_GetBottomLeft");
    _Rect_GetBottomRight = lib.Find<Rect_GetBottomRightDelegate>("Rect_GetBottomRight");
    _Rect_IsEmpty = lib.Find<Rect_IsEmptyDelegate>("Rect_IsEmpty");
    _Rect_Contains__SWIG_0 = lib.Find<Rect_Contains__SWIG_0Delegate>("Rect_Contains__SWIG_0");
    _Rect_Contains__SWIG_1 = lib.Find<Rect_Contains__SWIG_1Delegate>("Rect_Contains__SWIG_1");
    _Rect_Contains__SWIG_2 = lib.Find<Rect_Contains__SWIG_2Delegate>("Rect_Contains__SWIG_2");
    _Rect_Inflate__SWIG_0 = lib.Find<Rect_Inflate__SWIG_0Delegate>("Rect_Inflate__SWIG_0");
    _Rect_Inflate__SWIG_1 = lib.Find<Rect_Inflate__SWIG_1Delegate>("Rect_Inflate__SWIG_1");
    _Rect_Intersect = lib.Find<Rect_IntersectDelegate>("Rect_Intersect");
    _Rect_IntersectsWith = lib.Find<Rect_IntersectsWithDelegate>("Rect_IntersectsWith");
    _Rect_Offset = lib.Find<Rect_OffsetDelegate>("Rect_Offset");
    _Rect_Scale = lib.Find<Rect_ScaleDelegate>("Rect_Scale");
    _Rect_Expand__SWIG_0 = lib.Find<Rect_Expand__SWIG_0Delegate>("Rect_Expand__SWIG_0");
    _Rect_Expand__SWIG_1 = lib.Find<Rect_Expand__SWIG_1Delegate>("Rect_Expand__SWIG_1");
    _Rect_Transform__SWIG_0 = lib.Find<Rect_Transform__SWIG_0Delegate>("Rect_Transform__SWIG_0");
    _Rect_Transform__SWIG_1 = lib.Find<Rect_Transform__SWIG_1Delegate>("Rect_Transform__SWIG_1");
    _Rect_Parse = lib.Find<Rect_ParseDelegate>("Rect_Parse");
    _Rect_TryParse = lib.Find<Rect_TryParseDelegate>("Rect_TryParse");
    _Rect_Empty = lib.Find<Rect_EmptyDelegate>("Rect_Empty");
    _Rect_Infinite = lib.Find<Rect_InfiniteDelegate>("Rect_Infinite");
    _delete_Rect = lib.Find<delete_RectDelegate>("delete_Rect");
    _Recti_x_set = lib.Find<Recti_x_setDelegate>("Recti_x_set");
    _Recti_x_get = lib.Find<Recti_x_getDelegate>("Recti_x_get");
    _Recti_y_set = lib.Find<Recti_y_setDelegate>("Recti_y_set");
    _Recti_y_get = lib.Find<Recti_y_getDelegate>("Recti_y_get");
    _Recti_width_set = lib.Find<Recti_width_setDelegate>("Recti_width_set");
    _Recti_width_get = lib.Find<Recti_width_getDelegate>("Recti_width_get");
    _Recti_height_set = lib.Find<Recti_height_setDelegate>("Recti_height_set");
    _Recti_height_get = lib.Find<Recti_height_getDelegate>("Recti_height_get");
    _new_Recti__SWIG_0 = lib.Find<new_Recti__SWIG_0Delegate>("new_Recti__SWIG_0");
    _new_Recti__SWIG_1 = lib.Find<new_Recti__SWIG_1Delegate>("new_Recti__SWIG_1");
    _new_Recti__SWIG_2 = lib.Find<new_Recti__SWIG_2Delegate>("new_Recti__SWIG_2");
    _new_Recti__SWIG_3 = lib.Find<new_Recti__SWIG_3Delegate>("new_Recti__SWIG_3");
    _new_Recti__SWIG_4 = lib.Find<new_Recti__SWIG_4Delegate>("new_Recti__SWIG_4");
    _new_Recti__SWIG_5 = lib.Find<new_Recti__SWIG_5Delegate>("new_Recti__SWIG_5");
    _new_Recti__SWIG_6 = lib.Find<new_Recti__SWIG_6Delegate>("new_Recti__SWIG_6");
    _new_Recti__SWIG_7 = lib.Find<new_Recti__SWIG_7Delegate>("new_Recti__SWIG_7");
    _Recti_GetLocation = lib.Find<Recti_GetLocationDelegate>("Recti_GetLocation");
    _Recti_SetLocation = lib.Find<Recti_SetLocationDelegate>("Recti_SetLocation");
    _Recti_GetSize = lib.Find<Recti_GetSizeDelegate>("Recti_GetSize");
    _Recti_SetSize = lib.Find<Recti_SetSizeDelegate>("Recti_SetSize");
    _Recti_GetLeft = lib.Find<Recti_GetLeftDelegate>("Recti_GetLeft");
    _Recti_GetRight = lib.Find<Recti_GetRightDelegate>("Recti_GetRight");
    _Recti_GetTop = lib.Find<Recti_GetTopDelegate>("Recti_GetTop");
    _Recti_GetBottom = lib.Find<Recti_GetBottomDelegate>("Recti_GetBottom");
    _Recti_GetTopLeft = lib.Find<Recti_GetTopLeftDelegate>("Recti_GetTopLeft");
    _Recti_GetTopRight = lib.Find<Recti_GetTopRightDelegate>("Recti_GetTopRight");
    _Recti_GetBottomLeft = lib.Find<Recti_GetBottomLeftDelegate>("Recti_GetBottomLeft");
    _Recti_GetBottomRight = lib.Find<Recti_GetBottomRightDelegate>("Recti_GetBottomRight");
    _Recti_IsEmpty = lib.Find<Recti_IsEmptyDelegate>("Recti_IsEmpty");
    _Recti_Contains__SWIG_0 = lib.Find<Recti_Contains__SWIG_0Delegate>("Recti_Contains__SWIG_0");
    _Recti_Contains__SWIG_1 = lib.Find<Recti_Contains__SWIG_1Delegate>("Recti_Contains__SWIG_1");
    _Recti_Contains__SWIG_2 = lib.Find<Recti_Contains__SWIG_2Delegate>("Recti_Contains__SWIG_2");
    _Recti_Inflate__SWIG_0 = lib.Find<Recti_Inflate__SWIG_0Delegate>("Recti_Inflate__SWIG_0");
    _Recti_Inflate__SWIG_1 = lib.Find<Recti_Inflate__SWIG_1Delegate>("Recti_Inflate__SWIG_1");
    _Recti_Intersect = lib.Find<Recti_IntersectDelegate>("Recti_Intersect");
    _Recti_IntersectsWith = lib.Find<Recti_IntersectsWithDelegate>("Recti_IntersectsWith");
    _Recti_Offset = lib.Find<Recti_OffsetDelegate>("Recti_Offset");
    _Recti_Scale = lib.Find<Recti_ScaleDelegate>("Recti_Scale");
    _Recti_Expand__SWIG_0 = lib.Find<Recti_Expand__SWIG_0Delegate>("Recti_Expand__SWIG_0");
    _Recti_Expand__SWIG_1 = lib.Find<Recti_Expand__SWIG_1Delegate>("Recti_Expand__SWIG_1");
    _Recti_Parse = lib.Find<Recti_ParseDelegate>("Recti_Parse");
    _Recti_TryParse = lib.Find<Recti_TryParseDelegate>("Recti_TryParse");
    _Recti_Empty = lib.Find<Recti_EmptyDelegate>("Recti_Empty");
    _Recti_Infinite = lib.Find<Recti_InfiniteDelegate>("Recti_Infinite");
    _delete_Recti = lib.Find<delete_RectiDelegate>("delete_Recti");
    _Thickness_left_set = lib.Find<Thickness_left_setDelegate>("Thickness_left_set");
    _Thickness_left_get = lib.Find<Thickness_left_getDelegate>("Thickness_left_get");
    _Thickness_top_set = lib.Find<Thickness_top_setDelegate>("Thickness_top_set");
    _Thickness_top_get = lib.Find<Thickness_top_getDelegate>("Thickness_top_get");
    _Thickness_right_set = lib.Find<Thickness_right_setDelegate>("Thickness_right_set");
    _Thickness_right_get = lib.Find<Thickness_right_getDelegate>("Thickness_right_get");
    _Thickness_bottom_set = lib.Find<Thickness_bottom_setDelegate>("Thickness_bottom_set");
    _Thickness_bottom_get = lib.Find<Thickness_bottom_getDelegate>("Thickness_bottom_get");
    _new_Thickness__SWIG_0 = lib.Find<new_Thickness__SWIG_0Delegate>("new_Thickness__SWIG_0");
    _new_Thickness__SWIG_1 = lib.Find<new_Thickness__SWIG_1Delegate>("new_Thickness__SWIG_1");
    _new_Thickness__SWIG_2 = lib.Find<new_Thickness__SWIG_2Delegate>("new_Thickness__SWIG_2");
    _new_Thickness__SWIG_3 = lib.Find<new_Thickness__SWIG_3Delegate>("new_Thickness__SWIG_3");
    _Thickness_Parse = lib.Find<Thickness_ParseDelegate>("Thickness_Parse");
    _Thickness_TryParse = lib.Find<Thickness_TryParseDelegate>("Thickness_TryParse");
    _delete_Thickness = lib.Find<delete_ThicknessDelegate>("delete_Thickness");
    _CornerRadius_topLeft_set = lib.Find<CornerRadius_topLeft_setDelegate>("CornerRadius_topLeft_set");
    _CornerRadius_topLeft_get = lib.Find<CornerRadius_topLeft_getDelegate>("CornerRadius_topLeft_get");
    _CornerRadius_topRight_set = lib.Find<CornerRadius_topRight_setDelegate>("CornerRadius_topRight_set");
    _CornerRadius_topRight_get = lib.Find<CornerRadius_topRight_getDelegate>("CornerRadius_topRight_get");
    _CornerRadius_bottomRight_set = lib.Find<CornerRadius_bottomRight_setDelegate>("CornerRadius_bottomRight_set");
    _CornerRadius_bottomRight_get = lib.Find<CornerRadius_bottomRight_getDelegate>("CornerRadius_bottomRight_get");
    _CornerRadius_bottomLeft_set = lib.Find<CornerRadius_bottomLeft_setDelegate>("CornerRadius_bottomLeft_set");
    _CornerRadius_bottomLeft_get = lib.Find<CornerRadius_bottomLeft_getDelegate>("CornerRadius_bottomLeft_get");
    _new_CornerRadius__SWIG_0 = lib.Find<new_CornerRadius__SWIG_0Delegate>("new_CornerRadius__SWIG_0");
    _new_CornerRadius__SWIG_1 = lib.Find<new_CornerRadius__SWIG_1Delegate>("new_CornerRadius__SWIG_1");
    _new_CornerRadius__SWIG_2 = lib.Find<new_CornerRadius__SWIG_2Delegate>("new_CornerRadius__SWIG_2");
    _new_CornerRadius__SWIG_3 = lib.Find<new_CornerRadius__SWIG_3Delegate>("new_CornerRadius__SWIG_3");
    _CornerRadius_Parse = lib.Find<CornerRadius_ParseDelegate>("CornerRadius_Parse");
    _CornerRadius_TryParse = lib.Find<CornerRadius_TryParseDelegate>("CornerRadius_TryParse");
    _delete_CornerRadius = lib.Find<delete_CornerRadiusDelegate>("delete_CornerRadius");
    _delete_DependencyObject = lib.Find<delete_DependencyObjectDelegate>("delete_DependencyObject");
    _DependencyObject_GetValueProvider = lib.Find<DependencyObject_GetValueProviderDelegate>("DependencyObject_GetValueProvider");
    _DependencyObject_ClearLocalValue = lib.Find<DependencyObject_ClearLocalValueDelegate>("DependencyObject_ClearLocalValue");
    _DependencyObject_InvalidateProperty__SWIG_0 = lib.Find<DependencyObject_InvalidateProperty__SWIG_0Delegate>("DependencyObject_InvalidateProperty__SWIG_0");
    _DependencyObject_InvalidateProperty__SWIG_1 = lib.Find<DependencyObject_InvalidateProperty__SWIG_1Delegate>("DependencyObject_InvalidateProperty__SWIG_1");
    _DependencyObject_ClearAnimation = lib.Find<DependencyObject_ClearAnimationDelegate>("DependencyObject_ClearAnimation");
    _DependencyObject_CoerceValue = lib.Find<DependencyObject_CoerceValueDelegate>("DependencyObject_CoerceValue");
    _DependencyObject_IsCached = lib.Find<DependencyObject_IsCachedDelegate>("DependencyObject_IsCached");
    _DependencyObject_HasAnimatedProperties = lib.Find<DependencyObject_HasAnimatedPropertiesDelegate>("DependencyObject_HasAnimatedProperties");
    _DependencyPropertyChangedEventArgs_prop_set = lib.Find<DependencyPropertyChangedEventArgs_prop_setDelegate>("DependencyPropertyChangedEventArgs_prop_set");
    _DependencyPropertyChangedEventArgs_prop_get = lib.Find<DependencyPropertyChangedEventArgs_prop_getDelegate>("DependencyPropertyChangedEventArgs_prop_get");
    _DependencyPropertyChangedEventArgs_oldValue_set = lib.Find<DependencyPropertyChangedEventArgs_oldValue_setDelegate>("DependencyPropertyChangedEventArgs_oldValue_set");
    _DependencyPropertyChangedEventArgs_oldValue_get = lib.Find<DependencyPropertyChangedEventArgs_oldValue_getDelegate>("DependencyPropertyChangedEventArgs_oldValue_get");
    _DependencyPropertyChangedEventArgs_newValue_set = lib.Find<DependencyPropertyChangedEventArgs_newValue_setDelegate>("DependencyPropertyChangedEventArgs_newValue_set");
    _DependencyPropertyChangedEventArgs_newValue_get = lib.Find<DependencyPropertyChangedEventArgs_newValue_getDelegate>("DependencyPropertyChangedEventArgs_newValue_get");
    _DependencyProperty_GetUnsetValue = lib.Find<DependencyProperty_GetUnsetValueDelegate>("DependencyProperty_GetUnsetValue");
    _DependencyProperty_GetName = lib.Find<DependencyProperty_GetNameDelegate>("DependencyProperty_GetName");
    _DependencyProperty_GetOwnerType = lib.Find<DependencyProperty_GetOwnerTypeDelegate>("DependencyProperty_GetOwnerType");
    _DependencyProperty_GetDefaultValue = lib.Find<DependencyProperty_GetDefaultValueDelegate>("DependencyProperty_GetDefaultValue");
    _DependencyProperty_GetDefaultValueObject = lib.Find<DependencyProperty_GetDefaultValueObjectDelegate>("DependencyProperty_GetDefaultValueObject");
    _DependencyProperty_IsReadOnly = lib.Find<DependencyProperty_IsReadOnlyDelegate>("DependencyProperty_IsReadOnly");
    _DependencyProperty_GetSize = lib.Find<DependencyProperty_GetSizeDelegate>("DependencyProperty_GetSize");
    _DependencyProperty_GetMetaData = lib.Find<DependencyProperty_GetMetaDataDelegate>("DependencyProperty_GetMetaData");
    _DependencyProperty_OverrideMetadata = lib.Find<DependencyProperty_OverrideMetadataDelegate>("DependencyProperty_OverrideMetadata");
    _DependencyProperty_GetTypeProperty = lib.Find<DependencyProperty_GetTypePropertyDelegate>("DependencyProperty_GetTypeProperty");
    _DependencyProperty_IsSameValue__SWIG_0 = lib.Find<DependencyProperty_IsSameValue__SWIG_0Delegate>("DependencyProperty_IsSameValue__SWIG_0");
    _DependencyProperty_IsSameValue__SWIG_1 = lib.Find<DependencyProperty_IsSameValue__SWIG_1Delegate>("DependencyProperty_IsSameValue__SWIG_1");
    _DependencyProperty_IsSameValue__SWIG_2 = lib.Find<DependencyProperty_IsSameValue__SWIG_2Delegate>("DependencyProperty_IsSameValue__SWIG_2");
    _DependencyProperty_ConstructValue = lib.Find<DependencyProperty_ConstructValueDelegate>("DependencyProperty_ConstructValue");
    _DependencyProperty_DestroyValue = lib.Find<DependencyProperty_DestroyValueDelegate>("DependencyProperty_DestroyValue");
    _DependencyProperty_CopyValue = lib.Find<DependencyProperty_CopyValueDelegate>("DependencyProperty_CopyValue");
    _DependencyProperty_GetValue__SWIG_0 = lib.Find<DependencyProperty_GetValue__SWIG_0Delegate>("DependencyProperty_GetValue__SWIG_0");
    _DependencyProperty_GetValueObject__SWIG_0 = lib.Find<DependencyProperty_GetValueObject__SWIG_0Delegate>("DependencyProperty_GetValueObject__SWIG_0");
    _DependencyProperty_GetValue__SWIG_1 = lib.Find<DependencyProperty_GetValue__SWIG_1Delegate>("DependencyProperty_GetValue__SWIG_1");
    _DependencyProperty_SetValue = lib.Find<DependencyProperty_SetValueDelegate>("DependencyProperty_SetValue");
    _DependencyProperty_GetValueObject__SWIG_1 = lib.Find<DependencyProperty_GetValueObject__SWIG_1Delegate>("DependencyProperty_GetValueObject__SWIG_1");
    _DependencyProperty_SetValueObject = lib.Find<DependencyProperty_SetValueObjectDelegate>("DependencyProperty_SetValueObject");
    _DependencyProperty_SetCurrentValueObject = lib.Find<DependencyProperty_SetCurrentValueObjectDelegate>("DependencyProperty_SetCurrentValueObject");
    _DependencyProperty_GetBaseValueObject = lib.Find<DependencyProperty_GetBaseValueObjectDelegate>("DependencyProperty_GetBaseValueObject");
    _DependencyProperty_SetAnimationObject = lib.Find<DependencyProperty_SetAnimationObjectDelegate>("DependencyProperty_SetAnimationObject");
    _DependencyProperty_ClearAnimation = lib.Find<DependencyProperty_ClearAnimationDelegate>("DependencyProperty_ClearAnimation");
    _DependencyProperty_CoerceValue = lib.Find<DependencyProperty_CoerceValueDelegate>("DependencyProperty_CoerceValue");
    _DependencyProperty_GetSerializer = lib.Find<DependencyProperty_GetSerializerDelegate>("DependencyProperty_GetSerializer");
    _DependencyProperty_SetOwnerType = lib.Find<DependencyProperty_SetOwnerTypeDelegate>("DependencyProperty_SetOwnerType");
    _DependencyProperty_SetIsReadOnly = lib.Find<DependencyProperty_SetIsReadOnlyDelegate>("DependencyProperty_SetIsReadOnly");
    _DependencyProperty_AddMetaData__SWIG_0 = lib.Find<DependencyProperty_AddMetaData__SWIG_0Delegate>("DependencyProperty_AddMetaData__SWIG_0");
    _DependencyProperty_AddMetaData__SWIG_1 = lib.Find<DependencyProperty_AddMetaData__SWIG_1Delegate>("DependencyProperty_AddMetaData__SWIG_1");
    _DependencyProperty_SetValidateValueDelegate = lib.Find<DependencyProperty_SetValidateValueDelegateDelegate>("DependencyProperty_SetValidateValueDelegate");
    _DependencyProperty_GetValidateValueDelegate = lib.Find<DependencyProperty_GetValidateValueDelegateDelegate>("DependencyProperty_GetValidateValueDelegate");
    _SerializePropertyHelper_dp_set = lib.Find<SerializePropertyHelper_dp_setDelegate>("SerializePropertyHelper_dp_set");
    _SerializePropertyHelper_dp_get = lib.Find<SerializePropertyHelper_dp_getDelegate>("SerializePropertyHelper_dp_get");
    _new_SerializePropertyHelper__SWIG_0 = lib.Find<new_SerializePropertyHelper__SWIG_0Delegate>("new_SerializePropertyHelper__SWIG_0");
    _new_SerializePropertyHelper__SWIG_1 = lib.Find<new_SerializePropertyHelper__SWIG_1Delegate>("new_SerializePropertyHelper__SWIG_1");
    _delete_SerializePropertyHelper = lib.Find<delete_SerializePropertyHelperDelegate>("delete_SerializePropertyHelper");
    _FindDependencyProperty = lib.Find<FindDependencyPropertyDelegate>("FindDependencyProperty");
    _new_DependencyData = lib.Find<new_DependencyDataDelegate>("new_DependencyData");
    _DependencyData_FindProperty = lib.Find<DependencyData_FindPropertyDelegate>("DependencyData_FindProperty");
    _DependencyData_EnumProperties = lib.Find<DependencyData_EnumPropertiesDelegate>("DependencyData_EnumProperties");
    _delete_DependencyData = lib.Find<delete_DependencyDataDelegate>("delete_DependencyData");
    _delete_Freezable = lib.Find<delete_FreezableDelegate>("delete_Freezable");
    _Freezable_CanFreeze = lib.Find<Freezable_CanFreezeDelegate>("Freezable_CanFreeze");
    _Freezable_IsFrozen = lib.Find<Freezable_IsFrozenDelegate>("Freezable_IsFrozen");
    _Freezable_Freeze = lib.Find<Freezable_FreezeDelegate>("Freezable_Freeze");
    _Freezable_Clone = lib.Find<Freezable_CloneDelegate>("Freezable_Clone");
    _Freezable_CloneCurrentValue = lib.Find<Freezable_CloneCurrentValueDelegate>("Freezable_CloneCurrentValue");
    _Freezable_GetAsFrozen = lib.Find<Freezable_GetAsFrozenDelegate>("Freezable_GetAsFrozen");
    _Freezable_GetCurrentValueAsFrozen = lib.Find<Freezable_GetCurrentValueAsFrozenDelegate>("Freezable_GetCurrentValueAsFrozen");
    _Freezable_Changed = lib.Find<Freezable_ChangedDelegate>("Freezable_Changed");
    _delete_BaseExpression = lib.Find<delete_BaseExpressionDelegate>("delete_BaseExpression");
    _BaseExpression_GetEvaluateBehavior = lib.Find<BaseExpression_GetEvaluateBehaviorDelegate>("BaseExpression_GetEvaluateBehavior");
    _BaseExpression_Evaluate = lib.Find<BaseExpression_EvaluateDelegate>("BaseExpression_Evaluate");
    _BaseExpression_Reapply = lib.Find<BaseExpression_ReapplyDelegate>("BaseExpression_Reapply");
    _BaseExpression_BeforeSet = lib.Find<BaseExpression_BeforeSetDelegate>("BaseExpression_BeforeSet");
    _BaseExpression_AfterSet = lib.Find<BaseExpression_AfterSetDelegate>("BaseExpression_AfterSet");
    _PropertyMetadata_HasDefaultValue = lib.Find<PropertyMetadata_HasDefaultValueDelegate>("PropertyMetadata_HasDefaultValue");
    _PropertyMetadata_GetDefaultValue = lib.Find<PropertyMetadata_GetDefaultValueDelegate>("PropertyMetadata_GetDefaultValue");
    _PropertyMetadata_HasCoerceDelegate = lib.Find<PropertyMetadata_HasCoerceDelegateDelegate>("PropertyMetadata_HasCoerceDelegate");
    _PropertyMetadata_GetCoerceDelegate = lib.Find<PropertyMetadata_GetCoerceDelegateDelegate>("PropertyMetadata_GetCoerceDelegate");
    _PropertyMetadata_HasPropertyChangedDelegate = lib.Find<PropertyMetadata_HasPropertyChangedDelegateDelegate>("PropertyMetadata_HasPropertyChangedDelegate");
    _PropertyMetadata_GetPropertyChangedDelegate = lib.Find<PropertyMetadata_GetPropertyChangedDelegateDelegate>("PropertyMetadata_GetPropertyChangedDelegate");
    _PropertyMetadata_IsUncached = lib.Find<PropertyMetadata_IsUncachedDelegate>("PropertyMetadata_IsUncached");
    _PropertyMetadata_Uncached = lib.Find<PropertyMetadata_UncachedDelegate>("PropertyMetadata_Uncached");
    _PropertyMetadata_SetAsUncached = lib.Find<PropertyMetadata_SetAsUncachedDelegate>("PropertyMetadata_SetAsUncached");
    _PropertyMetadata_ClearInheritedValues = lib.Find<PropertyMetadata_ClearInheritedValuesDelegate>("PropertyMetadata_ClearInheritedValues");
    _PropertyMetadata_Merge = lib.Find<PropertyMetadata_MergeDelegate>("PropertyMetadata_Merge");
    _new_UIPropertyMetadata__SWIG_0 = lib.Find<new_UIPropertyMetadata__SWIG_0Delegate>("new_UIPropertyMetadata__SWIG_0");
    _new_UIPropertyMetadata__SWIG_1 = lib.Find<new_UIPropertyMetadata__SWIG_1Delegate>("new_UIPropertyMetadata__SWIG_1");
    _new_UIPropertyMetadata__SWIG_2 = lib.Find<new_UIPropertyMetadata__SWIG_2Delegate>("new_UIPropertyMetadata__SWIG_2");
    _new_UIPropertyMetadata__SWIG_3 = lib.Find<new_UIPropertyMetadata__SWIG_3Delegate>("new_UIPropertyMetadata__SWIG_3");
    _new_UIPropertyMetadata__SWIG_4 = lib.Find<new_UIPropertyMetadata__SWIG_4Delegate>("new_UIPropertyMetadata__SWIG_4");
    _new_UIPropertyMetadata__SWIG_5 = lib.Find<new_UIPropertyMetadata__SWIG_5Delegate>("new_UIPropertyMetadata__SWIG_5");
    _new_UIPropertyMetadata__SWIG_6 = lib.Find<new_UIPropertyMetadata__SWIG_6Delegate>("new_UIPropertyMetadata__SWIG_6");
    _delete_UIPropertyMetadata = lib.Find<delete_UIPropertyMetadataDelegate>("delete_UIPropertyMetadata");
    _new_FrameworkPropertyMetadata__SWIG_0 = lib.Find<new_FrameworkPropertyMetadata__SWIG_0Delegate>("new_FrameworkPropertyMetadata__SWIG_0");
    _new_FrameworkPropertyMetadata__SWIG_1 = lib.Find<new_FrameworkPropertyMetadata__SWIG_1Delegate>("new_FrameworkPropertyMetadata__SWIG_1");
    _new_FrameworkPropertyMetadata__SWIG_2 = lib.Find<new_FrameworkPropertyMetadata__SWIG_2Delegate>("new_FrameworkPropertyMetadata__SWIG_2");
    _new_FrameworkPropertyMetadata__SWIG_3 = lib.Find<new_FrameworkPropertyMetadata__SWIG_3Delegate>("new_FrameworkPropertyMetadata__SWIG_3");
    _new_FrameworkPropertyMetadata__SWIG_4 = lib.Find<new_FrameworkPropertyMetadata__SWIG_4Delegate>("new_FrameworkPropertyMetadata__SWIG_4");
    _new_FrameworkPropertyMetadata__SWIG_5 = lib.Find<new_FrameworkPropertyMetadata__SWIG_5Delegate>("new_FrameworkPropertyMetadata__SWIG_5");
    _new_FrameworkPropertyMetadata__SWIG_6 = lib.Find<new_FrameworkPropertyMetadata__SWIG_6Delegate>("new_FrameworkPropertyMetadata__SWIG_6");
    _new_FrameworkPropertyMetadata__SWIG_7 = lib.Find<new_FrameworkPropertyMetadata__SWIG_7Delegate>("new_FrameworkPropertyMetadata__SWIG_7");
    _new_FrameworkPropertyMetadata__SWIG_8 = lib.Find<new_FrameworkPropertyMetadata__SWIG_8Delegate>("new_FrameworkPropertyMetadata__SWIG_8");
    _new_FrameworkPropertyMetadata__SWIG_9 = lib.Find<new_FrameworkPropertyMetadata__SWIG_9Delegate>("new_FrameworkPropertyMetadata__SWIG_9");
    _FrameworkPropertyMetadata_AffectsMeasure = lib.Find<FrameworkPropertyMetadata_AffectsMeasureDelegate>("FrameworkPropertyMetadata_AffectsMeasure");
    _FrameworkPropertyMetadata_AffectsArrange = lib.Find<FrameworkPropertyMetadata_AffectsArrangeDelegate>("FrameworkPropertyMetadata_AffectsArrange");
    _FrameworkPropertyMetadata_AffectsParentMeasure = lib.Find<FrameworkPropertyMetadata_AffectsParentMeasureDelegate>("FrameworkPropertyMetadata_AffectsParentMeasure");
    _FrameworkPropertyMetadata_AffectsParentArrange = lib.Find<FrameworkPropertyMetadata_AffectsParentArrangeDelegate>("FrameworkPropertyMetadata_AffectsParentArrange");
    _FrameworkPropertyMetadata_AffectsRender = lib.Find<FrameworkPropertyMetadata_AffectsRenderDelegate>("FrameworkPropertyMetadata_AffectsRender");
    _FrameworkPropertyMetadata_Inherits = lib.Find<FrameworkPropertyMetadata_InheritsDelegate>("FrameworkPropertyMetadata_Inherits");
    _FrameworkPropertyMetadata_OverridesInheritanceBehavior = lib.Find<FrameworkPropertyMetadata_OverridesInheritanceBehaviorDelegate>("FrameworkPropertyMetadata_OverridesInheritanceBehavior");
    _FrameworkPropertyMetadata_IsNotDataBindable = lib.Find<FrameworkPropertyMetadata_IsNotDataBindableDelegate>("FrameworkPropertyMetadata_IsNotDataBindable");
    _FrameworkPropertyMetadata_BindsTwoWayByDefault = lib.Find<FrameworkPropertyMetadata_BindsTwoWayByDefaultDelegate>("FrameworkPropertyMetadata_BindsTwoWayByDefault");
    _FrameworkPropertyMetadata_DefaultUpdateSourceTrigger = lib.Find<FrameworkPropertyMetadata_DefaultUpdateSourceTriggerDelegate>("FrameworkPropertyMetadata_DefaultUpdateSourceTrigger");
    _FrameworkPropertyMetadata_SubPropertiesDoNotAffectRender = lib.Find<FrameworkPropertyMetadata_SubPropertiesDoNotAffectRenderDelegate>("FrameworkPropertyMetadata_SubPropertiesDoNotAffectRender");
    _FrameworkPropertyMetadata_ClearInheritedValues = lib.Find<FrameworkPropertyMetadata_ClearInheritedValuesDelegate>("FrameworkPropertyMetadata_ClearInheritedValues");
    _FrameworkPropertyMetadata_Merge = lib.Find<FrameworkPropertyMetadata_MergeDelegate>("FrameworkPropertyMetadata_Merge");
    _delete_FrameworkPropertyMetadata = lib.Find<delete_FrameworkPropertyMetadataDelegate>("delete_FrameworkPropertyMetadata");
    _ObjectWithNameScope__object_set = lib.Find<ObjectWithNameScope__object_setDelegate>("ObjectWithNameScope__object_set");
    _ObjectWithNameScope__object_get = lib.Find<ObjectWithNameScope__object_getDelegate>("ObjectWithNameScope__object_get");
    _ObjectWithNameScope_scope_set = lib.Find<ObjectWithNameScope_scope_setDelegate>("ObjectWithNameScope_scope_set");
    _ObjectWithNameScope_scope_get = lib.Find<ObjectWithNameScope_scope_getDelegate>("ObjectWithNameScope_scope_get");
    _new_ObjectWithNameScope = lib.Find<new_ObjectWithNameScopeDelegate>("new_ObjectWithNameScope");
    _delete_ObjectWithNameScope = lib.Find<delete_ObjectWithNameScopeDelegate>("delete_ObjectWithNameScope");
    _NameScopeChangedArgs_action_set = lib.Find<NameScopeChangedArgs_action_setDelegate>("NameScopeChangedArgs_action_set");
    _NameScopeChangedArgs_action_get = lib.Find<NameScopeChangedArgs_action_getDelegate>("NameScopeChangedArgs_action_get");
    _NameScopeChangedArgs_name_set = lib.Find<NameScopeChangedArgs_name_setDelegate>("NameScopeChangedArgs_name_set");
    _NameScopeChangedArgs_name_get = lib.Find<NameScopeChangedArgs_name_getDelegate>("NameScopeChangedArgs_name_get");
    _NameScopeChangedArgs_newElement_set = lib.Find<NameScopeChangedArgs_newElement_setDelegate>("NameScopeChangedArgs_newElement_set");
    _NameScopeChangedArgs_newElement_get = lib.Find<NameScopeChangedArgs_newElement_getDelegate>("NameScopeChangedArgs_newElement_get");
    _NameScopeChangedArgs_oldElement_set = lib.Find<NameScopeChangedArgs_oldElement_setDelegate>("NameScopeChangedArgs_oldElement_set");
    _NameScopeChangedArgs_oldElement_get = lib.Find<NameScopeChangedArgs_oldElement_getDelegate>("NameScopeChangedArgs_oldElement_get");
    _new_NameScopeChangedArgs = lib.Find<new_NameScopeChangedArgsDelegate>("new_NameScopeChangedArgs");
    _delete_NameScopeChangedArgs = lib.Find<delete_NameScopeChangedArgsDelegate>("delete_NameScopeChangedArgs");
    _BaseNullable_HasValue = lib.Find<BaseNullable_HasValueDelegate>("BaseNullable_HasValue");
    _delete_BaseNullable = lib.Find<delete_BaseNullableDelegate>("delete_BaseNullable");
    _HitTestResult_visualHit_set = lib.Find<HitTestResult_visualHit_setDelegate>("HitTestResult_visualHit_set");
    _HitTestResult_visualHit_get = lib.Find<HitTestResult_visualHit_getDelegate>("HitTestResult_visualHit_get");
    _new_HitTestResult = lib.Find<new_HitTestResultDelegate>("new_HitTestResult");
    _delete_HitTestResult = lib.Find<delete_HitTestResultDelegate>("delete_HitTestResult");
    _delete_Visual = lib.Find<delete_VisualDelegate>("delete_Visual");
    _Visual_IsAncestorOf = lib.Find<Visual_IsAncestorOfDelegate>("Visual_IsAncestorOf");
    _Visual_IsDescendantOf = lib.Find<Visual_IsDescendantOfDelegate>("Visual_IsDescendantOf");
    _Visual_FindCommonVisualAncestor = lib.Find<Visual_FindCommonVisualAncestorDelegate>("Visual_FindCommonVisualAncestor");
    _Visual_PointFromScreen = lib.Find<Visual_PointFromScreenDelegate>("Visual_PointFromScreen");
    _Visual_PointToScreen = lib.Find<Visual_PointToScreenDelegate>("Visual_PointToScreen");
    _Visual_TransformToAncestor = lib.Find<Visual_TransformToAncestorDelegate>("Visual_TransformToAncestor");
    _Visual_TransformToDescendant = lib.Find<Visual_TransformToDescendantDelegate>("Visual_TransformToDescendant");
    _Visual_TransformToVisual = lib.Find<Visual_TransformToVisualDelegate>("Visual_TransformToVisual");
    _Visual_CollectStats = lib.Find<Visual_CollectStatsDelegate>("Visual_CollectStats");
    _Visual_DrawWireframe = lib.Find<Visual_DrawWireframeDelegate>("Visual_DrawWireframe");
    _CollectionChangedArgs_action_set = lib.Find<CollectionChangedArgs_action_setDelegate>("CollectionChangedArgs_action_set");
    _CollectionChangedArgs_action_get = lib.Find<CollectionChangedArgs_action_getDelegate>("CollectionChangedArgs_action_get");
    _CollectionChangedArgs_oldIndex_set = lib.Find<CollectionChangedArgs_oldIndex_setDelegate>("CollectionChangedArgs_oldIndex_set");
    _CollectionChangedArgs_oldIndex_get = lib.Find<CollectionChangedArgs_oldIndex_getDelegate>("CollectionChangedArgs_oldIndex_get");
    _CollectionChangedArgs_newIndex_set = lib.Find<CollectionChangedArgs_newIndex_setDelegate>("CollectionChangedArgs_newIndex_set");
    _CollectionChangedArgs_newIndex_get = lib.Find<CollectionChangedArgs_newIndex_getDelegate>("CollectionChangedArgs_newIndex_get");
    _CollectionChangedArgs_oldValue_set = lib.Find<CollectionChangedArgs_oldValue_setDelegate>("CollectionChangedArgs_oldValue_set");
    _CollectionChangedArgs_oldValue_get = lib.Find<CollectionChangedArgs_oldValue_getDelegate>("CollectionChangedArgs_oldValue_get");
    _CollectionChangedArgs_newValue_set = lib.Find<CollectionChangedArgs_newValue_setDelegate>("CollectionChangedArgs_newValue_set");
    _CollectionChangedArgs_newValue_get = lib.Find<CollectionChangedArgs_newValue_getDelegate>("CollectionChangedArgs_newValue_get");
    _new_CollectionChangedArgs = lib.Find<new_CollectionChangedArgsDelegate>("new_CollectionChangedArgs");
    _delete_CollectionChangedArgs = lib.Find<delete_CollectionChangedArgsDelegate>("delete_CollectionChangedArgs");
    _new_Collection__SWIG_0 = lib.Find<new_Collection__SWIG_0Delegate>("new_Collection__SWIG_0");
    _new_Collection__SWIG_1 = lib.Find<new_Collection__SWIG_1Delegate>("new_Collection__SWIG_1");
    _delete_Collection = lib.Find<delete_CollectionDelegate>("delete_Collection");
    _Collection_Count = lib.Find<Collection_CountDelegate>("Collection_Count");
    _Collection_Get = lib.Find<Collection_GetDelegate>("Collection_Get");
    _Collection_Set__SWIG_0 = lib.Find<Collection_Set__SWIG_0Delegate>("Collection_Set__SWIG_0");
    _Collection_Set__SWIG_1 = lib.Find<Collection_Set__SWIG_1Delegate>("Collection_Set__SWIG_1");
    _Collection_Add__SWIG_0 = lib.Find<Collection_Add__SWIG_0Delegate>("Collection_Add__SWIG_0");
    _Collection_Add__SWIG_1 = lib.Find<Collection_Add__SWIG_1Delegate>("Collection_Add__SWIG_1");
    _Collection_Clear = lib.Find<Collection_ClearDelegate>("Collection_Clear");
    _Collection_Contains = lib.Find<Collection_ContainsDelegate>("Collection_Contains");
    _Collection_IndexOf = lib.Find<Collection_IndexOfDelegate>("Collection_IndexOf");
    _Collection_Insert__SWIG_0 = lib.Find<Collection_Insert__SWIG_0Delegate>("Collection_Insert__SWIG_0");
    _Collection_Insert__SWIG_1 = lib.Find<Collection_Insert__SWIG_1Delegate>("Collection_Insert__SWIG_1");
    _Collection_Remove = lib.Find<Collection_RemoveDelegate>("Collection_Remove");
    _Collection_RemoveAt = lib.Find<Collection_RemoveAtDelegate>("Collection_RemoveAt");
    _Collection_GetIterator = lib.Find<Collection_GetIteratorDelegate>("Collection_GetIterator");
    _Collection_CollectionChanged = lib.Find<Collection_CollectionChangedDelegate>("Collection_CollectionChanged");
    _Collection_IsInitialized = lib.Find<Collection_IsInitializedDelegate>("Collection_IsInitialized");
    _Collection_Init = lib.Find<Collection_InitDelegate>("Collection_Init");
    _IdOfTypedCollection = lib.Find<IdOfTypedCollectionDelegate>("IdOfTypedCollection");
    _new_VisualCollection__SWIG_0 = lib.Find<new_VisualCollection__SWIG_0Delegate>("new_VisualCollection__SWIG_0");
    _new_VisualCollection__SWIG_1 = lib.Find<new_VisualCollection__SWIG_1Delegate>("new_VisualCollection__SWIG_1");
    _delete_VisualCollection = lib.Find<delete_VisualCollectionDelegate>("delete_VisualCollection");
    _VisualCollection_SetVisualParent = lib.Find<VisualCollection_SetVisualParentDelegate>("VisualCollection_SetVisualParent");
    _new_UIElement = lib.Find<new_UIElementDelegate>("new_UIElement");
    _delete_UIElement = lib.Find<delete_UIElementDelegate>("delete_UIElement");
    _UIElement_GetAllowDrop = lib.Find<UIElement_GetAllowDropDelegate>("UIElement_GetAllowDrop");
    _UIElement_SetAllowDrop = lib.Find<UIElement_SetAllowDropDelegate>("UIElement_SetAllowDrop");
    _UIElement_GetClip = lib.Find<UIElement_GetClipDelegate>("UIElement_GetClip");
    _UIElement_SetClip = lib.Find<UIElement_SetClipDelegate>("UIElement_SetClip");
    _UIElement_GetClipToBounds = lib.Find<UIElement_GetClipToBoundsDelegate>("UIElement_GetClipToBounds");
    _UIElement_SetClipToBounds = lib.Find<UIElement_SetClipToBoundsDelegate>("UIElement_SetClipToBounds");
    _UIElement_GetFocusable = lib.Find<UIElement_GetFocusableDelegate>("UIElement_GetFocusable");
    _UIElement_SetFocusable = lib.Find<UIElement_SetFocusableDelegate>("UIElement_SetFocusable");
    _UIElement_GetIsEnabled = lib.Find<UIElement_GetIsEnabledDelegate>("UIElement_GetIsEnabled");
    _UIElement_SetIsEnabled = lib.Find<UIElement_SetIsEnabledDelegate>("UIElement_SetIsEnabled");
    _UIElement_GetIsFocused = lib.Find<UIElement_GetIsFocusedDelegate>("UIElement_GetIsFocused");
    _UIElement_GetIsHitTestVisible = lib.Find<UIElement_GetIsHitTestVisibleDelegate>("UIElement_GetIsHitTestVisible");
    _UIElement_SetIsHitTestVisible = lib.Find<UIElement_SetIsHitTestVisibleDelegate>("UIElement_SetIsHitTestVisible");
    _UIElement_GetIsKeyboardFocused = lib.Find<UIElement_GetIsKeyboardFocusedDelegate>("UIElement_GetIsKeyboardFocused");
    _UIElement_GetIsKeyboardFocusWithin = lib.Find<UIElement_GetIsKeyboardFocusWithinDelegate>("UIElement_GetIsKeyboardFocusWithin");
    _UIElement_GetIsMouseCaptured = lib.Find<UIElement_GetIsMouseCapturedDelegate>("UIElement_GetIsMouseCaptured");
    _UIElement_GetIsMouseCaptureWithin = lib.Find<UIElement_GetIsMouseCaptureWithinDelegate>("UIElement_GetIsMouseCaptureWithin");
    _UIElement_GetIsMouseDirectlyOver = lib.Find<UIElement_GetIsMouseDirectlyOverDelegate>("UIElement_GetIsMouseDirectlyOver");
    _UIElement_GetIsMouseOver = lib.Find<UIElement_GetIsMouseOverDelegate>("UIElement_GetIsMouseOver");
    _UIElement_GetIsVisible = lib.Find<UIElement_GetIsVisibleDelegate>("UIElement_GetIsVisible");
    _UIElement_GetOpacityMask = lib.Find<UIElement_GetOpacityMaskDelegate>("UIElement_GetOpacityMask");
    _UIElement_SetOpacityMask = lib.Find<UIElement_SetOpacityMaskDelegate>("UIElement_SetOpacityMask");
    _UIElement_GetOpacity = lib.Find<UIElement_GetOpacityDelegate>("UIElement_GetOpacity");
    _UIElement_SetOpacity = lib.Find<UIElement_SetOpacityDelegate>("UIElement_SetOpacity");
    _UIElement_GetProjection = lib.Find<UIElement_GetProjectionDelegate>("UIElement_GetProjection");
    _UIElement_SetProjection = lib.Find<UIElement_SetProjectionDelegate>("UIElement_SetProjection");
    _UIElement_GetRenderTransformOrigin = lib.Find<UIElement_GetRenderTransformOriginDelegate>("UIElement_GetRenderTransformOrigin");
    _UIElement_SetRenderTransformOrigin = lib.Find<UIElement_SetRenderTransformOriginDelegate>("UIElement_SetRenderTransformOrigin");
    _UIElement_GetRenderTransform = lib.Find<UIElement_GetRenderTransformDelegate>("UIElement_GetRenderTransform");
    _UIElement_SetRenderTransform = lib.Find<UIElement_SetRenderTransformDelegate>("UIElement_SetRenderTransform");
    _UIElement_GetVisibility = lib.Find<UIElement_GetVisibilityDelegate>("UIElement_GetVisibility");
    _UIElement_SetVisibility = lib.Find<UIElement_SetVisibilityDelegate>("UIElement_SetVisibility");
    _UIElement_GetAncestorList = lib.Find<UIElement_GetAncestorListDelegate>("UIElement_GetAncestorList");
    _UIElement_GetUIParent = lib.Find<UIElement_GetUIParentDelegate>("UIElement_GetUIParent");
    _UIElement_GetCommandBindings = lib.Find<UIElement_GetCommandBindingsDelegate>("UIElement_GetCommandBindings");
    _UIElement_GetInputBindings = lib.Find<UIElement_GetInputBindingsDelegate>("UIElement_GetInputBindings");
    _UIElement_CaptureMouse = lib.Find<UIElement_CaptureMouseDelegate>("UIElement_CaptureMouse");
    _UIElement_ReleaseMouseCapture = lib.Find<UIElement_ReleaseMouseCaptureDelegate>("UIElement_ReleaseMouseCapture");
    _UIElement_Focus = lib.Find<UIElement_FocusDelegate>("UIElement_Focus");
    _UIElement_GetDesiredSize = lib.Find<UIElement_GetDesiredSizeDelegate>("UIElement_GetDesiredSize");
    _UIElement_GetRenderSize = lib.Find<UIElement_GetRenderSizeDelegate>("UIElement_GetRenderSize");
    _UIElement_InvalidateMeasure = lib.Find<UIElement_InvalidateMeasureDelegate>("UIElement_InvalidateMeasure");
    _UIElement_IsMeasureValid = lib.Find<UIElement_IsMeasureValidDelegate>("UIElement_IsMeasureValid");
    _UIElement_Measure = lib.Find<UIElement_MeasureDelegate>("UIElement_Measure");
    _UIElement_InvalidateArrange = lib.Find<UIElement_InvalidateArrangeDelegate>("UIElement_InvalidateArrange");
    _UIElement_IsArrangeValid = lib.Find<UIElement_IsArrangeValidDelegate>("UIElement_IsArrangeValid");
    _UIElement_Arrange = lib.Find<UIElement_ArrangeDelegate>("UIElement_Arrange");
    _UIElement_InvalidateVisual = lib.Find<UIElement_InvalidateVisualDelegate>("UIElement_InvalidateVisual");
    _UIElement_GetMouse = lib.Find<UIElement_GetMouseDelegate>("UIElement_GetMouse");
    _UIElement_GetKeyboard = lib.Find<UIElement_GetKeyboardDelegate>("UIElement_GetKeyboard");
    _UIElement_MoveFocus = lib.Find<UIElement_MoveFocusDelegate>("UIElement_MoveFocus");
    _UIElement_PredictFocus = lib.Find<UIElement_PredictFocusDelegate>("UIElement_PredictFocus");
    _UIElement_GetMeasureConstraint = lib.Find<UIElement_GetMeasureConstraintDelegate>("UIElement_GetMeasureConstraint");
    _UIElement_GetArrangeConstraint = lib.Find<UIElement_GetArrangeConstraintDelegate>("UIElement_GetArrangeConstraint");
    _new_UIElementCollection__SWIG_0 = lib.Find<new_UIElementCollection__SWIG_0Delegate>("new_UIElementCollection__SWIG_0");
    _new_UIElementCollection__SWIG_1 = lib.Find<new_UIElementCollection__SWIG_1Delegate>("new_UIElementCollection__SWIG_1");
    _delete_UIElementCollection = lib.Find<delete_UIElementCollectionDelegate>("delete_UIElementCollection");
    _UIElementCollection_SetLogicalParent = lib.Find<UIElementCollection_SetLogicalParentDelegate>("UIElementCollection_SetLogicalParent");
    _new_TriggerCollection__SWIG_0 = lib.Find<new_TriggerCollection__SWIG_0Delegate>("new_TriggerCollection__SWIG_0");
    _new_TriggerCollection__SWIG_1 = lib.Find<new_TriggerCollection__SWIG_1Delegate>("new_TriggerCollection__SWIG_1");
    _delete_TriggerCollection = lib.Find<delete_TriggerCollectionDelegate>("delete_TriggerCollection");
    _delete_BaseSetter = lib.Find<delete_BaseSetterDelegate>("delete_BaseSetter");
    _BaseSetter_IsInitialized = lib.Find<BaseSetter_IsInitializedDelegate>("BaseSetter_IsInitialized");
    _BaseSetter_Init = lib.Find<BaseSetter_InitDelegate>("BaseSetter_Init");
    _DictionaryChangedArgs_action_set = lib.Find<DictionaryChangedArgs_action_setDelegate>("DictionaryChangedArgs_action_set");
    _DictionaryChangedArgs_action_get = lib.Find<DictionaryChangedArgs_action_getDelegate>("DictionaryChangedArgs_action_get");
    _DictionaryChangedArgs_key_set = lib.Find<DictionaryChangedArgs_key_setDelegate>("DictionaryChangedArgs_key_set");
    _DictionaryChangedArgs_key_get = lib.Find<DictionaryChangedArgs_key_getDelegate>("DictionaryChangedArgs_key_get");
    _DictionaryChangedArgs_oldValue_set = lib.Find<DictionaryChangedArgs_oldValue_setDelegate>("DictionaryChangedArgs_oldValue_set");
    _DictionaryChangedArgs_oldValue_get = lib.Find<DictionaryChangedArgs_oldValue_getDelegate>("DictionaryChangedArgs_oldValue_get");
    _DictionaryChangedArgs_newValue_set = lib.Find<DictionaryChangedArgs_newValue_setDelegate>("DictionaryChangedArgs_newValue_set");
    _DictionaryChangedArgs_newValue_get = lib.Find<DictionaryChangedArgs_newValue_getDelegate>("DictionaryChangedArgs_newValue_get");
    _new_DictionaryChangedArgs = lib.Find<new_DictionaryChangedArgsDelegate>("new_DictionaryChangedArgs");
    _delete_DictionaryChangedArgs = lib.Find<delete_DictionaryChangedArgsDelegate>("delete_DictionaryChangedArgs");
    _new_BaseDictionary = lib.Find<new_BaseDictionaryDelegate>("new_BaseDictionary");
    _BaseDictionary_DictionaryChanged = lib.Find<BaseDictionary_DictionaryChangedDelegate>("BaseDictionary_DictionaryChanged");
    _delete_BaseDictionary = lib.Find<delete_BaseDictionaryDelegate>("delete_BaseDictionary");
    _new_ResourceDictionary = lib.Find<new_ResourceDictionaryDelegate>("new_ResourceDictionary");
    _delete_ResourceDictionary = lib.Find<delete_ResourceDictionaryDelegate>("delete_ResourceDictionary");
    _ResourceDictionary_HasResourcesDefined = lib.Find<ResourceDictionary_HasResourcesDefinedDelegate>("ResourceDictionary_HasResourcesDefined");
    _ResourceDictionary_GetMergedDictionaries = lib.Find<ResourceDictionary_GetMergedDictionariesDelegate>("ResourceDictionary_GetMergedDictionaries");
    _ResourceDictionary_SetSource = lib.Find<ResourceDictionary_SetSourceDelegate>("ResourceDictionary_SetSource");
    _ResourceDictionary_GetSource = lib.Find<ResourceDictionary_GetSourceDelegate>("ResourceDictionary_GetSource");
    _ResourceDictionary_Find = lib.Find<ResourceDictionary_FindDelegate>("ResourceDictionary_Find");
    _ResourceDictionary_Get = lib.Find<ResourceDictionary_GetDelegate>("ResourceDictionary_Get");
    _ResourceDictionary_Set = lib.Find<ResourceDictionary_SetDelegate>("ResourceDictionary_Set");
    _ResourceDictionary_Add = lib.Find<ResourceDictionary_AddDelegate>("ResourceDictionary_Add");
    _ResourceDictionary_Clear = lib.Find<ResourceDictionary_ClearDelegate>("ResourceDictionary_Clear");
    _ResourceDictionary_Contains = lib.Find<ResourceDictionary_ContainsDelegate>("ResourceDictionary_Contains");
    _ResourceDictionary_Remove = lib.Find<ResourceDictionary_RemoveDelegate>("ResourceDictionary_Remove");
    _ResourceDictionary_Count = lib.Find<ResourceDictionary_CountDelegate>("ResourceDictionary_Count");
    _ResourceDictionary_GetPairIterator = lib.Find<ResourceDictionary_GetPairIteratorDelegate>("ResourceDictionary_GetPairIterator");
    _ResourceDictionary_GetIterator = lib.Find<ResourceDictionary_GetIteratorDelegate>("ResourceDictionary_GetIterator");
    _ResourceDictionary_IsInitialized = lib.Find<ResourceDictionary_IsInitializedDelegate>("ResourceDictionary_IsInitialized");
    _ResourceDictionary_Init = lib.Find<ResourceDictionary_InitDelegate>("ResourceDictionary_Init");
    _ResourceDictionary_FindName = lib.Find<ResourceDictionary_FindNameDelegate>("ResourceDictionary_FindName");
    _ResourceDictionary_RegisterName = lib.Find<ResourceDictionary_RegisterNameDelegate>("ResourceDictionary_RegisterName");
    _ResourceDictionary_UnregisterName = lib.Find<ResourceDictionary_UnregisterNameDelegate>("ResourceDictionary_UnregisterName");
    _ResourceDictionary_UpdateName = lib.Find<ResourceDictionary_UpdateNameDelegate>("ResourceDictionary_UpdateName");
    _ResourceDictionary_NameScopeChanged = lib.Find<ResourceDictionary_NameScopeChangedDelegate>("ResourceDictionary_NameScopeChanged");
    _ResourceDictionary_NameScopeDestroyed = lib.Find<ResourceDictionary_NameScopeDestroyedDelegate>("ResourceDictionary_NameScopeDestroyed");
    _ResourceDictionary_EnumObjects = lib.Find<ResourceDictionary_EnumObjectsDelegate>("ResourceDictionary_EnumObjects");
    _ResourceDictionary_TryGet = lib.Find<ResourceDictionary_TryGetDelegate>("ResourceDictionary_TryGet");
    _new_ResourceKeyString = lib.Find<new_ResourceKeyStringDelegate>("new_ResourceKeyString");
    _delete_ResourceKeyString = lib.Find<delete_ResourceKeyStringDelegate>("delete_ResourceKeyString");
    _ResourceKeyString_Create = lib.Find<ResourceKeyString_CreateDelegate>("ResourceKeyString_Create");
    _ResourceKeyString_TryCreate = lib.Find<ResourceKeyString_TryCreateDelegate>("ResourceKeyString_TryCreate");
    _ResourceKeyString_Parse = lib.Find<ResourceKeyString_ParseDelegate>("ResourceKeyString_Parse");
    _ResourceKeyString_TryParse = lib.Find<ResourceKeyString_TryParseDelegate>("ResourceKeyString_TryParse");
    _ResourceKeyString_Get = lib.Find<ResourceKeyString_GetDelegate>("ResourceKeyString_Get");
    _ResourceKeyString_Equals = lib.Find<ResourceKeyString_EqualsDelegate>("ResourceKeyString_Equals");
    _ResourceKeyString_IsLessThan = lib.Find<ResourceKeyString_IsLessThanDelegate>("ResourceKeyString_IsLessThan");
    _ResourceKeyString_GetStr = lib.Find<ResourceKeyString_GetStrDelegate>("ResourceKeyString_GetStr");
    _new_ResourceKeyType = lib.Find<new_ResourceKeyTypeDelegate>("new_ResourceKeyType");
    _delete_ResourceKeyType = lib.Find<delete_ResourceKeyTypeDelegate>("delete_ResourceKeyType");
    _ResourceKeyType_Create = lib.Find<ResourceKeyType_CreateDelegate>("ResourceKeyType_Create");
    _ResourceKeyType_Parse = lib.Find<ResourceKeyType_ParseDelegate>("ResourceKeyType_Parse");
    _ResourceKeyType_TryParse = lib.Find<ResourceKeyType_TryParseDelegate>("ResourceKeyType_TryParse");
    _ResourceKeyType_Get = lib.Find<ResourceKeyType_GetDelegate>("ResourceKeyType_Get");
    _ResourceKeyType_Equals = lib.Find<ResourceKeyType_EqualsDelegate>("ResourceKeyType_Equals");
    _ResourceKeyType_IsLessThan = lib.Find<ResourceKeyType_IsLessThanDelegate>("ResourceKeyType_IsLessThan");
    _ResourceKeyType_GetStr = lib.Find<ResourceKeyType_GetStrDelegate>("ResourceKeyType_GetStr");
    _new_Style = lib.Find<new_StyleDelegate>("new_Style");
    _delete_Style = lib.Find<delete_StyleDelegate>("delete_Style");
    _Style_GetTargetType = lib.Find<Style_GetTargetTypeDelegate>("Style_GetTargetType");
    _Style_SetTargetType = lib.Find<Style_SetTargetTypeDelegate>("Style_SetTargetType");
    _Style_GetBasedOn = lib.Find<Style_GetBasedOnDelegate>("Style_GetBasedOn");
    _Style_SetBasedOn = lib.Find<Style_SetBasedOnDelegate>("Style_SetBasedOn");
    _Style_GetResources = lib.Find<Style_GetResourcesDelegate>("Style_GetResources");
    _Style_SetResources = lib.Find<Style_SetResourcesDelegate>("Style_SetResources");
    _Style_GetSetters = lib.Find<Style_GetSettersDelegate>("Style_GetSetters");
    _Style_GetTriggers = lib.Find<Style_GetTriggersDelegate>("Style_GetTriggers");
    _Style_AttachElement = lib.Find<Style_AttachElementDelegate>("Style_AttachElement");
    _Style_DetachElement = lib.Find<Style_DetachElementDelegate>("Style_DetachElement");
    _Style_IsInitialized = lib.Find<Style_IsInitializedDelegate>("Style_IsInitialized");
    _Style_Init = lib.Find<Style_InitDelegate>("Style_Init");
    _TimeManagerRef_timeManager_set = lib.Find<TimeManagerRef_timeManager_setDelegate>("TimeManagerRef_timeManager_set");
    _TimeManagerRef_timeManager_get = lib.Find<TimeManagerRef_timeManager_getDelegate>("TimeManagerRef_timeManager_get");
    _new_TimeManagerRef = lib.Find<new_TimeManagerRefDelegate>("new_TimeManagerRef");
    _delete_TimeManagerRef = lib.Find<delete_TimeManagerRefDelegate>("delete_TimeManagerRef");
    _AncestorNameScopeChangedArgs_action_set = lib.Find<AncestorNameScopeChangedArgs_action_setDelegate>("AncestorNameScopeChangedArgs_action_set");
    _AncestorNameScopeChangedArgs_action_get = lib.Find<AncestorNameScopeChangedArgs_action_getDelegate>("AncestorNameScopeChangedArgs_action_get");
    _AncestorNameScopeChangedArgs_nameScope_set = lib.Find<AncestorNameScopeChangedArgs_nameScope_setDelegate>("AncestorNameScopeChangedArgs_nameScope_set");
    _AncestorNameScopeChangedArgs_nameScope_get = lib.Find<AncestorNameScopeChangedArgs_nameScope_getDelegate>("AncestorNameScopeChangedArgs_nameScope_get");
    _AncestorNameScopeChangedArgs_changeArgs_set = lib.Find<AncestorNameScopeChangedArgs_changeArgs_setDelegate>("AncestorNameScopeChangedArgs_changeArgs_set");
    _AncestorNameScopeChangedArgs_changeArgs_get = lib.Find<AncestorNameScopeChangedArgs_changeArgs_getDelegate>("AncestorNameScopeChangedArgs_changeArgs_get");
    _new_AncestorNameScopeChangedArgs = lib.Find<new_AncestorNameScopeChangedArgsDelegate>("new_AncestorNameScopeChangedArgs");
    _delete_AncestorNameScopeChangedArgs = lib.Find<delete_AncestorNameScopeChangedArgsDelegate>("delete_AncestorNameScopeChangedArgs");
    _new_FrameworkElement = lib.Find<new_FrameworkElementDelegate>("new_FrameworkElement");
    _delete_FrameworkElement = lib.Find<delete_FrameworkElementDelegate>("delete_FrameworkElement");
    _FrameworkElement_GetActualHeight = lib.Find<FrameworkElement_GetActualHeightDelegate>("FrameworkElement_GetActualHeight");
    _FrameworkElement_GetActualWidth = lib.Find<FrameworkElement_GetActualWidthDelegate>("FrameworkElement_GetActualWidth");
    _FrameworkElement_GetContextMenu = lib.Find<FrameworkElement_GetContextMenuDelegate>("FrameworkElement_GetContextMenu");
    _FrameworkElement_SetContextMenu = lib.Find<FrameworkElement_SetContextMenuDelegate>("FrameworkElement_SetContextMenu");
    _FrameworkElement_GetDataContext = lib.Find<FrameworkElement_GetDataContextDelegate>("FrameworkElement_GetDataContext");
    _FrameworkElement_SetDataContext = lib.Find<FrameworkElement_SetDataContextDelegate>("FrameworkElement_SetDataContext");
    _FrameworkElement_GetDefaultStyleKey = lib.Find<FrameworkElement_GetDefaultStyleKeyDelegate>("FrameworkElement_GetDefaultStyleKey");
    _FrameworkElement_SetDefaultStyleKey = lib.Find<FrameworkElement_SetDefaultStyleKeyDelegate>("FrameworkElement_SetDefaultStyleKey");
    _FrameworkElement_GetFocusVisualStyle = lib.Find<FrameworkElement_GetFocusVisualStyleDelegate>("FrameworkElement_GetFocusVisualStyle");
    _FrameworkElement_SetFocusVisualStyle = lib.Find<FrameworkElement_SetFocusVisualStyleDelegate>("FrameworkElement_SetFocusVisualStyle");
    _FrameworkElement_GetHeight = lib.Find<FrameworkElement_GetHeightDelegate>("FrameworkElement_GetHeight");
    _FrameworkElement_SetHeight = lib.Find<FrameworkElement_SetHeightDelegate>("FrameworkElement_SetHeight");
    _FrameworkElement_GetHorizontalAlignment = lib.Find<FrameworkElement_GetHorizontalAlignmentDelegate>("FrameworkElement_GetHorizontalAlignment");
    _FrameworkElement_SetHorizontalAlignment = lib.Find<FrameworkElement_SetHorizontalAlignmentDelegate>("FrameworkElement_SetHorizontalAlignment");
    _FrameworkElement_GetLayoutTransform = lib.Find<FrameworkElement_GetLayoutTransformDelegate>("FrameworkElement_GetLayoutTransform");
    _FrameworkElement_SetLayoutTransform = lib.Find<FrameworkElement_SetLayoutTransformDelegate>("FrameworkElement_SetLayoutTransform");
    _FrameworkElement_GetMargin = lib.Find<FrameworkElement_GetMarginDelegate>("FrameworkElement_GetMargin");
    _FrameworkElement_SetMargin = lib.Find<FrameworkElement_SetMarginDelegate>("FrameworkElement_SetMargin");
    _FrameworkElement_GetMaxHeight = lib.Find<FrameworkElement_GetMaxHeightDelegate>("FrameworkElement_GetMaxHeight");
    _FrameworkElement_SetMaxHeight = lib.Find<FrameworkElement_SetMaxHeightDelegate>("FrameworkElement_SetMaxHeight");
    _FrameworkElement_GetMaxWidth = lib.Find<FrameworkElement_GetMaxWidthDelegate>("FrameworkElement_GetMaxWidth");
    _FrameworkElement_SetMaxWidth = lib.Find<FrameworkElement_SetMaxWidthDelegate>("FrameworkElement_SetMaxWidth");
    _FrameworkElement_GetMinHeight = lib.Find<FrameworkElement_GetMinHeightDelegate>("FrameworkElement_GetMinHeight");
    _FrameworkElement_SetMinHeight = lib.Find<FrameworkElement_SetMinHeightDelegate>("FrameworkElement_SetMinHeight");
    _FrameworkElement_GetMinWidth = lib.Find<FrameworkElement_GetMinWidthDelegate>("FrameworkElement_GetMinWidth");
    _FrameworkElement_SetMinWidth = lib.Find<FrameworkElement_SetMinWidthDelegate>("FrameworkElement_SetMinWidth");
    _FrameworkElement_GetName = lib.Find<FrameworkElement_GetNameDelegate>("FrameworkElement_GetName");
    _FrameworkElement_SetName = lib.Find<FrameworkElement_SetNameDelegate>("FrameworkElement_SetName");
    _FrameworkElement_GetOverridesDefaultStyle = lib.Find<FrameworkElement_GetOverridesDefaultStyleDelegate>("FrameworkElement_GetOverridesDefaultStyle");
    _FrameworkElement_SetOverridesDefaultStyle = lib.Find<FrameworkElement_SetOverridesDefaultStyleDelegate>("FrameworkElement_SetOverridesDefaultStyle");
    _FrameworkElement_GetStyle = lib.Find<FrameworkElement_GetStyleDelegate>("FrameworkElement_GetStyle");
    _FrameworkElement_SetStyle = lib.Find<FrameworkElement_SetStyleDelegate>("FrameworkElement_SetStyle");
    _FrameworkElement_GetTag = lib.Find<FrameworkElement_GetTagDelegate>("FrameworkElement_GetTag");
    _FrameworkElement_SetTag__SWIG_0 = lib.Find<FrameworkElement_SetTag__SWIG_0Delegate>("FrameworkElement_SetTag__SWIG_0");
    _FrameworkElement_SetTag__SWIG_1 = lib.Find<FrameworkElement_SetTag__SWIG_1Delegate>("FrameworkElement_SetTag__SWIG_1");
    _FrameworkElement_GetToolTip = lib.Find<FrameworkElement_GetToolTipDelegate>("FrameworkElement_GetToolTip");
    _FrameworkElement_SetToolTip__SWIG_0 = lib.Find<FrameworkElement_SetToolTip__SWIG_0Delegate>("FrameworkElement_SetToolTip__SWIG_0");
    _FrameworkElement_SetToolTip__SWIG_1 = lib.Find<FrameworkElement_SetToolTip__SWIG_1Delegate>("FrameworkElement_SetToolTip__SWIG_1");
    _FrameworkElement_GetUseLayoutRounding = lib.Find<FrameworkElement_GetUseLayoutRoundingDelegate>("FrameworkElement_GetUseLayoutRounding");
    _FrameworkElement_SetUseLayoutRounding = lib.Find<FrameworkElement_SetUseLayoutRoundingDelegate>("FrameworkElement_SetUseLayoutRounding");
    _FrameworkElement_GetVerticalAlignment = lib.Find<FrameworkElement_GetVerticalAlignmentDelegate>("FrameworkElement_GetVerticalAlignment");
    _FrameworkElement_SetVerticalAlignment = lib.Find<FrameworkElement_SetVerticalAlignmentDelegate>("FrameworkElement_SetVerticalAlignment");
    _FrameworkElement_GetWidth = lib.Find<FrameworkElement_GetWidthDelegate>("FrameworkElement_GetWidth");
    _FrameworkElement_SetWidth = lib.Find<FrameworkElement_SetWidthDelegate>("FrameworkElement_SetWidth");
    _FrameworkElement_GetTriggers = lib.Find<FrameworkElement_GetTriggersDelegate>("FrameworkElement_GetTriggers");
    _FrameworkElement_IsLoaded = lib.Find<FrameworkElement_IsLoadedDelegate>("FrameworkElement_IsLoaded");
    _FrameworkElement_BringIntoView__SWIG_0 = lib.Find<FrameworkElement_BringIntoView__SWIG_0Delegate>("FrameworkElement_BringIntoView__SWIG_0");
    _FrameworkElement_BringIntoView__SWIG_1 = lib.Find<FrameworkElement_BringIntoView__SWIG_1Delegate>("FrameworkElement_BringIntoView__SWIG_1");
    _FrameworkElement_GetParent = lib.Find<FrameworkElement_GetParentDelegate>("FrameworkElement_GetParent");
    _FrameworkElement_GetTemplatedParent = lib.Find<FrameworkElement_GetTemplatedParentDelegate>("FrameworkElement_GetTemplatedParent");
    _FrameworkElement_FindName = lib.Find<FrameworkElement_FindNameDelegate>("FrameworkElement_FindName");
    _FrameworkElement_FindNameAndScope = lib.Find<FrameworkElement_FindNameAndScopeDelegate>("FrameworkElement_FindNameAndScope");
    _FrameworkElement_RegisterName = lib.Find<FrameworkElement_RegisterNameDelegate>("FrameworkElement_RegisterName");
    _FrameworkElement_UnregisterName = lib.Find<FrameworkElement_UnregisterNameDelegate>("FrameworkElement_UnregisterName");
    _FrameworkElement_UpdateName = lib.Find<FrameworkElement_UpdateNameDelegate>("FrameworkElement_UpdateName");
    _FrameworkElement_GetResources = lib.Find<FrameworkElement_GetResourcesDelegate>("FrameworkElement_GetResources");
    _FrameworkElement_SetResources = lib.Find<FrameworkElement_SetResourcesDelegate>("FrameworkElement_SetResources");
    _delete_FrameworkTemplate = lib.Find<delete_FrameworkTemplateDelegate>("delete_FrameworkTemplate");
    _FrameworkTemplate_Apply = lib.Find<FrameworkTemplate_ApplyDelegate>("FrameworkTemplate_Apply");
    _FrameworkTemplate_GetResources = lib.Find<FrameworkTemplate_GetResourcesDelegate>("FrameworkTemplate_GetResources");
    _FrameworkTemplate_SetResources = lib.Find<FrameworkTemplate_SetResourcesDelegate>("FrameworkTemplate_SetResources");
    _FrameworkTemplate_GetVisualTree = lib.Find<FrameworkTemplate_GetVisualTreeDelegate>("FrameworkTemplate_GetVisualTree");
    _FrameworkTemplate_SetVisualTree = lib.Find<FrameworkTemplate_SetVisualTreeDelegate>("FrameworkTemplate_SetVisualTree");
    _FrameworkTemplate_IsInitialized = lib.Find<FrameworkTemplate_IsInitializedDelegate>("FrameworkTemplate_IsInitialized");
    _FrameworkTemplate_Init = lib.Find<FrameworkTemplate_InitDelegate>("FrameworkTemplate_Init");
    _FrameworkTemplate_FindName = lib.Find<FrameworkTemplate_FindNameDelegate>("FrameworkTemplate_FindName");
    _FrameworkTemplate_RegisterName = lib.Find<FrameworkTemplate_RegisterNameDelegate>("FrameworkTemplate_RegisterName");
    _FrameworkTemplate_UnregisterName = lib.Find<FrameworkTemplate_UnregisterNameDelegate>("FrameworkTemplate_UnregisterName");
    _FrameworkTemplate_UpdateName = lib.Find<FrameworkTemplate_UpdateNameDelegate>("FrameworkTemplate_UpdateName");
    _FrameworkTemplate_NameScopeChanged = lib.Find<FrameworkTemplate_NameScopeChangedDelegate>("FrameworkTemplate_NameScopeChanged");
    _FrameworkTemplate_NameScopeDestroyed = lib.Find<FrameworkTemplate_NameScopeDestroyedDelegate>("FrameworkTemplate_NameScopeDestroyed");
    _FrameworkTemplate_EnumObjects = lib.Find<FrameworkTemplate_EnumObjectsDelegate>("FrameworkTemplate_EnumObjects");
    _new_ControlTemplate = lib.Find<new_ControlTemplateDelegate>("new_ControlTemplate");
    _delete_ControlTemplate = lib.Find<delete_ControlTemplateDelegate>("delete_ControlTemplate");
    _ControlTemplate_GetTargetType = lib.Find<ControlTemplate_GetTargetTypeDelegate>("ControlTemplate_GetTargetType");
    _ControlTemplate_SetTargetType = lib.Find<ControlTemplate_SetTargetTypeDelegate>("ControlTemplate_SetTargetType");
    _ControlTemplate_GetTriggers = lib.Find<ControlTemplate_GetTriggersDelegate>("ControlTemplate_GetTriggers");
    _new_Control = lib.Find<new_ControlDelegate>("new_Control");
    _delete_Control = lib.Find<delete_ControlDelegate>("delete_Control");
    _Control_GetBackground = lib.Find<Control_GetBackgroundDelegate>("Control_GetBackground");
    _Control_SetBackground = lib.Find<Control_SetBackgroundDelegate>("Control_SetBackground");
    _Control_GetBorderBrush = lib.Find<Control_GetBorderBrushDelegate>("Control_GetBorderBrush");
    _Control_SetBorderBrush = lib.Find<Control_SetBorderBrushDelegate>("Control_SetBorderBrush");
    _Control_GetBorderThickness = lib.Find<Control_GetBorderThicknessDelegate>("Control_GetBorderThickness");
    _Control_SetBorderThickness = lib.Find<Control_SetBorderThicknessDelegate>("Control_SetBorderThickness");
    _Control_GetFontFamily = lib.Find<Control_GetFontFamilyDelegate>("Control_GetFontFamily");
    _Control_SetFontFamily = lib.Find<Control_SetFontFamilyDelegate>("Control_SetFontFamily");
    _Control_GetFontSize = lib.Find<Control_GetFontSizeDelegate>("Control_GetFontSize");
    _Control_SetFontSize = lib.Find<Control_SetFontSizeDelegate>("Control_SetFontSize");
    _Control_GetFontStretch = lib.Find<Control_GetFontStretchDelegate>("Control_GetFontStretch");
    _Control_SetFontStretch = lib.Find<Control_SetFontStretchDelegate>("Control_SetFontStretch");
    _Control_GetFontStyle = lib.Find<Control_GetFontStyleDelegate>("Control_GetFontStyle");
    _Control_SetFontStyle = lib.Find<Control_SetFontStyleDelegate>("Control_SetFontStyle");
    _Control_GetFontWeight = lib.Find<Control_GetFontWeightDelegate>("Control_GetFontWeight");
    _Control_SetFontWeight = lib.Find<Control_SetFontWeightDelegate>("Control_SetFontWeight");
    _Control_GetForeground = lib.Find<Control_GetForegroundDelegate>("Control_GetForeground");
    _Control_SetForeground = lib.Find<Control_SetForegroundDelegate>("Control_SetForeground");
    _Control_GetHorizontalContentAlignment = lib.Find<Control_GetHorizontalContentAlignmentDelegate>("Control_GetHorizontalContentAlignment");
    _Control_SetHorizontalContentAlignment = lib.Find<Control_SetHorizontalContentAlignmentDelegate>("Control_SetHorizontalContentAlignment");
    _Control_GetIsTabStop = lib.Find<Control_GetIsTabStopDelegate>("Control_GetIsTabStop");
    _Control_SetIsTabStop = lib.Find<Control_SetIsTabStopDelegate>("Control_SetIsTabStop");
    _Control_GetPadding = lib.Find<Control_GetPaddingDelegate>("Control_GetPadding");
    _Control_SetPadding = lib.Find<Control_SetPaddingDelegate>("Control_SetPadding");
    _Control_GetTabIndex = lib.Find<Control_GetTabIndexDelegate>("Control_GetTabIndex");
    _Control_SetTabIndex = lib.Find<Control_SetTabIndexDelegate>("Control_SetTabIndex");
    _Control_GetTemplate = lib.Find<Control_GetTemplateDelegate>("Control_GetTemplate");
    _Control_SetTemplate = lib.Find<Control_SetTemplateDelegate>("Control_SetTemplate");
    _Control_GetVerticalContentAlignment = lib.Find<Control_GetVerticalContentAlignmentDelegate>("Control_GetVerticalContentAlignment");
    _Control_SetVerticalContentAlignment = lib.Find<Control_SetVerticalContentAlignmentDelegate>("Control_SetVerticalContentAlignment");
    _new_ContentControl = lib.Find<new_ContentControlDelegate>("new_ContentControl");
    _delete_ContentControl = lib.Find<delete_ContentControlDelegate>("delete_ContentControl");
    _ContentControl_GetContent = lib.Find<ContentControl_GetContentDelegate>("ContentControl_GetContent");
    _ContentControl_SetContent__SWIG_0 = lib.Find<ContentControl_SetContent__SWIG_0Delegate>("ContentControl_SetContent__SWIG_0");
    _ContentControl_SetContent__SWIG_1 = lib.Find<ContentControl_SetContent__SWIG_1Delegate>("ContentControl_SetContent__SWIG_1");
    _ContentControl_GetContentTemplate = lib.Find<ContentControl_GetContentTemplateDelegate>("ContentControl_GetContentTemplate");
    _ContentControl_SetContentTemplate = lib.Find<ContentControl_SetContentTemplateDelegate>("ContentControl_SetContentTemplate");
    _ContentControl_GetContentTemplateSelector = lib.Find<ContentControl_GetContentTemplateSelectorDelegate>("ContentControl_GetContentTemplateSelector");
    _ContentControl_SetContentTemplateSelector = lib.Find<ContentControl_SetContentTemplateSelectorDelegate>("ContentControl_SetContentTemplateSelector");
    _ContentControl_GetHasContent = lib.Find<ContentControl_GetHasContentDelegate>("ContentControl_GetHasContent");
    _ContentControl_PrepareContainerForItem = lib.Find<ContentControl_PrepareContainerForItemDelegate>("ContentControl_PrepareContainerForItem");
    _new_Decorator__SWIG_0 = lib.Find<new_Decorator__SWIG_0Delegate>("new_Decorator__SWIG_0");
    _new_Decorator__SWIG_1 = lib.Find<new_Decorator__SWIG_1Delegate>("new_Decorator__SWIG_1");
    _delete_Decorator = lib.Find<delete_DecoratorDelegate>("delete_Decorator");
    _Decorator_GetChild = lib.Find<Decorator_GetChildDelegate>("Decorator_GetChild");
    _Decorator_SetChild = lib.Find<Decorator_SetChildDelegate>("Decorator_SetChild");
    _delete_Panel = lib.Find<delete_PanelDelegate>("delete_Panel");
    _Panel_InvalidateZOrder = lib.Find<Panel_InvalidateZOrderDelegate>("Panel_InvalidateZOrder");
    _Panel_GetBackground = lib.Find<Panel_GetBackgroundDelegate>("Panel_GetBackground");
    _Panel_SetBackground = lib.Find<Panel_SetBackgroundDelegate>("Panel_SetBackground");
    _Panel_GetIsItemsHost = lib.Find<Panel_GetIsItemsHostDelegate>("Panel_GetIsItemsHost");
    _Panel_SetIsItemsHost = lib.Find<Panel_SetIsItemsHostDelegate>("Panel_SetIsItemsHost");
    _Panel_GetZIndex = lib.Find<Panel_GetZIndexDelegate>("Panel_GetZIndex");
    _Panel_SetZIndex = lib.Find<Panel_SetZIndexDelegate>("Panel_SetZIndex");
    _Panel_GetChildren = lib.Find<Panel_GetChildrenDelegate>("Panel_GetChildren");
    _EventArgs_Empty_get = lib.Find<EventArgs_Empty_getDelegate>("EventArgs_Empty_get");
    _new_EventArgs = lib.Find<new_EventArgsDelegate>("new_EventArgs");
    _delete_EventArgs = lib.Find<delete_EventArgsDelegate>("delete_EventArgs");
    _Event__event_set = lib.Find<Event__event_setDelegate>("Event__event_set");
    _Event__event_get = lib.Find<Event__event_getDelegate>("Event__event_get");
    _new_Event__SWIG_0 = lib.Find<new_Event__SWIG_0Delegate>("new_Event__SWIG_0");
    _new_Event__SWIG_1 = lib.Find<new_Event__SWIG_1Delegate>("new_Event__SWIG_1");
    _delete_Event = lib.Find<delete_EventDelegate>("delete_Event");
    _new_RoutedEvent__SWIG_0 = lib.Find<new_RoutedEvent__SWIG_0Delegate>("new_RoutedEvent__SWIG_0");
    _new_RoutedEvent__SWIG_1 = lib.Find<new_RoutedEvent__SWIG_1Delegate>("new_RoutedEvent__SWIG_1");
    _delete_RoutedEvent = lib.Find<delete_RoutedEventDelegate>("delete_RoutedEvent");
    _RoutedEvent_GetName = lib.Find<RoutedEvent_GetNameDelegate>("RoutedEvent_GetName");
    _RoutedEvent_GetOwnerType = lib.Find<RoutedEvent_GetOwnerTypeDelegate>("RoutedEvent_GetOwnerType");
    _RoutedEvent_SetOwnerType = lib.Find<RoutedEvent_SetOwnerTypeDelegate>("RoutedEvent_SetOwnerType");
    _RoutedEvent_GetRoutingStrategy = lib.Find<RoutedEvent_GetRoutingStrategyDelegate>("RoutedEvent_GetRoutingStrategy");
    _RoutedEvent_SetRoutingStrategy = lib.Find<RoutedEvent_SetRoutingStrategyDelegate>("RoutedEvent_SetRoutingStrategy");
    _RoutedEvent_GetSerializer = lib.Find<RoutedEvent_GetSerializerDelegate>("RoutedEvent_GetSerializer");
    _RoutedEventArgs_source_set = lib.Find<RoutedEventArgs_source_setDelegate>("RoutedEventArgs_source_set");
    _RoutedEventArgs_source_get = lib.Find<RoutedEventArgs_source_getDelegate>("RoutedEventArgs_source_get");
    _RoutedEventArgs_routedEvent_set = lib.Find<RoutedEventArgs_routedEvent_setDelegate>("RoutedEventArgs_routedEvent_set");
    _RoutedEventArgs_routedEvent_get = lib.Find<RoutedEventArgs_routedEvent_getDelegate>("RoutedEventArgs_routedEvent_get");
    _RoutedEventArgs_handled_set = lib.Find<RoutedEventArgs_handled_setDelegate>("RoutedEventArgs_handled_set");
    _RoutedEventArgs_handled_get = lib.Find<RoutedEventArgs_handled_getDelegate>("RoutedEventArgs_handled_get");
    _new_RoutedEventArgs = lib.Find<new_RoutedEventArgsDelegate>("new_RoutedEventArgs");
    _delete_RoutedEventArgs = lib.Find<delete_RoutedEventArgsDelegate>("delete_RoutedEventArgs");
    _SerializeRoutedEventHelper_ev_set = lib.Find<SerializeRoutedEventHelper_ev_setDelegate>("SerializeRoutedEventHelper_ev_set");
    _SerializeRoutedEventHelper_ev_get = lib.Find<SerializeRoutedEventHelper_ev_getDelegate>("SerializeRoutedEventHelper_ev_get");
    _new_SerializeRoutedEventHelper__SWIG_0 = lib.Find<new_SerializeRoutedEventHelper__SWIG_0Delegate>("new_SerializeRoutedEventHelper__SWIG_0");
    _new_SerializeRoutedEventHelper__SWIG_1 = lib.Find<new_SerializeRoutedEventHelper__SWIG_1Delegate>("new_SerializeRoutedEventHelper__SWIG_1");
    _delete_SerializeRoutedEventHelper = lib.Find<delete_SerializeRoutedEventHelperDelegate>("delete_SerializeRoutedEventHelper");
    _new_ItemsControl = lib.Find<new_ItemsControlDelegate>("new_ItemsControl");
    _delete_ItemsControl = lib.Find<delete_ItemsControlDelegate>("delete_ItemsControl");
    _ItemsControl_GetDisplayMemberPath = lib.Find<ItemsControl_GetDisplayMemberPathDelegate>("ItemsControl_GetDisplayMemberPath");
    _ItemsControl_SetDisplayMemberPath = lib.Find<ItemsControl_SetDisplayMemberPathDelegate>("ItemsControl_SetDisplayMemberPath");
    _ItemsControl_GetGroupStyleSelector = lib.Find<ItemsControl_GetGroupStyleSelectorDelegate>("ItemsControl_GetGroupStyleSelector");
    _ItemsControl_SetGroupStyleSelector = lib.Find<ItemsControl_SetGroupStyleSelectorDelegate>("ItemsControl_SetGroupStyleSelector");
    _ItemsControl_GetHasItems = lib.Find<ItemsControl_GetHasItemsDelegate>("ItemsControl_GetHasItems");
    _ItemsControl_GetIsGrouping = lib.Find<ItemsControl_GetIsGroupingDelegate>("ItemsControl_GetIsGrouping");
    _ItemsControl_GetIsTextSearchEnabled = lib.Find<ItemsControl_GetIsTextSearchEnabledDelegate>("ItemsControl_GetIsTextSearchEnabled");
    _ItemsControl_SetIsTextSearchEnabled = lib.Find<ItemsControl_SetIsTextSearchEnabledDelegate>("ItemsControl_SetIsTextSearchEnabled");
    _ItemsControl_GetItemContainerStyle = lib.Find<ItemsControl_GetItemContainerStyleDelegate>("ItemsControl_GetItemContainerStyle");
    _ItemsControl_SetItemContainerStyle = lib.Find<ItemsControl_SetItemContainerStyleDelegate>("ItemsControl_SetItemContainerStyle");
    _ItemsControl_GetItemContainerStyleSelector = lib.Find<ItemsControl_GetItemContainerStyleSelectorDelegate>("ItemsControl_GetItemContainerStyleSelector");
    _ItemsControl_SetItemContainerStyleSelector = lib.Find<ItemsControl_SetItemContainerStyleSelectorDelegate>("ItemsControl_SetItemContainerStyleSelector");
    _ItemsControl_GetItemsPanel = lib.Find<ItemsControl_GetItemsPanelDelegate>("ItemsControl_GetItemsPanel");
    _ItemsControl_SetItemsPanel = lib.Find<ItemsControl_SetItemsPanelDelegate>("ItemsControl_SetItemsPanel");
    _ItemsControl_GetDefaultItemsPanel = lib.Find<ItemsControl_GetDefaultItemsPanelDelegate>("ItemsControl_GetDefaultItemsPanel");
    _ItemsControl_GetItemsSource = lib.Find<ItemsControl_GetItemsSourceDelegate>("ItemsControl_GetItemsSource");
    _ItemsControl_SetItemsSource = lib.Find<ItemsControl_SetItemsSourceDelegate>("ItemsControl_SetItemsSource");
    _ItemsControl_GetItemTemplate = lib.Find<ItemsControl_GetItemTemplateDelegate>("ItemsControl_GetItemTemplate");
    _ItemsControl_SetItemTemplate = lib.Find<ItemsControl_SetItemTemplateDelegate>("ItemsControl_SetItemTemplate");
    _ItemsControl_GetItemTemplateSelector = lib.Find<ItemsControl_GetItemTemplateSelectorDelegate>("ItemsControl_GetItemTemplateSelector");
    _ItemsControl_SetItemTemplateSelector = lib.Find<ItemsControl_SetItemTemplateSelectorDelegate>("ItemsControl_SetItemTemplateSelector");
    _ItemsControl_GetItems = lib.Find<ItemsControl_GetItemsDelegate>("ItemsControl_GetItems");
    _ItemsControl_ItemsControlFromItemContainer = lib.Find<ItemsControl_ItemsControlFromItemContainerDelegate>("ItemsControl_ItemsControlFromItemContainer");
    _ItemsControl_GetItemsOwner = lib.Find<ItemsControl_GetItemsOwnerDelegate>("ItemsControl_GetItemsOwner");
    _SelectionChangedEventArgs_addedItems_set = lib.Find<SelectionChangedEventArgs_addedItems_setDelegate>("SelectionChangedEventArgs_addedItems_set");
    _SelectionChangedEventArgs_addedItems_get = lib.Find<SelectionChangedEventArgs_addedItems_getDelegate>("SelectionChangedEventArgs_addedItems_get");
    _SelectionChangedEventArgs_removedItems_set = lib.Find<SelectionChangedEventArgs_removedItems_setDelegate>("SelectionChangedEventArgs_removedItems_set");
    _SelectionChangedEventArgs_removedItems_get = lib.Find<SelectionChangedEventArgs_removedItems_getDelegate>("SelectionChangedEventArgs_removedItems_get");
    _new_SelectionChangedEventArgs = lib.Find<new_SelectionChangedEventArgsDelegate>("new_SelectionChangedEventArgs");
    _delete_SelectionChangedEventArgs = lib.Find<delete_SelectionChangedEventArgsDelegate>("delete_SelectionChangedEventArgs");
    _delete_Selector = lib.Find<delete_SelectorDelegate>("delete_Selector");
    _Selector_GetIsSelected = lib.Find<Selector_GetIsSelectedDelegate>("Selector_GetIsSelected");
    _Selector_SetIsSelected = lib.Find<Selector_SetIsSelectedDelegate>("Selector_SetIsSelected");
    _Selector_GetIsSelectionActive = lib.Find<Selector_GetIsSelectionActiveDelegate>("Selector_GetIsSelectionActive");
    _Selector_GetIsSynchronizedWithCurrentItem = lib.Find<Selector_GetIsSynchronizedWithCurrentItemDelegate>("Selector_GetIsSynchronizedWithCurrentItem");
    _Selector_SetIsSynchronizedWithCurrentItem = lib.Find<Selector_SetIsSynchronizedWithCurrentItemDelegate>("Selector_SetIsSynchronizedWithCurrentItem");
    _Selector_GetSelectedIndex = lib.Find<Selector_GetSelectedIndexDelegate>("Selector_GetSelectedIndex");
    _Selector_SetSelectedIndex = lib.Find<Selector_SetSelectedIndexDelegate>("Selector_SetSelectedIndex");
    _Selector_GetSelectedItem = lib.Find<Selector_GetSelectedItemDelegate>("Selector_GetSelectedItem");
    _Selector_SetSelectedItem = lib.Find<Selector_SetSelectedItemDelegate>("Selector_SetSelectedItem");
    _Selector_GetSelectedValuePath = lib.Find<Selector_GetSelectedValuePathDelegate>("Selector_GetSelectedValuePath");
    _Selector_SetSelectedValuePath = lib.Find<Selector_SetSelectedValuePathDelegate>("Selector_SetSelectedValuePath");
    _Selector_GetSelectedValue = lib.Find<Selector_GetSelectedValueDelegate>("Selector_GetSelectedValue");
    _Selector_SetSelectedValue = lib.Find<Selector_SetSelectedValueDelegate>("Selector_SetSelectedValue");
    _new_AdornerDecorator__SWIG_0 = lib.Find<new_AdornerDecorator__SWIG_0Delegate>("new_AdornerDecorator__SWIG_0");
    _new_AdornerDecorator__SWIG_1 = lib.Find<new_AdornerDecorator__SWIG_1Delegate>("new_AdornerDecorator__SWIG_1");
    _delete_AdornerDecorator = lib.Find<delete_AdornerDecoratorDelegate>("delete_AdornerDecorator");
    _AdornerDecorator_AddLayer = lib.Find<AdornerDecorator_AddLayerDelegate>("AdornerDecorator_AddLayer");
    _AdornerDecorator_RemoveLayer = lib.Find<AdornerDecorator_RemoveLayerDelegate>("AdornerDecorator_RemoveLayer");
    _delete_Animatable = lib.Find<delete_AnimatableDelegate>("delete_Animatable");
    _delete_Geometry = lib.Find<delete_GeometryDelegate>("delete_Geometry");
    _Geometry_Parse = lib.Find<Geometry_ParseDelegate>("Geometry_Parse");
    _Geometry_TryParse = lib.Find<Geometry_TryParseDelegate>("Geometry_TryParse");
    _Geometry_IsEmpty = lib.Find<Geometry_IsEmptyDelegate>("Geometry_IsEmpty");
    _Geometry_GetBounds = lib.Find<Geometry_GetBoundsDelegate>("Geometry_GetBounds");
    _Geometry_GetRenderBounds = lib.Find<Geometry_GetRenderBoundsDelegate>("Geometry_GetRenderBounds");
    _Geometry_FillContains = lib.Find<Geometry_FillContainsDelegate>("Geometry_FillContains");
    _Geometry_StrokeContains = lib.Find<Geometry_StrokeContainsDelegate>("Geometry_StrokeContains");
    _Geometry_GetTransform = lib.Find<Geometry_GetTransformDelegate>("Geometry_GetTransform");
    _Geometry_SetTransform = lib.Find<Geometry_SetTransformDelegate>("Geometry_SetTransform");
    _Geometry_UpdateRenderProxy = lib.Find<Geometry_UpdateRenderProxyDelegate>("Geometry_UpdateRenderProxy");
    _Geometry_UnregisterRenderer = lib.Find<Geometry_UnregisterRendererDelegate>("Geometry_UnregisterRenderer");
    _delete_ImageSource = lib.Find<delete_ImageSourceDelegate>("delete_ImageSource");
    _ImageSource_Register = lib.Find<ImageSource_RegisterDelegate>("ImageSource_Register");
    _ImageSource_IsRegistered = lib.Find<ImageSource_IsRegisteredDelegate>("ImageSource_IsRegistered");
    _ImageSource_ClearCache = lib.Find<ImageSource_ClearCacheDelegate>("ImageSource_ClearCache");
    _ImageSource_GetSource = lib.Find<ImageSource_GetSourceDelegate>("ImageSource_GetSource");
    _ImageSource_GetWidth = lib.Find<ImageSource_GetWidthDelegate>("ImageSource_GetWidth");
    _ImageSource_GetHeight = lib.Find<ImageSource_GetHeightDelegate>("ImageSource_GetHeight");
    _new_Application = lib.Find<new_ApplicationDelegate>("new_Application");
    _delete_Application = lib.Find<delete_ApplicationDelegate>("delete_Application");
    _Application_Current = lib.Find<Application_CurrentDelegate>("Application_Current");
    _Application_GetStartupUri = lib.Find<Application_GetStartupUriDelegate>("Application_GetStartupUri");
    _Application_SetStartupUri = lib.Find<Application_SetStartupUriDelegate>("Application_SetStartupUri");
    _Application_GetResources = lib.Find<Application_GetResourcesDelegate>("Application_GetResources");
    _Application_SetResources = lib.Find<Application_SetResourcesDelegate>("Application_SetResources");
    _Application_GetMainWindow = lib.Find<Application_GetMainWindowDelegate>("Application_GetMainWindow");
    _Application_Tick = lib.Find<Application_TickDelegate>("Application_Tick");
    _Application_ShowMessageBox__SWIG_0 = lib.Find<Application_ShowMessageBox__SWIG_0Delegate>("Application_ShowMessageBox__SWIG_0");
    _Application_ShowMessageBox__SWIG_1 = lib.Find<Application_ShowMessageBox__SWIG_1Delegate>("Application_ShowMessageBox__SWIG_1");
    _Application_ShowMessageBox__SWIG_2 = lib.Find<Application_ShowMessageBox__SWIG_2Delegate>("Application_ShowMessageBox__SWIG_2");
    _Application_ShowMessageBox__SWIG_3 = lib.Find<Application_ShowMessageBox__SWIG_3Delegate>("Application_ShowMessageBox__SWIG_3");
    _Application_ShowMessageBox__SWIG_4 = lib.Find<Application_ShowMessageBox__SWIG_4Delegate>("Application_ShowMessageBox__SWIG_4");
    _Application_IsInitialized = lib.Find<Application_IsInitializedDelegate>("Application_IsInitialized");
    _Application_Init = lib.Find<Application_InitDelegate>("Application_Init");
    _ApplicationCommands_CancelPrintCommand_set = lib.Find<ApplicationCommands_CancelPrintCommand_setDelegate>("ApplicationCommands_CancelPrintCommand_set");
    _ApplicationCommands_CancelPrintCommand_get = lib.Find<ApplicationCommands_CancelPrintCommand_getDelegate>("ApplicationCommands_CancelPrintCommand_get");
    _ApplicationCommands_CloseCommand_set = lib.Find<ApplicationCommands_CloseCommand_setDelegate>("ApplicationCommands_CloseCommand_set");
    _ApplicationCommands_CloseCommand_get = lib.Find<ApplicationCommands_CloseCommand_getDelegate>("ApplicationCommands_CloseCommand_get");
    _ApplicationCommands_ContextMenuCommand_set = lib.Find<ApplicationCommands_ContextMenuCommand_setDelegate>("ApplicationCommands_ContextMenuCommand_set");
    _ApplicationCommands_ContextMenuCommand_get = lib.Find<ApplicationCommands_ContextMenuCommand_getDelegate>("ApplicationCommands_ContextMenuCommand_get");
    _ApplicationCommands_CopyCommand_set = lib.Find<ApplicationCommands_CopyCommand_setDelegate>("ApplicationCommands_CopyCommand_set");
    _ApplicationCommands_CopyCommand_get = lib.Find<ApplicationCommands_CopyCommand_getDelegate>("ApplicationCommands_CopyCommand_get");
    _ApplicationCommands_CorrectionListCommand_set = lib.Find<ApplicationCommands_CorrectionListCommand_setDelegate>("ApplicationCommands_CorrectionListCommand_set");
    _ApplicationCommands_CorrectionListCommand_get = lib.Find<ApplicationCommands_CorrectionListCommand_getDelegate>("ApplicationCommands_CorrectionListCommand_get");
    _ApplicationCommands_CutCommand_set = lib.Find<ApplicationCommands_CutCommand_setDelegate>("ApplicationCommands_CutCommand_set");
    _ApplicationCommands_CutCommand_get = lib.Find<ApplicationCommands_CutCommand_getDelegate>("ApplicationCommands_CutCommand_get");
    _ApplicationCommands_DeleteCommand_set = lib.Find<ApplicationCommands_DeleteCommand_setDelegate>("ApplicationCommands_DeleteCommand_set");
    _ApplicationCommands_DeleteCommand_get = lib.Find<ApplicationCommands_DeleteCommand_getDelegate>("ApplicationCommands_DeleteCommand_get");
    _ApplicationCommands_FindCommand_set = lib.Find<ApplicationCommands_FindCommand_setDelegate>("ApplicationCommands_FindCommand_set");
    _ApplicationCommands_FindCommand_get = lib.Find<ApplicationCommands_FindCommand_getDelegate>("ApplicationCommands_FindCommand_get");
    _ApplicationCommands_HelpCommand_set = lib.Find<ApplicationCommands_HelpCommand_setDelegate>("ApplicationCommands_HelpCommand_set");
    _ApplicationCommands_HelpCommand_get = lib.Find<ApplicationCommands_HelpCommand_getDelegate>("ApplicationCommands_HelpCommand_get");
    _ApplicationCommands_NewCommand_set = lib.Find<ApplicationCommands_NewCommand_setDelegate>("ApplicationCommands_NewCommand_set");
    _ApplicationCommands_NewCommand_get = lib.Find<ApplicationCommands_NewCommand_getDelegate>("ApplicationCommands_NewCommand_get");
    _ApplicationCommands_OpenCommand_set = lib.Find<ApplicationCommands_OpenCommand_setDelegate>("ApplicationCommands_OpenCommand_set");
    _ApplicationCommands_OpenCommand_get = lib.Find<ApplicationCommands_OpenCommand_getDelegate>("ApplicationCommands_OpenCommand_get");
    _ApplicationCommands_PasteCommand_set = lib.Find<ApplicationCommands_PasteCommand_setDelegate>("ApplicationCommands_PasteCommand_set");
    _ApplicationCommands_PasteCommand_get = lib.Find<ApplicationCommands_PasteCommand_getDelegate>("ApplicationCommands_PasteCommand_get");
    _ApplicationCommands_PrintCommand_set = lib.Find<ApplicationCommands_PrintCommand_setDelegate>("ApplicationCommands_PrintCommand_set");
    _ApplicationCommands_PrintCommand_get = lib.Find<ApplicationCommands_PrintCommand_getDelegate>("ApplicationCommands_PrintCommand_get");
    _ApplicationCommands_PrintPreviewCommand_set = lib.Find<ApplicationCommands_PrintPreviewCommand_setDelegate>("ApplicationCommands_PrintPreviewCommand_set");
    _ApplicationCommands_PrintPreviewCommand_get = lib.Find<ApplicationCommands_PrintPreviewCommand_getDelegate>("ApplicationCommands_PrintPreviewCommand_get");
    _ApplicationCommands_PropertiesCommand_set = lib.Find<ApplicationCommands_PropertiesCommand_setDelegate>("ApplicationCommands_PropertiesCommand_set");
    _ApplicationCommands_PropertiesCommand_get = lib.Find<ApplicationCommands_PropertiesCommand_getDelegate>("ApplicationCommands_PropertiesCommand_get");
    _ApplicationCommands_RedoCommand_set = lib.Find<ApplicationCommands_RedoCommand_setDelegate>("ApplicationCommands_RedoCommand_set");
    _ApplicationCommands_RedoCommand_get = lib.Find<ApplicationCommands_RedoCommand_getDelegate>("ApplicationCommands_RedoCommand_get");
    _ApplicationCommands_ReplaceCommand_set = lib.Find<ApplicationCommands_ReplaceCommand_setDelegate>("ApplicationCommands_ReplaceCommand_set");
    _ApplicationCommands_ReplaceCommand_get = lib.Find<ApplicationCommands_ReplaceCommand_getDelegate>("ApplicationCommands_ReplaceCommand_get");
    _ApplicationCommands_SaveCommand_set = lib.Find<ApplicationCommands_SaveCommand_setDelegate>("ApplicationCommands_SaveCommand_set");
    _ApplicationCommands_SaveCommand_get = lib.Find<ApplicationCommands_SaveCommand_getDelegate>("ApplicationCommands_SaveCommand_get");
    _ApplicationCommands_SaveAsCommand_set = lib.Find<ApplicationCommands_SaveAsCommand_setDelegate>("ApplicationCommands_SaveAsCommand_set");
    _ApplicationCommands_SaveAsCommand_get = lib.Find<ApplicationCommands_SaveAsCommand_getDelegate>("ApplicationCommands_SaveAsCommand_get");
    _ApplicationCommands_SelectAllCommand_set = lib.Find<ApplicationCommands_SelectAllCommand_setDelegate>("ApplicationCommands_SelectAllCommand_set");
    _ApplicationCommands_SelectAllCommand_get = lib.Find<ApplicationCommands_SelectAllCommand_getDelegate>("ApplicationCommands_SelectAllCommand_get");
    _ApplicationCommands_StopCommand_set = lib.Find<ApplicationCommands_StopCommand_setDelegate>("ApplicationCommands_StopCommand_set");
    _ApplicationCommands_StopCommand_get = lib.Find<ApplicationCommands_StopCommand_getDelegate>("ApplicationCommands_StopCommand_get");
    _ApplicationCommands_UndoCommand_set = lib.Find<ApplicationCommands_UndoCommand_setDelegate>("ApplicationCommands_UndoCommand_set");
    _ApplicationCommands_UndoCommand_get = lib.Find<ApplicationCommands_UndoCommand_getDelegate>("ApplicationCommands_UndoCommand_get");
    _new_ApplicationCommands = lib.Find<new_ApplicationCommandsDelegate>("new_ApplicationCommands");
    _delete_ApplicationCommands = lib.Find<delete_ApplicationCommandsDelegate>("delete_ApplicationCommands");
    _new_AtlasSource__SWIG_0 = lib.Find<new_AtlasSource__SWIG_0Delegate>("new_AtlasSource__SWIG_0");
    _new_AtlasSource__SWIG_1 = lib.Find<new_AtlasSource__SWIG_1Delegate>("new_AtlasSource__SWIG_1");
    _new_AtlasSource__SWIG_2 = lib.Find<new_AtlasSource__SWIG_2Delegate>("new_AtlasSource__SWIG_2");
    _delete_AtlasSource = lib.Find<delete_AtlasSourceDelegate>("delete_AtlasSource");
    _AtlasSource_GetAtlasList = lib.Find<AtlasSource_GetAtlasListDelegate>("AtlasSource_GetAtlasList");
    _AtlasSource_SetAtlasList = lib.Find<AtlasSource_SetAtlasListDelegate>("AtlasSource_SetAtlasList");
    _AtlasSource_GetAtlasIndex = lib.Find<AtlasSource_GetAtlasIndexDelegate>("AtlasSource_GetAtlasIndex");
    _AtlasSource_SetAtlasIndex = lib.Find<AtlasSource_SetAtlasIndexDelegate>("AtlasSource_SetAtlasIndex");
    _AtlasSource_GetRect = lib.Find<AtlasSource_GetRectDelegate>("AtlasSource_GetRect");
    _AtlasSource_SetRect = lib.Find<AtlasSource_SetRectDelegate>("AtlasSource_SetRect");
    _AtlasSource_GetDpiX = lib.Find<AtlasSource_GetDpiXDelegate>("AtlasSource_GetDpiX");
    _AtlasSource_SetDpiX = lib.Find<AtlasSource_SetDpiXDelegate>("AtlasSource_SetDpiX");
    _AtlasSource_GetDpiY = lib.Find<AtlasSource_GetDpiYDelegate>("AtlasSource_GetDpiY");
    _AtlasSource_SetDpiY = lib.Find<AtlasSource_SetDpiYDelegate>("AtlasSource_SetDpiY");
    _AtlasSource_GetPixelWidth = lib.Find<AtlasSource_GetPixelWidthDelegate>("AtlasSource_GetPixelWidth");
    _AtlasSource_GetPixelHeight = lib.Find<AtlasSource_GetPixelHeightDelegate>("AtlasSource_GetPixelHeight");
    _AtlasSource_CreateRenderProxy = lib.Find<AtlasSource_CreateRenderProxyDelegate>("AtlasSource_CreateRenderProxy");
    _AtlasSource_UpdateRenderProxy = lib.Find<AtlasSource_UpdateRenderProxyDelegate>("AtlasSource_UpdateRenderProxy");
    _AtlasSource_UnregisterRenderer = lib.Find<AtlasSource_UnregisterRendererDelegate>("AtlasSource_UnregisterRenderer");
    _delete_BaseBinding = lib.Find<delete_BaseBindingDelegate>("delete_BaseBinding");
    _BaseBinding_GetStringFormat = lib.Find<BaseBinding_GetStringFormatDelegate>("BaseBinding_GetStringFormat");
    _BaseBinding_SetStringFormat = lib.Find<BaseBinding_SetStringFormatDelegate>("BaseBinding_SetStringFormat");
    _delete_BaseBindingExpression = lib.Find<delete_BaseBindingExpressionDelegate>("delete_BaseBindingExpression");
    _BaseBindingExpression_GetBinding = lib.Find<BaseBindingExpression_GetBindingDelegate>("BaseBindingExpression_GetBinding");
    _delete_BaseButton = lib.Find<delete_BaseButtonDelegate>("delete_BaseButton");
    _BaseButton_GetClickMode = lib.Find<BaseButton_GetClickModeDelegate>("BaseButton_GetClickMode");
    _BaseButton_SetClickMode = lib.Find<BaseButton_SetClickModeDelegate>("BaseButton_SetClickMode");
    _BaseButton_GetCommandParameter = lib.Find<BaseButton_GetCommandParameterDelegate>("BaseButton_GetCommandParameter");
    _BaseButton_SetCommandParameter = lib.Find<BaseButton_SetCommandParameterDelegate>("BaseButton_SetCommandParameter");
    _BaseButton_GetCommandTarget = lib.Find<BaseButton_GetCommandTargetDelegate>("BaseButton_GetCommandTarget");
    _BaseButton_SetCommandTarget = lib.Find<BaseButton_SetCommandTargetDelegate>("BaseButton_SetCommandTarget");
    _BaseButton_GetIsPressed = lib.Find<BaseButton_GetIsPressedDelegate>("BaseButton_GetIsPressed");
    _new_ToggleButton = lib.Find<new_ToggleButtonDelegate>("new_ToggleButton");
    _ToggleButton_GetIsChecked = lib.Find<ToggleButton_GetIsCheckedDelegate>("ToggleButton_GetIsChecked");
    _ToggleButton_SetIsChecked = lib.Find<ToggleButton_SetIsCheckedDelegate>("ToggleButton_SetIsChecked");
    _ToggleButton_GetIsThreeState = lib.Find<ToggleButton_GetIsThreeStateDelegate>("ToggleButton_GetIsThreeState");
    _ToggleButton_SetIsThreeState = lib.Find<ToggleButton_SetIsThreeStateDelegate>("ToggleButton_SetIsThreeState");
    _delete_ToggleButton = lib.Find<delete_ToggleButtonDelegate>("delete_ToggleButton");
    _delete_BaseCommand = lib.Find<delete_BaseCommandDelegate>("delete_BaseCommand");
    _BaseCommand_GetName = lib.Find<BaseCommand_GetNameDelegate>("BaseCommand_GetName");
    _BaseCommand_GetOwnerType = lib.Find<BaseCommand_GetOwnerTypeDelegate>("BaseCommand_GetOwnerType");
    _BaseCommand_CanExecuteChanged = lib.Find<BaseCommand_CanExecuteChangedDelegate>("BaseCommand_CanExecuteChanged");
    _BaseCommand_CanExecute = lib.Find<BaseCommand_CanExecuteDelegate>("BaseCommand_CanExecute");
    _BaseCommand_Execute = lib.Find<BaseCommand_ExecuteDelegate>("BaseCommand_Execute");
    _delete_BaseDefinition = lib.Find<delete_BaseDefinitionDelegate>("delete_BaseDefinition");
    _BaseDefinition_GetSharedSizeGroup = lib.Find<BaseDefinition_GetSharedSizeGroupDelegate>("BaseDefinition_GetSharedSizeGroup");
    _BaseDefinition_SetSharedSizeGroup = lib.Find<BaseDefinition_SetSharedSizeGroupDelegate>("BaseDefinition_SetSharedSizeGroup");
    _delete_BaseMenu = lib.Find<delete_BaseMenuDelegate>("delete_BaseMenu");
    _delete_BaseTextBox = lib.Find<delete_BaseTextBoxDelegate>("delete_BaseTextBox");
    _BaseTextBox_GetAcceptsReturn = lib.Find<BaseTextBox_GetAcceptsReturnDelegate>("BaseTextBox_GetAcceptsReturn");
    _BaseTextBox_SetAcceptsReturn = lib.Find<BaseTextBox_SetAcceptsReturnDelegate>("BaseTextBox_SetAcceptsReturn");
    _BaseTextBox_GetAcceptsTab = lib.Find<BaseTextBox_GetAcceptsTabDelegate>("BaseTextBox_GetAcceptsTab");
    _BaseTextBox_SetAcceptsTab = lib.Find<BaseTextBox_SetAcceptsTabDelegate>("BaseTextBox_SetAcceptsTab");
    _BaseTextBox_GetAutoWordSelection = lib.Find<BaseTextBox_GetAutoWordSelectionDelegate>("BaseTextBox_GetAutoWordSelection");
    _BaseTextBox_SetAutoWordSelection = lib.Find<BaseTextBox_SetAutoWordSelectionDelegate>("BaseTextBox_SetAutoWordSelection");
    _BaseTextBox_GetCaretBrush = lib.Find<BaseTextBox_GetCaretBrushDelegate>("BaseTextBox_GetCaretBrush");
    _BaseTextBox_SetCaretBrush = lib.Find<BaseTextBox_SetCaretBrushDelegate>("BaseTextBox_SetCaretBrush");
    _BaseTextBox_GetHorizontalScrollBarVisibility = lib.Find<BaseTextBox_GetHorizontalScrollBarVisibilityDelegate>("BaseTextBox_GetHorizontalScrollBarVisibility");
    _BaseTextBox_SetHorizontalScrollBarVisibility = lib.Find<BaseTextBox_SetHorizontalScrollBarVisibilityDelegate>("BaseTextBox_SetHorizontalScrollBarVisibility");
    _BaseTextBox_GetIsReadOnly = lib.Find<BaseTextBox_GetIsReadOnlyDelegate>("BaseTextBox_GetIsReadOnly");
    _BaseTextBox_SetIsReadOnly = lib.Find<BaseTextBox_SetIsReadOnlyDelegate>("BaseTextBox_SetIsReadOnly");
    _BaseTextBox_GetIsUndoEnabled = lib.Find<BaseTextBox_GetIsUndoEnabledDelegate>("BaseTextBox_GetIsUndoEnabled");
    _BaseTextBox_SetIsUndoEnabled = lib.Find<BaseTextBox_SetIsUndoEnabledDelegate>("BaseTextBox_SetIsUndoEnabled");
    _BaseTextBox_GetSelectionBrush = lib.Find<BaseTextBox_GetSelectionBrushDelegate>("BaseTextBox_GetSelectionBrush");
    _BaseTextBox_SetSelectionBrush = lib.Find<BaseTextBox_SetSelectionBrushDelegate>("BaseTextBox_SetSelectionBrush");
    _BaseTextBox_GetSelectionOpacity = lib.Find<BaseTextBox_GetSelectionOpacityDelegate>("BaseTextBox_GetSelectionOpacity");
    _BaseTextBox_SetSelectionOpacity = lib.Find<BaseTextBox_SetSelectionOpacityDelegate>("BaseTextBox_SetSelectionOpacity");
    _BaseTextBox_GetUndoLimit = lib.Find<BaseTextBox_GetUndoLimitDelegate>("BaseTextBox_GetUndoLimit");
    _BaseTextBox_SetUndoLimit = lib.Find<BaseTextBox_SetUndoLimitDelegate>("BaseTextBox_SetUndoLimit");
    _BaseTextBox_GetVerticalScrollBarVisibility = lib.Find<BaseTextBox_GetVerticalScrollBarVisibilityDelegate>("BaseTextBox_GetVerticalScrollBarVisibility");
    _BaseTextBox_SetVerticalScrollBarVisibility = lib.Find<BaseTextBox_SetVerticalScrollBarVisibilityDelegate>("BaseTextBox_SetVerticalScrollBarVisibility");
    _delete_BaseTrigger = lib.Find<delete_BaseTriggerDelegate>("delete_BaseTrigger");
    _BaseTrigger_GetEnterActions = lib.Find<BaseTrigger_GetEnterActionsDelegate>("BaseTrigger_GetEnterActions");
    _BaseTrigger_GetExitActions = lib.Find<BaseTrigger_GetExitActionsDelegate>("BaseTrigger_GetExitActions");
    _BaseTrigger_RegisterSources = lib.Find<BaseTrigger_RegisterSourcesDelegate>("BaseTrigger_RegisterSources");
    _BaseTrigger_UnregisterSources = lib.Find<BaseTrigger_UnregisterSourcesDelegate>("BaseTrigger_UnregisterSources");
    _BaseTrigger_RegisterEvents = lib.Find<BaseTrigger_RegisterEventsDelegate>("BaseTrigger_RegisterEvents");
    _BaseTrigger_UnregisterEvents = lib.Find<BaseTrigger_UnregisterEventsDelegate>("BaseTrigger_UnregisterEvents");
    _BaseTrigger_Check = lib.Find<BaseTrigger_CheckDelegate>("BaseTrigger_Check");
    _BaseTrigger_FindValue = lib.Find<BaseTrigger_FindValueDelegate>("BaseTrigger_FindValue");
    _BaseTrigger_Invalidate__SWIG_0 = lib.Find<BaseTrigger_Invalidate__SWIG_0Delegate>("BaseTrigger_Invalidate__SWIG_0");
    _BaseTrigger_Invalidate__SWIG_1 = lib.Find<BaseTrigger_Invalidate__SWIG_1Delegate>("BaseTrigger_Invalidate__SWIG_1");
    _BaseTrigger_FireEnterActions__SWIG_0 = lib.Find<BaseTrigger_FireEnterActions__SWIG_0Delegate>("BaseTrigger_FireEnterActions__SWIG_0");
    _BaseTrigger_FireEnterActions__SWIG_1 = lib.Find<BaseTrigger_FireEnterActions__SWIG_1Delegate>("BaseTrigger_FireEnterActions__SWIG_1");
    _BaseTrigger_FireExitActions__SWIG_0 = lib.Find<BaseTrigger_FireExitActions__SWIG_0Delegate>("BaseTrigger_FireExitActions__SWIG_0");
    _BaseTrigger_FireExitActions__SWIG_1 = lib.Find<BaseTrigger_FireExitActions__SWIG_1Delegate>("BaseTrigger_FireExitActions__SWIG_1");
    _delete_BaseValueConverter = lib.Find<delete_BaseValueConverterDelegate>("delete_BaseValueConverter");
    _BaseValueConverter_Convert = lib.Find<BaseValueConverter_ConvertDelegate>("BaseValueConverter_Convert");
    _BaseValueConverter_TryConvert = lib.Find<BaseValueConverter_TryConvertDelegate>("BaseValueConverter_TryConvert");
    _BaseValueConverter_ConvertBack = lib.Find<BaseValueConverter_ConvertBackDelegate>("BaseValueConverter_ConvertBack");
    _BaseValueConverter_TryConvertBack = lib.Find<BaseValueConverter_TryConvertBackDelegate>("BaseValueConverter_TryConvertBack");
    _new_Binding__SWIG_0 = lib.Find<new_Binding__SWIG_0Delegate>("new_Binding__SWIG_0");
    _new_Binding__SWIG_1 = lib.Find<new_Binding__SWIG_1Delegate>("new_Binding__SWIG_1");
    _new_Binding__SWIG_2 = lib.Find<new_Binding__SWIG_2Delegate>("new_Binding__SWIG_2");
    _new_Binding__SWIG_3 = lib.Find<new_Binding__SWIG_3Delegate>("new_Binding__SWIG_3");
    _new_Binding__SWIG_4 = lib.Find<new_Binding__SWIG_4Delegate>("new_Binding__SWIG_4");
    _delete_Binding = lib.Find<delete_BindingDelegate>("delete_Binding");
    _Binding_GetElementName = lib.Find<Binding_GetElementNameDelegate>("Binding_GetElementName");
    _Binding_SetElementName = lib.Find<Binding_SetElementNameDelegate>("Binding_SetElementName");
    _Binding_GetSource = lib.Find<Binding_GetSourceDelegate>("Binding_GetSource");
    _Binding_SetSource = lib.Find<Binding_SetSourceDelegate>("Binding_SetSource");
    _Binding_GetRelativeSource = lib.Find<Binding_GetRelativeSourceDelegate>("Binding_GetRelativeSource");
    _Binding_SetRelativeSource = lib.Find<Binding_SetRelativeSourceDelegate>("Binding_SetRelativeSource");
    _Binding_GetPath = lib.Find<Binding_GetPathDelegate>("Binding_GetPath");
    _Binding_SetPath = lib.Find<Binding_SetPathDelegate>("Binding_SetPath");
    _Binding_GetMode = lib.Find<Binding_GetModeDelegate>("Binding_GetMode");
    _Binding_SetMode = lib.Find<Binding_SetModeDelegate>("Binding_SetMode");
    _Binding_GetConverter = lib.Find<Binding_GetConverterDelegate>("Binding_GetConverter");
    _Binding_SetConverter = lib.Find<Binding_SetConverterDelegate>("Binding_SetConverter");
    _Binding_GetConverterParameter = lib.Find<Binding_GetConverterParameterDelegate>("Binding_GetConverterParameter");
    _Binding_SetConverterParameter = lib.Find<Binding_SetConverterParameterDelegate>("Binding_SetConverterParameter");
    _Binding_GetFallbackValue = lib.Find<Binding_GetFallbackValueDelegate>("Binding_GetFallbackValue");
    _Binding_SetFallbackValue = lib.Find<Binding_SetFallbackValueDelegate>("Binding_SetFallbackValue");
    _Binding_GetUpdateSourceTrigger = lib.Find<Binding_GetUpdateSourceTriggerDelegate>("Binding_GetUpdateSourceTrigger");
    _Binding_SetUpdateSourceTrigger = lib.Find<Binding_SetUpdateSourceTriggerDelegate>("Binding_SetUpdateSourceTrigger");
    _Binding_GetSourceObject = lib.Find<Binding_GetSourceObjectDelegate>("Binding_GetSourceObject");
    _Binding_ProvideValue = lib.Find<Binding_ProvideValueDelegate>("Binding_ProvideValue");
    _ClearAllBindings = lib.Find<ClearAllBindingsDelegate>("ClearAllBindings");
    _ClearBinding = lib.Find<ClearBindingDelegate>("ClearBinding");
    _GetBindingBase = lib.Find<GetBindingBaseDelegate>("GetBindingBase");
    _GetBindingExpression = lib.Find<GetBindingExpressionDelegate>("GetBindingExpression");
    _SetBinding = lib.Find<SetBindingDelegate>("SetBinding");
    _new_BitmapSource__SWIG_0 = lib.Find<new_BitmapSource__SWIG_0Delegate>("new_BitmapSource__SWIG_0");
    _new_BitmapSource__SWIG_1 = lib.Find<new_BitmapSource__SWIG_1Delegate>("new_BitmapSource__SWIG_1");
    _delete_BitmapSource = lib.Find<delete_BitmapSourceDelegate>("delete_BitmapSource");
    _BitmapSource_GetImage = lib.Find<BitmapSource_GetImageDelegate>("BitmapSource_GetImage");
    _BitmapSource_SetImage = lib.Find<BitmapSource_SetImageDelegate>("BitmapSource_SetImage");
    _BitmapSource_GetDpiX = lib.Find<BitmapSource_GetDpiXDelegate>("BitmapSource_GetDpiX");
    _BitmapSource_GetDpiY = lib.Find<BitmapSource_GetDpiYDelegate>("BitmapSource_GetDpiY");
    _BitmapSource_GetPixelWidth = lib.Find<BitmapSource_GetPixelWidthDelegate>("BitmapSource_GetPixelWidth");
    _BitmapSource_GetPixelHeight = lib.Find<BitmapSource_GetPixelHeightDelegate>("BitmapSource_GetPixelHeight");
    _BitmapSource_CreateRenderProxy = lib.Find<BitmapSource_CreateRenderProxyDelegate>("BitmapSource_CreateRenderProxy");
    _BitmapSource_UpdateRenderProxy = lib.Find<BitmapSource_UpdateRenderProxyDelegate>("BitmapSource_UpdateRenderProxy");
    _BitmapSource_UnregisterRenderer = lib.Find<BitmapSource_UnregisterRendererDelegate>("BitmapSource_UnregisterRenderer");
    _new_Border__SWIG_0 = lib.Find<new_Border__SWIG_0Delegate>("new_Border__SWIG_0");
    _new_Border__SWIG_1 = lib.Find<new_Border__SWIG_1Delegate>("new_Border__SWIG_1");
    _delete_Border = lib.Find<delete_BorderDelegate>("delete_Border");
    _Border_GetBackground = lib.Find<Border_GetBackgroundDelegate>("Border_GetBackground");
    _Border_SetBackground = lib.Find<Border_SetBackgroundDelegate>("Border_SetBackground");
    _Border_GetBorderBrush = lib.Find<Border_GetBorderBrushDelegate>("Border_GetBorderBrush");
    _Border_SetBorderBrush = lib.Find<Border_SetBorderBrushDelegate>("Border_SetBorderBrush");
    _Border_GetBorderThickness = lib.Find<Border_GetBorderThicknessDelegate>("Border_GetBorderThickness");
    _Border_SetBorderThickness = lib.Find<Border_SetBorderThicknessDelegate>("Border_SetBorderThickness");
    _Border_GetCornerRadius = lib.Find<Border_GetCornerRadiusDelegate>("Border_GetCornerRadius");
    _Border_SetCornerRadius = lib.Find<Border_SetCornerRadiusDelegate>("Border_SetCornerRadius");
    _Border_GetPadding = lib.Find<Border_GetPaddingDelegate>("Border_GetPadding");
    _Border_SetPadding = lib.Find<Border_SetPaddingDelegate>("Border_SetPadding");
    _delete_Brush = lib.Find<delete_BrushDelegate>("delete_Brush");
    _Brush_Parse = lib.Find<Brush_ParseDelegate>("Brush_Parse");
    _Brush_TryParse = lib.Find<Brush_TryParseDelegate>("Brush_TryParse");
    _Brush_GetOpacity = lib.Find<Brush_GetOpacityDelegate>("Brush_GetOpacity");
    _Brush_SetOpacity = lib.Find<Brush_SetOpacityDelegate>("Brush_SetOpacity");
    _Brush_GetRelativeTransform = lib.Find<Brush_GetRelativeTransformDelegate>("Brush_GetRelativeTransform");
    _Brush_SetRelativeTransform = lib.Find<Brush_SetRelativeTransformDelegate>("Brush_SetRelativeTransform");
    _Brush_GetTransform = lib.Find<Brush_GetTransformDelegate>("Brush_GetTransform");
    _Brush_SetTransform = lib.Find<Brush_SetTransformDelegate>("Brush_SetTransform");
    _Brush_IsTransparent = lib.Find<Brush_IsTransparentDelegate>("Brush_IsTransparent");
    _Brush_UpdateRenderProxy = lib.Find<Brush_UpdateRenderProxyDelegate>("Brush_UpdateRenderProxy");
    _Brush_UnregisterRenderer = lib.Find<Brush_UnregisterRendererDelegate>("Brush_UnregisterRenderer");
    _Brushes_AliceBlue = lib.Find<Brushes_AliceBlueDelegate>("Brushes_AliceBlue");
    _Brushes_AntiqueWhite = lib.Find<Brushes_AntiqueWhiteDelegate>("Brushes_AntiqueWhite");
    _Brushes_Aqua = lib.Find<Brushes_AquaDelegate>("Brushes_Aqua");
    _Brushes_Aquamarine = lib.Find<Brushes_AquamarineDelegate>("Brushes_Aquamarine");
    _Brushes_Azure = lib.Find<Brushes_AzureDelegate>("Brushes_Azure");
    _Brushes_Beige = lib.Find<Brushes_BeigeDelegate>("Brushes_Beige");
    _Brushes_Bisque = lib.Find<Brushes_BisqueDelegate>("Brushes_Bisque");
    _Brushes_Black = lib.Find<Brushes_BlackDelegate>("Brushes_Black");
    _Brushes_BlanchedAlmond = lib.Find<Brushes_BlanchedAlmondDelegate>("Brushes_BlanchedAlmond");
    _Brushes_Blue = lib.Find<Brushes_BlueDelegate>("Brushes_Blue");
    _Brushes_BlueViolet = lib.Find<Brushes_BlueVioletDelegate>("Brushes_BlueViolet");
    _Brushes_Brown = lib.Find<Brushes_BrownDelegate>("Brushes_Brown");
    _Brushes_BurlyWood = lib.Find<Brushes_BurlyWoodDelegate>("Brushes_BurlyWood");
    _Brushes_CadetBlue = lib.Find<Brushes_CadetBlueDelegate>("Brushes_CadetBlue");
    _Brushes_Chartreuse = lib.Find<Brushes_ChartreuseDelegate>("Brushes_Chartreuse");
    _Brushes_Chocolate = lib.Find<Brushes_ChocolateDelegate>("Brushes_Chocolate");
    _Brushes_Coral = lib.Find<Brushes_CoralDelegate>("Brushes_Coral");
    _Brushes_CornflowerBlue = lib.Find<Brushes_CornflowerBlueDelegate>("Brushes_CornflowerBlue");
    _Brushes_Cornsilk = lib.Find<Brushes_CornsilkDelegate>("Brushes_Cornsilk");
    _Brushes_Crimson = lib.Find<Brushes_CrimsonDelegate>("Brushes_Crimson");
    _Brushes_Cyan = lib.Find<Brushes_CyanDelegate>("Brushes_Cyan");
    _Brushes_DarkBlue = lib.Find<Brushes_DarkBlueDelegate>("Brushes_DarkBlue");
    _Brushes_DarkCyan = lib.Find<Brushes_DarkCyanDelegate>("Brushes_DarkCyan");
    _Brushes_DarkGoldenrod = lib.Find<Brushes_DarkGoldenrodDelegate>("Brushes_DarkGoldenrod");
    _Brushes_DarkGray = lib.Find<Brushes_DarkGrayDelegate>("Brushes_DarkGray");
    _Brushes_DarkGreen = lib.Find<Brushes_DarkGreenDelegate>("Brushes_DarkGreen");
    _Brushes_DarkKhaki = lib.Find<Brushes_DarkKhakiDelegate>("Brushes_DarkKhaki");
    _Brushes_DarkMagenta = lib.Find<Brushes_DarkMagentaDelegate>("Brushes_DarkMagenta");
    _Brushes_DarkOliveGreen = lib.Find<Brushes_DarkOliveGreenDelegate>("Brushes_DarkOliveGreen");
    _Brushes_DarkOrange = lib.Find<Brushes_DarkOrangeDelegate>("Brushes_DarkOrange");
    _Brushes_DarkOrchid = lib.Find<Brushes_DarkOrchidDelegate>("Brushes_DarkOrchid");
    _Brushes_DarkRed = lib.Find<Brushes_DarkRedDelegate>("Brushes_DarkRed");
    _Brushes_DarkSalmon = lib.Find<Brushes_DarkSalmonDelegate>("Brushes_DarkSalmon");
    _Brushes_DarkSeaGreen = lib.Find<Brushes_DarkSeaGreenDelegate>("Brushes_DarkSeaGreen");
    _Brushes_DarkSlateBlue = lib.Find<Brushes_DarkSlateBlueDelegate>("Brushes_DarkSlateBlue");
    _Brushes_DarkSlateGray = lib.Find<Brushes_DarkSlateGrayDelegate>("Brushes_DarkSlateGray");
    _Brushes_DarkTurquoise = lib.Find<Brushes_DarkTurquoiseDelegate>("Brushes_DarkTurquoise");
    _Brushes_DarkViolet = lib.Find<Brushes_DarkVioletDelegate>("Brushes_DarkViolet");
    _Brushes_DeepPink = lib.Find<Brushes_DeepPinkDelegate>("Brushes_DeepPink");
    _Brushes_DeepSkyBlue = lib.Find<Brushes_DeepSkyBlueDelegate>("Brushes_DeepSkyBlue");
    _Brushes_DimGray = lib.Find<Brushes_DimGrayDelegate>("Brushes_DimGray");
    _Brushes_DodgerBlue = lib.Find<Brushes_DodgerBlueDelegate>("Brushes_DodgerBlue");
    _Brushes_Firebrick = lib.Find<Brushes_FirebrickDelegate>("Brushes_Firebrick");
    _Brushes_FloralWhite = lib.Find<Brushes_FloralWhiteDelegate>("Brushes_FloralWhite");
    _Brushes_ForestGreen = lib.Find<Brushes_ForestGreenDelegate>("Brushes_ForestGreen");
    _Brushes_Fuchsia = lib.Find<Brushes_FuchsiaDelegate>("Brushes_Fuchsia");
    _Brushes_Gainsboro = lib.Find<Brushes_GainsboroDelegate>("Brushes_Gainsboro");
    _Brushes_GhostWhite = lib.Find<Brushes_GhostWhiteDelegate>("Brushes_GhostWhite");
    _Brushes_Gold = lib.Find<Brushes_GoldDelegate>("Brushes_Gold");
    _Brushes_Goldenrod = lib.Find<Brushes_GoldenrodDelegate>("Brushes_Goldenrod");
    _Brushes_Gray = lib.Find<Brushes_GrayDelegate>("Brushes_Gray");
    _Brushes_Green = lib.Find<Brushes_GreenDelegate>("Brushes_Green");
    _Brushes_GreenYellow = lib.Find<Brushes_GreenYellowDelegate>("Brushes_GreenYellow");
    _Brushes_Honeydew = lib.Find<Brushes_HoneydewDelegate>("Brushes_Honeydew");
    _Brushes_HotPink = lib.Find<Brushes_HotPinkDelegate>("Brushes_HotPink");
    _Brushes_IndianRed = lib.Find<Brushes_IndianRedDelegate>("Brushes_IndianRed");
    _Brushes_Indigo = lib.Find<Brushes_IndigoDelegate>("Brushes_Indigo");
    _Brushes_Ivory = lib.Find<Brushes_IvoryDelegate>("Brushes_Ivory");
    _Brushes_Khaki = lib.Find<Brushes_KhakiDelegate>("Brushes_Khaki");
    _Brushes_Lavender = lib.Find<Brushes_LavenderDelegate>("Brushes_Lavender");
    _Brushes_LavenderBlush = lib.Find<Brushes_LavenderBlushDelegate>("Brushes_LavenderBlush");
    _Brushes_LawnGreen = lib.Find<Brushes_LawnGreenDelegate>("Brushes_LawnGreen");
    _Brushes_LemonChiffon = lib.Find<Brushes_LemonChiffonDelegate>("Brushes_LemonChiffon");
    _Brushes_LightBlue = lib.Find<Brushes_LightBlueDelegate>("Brushes_LightBlue");
    _Brushes_LightCoral = lib.Find<Brushes_LightCoralDelegate>("Brushes_LightCoral");
    _Brushes_LightCyan = lib.Find<Brushes_LightCyanDelegate>("Brushes_LightCyan");
    _Brushes_LightGoldenrodYellow = lib.Find<Brushes_LightGoldenrodYellowDelegate>("Brushes_LightGoldenrodYellow");
    _Brushes_LightGray = lib.Find<Brushes_LightGrayDelegate>("Brushes_LightGray");
    _Brushes_LightGreen = lib.Find<Brushes_LightGreenDelegate>("Brushes_LightGreen");
    _Brushes_LightPink = lib.Find<Brushes_LightPinkDelegate>("Brushes_LightPink");
    _Brushes_LightSalmon = lib.Find<Brushes_LightSalmonDelegate>("Brushes_LightSalmon");
    _Brushes_LightSeaGreen = lib.Find<Brushes_LightSeaGreenDelegate>("Brushes_LightSeaGreen");
    _Brushes_LightSkyBlue = lib.Find<Brushes_LightSkyBlueDelegate>("Brushes_LightSkyBlue");
    _Brushes_LightSlateGray = lib.Find<Brushes_LightSlateGrayDelegate>("Brushes_LightSlateGray");
    _Brushes_LightSteelBlue = lib.Find<Brushes_LightSteelBlueDelegate>("Brushes_LightSteelBlue");
    _Brushes_LightYellow = lib.Find<Brushes_LightYellowDelegate>("Brushes_LightYellow");
    _Brushes_Lime = lib.Find<Brushes_LimeDelegate>("Brushes_Lime");
    _Brushes_LimeGreen = lib.Find<Brushes_LimeGreenDelegate>("Brushes_LimeGreen");
    _Brushes_Linen = lib.Find<Brushes_LinenDelegate>("Brushes_Linen");
    _Brushes_Magenta = lib.Find<Brushes_MagentaDelegate>("Brushes_Magenta");
    _Brushes_Maroon = lib.Find<Brushes_MaroonDelegate>("Brushes_Maroon");
    _Brushes_MediumAquamarine = lib.Find<Brushes_MediumAquamarineDelegate>("Brushes_MediumAquamarine");
    _Brushes_MediumBlue = lib.Find<Brushes_MediumBlueDelegate>("Brushes_MediumBlue");
    _Brushes_MediumOrchid = lib.Find<Brushes_MediumOrchidDelegate>("Brushes_MediumOrchid");
    _Brushes_MediumPurple = lib.Find<Brushes_MediumPurpleDelegate>("Brushes_MediumPurple");
    _Brushes_MediumSeaGreen = lib.Find<Brushes_MediumSeaGreenDelegate>("Brushes_MediumSeaGreen");
    _Brushes_MediumSlateBlue = lib.Find<Brushes_MediumSlateBlueDelegate>("Brushes_MediumSlateBlue");
    _Brushes_MediumSpringGreen = lib.Find<Brushes_MediumSpringGreenDelegate>("Brushes_MediumSpringGreen");
    _Brushes_MediumTurquoise = lib.Find<Brushes_MediumTurquoiseDelegate>("Brushes_MediumTurquoise");
    _Brushes_MediumVioletRed = lib.Find<Brushes_MediumVioletRedDelegate>("Brushes_MediumVioletRed");
    _Brushes_MidnightBlue = lib.Find<Brushes_MidnightBlueDelegate>("Brushes_MidnightBlue");
    _Brushes_MintCream = lib.Find<Brushes_MintCreamDelegate>("Brushes_MintCream");
    _Brushes_MistyRose = lib.Find<Brushes_MistyRoseDelegate>("Brushes_MistyRose");
    _Brushes_Moccasin = lib.Find<Brushes_MoccasinDelegate>("Brushes_Moccasin");
    _Brushes_NavajoWhite = lib.Find<Brushes_NavajoWhiteDelegate>("Brushes_NavajoWhite");
    _Brushes_Navy = lib.Find<Brushes_NavyDelegate>("Brushes_Navy");
    _Brushes_OldLace = lib.Find<Brushes_OldLaceDelegate>("Brushes_OldLace");
    _Brushes_Olive = lib.Find<Brushes_OliveDelegate>("Brushes_Olive");
    _Brushes_OliveDrab = lib.Find<Brushes_OliveDrabDelegate>("Brushes_OliveDrab");
    _Brushes_Orange = lib.Find<Brushes_OrangeDelegate>("Brushes_Orange");
    _Brushes_OrangeRed = lib.Find<Brushes_OrangeRedDelegate>("Brushes_OrangeRed");
    _Brushes_Orchid = lib.Find<Brushes_OrchidDelegate>("Brushes_Orchid");
    _Brushes_PaleGoldenrod = lib.Find<Brushes_PaleGoldenrodDelegate>("Brushes_PaleGoldenrod");
    _Brushes_PaleGreen = lib.Find<Brushes_PaleGreenDelegate>("Brushes_PaleGreen");
    _Brushes_PaleTurquoise = lib.Find<Brushes_PaleTurquoiseDelegate>("Brushes_PaleTurquoise");
    _Brushes_PaleVioletRed = lib.Find<Brushes_PaleVioletRedDelegate>("Brushes_PaleVioletRed");
    _Brushes_PapayaWhip = lib.Find<Brushes_PapayaWhipDelegate>("Brushes_PapayaWhip");
    _Brushes_PeachPuff = lib.Find<Brushes_PeachPuffDelegate>("Brushes_PeachPuff");
    _Brushes_Peru = lib.Find<Brushes_PeruDelegate>("Brushes_Peru");
    _Brushes_Pink = lib.Find<Brushes_PinkDelegate>("Brushes_Pink");
    _Brushes_Plum = lib.Find<Brushes_PlumDelegate>("Brushes_Plum");
    _Brushes_PowderBlue = lib.Find<Brushes_PowderBlueDelegate>("Brushes_PowderBlue");
    _Brushes_Purple = lib.Find<Brushes_PurpleDelegate>("Brushes_Purple");
    _Brushes_Red = lib.Find<Brushes_RedDelegate>("Brushes_Red");
    _Brushes_RosyBrown = lib.Find<Brushes_RosyBrownDelegate>("Brushes_RosyBrown");
    _Brushes_RoyalBlue = lib.Find<Brushes_RoyalBlueDelegate>("Brushes_RoyalBlue");
    _Brushes_SaddleBrown = lib.Find<Brushes_SaddleBrownDelegate>("Brushes_SaddleBrown");
    _Brushes_Salmon = lib.Find<Brushes_SalmonDelegate>("Brushes_Salmon");
    _Brushes_SandyBrown = lib.Find<Brushes_SandyBrownDelegate>("Brushes_SandyBrown");
    _Brushes_SeaGreen = lib.Find<Brushes_SeaGreenDelegate>("Brushes_SeaGreen");
    _Brushes_SeaShell = lib.Find<Brushes_SeaShellDelegate>("Brushes_SeaShell");
    _Brushes_Sienna = lib.Find<Brushes_SiennaDelegate>("Brushes_Sienna");
    _Brushes_Silver = lib.Find<Brushes_SilverDelegate>("Brushes_Silver");
    _Brushes_SkyBlue = lib.Find<Brushes_SkyBlueDelegate>("Brushes_SkyBlue");
    _Brushes_SlateBlue = lib.Find<Brushes_SlateBlueDelegate>("Brushes_SlateBlue");
    _Brushes_SlateGray = lib.Find<Brushes_SlateGrayDelegate>("Brushes_SlateGray");
    _Brushes_Snow = lib.Find<Brushes_SnowDelegate>("Brushes_Snow");
    _Brushes_SpringGreen = lib.Find<Brushes_SpringGreenDelegate>("Brushes_SpringGreen");
    _Brushes_SteelBlue = lib.Find<Brushes_SteelBlueDelegate>("Brushes_SteelBlue");
    _Brushes_Tan = lib.Find<Brushes_TanDelegate>("Brushes_Tan");
    _Brushes_Teal = lib.Find<Brushes_TealDelegate>("Brushes_Teal");
    _Brushes_Thistle = lib.Find<Brushes_ThistleDelegate>("Brushes_Thistle");
    _Brushes_Tomato = lib.Find<Brushes_TomatoDelegate>("Brushes_Tomato");
    _Brushes_Transparent = lib.Find<Brushes_TransparentDelegate>("Brushes_Transparent");
    _Brushes_Turquoise = lib.Find<Brushes_TurquoiseDelegate>("Brushes_Turquoise");
    _Brushes_Violet = lib.Find<Brushes_VioletDelegate>("Brushes_Violet");
    _Brushes_Wheat = lib.Find<Brushes_WheatDelegate>("Brushes_Wheat");
    _Brushes_White = lib.Find<Brushes_WhiteDelegate>("Brushes_White");
    _Brushes_WhiteSmoke = lib.Find<Brushes_WhiteSmokeDelegate>("Brushes_WhiteSmoke");
    _Brushes_Yellow = lib.Find<Brushes_YellowDelegate>("Brushes_Yellow");
    _Brushes_YellowGreen = lib.Find<Brushes_YellowGreenDelegate>("Brushes_YellowGreen");
    _Brushes_FromColor = lib.Find<Brushes_FromColorDelegate>("Brushes_FromColor");
    _new_Brushes = lib.Find<new_BrushesDelegate>("new_Brushes");
    _delete_Brushes = lib.Find<delete_BrushesDelegate>("delete_Brushes");
    _new_BulletDecorator = lib.Find<new_BulletDecoratorDelegate>("new_BulletDecorator");
    _delete_BulletDecorator = lib.Find<delete_BulletDecoratorDelegate>("delete_BulletDecorator");
    _BulletDecorator_GetBackground = lib.Find<BulletDecorator_GetBackgroundDelegate>("BulletDecorator_GetBackground");
    _BulletDecorator_SetBackground = lib.Find<BulletDecorator_SetBackgroundDelegate>("BulletDecorator_SetBackground");
    _BulletDecorator_GetBullet = lib.Find<BulletDecorator_GetBulletDelegate>("BulletDecorator_GetBullet");
    _BulletDecorator_SetBullet = lib.Find<BulletDecorator_SetBulletDelegate>("BulletDecorator_SetBullet");
    _new_Button = lib.Find<new_ButtonDelegate>("new_Button");
    _delete_Button = lib.Find<delete_ButtonDelegate>("delete_Button");
    _Button_GetIsCancel = lib.Find<Button_GetIsCancelDelegate>("Button_GetIsCancel");
    _Button_SetIsCancel = lib.Find<Button_SetIsCancelDelegate>("Button_SetIsCancel");
    _Button_GetIsDefault = lib.Find<Button_GetIsDefaultDelegate>("Button_GetIsDefault");
    _Button_SetIsDefault = lib.Find<Button_SetIsDefaultDelegate>("Button_SetIsDefault");
    _Button_GetIsDefaulted = lib.Find<Button_GetIsDefaultedDelegate>("Button_GetIsDefaulted");
    _new_Canvas = lib.Find<new_CanvasDelegate>("new_Canvas");
    _Canvas_GetLeft = lib.Find<Canvas_GetLeftDelegate>("Canvas_GetLeft");
    _Canvas_SetLeft = lib.Find<Canvas_SetLeftDelegate>("Canvas_SetLeft");
    _Canvas_GetTop = lib.Find<Canvas_GetTopDelegate>("Canvas_GetTop");
    _Canvas_SetTop = lib.Find<Canvas_SetTopDelegate>("Canvas_SetTop");
    _Canvas_GetRight = lib.Find<Canvas_GetRightDelegate>("Canvas_GetRight");
    _Canvas_SetRight = lib.Find<Canvas_SetRightDelegate>("Canvas_SetRight");
    _Canvas_GetBottom = lib.Find<Canvas_GetBottomDelegate>("Canvas_GetBottom");
    _Canvas_SetBottom = lib.Find<Canvas_SetBottomDelegate>("Canvas_SetBottom");
    _delete_Canvas = lib.Find<delete_CanvasDelegate>("delete_Canvas");
    _new_CheckBox = lib.Find<new_CheckBoxDelegate>("new_CheckBox");
    _delete_CheckBox = lib.Find<delete_CheckBoxDelegate>("delete_CheckBox");
    _new_CollectionView__SWIG_0 = lib.Find<new_CollectionView__SWIG_0Delegate>("new_CollectionView__SWIG_0");
    _new_CollectionView__SWIG_1 = lib.Find<new_CollectionView__SWIG_1Delegate>("new_CollectionView__SWIG_1");
    _delete_CollectionView = lib.Find<delete_CollectionViewDelegate>("delete_CollectionView");
    _CollectionView_GetCollection = lib.Find<CollectionView_GetCollectionDelegate>("CollectionView_GetCollection");
    _CollectionView_CanFilter = lib.Find<CollectionView_CanFilterDelegate>("CollectionView_CanFilter");
    _CollectionView_CanGroup = lib.Find<CollectionView_CanGroupDelegate>("CollectionView_CanGroup");
    _CollectionView_CanSort = lib.Find<CollectionView_CanSortDelegate>("CollectionView_CanSort");
    _CollectionView_Contains = lib.Find<CollectionView_ContainsDelegate>("CollectionView_Contains");
    _CollectionView_CurrentItem = lib.Find<CollectionView_CurrentItemDelegate>("CollectionView_CurrentItem");
    _CollectionView_CurrentPosition = lib.Find<CollectionView_CurrentPositionDelegate>("CollectionView_CurrentPosition");
    _CollectionView_IsCurrentAfterLast = lib.Find<CollectionView_IsCurrentAfterLastDelegate>("CollectionView_IsCurrentAfterLast");
    _CollectionView_IsCurrentBeforeFirst = lib.Find<CollectionView_IsCurrentBeforeFirstDelegate>("CollectionView_IsCurrentBeforeFirst");
    _CollectionView_IsEmpty = lib.Find<CollectionView_IsEmptyDelegate>("CollectionView_IsEmpty");
    _CollectionView_MoveCurrentTo = lib.Find<CollectionView_MoveCurrentToDelegate>("CollectionView_MoveCurrentTo");
    _CollectionView_MoveCurrentToFirst = lib.Find<CollectionView_MoveCurrentToFirstDelegate>("CollectionView_MoveCurrentToFirst");
    _CollectionView_MoveCurrentToLast = lib.Find<CollectionView_MoveCurrentToLastDelegate>("CollectionView_MoveCurrentToLast");
    _CollectionView_MoveCurrentToNext = lib.Find<CollectionView_MoveCurrentToNextDelegate>("CollectionView_MoveCurrentToNext");
    _CollectionView_MoveCurrentToPosition = lib.Find<CollectionView_MoveCurrentToPositionDelegate>("CollectionView_MoveCurrentToPosition");
    _CollectionView_MoveCurrentToPrevious = lib.Find<CollectionView_MoveCurrentToPreviousDelegate>("CollectionView_MoveCurrentToPrevious");
    _CollectionView_Refresh = lib.Find<CollectionView_RefreshDelegate>("CollectionView_Refresh");
    _CollectionView_CurrentChanged = lib.Find<CollectionView_CurrentChangedDelegate>("CollectionView_CurrentChanged");
    _CollectionView_GetIterator = lib.Find<CollectionView_GetIteratorDelegate>("CollectionView_GetIterator");
    _CollectionView_CollectionChanged = lib.Find<CollectionView_CollectionChangedDelegate>("CollectionView_CollectionChanged");
    _CollectionView_IsInitialized = lib.Find<CollectionView_IsInitializedDelegate>("CollectionView_IsInitialized");
    _CollectionView_Init = lib.Find<CollectionView_InitDelegate>("CollectionView_Init");
    _new_CollectionViewSource = lib.Find<new_CollectionViewSourceDelegate>("new_CollectionViewSource");
    _delete_CollectionViewSource = lib.Find<delete_CollectionViewSourceDelegate>("delete_CollectionViewSource");
    _CollectionViewSource_GetCollectionViewType = lib.Find<CollectionViewSource_GetCollectionViewTypeDelegate>("CollectionViewSource_GetCollectionViewType");
    _CollectionViewSource_SetCollectionViewType = lib.Find<CollectionViewSource_SetCollectionViewTypeDelegate>("CollectionViewSource_SetCollectionViewType");
    _CollectionViewSource_GetSource = lib.Find<CollectionViewSource_GetSourceDelegate>("CollectionViewSource_GetSource");
    _CollectionViewSource_SetSource = lib.Find<CollectionViewSource_SetSourceDelegate>("CollectionViewSource_SetSource");
    _CollectionViewSource_GetView = lib.Find<CollectionViewSource_GetViewDelegate>("CollectionViewSource_GetView");
    _CollectionViewSource_SetView = lib.Find<CollectionViewSource_SetViewDelegate>("CollectionViewSource_SetView");
    _CollectionViewSource_GetGroupDescriptions = lib.Find<CollectionViewSource_GetGroupDescriptionsDelegate>("CollectionViewSource_GetGroupDescriptions");
    _CollectionViewSource_SetGroupDescriptions = lib.Find<CollectionViewSource_SetGroupDescriptionsDelegate>("CollectionViewSource_SetGroupDescriptions");
    _CollectionViewSource_GetSortDescriptions = lib.Find<CollectionViewSource_GetSortDescriptionsDelegate>("CollectionViewSource_GetSortDescriptions");
    _CollectionViewSource_SetSortDescriptions = lib.Find<CollectionViewSource_SetSortDescriptionsDelegate>("CollectionViewSource_SetSortDescriptions");
    _Colors_AliceBlue = lib.Find<Colors_AliceBlueDelegate>("Colors_AliceBlue");
    _Colors_AntiqueWhite = lib.Find<Colors_AntiqueWhiteDelegate>("Colors_AntiqueWhite");
    _Colors_Aqua = lib.Find<Colors_AquaDelegate>("Colors_Aqua");
    _Colors_Aquamarine = lib.Find<Colors_AquamarineDelegate>("Colors_Aquamarine");
    _Colors_Azure = lib.Find<Colors_AzureDelegate>("Colors_Azure");
    _Colors_Beige = lib.Find<Colors_BeigeDelegate>("Colors_Beige");
    _Colors_Bisque = lib.Find<Colors_BisqueDelegate>("Colors_Bisque");
    _Colors_Black = lib.Find<Colors_BlackDelegate>("Colors_Black");
    _Colors_BlanchedAlmond = lib.Find<Colors_BlanchedAlmondDelegate>("Colors_BlanchedAlmond");
    _Colors_Blue = lib.Find<Colors_BlueDelegate>("Colors_Blue");
    _Colors_BlueViolet = lib.Find<Colors_BlueVioletDelegate>("Colors_BlueViolet");
    _Colors_Brown = lib.Find<Colors_BrownDelegate>("Colors_Brown");
    _Colors_BurlyWood = lib.Find<Colors_BurlyWoodDelegate>("Colors_BurlyWood");
    _Colors_CadetBlue = lib.Find<Colors_CadetBlueDelegate>("Colors_CadetBlue");
    _Colors_Chartreuse = lib.Find<Colors_ChartreuseDelegate>("Colors_Chartreuse");
    _Colors_Chocolate = lib.Find<Colors_ChocolateDelegate>("Colors_Chocolate");
    _Colors_Coral = lib.Find<Colors_CoralDelegate>("Colors_Coral");
    _Colors_CornflowerBlue = lib.Find<Colors_CornflowerBlueDelegate>("Colors_CornflowerBlue");
    _Colors_Cornsilk = lib.Find<Colors_CornsilkDelegate>("Colors_Cornsilk");
    _Colors_Crimson = lib.Find<Colors_CrimsonDelegate>("Colors_Crimson");
    _Colors_Cyan = lib.Find<Colors_CyanDelegate>("Colors_Cyan");
    _Colors_DarkBlue = lib.Find<Colors_DarkBlueDelegate>("Colors_DarkBlue");
    _Colors_DarkCyan = lib.Find<Colors_DarkCyanDelegate>("Colors_DarkCyan");
    _Colors_DarkGoldenrod = lib.Find<Colors_DarkGoldenrodDelegate>("Colors_DarkGoldenrod");
    _Colors_DarkGray = lib.Find<Colors_DarkGrayDelegate>("Colors_DarkGray");
    _Colors_DarkGreen = lib.Find<Colors_DarkGreenDelegate>("Colors_DarkGreen");
    _Colors_DarkKhaki = lib.Find<Colors_DarkKhakiDelegate>("Colors_DarkKhaki");
    _Colors_DarkMagenta = lib.Find<Colors_DarkMagentaDelegate>("Colors_DarkMagenta");
    _Colors_DarkOliveGreen = lib.Find<Colors_DarkOliveGreenDelegate>("Colors_DarkOliveGreen");
    _Colors_DarkOrange = lib.Find<Colors_DarkOrangeDelegate>("Colors_DarkOrange");
    _Colors_DarkOrchid = lib.Find<Colors_DarkOrchidDelegate>("Colors_DarkOrchid");
    _Colors_DarkRed = lib.Find<Colors_DarkRedDelegate>("Colors_DarkRed");
    _Colors_DarkSalmon = lib.Find<Colors_DarkSalmonDelegate>("Colors_DarkSalmon");
    _Colors_DarkSeaGreen = lib.Find<Colors_DarkSeaGreenDelegate>("Colors_DarkSeaGreen");
    _Colors_DarkSlateBlue = lib.Find<Colors_DarkSlateBlueDelegate>("Colors_DarkSlateBlue");
    _Colors_DarkSlateGray = lib.Find<Colors_DarkSlateGrayDelegate>("Colors_DarkSlateGray");
    _Colors_DarkTurquoise = lib.Find<Colors_DarkTurquoiseDelegate>("Colors_DarkTurquoise");
    _Colors_DarkViolet = lib.Find<Colors_DarkVioletDelegate>("Colors_DarkViolet");
    _Colors_DeepPink = lib.Find<Colors_DeepPinkDelegate>("Colors_DeepPink");
    _Colors_DeepSkyBlue = lib.Find<Colors_DeepSkyBlueDelegate>("Colors_DeepSkyBlue");
    _Colors_DimGray = lib.Find<Colors_DimGrayDelegate>("Colors_DimGray");
    _Colors_DodgerBlue = lib.Find<Colors_DodgerBlueDelegate>("Colors_DodgerBlue");
    _Colors_Firebrick = lib.Find<Colors_FirebrickDelegate>("Colors_Firebrick");
    _Colors_FloralWhite = lib.Find<Colors_FloralWhiteDelegate>("Colors_FloralWhite");
    _Colors_ForestGreen = lib.Find<Colors_ForestGreenDelegate>("Colors_ForestGreen");
    _Colors_Fuchsia = lib.Find<Colors_FuchsiaDelegate>("Colors_Fuchsia");
    _Colors_Gainsboro = lib.Find<Colors_GainsboroDelegate>("Colors_Gainsboro");
    _Colors_GhostWhite = lib.Find<Colors_GhostWhiteDelegate>("Colors_GhostWhite");
    _Colors_Gold = lib.Find<Colors_GoldDelegate>("Colors_Gold");
    _Colors_Goldenrod = lib.Find<Colors_GoldenrodDelegate>("Colors_Goldenrod");
    _Colors_Gray = lib.Find<Colors_GrayDelegate>("Colors_Gray");
    _Colors_Green = lib.Find<Colors_GreenDelegate>("Colors_Green");
    _Colors_GreenYellow = lib.Find<Colors_GreenYellowDelegate>("Colors_GreenYellow");
    _Colors_Honeydew = lib.Find<Colors_HoneydewDelegate>("Colors_Honeydew");
    _Colors_HotPink = lib.Find<Colors_HotPinkDelegate>("Colors_HotPink");
    _Colors_IndianRed = lib.Find<Colors_IndianRedDelegate>("Colors_IndianRed");
    _Colors_Indigo = lib.Find<Colors_IndigoDelegate>("Colors_Indigo");
    _Colors_Ivory = lib.Find<Colors_IvoryDelegate>("Colors_Ivory");
    _Colors_Khaki = lib.Find<Colors_KhakiDelegate>("Colors_Khaki");
    _Colors_Lavender = lib.Find<Colors_LavenderDelegate>("Colors_Lavender");
    _Colors_LavenderBlush = lib.Find<Colors_LavenderBlushDelegate>("Colors_LavenderBlush");
    _Colors_LawnGreen = lib.Find<Colors_LawnGreenDelegate>("Colors_LawnGreen");
    _Colors_LemonChiffon = lib.Find<Colors_LemonChiffonDelegate>("Colors_LemonChiffon");
    _Colors_LightBlue = lib.Find<Colors_LightBlueDelegate>("Colors_LightBlue");
    _Colors_LightCoral = lib.Find<Colors_LightCoralDelegate>("Colors_LightCoral");
    _Colors_LightCyan = lib.Find<Colors_LightCyanDelegate>("Colors_LightCyan");
    _Colors_LightGoldenrodYellow = lib.Find<Colors_LightGoldenrodYellowDelegate>("Colors_LightGoldenrodYellow");
    _Colors_LightGray = lib.Find<Colors_LightGrayDelegate>("Colors_LightGray");
    _Colors_LightGreen = lib.Find<Colors_LightGreenDelegate>("Colors_LightGreen");
    _Colors_LightPink = lib.Find<Colors_LightPinkDelegate>("Colors_LightPink");
    _Colors_LightSalmon = lib.Find<Colors_LightSalmonDelegate>("Colors_LightSalmon");
    _Colors_LightSeaGreen = lib.Find<Colors_LightSeaGreenDelegate>("Colors_LightSeaGreen");
    _Colors_LightSkyBlue = lib.Find<Colors_LightSkyBlueDelegate>("Colors_LightSkyBlue");
    _Colors_LightSlateGray = lib.Find<Colors_LightSlateGrayDelegate>("Colors_LightSlateGray");
    _Colors_LightSteelBlue = lib.Find<Colors_LightSteelBlueDelegate>("Colors_LightSteelBlue");
    _Colors_LightYellow = lib.Find<Colors_LightYellowDelegate>("Colors_LightYellow");
    _Colors_Lime = lib.Find<Colors_LimeDelegate>("Colors_Lime");
    _Colors_LimeGreen = lib.Find<Colors_LimeGreenDelegate>("Colors_LimeGreen");
    _Colors_Linen = lib.Find<Colors_LinenDelegate>("Colors_Linen");
    _Colors_Magenta = lib.Find<Colors_MagentaDelegate>("Colors_Magenta");
    _Colors_Maroon = lib.Find<Colors_MaroonDelegate>("Colors_Maroon");
    _Colors_MediumAquamarine = lib.Find<Colors_MediumAquamarineDelegate>("Colors_MediumAquamarine");
    _Colors_MediumBlue = lib.Find<Colors_MediumBlueDelegate>("Colors_MediumBlue");
    _Colors_MediumOrchid = lib.Find<Colors_MediumOrchidDelegate>("Colors_MediumOrchid");
    _Colors_MediumPurple = lib.Find<Colors_MediumPurpleDelegate>("Colors_MediumPurple");
    _Colors_MediumSeaGreen = lib.Find<Colors_MediumSeaGreenDelegate>("Colors_MediumSeaGreen");
    _Colors_MediumSlateBlue = lib.Find<Colors_MediumSlateBlueDelegate>("Colors_MediumSlateBlue");
    _Colors_MediumSpringGreen = lib.Find<Colors_MediumSpringGreenDelegate>("Colors_MediumSpringGreen");
    _Colors_MediumTurquoise = lib.Find<Colors_MediumTurquoiseDelegate>("Colors_MediumTurquoise");
    _Colors_MediumVioletRed = lib.Find<Colors_MediumVioletRedDelegate>("Colors_MediumVioletRed");
    _Colors_MidnightBlue = lib.Find<Colors_MidnightBlueDelegate>("Colors_MidnightBlue");
    _Colors_MintCream = lib.Find<Colors_MintCreamDelegate>("Colors_MintCream");
    _Colors_MistyRose = lib.Find<Colors_MistyRoseDelegate>("Colors_MistyRose");
    _Colors_Moccasin = lib.Find<Colors_MoccasinDelegate>("Colors_Moccasin");
    _Colors_NavajoWhite = lib.Find<Colors_NavajoWhiteDelegate>("Colors_NavajoWhite");
    _Colors_Navy = lib.Find<Colors_NavyDelegate>("Colors_Navy");
    _Colors_OldLace = lib.Find<Colors_OldLaceDelegate>("Colors_OldLace");
    _Colors_Olive = lib.Find<Colors_OliveDelegate>("Colors_Olive");
    _Colors_OliveDrab = lib.Find<Colors_OliveDrabDelegate>("Colors_OliveDrab");
    _Colors_Orange = lib.Find<Colors_OrangeDelegate>("Colors_Orange");
    _Colors_OrangeRed = lib.Find<Colors_OrangeRedDelegate>("Colors_OrangeRed");
    _Colors_Orchid = lib.Find<Colors_OrchidDelegate>("Colors_Orchid");
    _Colors_PaleGoldenrod = lib.Find<Colors_PaleGoldenrodDelegate>("Colors_PaleGoldenrod");
    _Colors_PaleGreen = lib.Find<Colors_PaleGreenDelegate>("Colors_PaleGreen");
    _Colors_PaleTurquoise = lib.Find<Colors_PaleTurquoiseDelegate>("Colors_PaleTurquoise");
    _Colors_PaleVioletRed = lib.Find<Colors_PaleVioletRedDelegate>("Colors_PaleVioletRed");
    _Colors_PapayaWhip = lib.Find<Colors_PapayaWhipDelegate>("Colors_PapayaWhip");
    _Colors_PeachPuff = lib.Find<Colors_PeachPuffDelegate>("Colors_PeachPuff");
    _Colors_Peru = lib.Find<Colors_PeruDelegate>("Colors_Peru");
    _Colors_Pink = lib.Find<Colors_PinkDelegate>("Colors_Pink");
    _Colors_Plum = lib.Find<Colors_PlumDelegate>("Colors_Plum");
    _Colors_PowderBlue = lib.Find<Colors_PowderBlueDelegate>("Colors_PowderBlue");
    _Colors_Purple = lib.Find<Colors_PurpleDelegate>("Colors_Purple");
    _Colors_Red = lib.Find<Colors_RedDelegate>("Colors_Red");
    _Colors_RosyBrown = lib.Find<Colors_RosyBrownDelegate>("Colors_RosyBrown");
    _Colors_RoyalBlue = lib.Find<Colors_RoyalBlueDelegate>("Colors_RoyalBlue");
    _Colors_SaddleBrown = lib.Find<Colors_SaddleBrownDelegate>("Colors_SaddleBrown");
    _Colors_Salmon = lib.Find<Colors_SalmonDelegate>("Colors_Salmon");
    _Colors_SandyBrown = lib.Find<Colors_SandyBrownDelegate>("Colors_SandyBrown");
    _Colors_SeaGreen = lib.Find<Colors_SeaGreenDelegate>("Colors_SeaGreen");
    _Colors_SeaShell = lib.Find<Colors_SeaShellDelegate>("Colors_SeaShell");
    _Colors_Sienna = lib.Find<Colors_SiennaDelegate>("Colors_Sienna");
    _Colors_Silver = lib.Find<Colors_SilverDelegate>("Colors_Silver");
    _Colors_SkyBlue = lib.Find<Colors_SkyBlueDelegate>("Colors_SkyBlue");
    _Colors_SlateBlue = lib.Find<Colors_SlateBlueDelegate>("Colors_SlateBlue");
    _Colors_SlateGray = lib.Find<Colors_SlateGrayDelegate>("Colors_SlateGray");
    _Colors_Snow = lib.Find<Colors_SnowDelegate>("Colors_Snow");
    _Colors_SpringGreen = lib.Find<Colors_SpringGreenDelegate>("Colors_SpringGreen");
    _Colors_SteelBlue = lib.Find<Colors_SteelBlueDelegate>("Colors_SteelBlue");
    _Colors_Tan = lib.Find<Colors_TanDelegate>("Colors_Tan");
    _Colors_Teal = lib.Find<Colors_TealDelegate>("Colors_Teal");
    _Colors_Thistle = lib.Find<Colors_ThistleDelegate>("Colors_Thistle");
    _Colors_Tomato = lib.Find<Colors_TomatoDelegate>("Colors_Tomato");
    _Colors_Transparent = lib.Find<Colors_TransparentDelegate>("Colors_Transparent");
    _Colors_Turquoise = lib.Find<Colors_TurquoiseDelegate>("Colors_Turquoise");
    _Colors_Violet = lib.Find<Colors_VioletDelegate>("Colors_Violet");
    _Colors_Wheat = lib.Find<Colors_WheatDelegate>("Colors_Wheat");
    _Colors_White = lib.Find<Colors_WhiteDelegate>("Colors_White");
    _Colors_WhiteSmoke = lib.Find<Colors_WhiteSmokeDelegate>("Colors_WhiteSmoke");
    _Colors_Yellow = lib.Find<Colors_YellowDelegate>("Colors_Yellow");
    _Colors_YellowGreen = lib.Find<Colors_YellowGreenDelegate>("Colors_YellowGreen");
    _new_Colors = lib.Find<new_ColorsDelegate>("new_Colors");
    _delete_Colors = lib.Find<delete_ColorsDelegate>("delete_Colors");
    _new_ColumnDefinition = lib.Find<new_ColumnDefinitionDelegate>("new_ColumnDefinition");
    _ColumnDefinition_GetWidth = lib.Find<ColumnDefinition_GetWidthDelegate>("ColumnDefinition_GetWidth");
    _ColumnDefinition_SetWidth = lib.Find<ColumnDefinition_SetWidthDelegate>("ColumnDefinition_SetWidth");
    _ColumnDefinition_GetMinWidth = lib.Find<ColumnDefinition_GetMinWidthDelegate>("ColumnDefinition_GetMinWidth");
    _ColumnDefinition_SetMinWidth = lib.Find<ColumnDefinition_SetMinWidthDelegate>("ColumnDefinition_SetMinWidth");
    _ColumnDefinition_GetMaxWidth = lib.Find<ColumnDefinition_GetMaxWidthDelegate>("ColumnDefinition_GetMaxWidth");
    _ColumnDefinition_SetMaxWidth = lib.Find<ColumnDefinition_SetMaxWidthDelegate>("ColumnDefinition_SetMaxWidth");
    _delete_ColumnDefinition = lib.Find<delete_ColumnDefinitionDelegate>("delete_ColumnDefinition");
    _new_CombinedGeometry__SWIG_0 = lib.Find<new_CombinedGeometry__SWIG_0Delegate>("new_CombinedGeometry__SWIG_0");
    _new_CombinedGeometry__SWIG_1 = lib.Find<new_CombinedGeometry__SWIG_1Delegate>("new_CombinedGeometry__SWIG_1");
    _CombinedGeometry_GetGeometry1 = lib.Find<CombinedGeometry_GetGeometry1Delegate>("CombinedGeometry_GetGeometry1");
    _CombinedGeometry_SetGeometry1 = lib.Find<CombinedGeometry_SetGeometry1Delegate>("CombinedGeometry_SetGeometry1");
    _CombinedGeometry_GetGeometry2 = lib.Find<CombinedGeometry_GetGeometry2Delegate>("CombinedGeometry_GetGeometry2");
    _CombinedGeometry_SetGeometry2 = lib.Find<CombinedGeometry_SetGeometry2Delegate>("CombinedGeometry_SetGeometry2");
    _CombinedGeometry_GetGeometryCombineMode = lib.Find<CombinedGeometry_GetGeometryCombineModeDelegate>("CombinedGeometry_GetGeometryCombineMode");
    _CombinedGeometry_SetGeometryCombineMode = lib.Find<CombinedGeometry_SetGeometryCombineModeDelegate>("CombinedGeometry_SetGeometryCombineMode");
    _CombinedGeometry_CreateRenderProxy = lib.Find<CombinedGeometry_CreateRenderProxyDelegate>("CombinedGeometry_CreateRenderProxy");
    _CombinedGeometry_UpdateRenderProxy = lib.Find<CombinedGeometry_UpdateRenderProxyDelegate>("CombinedGeometry_UpdateRenderProxy");
    _delete_CombinedGeometry = lib.Find<delete_CombinedGeometryDelegate>("delete_CombinedGeometry");
    _new_ComboBox = lib.Find<new_ComboBoxDelegate>("new_ComboBox");
    _delete_ComboBox = lib.Find<delete_ComboBoxDelegate>("delete_ComboBox");
    _ComboBox_GetIsDropDownOpen = lib.Find<ComboBox_GetIsDropDownOpenDelegate>("ComboBox_GetIsDropDownOpen");
    _ComboBox_SetIsDropDownOpen = lib.Find<ComboBox_SetIsDropDownOpenDelegate>("ComboBox_SetIsDropDownOpen");
    _ComboBox_GetIsEditable = lib.Find<ComboBox_GetIsEditableDelegate>("ComboBox_GetIsEditable");
    _ComboBox_SetIsEditable = lib.Find<ComboBox_SetIsEditableDelegate>("ComboBox_SetIsEditable");
    _ComboBox_GetIsReadOnly = lib.Find<ComboBox_GetIsReadOnlyDelegate>("ComboBox_GetIsReadOnly");
    _ComboBox_SetIsReadOnly = lib.Find<ComboBox_SetIsReadOnlyDelegate>("ComboBox_SetIsReadOnly");
    _ComboBox_GetMaxDropDownHeight = lib.Find<ComboBox_GetMaxDropDownHeightDelegate>("ComboBox_GetMaxDropDownHeight");
    _ComboBox_SetMaxDropDownHeight = lib.Find<ComboBox_SetMaxDropDownHeightDelegate>("ComboBox_SetMaxDropDownHeight");
    _ComboBox_GetSelectionBoxItem = lib.Find<ComboBox_GetSelectionBoxItemDelegate>("ComboBox_GetSelectionBoxItem");
    _ComboBox_GetSelectionBoxItemTemplate = lib.Find<ComboBox_GetSelectionBoxItemTemplateDelegate>("ComboBox_GetSelectionBoxItemTemplate");
    _ComboBox_GetStaysOpenOnEdit = lib.Find<ComboBox_GetStaysOpenOnEditDelegate>("ComboBox_GetStaysOpenOnEdit");
    _ComboBox_SetStaysOpenOnEdit = lib.Find<ComboBox_SetStaysOpenOnEditDelegate>("ComboBox_SetStaysOpenOnEdit");
    _ComboBox_GetText = lib.Find<ComboBox_GetTextDelegate>("ComboBox_GetText");
    _ComboBox_SetText = lib.Find<ComboBox_SetTextDelegate>("ComboBox_SetText");
    _ComboBox_ItemClicked = lib.Find<ComboBox_ItemClickedDelegate>("ComboBox_ItemClicked");
    _ComboBox_ItemEntered = lib.Find<ComboBox_ItemEnteredDelegate>("ComboBox_ItemEntered");
    _new_ListBoxItem = lib.Find<new_ListBoxItemDelegate>("new_ListBoxItem");
    _ListBoxItem_GetIsSelected = lib.Find<ListBoxItem_GetIsSelectedDelegate>("ListBoxItem_GetIsSelected");
    _ListBoxItem_SetIsSelected = lib.Find<ListBoxItem_SetIsSelectedDelegate>("ListBoxItem_SetIsSelected");
    _delete_ListBoxItem = lib.Find<delete_ListBoxItemDelegate>("delete_ListBoxItem");
    _new_ComboBoxItem = lib.Find<new_ComboBoxItemDelegate>("new_ComboBoxItem");
    _ComboBoxItem_GetIsHighlighted = lib.Find<ComboBoxItem_GetIsHighlightedDelegate>("ComboBoxItem_GetIsHighlighted");
    _ComboBoxItem_SetHighlighted = lib.Find<ComboBoxItem_SetHighlightedDelegate>("ComboBoxItem_SetHighlighted");
    _delete_ComboBoxItem = lib.Find<delete_ComboBoxItemDelegate>("delete_ComboBoxItem");
    _CanExecuteRoutedEventArgs_command_set = lib.Find<CanExecuteRoutedEventArgs_command_setDelegate>("CanExecuteRoutedEventArgs_command_set");
    _CanExecuteRoutedEventArgs_command_get = lib.Find<CanExecuteRoutedEventArgs_command_getDelegate>("CanExecuteRoutedEventArgs_command_get");
    _CanExecuteRoutedEventArgs_parameter_set = lib.Find<CanExecuteRoutedEventArgs_parameter_setDelegate>("CanExecuteRoutedEventArgs_parameter_set");
    _CanExecuteRoutedEventArgs_parameter_get = lib.Find<CanExecuteRoutedEventArgs_parameter_getDelegate>("CanExecuteRoutedEventArgs_parameter_get");
    _CanExecuteRoutedEventArgs_canExecute_set = lib.Find<CanExecuteRoutedEventArgs_canExecute_setDelegate>("CanExecuteRoutedEventArgs_canExecute_set");
    _CanExecuteRoutedEventArgs_canExecute_get = lib.Find<CanExecuteRoutedEventArgs_canExecute_getDelegate>("CanExecuteRoutedEventArgs_canExecute_get");
    _CanExecuteRoutedEventArgs_continueRouting_set = lib.Find<CanExecuteRoutedEventArgs_continueRouting_setDelegate>("CanExecuteRoutedEventArgs_continueRouting_set");
    _CanExecuteRoutedEventArgs_continueRouting_get = lib.Find<CanExecuteRoutedEventArgs_continueRouting_getDelegate>("CanExecuteRoutedEventArgs_continueRouting_get");
    _new_CanExecuteRoutedEventArgs = lib.Find<new_CanExecuteRoutedEventArgsDelegate>("new_CanExecuteRoutedEventArgs");
    _delete_CanExecuteRoutedEventArgs = lib.Find<delete_CanExecuteRoutedEventArgsDelegate>("delete_CanExecuteRoutedEventArgs");
    _ExecutedRoutedEventArgs_command_set = lib.Find<ExecutedRoutedEventArgs_command_setDelegate>("ExecutedRoutedEventArgs_command_set");
    _ExecutedRoutedEventArgs_command_get = lib.Find<ExecutedRoutedEventArgs_command_getDelegate>("ExecutedRoutedEventArgs_command_get");
    _ExecutedRoutedEventArgs_parameter_set = lib.Find<ExecutedRoutedEventArgs_parameter_setDelegate>("ExecutedRoutedEventArgs_parameter_set");
    _ExecutedRoutedEventArgs_parameter_get = lib.Find<ExecutedRoutedEventArgs_parameter_getDelegate>("ExecutedRoutedEventArgs_parameter_get");
    _new_ExecutedRoutedEventArgs = lib.Find<new_ExecutedRoutedEventArgsDelegate>("new_ExecutedRoutedEventArgs");
    _delete_ExecutedRoutedEventArgs = lib.Find<delete_ExecutedRoutedEventArgsDelegate>("delete_ExecutedRoutedEventArgs");
    _CommandManager_PreviewCanExecuteEvent_set = lib.Find<CommandManager_PreviewCanExecuteEvent_setDelegate>("CommandManager_PreviewCanExecuteEvent_set");
    _CommandManager_PreviewCanExecuteEvent_get = lib.Find<CommandManager_PreviewCanExecuteEvent_getDelegate>("CommandManager_PreviewCanExecuteEvent_get");
    _CommandManager_CanExecuteEvent_set = lib.Find<CommandManager_CanExecuteEvent_setDelegate>("CommandManager_CanExecuteEvent_set");
    _CommandManager_CanExecuteEvent_get = lib.Find<CommandManager_CanExecuteEvent_getDelegate>("CommandManager_CanExecuteEvent_get");
    _CommandManager_PreviewExecutedEvent_set = lib.Find<CommandManager_PreviewExecutedEvent_setDelegate>("CommandManager_PreviewExecutedEvent_set");
    _CommandManager_PreviewExecutedEvent_get = lib.Find<CommandManager_PreviewExecutedEvent_getDelegate>("CommandManager_PreviewExecutedEvent_get");
    _CommandManager_ExecutedEvent_set = lib.Find<CommandManager_ExecutedEvent_setDelegate>("CommandManager_ExecutedEvent_set");
    _CommandManager_ExecutedEvent_get = lib.Find<CommandManager_ExecutedEvent_getDelegate>("CommandManager_ExecutedEvent_get");
    _CommandManager_ProcessKeyboardInput = lib.Find<CommandManager_ProcessKeyboardInputDelegate>("CommandManager_ProcessKeyboardInput");
    _new_CommandManager = lib.Find<new_CommandManagerDelegate>("new_CommandManager");
    _delete_CommandManager = lib.Find<delete_CommandManagerDelegate>("delete_CommandManager");
    _new_CommandBinding__SWIG_0 = lib.Find<new_CommandBinding__SWIG_0Delegate>("new_CommandBinding__SWIG_0");
    _new_CommandBinding__SWIG_1 = lib.Find<new_CommandBinding__SWIG_1Delegate>("new_CommandBinding__SWIG_1");
    _new_CommandBinding__SWIG_2 = lib.Find<new_CommandBinding__SWIG_2Delegate>("new_CommandBinding__SWIG_2");
    _new_CommandBinding__SWIG_3 = lib.Find<new_CommandBinding__SWIG_3Delegate>("new_CommandBinding__SWIG_3");
    _new_CommandBinding__SWIG_4 = lib.Find<new_CommandBinding__SWIG_4Delegate>("new_CommandBinding__SWIG_4");
    _delete_CommandBinding = lib.Find<delete_CommandBindingDelegate>("delete_CommandBinding");
    _CommandBinding_GetCommand = lib.Find<CommandBinding_GetCommandDelegate>("CommandBinding_GetCommand");
    _CommandBinding_SetCommand = lib.Find<CommandBinding_SetCommandDelegate>("CommandBinding_SetCommand");
    _CommandBinding_PreviewCanExecute = lib.Find<CommandBinding_PreviewCanExecuteDelegate>("CommandBinding_PreviewCanExecute");
    _CommandBinding_CanExecute = lib.Find<CommandBinding_CanExecuteDelegate>("CommandBinding_CanExecute");
    _CommandBinding_PreviewExecuted = lib.Find<CommandBinding_PreviewExecutedDelegate>("CommandBinding_PreviewExecuted");
    _CommandBinding_Executed = lib.Find<CommandBinding_ExecutedDelegate>("CommandBinding_Executed");
    _CommandBinding_RaisePreviewCanExecute = lib.Find<CommandBinding_RaisePreviewCanExecuteDelegate>("CommandBinding_RaisePreviewCanExecute");
    _CommandBinding_RaiseCanExecute = lib.Find<CommandBinding_RaiseCanExecuteDelegate>("CommandBinding_RaiseCanExecute");
    _CommandBinding_RaisePreviewExecuted = lib.Find<CommandBinding_RaisePreviewExecutedDelegate>("CommandBinding_RaisePreviewExecuted");
    _CommandBinding_RaiseExecuted = lib.Find<CommandBinding_RaiseExecutedDelegate>("CommandBinding_RaiseExecuted");
    _new_CommandData = lib.Find<new_CommandDataDelegate>("new_CommandData");
    _delete_CommandData = lib.Find<delete_CommandDataDelegate>("delete_CommandData");
    _CommandData_FindCommand = lib.Find<CommandData_FindCommandDelegate>("CommandData_FindCommand");
    _CommandData_EnumCommands = lib.Find<CommandData_EnumCommandsDelegate>("CommandData_EnumCommands");
    _CommandData_RegisterCommandHandler__SWIG_0 = lib.Find<CommandData_RegisterCommandHandler__SWIG_0Delegate>("CommandData_RegisterCommandHandler__SWIG_0");
    _CommandData_RegisterCommandHandler__SWIG_1 = lib.Find<CommandData_RegisterCommandHandler__SWIG_1Delegate>("CommandData_RegisterCommandHandler__SWIG_1");
    _CommandData_RegisterCommandHandler__SWIG_2 = lib.Find<CommandData_RegisterCommandHandler__SWIG_2Delegate>("CommandData_RegisterCommandHandler__SWIG_2");
    _CommandData_RegisterCommandHandler__SWIG_3 = lib.Find<CommandData_RegisterCommandHandler__SWIG_3Delegate>("CommandData_RegisterCommandHandler__SWIG_3");
    _CommandData_RegisterCommandHandler__SWIG_4 = lib.Find<CommandData_RegisterCommandHandler__SWIG_4Delegate>("CommandData_RegisterCommandHandler__SWIG_4");
    _CommandData_RegisterCommandHandler__SWIG_5 = lib.Find<CommandData_RegisterCommandHandler__SWIG_5Delegate>("CommandData_RegisterCommandHandler__SWIG_5");
    _CommandData_GetCommandBindings = lib.Find<CommandData_GetCommandBindingsDelegate>("CommandData_GetCommandBindings");
    _CommandData_GetInputBindings = lib.Find<CommandData_GetInputBindingsDelegate>("CommandData_GetInputBindings");
    _delete_UITransform = lib.Find<delete_UITransformDelegate>("delete_UITransform");
    _UITransform_GetIdentity = lib.Find<UITransform_GetIdentityDelegate>("UITransform_GetIdentity");
    _UITransform_GetTransform = lib.Find<UITransform_GetTransformDelegate>("UITransform_GetTransform");
    _new_CompositeTransform = lib.Find<new_CompositeTransformDelegate>("new_CompositeTransform");
    _CompositeTransform_GetCenterX = lib.Find<CompositeTransform_GetCenterXDelegate>("CompositeTransform_GetCenterX");
    _CompositeTransform_SetCenterX = lib.Find<CompositeTransform_SetCenterXDelegate>("CompositeTransform_SetCenterX");
    _CompositeTransform_GetCenterY = lib.Find<CompositeTransform_GetCenterYDelegate>("CompositeTransform_GetCenterY");
    _CompositeTransform_SetCenterY = lib.Find<CompositeTransform_SetCenterYDelegate>("CompositeTransform_SetCenterY");
    _CompositeTransform_GetRotation = lib.Find<CompositeTransform_GetRotationDelegate>("CompositeTransform_GetRotation");
    _CompositeTransform_SetRotation = lib.Find<CompositeTransform_SetRotationDelegate>("CompositeTransform_SetRotation");
    _CompositeTransform_GetScaleX = lib.Find<CompositeTransform_GetScaleXDelegate>("CompositeTransform_GetScaleX");
    _CompositeTransform_SetScaleX = lib.Find<CompositeTransform_SetScaleXDelegate>("CompositeTransform_SetScaleX");
    _CompositeTransform_GetScaleY = lib.Find<CompositeTransform_GetScaleYDelegate>("CompositeTransform_GetScaleY");
    _CompositeTransform_SetScaleY = lib.Find<CompositeTransform_SetScaleYDelegate>("CompositeTransform_SetScaleY");
    _CompositeTransform_GetSkewX = lib.Find<CompositeTransform_GetSkewXDelegate>("CompositeTransform_GetSkewX");
    _CompositeTransform_SetSkewX = lib.Find<CompositeTransform_SetSkewXDelegate>("CompositeTransform_SetSkewX");
    _CompositeTransform_GetSkewY = lib.Find<CompositeTransform_GetSkewYDelegate>("CompositeTransform_GetSkewY");
    _CompositeTransform_SetSkewY = lib.Find<CompositeTransform_SetSkewYDelegate>("CompositeTransform_SetSkewY");
    _CompositeTransform_GetTranslateX = lib.Find<CompositeTransform_GetTranslateXDelegate>("CompositeTransform_GetTranslateX");
    _CompositeTransform_SetTranslateX = lib.Find<CompositeTransform_SetTranslateXDelegate>("CompositeTransform_SetTranslateX");
    _CompositeTransform_GetTranslateY = lib.Find<CompositeTransform_GetTranslateYDelegate>("CompositeTransform_GetTranslateY");
    _CompositeTransform_SetTranslateY = lib.Find<CompositeTransform_SetTranslateYDelegate>("CompositeTransform_SetTranslateY");
    _CompositeTransform_GetTransform = lib.Find<CompositeTransform_GetTransformDelegate>("CompositeTransform_GetTransform");
    _CompositeTransform_CreateRenderProxy = lib.Find<CompositeTransform_CreateRenderProxyDelegate>("CompositeTransform_CreateRenderProxy");
    _CompositeTransform_UpdateRenderProxy = lib.Find<CompositeTransform_UpdateRenderProxyDelegate>("CompositeTransform_UpdateRenderProxy");
    _CompositeTransform_UnregisterRenderer = lib.Find<CompositeTransform_UnregisterRendererDelegate>("CompositeTransform_UnregisterRenderer");
    _delete_CompositeTransform = lib.Find<delete_CompositeTransformDelegate>("delete_CompositeTransform");
    _new_Condition = lib.Find<new_ConditionDelegate>("new_Condition");
    _Condition_GetProperty = lib.Find<Condition_GetPropertyDelegate>("Condition_GetProperty");
    _Condition_SetProperty = lib.Find<Condition_SetPropertyDelegate>("Condition_SetProperty");
    _Condition_GetSourceName = lib.Find<Condition_GetSourceNameDelegate>("Condition_GetSourceName");
    _Condition_SetSourceName = lib.Find<Condition_SetSourceNameDelegate>("Condition_SetSourceName");
    _Condition_GetValue = lib.Find<Condition_GetValueDelegate>("Condition_GetValue");
    _Condition_SetValue = lib.Find<Condition_SetValueDelegate>("Condition_SetValue");
    _Condition_IsInitialized = lib.Find<Condition_IsInitializedDelegate>("Condition_IsInitialized");
    _Condition_Init = lib.Find<Condition_InitDelegate>("Condition_Init");
    _delete_Condition = lib.Find<delete_ConditionDelegate>("delete_Condition");
    _new_ContentPresenter = lib.Find<new_ContentPresenterDelegate>("new_ContentPresenter");
    _delete_ContentPresenter = lib.Find<delete_ContentPresenterDelegate>("delete_ContentPresenter");
    _ContentPresenter_GetContent = lib.Find<ContentPresenter_GetContentDelegate>("ContentPresenter_GetContent");
    _ContentPresenter_SetContent__SWIG_0 = lib.Find<ContentPresenter_SetContent__SWIG_0Delegate>("ContentPresenter_SetContent__SWIG_0");
    _ContentPresenter_SetContent__SWIG_1 = lib.Find<ContentPresenter_SetContent__SWIG_1Delegate>("ContentPresenter_SetContent__SWIG_1");
    _ContentPresenter_GetContentSource = lib.Find<ContentPresenter_GetContentSourceDelegate>("ContentPresenter_GetContentSource");
    _ContentPresenter_SetContentSource = lib.Find<ContentPresenter_SetContentSourceDelegate>("ContentPresenter_SetContentSource");
    _ContentPresenter_GetContentTemplate = lib.Find<ContentPresenter_GetContentTemplateDelegate>("ContentPresenter_GetContentTemplate");
    _ContentPresenter_SetContentTemplate = lib.Find<ContentPresenter_SetContentTemplateDelegate>("ContentPresenter_SetContentTemplate");
    _ContentPresenter_GetContentTemplateSelector = lib.Find<ContentPresenter_GetContentTemplateSelectorDelegate>("ContentPresenter_GetContentTemplateSelector");
    _ContentPresenter_SetContentTemplateSelector = lib.Find<ContentPresenter_SetContentTemplateSelectorDelegate>("ContentPresenter_SetContentTemplateSelector");
    _ContentPresenter_GetRecognizesAccessKey = lib.Find<ContentPresenter_GetRecognizesAccessKeyDelegate>("ContentPresenter_GetRecognizesAccessKey");
    _ContentPresenter_SetRecognizesAccessKey = lib.Find<ContentPresenter_SetRecognizesAccessKeyDelegate>("ContentPresenter_SetRecognizesAccessKey");
    _new_ContextMenu = lib.Find<new_ContextMenuDelegate>("new_ContextMenu");
    _ContextMenu_GetCustomPopupPlacementCallback = lib.Find<ContextMenu_GetCustomPopupPlacementCallbackDelegate>("ContextMenu_GetCustomPopupPlacementCallback");
    _ContextMenu_SetCustomPopupPlacementCallback = lib.Find<ContextMenu_SetCustomPopupPlacementCallbackDelegate>("ContextMenu_SetCustomPopupPlacementCallback");
    _ContextMenu_GetHasDropShadow = lib.Find<ContextMenu_GetHasDropShadowDelegate>("ContextMenu_GetHasDropShadow");
    _ContextMenu_SetHasDropShadow = lib.Find<ContextMenu_SetHasDropShadowDelegate>("ContextMenu_SetHasDropShadow");
    _ContextMenu_GetHorizontalOffset = lib.Find<ContextMenu_GetHorizontalOffsetDelegate>("ContextMenu_GetHorizontalOffset");
    _ContextMenu_SetHorizontalOffset = lib.Find<ContextMenu_SetHorizontalOffsetDelegate>("ContextMenu_SetHorizontalOffset");
    _ContextMenu_GetIsOpen = lib.Find<ContextMenu_GetIsOpenDelegate>("ContextMenu_GetIsOpen");
    _ContextMenu_SetIsOpen = lib.Find<ContextMenu_SetIsOpenDelegate>("ContextMenu_SetIsOpen");
    _ContextMenu_GetPlacement = lib.Find<ContextMenu_GetPlacementDelegate>("ContextMenu_GetPlacement");
    _ContextMenu_SetPlacement = lib.Find<ContextMenu_SetPlacementDelegate>("ContextMenu_SetPlacement");
    _ContextMenu_GetPlacementRectangle = lib.Find<ContextMenu_GetPlacementRectangleDelegate>("ContextMenu_GetPlacementRectangle");
    _ContextMenu_SetPlacementRectangle = lib.Find<ContextMenu_SetPlacementRectangleDelegate>("ContextMenu_SetPlacementRectangle");
    _ContextMenu_GetPlacementTarget = lib.Find<ContextMenu_GetPlacementTargetDelegate>("ContextMenu_GetPlacementTarget");
    _ContextMenu_SetPlacementTarget = lib.Find<ContextMenu_SetPlacementTargetDelegate>("ContextMenu_SetPlacementTarget");
    _ContextMenu_GetStaysOpen = lib.Find<ContextMenu_GetStaysOpenDelegate>("ContextMenu_GetStaysOpen");
    _ContextMenu_SetStaysOpen = lib.Find<ContextMenu_SetStaysOpenDelegate>("ContextMenu_SetStaysOpen");
    _ContextMenu_GetVerticalOffset = lib.Find<ContextMenu_GetVerticalOffsetDelegate>("ContextMenu_GetVerticalOffset");
    _ContextMenu_SetVerticalOffset = lib.Find<ContextMenu_SetVerticalOffsetDelegate>("ContextMenu_SetVerticalOffset");
    _ContextMenu_GetPopup = lib.Find<ContextMenu_GetPopupDelegate>("ContextMenu_GetPopup");
    _delete_ContextMenu = lib.Find<delete_ContextMenuDelegate>("delete_ContextMenu");
    _ContextMenuService_ContextMenuClosingEvent_set = lib.Find<ContextMenuService_ContextMenuClosingEvent_setDelegate>("ContextMenuService_ContextMenuClosingEvent_set");
    _ContextMenuService_ContextMenuClosingEvent_get = lib.Find<ContextMenuService_ContextMenuClosingEvent_getDelegate>("ContextMenuService_ContextMenuClosingEvent_get");
    _ContextMenuService_ContextMenuOpeningEvent_set = lib.Find<ContextMenuService_ContextMenuOpeningEvent_setDelegate>("ContextMenuService_ContextMenuOpeningEvent_set");
    _ContextMenuService_ContextMenuOpeningEvent_get = lib.Find<ContextMenuService_ContextMenuOpeningEvent_getDelegate>("ContextMenuService_ContextMenuOpeningEvent_get");
    _ContextMenuService_GetContextMenu = lib.Find<ContextMenuService_GetContextMenuDelegate>("ContextMenuService_GetContextMenu");
    _ContextMenuService_SetContextMenu = lib.Find<ContextMenuService_SetContextMenuDelegate>("ContextMenuService_SetContextMenu");
    _ContextMenuService_GetHasDropShadow = lib.Find<ContextMenuService_GetHasDropShadowDelegate>("ContextMenuService_GetHasDropShadow");
    _ContextMenuService_SetHasDropShadow = lib.Find<ContextMenuService_SetHasDropShadowDelegate>("ContextMenuService_SetHasDropShadow");
    _ContextMenuService_GetHorizontalOffset = lib.Find<ContextMenuService_GetHorizontalOffsetDelegate>("ContextMenuService_GetHorizontalOffset");
    _ContextMenuService_SetHorizontalOffset = lib.Find<ContextMenuService_SetHorizontalOffsetDelegate>("ContextMenuService_SetHorizontalOffset");
    _ContextMenuService_GetIsEnabled = lib.Find<ContextMenuService_GetIsEnabledDelegate>("ContextMenuService_GetIsEnabled");
    _ContextMenuService_SetIsEnabled = lib.Find<ContextMenuService_SetIsEnabledDelegate>("ContextMenuService_SetIsEnabled");
    _ContextMenuService_GetPlacement = lib.Find<ContextMenuService_GetPlacementDelegate>("ContextMenuService_GetPlacement");
    _ContextMenuService_SetPlacement = lib.Find<ContextMenuService_SetPlacementDelegate>("ContextMenuService_SetPlacement");
    _ContextMenuService_GetPlacementRectangle = lib.Find<ContextMenuService_GetPlacementRectangleDelegate>("ContextMenuService_GetPlacementRectangle");
    _ContextMenuService_SetPlacementRectangle = lib.Find<ContextMenuService_SetPlacementRectangleDelegate>("ContextMenuService_SetPlacementRectangle");
    _ContextMenuService_GetPlacementTarget = lib.Find<ContextMenuService_GetPlacementTargetDelegate>("ContextMenuService_GetPlacementTarget");
    _ContextMenuService_SetPlacementTarget = lib.Find<ContextMenuService_SetPlacementTargetDelegate>("ContextMenuService_SetPlacementTarget");
    _ContextMenuService_GetShowOnDisabled = lib.Find<ContextMenuService_GetShowOnDisabledDelegate>("ContextMenuService_GetShowOnDisabled");
    _ContextMenuService_SetShowOnDisabled = lib.Find<ContextMenuService_SetShowOnDisabledDelegate>("ContextMenuService_SetShowOnDisabled");
    _ContextMenuService_GetVerticalOffset = lib.Find<ContextMenuService_GetVerticalOffsetDelegate>("ContextMenuService_GetVerticalOffset");
    _ContextMenuService_SetVerticalOffset = lib.Find<ContextMenuService_SetVerticalOffsetDelegate>("ContextMenuService_SetVerticalOffset");
    _new_ContextMenuService = lib.Find<new_ContextMenuServiceDelegate>("new_ContextMenuService");
    _delete_ContextMenuService = lib.Find<delete_ContextMenuServiceDelegate>("delete_ContextMenuService");
    _new_DashStyle = lib.Find<new_DashStyleDelegate>("new_DashStyle");
    _DashStyle_GetDashes = lib.Find<DashStyle_GetDashesDelegate>("DashStyle_GetDashes");
    _DashStyle_SetDashes = lib.Find<DashStyle_SetDashesDelegate>("DashStyle_SetDashes");
    _DashStyle_GetOffset = lib.Find<DashStyle_GetOffsetDelegate>("DashStyle_GetOffset");
    _DashStyle_SetOffset = lib.Find<DashStyle_SetOffsetDelegate>("DashStyle_SetOffset");
    _DashStyle_CreateRenderProxy = lib.Find<DashStyle_CreateRenderProxyDelegate>("DashStyle_CreateRenderProxy");
    _DashStyle_UpdateRenderProxy = lib.Find<DashStyle_UpdateRenderProxyDelegate>("DashStyle_UpdateRenderProxy");
    _DashStyle_UnregisterRenderer = lib.Find<DashStyle_UnregisterRendererDelegate>("DashStyle_UnregisterRenderer");
    _delete_DashStyle = lib.Find<delete_DashStyleDelegate>("delete_DashStyle");
    _new_DataTemplate = lib.Find<new_DataTemplateDelegate>("new_DataTemplate");
    _delete_DataTemplate = lib.Find<delete_DataTemplateDelegate>("delete_DataTemplate");
    _DataTemplate_GetDataType = lib.Find<DataTemplate_GetDataTypeDelegate>("DataTemplate_GetDataType");
    _DataTemplate_SetDataType = lib.Find<DataTemplate_SetDataTypeDelegate>("DataTemplate_SetDataType");
    _DataTemplate_GetTriggers = lib.Find<DataTemplate_GetTriggersDelegate>("DataTemplate_GetTriggers");
    _delete_DataTemplateSelector = lib.Find<delete_DataTemplateSelectorDelegate>("delete_DataTemplateSelector");
    _DataTemplateSelector_SelectTemplate = lib.Find<DataTemplateSelector_SelectTemplateDelegate>("DataTemplateSelector_SelectTemplate");
    _new_Dialog = lib.Find<new_DialogDelegate>("new_Dialog");
    _delete_Dialog = lib.Find<delete_DialogDelegate>("delete_Dialog");
    _Dialog_GetChild = lib.Find<Dialog_GetChildDelegate>("Dialog_GetChild");
    _Dialog_SetChild = lib.Find<Dialog_SetChildDelegate>("Dialog_SetChild");
    _Dialog_GetDialogResult = lib.Find<Dialog_GetDialogResultDelegate>("Dialog_GetDialogResult");
    _Dialog_SetDialogResult = lib.Find<Dialog_SetDialogResultDelegate>("Dialog_SetDialogResult");
    _Dialog_Show = lib.Find<Dialog_ShowDelegate>("Dialog_Show");
    _Dialog_Close = lib.Find<Dialog_CloseDelegate>("Dialog_Close");
    _new_DictionaryMapLess = lib.Find<new_DictionaryMapLessDelegate>("new_DictionaryMapLess");
    _delete_DictionaryMapLess = lib.Find<delete_DictionaryMapLessDelegate>("delete_DictionaryMapLess");
    _new_DockPanel = lib.Find<new_DockPanelDelegate>("new_DockPanel");
    _DockPanel_GetDock = lib.Find<DockPanel_GetDockDelegate>("DockPanel_GetDock");
    _DockPanel_SetDock = lib.Find<DockPanel_SetDockDelegate>("DockPanel_SetDock");
    _DockPanel_GetLastChildFill = lib.Find<DockPanel_GetLastChildFillDelegate>("DockPanel_GetLastChildFill");
    _DockPanel_SetLastChildFill = lib.Find<DockPanel_SetLastChildFillDelegate>("DockPanel_SetLastChildFill");
    _delete_DockPanel = lib.Find<delete_DockPanelDelegate>("delete_DockPanel");
    _new_DrawingContext = lib.Find<new_DrawingContextDelegate>("new_DrawingContext");
    _delete_DrawingContext = lib.Find<delete_DrawingContextDelegate>("delete_DrawingContext");
    _DrawingContext_GetDrawingCommands = lib.Find<DrawingContext_GetDrawingCommandsDelegate>("DrawingContext_GetDrawingCommands");
    _DrawingContext_Reset = lib.Find<DrawingContext_ResetDelegate>("DrawingContext_Reset");
    _DrawingContext_DrawDelegate = lib.Find<DrawingContext_DrawDelegateDelegate>("DrawingContext_DrawDelegate");
    _DrawingContext_DrawEllipse = lib.Find<DrawingContext_DrawEllipseDelegate>("DrawingContext_DrawEllipse");
    _DrawingContext_DrawGeometry = lib.Find<DrawingContext_DrawGeometryDelegate>("DrawingContext_DrawGeometry");
    _DrawingContext_DrawImage = lib.Find<DrawingContext_DrawImageDelegate>("DrawingContext_DrawImage");
    _DrawingContext_DrawLine = lib.Find<DrawingContext_DrawLineDelegate>("DrawingContext_DrawLine");
    _DrawingContext_DrawRectangle = lib.Find<DrawingContext_DrawRectangleDelegate>("DrawingContext_DrawRectangle");
    _DrawingContext_DrawRoundedRectangle = lib.Find<DrawingContext_DrawRoundedRectangleDelegate>("DrawingContext_DrawRoundedRectangle");
    _DrawingContext_DrawText = lib.Find<DrawingContext_DrawTextDelegate>("DrawingContext_DrawText");
    _DrawingContext_Pop = lib.Find<DrawingContext_PopDelegate>("DrawingContext_Pop");
    _DrawingContext_PushClip = lib.Find<DrawingContext_PushClipDelegate>("DrawingContext_PushClip");
    _DrawingContext_PushOpacity = lib.Find<DrawingContext_PushOpacityDelegate>("DrawingContext_PushOpacity");
    _DrawingContext_PushOpacityMask = lib.Find<DrawingContext_PushOpacityMaskDelegate>("DrawingContext_PushOpacityMask");
    _DrawingContext_PushTransform = lib.Find<DrawingContext_PushTransformDelegate>("DrawingContext_PushTransform");
    _delete_Effect = lib.Find<delete_EffectDelegate>("delete_Effect");
    _new_DropShadowEffect = lib.Find<new_DropShadowEffectDelegate>("new_DropShadowEffect");
    _delete_DropShadowEffect = lib.Find<delete_DropShadowEffectDelegate>("delete_DropShadowEffect");
    _DropShadowEffect_GetBlurRadius = lib.Find<DropShadowEffect_GetBlurRadiusDelegate>("DropShadowEffect_GetBlurRadius");
    _DropShadowEffect_SetBlurRadius = lib.Find<DropShadowEffect_SetBlurRadiusDelegate>("DropShadowEffect_SetBlurRadius");
    _DropShadowEffect_GetColor = lib.Find<DropShadowEffect_GetColorDelegate>("DropShadowEffect_GetColor");
    _DropShadowEffect_SetColor = lib.Find<DropShadowEffect_SetColorDelegate>("DropShadowEffect_SetColor");
    _DropShadowEffect_GetDirection = lib.Find<DropShadowEffect_GetDirectionDelegate>("DropShadowEffect_GetDirection");
    _DropShadowEffect_SetDirection = lib.Find<DropShadowEffect_SetDirectionDelegate>("DropShadowEffect_SetDirection");
    _DropShadowEffect_GetOpacity = lib.Find<DropShadowEffect_GetOpacityDelegate>("DropShadowEffect_GetOpacity");
    _DropShadowEffect_SetOpacity = lib.Find<DropShadowEffect_SetOpacityDelegate>("DropShadowEffect_SetOpacity");
    _DropShadowEffect_GetRenderingBias = lib.Find<DropShadowEffect_GetRenderingBiasDelegate>("DropShadowEffect_GetRenderingBias");
    _DropShadowEffect_SetRenderingBias = lib.Find<DropShadowEffect_SetRenderingBiasDelegate>("DropShadowEffect_SetRenderingBias");
    _DropShadowEffect_GetShadowDepth = lib.Find<DropShadowEffect_GetShadowDepthDelegate>("DropShadowEffect_GetShadowDepth");
    _DropShadowEffect_SetShadowDepth = lib.Find<DropShadowEffect_SetShadowDepthDelegate>("DropShadowEffect_SetShadowDepth");
    _delete_Shape = lib.Find<delete_ShapeDelegate>("delete_Shape");
    _Shape_GetFill = lib.Find<Shape_GetFillDelegate>("Shape_GetFill");
    _Shape_SetFill = lib.Find<Shape_SetFillDelegate>("Shape_SetFill");
    _Shape_GetStretch = lib.Find<Shape_GetStretchDelegate>("Shape_GetStretch");
    _Shape_SetStretch = lib.Find<Shape_SetStretchDelegate>("Shape_SetStretch");
    _Shape_GetStroke = lib.Find<Shape_GetStrokeDelegate>("Shape_GetStroke");
    _Shape_SetStroke = lib.Find<Shape_SetStrokeDelegate>("Shape_SetStroke");
    _Shape_GetStrokeDashArray = lib.Find<Shape_GetStrokeDashArrayDelegate>("Shape_GetStrokeDashArray");
    _Shape_SetStrokeDashArray = lib.Find<Shape_SetStrokeDashArrayDelegate>("Shape_SetStrokeDashArray");
    _Shape_GetStrokeDashCap = lib.Find<Shape_GetStrokeDashCapDelegate>("Shape_GetStrokeDashCap");
    _Shape_SetStrokeDashCap = lib.Find<Shape_SetStrokeDashCapDelegate>("Shape_SetStrokeDashCap");
    _Shape_GetStrokeDashOffset = lib.Find<Shape_GetStrokeDashOffsetDelegate>("Shape_GetStrokeDashOffset");
    _Shape_SetStrokeDashOffset = lib.Find<Shape_SetStrokeDashOffsetDelegate>("Shape_SetStrokeDashOffset");
    _Shape_GetStrokeEndLineCap = lib.Find<Shape_GetStrokeEndLineCapDelegate>("Shape_GetStrokeEndLineCap");
    _Shape_SetStrokeEndLineCap = lib.Find<Shape_SetStrokeEndLineCapDelegate>("Shape_SetStrokeEndLineCap");
    _Shape_GetStrokeLineJoin = lib.Find<Shape_GetStrokeLineJoinDelegate>("Shape_GetStrokeLineJoin");
    _Shape_SetStrokeLineJoin = lib.Find<Shape_SetStrokeLineJoinDelegate>("Shape_SetStrokeLineJoin");
    _Shape_GetStrokeMiterLimit = lib.Find<Shape_GetStrokeMiterLimitDelegate>("Shape_GetStrokeMiterLimit");
    _Shape_SetStrokeMiterLimit = lib.Find<Shape_SetStrokeMiterLimitDelegate>("Shape_SetStrokeMiterLimit");
    _Shape_GetStrokeStartLineCap = lib.Find<Shape_GetStrokeStartLineCapDelegate>("Shape_GetStrokeStartLineCap");
    _Shape_SetStrokeStartLineCap = lib.Find<Shape_SetStrokeStartLineCapDelegate>("Shape_SetStrokeStartLineCap");
    _Shape_GetStrokeThickness = lib.Find<Shape_GetStrokeThicknessDelegate>("Shape_GetStrokeThickness");
    _Shape_SetStrokeThickness = lib.Find<Shape_SetStrokeThicknessDelegate>("Shape_SetStrokeThickness");
    _new_Ellipse = lib.Find<new_EllipseDelegate>("new_Ellipse");
    _delete_Ellipse = lib.Find<delete_EllipseDelegate>("delete_Ellipse");
    _new_EllipseGeometry__SWIG_0 = lib.Find<new_EllipseGeometry__SWIG_0Delegate>("new_EllipseGeometry__SWIG_0");
    _new_EllipseGeometry__SWIG_1 = lib.Find<new_EllipseGeometry__SWIG_1Delegate>("new_EllipseGeometry__SWIG_1");
    _EllipseGeometry_GetCenter = lib.Find<EllipseGeometry_GetCenterDelegate>("EllipseGeometry_GetCenter");
    _EllipseGeometry_SetCenter = lib.Find<EllipseGeometry_SetCenterDelegate>("EllipseGeometry_SetCenter");
    _EllipseGeometry_GetRadiusX = lib.Find<EllipseGeometry_GetRadiusXDelegate>("EllipseGeometry_GetRadiusX");
    _EllipseGeometry_SetRadiusX = lib.Find<EllipseGeometry_SetRadiusXDelegate>("EllipseGeometry_SetRadiusX");
    _EllipseGeometry_GetRadiusY = lib.Find<EllipseGeometry_GetRadiusYDelegate>("EllipseGeometry_GetRadiusY");
    _EllipseGeometry_SetRadiusY = lib.Find<EllipseGeometry_SetRadiusYDelegate>("EllipseGeometry_SetRadiusY");
    _EllipseGeometry_IsEmpty = lib.Find<EllipseGeometry_IsEmptyDelegate>("EllipseGeometry_IsEmpty");
    _EllipseGeometry_CreateRenderProxy = lib.Find<EllipseGeometry_CreateRenderProxyDelegate>("EllipseGeometry_CreateRenderProxy");
    _EllipseGeometry_UpdateRenderProxy = lib.Find<EllipseGeometry_UpdateRenderProxyDelegate>("EllipseGeometry_UpdateRenderProxy");
    _delete_EllipseGeometry = lib.Find<delete_EllipseGeometryDelegate>("delete_EllipseGeometry");
    _new_EventTrigger = lib.Find<new_EventTriggerDelegate>("new_EventTrigger");
    _delete_EventTrigger = lib.Find<delete_EventTriggerDelegate>("delete_EventTrigger");
    _EventTrigger_GetActions = lib.Find<EventTrigger_GetActionsDelegate>("EventTrigger_GetActions");
    _EventTrigger_GetRoutedEvent = lib.Find<EventTrigger_GetRoutedEventDelegate>("EventTrigger_GetRoutedEvent");
    _EventTrigger_SetRoutedEvent = lib.Find<EventTrigger_SetRoutedEventDelegate>("EventTrigger_SetRoutedEvent");
    _EventTrigger_GetSourceName = lib.Find<EventTrigger_GetSourceNameDelegate>("EventTrigger_GetSourceName");
    _EventTrigger_SetSourceName = lib.Find<EventTrigger_SetSourceNameDelegate>("EventTrigger_SetSourceName");
    _EventTrigger_AddToLocalTriggers = lib.Find<EventTrigger_AddToLocalTriggersDelegate>("EventTrigger_AddToLocalTriggers");
    _EventTrigger_RegisterSources = lib.Find<EventTrigger_RegisterSourcesDelegate>("EventTrigger_RegisterSources");
    _EventTrigger_UnregisterSources = lib.Find<EventTrigger_UnregisterSourcesDelegate>("EventTrigger_UnregisterSources");
    _EventTrigger_RegisterEvents = lib.Find<EventTrigger_RegisterEventsDelegate>("EventTrigger_RegisterEvents");
    _EventTrigger_UnregisterEvents = lib.Find<EventTrigger_UnregisterEventsDelegate>("EventTrigger_UnregisterEvents");
    _EventTrigger_Check = lib.Find<EventTrigger_CheckDelegate>("EventTrigger_Check");
    _EventTrigger_FindValue = lib.Find<EventTrigger_FindValueDelegate>("EventTrigger_FindValue");
    _EventTrigger_Invalidate__SWIG_0 = lib.Find<EventTrigger_Invalidate__SWIG_0Delegate>("EventTrigger_Invalidate__SWIG_0");
    _EventTrigger_Invalidate__SWIG_1 = lib.Find<EventTrigger_Invalidate__SWIG_1Delegate>("EventTrigger_Invalidate__SWIG_1");
    _new_HeaderedContentControl = lib.Find<new_HeaderedContentControlDelegate>("new_HeaderedContentControl");
    _delete_HeaderedContentControl = lib.Find<delete_HeaderedContentControlDelegate>("delete_HeaderedContentControl");
    _HeaderedContentControl_GetHasHeader = lib.Find<HeaderedContentControl_GetHasHeaderDelegate>("HeaderedContentControl_GetHasHeader");
    _HeaderedContentControl_GetHeader = lib.Find<HeaderedContentControl_GetHeaderDelegate>("HeaderedContentControl_GetHeader");
    _HeaderedContentControl_SetHeader = lib.Find<HeaderedContentControl_SetHeaderDelegate>("HeaderedContentControl_SetHeader");
    _HeaderedContentControl_GetHeaderTemplate = lib.Find<HeaderedContentControl_GetHeaderTemplateDelegate>("HeaderedContentControl_GetHeaderTemplate");
    _HeaderedContentControl_SetHeaderTemplate = lib.Find<HeaderedContentControl_SetHeaderTemplateDelegate>("HeaderedContentControl_SetHeaderTemplate");
    _HeaderedContentControl_GetHeaderTemplateSelector = lib.Find<HeaderedContentControl_GetHeaderTemplateSelectorDelegate>("HeaderedContentControl_GetHeaderTemplateSelector");
    _HeaderedContentControl_SetHeaderTemplateSelector = lib.Find<HeaderedContentControl_SetHeaderTemplateSelectorDelegate>("HeaderedContentControl_SetHeaderTemplateSelector");
    _new_Expander = lib.Find<new_ExpanderDelegate>("new_Expander");
    _Expander_GetExpandDirection = lib.Find<Expander_GetExpandDirectionDelegate>("Expander_GetExpandDirection");
    _Expander_SetExpandDirection = lib.Find<Expander_SetExpandDirectionDelegate>("Expander_SetExpandDirection");
    _Expander_GetIsExpanded = lib.Find<Expander_GetIsExpandedDelegate>("Expander_GetIsExpanded");
    _Expander_SetIsExpanded = lib.Find<Expander_SetIsExpandedDelegate>("Expander_SetIsExpanded");
    _delete_Expander = lib.Find<delete_ExpanderDelegate>("delete_Expander");
    _FocusManager_GetFocusedElement = lib.Find<FocusManager_GetFocusedElementDelegate>("FocusManager_GetFocusedElement");
    _FocusManager_SetFocusedElement = lib.Find<FocusManager_SetFocusedElementDelegate>("FocusManager_SetFocusedElement");
    _FocusManager_GetFocusScope = lib.Find<FocusManager_GetFocusScopeDelegate>("FocusManager_GetFocusScope");
    _FocusManager_GetIsFocusScope = lib.Find<FocusManager_GetIsFocusScopeDelegate>("FocusManager_GetIsFocusScope");
    _FocusManager_SetIsFocusScope = lib.Find<FocusManager_SetIsFocusScopeDelegate>("FocusManager_SetIsFocusScope");
    _delete_FocusManager = lib.Find<delete_FocusManagerDelegate>("delete_FocusManager");
    _new_FormattedText = lib.Find<new_FormattedTextDelegate>("new_FormattedText");
    _delete_FormattedText = lib.Find<delete_FormattedTextDelegate>("delete_FormattedText");
    _FormattedText_GetText = lib.Find<FormattedText_GetTextDelegate>("FormattedText_GetText");
    _FormattedText_SetText = lib.Find<FormattedText_SetTextDelegate>("FormattedText_SetText");
    _FormattedText_GetTextAlignment = lib.Find<FormattedText_GetTextAlignmentDelegate>("FormattedText_GetTextAlignment");
    _FormattedText_SetTextAlignment = lib.Find<FormattedText_SetTextAlignmentDelegate>("FormattedText_SetTextAlignment");
    _FormattedText_GetFontFamily = lib.Find<FormattedText_GetFontFamilyDelegate>("FormattedText_GetFontFamily");
    _FormattedText_SetFontFamily = lib.Find<FormattedText_SetFontFamilyDelegate>("FormattedText_SetFontFamily");
    _FormattedText_GetFontSize = lib.Find<FormattedText_GetFontSizeDelegate>("FormattedText_GetFontSize");
    _FormattedText_SetFontSize = lib.Find<FormattedText_SetFontSizeDelegate>("FormattedText_SetFontSize");
    _FormattedText_GetFontStretch = lib.Find<FormattedText_GetFontStretchDelegate>("FormattedText_GetFontStretch");
    _FormattedText_SetFontStretch = lib.Find<FormattedText_SetFontStretchDelegate>("FormattedText_SetFontStretch");
    _FormattedText_GetFontStyle = lib.Find<FormattedText_GetFontStyleDelegate>("FormattedText_GetFontStyle");
    _FormattedText_SetFontStyle = lib.Find<FormattedText_SetFontStyleDelegate>("FormattedText_SetFontStyle");
    _FormattedText_GetFontWeight = lib.Find<FormattedText_GetFontWeightDelegate>("FormattedText_GetFontWeight");
    _FormattedText_SetFontWeight = lib.Find<FormattedText_SetFontWeightDelegate>("FormattedText_SetFontWeight");
    _FormattedText_GetForeground = lib.Find<FormattedText_GetForegroundDelegate>("FormattedText_GetForeground");
    _FormattedText_SetForeground = lib.Find<FormattedText_SetForegroundDelegate>("FormattedText_SetForeground");
    _FormattedText_GetStroke = lib.Find<FormattedText_GetStrokeDelegate>("FormattedText_GetStroke");
    _FormattedText_SetStroke = lib.Find<FormattedText_SetStrokeDelegate>("FormattedText_SetStroke");
    _FormattedText_GetStrokeThickness = lib.Find<FormattedText_GetStrokeThicknessDelegate>("FormattedText_GetStrokeThickness");
    _FormattedText_SetStrokeThickness = lib.Find<FormattedText_SetStrokeThicknessDelegate>("FormattedText_SetStrokeThickness");
    _FormattedText_GetFont = lib.Find<FormattedText_GetFontDelegate>("FormattedText_GetFont");
    _FormattedText_CreateRenderProxy = lib.Find<FormattedText_CreateRenderProxyDelegate>("FormattedText_CreateRenderProxy");
    _FormattedText_UpdateRenderProxy = lib.Find<FormattedText_UpdateRenderProxyDelegate>("FormattedText_UpdateRenderProxy");
    _FormattedText_UnregisterRenderer = lib.Find<FormattedText_UnregisterRendererDelegate>("FormattedText_UnregisterRenderer");
    _ContextMenuEventArgs_owner_set = lib.Find<ContextMenuEventArgs_owner_setDelegate>("ContextMenuEventArgs_owner_set");
    _ContextMenuEventArgs_owner_get = lib.Find<ContextMenuEventArgs_owner_getDelegate>("ContextMenuEventArgs_owner_get");
    _ContextMenuEventArgs_cursorLeft_set = lib.Find<ContextMenuEventArgs_cursorLeft_setDelegate>("ContextMenuEventArgs_cursorLeft_set");
    _ContextMenuEventArgs_cursorLeft_get = lib.Find<ContextMenuEventArgs_cursorLeft_getDelegate>("ContextMenuEventArgs_cursorLeft_get");
    _ContextMenuEventArgs_cursorTop_set = lib.Find<ContextMenuEventArgs_cursorTop_setDelegate>("ContextMenuEventArgs_cursorTop_set");
    _ContextMenuEventArgs_cursorTop_get = lib.Find<ContextMenuEventArgs_cursorTop_getDelegate>("ContextMenuEventArgs_cursorTop_get");
    _new_ContextMenuEventArgs__SWIG_0 = lib.Find<new_ContextMenuEventArgs__SWIG_0Delegate>("new_ContextMenuEventArgs__SWIG_0");
    _new_ContextMenuEventArgs__SWIG_1 = lib.Find<new_ContextMenuEventArgs__SWIG_1Delegate>("new_ContextMenuEventArgs__SWIG_1");
    _new_ContextMenuEventArgs__SWIG_2 = lib.Find<new_ContextMenuEventArgs__SWIG_2Delegate>("new_ContextMenuEventArgs__SWIG_2");
    _delete_ContextMenuEventArgs = lib.Find<delete_ContextMenuEventArgsDelegate>("delete_ContextMenuEventArgs");
    _new_ToolTipEventArgs = lib.Find<new_ToolTipEventArgsDelegate>("new_ToolTipEventArgs");
    _delete_ToolTipEventArgs = lib.Find<delete_ToolTipEventArgsDelegate>("delete_ToolTipEventArgs");
    _RequestBringIntoViewEventArgs_targetObject_set = lib.Find<RequestBringIntoViewEventArgs_targetObject_setDelegate>("RequestBringIntoViewEventArgs_targetObject_set");
    _RequestBringIntoViewEventArgs_targetObject_get = lib.Find<RequestBringIntoViewEventArgs_targetObject_getDelegate>("RequestBringIntoViewEventArgs_targetObject_get");
    _RequestBringIntoViewEventArgs_targetRect_set = lib.Find<RequestBringIntoViewEventArgs_targetRect_setDelegate>("RequestBringIntoViewEventArgs_targetRect_set");
    _RequestBringIntoViewEventArgs_targetRect_get = lib.Find<RequestBringIntoViewEventArgs_targetRect_getDelegate>("RequestBringIntoViewEventArgs_targetRect_get");
    _new_RequestBringIntoViewEventArgs = lib.Find<new_RequestBringIntoViewEventArgsDelegate>("new_RequestBringIntoViewEventArgs");
    _delete_RequestBringIntoViewEventArgs = lib.Find<delete_RequestBringIntoViewEventArgsDelegate>("delete_RequestBringIntoViewEventArgs");
    _new_FreezableCollection__SWIG_0 = lib.Find<new_FreezableCollection__SWIG_0Delegate>("new_FreezableCollection__SWIG_0");
    _new_FreezableCollection__SWIG_1 = lib.Find<new_FreezableCollection__SWIG_1Delegate>("new_FreezableCollection__SWIG_1");
    _delete_FreezableCollection = lib.Find<delete_FreezableCollectionDelegate>("delete_FreezableCollection");
    _FreezableCollection_Count = lib.Find<FreezableCollection_CountDelegate>("FreezableCollection_Count");
    _FreezableCollection_Get = lib.Find<FreezableCollection_GetDelegate>("FreezableCollection_Get");
    _FreezableCollection_Set__SWIG_0 = lib.Find<FreezableCollection_Set__SWIG_0Delegate>("FreezableCollection_Set__SWIG_0");
    _FreezableCollection_Set__SWIG_1 = lib.Find<FreezableCollection_Set__SWIG_1Delegate>("FreezableCollection_Set__SWIG_1");
    _FreezableCollection_Add__SWIG_0 = lib.Find<FreezableCollection_Add__SWIG_0Delegate>("FreezableCollection_Add__SWIG_0");
    _FreezableCollection_Add__SWIG_1 = lib.Find<FreezableCollection_Add__SWIG_1Delegate>("FreezableCollection_Add__SWIG_1");
    _FreezableCollection_Clear = lib.Find<FreezableCollection_ClearDelegate>("FreezableCollection_Clear");
    _FreezableCollection_Contains = lib.Find<FreezableCollection_ContainsDelegate>("FreezableCollection_Contains");
    _FreezableCollection_IndexOf = lib.Find<FreezableCollection_IndexOfDelegate>("FreezableCollection_IndexOf");
    _FreezableCollection_Insert__SWIG_0 = lib.Find<FreezableCollection_Insert__SWIG_0Delegate>("FreezableCollection_Insert__SWIG_0");
    _FreezableCollection_Insert__SWIG_1 = lib.Find<FreezableCollection_Insert__SWIG_1Delegate>("FreezableCollection_Insert__SWIG_1");
    _FreezableCollection_Remove = lib.Find<FreezableCollection_RemoveDelegate>("FreezableCollection_Remove");
    _FreezableCollection_RemoveAt = lib.Find<FreezableCollection_RemoveAtDelegate>("FreezableCollection_RemoveAt");
    _FreezableCollection_GetIterator = lib.Find<FreezableCollection_GetIteratorDelegate>("FreezableCollection_GetIterator");
    _FreezableCollection_CollectionChanged = lib.Find<FreezableCollection_CollectionChangedDelegate>("FreezableCollection_CollectionChanged");
    _IdOfTypedFreezableCollection = lib.Find<IdOfTypedFreezableCollectionDelegate>("IdOfTypedFreezableCollection");
    _new_GeometryGroup = lib.Find<new_GeometryGroupDelegate>("new_GeometryGroup");
    _delete_GeometryGroup = lib.Find<delete_GeometryGroupDelegate>("delete_GeometryGroup");
    _GeometryGroup_GetChildren = lib.Find<GeometryGroup_GetChildrenDelegate>("GeometryGroup_GetChildren");
    _GeometryGroup_SetChildren = lib.Find<GeometryGroup_SetChildrenDelegate>("GeometryGroup_SetChildren");
    _GeometryGroup_GetFillRule = lib.Find<GeometryGroup_GetFillRuleDelegate>("GeometryGroup_GetFillRule");
    _GeometryGroup_SetFillRule = lib.Find<GeometryGroup_SetFillRuleDelegate>("GeometryGroup_SetFillRule");
    _GeometryGroup_CreateRenderProxy = lib.Find<GeometryGroup_CreateRenderProxyDelegate>("GeometryGroup_CreateRenderProxy");
    _GeometryGroup_UpdateRenderProxy = lib.Find<GeometryGroup_UpdateRenderProxyDelegate>("GeometryGroup_UpdateRenderProxy");
    _delete_GradientBrush = lib.Find<delete_GradientBrushDelegate>("delete_GradientBrush");
    _GradientBrush_GetColorInterpolationMode = lib.Find<GradientBrush_GetColorInterpolationModeDelegate>("GradientBrush_GetColorInterpolationMode");
    _GradientBrush_SetColorInterpolationMode = lib.Find<GradientBrush_SetColorInterpolationModeDelegate>("GradientBrush_SetColorInterpolationMode");
    _GradientBrush_GetGradientStops = lib.Find<GradientBrush_GetGradientStopsDelegate>("GradientBrush_GetGradientStops");
    _GradientBrush_SetGradientStops = lib.Find<GradientBrush_SetGradientStopsDelegate>("GradientBrush_SetGradientStops");
    _GradientBrush_GetMappingMode = lib.Find<GradientBrush_GetMappingModeDelegate>("GradientBrush_GetMappingMode");
    _GradientBrush_SetMappingMode = lib.Find<GradientBrush_SetMappingModeDelegate>("GradientBrush_SetMappingMode");
    _GradientBrush_GetSpreadMethod = lib.Find<GradientBrush_GetSpreadMethodDelegate>("GradientBrush_GetSpreadMethod");
    _GradientBrush_SetSpreadMethod = lib.Find<GradientBrush_SetSpreadMethodDelegate>("GradientBrush_SetSpreadMethod");
    _GradientBrush_UpdateRenderProxy = lib.Find<GradientBrush_UpdateRenderProxyDelegate>("GradientBrush_UpdateRenderProxy");
    _new_GradientStop = lib.Find<new_GradientStopDelegate>("new_GradientStop");
    _GradientStop_GetColor = lib.Find<GradientStop_GetColorDelegate>("GradientStop_GetColor");
    _GradientStop_SetColor = lib.Find<GradientStop_SetColorDelegate>("GradientStop_SetColor");
    _GradientStop_GetOffset = lib.Find<GradientStop_GetOffsetDelegate>("GradientStop_GetOffset");
    _GradientStop_SetOffset = lib.Find<GradientStop_SetOffsetDelegate>("GradientStop_SetOffset");
    _delete_GradientStop = lib.Find<delete_GradientStopDelegate>("delete_GradientStop");
    _new_GradientStopCollection = lib.Find<new_GradientStopCollectionDelegate>("new_GradientStopCollection");
    _delete_GradientStopCollection = lib.Find<delete_GradientStopCollectionDelegate>("delete_GradientStopCollection");
    _GradientStopCollection_CreateRenderProxy = lib.Find<GradientStopCollection_CreateRenderProxyDelegate>("GradientStopCollection_CreateRenderProxy");
    _GradientStopCollection_UpdateRenderProxy = lib.Find<GradientStopCollection_UpdateRenderProxyDelegate>("GradientStopCollection_UpdateRenderProxy");
    _GradientStopCollection_UnregisterRenderer = lib.Find<GradientStopCollection_UnregisterRendererDelegate>("GradientStopCollection_UnregisterRenderer");
    _new_Grid = lib.Find<new_GridDelegate>("new_Grid");
    _delete_Grid = lib.Find<delete_GridDelegate>("delete_Grid");
    _Grid_GetColumnDefinitions = lib.Find<Grid_GetColumnDefinitionsDelegate>("Grid_GetColumnDefinitions");
    _Grid_GetColumn = lib.Find<Grid_GetColumnDelegate>("Grid_GetColumn");
    _Grid_SetColumn = lib.Find<Grid_SetColumnDelegate>("Grid_SetColumn");
    _Grid_GetColumnSpan = lib.Find<Grid_GetColumnSpanDelegate>("Grid_GetColumnSpan");
    _Grid_SetColumnSpan = lib.Find<Grid_SetColumnSpanDelegate>("Grid_SetColumnSpan");
    _Grid_GetIsSharedSizeScope = lib.Find<Grid_GetIsSharedSizeScopeDelegate>("Grid_GetIsSharedSizeScope");
    _Grid_SetIsSharedSizeScope = lib.Find<Grid_SetIsSharedSizeScopeDelegate>("Grid_SetIsSharedSizeScope");
    _Grid_GetRowDefinitions = lib.Find<Grid_GetRowDefinitionsDelegate>("Grid_GetRowDefinitions");
    _Grid_GetRow = lib.Find<Grid_GetRowDelegate>("Grid_GetRow");
    _Grid_SetRow = lib.Find<Grid_SetRowDelegate>("Grid_SetRow");
    _Grid_GetRowSpan = lib.Find<Grid_GetRowSpanDelegate>("Grid_GetRowSpan");
    _Grid_SetRowSpan = lib.Find<Grid_SetRowSpanDelegate>("Grid_SetRowSpan");
    _Grid_GetShowGridLines = lib.Find<Grid_GetShowGridLinesDelegate>("Grid_GetShowGridLines");
    _Grid_SetShowGridLines = lib.Find<Grid_SetShowGridLinesDelegate>("Grid_SetShowGridLines");
    _new_GridLength__SWIG_0 = lib.Find<new_GridLength__SWIG_0Delegate>("new_GridLength__SWIG_0");
    _new_GridLength__SWIG_1 = lib.Find<new_GridLength__SWIG_1Delegate>("new_GridLength__SWIG_1");
    _new_GridLength__SWIG_2 = lib.Find<new_GridLength__SWIG_2Delegate>("new_GridLength__SWIG_2");
    _GridLength_GetGridUnitType = lib.Find<GridLength_GetGridUnitTypeDelegate>("GridLength_GetGridUnitType");
    _GridLength_IsAbsolute = lib.Find<GridLength_IsAbsoluteDelegate>("GridLength_IsAbsolute");
    _GridLength_IsAuto = lib.Find<GridLength_IsAutoDelegate>("GridLength_IsAuto");
    _GridLength_IsStar = lib.Find<GridLength_IsStarDelegate>("GridLength_IsStar");
    _GridLength_GetValue = lib.Find<GridLength_GetValueDelegate>("GridLength_GetValue");
    _new_GridLength__SWIG_3 = lib.Find<new_GridLength__SWIG_3Delegate>("new_GridLength__SWIG_3");
    _GridLength_Parse = lib.Find<GridLength_ParseDelegate>("GridLength_Parse");
    _GridLength_TryParse = lib.Find<GridLength_TryParseDelegate>("GridLength_TryParse");
    _delete_GridLength = lib.Find<delete_GridLengthDelegate>("delete_GridLength");
    _new_GroupBox = lib.Find<new_GroupBoxDelegate>("new_GroupBox");
    _delete_GroupBox = lib.Find<delete_GroupBoxDelegate>("delete_GroupBox");
    _new_GroupDescription = lib.Find<new_GroupDescriptionDelegate>("new_GroupDescription");
    _delete_GroupDescription = lib.Find<delete_GroupDescriptionDelegate>("delete_GroupDescription");
    _new_HeaderedItemsControl = lib.Find<new_HeaderedItemsControlDelegate>("new_HeaderedItemsControl");
    _delete_HeaderedItemsControl = lib.Find<delete_HeaderedItemsControlDelegate>("delete_HeaderedItemsControl");
    _HeaderedItemsControl_GetHasHeader = lib.Find<HeaderedItemsControl_GetHasHeaderDelegate>("HeaderedItemsControl_GetHasHeader");
    _HeaderedItemsControl_GetHeader = lib.Find<HeaderedItemsControl_GetHeaderDelegate>("HeaderedItemsControl_GetHeader");
    _HeaderedItemsControl_SetHeader = lib.Find<HeaderedItemsControl_SetHeaderDelegate>("HeaderedItemsControl_SetHeader");
    _HeaderedItemsControl_GetHeaderStringFormat = lib.Find<HeaderedItemsControl_GetHeaderStringFormatDelegate>("HeaderedItemsControl_GetHeaderStringFormat");
    _HeaderedItemsControl_SetHeaderStringFormat = lib.Find<HeaderedItemsControl_SetHeaderStringFormatDelegate>("HeaderedItemsControl_SetHeaderStringFormat");
    _HeaderedItemsControl_GetHeaderTemplate = lib.Find<HeaderedItemsControl_GetHeaderTemplateDelegate>("HeaderedItemsControl_GetHeaderTemplate");
    _HeaderedItemsControl_SetHeaderTemplate = lib.Find<HeaderedItemsControl_SetHeaderTemplateDelegate>("HeaderedItemsControl_SetHeaderTemplate");
    _HeaderedItemsControl_GetHeaderTemplateSelector = lib.Find<HeaderedItemsControl_GetHeaderTemplateSelectorDelegate>("HeaderedItemsControl_GetHeaderTemplateSelector");
    _HeaderedItemsControl_SetHeaderTemplateSelector = lib.Find<HeaderedItemsControl_SetHeaderTemplateSelectorDelegate>("HeaderedItemsControl_SetHeaderTemplateSelector");
    _HeaderedItemsControl_PrepareContainerForItem = lib.Find<HeaderedItemsControl_PrepareContainerForItemDelegate>("HeaderedItemsControl_PrepareContainerForItem");
    _new_IconSource__SWIG_0 = lib.Find<new_IconSource__SWIG_0Delegate>("new_IconSource__SWIG_0");
    _new_IconSource__SWIG_1 = lib.Find<new_IconSource__SWIG_1Delegate>("new_IconSource__SWIG_1");
    _delete_IconSource = lib.Find<delete_IconSourceDelegate>("delete_IconSource");
    _IconSource_Register = lib.Find<IconSource_RegisterDelegate>("IconSource_Register");
    _IconSource_IsRegistered = lib.Find<IconSource_IsRegisteredDelegate>("IconSource_IsRegistered");
    _IconSource_ClearCache = lib.Find<IconSource_ClearCacheDelegate>("IconSource_ClearCache");
    _IconSource_GetSource = lib.Find<IconSource_GetSourceDelegate>("IconSource_GetSource");
    _IconSource_GetImageSet = lib.Find<IconSource_GetImageSetDelegate>("IconSource_GetImageSet");
    _IconSource_SetImageSet = lib.Find<IconSource_SetImageSetDelegate>("IconSource_SetImageSet");
    _new_Image = lib.Find<new_ImageDelegate>("new_Image");
    _delete_Image = lib.Find<delete_ImageDelegate>("delete_Image");
    _Image_GetSource = lib.Find<Image_GetSourceDelegate>("Image_GetSource");
    _Image_SetSource = lib.Find<Image_SetSourceDelegate>("Image_SetSource");
    _Image_GetStretch = lib.Find<Image_GetStretchDelegate>("Image_GetStretch");
    _Image_SetStretch = lib.Find<Image_SetStretchDelegate>("Image_SetStretch");
    _Image_GetStretchDirection = lib.Find<Image_GetStretchDirectionDelegate>("Image_GetStretchDirection");
    _Image_SetStretchDirection = lib.Find<Image_SetStretchDirectionDelegate>("Image_SetStretchDirection");
    _Image_InvalidateImage = lib.Find<Image_InvalidateImageDelegate>("Image_InvalidateImage");
    _new_ImageAtlasList = lib.Find<new_ImageAtlasListDelegate>("new_ImageAtlasList");
    _delete_ImageAtlasList = lib.Find<delete_ImageAtlasListDelegate>("delete_ImageAtlasList");
    _ImageAtlasList_Add = lib.Find<ImageAtlasList_AddDelegate>("ImageAtlasList_Add");
    _ImageAtlasList_Count = lib.Find<ImageAtlasList_CountDelegate>("ImageAtlasList_Count");
    _ImageAtlasList_Get = lib.Find<ImageAtlasList_GetDelegate>("ImageAtlasList_Get");
    _ImageAtlasList_CreateRenderProxy = lib.Find<ImageAtlasList_CreateRenderProxyDelegate>("ImageAtlasList_CreateRenderProxy");
    _ImageAtlasList_UpdateRenderProxy = lib.Find<ImageAtlasList_UpdateRenderProxyDelegate>("ImageAtlasList_UpdateRenderProxy");
    _ImageAtlasList_UnregisterRenderer = lib.Find<ImageAtlasList_UnregisterRendererDelegate>("ImageAtlasList_UnregisterRenderer");
    _delete_TileBrush = lib.Find<delete_TileBrushDelegate>("delete_TileBrush");
    _TileBrush_GetAlignmentX = lib.Find<TileBrush_GetAlignmentXDelegate>("TileBrush_GetAlignmentX");
    _TileBrush_SetAlignmentX = lib.Find<TileBrush_SetAlignmentXDelegate>("TileBrush_SetAlignmentX");
    _TileBrush_GetAlignmentY = lib.Find<TileBrush_GetAlignmentYDelegate>("TileBrush_GetAlignmentY");
    _TileBrush_SetAlignmentY = lib.Find<TileBrush_SetAlignmentYDelegate>("TileBrush_SetAlignmentY");
    _TileBrush_GetStretch = lib.Find<TileBrush_GetStretchDelegate>("TileBrush_GetStretch");
    _TileBrush_SetStretch = lib.Find<TileBrush_SetStretchDelegate>("TileBrush_SetStretch");
    _TileBrush_GetTileMode = lib.Find<TileBrush_GetTileModeDelegate>("TileBrush_GetTileMode");
    _TileBrush_SetTileMode = lib.Find<TileBrush_SetTileModeDelegate>("TileBrush_SetTileMode");
    _TileBrush_GetViewbox = lib.Find<TileBrush_GetViewboxDelegate>("TileBrush_GetViewbox");
    _TileBrush_SetViewbox = lib.Find<TileBrush_SetViewboxDelegate>("TileBrush_SetViewbox");
    _TileBrush_GetViewboxUnits = lib.Find<TileBrush_GetViewboxUnitsDelegate>("TileBrush_GetViewboxUnits");
    _TileBrush_SetViewboxUnits = lib.Find<TileBrush_SetViewboxUnitsDelegate>("TileBrush_SetViewboxUnits");
    _TileBrush_GetViewport = lib.Find<TileBrush_GetViewportDelegate>("TileBrush_GetViewport");
    _TileBrush_SetViewport = lib.Find<TileBrush_SetViewportDelegate>("TileBrush_SetViewport");
    _TileBrush_GetViewportUnits = lib.Find<TileBrush_GetViewportUnitsDelegate>("TileBrush_GetViewportUnits");
    _TileBrush_SetViewportUnits = lib.Find<TileBrush_SetViewportUnitsDelegate>("TileBrush_SetViewportUnits");
    _TileBrush_UpdateRenderProxy = lib.Find<TileBrush_UpdateRenderProxyDelegate>("TileBrush_UpdateRenderProxy");
    _new_ImageBrush = lib.Find<new_ImageBrushDelegate>("new_ImageBrush");
    _delete_ImageBrush = lib.Find<delete_ImageBrushDelegate>("delete_ImageBrush");
    _ImageBrush_GetImageSource = lib.Find<ImageBrush_GetImageSourceDelegate>("ImageBrush_GetImageSource");
    _ImageBrush_SetImageSource = lib.Find<ImageBrush_SetImageSourceDelegate>("ImageBrush_SetImageSource");
    _ImageBrush_CreateRenderProxy = lib.Find<ImageBrush_CreateRenderProxyDelegate>("ImageBrush_CreateRenderProxy");
    _ImageBrush_UpdateRenderProxy = lib.Find<ImageBrush_UpdateRenderProxyDelegate>("ImageBrush_UpdateRenderProxy");
    _new_InputBinding__SWIG_0 = lib.Find<new_InputBinding__SWIG_0Delegate>("new_InputBinding__SWIG_0");
    _new_InputBinding__SWIG_1 = lib.Find<new_InputBinding__SWIG_1Delegate>("new_InputBinding__SWIG_1");
    _delete_InputBinding = lib.Find<delete_InputBindingDelegate>("delete_InputBinding");
    _InputBinding_GetCommand = lib.Find<InputBinding_GetCommandDelegate>("InputBinding_GetCommand");
    _InputBinding_SetCommand = lib.Find<InputBinding_SetCommandDelegate>("InputBinding_SetCommand");
    _InputBinding_GetCommandParameter = lib.Find<InputBinding_GetCommandParameterDelegate>("InputBinding_GetCommandParameter");
    _InputBinding_SetCommandParameter = lib.Find<InputBinding_SetCommandParameterDelegate>("InputBinding_SetCommandParameter");
    _InputBinding_GetCommandTarget = lib.Find<InputBinding_GetCommandTargetDelegate>("InputBinding_GetCommandTarget");
    _InputBinding_SetCommandTarget = lib.Find<InputBinding_SetCommandTargetDelegate>("InputBinding_SetCommandTarget");
    _InputBinding_GetGesture = lib.Find<InputBinding_GetGestureDelegate>("InputBinding_GetGesture");
    _InputBinding_SetGesture = lib.Find<InputBinding_SetGestureDelegate>("InputBinding_SetGesture");
    _delete_InputGesture = lib.Find<delete_InputGestureDelegate>("delete_InputGesture");
    _InputGesture_Matches = lib.Find<InputGesture_MatchesDelegate>("InputGesture_Matches");
    _new_ItemCollection__SWIG_0 = lib.Find<new_ItemCollection__SWIG_0Delegate>("new_ItemCollection__SWIG_0");
    _new_ItemCollection__SWIG_1 = lib.Find<new_ItemCollection__SWIG_1Delegate>("new_ItemCollection__SWIG_1");
    _delete_ItemCollection = lib.Find<delete_ItemCollectionDelegate>("delete_ItemCollection");
    _ItemCollection_SetItemsControlOwner = lib.Find<ItemCollection_SetItemsControlOwnerDelegate>("ItemCollection_SetItemsControlOwner");
    _ItemCollection_SetView = lib.Find<ItemCollection_SetViewDelegate>("ItemCollection_SetView");
    _ItemCollection_IsReadOnly = lib.Find<ItemCollection_IsReadOnlyDelegate>("ItemCollection_IsReadOnly");
    _ItemCollection_CanFilter = lib.Find<ItemCollection_CanFilterDelegate>("ItemCollection_CanFilter");
    _ItemCollection_CanGroup = lib.Find<ItemCollection_CanGroupDelegate>("ItemCollection_CanGroup");
    _ItemCollection_CanSort = lib.Find<ItemCollection_CanSortDelegate>("ItemCollection_CanSort");
    _ItemCollection_Contains = lib.Find<ItemCollection_ContainsDelegate>("ItemCollection_Contains");
    _ItemCollection_CurrentItem = lib.Find<ItemCollection_CurrentItemDelegate>("ItemCollection_CurrentItem");
    _ItemCollection_CurrentPosition = lib.Find<ItemCollection_CurrentPositionDelegate>("ItemCollection_CurrentPosition");
    _ItemCollection_IsCurrentAfterLast = lib.Find<ItemCollection_IsCurrentAfterLastDelegate>("ItemCollection_IsCurrentAfterLast");
    _ItemCollection_IsCurrentBeforeFirst = lib.Find<ItemCollection_IsCurrentBeforeFirstDelegate>("ItemCollection_IsCurrentBeforeFirst");
    _ItemCollection_IsEmpty = lib.Find<ItemCollection_IsEmptyDelegate>("ItemCollection_IsEmpty");
    _ItemCollection_MoveCurrentTo = lib.Find<ItemCollection_MoveCurrentToDelegate>("ItemCollection_MoveCurrentTo");
    _ItemCollection_MoveCurrentToFirst = lib.Find<ItemCollection_MoveCurrentToFirstDelegate>("ItemCollection_MoveCurrentToFirst");
    _ItemCollection_MoveCurrentToLast = lib.Find<ItemCollection_MoveCurrentToLastDelegate>("ItemCollection_MoveCurrentToLast");
    _ItemCollection_MoveCurrentToNext = lib.Find<ItemCollection_MoveCurrentToNextDelegate>("ItemCollection_MoveCurrentToNext");
    _ItemCollection_MoveCurrentToPosition = lib.Find<ItemCollection_MoveCurrentToPositionDelegate>("ItemCollection_MoveCurrentToPosition");
    _ItemCollection_MoveCurrentToPrevious = lib.Find<ItemCollection_MoveCurrentToPreviousDelegate>("ItemCollection_MoveCurrentToPrevious");
    _ItemCollection_Refresh = lib.Find<ItemCollection_RefreshDelegate>("ItemCollection_Refresh");
    _ItemCollection_CurrentChanged = lib.Find<ItemCollection_CurrentChangedDelegate>("ItemCollection_CurrentChanged");
    _ItemCollection_Count = lib.Find<ItemCollection_CountDelegate>("ItemCollection_Count");
    _ItemCollection_Get = lib.Find<ItemCollection_GetDelegate>("ItemCollection_Get");
    _ItemCollection_Set__SWIG_0 = lib.Find<ItemCollection_Set__SWIG_0Delegate>("ItemCollection_Set__SWIG_0");
    _ItemCollection_Set__SWIG_1 = lib.Find<ItemCollection_Set__SWIG_1Delegate>("ItemCollection_Set__SWIG_1");
    _ItemCollection_Add__SWIG_0 = lib.Find<ItemCollection_Add__SWIG_0Delegate>("ItemCollection_Add__SWIG_0");
    _ItemCollection_Add__SWIG_1 = lib.Find<ItemCollection_Add__SWIG_1Delegate>("ItemCollection_Add__SWIG_1");
    _ItemCollection_Clear = lib.Find<ItemCollection_ClearDelegate>("ItemCollection_Clear");
    _ItemCollection_IndexOf = lib.Find<ItemCollection_IndexOfDelegate>("ItemCollection_IndexOf");
    _ItemCollection_Insert__SWIG_0 = lib.Find<ItemCollection_Insert__SWIG_0Delegate>("ItemCollection_Insert__SWIG_0");
    _ItemCollection_Insert__SWIG_1 = lib.Find<ItemCollection_Insert__SWIG_1Delegate>("ItemCollection_Insert__SWIG_1");
    _ItemCollection_Remove = lib.Find<ItemCollection_RemoveDelegate>("ItemCollection_Remove");
    _ItemCollection_RemoveAt = lib.Find<ItemCollection_RemoveAtDelegate>("ItemCollection_RemoveAt");
    _ItemCollection_CollectionChanged = lib.Find<ItemCollection_CollectionChangedDelegate>("ItemCollection_CollectionChanged");
    _ItemCollection_IsInitialized = lib.Find<ItemCollection_IsInitializedDelegate>("ItemCollection_IsInitialized");
    _ItemCollection_Init = lib.Find<ItemCollection_InitDelegate>("ItemCollection_Init");
    _new_ItemsPanelTemplate = lib.Find<new_ItemsPanelTemplateDelegate>("new_ItemsPanelTemplate");
    _delete_ItemsPanelTemplate = lib.Find<delete_ItemsPanelTemplateDelegate>("delete_ItemsPanelTemplate");
    _new_ItemsPresenter = lib.Find<new_ItemsPresenterDelegate>("new_ItemsPresenter");
    _delete_ItemsPresenter = lib.Find<delete_ItemsPresenterDelegate>("delete_ItemsPresenter");
    _new_KeyBinding__SWIG_0 = lib.Find<new_KeyBinding__SWIG_0Delegate>("new_KeyBinding__SWIG_0");
    _new_KeyBinding__SWIG_1 = lib.Find<new_KeyBinding__SWIG_1Delegate>("new_KeyBinding__SWIG_1");
    _delete_KeyBinding = lib.Find<delete_KeyBindingDelegate>("delete_KeyBinding");
    _KeyBinding_GetKey = lib.Find<KeyBinding_GetKeyDelegate>("KeyBinding_GetKey");
    _KeyBinding_GetModifiers = lib.Find<KeyBinding_GetModifiersDelegate>("KeyBinding_GetModifiers");
    _new_Keyboard = lib.Find<new_KeyboardDelegate>("new_Keyboard");
    _delete_Keyboard = lib.Find<delete_KeyboardDelegate>("delete_Keyboard");
    _Keyboard_ResetState = lib.Find<Keyboard_ResetStateDelegate>("Keyboard_ResetState");
    _Keyboard_GetModifiers = lib.Find<Keyboard_GetModifiersDelegate>("Keyboard_GetModifiers");
    _Keyboard_GetKeyStates = lib.Find<Keyboard_GetKeyStatesDelegate>("Keyboard_GetKeyStates");
    _Keyboard_IsKeyDown = lib.Find<Keyboard_IsKeyDownDelegate>("Keyboard_IsKeyDown");
    _Keyboard_IsKeyUp = lib.Find<Keyboard_IsKeyUpDelegate>("Keyboard_IsKeyUp");
    _Keyboard_IsKeyToggled = lib.Find<Keyboard_IsKeyToggledDelegate>("Keyboard_IsKeyToggled");
    _Keyboard_GetFocused = lib.Find<Keyboard_GetFocusedDelegate>("Keyboard_GetFocused");
    _Keyboard_Focus = lib.Find<Keyboard_FocusDelegate>("Keyboard_Focus");
    _new_KeyboardNavigation__SWIG_0 = lib.Find<new_KeyboardNavigation__SWIG_0Delegate>("new_KeyboardNavigation__SWIG_0");
    _new_KeyboardNavigation__SWIG_1 = lib.Find<new_KeyboardNavigation__SWIG_1Delegate>("new_KeyboardNavigation__SWIG_1");
    _delete_KeyboardNavigation = lib.Find<delete_KeyboardNavigationDelegate>("delete_KeyboardNavigation");
    _KeyboardNavigation_GetTabNavigation = lib.Find<KeyboardNavigation_GetTabNavigationDelegate>("KeyboardNavigation_GetTabNavigation");
    _KeyboardNavigation_SetTabNavigation = lib.Find<KeyboardNavigation_SetTabNavigationDelegate>("KeyboardNavigation_SetTabNavigation");
    _KeyboardNavigation_GetControlTabNavigation = lib.Find<KeyboardNavigation_GetControlTabNavigationDelegate>("KeyboardNavigation_GetControlTabNavigation");
    _KeyboardNavigation_SetControlTabNavigation = lib.Find<KeyboardNavigation_SetControlTabNavigationDelegate>("KeyboardNavigation_SetControlTabNavigation");
    _KeyboardNavigation_GetDirectionalNavigation = lib.Find<KeyboardNavigation_GetDirectionalNavigationDelegate>("KeyboardNavigation_GetDirectionalNavigation");
    _KeyboardNavigation_SetDirectionalNavigation = lib.Find<KeyboardNavigation_SetDirectionalNavigationDelegate>("KeyboardNavigation_SetDirectionalNavigation");
    _KeyboardNavigation_GetAcceptsReturn = lib.Find<KeyboardNavigation_GetAcceptsReturnDelegate>("KeyboardNavigation_GetAcceptsReturn");
    _KeyboardNavigation_SetAcceptsReturn = lib.Find<KeyboardNavigation_SetAcceptsReturnDelegate>("KeyboardNavigation_SetAcceptsReturn");
    _KeyboardNavigation_GetIsTabStop = lib.Find<KeyboardNavigation_GetIsTabStopDelegate>("KeyboardNavigation_GetIsTabStop");
    _KeyboardNavigation_SetIsTabStop = lib.Find<KeyboardNavigation_SetIsTabStopDelegate>("KeyboardNavigation_SetIsTabStop");
    _KeyboardNavigation_GetTabIndex = lib.Find<KeyboardNavigation_GetTabIndexDelegate>("KeyboardNavigation_GetTabIndex");
    _KeyboardNavigation_SetTabIndex = lib.Find<KeyboardNavigation_SetTabIndexDelegate>("KeyboardNavigation_SetTabIndex");
    _KeyboardNavigation_OnVirtualEvent = lib.Find<KeyboardNavigation_OnVirtualEventDelegate>("KeyboardNavigation_OnVirtualEvent");
    _KeyboardNavigation_OnFocused = lib.Find<KeyboardNavigation_OnFocusedDelegate>("KeyboardNavigation_OnFocused");
    _KeyboardNavigation_PredictFocus = lib.Find<KeyboardNavigation_PredictFocusDelegate>("KeyboardNavigation_PredictFocus");
    _new_KeyGesture__SWIG_0 = lib.Find<new_KeyGesture__SWIG_0Delegate>("new_KeyGesture__SWIG_0");
    _new_KeyGesture__SWIG_1 = lib.Find<new_KeyGesture__SWIG_1Delegate>("new_KeyGesture__SWIG_1");
    _new_KeyGesture__SWIG_2 = lib.Find<new_KeyGesture__SWIG_2Delegate>("new_KeyGesture__SWIG_2");
    _delete_KeyGesture = lib.Find<delete_KeyGestureDelegate>("delete_KeyGesture");
    _KeyGesture_GetKey = lib.Find<KeyGesture_GetKeyDelegate>("KeyGesture_GetKey");
    _KeyGesture_GetModifiers = lib.Find<KeyGesture_GetModifiersDelegate>("KeyGesture_GetModifiers");
    _KeyGesture_GetDisplayString = lib.Find<KeyGesture_GetDisplayStringDelegate>("KeyGesture_GetDisplayString");
    _KeyGesture_Matches = lib.Find<KeyGesture_MatchesDelegate>("KeyGesture_Matches");
    _new_Label = lib.Find<new_LabelDelegate>("new_Label");
    _Label_GetTarget = lib.Find<Label_GetTargetDelegate>("Label_GetTarget");
    _Label_SetTarget = lib.Find<Label_SetTargetDelegate>("Label_SetTarget");
    _delete_Label = lib.Find<delete_LabelDelegate>("delete_Label");
    _FindLayer = lib.Find<FindLayerDelegate>("FindLayer");
    _FindRootLayer = lib.Find<FindRootLayerDelegate>("FindRootLayer");
    _new_Line = lib.Find<new_LineDelegate>("new_Line");
    _delete_Line = lib.Find<delete_LineDelegate>("delete_Line");
    _Line_GetX1 = lib.Find<Line_GetX1Delegate>("Line_GetX1");
    _Line_SetX1 = lib.Find<Line_SetX1Delegate>("Line_SetX1");
    _Line_GetY1 = lib.Find<Line_GetY1Delegate>("Line_GetY1");
    _Line_SetY1 = lib.Find<Line_SetY1Delegate>("Line_SetY1");
    _Line_GetX2 = lib.Find<Line_GetX2Delegate>("Line_GetX2");
    _Line_SetX2 = lib.Find<Line_SetX2Delegate>("Line_SetX2");
    _Line_GetY2 = lib.Find<Line_GetY2Delegate>("Line_GetY2");
    _Line_SetY2 = lib.Find<Line_SetY2Delegate>("Line_SetY2");
    _new_LinearGradientBrush = lib.Find<new_LinearGradientBrushDelegate>("new_LinearGradientBrush");
    _LinearGradientBrush_GetStartPoint = lib.Find<LinearGradientBrush_GetStartPointDelegate>("LinearGradientBrush_GetStartPoint");
    _LinearGradientBrush_SetStartPoint = lib.Find<LinearGradientBrush_SetStartPointDelegate>("LinearGradientBrush_SetStartPoint");
    _LinearGradientBrush_GetEndPoint = lib.Find<LinearGradientBrush_GetEndPointDelegate>("LinearGradientBrush_GetEndPoint");
    _LinearGradientBrush_SetEndPoint = lib.Find<LinearGradientBrush_SetEndPointDelegate>("LinearGradientBrush_SetEndPoint");
    _LinearGradientBrush_CreateRenderProxy = lib.Find<LinearGradientBrush_CreateRenderProxyDelegate>("LinearGradientBrush_CreateRenderProxy");
    _LinearGradientBrush_UpdateRenderProxy = lib.Find<LinearGradientBrush_UpdateRenderProxyDelegate>("LinearGradientBrush_UpdateRenderProxy");
    _delete_LinearGradientBrush = lib.Find<delete_LinearGradientBrushDelegate>("delete_LinearGradientBrush");
    _new_LineGeometry__SWIG_0 = lib.Find<new_LineGeometry__SWIG_0Delegate>("new_LineGeometry__SWIG_0");
    _new_LineGeometry__SWIG_1 = lib.Find<new_LineGeometry__SWIG_1Delegate>("new_LineGeometry__SWIG_1");
    _LineGeometry_GetEndPoint = lib.Find<LineGeometry_GetEndPointDelegate>("LineGeometry_GetEndPoint");
    _LineGeometry_SetEndPoint = lib.Find<LineGeometry_SetEndPointDelegate>("LineGeometry_SetEndPoint");
    _LineGeometry_GetStartPoint = lib.Find<LineGeometry_GetStartPointDelegate>("LineGeometry_GetStartPoint");
    _LineGeometry_SetStartPoint = lib.Find<LineGeometry_SetStartPointDelegate>("LineGeometry_SetStartPoint");
    _LineGeometry_IsEmpty = lib.Find<LineGeometry_IsEmptyDelegate>("LineGeometry_IsEmpty");
    _LineGeometry_CreateRenderProxy = lib.Find<LineGeometry_CreateRenderProxyDelegate>("LineGeometry_CreateRenderProxy");
    _LineGeometry_UpdateRenderProxy = lib.Find<LineGeometry_UpdateRenderProxyDelegate>("LineGeometry_UpdateRenderProxy");
    _delete_LineGeometry = lib.Find<delete_LineGeometryDelegate>("delete_LineGeometry");
    _new_ListBox = lib.Find<new_ListBoxDelegate>("new_ListBox");
    _ListBox_GetSelectedItems = lib.Find<ListBox_GetSelectedItemsDelegate>("ListBox_GetSelectedItems");
    _ListBox_GetSelectionMode = lib.Find<ListBox_GetSelectionModeDelegate>("ListBox_GetSelectionMode");
    _ListBox_SetSelectionMode = lib.Find<ListBox_SetSelectionModeDelegate>("ListBox_SetSelectionMode");
    _ListBox_ScrollIntoView = lib.Find<ListBox_ScrollIntoViewDelegate>("ListBox_ScrollIntoView");
    _ListBox_UnselectAll = lib.Find<ListBox_UnselectAllDelegate>("ListBox_UnselectAll");
    _ListBox_ItemClicked = lib.Find<ListBox_ItemClickedDelegate>("ListBox_ItemClicked");
    _ListBox_ItemEntered = lib.Find<ListBox_ItemEnteredDelegate>("ListBox_ItemEntered");
    _delete_ListBox = lib.Find<delete_ListBoxDelegate>("delete_ListBox");
    _LogicalTreeHelper_GetParent = lib.Find<LogicalTreeHelper_GetParentDelegate>("LogicalTreeHelper_GetParent");
    _LogicalTreeHelper_GetChildrenCount = lib.Find<LogicalTreeHelper_GetChildrenCountDelegate>("LogicalTreeHelper_GetChildrenCount");
    _LogicalTreeHelper_GetChild = lib.Find<LogicalTreeHelper_GetChildDelegate>("LogicalTreeHelper_GetChild");
    _LogicalTreeHelper_FindName = lib.Find<LogicalTreeHelper_FindNameDelegate>("LogicalTreeHelper_FindName");
    _LogicalTreeHelper_PrintTree = lib.Find<LogicalTreeHelper_PrintTreeDelegate>("LogicalTreeHelper_PrintTree");
    _new_LogicalTreeHelper = lib.Find<new_LogicalTreeHelperDelegate>("new_LogicalTreeHelper");
    _delete_LogicalTreeHelper = lib.Find<delete_LogicalTreeHelperDelegate>("delete_LogicalTreeHelper");
    _delete_Projection = lib.Find<delete_ProjectionDelegate>("delete_Projection");
    _Projection_GetIdentity = lib.Find<Projection_GetIdentityDelegate>("Projection_GetIdentity");
    _Projection_IsIdentity = lib.Find<Projection_IsIdentityDelegate>("Projection_IsIdentity");
    _Projection_GetProjection = lib.Find<Projection_GetProjectionDelegate>("Projection_GetProjection");
    _new_Matrix3DProjection = lib.Find<new_Matrix3DProjectionDelegate>("new_Matrix3DProjection");
    _delete_Matrix3DProjection = lib.Find<delete_Matrix3DProjectionDelegate>("delete_Matrix3DProjection");
    _Matrix3DProjection_GetProjectionMatrix = lib.Find<Matrix3DProjection_GetProjectionMatrixDelegate>("Matrix3DProjection_GetProjectionMatrix");
    _Matrix3DProjection_SetProjectionMatrix = lib.Find<Matrix3DProjection_SetProjectionMatrixDelegate>("Matrix3DProjection_SetProjectionMatrix");
    _Matrix3DProjection_IsIdentity = lib.Find<Matrix3DProjection_IsIdentityDelegate>("Matrix3DProjection_IsIdentity");
    _Matrix3DProjection_GetProjection = lib.Find<Matrix3DProjection_GetProjectionDelegate>("Matrix3DProjection_GetProjection");
    _Matrix3DProjection_CreateRenderProxy = lib.Find<Matrix3DProjection_CreateRenderProxyDelegate>("Matrix3DProjection_CreateRenderProxy");
    _Matrix3DProjection_UpdateRenderProxy = lib.Find<Matrix3DProjection_UpdateRenderProxyDelegate>("Matrix3DProjection_UpdateRenderProxy");
    _Matrix3DProjection_UnregisterRenderer = lib.Find<Matrix3DProjection_UnregisterRendererDelegate>("Matrix3DProjection_UnregisterRenderer");
    _new_MatrixTransform__SWIG_0 = lib.Find<new_MatrixTransform__SWIG_0Delegate>("new_MatrixTransform__SWIG_0");
    _new_MatrixTransform__SWIG_1 = lib.Find<new_MatrixTransform__SWIG_1Delegate>("new_MatrixTransform__SWIG_1");
    _MatrixTransform_GetMatrix = lib.Find<MatrixTransform_GetMatrixDelegate>("MatrixTransform_GetMatrix");
    _MatrixTransform_SetMatrix = lib.Find<MatrixTransform_SetMatrixDelegate>("MatrixTransform_SetMatrix");
    _MatrixTransform_GetTransform = lib.Find<MatrixTransform_GetTransformDelegate>("MatrixTransform_GetTransform");
    _MatrixTransform_CreateRenderProxy = lib.Find<MatrixTransform_CreateRenderProxyDelegate>("MatrixTransform_CreateRenderProxy");
    _MatrixTransform_UpdateRenderProxy = lib.Find<MatrixTransform_UpdateRenderProxyDelegate>("MatrixTransform_UpdateRenderProxy");
    _MatrixTransform_UnregisterRenderer = lib.Find<MatrixTransform_UnregisterRendererDelegate>("MatrixTransform_UnregisterRenderer");
    _delete_MatrixTransform = lib.Find<delete_MatrixTransformDelegate>("delete_MatrixTransform");
    _new_Menu = lib.Find<new_MenuDelegate>("new_Menu");
    _Menu_GetIsMainMenu = lib.Find<Menu_GetIsMainMenuDelegate>("Menu_GetIsMainMenu");
    _Menu_SetIsMainMenu = lib.Find<Menu_SetIsMainMenuDelegate>("Menu_SetIsMainMenu");
    _Menu_GetActivated = lib.Find<Menu_GetActivatedDelegate>("Menu_GetActivated");
    _Menu_SetActivated = lib.Find<Menu_SetActivatedDelegate>("Menu_SetActivated");
    _delete_Menu = lib.Find<delete_MenuDelegate>("delete_Menu");
    _new_MenuItem = lib.Find<new_MenuItemDelegate>("new_MenuItem");
    _MenuItem_GetCommandParameter = lib.Find<MenuItem_GetCommandParameterDelegate>("MenuItem_GetCommandParameter");
    _MenuItem_SetCommandParameter = lib.Find<MenuItem_SetCommandParameterDelegate>("MenuItem_SetCommandParameter");
    _MenuItem_GetCommand = lib.Find<MenuItem_GetCommandDelegate>("MenuItem_GetCommand");
    _MenuItem_SetCommand = lib.Find<MenuItem_SetCommandDelegate>("MenuItem_SetCommand");
    _MenuItem_GetCommandTarget = lib.Find<MenuItem_GetCommandTargetDelegate>("MenuItem_GetCommandTarget");
    _MenuItem_SetCommandTarget = lib.Find<MenuItem_SetCommandTargetDelegate>("MenuItem_SetCommandTarget");
    _MenuItem_GetIcon = lib.Find<MenuItem_GetIconDelegate>("MenuItem_GetIcon");
    _MenuItem_SetIcon = lib.Find<MenuItem_SetIconDelegate>("MenuItem_SetIcon");
    _MenuItem_GetInputGestureText = lib.Find<MenuItem_GetInputGestureTextDelegate>("MenuItem_GetInputGestureText");
    _MenuItem_SetInputGestureText = lib.Find<MenuItem_SetInputGestureTextDelegate>("MenuItem_SetInputGestureText");
    _MenuItem_GetIsCheckable = lib.Find<MenuItem_GetIsCheckableDelegate>("MenuItem_GetIsCheckable");
    _MenuItem_SetIsCheckable = lib.Find<MenuItem_SetIsCheckableDelegate>("MenuItem_SetIsCheckable");
    _MenuItem_GetIsChecked = lib.Find<MenuItem_GetIsCheckedDelegate>("MenuItem_GetIsChecked");
    _MenuItem_SetIsChecked = lib.Find<MenuItem_SetIsCheckedDelegate>("MenuItem_SetIsChecked");
    _MenuItem_GetIsHighlighted = lib.Find<MenuItem_GetIsHighlightedDelegate>("MenuItem_GetIsHighlighted");
    _MenuItem_GetIsPressed = lib.Find<MenuItem_GetIsPressedDelegate>("MenuItem_GetIsPressed");
    _MenuItem_GetIsSubmenuOpen = lib.Find<MenuItem_GetIsSubmenuOpenDelegate>("MenuItem_GetIsSubmenuOpen");
    _MenuItem_SetIsSubmenuOpen = lib.Find<MenuItem_SetIsSubmenuOpenDelegate>("MenuItem_SetIsSubmenuOpen");
    _MenuItem_GetIsSuspendingPopupAnimation = lib.Find<MenuItem_GetIsSuspendingPopupAnimationDelegate>("MenuItem_GetIsSuspendingPopupAnimation");
    _MenuItem_GetRole = lib.Find<MenuItem_GetRoleDelegate>("MenuItem_GetRole");
    _MenuItem_GetStaysOpenOnClick = lib.Find<MenuItem_GetStaysOpenOnClickDelegate>("MenuItem_GetStaysOpenOnClick");
    _MenuItem_SetStaysOpenOnClick = lib.Find<MenuItem_SetStaysOpenOnClickDelegate>("MenuItem_SetStaysOpenOnClick");
    _MenuItem_SeparatorStyleKey_set = lib.Find<MenuItem_SeparatorStyleKey_setDelegate>("MenuItem_SeparatorStyleKey_set");
    _MenuItem_SeparatorStyleKey_get = lib.Find<MenuItem_SeparatorStyleKey_getDelegate>("MenuItem_SeparatorStyleKey_get");
    _delete_MenuItem = lib.Find<delete_MenuItemDelegate>("delete_MenuItem");
    _UserControl_GetSource = lib.Find<UserControl_GetSourceDelegate>("UserControl_GetSource");
    _new_UserControl = lib.Find<new_UserControlDelegate>("new_UserControl");
    _delete_UserControl = lib.Find<delete_UserControlDelegate>("delete_UserControl");
    _new_MessageDialog = lib.Find<new_MessageDialogDelegate>("new_MessageDialog");
    _delete_MessageDialog = lib.Find<delete_MessageDialogDelegate>("delete_MessageDialog");
    _MessageDialog_GetMessage = lib.Find<MessageDialog_GetMessageDelegate>("MessageDialog_GetMessage");
    _MessageDialog_SetMessage = lib.Find<MessageDialog_SetMessageDelegate>("MessageDialog_SetMessage");
    _MessageDialog_GetCaption = lib.Find<MessageDialog_GetCaptionDelegate>("MessageDialog_GetCaption");
    _MessageDialog_SetCaption = lib.Find<MessageDialog_SetCaptionDelegate>("MessageDialog_SetCaption");
    _MessageDialog_GetButtons = lib.Find<MessageDialog_GetButtonsDelegate>("MessageDialog_GetButtons");
    _MessageDialog_SetButtons = lib.Find<MessageDialog_SetButtonsDelegate>("MessageDialog_SetButtons");
    _MessageDialog_GetImage = lib.Find<MessageDialog_GetImageDelegate>("MessageDialog_GetImage");
    _MessageDialog_SetImage = lib.Find<MessageDialog_SetImageDelegate>("MessageDialog_SetImage");
    _MessageDialog_Show__SWIG_0 = lib.Find<MessageDialog_Show__SWIG_0Delegate>("MessageDialog_Show__SWIG_0");
    _MessageDialog_Show__SWIG_1 = lib.Find<MessageDialog_Show__SWIG_1Delegate>("MessageDialog_Show__SWIG_1");
    _MessageDialog_Show__SWIG_2 = lib.Find<MessageDialog_Show__SWIG_2Delegate>("MessageDialog_Show__SWIG_2");
    _MessageDialog_Show__SWIG_3 = lib.Find<MessageDialog_Show__SWIG_3Delegate>("MessageDialog_Show__SWIG_3");
    _MessageDialog_Show__SWIG_4 = lib.Find<MessageDialog_Show__SWIG_4Delegate>("MessageDialog_Show__SWIG_4");
    _new_Mouse = lib.Find<new_MouseDelegate>("new_Mouse");
    _delete_Mouse = lib.Find<delete_MouseDelegate>("delete_Mouse");
    _Mouse_ResetState = lib.Find<Mouse_ResetStateDelegate>("Mouse_ResetState");
    _Mouse_GetPosition = lib.Find<Mouse_GetPositionDelegate>("Mouse_GetPosition");
    _Mouse_GetButtonState = lib.Find<Mouse_GetButtonStateDelegate>("Mouse_GetButtonState");
    _Mouse_Capture__SWIG_0 = lib.Find<Mouse_Capture__SWIG_0Delegate>("Mouse_Capture__SWIG_0");
    _Mouse_Capture__SWIG_1 = lib.Find<Mouse_Capture__SWIG_1Delegate>("Mouse_Capture__SWIG_1");
    _Mouse_GetCaptured = lib.Find<Mouse_GetCapturedDelegate>("Mouse_GetCaptured");
    _Mouse_DirectlyOverChanged = lib.Find<Mouse_DirectlyOverChangedDelegate>("Mouse_DirectlyOverChanged");
    _new_MultiTrigger = lib.Find<new_MultiTriggerDelegate>("new_MultiTrigger");
    _delete_MultiTrigger = lib.Find<delete_MultiTriggerDelegate>("delete_MultiTrigger");
    _MultiTrigger_GetConditions = lib.Find<MultiTrigger_GetConditionsDelegate>("MultiTrigger_GetConditions");
    _MultiTrigger_GetSetters = lib.Find<MultiTrigger_GetSettersDelegate>("MultiTrigger_GetSetters");
    _MultiTrigger_FindSetter = lib.Find<MultiTrigger_FindSetterDelegate>("MultiTrigger_FindSetter");
    _MultiTrigger_HasCondition = lib.Find<MultiTrigger_HasConditionDelegate>("MultiTrigger_HasCondition");
    _MultiTrigger_RegisterSources = lib.Find<MultiTrigger_RegisterSourcesDelegate>("MultiTrigger_RegisterSources");
    _MultiTrigger_UnregisterSources = lib.Find<MultiTrigger_UnregisterSourcesDelegate>("MultiTrigger_UnregisterSources");
    _MultiTrigger_RegisterEvents = lib.Find<MultiTrigger_RegisterEventsDelegate>("MultiTrigger_RegisterEvents");
    _MultiTrigger_UnregisterEvents = lib.Find<MultiTrigger_UnregisterEventsDelegate>("MultiTrigger_UnregisterEvents");
    _MultiTrigger_Check = lib.Find<MultiTrigger_CheckDelegate>("MultiTrigger_Check");
    _MultiTrigger_FindValue = lib.Find<MultiTrigger_FindValueDelegate>("MultiTrigger_FindValue");
    _MultiTrigger_Invalidate__SWIG_0 = lib.Find<MultiTrigger_Invalidate__SWIG_0Delegate>("MultiTrigger_Invalidate__SWIG_0");
    _MultiTrigger_Invalidate__SWIG_1 = lib.Find<MultiTrigger_Invalidate__SWIG_1Delegate>("MultiTrigger_Invalidate__SWIG_1");
    _new_NameScope = lib.Find<new_NameScopeDelegate>("new_NameScope");
    _delete_NameScope = lib.Find<delete_NameScopeDelegate>("delete_NameScope");
    _NameScope_GetNameScope = lib.Find<NameScope_GetNameScopeDelegate>("NameScope_GetNameScope");
    _NameScope_SetNameScope = lib.Find<NameScope_SetNameScopeDelegate>("NameScope_SetNameScope");
    _NameScope_FindObject = lib.Find<NameScope_FindObjectDelegate>("NameScope_FindObject");
    _NameScope_EnumNamedObjects__SWIG_0 = lib.Find<NameScope_EnumNamedObjects__SWIG_0Delegate>("NameScope_EnumNamedObjects__SWIG_0");
    _NameScope_EnumNamedObjects__SWIG_1 = lib.Find<NameScope_EnumNamedObjects__SWIG_1Delegate>("NameScope_EnumNamedObjects__SWIG_1");
    _NameScope_FindName = lib.Find<NameScope_FindNameDelegate>("NameScope_FindName");
    _NameScope_RegisterName = lib.Find<NameScope_RegisterNameDelegate>("NameScope_RegisterName");
    _NameScope_UnregisterName = lib.Find<NameScope_UnregisterNameDelegate>("NameScope_UnregisterName");
    _NameScope_UpdateName = lib.Find<NameScope_UpdateNameDelegate>("NameScope_UpdateName");
    _NameScope_NameScopeChanged = lib.Find<NameScope_NameScopeChangedDelegate>("NameScope_NameScopeChanged");
    _NameScope_NameScopeDestroyed = lib.Find<NameScope_NameScopeDestroyedDelegate>("NameScope_NameScopeDestroyed");
    _NameScope_EnumObjects = lib.Find<NameScope_EnumObjectsDelegate>("NameScope_EnumObjects");
    _new_Page = lib.Find<new_PageDelegate>("new_Page");
    _delete_Page = lib.Find<delete_PageDelegate>("delete_Page");
    _Page_GetIcon = lib.Find<Page_GetIconDelegate>("Page_GetIcon");
    _Page_SetIcon = lib.Find<Page_SetIconDelegate>("Page_SetIcon");
    _Page_GetTitle = lib.Find<Page_GetTitleDelegate>("Page_GetTitle");
    _Page_SetTitle = lib.Find<Page_SetTitleDelegate>("Page_SetTitle");
    _new_PasswordBox = lib.Find<new_PasswordBoxDelegate>("new_PasswordBox");
    _PasswordBox_GetMaxLength = lib.Find<PasswordBox_GetMaxLengthDelegate>("PasswordBox_GetMaxLength");
    _PasswordBox_SetMaxLength = lib.Find<PasswordBox_SetMaxLengthDelegate>("PasswordBox_SetMaxLength");
    _PasswordBox_GetPasswordChar = lib.Find<PasswordBox_GetPasswordCharDelegate>("PasswordBox_GetPasswordChar");
    _PasswordBox_SetPasswordChar = lib.Find<PasswordBox_SetPasswordCharDelegate>("PasswordBox_SetPasswordChar");
    _PasswordBox_GetPassword = lib.Find<PasswordBox_GetPasswordDelegate>("PasswordBox_GetPassword");
    _PasswordBox_SetPassword = lib.Find<PasswordBox_SetPasswordDelegate>("PasswordBox_SetPassword");
    _delete_PasswordBox = lib.Find<delete_PasswordBoxDelegate>("delete_PasswordBox");
    _new_Path = lib.Find<new_PathDelegate>("new_Path");
    _delete_Path = lib.Find<delete_PathDelegate>("delete_Path");
    _Path_GetData = lib.Find<Path_GetDataDelegate>("Path_GetData");
    _Path_SetData = lib.Find<Path_SetDataDelegate>("Path_SetData");
    _new_Pen = lib.Find<new_PenDelegate>("new_Pen");
    _delete_Pen = lib.Find<delete_PenDelegate>("delete_Pen");
    _Pen_GetBrush = lib.Find<Pen_GetBrushDelegate>("Pen_GetBrush");
    _Pen_SetBrush = lib.Find<Pen_SetBrushDelegate>("Pen_SetBrush");
    _Pen_GetDashCap = lib.Find<Pen_GetDashCapDelegate>("Pen_GetDashCap");
    _Pen_SetDashCap = lib.Find<Pen_SetDashCapDelegate>("Pen_SetDashCap");
    _Pen_GetDashStyle = lib.Find<Pen_GetDashStyleDelegate>("Pen_GetDashStyle");
    _Pen_SetDashStyle = lib.Find<Pen_SetDashStyleDelegate>("Pen_SetDashStyle");
    _Pen_GetEndLineCap = lib.Find<Pen_GetEndLineCapDelegate>("Pen_GetEndLineCap");
    _Pen_SetEndLineCap = lib.Find<Pen_SetEndLineCapDelegate>("Pen_SetEndLineCap");
    _Pen_GetLineJoin = lib.Find<Pen_GetLineJoinDelegate>("Pen_GetLineJoin");
    _Pen_SetLineJoin = lib.Find<Pen_SetLineJoinDelegate>("Pen_SetLineJoin");
    _Pen_GetMiterLimit = lib.Find<Pen_GetMiterLimitDelegate>("Pen_GetMiterLimit");
    _Pen_SetMiterLimit = lib.Find<Pen_SetMiterLimitDelegate>("Pen_SetMiterLimit");
    _Pen_GetStartLineCap = lib.Find<Pen_GetStartLineCapDelegate>("Pen_GetStartLineCap");
    _Pen_SetStartLineCap = lib.Find<Pen_SetStartLineCapDelegate>("Pen_SetStartLineCap");
    _Pen_GetThickness = lib.Find<Pen_GetThicknessDelegate>("Pen_GetThickness");
    _Pen_SetThickness = lib.Find<Pen_SetThicknessDelegate>("Pen_SetThickness");
    _Pen_IsRenderable = lib.Find<Pen_IsRenderableDelegate>("Pen_IsRenderable");
    _Pen_CreateRenderProxy = lib.Find<Pen_CreateRenderProxyDelegate>("Pen_CreateRenderProxy");
    _Pen_UpdateRenderProxy = lib.Find<Pen_UpdateRenderProxyDelegate>("Pen_UpdateRenderProxy");
    _Pen_UnregisterRenderer = lib.Find<Pen_UnregisterRendererDelegate>("Pen_UnregisterRenderer");
    _new_PlaneProjection = lib.Find<new_PlaneProjectionDelegate>("new_PlaneProjection");
    _delete_PlaneProjection = lib.Find<delete_PlaneProjectionDelegate>("delete_PlaneProjection");
    _PlaneProjection_ConstructProjectionMatrix = lib.Find<PlaneProjection_ConstructProjectionMatrixDelegate>("PlaneProjection_ConstructProjectionMatrix");
    _PlaneProjection_GetCenterOfRotationX = lib.Find<PlaneProjection_GetCenterOfRotationXDelegate>("PlaneProjection_GetCenterOfRotationX");
    _PlaneProjection_SetCenterOfRotationX = lib.Find<PlaneProjection_SetCenterOfRotationXDelegate>("PlaneProjection_SetCenterOfRotationX");
    _PlaneProjection_GetCenterOfRotationY = lib.Find<PlaneProjection_GetCenterOfRotationYDelegate>("PlaneProjection_GetCenterOfRotationY");
    _PlaneProjection_SetCenterOfRotationY = lib.Find<PlaneProjection_SetCenterOfRotationYDelegate>("PlaneProjection_SetCenterOfRotationY");
    _PlaneProjection_GetCenterOfRotationZ = lib.Find<PlaneProjection_GetCenterOfRotationZDelegate>("PlaneProjection_GetCenterOfRotationZ");
    _PlaneProjection_SetCenterOfRotationZ = lib.Find<PlaneProjection_SetCenterOfRotationZDelegate>("PlaneProjection_SetCenterOfRotationZ");
    _PlaneProjection_GetGlobalOffsetX = lib.Find<PlaneProjection_GetGlobalOffsetXDelegate>("PlaneProjection_GetGlobalOffsetX");
    _PlaneProjection_SetGlobalOffsetX = lib.Find<PlaneProjection_SetGlobalOffsetXDelegate>("PlaneProjection_SetGlobalOffsetX");
    _PlaneProjection_GetGlobalOffsetY = lib.Find<PlaneProjection_GetGlobalOffsetYDelegate>("PlaneProjection_GetGlobalOffsetY");
    _PlaneProjection_SetGlobalOffsetY = lib.Find<PlaneProjection_SetGlobalOffsetYDelegate>("PlaneProjection_SetGlobalOffsetY");
    _PlaneProjection_GetGlobalOffsetZ = lib.Find<PlaneProjection_GetGlobalOffsetZDelegate>("PlaneProjection_GetGlobalOffsetZ");
    _PlaneProjection_SetGlobalOffsetZ = lib.Find<PlaneProjection_SetGlobalOffsetZDelegate>("PlaneProjection_SetGlobalOffsetZ");
    _PlaneProjection_GetLocalOffsetX = lib.Find<PlaneProjection_GetLocalOffsetXDelegate>("PlaneProjection_GetLocalOffsetX");
    _PlaneProjection_SetLocalOffsetX = lib.Find<PlaneProjection_SetLocalOffsetXDelegate>("PlaneProjection_SetLocalOffsetX");
    _PlaneProjection_GetLocalOffsetY = lib.Find<PlaneProjection_GetLocalOffsetYDelegate>("PlaneProjection_GetLocalOffsetY");
    _PlaneProjection_SetLocalOffsetY = lib.Find<PlaneProjection_SetLocalOffsetYDelegate>("PlaneProjection_SetLocalOffsetY");
    _PlaneProjection_GetLocalOffsetZ = lib.Find<PlaneProjection_GetLocalOffsetZDelegate>("PlaneProjection_GetLocalOffsetZ");
    _PlaneProjection_SetLocalOffsetZ = lib.Find<PlaneProjection_SetLocalOffsetZDelegate>("PlaneProjection_SetLocalOffsetZ");
    _PlaneProjection_GetProjectionMatrix = lib.Find<PlaneProjection_GetProjectionMatrixDelegate>("PlaneProjection_GetProjectionMatrix");
    _PlaneProjection_GetRotationX = lib.Find<PlaneProjection_GetRotationXDelegate>("PlaneProjection_GetRotationX");
    _PlaneProjection_SetRotationX = lib.Find<PlaneProjection_SetRotationXDelegate>("PlaneProjection_SetRotationX");
    _PlaneProjection_GetRotationY = lib.Find<PlaneProjection_GetRotationYDelegate>("PlaneProjection_GetRotationY");
    _PlaneProjection_SetRotationY = lib.Find<PlaneProjection_SetRotationYDelegate>("PlaneProjection_SetRotationY");
    _PlaneProjection_GetRotationZ = lib.Find<PlaneProjection_GetRotationZDelegate>("PlaneProjection_GetRotationZ");
    _PlaneProjection_SetRotationZ = lib.Find<PlaneProjection_SetRotationZDelegate>("PlaneProjection_SetRotationZ");
    _PlaneProjection_IsIdentity = lib.Find<PlaneProjection_IsIdentityDelegate>("PlaneProjection_IsIdentity");
    _PlaneProjection_GetProjection = lib.Find<PlaneProjection_GetProjectionDelegate>("PlaneProjection_GetProjection");
    _PlaneProjection_CreateRenderProxy = lib.Find<PlaneProjection_CreateRenderProxyDelegate>("PlaneProjection_CreateRenderProxy");
    _PlaneProjection_UpdateRenderProxy = lib.Find<PlaneProjection_UpdateRenderProxyDelegate>("PlaneProjection_UpdateRenderProxy");
    _PlaneProjection_UnregisterRenderer = lib.Find<PlaneProjection_UnregisterRendererDelegate>("PlaneProjection_UnregisterRenderer");
    _new_CustomPopupPlacementCallback = lib.Find<new_CustomPopupPlacementCallbackDelegate>("new_CustomPopupPlacementCallback");
    _delete_CustomPopupPlacementCallback = lib.Find<delete_CustomPopupPlacementCallbackDelegate>("delete_CustomPopupPlacementCallback");
    _new_Popup = lib.Find<new_PopupDelegate>("new_Popup");
    _delete_Popup = lib.Find<delete_PopupDelegate>("delete_Popup");
    _Popup_GetAllowsTransparency = lib.Find<Popup_GetAllowsTransparencyDelegate>("Popup_GetAllowsTransparency");
    _Popup_SetAllowsTransparency = lib.Find<Popup_SetAllowsTransparencyDelegate>("Popup_SetAllowsTransparency");
    _Popup_GetChild = lib.Find<Popup_GetChildDelegate>("Popup_GetChild");
    _Popup_SetChild = lib.Find<Popup_SetChildDelegate>("Popup_SetChild");
    _Popup_GetHasDropShadow = lib.Find<Popup_GetHasDropShadowDelegate>("Popup_GetHasDropShadow");
    _Popup_SetHasDropShadow = lib.Find<Popup_SetHasDropShadowDelegate>("Popup_SetHasDropShadow");
    _Popup_GetHorizontalOffset = lib.Find<Popup_GetHorizontalOffsetDelegate>("Popup_GetHorizontalOffset");
    _Popup_SetHorizontalOffset = lib.Find<Popup_SetHorizontalOffsetDelegate>("Popup_SetHorizontalOffset");
    _Popup_GetIsOpen = lib.Find<Popup_GetIsOpenDelegate>("Popup_GetIsOpen");
    _Popup_SetIsOpen = lib.Find<Popup_SetIsOpenDelegate>("Popup_SetIsOpen");
    _Popup_GetPlacement = lib.Find<Popup_GetPlacementDelegate>("Popup_GetPlacement");
    _Popup_SetPlacement = lib.Find<Popup_SetPlacementDelegate>("Popup_SetPlacement");
    _Popup_GetPlacementRectangle = lib.Find<Popup_GetPlacementRectangleDelegate>("Popup_GetPlacementRectangle");
    _Popup_SetPlacementRectangle = lib.Find<Popup_SetPlacementRectangleDelegate>("Popup_SetPlacementRectangle");
    _Popup_GetPlacementTarget = lib.Find<Popup_GetPlacementTargetDelegate>("Popup_GetPlacementTarget");
    _Popup_SetPlacementTarget = lib.Find<Popup_SetPlacementTargetDelegate>("Popup_SetPlacementTarget");
    _Popup_GetPopupAnimation = lib.Find<Popup_GetPopupAnimationDelegate>("Popup_GetPopupAnimation");
    _Popup_SetPopupAnimation = lib.Find<Popup_SetPopupAnimationDelegate>("Popup_SetPopupAnimation");
    _Popup_GetStaysOpen = lib.Find<Popup_GetStaysOpenDelegate>("Popup_GetStaysOpen");
    _Popup_SetStaysOpen = lib.Find<Popup_SetStaysOpenDelegate>("Popup_SetStaysOpen");
    _Popup_GetVerticalOffset = lib.Find<Popup_GetVerticalOffsetDelegate>("Popup_GetVerticalOffset");
    _Popup_SetVerticalOffset = lib.Find<Popup_SetVerticalOffsetDelegate>("Popup_SetVerticalOffset");
    _Popup_IsDescendantOf = lib.Find<Popup_IsDescendantOfDelegate>("Popup_IsDescendantOf");
    _Popup_Closed = lib.Find<Popup_ClosedDelegate>("Popup_Closed");
    _Popup_Opened = lib.Find<Popup_OpenedDelegate>("Popup_Opened");
    _delete_RangeBase = lib.Find<delete_RangeBaseDelegate>("delete_RangeBase");
    _RangeBase_GetLargeChange = lib.Find<RangeBase_GetLargeChangeDelegate>("RangeBase_GetLargeChange");
    _RangeBase_SetLargeChange = lib.Find<RangeBase_SetLargeChangeDelegate>("RangeBase_SetLargeChange");
    _RangeBase_GetMaximum = lib.Find<RangeBase_GetMaximumDelegate>("RangeBase_GetMaximum");
    _RangeBase_SetMaximum = lib.Find<RangeBase_SetMaximumDelegate>("RangeBase_SetMaximum");
    _RangeBase_GetMinimum = lib.Find<RangeBase_GetMinimumDelegate>("RangeBase_GetMinimum");
    _RangeBase_SetMinimum = lib.Find<RangeBase_SetMinimumDelegate>("RangeBase_SetMinimum");
    _RangeBase_GetSmallChange = lib.Find<RangeBase_GetSmallChangeDelegate>("RangeBase_GetSmallChange");
    _RangeBase_SetSmallChange = lib.Find<RangeBase_SetSmallChangeDelegate>("RangeBase_SetSmallChange");
    _RangeBase_GetValue = lib.Find<RangeBase_GetValueDelegate>("RangeBase_GetValue");
    _RangeBase_SetValue = lib.Find<RangeBase_SetValueDelegate>("RangeBase_SetValue");
    _new_ProgressBar = lib.Find<new_ProgressBarDelegate>("new_ProgressBar");
    _ProgressBar_GetIsIndeterminate = lib.Find<ProgressBar_GetIsIndeterminateDelegate>("ProgressBar_GetIsIndeterminate");
    _ProgressBar_SetIsIndeterminate = lib.Find<ProgressBar_SetIsIndeterminateDelegate>("ProgressBar_SetIsIndeterminate");
    _ProgressBar_GetOrientation = lib.Find<ProgressBar_GetOrientationDelegate>("ProgressBar_GetOrientation");
    _ProgressBar_SetOrientation = lib.Find<ProgressBar_SetOrientationDelegate>("ProgressBar_SetOrientation");
    _delete_ProgressBar = lib.Find<delete_ProgressBarDelegate>("delete_ProgressBar");
    _new_PathElement__SWIG_0 = lib.Find<new_PathElement__SWIG_0Delegate>("new_PathElement__SWIG_0");
    _new_PathElement__SWIG_1 = lib.Find<new_PathElement__SWIG_1Delegate>("new_PathElement__SWIG_1");
    _delete_PathElement = lib.Find<delete_PathElementDelegate>("delete_PathElement");
    _PathElement_source_set = lib.Find<PathElement_source_setDelegate>("PathElement_source_set");
    _PathElement_source_get = lib.Find<PathElement_source_getDelegate>("PathElement_source_get");
    _PathElement_collection_set = lib.Find<PathElement_collection_setDelegate>("PathElement_collection_set");
    _PathElement_collection_get = lib.Find<PathElement_collection_getDelegate>("PathElement_collection_get");
    _PathElement_property_set = lib.Find<PathElement_property_setDelegate>("PathElement_property_set");
    _PathElement_property_get = lib.Find<PathElement_property_getDelegate>("PathElement_property_get");
    _PathElement_dp_set = lib.Find<PathElement_dp_setDelegate>("PathElement_dp_set");
    _PathElement_dp_get = lib.Find<PathElement_dp_getDelegate>("PathElement_dp_get");
    _PathElement_index_set = lib.Find<PathElement_index_setDelegate>("PathElement_index_set");
    _PathElement_index_get = lib.Find<PathElement_index_getDelegate>("PathElement_index_get");
    _PathElement_key_set = lib.Find<PathElement_key_setDelegate>("PathElement_key_set");
    _PathElement_key_get = lib.Find<PathElement_key_getDelegate>("PathElement_key_get");
    _new_PropertyPath__SWIG_0 = lib.Find<new_PropertyPath__SWIG_0Delegate>("new_PropertyPath__SWIG_0");
    _new_PropertyPath__SWIG_1 = lib.Find<new_PropertyPath__SWIG_1Delegate>("new_PropertyPath__SWIG_1");
    _delete_PropertyPath = lib.Find<delete_PropertyPathDelegate>("delete_PropertyPath");
    _PropertyPath_Parse = lib.Find<PropertyPath_ParseDelegate>("PropertyPath_Parse");
    _PropertyPath_Create = lib.Find<PropertyPath_CreateDelegate>("PropertyPath_Create");
    _PropertyPath_GetPath = lib.Find<PropertyPath_GetPathDelegate>("PropertyPath_GetPath");
    _PropertyPath_SetPath = lib.Find<PropertyPath_SetPathDelegate>("PropertyPath_SetPath");
    _PropertyPath_GetPathElements = lib.Find<PropertyPath_GetPathElementsDelegate>("PropertyPath_GetPathElements");
    _PropertyPath_EnumPathElements__SWIG_0 = lib.Find<PropertyPath_EnumPathElements__SWIG_0Delegate>("PropertyPath_EnumPathElements__SWIG_0");
    _PropertyPath_EnumPathElements__SWIG_1 = lib.Find<PropertyPath_EnumPathElements__SWIG_1Delegate>("PropertyPath_EnumPathElements__SWIG_1");
    _new_RadialGradientBrush = lib.Find<new_RadialGradientBrushDelegate>("new_RadialGradientBrush");
    _RadialGradientBrush_GetCenter = lib.Find<RadialGradientBrush_GetCenterDelegate>("RadialGradientBrush_GetCenter");
    _RadialGradientBrush_SetCenter = lib.Find<RadialGradientBrush_SetCenterDelegate>("RadialGradientBrush_SetCenter");
    _RadialGradientBrush_GetGradientOrigin = lib.Find<RadialGradientBrush_GetGradientOriginDelegate>("RadialGradientBrush_GetGradientOrigin");
    _RadialGradientBrush_SetGradientOrigin = lib.Find<RadialGradientBrush_SetGradientOriginDelegate>("RadialGradientBrush_SetGradientOrigin");
    _RadialGradientBrush_GetRadiusX = lib.Find<RadialGradientBrush_GetRadiusXDelegate>("RadialGradientBrush_GetRadiusX");
    _RadialGradientBrush_SetRadiusX = lib.Find<RadialGradientBrush_SetRadiusXDelegate>("RadialGradientBrush_SetRadiusX");
    _RadialGradientBrush_GetRadiusY = lib.Find<RadialGradientBrush_GetRadiusYDelegate>("RadialGradientBrush_GetRadiusY");
    _RadialGradientBrush_SetRadiusY = lib.Find<RadialGradientBrush_SetRadiusYDelegate>("RadialGradientBrush_SetRadiusY");
    _RadialGradientBrush_CreateRenderProxy = lib.Find<RadialGradientBrush_CreateRenderProxyDelegate>("RadialGradientBrush_CreateRenderProxy");
    _RadialGradientBrush_UpdateRenderProxy = lib.Find<RadialGradientBrush_UpdateRenderProxyDelegate>("RadialGradientBrush_UpdateRenderProxy");
    _delete_RadialGradientBrush = lib.Find<delete_RadialGradientBrushDelegate>("delete_RadialGradientBrush");
    _new_RadioButton = lib.Find<new_RadioButtonDelegate>("new_RadioButton");
    _delete_RadioButton = lib.Find<delete_RadioButtonDelegate>("delete_RadioButton");
    _RadioButton_GetGroupName = lib.Find<RadioButton_GetGroupNameDelegate>("RadioButton_GetGroupName");
    _RadioButton_SetGroupName = lib.Find<RadioButton_SetGroupNameDelegate>("RadioButton_SetGroupName");
    _new_Rectangle = lib.Find<new_RectangleDelegate>("new_Rectangle");
    _delete_Rectangle = lib.Find<delete_RectangleDelegate>("delete_Rectangle");
    _Rectangle_GetRadiusX = lib.Find<Rectangle_GetRadiusXDelegate>("Rectangle_GetRadiusX");
    _Rectangle_SetRadiusX = lib.Find<Rectangle_SetRadiusXDelegate>("Rectangle_SetRadiusX");
    _Rectangle_GetRadiusY = lib.Find<Rectangle_GetRadiusYDelegate>("Rectangle_GetRadiusY");
    _Rectangle_SetRadiusY = lib.Find<Rectangle_SetRadiusYDelegate>("Rectangle_SetRadiusY");
    _new_RectangleGeometry__SWIG_0 = lib.Find<new_RectangleGeometry__SWIG_0Delegate>("new_RectangleGeometry__SWIG_0");
    _new_RectangleGeometry__SWIG_1 = lib.Find<new_RectangleGeometry__SWIG_1Delegate>("new_RectangleGeometry__SWIG_1");
    _new_RectangleGeometry__SWIG_2 = lib.Find<new_RectangleGeometry__SWIG_2Delegate>("new_RectangleGeometry__SWIG_2");
    _new_RectangleGeometry__SWIG_3 = lib.Find<new_RectangleGeometry__SWIG_3Delegate>("new_RectangleGeometry__SWIG_3");
    _RectangleGeometry_GetRadiusX = lib.Find<RectangleGeometry_GetRadiusXDelegate>("RectangleGeometry_GetRadiusX");
    _RectangleGeometry_SetRadiusX = lib.Find<RectangleGeometry_SetRadiusXDelegate>("RectangleGeometry_SetRadiusX");
    _RectangleGeometry_GetRadiusY = lib.Find<RectangleGeometry_GetRadiusYDelegate>("RectangleGeometry_GetRadiusY");
    _RectangleGeometry_SetRadiusY = lib.Find<RectangleGeometry_SetRadiusYDelegate>("RectangleGeometry_SetRadiusY");
    _RectangleGeometry_GetRect = lib.Find<RectangleGeometry_GetRectDelegate>("RectangleGeometry_GetRect");
    _RectangleGeometry_SetRect = lib.Find<RectangleGeometry_SetRectDelegate>("RectangleGeometry_SetRect");
    _RectangleGeometry_IsEmpty = lib.Find<RectangleGeometry_IsEmptyDelegate>("RectangleGeometry_IsEmpty");
    _RectangleGeometry_CreateRenderProxy = lib.Find<RectangleGeometry_CreateRenderProxyDelegate>("RectangleGeometry_CreateRenderProxy");
    _RectangleGeometry_UpdateRenderProxy = lib.Find<RectangleGeometry_UpdateRenderProxyDelegate>("RectangleGeometry_UpdateRenderProxy");
    _delete_RectangleGeometry = lib.Find<delete_RectangleGeometryDelegate>("delete_RectangleGeometry");
    _new_RelativeSource__SWIG_0 = lib.Find<new_RelativeSource__SWIG_0Delegate>("new_RelativeSource__SWIG_0");
    _new_RelativeSource__SWIG_1 = lib.Find<new_RelativeSource__SWIG_1Delegate>("new_RelativeSource__SWIG_1");
    _new_RelativeSource__SWIG_2 = lib.Find<new_RelativeSource__SWIG_2Delegate>("new_RelativeSource__SWIG_2");
    _new_RelativeSource__SWIG_3 = lib.Find<new_RelativeSource__SWIG_3Delegate>("new_RelativeSource__SWIG_3");
    _delete_RelativeSource = lib.Find<delete_RelativeSourceDelegate>("delete_RelativeSource");
    _RelativeSource_GetPreviousData = lib.Find<RelativeSource_GetPreviousDataDelegate>("RelativeSource_GetPreviousData");
    _RelativeSource_GetSelf = lib.Find<RelativeSource_GetSelfDelegate>("RelativeSource_GetSelf");
    _RelativeSource_GetTemplatedParent = lib.Find<RelativeSource_GetTemplatedParentDelegate>("RelativeSource_GetTemplatedParent");
    _RelativeSource_GetMode = lib.Find<RelativeSource_GetModeDelegate>("RelativeSource_GetMode");
    _RelativeSource_SetMode = lib.Find<RelativeSource_SetModeDelegate>("RelativeSource_SetMode");
    _RelativeSource_GetAncestorType = lib.Find<RelativeSource_GetAncestorTypeDelegate>("RelativeSource_GetAncestorType");
    _RelativeSource_SetAncestorType = lib.Find<RelativeSource_SetAncestorTypeDelegate>("RelativeSource_SetAncestorType");
    _RelativeSource_GetAncestorLevel = lib.Find<RelativeSource_GetAncestorLevelDelegate>("RelativeSource_GetAncestorLevel");
    _RelativeSource_SetAncestorLevel = lib.Find<RelativeSource_SetAncestorLevelDelegate>("RelativeSource_SetAncestorLevel");
    _RelativeSource_ProvideValue = lib.Find<RelativeSource_ProvideValueDelegate>("RelativeSource_ProvideValue");
    _new_RepeatButton = lib.Find<new_RepeatButtonDelegate>("new_RepeatButton");
    _delete_RepeatButton = lib.Find<delete_RepeatButtonDelegate>("delete_RepeatButton");
    _RepeatButton_GetDelay = lib.Find<RepeatButton_GetDelayDelegate>("RepeatButton_GetDelay");
    _RepeatButton_SetDelay = lib.Find<RepeatButton_SetDelayDelegate>("RepeatButton_SetDelay");
    _RepeatButton_GetInterval = lib.Find<RepeatButton_GetIntervalDelegate>("RepeatButton_GetInterval");
    _RepeatButton_SetInterval = lib.Find<RepeatButton_SetIntervalDelegate>("RepeatButton_SetInterval");
    _new_RotateTransform = lib.Find<new_RotateTransformDelegate>("new_RotateTransform");
    _RotateTransform_GetAngle = lib.Find<RotateTransform_GetAngleDelegate>("RotateTransform_GetAngle");
    _RotateTransform_SetAngle = lib.Find<RotateTransform_SetAngleDelegate>("RotateTransform_SetAngle");
    _RotateTransform_GetCenterX = lib.Find<RotateTransform_GetCenterXDelegate>("RotateTransform_GetCenterX");
    _RotateTransform_SetCenterX = lib.Find<RotateTransform_SetCenterXDelegate>("RotateTransform_SetCenterX");
    _RotateTransform_GetCenterY = lib.Find<RotateTransform_GetCenterYDelegate>("RotateTransform_GetCenterY");
    _RotateTransform_SetCenterY = lib.Find<RotateTransform_SetCenterYDelegate>("RotateTransform_SetCenterY");
    _RotateTransform_GetTransform = lib.Find<RotateTransform_GetTransformDelegate>("RotateTransform_GetTransform");
    _RotateTransform_CreateRenderProxy = lib.Find<RotateTransform_CreateRenderProxyDelegate>("RotateTransform_CreateRenderProxy");
    _RotateTransform_UpdateRenderProxy = lib.Find<RotateTransform_UpdateRenderProxyDelegate>("RotateTransform_UpdateRenderProxy");
    _RotateTransform_UnregisterRenderer = lib.Find<RotateTransform_UnregisterRendererDelegate>("RotateTransform_UnregisterRenderer");
    _delete_RotateTransform = lib.Find<delete_RotateTransformDelegate>("delete_RotateTransform");
    _new_RoutedCommand = lib.Find<new_RoutedCommandDelegate>("new_RoutedCommand");
    _delete_RoutedCommand = lib.Find<delete_RoutedCommandDelegate>("delete_RoutedCommand");
    _RoutedCommand_Create__SWIG_0 = lib.Find<RoutedCommand_Create__SWIG_0Delegate>("RoutedCommand_Create__SWIG_0");
    _RoutedCommand_Create__SWIG_1 = lib.Find<RoutedCommand_Create__SWIG_1Delegate>("RoutedCommand_Create__SWIG_1");
    _RoutedCommand_Create__SWIG_2 = lib.Find<RoutedCommand_Create__SWIG_2Delegate>("RoutedCommand_Create__SWIG_2");
    _RoutedCommand_GetInputGestures = lib.Find<RoutedCommand_GetInputGesturesDelegate>("RoutedCommand_GetInputGestures");
    _RoutedCommand_CanExecute__SWIG_0 = lib.Find<RoutedCommand_CanExecute__SWIG_0Delegate>("RoutedCommand_CanExecute__SWIG_0");
    _RoutedCommand_Execute__SWIG_0 = lib.Find<RoutedCommand_Execute__SWIG_0Delegate>("RoutedCommand_Execute__SWIG_0");
    _RoutedCommand_CanExecute__SWIG_1 = lib.Find<RoutedCommand_CanExecute__SWIG_1Delegate>("RoutedCommand_CanExecute__SWIG_1");
    _RoutedCommand_Execute__SWIG_1 = lib.Find<RoutedCommand_Execute__SWIG_1Delegate>("RoutedCommand_Execute__SWIG_1");
    _new_RoutedUICommand = lib.Find<new_RoutedUICommandDelegate>("new_RoutedUICommand");
    _delete_RoutedUICommand = lib.Find<delete_RoutedUICommandDelegate>("delete_RoutedUICommand");
    _RoutedUICommand_Create__SWIG_0 = lib.Find<RoutedUICommand_Create__SWIG_0Delegate>("RoutedUICommand_Create__SWIG_0");
    _RoutedUICommand_Create__SWIG_1 = lib.Find<RoutedUICommand_Create__SWIG_1Delegate>("RoutedUICommand_Create__SWIG_1");
    _RoutedUICommand_Create__SWIG_2 = lib.Find<RoutedUICommand_Create__SWIG_2Delegate>("RoutedUICommand_Create__SWIG_2");
    _RoutedUICommand_GetText = lib.Find<RoutedUICommand_GetTextDelegate>("RoutedUICommand_GetText");
    _RoutedUICommand_SetText = lib.Find<RoutedUICommand_SetTextDelegate>("RoutedUICommand_SetText");
    _new_RowDefinition = lib.Find<new_RowDefinitionDelegate>("new_RowDefinition");
    _RowDefinition_GetHeight = lib.Find<RowDefinition_GetHeightDelegate>("RowDefinition_GetHeight");
    _RowDefinition_SetHeight = lib.Find<RowDefinition_SetHeightDelegate>("RowDefinition_SetHeight");
    _RowDefinition_GetMinHeight = lib.Find<RowDefinition_GetMinHeightDelegate>("RowDefinition_GetMinHeight");
    _RowDefinition_SetMinHeight = lib.Find<RowDefinition_SetMinHeightDelegate>("RowDefinition_SetMinHeight");
    _RowDefinition_GetMaxHeight = lib.Find<RowDefinition_GetMaxHeightDelegate>("RowDefinition_GetMaxHeight");
    _RowDefinition_SetMaxHeight = lib.Find<RowDefinition_SetMaxHeightDelegate>("RowDefinition_SetMaxHeight");
    _delete_RowDefinition = lib.Find<delete_RowDefinitionDelegate>("delete_RowDefinition");
    _new_ScaleTransform__SWIG_0 = lib.Find<new_ScaleTransform__SWIG_0Delegate>("new_ScaleTransform__SWIG_0");
    _new_ScaleTransform__SWIG_1 = lib.Find<new_ScaleTransform__SWIG_1Delegate>("new_ScaleTransform__SWIG_1");
    _ScaleTransform_GetScaleX = lib.Find<ScaleTransform_GetScaleXDelegate>("ScaleTransform_GetScaleX");
    _ScaleTransform_SetScaleX = lib.Find<ScaleTransform_SetScaleXDelegate>("ScaleTransform_SetScaleX");
    _ScaleTransform_GetScaleY = lib.Find<ScaleTransform_GetScaleYDelegate>("ScaleTransform_GetScaleY");
    _ScaleTransform_SetScaleY = lib.Find<ScaleTransform_SetScaleYDelegate>("ScaleTransform_SetScaleY");
    _ScaleTransform_GetCenterX = lib.Find<ScaleTransform_GetCenterXDelegate>("ScaleTransform_GetCenterX");
    _ScaleTransform_SetCenterX = lib.Find<ScaleTransform_SetCenterXDelegate>("ScaleTransform_SetCenterX");
    _ScaleTransform_GetCenterY = lib.Find<ScaleTransform_GetCenterYDelegate>("ScaleTransform_GetCenterY");
    _ScaleTransform_SetCenterY = lib.Find<ScaleTransform_SetCenterYDelegate>("ScaleTransform_SetCenterY");
    _ScaleTransform_GetTransform = lib.Find<ScaleTransform_GetTransformDelegate>("ScaleTransform_GetTransform");
    _ScaleTransform_CreateRenderProxy = lib.Find<ScaleTransform_CreateRenderProxyDelegate>("ScaleTransform_CreateRenderProxy");
    _ScaleTransform_UpdateRenderProxy = lib.Find<ScaleTransform_UpdateRenderProxyDelegate>("ScaleTransform_UpdateRenderProxy");
    _ScaleTransform_UnregisterRenderer = lib.Find<ScaleTransform_UnregisterRendererDelegate>("ScaleTransform_UnregisterRenderer");
    _delete_ScaleTransform = lib.Find<delete_ScaleTransformDelegate>("delete_ScaleTransform");
    _ScrollEventArgs_newValue_set = lib.Find<ScrollEventArgs_newValue_setDelegate>("ScrollEventArgs_newValue_set");
    _ScrollEventArgs_newValue_get = lib.Find<ScrollEventArgs_newValue_getDelegate>("ScrollEventArgs_newValue_get");
    _ScrollEventArgs_scrollEventType_set = lib.Find<ScrollEventArgs_scrollEventType_setDelegate>("ScrollEventArgs_scrollEventType_set");
    _ScrollEventArgs_scrollEventType_get = lib.Find<ScrollEventArgs_scrollEventType_getDelegate>("ScrollEventArgs_scrollEventType_get");
    _new_ScrollEventArgs = lib.Find<new_ScrollEventArgsDelegate>("new_ScrollEventArgs");
    _delete_ScrollEventArgs = lib.Find<delete_ScrollEventArgsDelegate>("delete_ScrollEventArgs");
    _new_ScrollBar = lib.Find<new_ScrollBarDelegate>("new_ScrollBar");
    _delete_ScrollBar = lib.Find<delete_ScrollBarDelegate>("delete_ScrollBar");
    _ScrollBar_GetOrientation = lib.Find<ScrollBar_GetOrientationDelegate>("ScrollBar_GetOrientation");
    _ScrollBar_SetOrientation = lib.Find<ScrollBar_SetOrientationDelegate>("ScrollBar_SetOrientation");
    _ScrollBar_GetViewportSize = lib.Find<ScrollBar_GetViewportSizeDelegate>("ScrollBar_GetViewportSize");
    _ScrollBar_SetViewportSize = lib.Find<ScrollBar_SetViewportSizeDelegate>("ScrollBar_SetViewportSize");
    _ScrollBar_GetTrack = lib.Find<ScrollBar_GetTrackDelegate>("ScrollBar_GetTrack");
    _ScrollBar_DeferScrollToHorizontalOffsetCommand_set = lib.Find<ScrollBar_DeferScrollToHorizontalOffsetCommand_setDelegate>("ScrollBar_DeferScrollToHorizontalOffsetCommand_set");
    _ScrollBar_DeferScrollToHorizontalOffsetCommand_get = lib.Find<ScrollBar_DeferScrollToHorizontalOffsetCommand_getDelegate>("ScrollBar_DeferScrollToHorizontalOffsetCommand_get");
    _ScrollBar_DeferScrollToVerticalOffsetCommand_set = lib.Find<ScrollBar_DeferScrollToVerticalOffsetCommand_setDelegate>("ScrollBar_DeferScrollToVerticalOffsetCommand_set");
    _ScrollBar_DeferScrollToVerticalOffsetCommand_get = lib.Find<ScrollBar_DeferScrollToVerticalOffsetCommand_getDelegate>("ScrollBar_DeferScrollToVerticalOffsetCommand_get");
    _ScrollBar_LineDownCommand_set = lib.Find<ScrollBar_LineDownCommand_setDelegate>("ScrollBar_LineDownCommand_set");
    _ScrollBar_LineDownCommand_get = lib.Find<ScrollBar_LineDownCommand_getDelegate>("ScrollBar_LineDownCommand_get");
    _ScrollBar_LineLeftCommand_set = lib.Find<ScrollBar_LineLeftCommand_setDelegate>("ScrollBar_LineLeftCommand_set");
    _ScrollBar_LineLeftCommand_get = lib.Find<ScrollBar_LineLeftCommand_getDelegate>("ScrollBar_LineLeftCommand_get");
    _ScrollBar_LineRightCommand_set = lib.Find<ScrollBar_LineRightCommand_setDelegate>("ScrollBar_LineRightCommand_set");
    _ScrollBar_LineRightCommand_get = lib.Find<ScrollBar_LineRightCommand_getDelegate>("ScrollBar_LineRightCommand_get");
    _ScrollBar_LineUpCommand_set = lib.Find<ScrollBar_LineUpCommand_setDelegate>("ScrollBar_LineUpCommand_set");
    _ScrollBar_LineUpCommand_get = lib.Find<ScrollBar_LineUpCommand_getDelegate>("ScrollBar_LineUpCommand_get");
    _ScrollBar_PageDownCommand_set = lib.Find<ScrollBar_PageDownCommand_setDelegate>("ScrollBar_PageDownCommand_set");
    _ScrollBar_PageDownCommand_get = lib.Find<ScrollBar_PageDownCommand_getDelegate>("ScrollBar_PageDownCommand_get");
    _ScrollBar_PageLeftCommand_set = lib.Find<ScrollBar_PageLeftCommand_setDelegate>("ScrollBar_PageLeftCommand_set");
    _ScrollBar_PageLeftCommand_get = lib.Find<ScrollBar_PageLeftCommand_getDelegate>("ScrollBar_PageLeftCommand_get");
    _ScrollBar_PageRightCommand_set = lib.Find<ScrollBar_PageRightCommand_setDelegate>("ScrollBar_PageRightCommand_set");
    _ScrollBar_PageRightCommand_get = lib.Find<ScrollBar_PageRightCommand_getDelegate>("ScrollBar_PageRightCommand_get");
    _ScrollBar_PageUpCommand_set = lib.Find<ScrollBar_PageUpCommand_setDelegate>("ScrollBar_PageUpCommand_set");
    _ScrollBar_PageUpCommand_get = lib.Find<ScrollBar_PageUpCommand_getDelegate>("ScrollBar_PageUpCommand_get");
    _ScrollBar_ScrollHereCommand_set = lib.Find<ScrollBar_ScrollHereCommand_setDelegate>("ScrollBar_ScrollHereCommand_set");
    _ScrollBar_ScrollHereCommand_get = lib.Find<ScrollBar_ScrollHereCommand_getDelegate>("ScrollBar_ScrollHereCommand_get");
    _ScrollBar_ScrollToBottomCommand_set = lib.Find<ScrollBar_ScrollToBottomCommand_setDelegate>("ScrollBar_ScrollToBottomCommand_set");
    _ScrollBar_ScrollToBottomCommand_get = lib.Find<ScrollBar_ScrollToBottomCommand_getDelegate>("ScrollBar_ScrollToBottomCommand_get");
    _ScrollBar_ScrollToEndCommand_set = lib.Find<ScrollBar_ScrollToEndCommand_setDelegate>("ScrollBar_ScrollToEndCommand_set");
    _ScrollBar_ScrollToEndCommand_get = lib.Find<ScrollBar_ScrollToEndCommand_getDelegate>("ScrollBar_ScrollToEndCommand_get");
    _ScrollBar_ScrollToHomeCommand_set = lib.Find<ScrollBar_ScrollToHomeCommand_setDelegate>("ScrollBar_ScrollToHomeCommand_set");
    _ScrollBar_ScrollToHomeCommand_get = lib.Find<ScrollBar_ScrollToHomeCommand_getDelegate>("ScrollBar_ScrollToHomeCommand_get");
    _ScrollBar_ScrollToHorizontalOffsetCommand_set = lib.Find<ScrollBar_ScrollToHorizontalOffsetCommand_setDelegate>("ScrollBar_ScrollToHorizontalOffsetCommand_set");
    _ScrollBar_ScrollToHorizontalOffsetCommand_get = lib.Find<ScrollBar_ScrollToHorizontalOffsetCommand_getDelegate>("ScrollBar_ScrollToHorizontalOffsetCommand_get");
    _ScrollBar_ScrollToLeftEndCommand_set = lib.Find<ScrollBar_ScrollToLeftEndCommand_setDelegate>("ScrollBar_ScrollToLeftEndCommand_set");
    _ScrollBar_ScrollToLeftEndCommand_get = lib.Find<ScrollBar_ScrollToLeftEndCommand_getDelegate>("ScrollBar_ScrollToLeftEndCommand_get");
    _ScrollBar_ScrollToRightEndCommand_set = lib.Find<ScrollBar_ScrollToRightEndCommand_setDelegate>("ScrollBar_ScrollToRightEndCommand_set");
    _ScrollBar_ScrollToRightEndCommand_get = lib.Find<ScrollBar_ScrollToRightEndCommand_getDelegate>("ScrollBar_ScrollToRightEndCommand_get");
    _ScrollBar_ScrollToTopCommand_set = lib.Find<ScrollBar_ScrollToTopCommand_setDelegate>("ScrollBar_ScrollToTopCommand_set");
    _ScrollBar_ScrollToTopCommand_get = lib.Find<ScrollBar_ScrollToTopCommand_getDelegate>("ScrollBar_ScrollToTopCommand_get");
    _ScrollBar_ScrollToVerticalOffsetCommand_set = lib.Find<ScrollBar_ScrollToVerticalOffsetCommand_setDelegate>("ScrollBar_ScrollToVerticalOffsetCommand_set");
    _ScrollBar_ScrollToVerticalOffsetCommand_get = lib.Find<ScrollBar_ScrollToVerticalOffsetCommand_getDelegate>("ScrollBar_ScrollToVerticalOffsetCommand_get");
    _new_ScrollContentPresenter = lib.Find<new_ScrollContentPresenterDelegate>("new_ScrollContentPresenter");
    _delete_ScrollContentPresenter = lib.Find<delete_ScrollContentPresenterDelegate>("delete_ScrollContentPresenter");
    _ScrollContentPresenter_GetCanContentScroll = lib.Find<ScrollContentPresenter_GetCanContentScrollDelegate>("ScrollContentPresenter_GetCanContentScroll");
    _ScrollContentPresenter_SetCanContentScroll = lib.Find<ScrollContentPresenter_SetCanContentScrollDelegate>("ScrollContentPresenter_SetCanContentScroll");
    _ScrollContentPresenter_GetCanHorizontallyScroll = lib.Find<ScrollContentPresenter_GetCanHorizontallyScrollDelegate>("ScrollContentPresenter_GetCanHorizontallyScroll");
    _ScrollContentPresenter_SetCanHorizontallyScroll = lib.Find<ScrollContentPresenter_SetCanHorizontallyScrollDelegate>("ScrollContentPresenter_SetCanHorizontallyScroll");
    _ScrollContentPresenter_GetCanVerticallyScroll = lib.Find<ScrollContentPresenter_GetCanVerticallyScrollDelegate>("ScrollContentPresenter_GetCanVerticallyScroll");
    _ScrollContentPresenter_SetCanVerticallyScroll = lib.Find<ScrollContentPresenter_SetCanVerticallyScrollDelegate>("ScrollContentPresenter_SetCanVerticallyScroll");
    _ScrollContentPresenter_GetExtentWidth = lib.Find<ScrollContentPresenter_GetExtentWidthDelegate>("ScrollContentPresenter_GetExtentWidth");
    _ScrollContentPresenter_GetExtentHeight = lib.Find<ScrollContentPresenter_GetExtentHeightDelegate>("ScrollContentPresenter_GetExtentHeight");
    _ScrollContentPresenter_GetViewportWidth = lib.Find<ScrollContentPresenter_GetViewportWidthDelegate>("ScrollContentPresenter_GetViewportWidth");
    _ScrollContentPresenter_GetViewportHeight = lib.Find<ScrollContentPresenter_GetViewportHeightDelegate>("ScrollContentPresenter_GetViewportHeight");
    _ScrollContentPresenter_GetHorizontalOffset = lib.Find<ScrollContentPresenter_GetHorizontalOffsetDelegate>("ScrollContentPresenter_GetHorizontalOffset");
    _ScrollContentPresenter_SetHorizontalOffset = lib.Find<ScrollContentPresenter_SetHorizontalOffsetDelegate>("ScrollContentPresenter_SetHorizontalOffset");
    _ScrollContentPresenter_GetVerticalOffset = lib.Find<ScrollContentPresenter_GetVerticalOffsetDelegate>("ScrollContentPresenter_GetVerticalOffset");
    _ScrollContentPresenter_SetVerticalOffset = lib.Find<ScrollContentPresenter_SetVerticalOffsetDelegate>("ScrollContentPresenter_SetVerticalOffset");
    _ScrollContentPresenter_GetScrollOwner = lib.Find<ScrollContentPresenter_GetScrollOwnerDelegate>("ScrollContentPresenter_GetScrollOwner");
    _ScrollContentPresenter_LineDown = lib.Find<ScrollContentPresenter_LineDownDelegate>("ScrollContentPresenter_LineDown");
    _ScrollContentPresenter_LineLeft = lib.Find<ScrollContentPresenter_LineLeftDelegate>("ScrollContentPresenter_LineLeft");
    _ScrollContentPresenter_LineRight = lib.Find<ScrollContentPresenter_LineRightDelegate>("ScrollContentPresenter_LineRight");
    _ScrollContentPresenter_LineUp = lib.Find<ScrollContentPresenter_LineUpDelegate>("ScrollContentPresenter_LineUp");
    _ScrollContentPresenter_MakeVisible = lib.Find<ScrollContentPresenter_MakeVisibleDelegate>("ScrollContentPresenter_MakeVisible");
    _ScrollContentPresenter_MouseWheelDown = lib.Find<ScrollContentPresenter_MouseWheelDownDelegate>("ScrollContentPresenter_MouseWheelDown");
    _ScrollContentPresenter_MouseWheelLeft = lib.Find<ScrollContentPresenter_MouseWheelLeftDelegate>("ScrollContentPresenter_MouseWheelLeft");
    _ScrollContentPresenter_MouseWheelRight = lib.Find<ScrollContentPresenter_MouseWheelRightDelegate>("ScrollContentPresenter_MouseWheelRight");
    _ScrollContentPresenter_MouseWheelUp = lib.Find<ScrollContentPresenter_MouseWheelUpDelegate>("ScrollContentPresenter_MouseWheelUp");
    _ScrollContentPresenter_PageDown = lib.Find<ScrollContentPresenter_PageDownDelegate>("ScrollContentPresenter_PageDown");
    _ScrollContentPresenter_PageLeft = lib.Find<ScrollContentPresenter_PageLeftDelegate>("ScrollContentPresenter_PageLeft");
    _ScrollContentPresenter_PageRight = lib.Find<ScrollContentPresenter_PageRightDelegate>("ScrollContentPresenter_PageRight");
    _ScrollContentPresenter_PageUp = lib.Find<ScrollContentPresenter_PageUpDelegate>("ScrollContentPresenter_PageUp");
    _ScrollContentPresenter_AddLayer = lib.Find<ScrollContentPresenter_AddLayerDelegate>("ScrollContentPresenter_AddLayer");
    _ScrollContentPresenter_RemoveLayer = lib.Find<ScrollContentPresenter_RemoveLayerDelegate>("ScrollContentPresenter_RemoveLayer");
    _ScrollChangedEventArgs_extentHeight_set = lib.Find<ScrollChangedEventArgs_extentHeight_setDelegate>("ScrollChangedEventArgs_extentHeight_set");
    _ScrollChangedEventArgs_extentHeight_get = lib.Find<ScrollChangedEventArgs_extentHeight_getDelegate>("ScrollChangedEventArgs_extentHeight_get");
    _ScrollChangedEventArgs_extentHeightChange_set = lib.Find<ScrollChangedEventArgs_extentHeightChange_setDelegate>("ScrollChangedEventArgs_extentHeightChange_set");
    _ScrollChangedEventArgs_extentHeightChange_get = lib.Find<ScrollChangedEventArgs_extentHeightChange_getDelegate>("ScrollChangedEventArgs_extentHeightChange_get");
    _ScrollChangedEventArgs_extentWidth_set = lib.Find<ScrollChangedEventArgs_extentWidth_setDelegate>("ScrollChangedEventArgs_extentWidth_set");
    _ScrollChangedEventArgs_extentWidth_get = lib.Find<ScrollChangedEventArgs_extentWidth_getDelegate>("ScrollChangedEventArgs_extentWidth_get");
    _ScrollChangedEventArgs_extentWidthChange_set = lib.Find<ScrollChangedEventArgs_extentWidthChange_setDelegate>("ScrollChangedEventArgs_extentWidthChange_set");
    _ScrollChangedEventArgs_extentWidthChange_get = lib.Find<ScrollChangedEventArgs_extentWidthChange_getDelegate>("ScrollChangedEventArgs_extentWidthChange_get");
    _ScrollChangedEventArgs_horizontalChange_set = lib.Find<ScrollChangedEventArgs_horizontalChange_setDelegate>("ScrollChangedEventArgs_horizontalChange_set");
    _ScrollChangedEventArgs_horizontalChange_get = lib.Find<ScrollChangedEventArgs_horizontalChange_getDelegate>("ScrollChangedEventArgs_horizontalChange_get");
    _ScrollChangedEventArgs_horizontalOffset_set = lib.Find<ScrollChangedEventArgs_horizontalOffset_setDelegate>("ScrollChangedEventArgs_horizontalOffset_set");
    _ScrollChangedEventArgs_horizontalOffset_get = lib.Find<ScrollChangedEventArgs_horizontalOffset_getDelegate>("ScrollChangedEventArgs_horizontalOffset_get");
    _ScrollChangedEventArgs_verticalChange_set = lib.Find<ScrollChangedEventArgs_verticalChange_setDelegate>("ScrollChangedEventArgs_verticalChange_set");
    _ScrollChangedEventArgs_verticalChange_get = lib.Find<ScrollChangedEventArgs_verticalChange_getDelegate>("ScrollChangedEventArgs_verticalChange_get");
    _ScrollChangedEventArgs_verticalOffset_set = lib.Find<ScrollChangedEventArgs_verticalOffset_setDelegate>("ScrollChangedEventArgs_verticalOffset_set");
    _ScrollChangedEventArgs_verticalOffset_get = lib.Find<ScrollChangedEventArgs_verticalOffset_getDelegate>("ScrollChangedEventArgs_verticalOffset_get");
    _ScrollChangedEventArgs_viewportHeight_set = lib.Find<ScrollChangedEventArgs_viewportHeight_setDelegate>("ScrollChangedEventArgs_viewportHeight_set");
    _ScrollChangedEventArgs_viewportHeight_get = lib.Find<ScrollChangedEventArgs_viewportHeight_getDelegate>("ScrollChangedEventArgs_viewportHeight_get");
    _ScrollChangedEventArgs_viewportHeightChange_set = lib.Find<ScrollChangedEventArgs_viewportHeightChange_setDelegate>("ScrollChangedEventArgs_viewportHeightChange_set");
    _ScrollChangedEventArgs_viewportHeightChange_get = lib.Find<ScrollChangedEventArgs_viewportHeightChange_getDelegate>("ScrollChangedEventArgs_viewportHeightChange_get");
    _ScrollChangedEventArgs_viewportWidth_set = lib.Find<ScrollChangedEventArgs_viewportWidth_setDelegate>("ScrollChangedEventArgs_viewportWidth_set");
    _ScrollChangedEventArgs_viewportWidth_get = lib.Find<ScrollChangedEventArgs_viewportWidth_getDelegate>("ScrollChangedEventArgs_viewportWidth_get");
    _ScrollChangedEventArgs_viewportWidthChange_set = lib.Find<ScrollChangedEventArgs_viewportWidthChange_setDelegate>("ScrollChangedEventArgs_viewportWidthChange_set");
    _ScrollChangedEventArgs_viewportWidthChange_get = lib.Find<ScrollChangedEventArgs_viewportWidthChange_getDelegate>("ScrollChangedEventArgs_viewportWidthChange_get");
    _new_ScrollChangedEventArgs = lib.Find<new_ScrollChangedEventArgsDelegate>("new_ScrollChangedEventArgs");
    _delete_ScrollChangedEventArgs = lib.Find<delete_ScrollChangedEventArgsDelegate>("delete_ScrollChangedEventArgs");
    _new_ScrollViewer = lib.Find<new_ScrollViewerDelegate>("new_ScrollViewer");
    _delete_ScrollViewer = lib.Find<delete_ScrollViewerDelegate>("delete_ScrollViewer");
    _ScrollViewer_GetHorizontalScrollBarVisibility = lib.Find<ScrollViewer_GetHorizontalScrollBarVisibilityDelegate>("ScrollViewer_GetHorizontalScrollBarVisibility");
    _ScrollViewer_SetHorizontalScrollBarVisibility = lib.Find<ScrollViewer_SetHorizontalScrollBarVisibilityDelegate>("ScrollViewer_SetHorizontalScrollBarVisibility");
    _ScrollViewer_GetVerticalScrollBarVisibility = lib.Find<ScrollViewer_GetVerticalScrollBarVisibilityDelegate>("ScrollViewer_GetVerticalScrollBarVisibility");
    _ScrollViewer_SetVerticalScrollBarVisibility = lib.Find<ScrollViewer_SetVerticalScrollBarVisibilityDelegate>("ScrollViewer_SetVerticalScrollBarVisibility");
    _ScrollViewer_GetCanContentScroll = lib.Find<ScrollViewer_GetCanContentScrollDelegate>("ScrollViewer_GetCanContentScroll");
    _ScrollViewer_SetCanContentScroll = lib.Find<ScrollViewer_SetCanContentScrollDelegate>("ScrollViewer_SetCanContentScroll");
    _ScrollViewer_GetComputedHorizontalScrollBarVisibility = lib.Find<ScrollViewer_GetComputedHorizontalScrollBarVisibilityDelegate>("ScrollViewer_GetComputedHorizontalScrollBarVisibility");
    _ScrollViewer_GetComputedVerticalScrollBarVisibility = lib.Find<ScrollViewer_GetComputedVerticalScrollBarVisibilityDelegate>("ScrollViewer_GetComputedVerticalScrollBarVisibility");
    _ScrollViewer_GetExtentHeight = lib.Find<ScrollViewer_GetExtentHeightDelegate>("ScrollViewer_GetExtentHeight");
    _ScrollViewer_GetExtentWidth = lib.Find<ScrollViewer_GetExtentWidthDelegate>("ScrollViewer_GetExtentWidth");
    _ScrollViewer_GetHorizontalOffset = lib.Find<ScrollViewer_GetHorizontalOffsetDelegate>("ScrollViewer_GetHorizontalOffset");
    _ScrollViewer_GetScrollableHeight = lib.Find<ScrollViewer_GetScrollableHeightDelegate>("ScrollViewer_GetScrollableHeight");
    _ScrollViewer_GetScrollableWidth = lib.Find<ScrollViewer_GetScrollableWidthDelegate>("ScrollViewer_GetScrollableWidth");
    _ScrollViewer_GetVerticalOffset = lib.Find<ScrollViewer_GetVerticalOffsetDelegate>("ScrollViewer_GetVerticalOffset");
    _ScrollViewer_GetViewportHeight = lib.Find<ScrollViewer_GetViewportHeightDelegate>("ScrollViewer_GetViewportHeight");
    _ScrollViewer_GetViewportWidth = lib.Find<ScrollViewer_GetViewportWidthDelegate>("ScrollViewer_GetViewportWidth");
    _ScrollViewer_GetScrollInfo = lib.Find<ScrollViewer_GetScrollInfoDelegate>("ScrollViewer_GetScrollInfo");
    _ScrollViewer_SetScrollInfo = lib.Find<ScrollViewer_SetScrollInfoDelegate>("ScrollViewer_SetScrollInfo");
    _ScrollViewer_InvalidateScrollInfo = lib.Find<ScrollViewer_InvalidateScrollInfoDelegate>("ScrollViewer_InvalidateScrollInfo");
    _ScrollViewer_ScrollToHorizontalOffset = lib.Find<ScrollViewer_ScrollToHorizontalOffsetDelegate>("ScrollViewer_ScrollToHorizontalOffset");
    _ScrollViewer_ScrollToVerticalOffset = lib.Find<ScrollViewer_ScrollToVerticalOffsetDelegate>("ScrollViewer_ScrollToVerticalOffset");
    _new_Separator = lib.Find<new_SeparatorDelegate>("new_Separator");
    _delete_Separator = lib.Find<delete_SeparatorDelegate>("delete_Separator");
    _new_Setter = lib.Find<new_SetterDelegate>("new_Setter");
    _Setter_GetTargetName = lib.Find<Setter_GetTargetNameDelegate>("Setter_GetTargetName");
    _Setter_SetTargetName = lib.Find<Setter_SetTargetNameDelegate>("Setter_SetTargetName");
    _Setter_GetProperty = lib.Find<Setter_GetPropertyDelegate>("Setter_GetProperty");
    _Setter_SetProperty = lib.Find<Setter_SetPropertyDelegate>("Setter_SetProperty");
    _Setter_GetValue = lib.Find<Setter_GetValueDelegate>("Setter_GetValue");
    _Setter_SetValue = lib.Find<Setter_SetValueDelegate>("Setter_SetValue");
    _delete_Setter = lib.Find<delete_SetterDelegate>("delete_Setter");
    _SizeChangedInfo_newSize_set = lib.Find<SizeChangedInfo_newSize_setDelegate>("SizeChangedInfo_newSize_set");
    _SizeChangedInfo_newSize_get = lib.Find<SizeChangedInfo_newSize_getDelegate>("SizeChangedInfo_newSize_get");
    _SizeChangedInfo_previousSize_set = lib.Find<SizeChangedInfo_previousSize_setDelegate>("SizeChangedInfo_previousSize_set");
    _SizeChangedInfo_previousSize_get = lib.Find<SizeChangedInfo_previousSize_getDelegate>("SizeChangedInfo_previousSize_get");
    _SizeChangedInfo_widthChanged_set = lib.Find<SizeChangedInfo_widthChanged_setDelegate>("SizeChangedInfo_widthChanged_set");
    _SizeChangedInfo_widthChanged_get = lib.Find<SizeChangedInfo_widthChanged_getDelegate>("SizeChangedInfo_widthChanged_get");
    _SizeChangedInfo_heightChanged_set = lib.Find<SizeChangedInfo_heightChanged_setDelegate>("SizeChangedInfo_heightChanged_set");
    _SizeChangedInfo_heightChanged_get = lib.Find<SizeChangedInfo_heightChanged_getDelegate>("SizeChangedInfo_heightChanged_get");
    _new_SizeChangedInfo = lib.Find<new_SizeChangedInfoDelegate>("new_SizeChangedInfo");
    _delete_SizeChangedInfo = lib.Find<delete_SizeChangedInfoDelegate>("delete_SizeChangedInfo");
    _SizeChangedEventArgs_sizeChangedInfo_set = lib.Find<SizeChangedEventArgs_sizeChangedInfo_setDelegate>("SizeChangedEventArgs_sizeChangedInfo_set");
    _SizeChangedEventArgs_sizeChangedInfo_get = lib.Find<SizeChangedEventArgs_sizeChangedInfo_getDelegate>("SizeChangedEventArgs_sizeChangedInfo_get");
    _new_SizeChangedEventArgs = lib.Find<new_SizeChangedEventArgsDelegate>("new_SizeChangedEventArgs");
    _delete_SizeChangedEventArgs = lib.Find<delete_SizeChangedEventArgsDelegate>("delete_SizeChangedEventArgs");
    _new_SkewTransform = lib.Find<new_SkewTransformDelegate>("new_SkewTransform");
    _SkewTransform_GetAngleX = lib.Find<SkewTransform_GetAngleXDelegate>("SkewTransform_GetAngleX");
    _SkewTransform_SetAngleX = lib.Find<SkewTransform_SetAngleXDelegate>("SkewTransform_SetAngleX");
    _SkewTransform_GetAngleY = lib.Find<SkewTransform_GetAngleYDelegate>("SkewTransform_GetAngleY");
    _SkewTransform_SetAngleY = lib.Find<SkewTransform_SetAngleYDelegate>("SkewTransform_SetAngleY");
    _SkewTransform_GetCenterX = lib.Find<SkewTransform_GetCenterXDelegate>("SkewTransform_GetCenterX");
    _SkewTransform_SetCenterX = lib.Find<SkewTransform_SetCenterXDelegate>("SkewTransform_SetCenterX");
    _SkewTransform_GetCenterY = lib.Find<SkewTransform_GetCenterYDelegate>("SkewTransform_GetCenterY");
    _SkewTransform_SetCenterY = lib.Find<SkewTransform_SetCenterYDelegate>("SkewTransform_SetCenterY");
    _SkewTransform_GetTransform = lib.Find<SkewTransform_GetTransformDelegate>("SkewTransform_GetTransform");
    _SkewTransform_CreateRenderProxy = lib.Find<SkewTransform_CreateRenderProxyDelegate>("SkewTransform_CreateRenderProxy");
    _SkewTransform_UpdateRenderProxy = lib.Find<SkewTransform_UpdateRenderProxyDelegate>("SkewTransform_UpdateRenderProxy");
    _SkewTransform_UnregisterRenderer = lib.Find<SkewTransform_UnregisterRendererDelegate>("SkewTransform_UnregisterRenderer");
    _delete_SkewTransform = lib.Find<delete_SkewTransformDelegate>("delete_SkewTransform");
    _new_Slider = lib.Find<new_SliderDelegate>("new_Slider");
    _delete_Slider = lib.Find<delete_SliderDelegate>("delete_Slider");
    _Slider_GetAutoToolTipPlacement = lib.Find<Slider_GetAutoToolTipPlacementDelegate>("Slider_GetAutoToolTipPlacement");
    _Slider_SetAutoToolTipPlacement = lib.Find<Slider_SetAutoToolTipPlacementDelegate>("Slider_SetAutoToolTipPlacement");
    _Slider_GetAutoToolTipPrecision = lib.Find<Slider_GetAutoToolTipPrecisionDelegate>("Slider_GetAutoToolTipPrecision");
    _Slider_SetAutoToolTipPrecision = lib.Find<Slider_SetAutoToolTipPrecisionDelegate>("Slider_SetAutoToolTipPrecision");
    _Slider_GetDelay = lib.Find<Slider_GetDelayDelegate>("Slider_GetDelay");
    _Slider_SetDelay = lib.Find<Slider_SetDelayDelegate>("Slider_SetDelay");
    _Slider_GetInterval = lib.Find<Slider_GetIntervalDelegate>("Slider_GetInterval");
    _Slider_SetInterval = lib.Find<Slider_SetIntervalDelegate>("Slider_SetInterval");
    _Slider_GetIsDirectionReversed = lib.Find<Slider_GetIsDirectionReversedDelegate>("Slider_GetIsDirectionReversed");
    _Slider_SetIsDirectionReversed = lib.Find<Slider_SetIsDirectionReversedDelegate>("Slider_SetIsDirectionReversed");
    _Slider_GetIsMoveToPointEnabled = lib.Find<Slider_GetIsMoveToPointEnabledDelegate>("Slider_GetIsMoveToPointEnabled");
    _Slider_SetIsMoveToPointEnabled = lib.Find<Slider_SetIsMoveToPointEnabledDelegate>("Slider_SetIsMoveToPointEnabled");
    _Slider_GetIsSelectionRangeEnabled = lib.Find<Slider_GetIsSelectionRangeEnabledDelegate>("Slider_GetIsSelectionRangeEnabled");
    _Slider_SetIsSelectionRangeEnabled = lib.Find<Slider_SetIsSelectionRangeEnabledDelegate>("Slider_SetIsSelectionRangeEnabled");
    _Slider_GetIsSnapToTickEnabled = lib.Find<Slider_GetIsSnapToTickEnabledDelegate>("Slider_GetIsSnapToTickEnabled");
    _Slider_SetIsSnapToTickEnabled = lib.Find<Slider_SetIsSnapToTickEnabledDelegate>("Slider_SetIsSnapToTickEnabled");
    _Slider_GetOrientation = lib.Find<Slider_GetOrientationDelegate>("Slider_GetOrientation");
    _Slider_SetOrientation = lib.Find<Slider_SetOrientationDelegate>("Slider_SetOrientation");
    _Slider_GetSelectionEnd = lib.Find<Slider_GetSelectionEndDelegate>("Slider_GetSelectionEnd");
    _Slider_SetSelectionEnd = lib.Find<Slider_SetSelectionEndDelegate>("Slider_SetSelectionEnd");
    _Slider_GetSelectionStart = lib.Find<Slider_GetSelectionStartDelegate>("Slider_GetSelectionStart");
    _Slider_SetSelectionStart = lib.Find<Slider_SetSelectionStartDelegate>("Slider_SetSelectionStart");
    _Slider_GetTickFrequency = lib.Find<Slider_GetTickFrequencyDelegate>("Slider_GetTickFrequency");
    _Slider_SetTickFrequency = lib.Find<Slider_SetTickFrequencyDelegate>("Slider_SetTickFrequency");
    _Slider_GetTickPlacement = lib.Find<Slider_GetTickPlacementDelegate>("Slider_GetTickPlacement");
    _Slider_SetTickPlacement = lib.Find<Slider_SetTickPlacementDelegate>("Slider_SetTickPlacement");
    _Slider_GetTicks = lib.Find<Slider_GetTicksDelegate>("Slider_GetTicks");
    _Slider_SetTicks = lib.Find<Slider_SetTicksDelegate>("Slider_SetTicks");
    _Slider_GetTrack = lib.Find<Slider_GetTrackDelegate>("Slider_GetTrack");
    _Slider_DecreaseLargeCommand_set = lib.Find<Slider_DecreaseLargeCommand_setDelegate>("Slider_DecreaseLargeCommand_set");
    _Slider_DecreaseLargeCommand_get = lib.Find<Slider_DecreaseLargeCommand_getDelegate>("Slider_DecreaseLargeCommand_get");
    _Slider_DecreaseSmallCommand_set = lib.Find<Slider_DecreaseSmallCommand_setDelegate>("Slider_DecreaseSmallCommand_set");
    _Slider_DecreaseSmallCommand_get = lib.Find<Slider_DecreaseSmallCommand_getDelegate>("Slider_DecreaseSmallCommand_get");
    _Slider_IncreaseLargeCommand_set = lib.Find<Slider_IncreaseLargeCommand_setDelegate>("Slider_IncreaseLargeCommand_set");
    _Slider_IncreaseLargeCommand_get = lib.Find<Slider_IncreaseLargeCommand_getDelegate>("Slider_IncreaseLargeCommand_get");
    _Slider_IncreaseSmallCommand_set = lib.Find<Slider_IncreaseSmallCommand_setDelegate>("Slider_IncreaseSmallCommand_set");
    _Slider_IncreaseSmallCommand_get = lib.Find<Slider_IncreaseSmallCommand_getDelegate>("Slider_IncreaseSmallCommand_get");
    _Slider_MaximizeValueCommand_set = lib.Find<Slider_MaximizeValueCommand_setDelegate>("Slider_MaximizeValueCommand_set");
    _Slider_MaximizeValueCommand_get = lib.Find<Slider_MaximizeValueCommand_getDelegate>("Slider_MaximizeValueCommand_get");
    _Slider_MinimizeValueCommand_set = lib.Find<Slider_MinimizeValueCommand_setDelegate>("Slider_MinimizeValueCommand_set");
    _Slider_MinimizeValueCommand_get = lib.Find<Slider_MinimizeValueCommand_getDelegate>("Slider_MinimizeValueCommand_get");
    _new_SolidColorBrush__SWIG_0 = lib.Find<new_SolidColorBrush__SWIG_0Delegate>("new_SolidColorBrush__SWIG_0");
    _new_SolidColorBrush__SWIG_1 = lib.Find<new_SolidColorBrush__SWIG_1Delegate>("new_SolidColorBrush__SWIG_1");
    _SolidColorBrush_GetColor = lib.Find<SolidColorBrush_GetColorDelegate>("SolidColorBrush_GetColor");
    _SolidColorBrush_SetColor = lib.Find<SolidColorBrush_SetColorDelegate>("SolidColorBrush_SetColor");
    _SolidColorBrush_TryParse = lib.Find<SolidColorBrush_TryParseDelegate>("SolidColorBrush_TryParse");
    _SolidColorBrush_CreateRenderProxy = lib.Find<SolidColorBrush_CreateRenderProxyDelegate>("SolidColorBrush_CreateRenderProxy");
    _SolidColorBrush_UpdateRenderProxy = lib.Find<SolidColorBrush_UpdateRenderProxyDelegate>("SolidColorBrush_UpdateRenderProxy");
    _delete_SolidColorBrush = lib.Find<delete_SolidColorBrushDelegate>("delete_SolidColorBrush");
    _SortDescription_direction_set = lib.Find<SortDescription_direction_setDelegate>("SortDescription_direction_set");
    _SortDescription_direction_get = lib.Find<SortDescription_direction_getDelegate>("SortDescription_direction_get");
    _new_SortDescription = lib.Find<new_SortDescriptionDelegate>("new_SortDescription");
    _delete_SortDescription = lib.Find<delete_SortDescriptionDelegate>("delete_SortDescription");
    _new_StackPanel = lib.Find<new_StackPanelDelegate>("new_StackPanel");
    _StackPanel_GetOrientation = lib.Find<StackPanel_GetOrientationDelegate>("StackPanel_GetOrientation");
    _StackPanel_SetOrientation = lib.Find<StackPanel_SetOrientationDelegate>("StackPanel_SetOrientation");
    _delete_StackPanel = lib.Find<delete_StackPanelDelegate>("delete_StackPanel");
    _new_StatusBar = lib.Find<new_StatusBarDelegate>("new_StatusBar");
    _delete_StatusBar = lib.Find<delete_StatusBarDelegate>("delete_StatusBar");
    _StatusBar_SeparatorStyleKey_set = lib.Find<StatusBar_SeparatorStyleKey_setDelegate>("StatusBar_SeparatorStyleKey_set");
    _StatusBar_SeparatorStyleKey_get = lib.Find<StatusBar_SeparatorStyleKey_getDelegate>("StatusBar_SeparatorStyleKey_get");
    _new_StatusBarItem = lib.Find<new_StatusBarItemDelegate>("new_StatusBarItem");
    _delete_StatusBarItem = lib.Find<delete_StatusBarItemDelegate>("delete_StatusBarItem");
    _new_StreamGeometry__SWIG_0 = lib.Find<new_StreamGeometry__SWIG_0Delegate>("new_StreamGeometry__SWIG_0");
    _new_StreamGeometry__SWIG_1 = lib.Find<new_StreamGeometry__SWIG_1Delegate>("new_StreamGeometry__SWIG_1");
    _StreamGeometry_SetData = lib.Find<StreamGeometry_SetDataDelegate>("StreamGeometry_SetData");
    _StreamGeometry_TrySetData = lib.Find<StreamGeometry_TrySetDataDelegate>("StreamGeometry_TrySetData");
    _StreamGeometry_GetData = lib.Find<StreamGeometry_GetDataDelegate>("StreamGeometry_GetData");
    _StreamGeometry_Open__SWIG_0 = lib.Find<StreamGeometry_Open__SWIG_0Delegate>("StreamGeometry_Open__SWIG_0");
    _StreamGeometry_Open__SWIG_1 = lib.Find<StreamGeometry_Open__SWIG_1Delegate>("StreamGeometry_Open__SWIG_1");
    _StreamGeometry_Close = lib.Find<StreamGeometry_CloseDelegate>("StreamGeometry_Close");
    _StreamGeometry_GetFillRule = lib.Find<StreamGeometry_GetFillRuleDelegate>("StreamGeometry_GetFillRule");
    _StreamGeometry_SetFillRule = lib.Find<StreamGeometry_SetFillRuleDelegate>("StreamGeometry_SetFillRule");
    _StreamGeometry_IsEmpty = lib.Find<StreamGeometry_IsEmptyDelegate>("StreamGeometry_IsEmpty");
    _StreamGeometry_CreateRenderProxy = lib.Find<StreamGeometry_CreateRenderProxyDelegate>("StreamGeometry_CreateRenderProxy");
    _StreamGeometry_UpdateRenderProxy = lib.Find<StreamGeometry_UpdateRenderProxyDelegate>("StreamGeometry_UpdateRenderProxy");
    _delete_StreamGeometry = lib.Find<delete_StreamGeometryDelegate>("delete_StreamGeometry");
    _new_StreamGeometryContext = lib.Find<new_StreamGeometryContextDelegate>("new_StreamGeometryContext");
    _StreamGeometryContext_BeginFigure = lib.Find<StreamGeometryContext_BeginFigureDelegate>("StreamGeometryContext_BeginFigure");
    _StreamGeometryContext_LineTo = lib.Find<StreamGeometryContext_LineToDelegate>("StreamGeometryContext_LineTo");
    _StreamGeometryContext_CubicTo = lib.Find<StreamGeometryContext_CubicToDelegate>("StreamGeometryContext_CubicTo");
    _StreamGeometryContext_QuadraticTo = lib.Find<StreamGeometryContext_QuadraticToDelegate>("StreamGeometryContext_QuadraticTo");
    _StreamGeometryContext_SmoothCubicTo = lib.Find<StreamGeometryContext_SmoothCubicToDelegate>("StreamGeometryContext_SmoothCubicTo");
    _StreamGeometryContext_SmoothQuadraticTo = lib.Find<StreamGeometryContext_SmoothQuadraticToDelegate>("StreamGeometryContext_SmoothQuadraticTo");
    _StreamGeometryContext_ArcTo = lib.Find<StreamGeometryContext_ArcToDelegate>("StreamGeometryContext_ArcTo");
    _delete_StreamGeometryContext = lib.Find<delete_StreamGeometryContextDelegate>("delete_StreamGeometryContext");
    _new_TabControl = lib.Find<new_TabControlDelegate>("new_TabControl");
    _delete_TabControl = lib.Find<delete_TabControlDelegate>("delete_TabControl");
    _TabControl_GetContentTemplate = lib.Find<TabControl_GetContentTemplateDelegate>("TabControl_GetContentTemplate");
    _TabControl_SetContentTemplate = lib.Find<TabControl_SetContentTemplateDelegate>("TabControl_SetContentTemplate");
    _TabControl_GetContentTemplateSelector = lib.Find<TabControl_GetContentTemplateSelectorDelegate>("TabControl_GetContentTemplateSelector");
    _TabControl_SetContentTemplateSelector = lib.Find<TabControl_SetContentTemplateSelectorDelegate>("TabControl_SetContentTemplateSelector");
    _TabControl_GetSelectedContent = lib.Find<TabControl_GetSelectedContentDelegate>("TabControl_GetSelectedContent");
    _TabControl_GetSelectedContentTemplate = lib.Find<TabControl_GetSelectedContentTemplateDelegate>("TabControl_GetSelectedContentTemplate");
    _TabControl_GetSelectedContentTemplateSelector = lib.Find<TabControl_GetSelectedContentTemplateSelectorDelegate>("TabControl_GetSelectedContentTemplateSelector");
    _TabControl_GetTabStripPlacement = lib.Find<TabControl_GetTabStripPlacementDelegate>("TabControl_GetTabStripPlacement");
    _TabControl_SetTabStripPlacement = lib.Find<TabControl_SetTabStripPlacementDelegate>("TabControl_SetTabStripPlacement");
    _new_TabItem = lib.Find<new_TabItemDelegate>("new_TabItem");
    _TabItem_GetIsSelected = lib.Find<TabItem_GetIsSelectedDelegate>("TabItem_GetIsSelected");
    _TabItem_SetIsSelected = lib.Find<TabItem_SetIsSelectedDelegate>("TabItem_SetIsSelected");
    _TabItem_GetTabStripPlacement = lib.Find<TabItem_GetTabStripPlacementDelegate>("TabItem_GetTabStripPlacement");
    _delete_TabItem = lib.Find<delete_TabItemDelegate>("delete_TabItem");
    _new_TabPanel = lib.Find<new_TabPanelDelegate>("new_TabPanel");
    _delete_TabPanel = lib.Find<delete_TabPanelDelegate>("delete_TabPanel");
    _new_TemplateBinding__SWIG_0 = lib.Find<new_TemplateBinding__SWIG_0Delegate>("new_TemplateBinding__SWIG_0");
    _new_TemplateBinding__SWIG_1 = lib.Find<new_TemplateBinding__SWIG_1Delegate>("new_TemplateBinding__SWIG_1");
    _TemplateBinding_GetProperty = lib.Find<TemplateBinding_GetPropertyDelegate>("TemplateBinding_GetProperty");
    _TemplateBinding_SetProperty = lib.Find<TemplateBinding_SetPropertyDelegate>("TemplateBinding_SetProperty");
    _TemplateBinding_ProvideValue = lib.Find<TemplateBinding_ProvideValueDelegate>("TemplateBinding_ProvideValue");
    _delete_TemplateBinding = lib.Find<delete_TemplateBindingDelegate>("delete_TemplateBinding");
    _new_TextBlock__SWIG_0 = lib.Find<new_TextBlock__SWIG_0Delegate>("new_TextBlock__SWIG_0");
    _new_TextBlock__SWIG_1 = lib.Find<new_TextBlock__SWIG_1Delegate>("new_TextBlock__SWIG_1");
    _delete_TextBlock = lib.Find<delete_TextBlockDelegate>("delete_TextBlock");
    _TextBlock_GetBackground = lib.Find<TextBlock_GetBackgroundDelegate>("TextBlock_GetBackground");
    _TextBlock_SetBackground = lib.Find<TextBlock_SetBackgroundDelegate>("TextBlock_SetBackground");
    _TextBlock_GetBaselineOffset = lib.Find<TextBlock_GetBaselineOffsetDelegate>("TextBlock_GetBaselineOffset");
    _TextBlock_SetBaselineOffset = lib.Find<TextBlock_SetBaselineOffsetDelegate>("TextBlock_SetBaselineOffset");
    _TextBlock_GetFontFamily = lib.Find<TextBlock_GetFontFamilyDelegate>("TextBlock_GetFontFamily");
    _TextBlock_SetFontFamily = lib.Find<TextBlock_SetFontFamilyDelegate>("TextBlock_SetFontFamily");
    _TextBlock_GetFontSize = lib.Find<TextBlock_GetFontSizeDelegate>("TextBlock_GetFontSize");
    _TextBlock_SetFontSize = lib.Find<TextBlock_SetFontSizeDelegate>("TextBlock_SetFontSize");
    _TextBlock_GetFontStretch = lib.Find<TextBlock_GetFontStretchDelegate>("TextBlock_GetFontStretch");
    _TextBlock_SetFontStretch = lib.Find<TextBlock_SetFontStretchDelegate>("TextBlock_SetFontStretch");
    _TextBlock_GetFontStyle = lib.Find<TextBlock_GetFontStyleDelegate>("TextBlock_GetFontStyle");
    _TextBlock_SetFontStyle = lib.Find<TextBlock_SetFontStyleDelegate>("TextBlock_SetFontStyle");
    _TextBlock_GetFontWeight = lib.Find<TextBlock_GetFontWeightDelegate>("TextBlock_GetFontWeight");
    _TextBlock_SetFontWeight = lib.Find<TextBlock_SetFontWeightDelegate>("TextBlock_SetFontWeight");
    _TextBlock_GetForeground = lib.Find<TextBlock_GetForegroundDelegate>("TextBlock_GetForeground");
    _TextBlock_SetForeground = lib.Find<TextBlock_SetForegroundDelegate>("TextBlock_SetForeground");
    _TextBlock_GetIsHyphenationEnabled = lib.Find<TextBlock_GetIsHyphenationEnabledDelegate>("TextBlock_GetIsHyphenationEnabled");
    _TextBlock_SetIsHyphenationEnabled = lib.Find<TextBlock_SetIsHyphenationEnabledDelegate>("TextBlock_SetIsHyphenationEnabled");
    _TextBlock_GetLineHeight = lib.Find<TextBlock_GetLineHeightDelegate>("TextBlock_GetLineHeight");
    _TextBlock_SetLineHeight = lib.Find<TextBlock_SetLineHeightDelegate>("TextBlock_SetLineHeight");
    _TextBlock_GetLineStackingStrategy = lib.Find<TextBlock_GetLineStackingStrategyDelegate>("TextBlock_GetLineStackingStrategy");
    _TextBlock_SetLineStackingStrategy = lib.Find<TextBlock_SetLineStackingStrategyDelegate>("TextBlock_SetLineStackingStrategy");
    _TextBlock_GetPadding = lib.Find<TextBlock_GetPaddingDelegate>("TextBlock_GetPadding");
    _TextBlock_SetPadding = lib.Find<TextBlock_SetPaddingDelegate>("TextBlock_SetPadding");
    _TextBlock_GetStroke = lib.Find<TextBlock_GetStrokeDelegate>("TextBlock_GetStroke");
    _TextBlock_SetStroke = lib.Find<TextBlock_SetStrokeDelegate>("TextBlock_SetStroke");
    _TextBlock_GetStrokeThickness = lib.Find<TextBlock_GetStrokeThicknessDelegate>("TextBlock_GetStrokeThickness");
    _TextBlock_SetStrokeThickness = lib.Find<TextBlock_SetStrokeThicknessDelegate>("TextBlock_SetStrokeThickness");
    _TextBlock_GetTextAlignment = lib.Find<TextBlock_GetTextAlignmentDelegate>("TextBlock_GetTextAlignment");
    _TextBlock_SetTextAlignment = lib.Find<TextBlock_SetTextAlignmentDelegate>("TextBlock_SetTextAlignment");
    _TextBlock_GetTextDecorationCollection = lib.Find<TextBlock_GetTextDecorationCollectionDelegate>("TextBlock_GetTextDecorationCollection");
    _TextBlock_SetTextDecorationCollection = lib.Find<TextBlock_SetTextDecorationCollectionDelegate>("TextBlock_SetTextDecorationCollection");
    _TextBlock_GetTextEffects = lib.Find<TextBlock_GetTextEffectsDelegate>("TextBlock_GetTextEffects");
    _TextBlock_SetTextEffects = lib.Find<TextBlock_SetTextEffectsDelegate>("TextBlock_SetTextEffects");
    _TextBlock_GetText = lib.Find<TextBlock_GetTextDelegate>("TextBlock_GetText");
    _TextBlock_SetText = lib.Find<TextBlock_SetTextDelegate>("TextBlock_SetText");
    _TextBlock_GetTextTrimming = lib.Find<TextBlock_GetTextTrimmingDelegate>("TextBlock_GetTextTrimming");
    _TextBlock_SetTextTrimming = lib.Find<TextBlock_SetTextTrimmingDelegate>("TextBlock_SetTextTrimming");
    _TextBlock_GetTextWrapping = lib.Find<TextBlock_GetTextWrappingDelegate>("TextBlock_GetTextWrapping");
    _TextBlock_SetTextWrapping = lib.Find<TextBlock_SetTextWrappingDelegate>("TextBlock_SetTextWrapping");
    _new_TextBox = lib.Find<new_TextBoxDelegate>("new_TextBox");
    _delete_TextBox = lib.Find<delete_TextBoxDelegate>("delete_TextBox");
    _TextBox_GetCharacterCasing = lib.Find<TextBox_GetCharacterCasingDelegate>("TextBox_GetCharacterCasing");
    _TextBox_SetCharacterCasing = lib.Find<TextBox_SetCharacterCasingDelegate>("TextBox_SetCharacterCasing");
    _TextBox_GetMaxLength = lib.Find<TextBox_GetMaxLengthDelegate>("TextBox_GetMaxLength");
    _TextBox_SetMaxLength = lib.Find<TextBox_SetMaxLengthDelegate>("TextBox_SetMaxLength");
    _TextBox_GetMaxLines = lib.Find<TextBox_GetMaxLinesDelegate>("TextBox_GetMaxLines");
    _TextBox_SetMaxLines = lib.Find<TextBox_SetMaxLinesDelegate>("TextBox_SetMaxLines");
    _TextBox_GetMinLines = lib.Find<TextBox_GetMinLinesDelegate>("TextBox_GetMinLines");
    _TextBox_SetMinLines = lib.Find<TextBox_SetMinLinesDelegate>("TextBox_SetMinLines");
    _TextBox_GetTextAlignment = lib.Find<TextBox_GetTextAlignmentDelegate>("TextBox_GetTextAlignment");
    _TextBox_SetTextAlignment = lib.Find<TextBox_SetTextAlignmentDelegate>("TextBox_SetTextAlignment");
    _TextBox_GetTextDecorations = lib.Find<TextBox_GetTextDecorationsDelegate>("TextBox_GetTextDecorations");
    _TextBox_GetText = lib.Find<TextBox_GetTextDelegate>("TextBox_GetText");
    _TextBox_SetText = lib.Find<TextBox_SetTextDelegate>("TextBox_SetText");
    _TextBox_GetTextWrapping = lib.Find<TextBox_GetTextWrappingDelegate>("TextBox_GetTextWrapping");
    _TextBox_SetTextWrapping = lib.Find<TextBox_SetTextWrappingDelegate>("TextBox_SetTextWrapping");
    _TextBox_GetViewportSize = lib.Find<TextBox_GetViewportSizeDelegate>("TextBox_GetViewportSize");
    _TextBox_GetScrollOffset = lib.Find<TextBox_GetScrollOffsetDelegate>("TextBox_GetScrollOffset");
    _TextBox_SelectAll = lib.Find<TextBox_SelectAllDelegate>("TextBox_SelectAll");
    _TextElement_GetBackground = lib.Find<TextElement_GetBackgroundDelegate>("TextElement_GetBackground");
    _TextElement_SetBackground = lib.Find<TextElement_SetBackgroundDelegate>("TextElement_SetBackground");
    _TextElement_GetFontFamily = lib.Find<TextElement_GetFontFamilyDelegate>("TextElement_GetFontFamily");
    _TextElement_SetFontFamily = lib.Find<TextElement_SetFontFamilyDelegate>("TextElement_SetFontFamily");
    _TextElement_GetFontSize = lib.Find<TextElement_GetFontSizeDelegate>("TextElement_GetFontSize");
    _TextElement_SetFontSize = lib.Find<TextElement_SetFontSizeDelegate>("TextElement_SetFontSize");
    _TextElement_GetFontStretch = lib.Find<TextElement_GetFontStretchDelegate>("TextElement_GetFontStretch");
    _TextElement_SetFontStretch = lib.Find<TextElement_SetFontStretchDelegate>("TextElement_SetFontStretch");
    _TextElement_GetFontStyle = lib.Find<TextElement_GetFontStyleDelegate>("TextElement_GetFontStyle");
    _TextElement_SetFontStyle = lib.Find<TextElement_SetFontStyleDelegate>("TextElement_SetFontStyle");
    _TextElement_GetFontWeight = lib.Find<TextElement_GetFontWeightDelegate>("TextElement_GetFontWeight");
    _TextElement_SetFontWeight = lib.Find<TextElement_SetFontWeightDelegate>("TextElement_SetFontWeight");
    _TextElement_GetForeground = lib.Find<TextElement_GetForegroundDelegate>("TextElement_GetForeground");
    _TextElement_SetForeground = lib.Find<TextElement_SetForegroundDelegate>("TextElement_SetForeground");
    _TextElement_GetStroke = lib.Find<TextElement_GetStrokeDelegate>("TextElement_GetStroke");
    _TextElement_SetStroke = lib.Find<TextElement_SetStrokeDelegate>("TextElement_SetStroke");
    _TextElement_GetStrokeThickness = lib.Find<TextElement_GetStrokeThicknessDelegate>("TextElement_GetStrokeThickness");
    _TextElement_SetStrokeThickness = lib.Find<TextElement_SetStrokeThicknessDelegate>("TextElement_SetStrokeThickness");
    _TextElement_GetTextEffects = lib.Find<TextElement_GetTextEffectsDelegate>("TextElement_GetTextEffects");
    _TextElement_SetTextEffects = lib.Find<TextElement_SetTextEffectsDelegate>("TextElement_SetTextEffects");
    _new_TextElement = lib.Find<new_TextElementDelegate>("new_TextElement");
    _delete_TextElement = lib.Find<delete_TextElementDelegate>("delete_TextElement");
    _new_TextureSource__SWIG_0 = lib.Find<new_TextureSource__SWIG_0Delegate>("new_TextureSource__SWIG_0");
    _new_TextureSource__SWIG_1 = lib.Find<new_TextureSource__SWIG_1Delegate>("new_TextureSource__SWIG_1");
    _new_TextureSource__SWIG_2 = lib.Find<new_TextureSource__SWIG_2Delegate>("new_TextureSource__SWIG_2");
    _delete_TextureSource = lib.Find<delete_TextureSourceDelegate>("delete_TextureSource");
    _TextureSource_GetTexture = lib.Find<TextureSource_GetTextureDelegate>("TextureSource_GetTexture");
    _TextureSource_SetTexture = lib.Find<TextureSource_SetTextureDelegate>("TextureSource_SetTexture");
    _TextureSource_GetDpiX = lib.Find<TextureSource_GetDpiXDelegate>("TextureSource_GetDpiX");
    _TextureSource_SetDpiX = lib.Find<TextureSource_SetDpiXDelegate>("TextureSource_SetDpiX");
    _TextureSource_GetDpiY = lib.Find<TextureSource_GetDpiYDelegate>("TextureSource_GetDpiY");
    _TextureSource_SetDpiY = lib.Find<TextureSource_SetDpiYDelegate>("TextureSource_SetDpiY");
    _TextureSource_GetPixelWidth = lib.Find<TextureSource_GetPixelWidthDelegate>("TextureSource_GetPixelWidth");
    _TextureSource_GetPixelHeight = lib.Find<TextureSource_GetPixelHeightDelegate>("TextureSource_GetPixelHeight");
    _TextureSource_CreateRenderProxy = lib.Find<TextureSource_CreateRenderProxyDelegate>("TextureSource_CreateRenderProxy");
    _TextureSource_UpdateRenderProxy = lib.Find<TextureSource_UpdateRenderProxyDelegate>("TextureSource_UpdateRenderProxy");
    _TextureSource_UnregisterRenderer = lib.Find<TextureSource_UnregisterRendererDelegate>("TextureSource_UnregisterRenderer");
    _DragCompletedEventArgs_canceled_set = lib.Find<DragCompletedEventArgs_canceled_setDelegate>("DragCompletedEventArgs_canceled_set");
    _DragCompletedEventArgs_canceled_get = lib.Find<DragCompletedEventArgs_canceled_getDelegate>("DragCompletedEventArgs_canceled_get");
    _DragCompletedEventArgs_horizontalChange_set = lib.Find<DragCompletedEventArgs_horizontalChange_setDelegate>("DragCompletedEventArgs_horizontalChange_set");
    _DragCompletedEventArgs_horizontalChange_get = lib.Find<DragCompletedEventArgs_horizontalChange_getDelegate>("DragCompletedEventArgs_horizontalChange_get");
    _DragCompletedEventArgs_verticalChange_set = lib.Find<DragCompletedEventArgs_verticalChange_setDelegate>("DragCompletedEventArgs_verticalChange_set");
    _DragCompletedEventArgs_verticalChange_get = lib.Find<DragCompletedEventArgs_verticalChange_getDelegate>("DragCompletedEventArgs_verticalChange_get");
    _new_DragCompletedEventArgs = lib.Find<new_DragCompletedEventArgsDelegate>("new_DragCompletedEventArgs");
    _delete_DragCompletedEventArgs = lib.Find<delete_DragCompletedEventArgsDelegate>("delete_DragCompletedEventArgs");
    _DragStartedEventArgs_horizontalOffset_set = lib.Find<DragStartedEventArgs_horizontalOffset_setDelegate>("DragStartedEventArgs_horizontalOffset_set");
    _DragStartedEventArgs_horizontalOffset_get = lib.Find<DragStartedEventArgs_horizontalOffset_getDelegate>("DragStartedEventArgs_horizontalOffset_get");
    _DragStartedEventArgs_verticalOffset_set = lib.Find<DragStartedEventArgs_verticalOffset_setDelegate>("DragStartedEventArgs_verticalOffset_set");
    _DragStartedEventArgs_verticalOffset_get = lib.Find<DragStartedEventArgs_verticalOffset_getDelegate>("DragStartedEventArgs_verticalOffset_get");
    _new_DragStartedEventArgs = lib.Find<new_DragStartedEventArgsDelegate>("new_DragStartedEventArgs");
    _delete_DragStartedEventArgs = lib.Find<delete_DragStartedEventArgsDelegate>("delete_DragStartedEventArgs");
    _DragDeltaEventArgs_horizontalChange_set = lib.Find<DragDeltaEventArgs_horizontalChange_setDelegate>("DragDeltaEventArgs_horizontalChange_set");
    _DragDeltaEventArgs_horizontalChange_get = lib.Find<DragDeltaEventArgs_horizontalChange_getDelegate>("DragDeltaEventArgs_horizontalChange_get");
    _DragDeltaEventArgs_verticalChange_set = lib.Find<DragDeltaEventArgs_verticalChange_setDelegate>("DragDeltaEventArgs_verticalChange_set");
    _DragDeltaEventArgs_verticalChange_get = lib.Find<DragDeltaEventArgs_verticalChange_getDelegate>("DragDeltaEventArgs_verticalChange_get");
    _new_DragDeltaEventArgs = lib.Find<new_DragDeltaEventArgsDelegate>("new_DragDeltaEventArgs");
    _delete_DragDeltaEventArgs = lib.Find<delete_DragDeltaEventArgsDelegate>("delete_DragDeltaEventArgs");
    _new_Thumb = lib.Find<new_ThumbDelegate>("new_Thumb");
    _Thumb_GetIsDragging = lib.Find<Thumb_GetIsDraggingDelegate>("Thumb_GetIsDragging");
    _Thumb_CancelDrag = lib.Find<Thumb_CancelDragDelegate>("Thumb_CancelDrag");
    _delete_Thumb = lib.Find<delete_ThumbDelegate>("delete_Thumb");
    _new_TickBar = lib.Find<new_TickBarDelegate>("new_TickBar");
    _delete_TickBar = lib.Find<delete_TickBarDelegate>("delete_TickBar");
    _TickBar_GetFill = lib.Find<TickBar_GetFillDelegate>("TickBar_GetFill");
    _TickBar_SetFill = lib.Find<TickBar_SetFillDelegate>("TickBar_SetFill");
    _TickBar_GetIsDirectionReversed = lib.Find<TickBar_GetIsDirectionReversedDelegate>("TickBar_GetIsDirectionReversed");
    _TickBar_SetIsDirectionReversed = lib.Find<TickBar_SetIsDirectionReversedDelegate>("TickBar_SetIsDirectionReversed");
    _TickBar_GetIsSelectionRangeEnabled = lib.Find<TickBar_GetIsSelectionRangeEnabledDelegate>("TickBar_GetIsSelectionRangeEnabled");
    _TickBar_SetIsSelectionRangeEnabled = lib.Find<TickBar_SetIsSelectionRangeEnabledDelegate>("TickBar_SetIsSelectionRangeEnabled");
    _TickBar_GetMaximum = lib.Find<TickBar_GetMaximumDelegate>("TickBar_GetMaximum");
    _TickBar_SetMaximum = lib.Find<TickBar_SetMaximumDelegate>("TickBar_SetMaximum");
    _TickBar_GetMinimum = lib.Find<TickBar_GetMinimumDelegate>("TickBar_GetMinimum");
    _TickBar_SetMinimum = lib.Find<TickBar_SetMinimumDelegate>("TickBar_SetMinimum");
    _TickBar_GetPlacement = lib.Find<TickBar_GetPlacementDelegate>("TickBar_GetPlacement");
    _TickBar_SetPlacement = lib.Find<TickBar_SetPlacementDelegate>("TickBar_SetPlacement");
    _TickBar_GetReservedSpace = lib.Find<TickBar_GetReservedSpaceDelegate>("TickBar_GetReservedSpace");
    _TickBar_SetReservedSpace = lib.Find<TickBar_SetReservedSpaceDelegate>("TickBar_SetReservedSpace");
    _TickBar_GetSelectionEnd = lib.Find<TickBar_GetSelectionEndDelegate>("TickBar_GetSelectionEnd");
    _TickBar_SetSelectionEnd = lib.Find<TickBar_SetSelectionEndDelegate>("TickBar_SetSelectionEnd");
    _TickBar_GetSelectionStart = lib.Find<TickBar_GetSelectionStartDelegate>("TickBar_GetSelectionStart");
    _TickBar_SetSelectionStart = lib.Find<TickBar_SetSelectionStartDelegate>("TickBar_SetSelectionStart");
    _TickBar_GetTickFrequency = lib.Find<TickBar_GetTickFrequencyDelegate>("TickBar_GetTickFrequency");
    _TickBar_SetTickFrequency = lib.Find<TickBar_SetTickFrequencyDelegate>("TickBar_SetTickFrequency");
    _TickBar_GetTicks = lib.Find<TickBar_GetTicksDelegate>("TickBar_GetTicks");
    _TickBar_SetTicks = lib.Find<TickBar_SetTicksDelegate>("TickBar_SetTicks");
    _new_ToolBar = lib.Find<new_ToolBarDelegate>("new_ToolBar");
    _delete_ToolBar = lib.Find<delete_ToolBarDelegate>("delete_ToolBar");
    _ToolBar_GetOverflowMode = lib.Find<ToolBar_GetOverflowModeDelegate>("ToolBar_GetOverflowMode");
    _ToolBar_SetOverflowMode = lib.Find<ToolBar_SetOverflowModeDelegate>("ToolBar_SetOverflowMode");
    _ToolBar_GetIsOverflowItem = lib.Find<ToolBar_GetIsOverflowItemDelegate>("ToolBar_GetIsOverflowItem");
    _ToolBar_SetIsOverflowItem = lib.Find<ToolBar_SetIsOverflowItemDelegate>("ToolBar_SetIsOverflowItem");
    _ToolBar_GetBandIndex = lib.Find<ToolBar_GetBandIndexDelegate>("ToolBar_GetBandIndex");
    _ToolBar_SetBandIndex = lib.Find<ToolBar_SetBandIndexDelegate>("ToolBar_SetBandIndex");
    _ToolBar_GetBand = lib.Find<ToolBar_GetBandDelegate>("ToolBar_GetBand");
    _ToolBar_SetBand = lib.Find<ToolBar_SetBandDelegate>("ToolBar_SetBand");
    _ToolBar_GetHasOverflowItems = lib.Find<ToolBar_GetHasOverflowItemsDelegate>("ToolBar_GetHasOverflowItems");
    _ToolBar_GetIsOverflowOpen = lib.Find<ToolBar_GetIsOverflowOpenDelegate>("ToolBar_GetIsOverflowOpen");
    _ToolBar_GetOrientation = lib.Find<ToolBar_GetOrientationDelegate>("ToolBar_GetOrientation");
    _ToolBar_GetPanel = lib.Find<ToolBar_GetPanelDelegate>("ToolBar_GetPanel");
    _ToolBar_GetOverflowPanel = lib.Find<ToolBar_GetOverflowPanelDelegate>("ToolBar_GetOverflowPanel");
    _ToolBar_UpdateHasOverflowItems = lib.Find<ToolBar_UpdateHasOverflowItemsDelegate>("ToolBar_UpdateHasOverflowItems");
    _ToolBar_ButtonStyleKey_set = lib.Find<ToolBar_ButtonStyleKey_setDelegate>("ToolBar_ButtonStyleKey_set");
    _ToolBar_ButtonStyleKey_get = lib.Find<ToolBar_ButtonStyleKey_getDelegate>("ToolBar_ButtonStyleKey_get");
    _ToolBar_ToggleButtonStyleKey_set = lib.Find<ToolBar_ToggleButtonStyleKey_setDelegate>("ToolBar_ToggleButtonStyleKey_set");
    _ToolBar_ToggleButtonStyleKey_get = lib.Find<ToolBar_ToggleButtonStyleKey_getDelegate>("ToolBar_ToggleButtonStyleKey_get");
    _ToolBar_CheckBoxStyleKey_set = lib.Find<ToolBar_CheckBoxStyleKey_setDelegate>("ToolBar_CheckBoxStyleKey_set");
    _ToolBar_CheckBoxStyleKey_get = lib.Find<ToolBar_CheckBoxStyleKey_getDelegate>("ToolBar_CheckBoxStyleKey_get");
    _ToolBar_RadioButtonStyleKey_set = lib.Find<ToolBar_RadioButtonStyleKey_setDelegate>("ToolBar_RadioButtonStyleKey_set");
    _ToolBar_RadioButtonStyleKey_get = lib.Find<ToolBar_RadioButtonStyleKey_getDelegate>("ToolBar_RadioButtonStyleKey_get");
    _ToolBar_TextBoxStyleKey_set = lib.Find<ToolBar_TextBoxStyleKey_setDelegate>("ToolBar_TextBoxStyleKey_set");
    _ToolBar_TextBoxStyleKey_get = lib.Find<ToolBar_TextBoxStyleKey_getDelegate>("ToolBar_TextBoxStyleKey_get");
    _ToolBar_ComboBoxStyleKey_set = lib.Find<ToolBar_ComboBoxStyleKey_setDelegate>("ToolBar_ComboBoxStyleKey_set");
    _ToolBar_ComboBoxStyleKey_get = lib.Find<ToolBar_ComboBoxStyleKey_getDelegate>("ToolBar_ComboBoxStyleKey_get");
    _ToolBar_SeparatorStyleKey_set = lib.Find<ToolBar_SeparatorStyleKey_setDelegate>("ToolBar_SeparatorStyleKey_set");
    _ToolBar_SeparatorStyleKey_get = lib.Find<ToolBar_SeparatorStyleKey_getDelegate>("ToolBar_SeparatorStyleKey_get");
    _ToolBar_MenuStyleKey_set = lib.Find<ToolBar_MenuStyleKey_setDelegate>("ToolBar_MenuStyleKey_set");
    _ToolBar_MenuStyleKey_get = lib.Find<ToolBar_MenuStyleKey_getDelegate>("ToolBar_MenuStyleKey_get");
    _new_ToolBarOverflowPanel = lib.Find<new_ToolBarOverflowPanelDelegate>("new_ToolBarOverflowPanel");
    _ToolBarOverflowPanel_GetWrapWidth = lib.Find<ToolBarOverflowPanel_GetWrapWidthDelegate>("ToolBarOverflowPanel_GetWrapWidth");
    _ToolBarOverflowPanel_SetWrapWidth = lib.Find<ToolBarOverflowPanel_SetWrapWidthDelegate>("ToolBarOverflowPanel_SetWrapWidth");
    _delete_ToolBarOverflowPanel = lib.Find<delete_ToolBarOverflowPanelDelegate>("delete_ToolBarOverflowPanel");
    _new_ToolBarPanel = lib.Find<new_ToolBarPanelDelegate>("new_ToolBarPanel");
    _delete_ToolBarPanel = lib.Find<delete_ToolBarPanelDelegate>("delete_ToolBarPanel");
    _new_ToolBarTray = lib.Find<new_ToolBarTrayDelegate>("new_ToolBarTray");
    _delete_ToolBarTray = lib.Find<delete_ToolBarTrayDelegate>("delete_ToolBarTray");
    _ToolBarTray_GetIsLocked = lib.Find<ToolBarTray_GetIsLockedDelegate>("ToolBarTray_GetIsLocked");
    _ToolBarTray_SetIsLocked = lib.Find<ToolBarTray_SetIsLockedDelegate>("ToolBarTray_SetIsLocked");
    _ToolBarTray_GetBackground = lib.Find<ToolBarTray_GetBackgroundDelegate>("ToolBarTray_GetBackground");
    _ToolBarTray_SetBackground = lib.Find<ToolBarTray_SetBackgroundDelegate>("ToolBarTray_SetBackground");
    _ToolBarTray_GetOrientation = lib.Find<ToolBarTray_GetOrientationDelegate>("ToolBarTray_GetOrientation");
    _ToolBarTray_SetOrientation = lib.Find<ToolBarTray_SetOrientationDelegate>("ToolBarTray_SetOrientation");
    _new_ToolTip = lib.Find<new_ToolTipDelegate>("new_ToolTip");
    _ToolTip_GetCustomPopupPlacementCallback = lib.Find<ToolTip_GetCustomPopupPlacementCallbackDelegate>("ToolTip_GetCustomPopupPlacementCallback");
    _ToolTip_SetCustomPopupPlacementCallback = lib.Find<ToolTip_SetCustomPopupPlacementCallbackDelegate>("ToolTip_SetCustomPopupPlacementCallback");
    _ToolTip_GetHasDropShadow = lib.Find<ToolTip_GetHasDropShadowDelegate>("ToolTip_GetHasDropShadow");
    _ToolTip_SetHasDropShadow = lib.Find<ToolTip_SetHasDropShadowDelegate>("ToolTip_SetHasDropShadow");
    _ToolTip_GetHorizontalOffset = lib.Find<ToolTip_GetHorizontalOffsetDelegate>("ToolTip_GetHorizontalOffset");
    _ToolTip_SetHorizontalOffset = lib.Find<ToolTip_SetHorizontalOffsetDelegate>("ToolTip_SetHorizontalOffset");
    _ToolTip_GetIsOpen = lib.Find<ToolTip_GetIsOpenDelegate>("ToolTip_GetIsOpen");
    _ToolTip_SetIsOpen = lib.Find<ToolTip_SetIsOpenDelegate>("ToolTip_SetIsOpen");
    _ToolTip_GetPlacement = lib.Find<ToolTip_GetPlacementDelegate>("ToolTip_GetPlacement");
    _ToolTip_SetPlacement = lib.Find<ToolTip_SetPlacementDelegate>("ToolTip_SetPlacement");
    _ToolTip_GetPlacementRectangle = lib.Find<ToolTip_GetPlacementRectangleDelegate>("ToolTip_GetPlacementRectangle");
    _ToolTip_SetPlacementRectangle = lib.Find<ToolTip_SetPlacementRectangleDelegate>("ToolTip_SetPlacementRectangle");
    _ToolTip_GetPlacementTarget = lib.Find<ToolTip_GetPlacementTargetDelegate>("ToolTip_GetPlacementTarget");
    _ToolTip_SetPlacementTarget = lib.Find<ToolTip_SetPlacementTargetDelegate>("ToolTip_SetPlacementTarget");
    _ToolTip_GetStaysOpen = lib.Find<ToolTip_GetStaysOpenDelegate>("ToolTip_GetStaysOpen");
    _ToolTip_SetStaysOpen = lib.Find<ToolTip_SetStaysOpenDelegate>("ToolTip_SetStaysOpen");
    _ToolTip_GetVerticalOffset = lib.Find<ToolTip_GetVerticalOffsetDelegate>("ToolTip_GetVerticalOffset");
    _ToolTip_SetVerticalOffset = lib.Find<ToolTip_SetVerticalOffsetDelegate>("ToolTip_SetVerticalOffset");
    _ToolTip_GetPopup = lib.Find<ToolTip_GetPopupDelegate>("ToolTip_GetPopup");
    _delete_ToolTip = lib.Find<delete_ToolTipDelegate>("delete_ToolTip");
    _ToolTipService_ToolTipClosingEvent_set = lib.Find<ToolTipService_ToolTipClosingEvent_setDelegate>("ToolTipService_ToolTipClosingEvent_set");
    _ToolTipService_ToolTipClosingEvent_get = lib.Find<ToolTipService_ToolTipClosingEvent_getDelegate>("ToolTipService_ToolTipClosingEvent_get");
    _ToolTipService_ToolTipOpeningEvent_set = lib.Find<ToolTipService_ToolTipOpeningEvent_setDelegate>("ToolTipService_ToolTipOpeningEvent_set");
    _ToolTipService_ToolTipOpeningEvent_get = lib.Find<ToolTipService_ToolTipOpeningEvent_getDelegate>("ToolTipService_ToolTipOpeningEvent_get");
    _ToolTipService_GetBetweenShowDelay = lib.Find<ToolTipService_GetBetweenShowDelayDelegate>("ToolTipService_GetBetweenShowDelay");
    _ToolTipService_SetBetweenShowDelay = lib.Find<ToolTipService_SetBetweenShowDelayDelegate>("ToolTipService_SetBetweenShowDelay");
    _ToolTipService_GetHasDropShadow = lib.Find<ToolTipService_GetHasDropShadowDelegate>("ToolTipService_GetHasDropShadow");
    _ToolTipService_SetHasDropShadow = lib.Find<ToolTipService_SetHasDropShadowDelegate>("ToolTipService_SetHasDropShadow");
    _ToolTipService_GetHorizontalOffset = lib.Find<ToolTipService_GetHorizontalOffsetDelegate>("ToolTipService_GetHorizontalOffset");
    _ToolTipService_SetHorizontalOffset = lib.Find<ToolTipService_SetHorizontalOffsetDelegate>("ToolTipService_SetHorizontalOffset");
    _ToolTipService_GetInitialShowDelay = lib.Find<ToolTipService_GetInitialShowDelayDelegate>("ToolTipService_GetInitialShowDelay");
    _ToolTipService_SetInitialShowDelay = lib.Find<ToolTipService_SetInitialShowDelayDelegate>("ToolTipService_SetInitialShowDelay");
    _ToolTipService_GetIsEnabled = lib.Find<ToolTipService_GetIsEnabledDelegate>("ToolTipService_GetIsEnabled");
    _ToolTipService_SetIsEnabled = lib.Find<ToolTipService_SetIsEnabledDelegate>("ToolTipService_SetIsEnabled");
    _ToolTipService_GetIsOpen = lib.Find<ToolTipService_GetIsOpenDelegate>("ToolTipService_GetIsOpen");
    _ToolTipService_SetIsOpen = lib.Find<ToolTipService_SetIsOpenDelegate>("ToolTipService_SetIsOpen");
    _ToolTipService_GetPlacement = lib.Find<ToolTipService_GetPlacementDelegate>("ToolTipService_GetPlacement");
    _ToolTipService_SetPlacement = lib.Find<ToolTipService_SetPlacementDelegate>("ToolTipService_SetPlacement");
    _ToolTipService_GetPlacementRectangle = lib.Find<ToolTipService_GetPlacementRectangleDelegate>("ToolTipService_GetPlacementRectangle");
    _ToolTipService_SetPlacementRectangle = lib.Find<ToolTipService_SetPlacementRectangleDelegate>("ToolTipService_SetPlacementRectangle");
    _ToolTipService_GetPlacementTarget = lib.Find<ToolTipService_GetPlacementTargetDelegate>("ToolTipService_GetPlacementTarget");
    _ToolTipService_SetPlacementTarget = lib.Find<ToolTipService_SetPlacementTargetDelegate>("ToolTipService_SetPlacementTarget");
    _ToolTipService_GetShowDuration = lib.Find<ToolTipService_GetShowDurationDelegate>("ToolTipService_GetShowDuration");
    _ToolTipService_SetShowDuration = lib.Find<ToolTipService_SetShowDurationDelegate>("ToolTipService_SetShowDuration");
    _ToolTipService_GetShowOnDisabled = lib.Find<ToolTipService_GetShowOnDisabledDelegate>("ToolTipService_GetShowOnDisabled");
    _ToolTipService_SetShowOnDisabled = lib.Find<ToolTipService_SetShowOnDisabledDelegate>("ToolTipService_SetShowOnDisabled");
    _ToolTipService_GetToolTip = lib.Find<ToolTipService_GetToolTipDelegate>("ToolTipService_GetToolTip");
    _ToolTipService_SetToolTip = lib.Find<ToolTipService_SetToolTipDelegate>("ToolTipService_SetToolTip");
    _ToolTipService_GetVerticalOffset = lib.Find<ToolTipService_GetVerticalOffsetDelegate>("ToolTipService_GetVerticalOffset");
    _ToolTipService_SetVerticalOffset = lib.Find<ToolTipService_SetVerticalOffsetDelegate>("ToolTipService_SetVerticalOffset");
    _ToolTipService_FindValidToolTipOwner = lib.Find<ToolTipService_FindValidToolTipOwnerDelegate>("ToolTipService_FindValidToolTipOwner");
    _new_ToolTipService = lib.Find<new_ToolTipServiceDelegate>("new_ToolTipService");
    _delete_ToolTipService = lib.Find<delete_ToolTipServiceDelegate>("delete_ToolTipService");
    _new_Track = lib.Find<new_TrackDelegate>("new_Track");
    _delete_Track = lib.Find<delete_TrackDelegate>("delete_Track");
    _Track_GetDecreaseRepeatButton = lib.Find<Track_GetDecreaseRepeatButtonDelegate>("Track_GetDecreaseRepeatButton");
    _Track_SetDecreaseRepeatButton = lib.Find<Track_SetDecreaseRepeatButtonDelegate>("Track_SetDecreaseRepeatButton");
    _Track_GetIncreaseRepeatButton = lib.Find<Track_GetIncreaseRepeatButtonDelegate>("Track_GetIncreaseRepeatButton");
    _Track_SetIncreaseRepeatButton = lib.Find<Track_SetIncreaseRepeatButtonDelegate>("Track_SetIncreaseRepeatButton");
    _Track_GetIsDirectionReversed = lib.Find<Track_GetIsDirectionReversedDelegate>("Track_GetIsDirectionReversed");
    _Track_SetIsDirectionReversed = lib.Find<Track_SetIsDirectionReversedDelegate>("Track_SetIsDirectionReversed");
    _Track_GetMaximum = lib.Find<Track_GetMaximumDelegate>("Track_GetMaximum");
    _Track_SetMaximum = lib.Find<Track_SetMaximumDelegate>("Track_SetMaximum");
    _Track_GetMinimum = lib.Find<Track_GetMinimumDelegate>("Track_GetMinimum");
    _Track_SetMinimum = lib.Find<Track_SetMinimumDelegate>("Track_SetMinimum");
    _Track_GetOrientation = lib.Find<Track_GetOrientationDelegate>("Track_GetOrientation");
    _Track_SetOrientation = lib.Find<Track_SetOrientationDelegate>("Track_SetOrientation");
    _Track_GetThumb = lib.Find<Track_GetThumbDelegate>("Track_GetThumb");
    _Track_SetThumb = lib.Find<Track_SetThumbDelegate>("Track_SetThumb");
    _Track_GetValue = lib.Find<Track_GetValueDelegate>("Track_GetValue");
    _Track_SetValue = lib.Find<Track_SetValueDelegate>("Track_SetValue");
    _Track_GetViewportSize = lib.Find<Track_GetViewportSizeDelegate>("Track_GetViewportSize");
    _Track_SetViewportSize = lib.Find<Track_SetViewportSizeDelegate>("Track_SetViewportSize");
    _Track_ValueFromDistance = lib.Find<Track_ValueFromDistanceDelegate>("Track_ValueFromDistance");
    _Track_ValueFromPoint = lib.Find<Track_ValueFromPointDelegate>("Track_ValueFromPoint");
    _new_TransformGroup = lib.Find<new_TransformGroupDelegate>("new_TransformGroup");
    _delete_TransformGroup = lib.Find<delete_TransformGroupDelegate>("delete_TransformGroup");
    _TransformGroup_GetNumChildren = lib.Find<TransformGroup_GetNumChildrenDelegate>("TransformGroup_GetNumChildren");
    _TransformGroup_GetChild = lib.Find<TransformGroup_GetChildDelegate>("TransformGroup_GetChild");
    _TransformGroup_GetChildren = lib.Find<TransformGroup_GetChildrenDelegate>("TransformGroup_GetChildren");
    _TransformGroup_SetChildren = lib.Find<TransformGroup_SetChildrenDelegate>("TransformGroup_SetChildren");
    _TransformGroup_GetTransform = lib.Find<TransformGroup_GetTransformDelegate>("TransformGroup_GetTransform");
    _TransformGroup_CreateRenderProxy = lib.Find<TransformGroup_CreateRenderProxyDelegate>("TransformGroup_CreateRenderProxy");
    _TransformGroup_UpdateRenderProxy = lib.Find<TransformGroup_UpdateRenderProxyDelegate>("TransformGroup_UpdateRenderProxy");
    _TransformGroup_UnregisterRenderer = lib.Find<TransformGroup_UnregisterRendererDelegate>("TransformGroup_UnregisterRenderer");
    _new_TranslateTransform__SWIG_0 = lib.Find<new_TranslateTransform__SWIG_0Delegate>("new_TranslateTransform__SWIG_0");
    _new_TranslateTransform__SWIG_1 = lib.Find<new_TranslateTransform__SWIG_1Delegate>("new_TranslateTransform__SWIG_1");
    _TranslateTransform_GetX = lib.Find<TranslateTransform_GetXDelegate>("TranslateTransform_GetX");
    _TranslateTransform_SetX = lib.Find<TranslateTransform_SetXDelegate>("TranslateTransform_SetX");
    _TranslateTransform_GetY = lib.Find<TranslateTransform_GetYDelegate>("TranslateTransform_GetY");
    _TranslateTransform_SetY = lib.Find<TranslateTransform_SetYDelegate>("TranslateTransform_SetY");
    _TranslateTransform_GetTransform = lib.Find<TranslateTransform_GetTransformDelegate>("TranslateTransform_GetTransform");
    _TranslateTransform_CreateRenderProxy = lib.Find<TranslateTransform_CreateRenderProxyDelegate>("TranslateTransform_CreateRenderProxy");
    _TranslateTransform_UpdateRenderProxy = lib.Find<TranslateTransform_UpdateRenderProxyDelegate>("TranslateTransform_UpdateRenderProxy");
    _TranslateTransform_UnregisterRenderer = lib.Find<TranslateTransform_UnregisterRendererDelegate>("TranslateTransform_UnregisterRenderer");
    _delete_TranslateTransform = lib.Find<delete_TranslateTransformDelegate>("delete_TranslateTransform");
    _new_TreeView = lib.Find<new_TreeViewDelegate>("new_TreeView");
    _delete_TreeView = lib.Find<delete_TreeViewDelegate>("delete_TreeView");
    _TreeView_GetSelectedItem = lib.Find<TreeView_GetSelectedItemDelegate>("TreeView_GetSelectedItem");
    _TreeView_GetSelectedValue = lib.Find<TreeView_GetSelectedValueDelegate>("TreeView_GetSelectedValue");
    _TreeView_GetSelectedValuePath = lib.Find<TreeView_GetSelectedValuePathDelegate>("TreeView_GetSelectedValuePath");
    _TreeView_SetSelectedValuePath = lib.Find<TreeView_SetSelectedValuePathDelegate>("TreeView_SetSelectedValuePath");
    _TreeView_ItemClicked = lib.Find<TreeView_ItemClickedDelegate>("TreeView_ItemClicked");
    _TreeView_ItemExpanded = lib.Find<TreeView_ItemExpandedDelegate>("TreeView_ItemExpanded");
    _new_TreeViewItem = lib.Find<new_TreeViewItemDelegate>("new_TreeViewItem");
    _delete_TreeViewItem = lib.Find<delete_TreeViewItemDelegate>("delete_TreeViewItem");
    _TreeViewItem_GetIsExpanded = lib.Find<TreeViewItem_GetIsExpandedDelegate>("TreeViewItem_GetIsExpanded");
    _TreeViewItem_SetIsExpanded = lib.Find<TreeViewItem_SetIsExpandedDelegate>("TreeViewItem_SetIsExpanded");
    _TreeViewItem_GetIsSelected = lib.Find<TreeViewItem_GetIsSelectedDelegate>("TreeViewItem_GetIsSelected");
    _TreeViewItem_SetIsSelected = lib.Find<TreeViewItem_SetIsSelectedDelegate>("TreeViewItem_SetIsSelected");
    _TreeViewItem_GetIsSelectionActive = lib.Find<TreeViewItem_GetIsSelectionActiveDelegate>("TreeViewItem_GetIsSelectionActive");
    _TreeViewItem_SetIsSelectionActive = lib.Find<TreeViewItem_SetIsSelectionActiveDelegate>("TreeViewItem_SetIsSelectionActive");
    _new_Trigger = lib.Find<new_TriggerDelegate>("new_Trigger");
    _delete_Trigger = lib.Find<delete_TriggerDelegate>("delete_Trigger");
    _Trigger_GetProperty = lib.Find<Trigger_GetPropertyDelegate>("Trigger_GetProperty");
    _Trigger_SetProperty = lib.Find<Trigger_SetPropertyDelegate>("Trigger_SetProperty");
    _Trigger_GetSetters = lib.Find<Trigger_GetSettersDelegate>("Trigger_GetSetters");
    _Trigger_GetSourceName = lib.Find<Trigger_GetSourceNameDelegate>("Trigger_GetSourceName");
    _Trigger_SetSourceName = lib.Find<Trigger_SetSourceNameDelegate>("Trigger_SetSourceName");
    _Trigger_GetValue = lib.Find<Trigger_GetValueDelegate>("Trigger_GetValue");
    _Trigger_SetValue = lib.Find<Trigger_SetValueDelegate>("Trigger_SetValue");
    _Trigger_FindSetter = lib.Find<Trigger_FindSetterDelegate>("Trigger_FindSetter");
    _Trigger_RegisterSources = lib.Find<Trigger_RegisterSourcesDelegate>("Trigger_RegisterSources");
    _Trigger_UnregisterSources = lib.Find<Trigger_UnregisterSourcesDelegate>("Trigger_UnregisterSources");
    _Trigger_RegisterEvents = lib.Find<Trigger_RegisterEventsDelegate>("Trigger_RegisterEvents");
    _Trigger_UnregisterEvents = lib.Find<Trigger_UnregisterEventsDelegate>("Trigger_UnregisterEvents");
    _Trigger_Check = lib.Find<Trigger_CheckDelegate>("Trigger_Check");
    _Trigger_FindValue = lib.Find<Trigger_FindValueDelegate>("Trigger_FindValue");
    _Trigger_Invalidate__SWIG_0 = lib.Find<Trigger_Invalidate__SWIG_0Delegate>("Trigger_Invalidate__SWIG_0");
    _Trigger_Invalidate__SWIG_1 = lib.Find<Trigger_Invalidate__SWIG_1Delegate>("Trigger_Invalidate__SWIG_1");
    _delete_TriggerAction = lib.Find<delete_TriggerActionDelegate>("delete_TriggerAction");
    _TriggerAction_Invoke__SWIG_0 = lib.Find<TriggerAction_Invoke__SWIG_0Delegate>("TriggerAction_Invoke__SWIG_0");
    _TriggerAction_Invoke__SWIG_1 = lib.Find<TriggerAction_Invoke__SWIG_1Delegate>("TriggerAction_Invoke__SWIG_1");
    _new_UIElementData = lib.Find<new_UIElementDataDelegate>("new_UIElementData");
    _UIElementData_RegisterEvent = lib.Find<UIElementData_RegisterEventDelegate>("UIElementData_RegisterEvent");
    _UIElementData_AddEventOwner = lib.Find<UIElementData_AddEventOwnerDelegate>("UIElementData_AddEventOwner");
    _UIElementData_FindEvent = lib.Find<UIElementData_FindEventDelegate>("UIElementData_FindEvent");
    _UIElementData_EnumEvents = lib.Find<UIElementData_EnumEventsDelegate>("UIElementData_EnumEvents");
    _UIElementData_RegisterEventHandler = lib.Find<UIElementData_RegisterEventHandlerDelegate>("UIElementData_RegisterEventHandler");
    _UIElementData_FindEventHandler = lib.Find<UIElementData_FindEventHandlerDelegate>("UIElementData_FindEventHandler");
    _UIElementData_RegisterNonRouted = lib.Find<UIElementData_RegisterNonRoutedDelegate>("UIElementData_RegisterNonRouted");
    _UIElementData_IsNonRoutedRegistered = lib.Find<UIElementData_IsNonRoutedRegisteredDelegate>("UIElementData_IsNonRoutedRegistered");
    _delete_UIElementData = lib.Find<delete_UIElementDataDelegate>("delete_UIElementData");
    _FindRoutedEventRecursive = lib.Find<FindRoutedEventRecursiveDelegate>("FindRoutedEventRecursive");
    _IsNonRoutedEventRegisteredRecursive = lib.Find<IsNonRoutedEventRegisteredRecursiveDelegate>("IsNonRoutedEventRegisteredRecursive");
    _MouseEventArgs_position_set = lib.Find<MouseEventArgs_position_setDelegate>("MouseEventArgs_position_set");
    _MouseEventArgs_position_get = lib.Find<MouseEventArgs_position_getDelegate>("MouseEventArgs_position_get");
    _MouseEventArgs_leftButton_set = lib.Find<MouseEventArgs_leftButton_setDelegate>("MouseEventArgs_leftButton_set");
    _MouseEventArgs_leftButton_get = lib.Find<MouseEventArgs_leftButton_getDelegate>("MouseEventArgs_leftButton_get");
    _MouseEventArgs_middleButton_set = lib.Find<MouseEventArgs_middleButton_setDelegate>("MouseEventArgs_middleButton_set");
    _MouseEventArgs_middleButton_get = lib.Find<MouseEventArgs_middleButton_getDelegate>("MouseEventArgs_middleButton_get");
    _MouseEventArgs_rightButton_set = lib.Find<MouseEventArgs_rightButton_setDelegate>("MouseEventArgs_rightButton_set");
    _MouseEventArgs_rightButton_get = lib.Find<MouseEventArgs_rightButton_getDelegate>("MouseEventArgs_rightButton_get");
    _MouseEventArgs_xButton1Button_set = lib.Find<MouseEventArgs_xButton1Button_setDelegate>("MouseEventArgs_xButton1Button_set");
    _MouseEventArgs_xButton1Button_get = lib.Find<MouseEventArgs_xButton1Button_getDelegate>("MouseEventArgs_xButton1Button_get");
    _MouseEventArgs_xButton2Button_set = lib.Find<MouseEventArgs_xButton2Button_setDelegate>("MouseEventArgs_xButton2Button_set");
    _MouseEventArgs_xButton2Button_get = lib.Find<MouseEventArgs_xButton2Button_getDelegate>("MouseEventArgs_xButton2Button_get");
    _new_MouseEventArgs = lib.Find<new_MouseEventArgsDelegate>("new_MouseEventArgs");
    _delete_MouseEventArgs = lib.Find<delete_MouseEventArgsDelegate>("delete_MouseEventArgs");
    _MouseButtonEventArgs_changedButton_set = lib.Find<MouseButtonEventArgs_changedButton_setDelegate>("MouseButtonEventArgs_changedButton_set");
    _MouseButtonEventArgs_changedButton_get = lib.Find<MouseButtonEventArgs_changedButton_getDelegate>("MouseButtonEventArgs_changedButton_get");
    _MouseButtonEventArgs_buttonState_set = lib.Find<MouseButtonEventArgs_buttonState_setDelegate>("MouseButtonEventArgs_buttonState_set");
    _MouseButtonEventArgs_buttonState_get = lib.Find<MouseButtonEventArgs_buttonState_getDelegate>("MouseButtonEventArgs_buttonState_get");
    _MouseButtonEventArgs_buttonClicks_set = lib.Find<MouseButtonEventArgs_buttonClicks_setDelegate>("MouseButtonEventArgs_buttonClicks_set");
    _MouseButtonEventArgs_buttonClicks_get = lib.Find<MouseButtonEventArgs_buttonClicks_getDelegate>("MouseButtonEventArgs_buttonClicks_get");
    _new_MouseButtonEventArgs = lib.Find<new_MouseButtonEventArgsDelegate>("new_MouseButtonEventArgs");
    _delete_MouseButtonEventArgs = lib.Find<delete_MouseButtonEventArgsDelegate>("delete_MouseButtonEventArgs");
    _MouseWheelEventArgs_wheelRotation_set = lib.Find<MouseWheelEventArgs_wheelRotation_setDelegate>("MouseWheelEventArgs_wheelRotation_set");
    _MouseWheelEventArgs_wheelRotation_get = lib.Find<MouseWheelEventArgs_wheelRotation_getDelegate>("MouseWheelEventArgs_wheelRotation_get");
    _new_MouseWheelEventArgs = lib.Find<new_MouseWheelEventArgsDelegate>("new_MouseWheelEventArgs");
    _delete_MouseWheelEventArgs = lib.Find<delete_MouseWheelEventArgsDelegate>("delete_MouseWheelEventArgs");
    _AccessKeyEventArgs_isMultiple_set = lib.Find<AccessKeyEventArgs_isMultiple_setDelegate>("AccessKeyEventArgs_isMultiple_set");
    _AccessKeyEventArgs_isMultiple_get = lib.Find<AccessKeyEventArgs_isMultiple_getDelegate>("AccessKeyEventArgs_isMultiple_get");
    _new_AccessKeyEventArgs = lib.Find<new_AccessKeyEventArgsDelegate>("new_AccessKeyEventArgs");
    _delete_AccessKeyEventArgs = lib.Find<delete_AccessKeyEventArgsDelegate>("delete_AccessKeyEventArgs");
    _KeyboardFocusChangedEventArgs_oldFocus_set = lib.Find<KeyboardFocusChangedEventArgs_oldFocus_setDelegate>("KeyboardFocusChangedEventArgs_oldFocus_set");
    _KeyboardFocusChangedEventArgs_oldFocus_get = lib.Find<KeyboardFocusChangedEventArgs_oldFocus_getDelegate>("KeyboardFocusChangedEventArgs_oldFocus_get");
    _KeyboardFocusChangedEventArgs_newFocus_set = lib.Find<KeyboardFocusChangedEventArgs_newFocus_setDelegate>("KeyboardFocusChangedEventArgs_newFocus_set");
    _KeyboardFocusChangedEventArgs_newFocus_get = lib.Find<KeyboardFocusChangedEventArgs_newFocus_getDelegate>("KeyboardFocusChangedEventArgs_newFocus_get");
    _new_KeyboardFocusChangedEventArgs = lib.Find<new_KeyboardFocusChangedEventArgsDelegate>("new_KeyboardFocusChangedEventArgs");
    _delete_KeyboardFocusChangedEventArgs = lib.Find<delete_KeyboardFocusChangedEventArgsDelegate>("delete_KeyboardFocusChangedEventArgs");
    _KeyEventArgs_deadCharProcessedKey_set = lib.Find<KeyEventArgs_deadCharProcessedKey_setDelegate>("KeyEventArgs_deadCharProcessedKey_set");
    _KeyEventArgs_deadCharProcessedKey_get = lib.Find<KeyEventArgs_deadCharProcessedKey_getDelegate>("KeyEventArgs_deadCharProcessedKey_get");
    _KeyEventArgs_imeProcessedKey_set = lib.Find<KeyEventArgs_imeProcessedKey_setDelegate>("KeyEventArgs_imeProcessedKey_set");
    _KeyEventArgs_imeProcessedKey_get = lib.Find<KeyEventArgs_imeProcessedKey_getDelegate>("KeyEventArgs_imeProcessedKey_get");
    _KeyEventArgs_key_set = lib.Find<KeyEventArgs_key_setDelegate>("KeyEventArgs_key_set");
    _KeyEventArgs_key_get = lib.Find<KeyEventArgs_key_getDelegate>("KeyEventArgs_key_get");
    _KeyEventArgs_keyStates_set = lib.Find<KeyEventArgs_keyStates_setDelegate>("KeyEventArgs_keyStates_set");
    _KeyEventArgs_keyStates_get = lib.Find<KeyEventArgs_keyStates_getDelegate>("KeyEventArgs_keyStates_get");
    _KeyEventArgs_systemKey_set = lib.Find<KeyEventArgs_systemKey_setDelegate>("KeyEventArgs_systemKey_set");
    _KeyEventArgs_systemKey_get = lib.Find<KeyEventArgs_systemKey_getDelegate>("KeyEventArgs_systemKey_get");
    _new_KeyEventArgs = lib.Find<new_KeyEventArgsDelegate>("new_KeyEventArgs");
    _KeyEventArgs_GetIsDown = lib.Find<KeyEventArgs_GetIsDownDelegate>("KeyEventArgs_GetIsDown");
    _KeyEventArgs_GetIsRepeat = lib.Find<KeyEventArgs_GetIsRepeatDelegate>("KeyEventArgs_GetIsRepeat");
    _KeyEventArgs_GetIsToggled = lib.Find<KeyEventArgs_GetIsToggledDelegate>("KeyEventArgs_GetIsToggled");
    _KeyEventArgs_GetIsUp = lib.Find<KeyEventArgs_GetIsUpDelegate>("KeyEventArgs_GetIsUp");
    _delete_KeyEventArgs = lib.Find<delete_KeyEventArgsDelegate>("delete_KeyEventArgs");
    _DragEventArgs_allowedEffects_set = lib.Find<DragEventArgs_allowedEffects_setDelegate>("DragEventArgs_allowedEffects_set");
    _DragEventArgs_allowedEffects_get = lib.Find<DragEventArgs_allowedEffects_getDelegate>("DragEventArgs_allowedEffects_get");
    _DragEventArgs_data_set = lib.Find<DragEventArgs_data_setDelegate>("DragEventArgs_data_set");
    _DragEventArgs_data_get = lib.Find<DragEventArgs_data_getDelegate>("DragEventArgs_data_get");
    _DragEventArgs_effects_set = lib.Find<DragEventArgs_effects_setDelegate>("DragEventArgs_effects_set");
    _DragEventArgs_effects_get = lib.Find<DragEventArgs_effects_getDelegate>("DragEventArgs_effects_get");
    _DragEventArgs_keyStates_set = lib.Find<DragEventArgs_keyStates_setDelegate>("DragEventArgs_keyStates_set");
    _DragEventArgs_keyStates_get = lib.Find<DragEventArgs_keyStates_getDelegate>("DragEventArgs_keyStates_get");
    _new_DragEventArgs = lib.Find<new_DragEventArgsDelegate>("new_DragEventArgs");
    _delete_DragEventArgs = lib.Find<delete_DragEventArgsDelegate>("delete_DragEventArgs");
    _GiveFeedbackEventArgs_effects_set = lib.Find<GiveFeedbackEventArgs_effects_setDelegate>("GiveFeedbackEventArgs_effects_set");
    _GiveFeedbackEventArgs_effects_get = lib.Find<GiveFeedbackEventArgs_effects_getDelegate>("GiveFeedbackEventArgs_effects_get");
    _GiveFeedbackEventArgs_useDefaultCursors_set = lib.Find<GiveFeedbackEventArgs_useDefaultCursors_setDelegate>("GiveFeedbackEventArgs_useDefaultCursors_set");
    _GiveFeedbackEventArgs_useDefaultCursors_get = lib.Find<GiveFeedbackEventArgs_useDefaultCursors_getDelegate>("GiveFeedbackEventArgs_useDefaultCursors_get");
    _new_GiveFeedbackEventArgs = lib.Find<new_GiveFeedbackEventArgsDelegate>("new_GiveFeedbackEventArgs");
    _delete_GiveFeedbackEventArgs = lib.Find<delete_GiveFeedbackEventArgsDelegate>("delete_GiveFeedbackEventArgs");
    _QueryContinueDragEventArgs_action_set = lib.Find<QueryContinueDragEventArgs_action_setDelegate>("QueryContinueDragEventArgs_action_set");
    _QueryContinueDragEventArgs_action_get = lib.Find<QueryContinueDragEventArgs_action_getDelegate>("QueryContinueDragEventArgs_action_get");
    _QueryContinueDragEventArgs_escapePressed_set = lib.Find<QueryContinueDragEventArgs_escapePressed_setDelegate>("QueryContinueDragEventArgs_escapePressed_set");
    _QueryContinueDragEventArgs_escapePressed_get = lib.Find<QueryContinueDragEventArgs_escapePressed_getDelegate>("QueryContinueDragEventArgs_escapePressed_get");
    _QueryContinueDragEventArgs_keyStates_set = lib.Find<QueryContinueDragEventArgs_keyStates_setDelegate>("QueryContinueDragEventArgs_keyStates_set");
    _QueryContinueDragEventArgs_keyStates_get = lib.Find<QueryContinueDragEventArgs_keyStates_getDelegate>("QueryContinueDragEventArgs_keyStates_get");
    _new_QueryContinueDragEventArgs = lib.Find<new_QueryContinueDragEventArgsDelegate>("new_QueryContinueDragEventArgs");
    _delete_QueryContinueDragEventArgs = lib.Find<delete_QueryContinueDragEventArgsDelegate>("delete_QueryContinueDragEventArgs");
    _TextCompositionEventArgs_ch_set = lib.Find<TextCompositionEventArgs_ch_setDelegate>("TextCompositionEventArgs_ch_set");
    _TextCompositionEventArgs_ch_get = lib.Find<TextCompositionEventArgs_ch_getDelegate>("TextCompositionEventArgs_ch_get");
    _new_TextCompositionEventArgs = lib.Find<new_TextCompositionEventArgsDelegate>("new_TextCompositionEventArgs");
    _delete_TextCompositionEventArgs = lib.Find<delete_TextCompositionEventArgsDelegate>("delete_TextCompositionEventArgs");
    _new_QueryCursorEventArgs = lib.Find<new_QueryCursorEventArgsDelegate>("new_QueryCursorEventArgs");
    _delete_QueryCursorEventArgs = lib.Find<delete_QueryCursorEventArgsDelegate>("delete_QueryCursorEventArgs");
    _TraversalRequest_focusNavigationDirection_set = lib.Find<TraversalRequest_focusNavigationDirection_setDelegate>("TraversalRequest_focusNavigationDirection_set");
    _TraversalRequest_focusNavigationDirection_get = lib.Find<TraversalRequest_focusNavigationDirection_getDelegate>("TraversalRequest_focusNavigationDirection_get");
    _TraversalRequest_wrapped_set = lib.Find<TraversalRequest_wrapped_setDelegate>("TraversalRequest_wrapped_set");
    _TraversalRequest_wrapped_get = lib.Find<TraversalRequest_wrapped_getDelegate>("TraversalRequest_wrapped_get");
    _new_TraversalRequest = lib.Find<new_TraversalRequestDelegate>("new_TraversalRequest");
    _delete_TraversalRequest = lib.Find<delete_TraversalRequestDelegate>("delete_TraversalRequest");
    _new_ValueTargetProvider = lib.Find<new_ValueTargetProviderDelegate>("new_ValueTargetProvider");
    _ValueTargetProvider_GetTargetObject = lib.Find<ValueTargetProvider_GetTargetObjectDelegate>("ValueTargetProvider_GetTargetObject");
    _ValueTargetProvider_GetTargetProperty = lib.Find<ValueTargetProvider_GetTargetPropertyDelegate>("ValueTargetProvider_GetTargetProperty");
    _delete_ValueTargetProvider = lib.Find<delete_ValueTargetProviderDelegate>("delete_ValueTargetProvider");
    _new_Viewbox = lib.Find<new_ViewboxDelegate>("new_Viewbox");
    _delete_Viewbox = lib.Find<delete_ViewboxDelegate>("delete_Viewbox");
    _Viewbox_GetStretchScale__SWIG_0 = lib.Find<Viewbox_GetStretchScale__SWIG_0Delegate>("Viewbox_GetStretchScale__SWIG_0");
    _Viewbox_GetStretchScale__SWIG_1 = lib.Find<Viewbox_GetStretchScale__SWIG_1Delegate>("Viewbox_GetStretchScale__SWIG_1");
    _Viewbox_GetStretchDirection = lib.Find<Viewbox_GetStretchDirectionDelegate>("Viewbox_GetStretchDirection");
    _Viewbox_SetStretchDirection = lib.Find<Viewbox_SetStretchDirectionDelegate>("Viewbox_SetStretchDirection");
    _Viewbox_GetStretch = lib.Find<Viewbox_GetStretchDelegate>("Viewbox_GetStretch");
    _Viewbox_SetStretch = lib.Find<Viewbox_SetStretchDelegate>("Viewbox_SetStretch");
    _Viewbox_GetChild = lib.Find<Viewbox_GetChildDelegate>("Viewbox_GetChild");
    _Viewbox_SetChild = lib.Find<Viewbox_SetChildDelegate>("Viewbox_SetChild");
    _new_VisualBrush = lib.Find<new_VisualBrushDelegate>("new_VisualBrush");
    _delete_VisualBrush = lib.Find<delete_VisualBrushDelegate>("delete_VisualBrush");
    _VisualBrush_GetAutoLayoutContent = lib.Find<VisualBrush_GetAutoLayoutContentDelegate>("VisualBrush_GetAutoLayoutContent");
    _VisualBrush_SetAutoLayoutContent = lib.Find<VisualBrush_SetAutoLayoutContentDelegate>("VisualBrush_SetAutoLayoutContent");
    _VisualBrush_GetVisual = lib.Find<VisualBrush_GetVisualDelegate>("VisualBrush_GetVisual");
    _VisualBrush_SetVisual = lib.Find<VisualBrush_SetVisualDelegate>("VisualBrush_SetVisual");
    _VisualBrush_CreateRenderProxy = lib.Find<VisualBrush_CreateRenderProxyDelegate>("VisualBrush_CreateRenderProxy");
    _VisualBrush_UpdateRenderProxy = lib.Find<VisualBrush_UpdateRenderProxyDelegate>("VisualBrush_UpdateRenderProxy");
    _VisualTreeHelper_GetRoot = lib.Find<VisualTreeHelper_GetRootDelegate>("VisualTreeHelper_GetRoot");
    _VisualTreeHelper_GetParent = lib.Find<VisualTreeHelper_GetParentDelegate>("VisualTreeHelper_GetParent");
    _VisualTreeHelper_GetChildrenCount = lib.Find<VisualTreeHelper_GetChildrenCountDelegate>("VisualTreeHelper_GetChildrenCount");
    _VisualTreeHelper_GetChild = lib.Find<VisualTreeHelper_GetChildDelegate>("VisualTreeHelper_GetChild");
    _VisualTreeHelper_GetContentBounds = lib.Find<VisualTreeHelper_GetContentBoundsDelegate>("VisualTreeHelper_GetContentBounds");
    _VisualTreeHelper_GetDescendantBounds = lib.Find<VisualTreeHelper_GetDescendantBoundsDelegate>("VisualTreeHelper_GetDescendantBounds");
    _VisualTreeHelper_HitTest__SWIG_0 = lib.Find<VisualTreeHelper_HitTest__SWIG_0Delegate>("VisualTreeHelper_HitTest__SWIG_0");
    _VisualTreeHelper_HitTest__SWIG_1 = lib.Find<VisualTreeHelper_HitTest__SWIG_1Delegate>("VisualTreeHelper_HitTest__SWIG_1");
    _VisualTreeHelper_PrintTree = lib.Find<VisualTreeHelper_PrintTreeDelegate>("VisualTreeHelper_PrintTree");
    _new_VisualTreeHelper = lib.Find<new_VisualTreeHelperDelegate>("new_VisualTreeHelper");
    _delete_VisualTreeHelper = lib.Find<delete_VisualTreeHelperDelegate>("delete_VisualTreeHelper");
    _CancelEventArgs_cancel_set = lib.Find<CancelEventArgs_cancel_setDelegate>("CancelEventArgs_cancel_set");
    _CancelEventArgs_cancel_get = lib.Find<CancelEventArgs_cancel_getDelegate>("CancelEventArgs_cancel_get");
    _new_CancelEventArgs = lib.Find<new_CancelEventArgsDelegate>("new_CancelEventArgs");
    _delete_CancelEventArgs = lib.Find<delete_CancelEventArgsDelegate>("delete_CancelEventArgs");
    _new_Window = lib.Find<new_WindowDelegate>("new_Window");
    _delete_Window = lib.Find<delete_WindowDelegate>("delete_Window");
    _Window_GetContentSize = lib.Find<Window_GetContentSizeDelegate>("Window_GetContentSize");
    _Window_GetSystemWindow = lib.Find<Window_GetSystemWindowDelegate>("Window_GetSystemWindow");
    _Window_Attach = lib.Find<Window_AttachDelegate>("Window_Attach");
    _Window_Detach = lib.Find<Window_DetachDelegate>("Window_Detach");
    _Window_Create = lib.Find<Window_CreateDelegate>("Window_Create");
    _Window_Show = lib.Find<Window_ShowDelegate>("Window_Show");
    _Window_ShowDialog = lib.Find<Window_ShowDialogDelegate>("Window_ShowDialog");
    _Window_Activate = lib.Find<Window_ActivateDelegate>("Window_Activate");
    _Window_Hide = lib.Find<Window_HideDelegate>("Window_Hide");
    _Window_Close__SWIG_0 = lib.Find<Window_Close__SWIG_0Delegate>("Window_Close__SWIG_0");
    _Window_Close__SWIG_1 = lib.Find<Window_Close__SWIG_1Delegate>("Window_Close__SWIG_1");
    _Window_GetAllowsTransparency = lib.Find<Window_GetAllowsTransparencyDelegate>("Window_GetAllowsTransparency");
    _Window_SetAllowsTransparency = lib.Find<Window_SetAllowsTransparencyDelegate>("Window_SetAllowsTransparency");
    _Window_GetDialogResult = lib.Find<Window_GetDialogResultDelegate>("Window_GetDialogResult");
    _Window_SetDialogResult = lib.Find<Window_SetDialogResultDelegate>("Window_SetDialogResult");
    _Window_GetFullscreen = lib.Find<Window_GetFullscreenDelegate>("Window_GetFullscreen");
    _Window_SetFullscreen = lib.Find<Window_SetFullscreenDelegate>("Window_SetFullscreen");
    _Window_GetIcon = lib.Find<Window_GetIconDelegate>("Window_GetIcon");
    _Window_SetIcon = lib.Find<Window_SetIconDelegate>("Window_SetIcon");
    _Window_GetIsActive = lib.Find<Window_GetIsActiveDelegate>("Window_GetIsActive");
    _Window_SetIsActive = lib.Find<Window_SetIsActiveDelegate>("Window_SetIsActive");
    _Window_GetLeft = lib.Find<Window_GetLeftDelegate>("Window_GetLeft");
    _Window_SetLeft = lib.Find<Window_SetLeftDelegate>("Window_SetLeft");
    _Window_GetResizeMode = lib.Find<Window_GetResizeModeDelegate>("Window_GetResizeMode");
    _Window_SetResizeMode = lib.Find<Window_SetResizeModeDelegate>("Window_SetResizeMode");
    _Window_GetShowInTaskbar = lib.Find<Window_GetShowInTaskbarDelegate>("Window_GetShowInTaskbar");
    _Window_SetShowInTaskbar = lib.Find<Window_SetShowInTaskbarDelegate>("Window_SetShowInTaskbar");
    _Window_GetSizeToContent = lib.Find<Window_GetSizeToContentDelegate>("Window_GetSizeToContent");
    _Window_SetSizeToContent = lib.Find<Window_SetSizeToContentDelegate>("Window_SetSizeToContent");
    _Window_GetTitle = lib.Find<Window_GetTitleDelegate>("Window_GetTitle");
    _Window_SetTitle = lib.Find<Window_SetTitleDelegate>("Window_SetTitle");
    _Window_GetTop = lib.Find<Window_GetTopDelegate>("Window_GetTop");
    _Window_SetTop = lib.Find<Window_SetTopDelegate>("Window_SetTop");
    _Window_GetTopmost = lib.Find<Window_GetTopmostDelegate>("Window_GetTopmost");
    _Window_SetTopmost = lib.Find<Window_SetTopmostDelegate>("Window_SetTopmost");
    _Window_GetWindowState = lib.Find<Window_GetWindowStateDelegate>("Window_GetWindowState");
    _Window_SetWindowState = lib.Find<Window_SetWindowStateDelegate>("Window_SetWindowState");
    _Window_GetWindowStyle = lib.Find<Window_GetWindowStyleDelegate>("Window_GetWindowStyle");
    _Window_SetWindowStyle = lib.Find<Window_SetWindowStyleDelegate>("Window_SetWindowStyle");
    _Window_GetWindowStartupLocation = lib.Find<Window_GetWindowStartupLocationDelegate>("Window_GetWindowStartupLocation");
    _Window_SetWindowStartupLocation = lib.Find<Window_SetWindowStartupLocationDelegate>("Window_SetWindowStartupLocation");
    _Window_Activated = lib.Find<Window_ActivatedDelegate>("Window_Activated");
    _Window_Deactivated = lib.Find<Window_DeactivatedDelegate>("Window_Deactivated");
    _Window_Closing = lib.Find<Window_ClosingDelegate>("Window_Closing");
    _Window_Closed = lib.Find<Window_ClosedDelegate>("Window_Closed");
    _Window_LocationChanged = lib.Find<Window_LocationChangedDelegate>("Window_LocationChanged");
    _Window_StateChanged = lib.Find<Window_StateChangedDelegate>("Window_StateChanged");
    _Window_ContentRendered = lib.Find<Window_ContentRenderedDelegate>("Window_ContentRendered");
    _new_WrapPanel = lib.Find<new_WrapPanelDelegate>("new_WrapPanel");
    _WrapPanel_GetItemWidth = lib.Find<WrapPanel_GetItemWidthDelegate>("WrapPanel_GetItemWidth");
    _WrapPanel_SetItemWidth = lib.Find<WrapPanel_SetItemWidthDelegate>("WrapPanel_SetItemWidth");
    _WrapPanel_GetItemHeight = lib.Find<WrapPanel_GetItemHeightDelegate>("WrapPanel_GetItemHeight");
    _WrapPanel_SetItemHeight = lib.Find<WrapPanel_SetItemHeightDelegate>("WrapPanel_SetItemHeight");
    _WrapPanel_GetOrientation = lib.Find<WrapPanel_GetOrientationDelegate>("WrapPanel_GetOrientation");
    _WrapPanel_SetOrientation = lib.Find<WrapPanel_SetOrientationDelegate>("WrapPanel_SetOrientation");
    _delete_WrapPanel = lib.Find<delete_WrapPanelDelegate>("delete_WrapPanel");
    _MScorlibBoolean_ProvideValue = lib.Find<MScorlibBoolean_ProvideValueDelegate>("MScorlibBoolean_ProvideValue");
    _new_MScorlibBoolean = lib.Find<new_MScorlibBooleanDelegate>("new_MScorlibBoolean");
    _delete_MScorlibBoolean = lib.Find<delete_MScorlibBooleanDelegate>("delete_MScorlibBoolean");
    _MScorlibString_ProvideValue = lib.Find<MScorlibString_ProvideValueDelegate>("MScorlibString_ProvideValue");
    _new_MScorlibString = lib.Find<new_MScorlibStringDelegate>("new_MScorlibString");
    _delete_MScorlibString = lib.Find<delete_MScorlibStringDelegate>("delete_MScorlibString");
    _new_AnimationClock = lib.Find<new_AnimationClockDelegate>("new_AnimationClock");
    _AnimationClock_Start__SWIG_0 = lib.Find<AnimationClock_Start__SWIG_0Delegate>("AnimationClock_Start__SWIG_0");
    _AnimationClock_Start__SWIG_1 = lib.Find<AnimationClock_Start__SWIG_1Delegate>("AnimationClock_Start__SWIG_1");
    _delete_AnimationClock = lib.Find<delete_AnimationClockDelegate>("delete_AnimationClock");
    _delete_AnimationTimeline = lib.Find<delete_AnimationTimelineDelegate>("delete_AnimationTimeline");
    _AnimationTimeline_GetAnimatedValue = lib.Find<AnimationTimeline_GetAnimatedValueDelegate>("AnimationTimeline_GetAnimatedValue");
    _AnimationTimeline_Start__SWIG_0 = lib.Find<AnimationTimeline_Start__SWIG_0Delegate>("AnimationTimeline_Start__SWIG_0");
    _AnimationTimeline_Start__SWIG_1 = lib.Find<AnimationTimeline_Start__SWIG_1Delegate>("AnimationTimeline_Start__SWIG_1");
    _AnimationTimeline_GetIsAdditive = lib.Find<AnimationTimeline_GetIsAdditiveDelegate>("AnimationTimeline_GetIsAdditive");
    _AnimationTimeline_SetIsAdditive = lib.Find<AnimationTimeline_SetIsAdditiveDelegate>("AnimationTimeline_SetIsAdditive");
    _AnimationTimeline_GetIsCumulative = lib.Find<AnimationTimeline_GetIsCumulativeDelegate>("AnimationTimeline_GetIsCumulative");
    _AnimationTimeline_SetIsCumulative = lib.Find<AnimationTimeline_SetIsCumulativeDelegate>("AnimationTimeline_SetIsCumulative");
    _AnimationTimeline_CreateTransitionFrom = lib.Find<AnimationTimeline_CreateTransitionFromDelegate>("AnimationTimeline_CreateTransitionFrom");
    _AnimationTimeline_CreateTransitionTo = lib.Find<AnimationTimeline_CreateTransitionToDelegate>("AnimationTimeline_CreateTransitionTo");
    _delete_EasingFunctionBase = lib.Find<delete_EasingFunctionBaseDelegate>("delete_EasingFunctionBase");
    _EasingFunctionBase_GetEasingMode = lib.Find<EasingFunctionBase_GetEasingModeDelegate>("EasingFunctionBase_GetEasingMode");
    _EasingFunctionBase_SetEasingMode = lib.Find<EasingFunctionBase_SetEasingModeDelegate>("EasingFunctionBase_SetEasingMode");
    _EasingFunctionBase_Ease = lib.Find<EasingFunctionBase_EaseDelegate>("EasingFunctionBase_Ease");
    _new_BackEase = lib.Find<new_BackEaseDelegate>("new_BackEase");
    _BackEase_GetAmplitude = lib.Find<BackEase_GetAmplitudeDelegate>("BackEase_GetAmplitude");
    _BackEase_SetAmplitude = lib.Find<BackEase_SetAmplitudeDelegate>("BackEase_SetAmplitude");
    _delete_BackEase = lib.Find<delete_BackEaseDelegate>("delete_BackEase");
    _delete_BaseAnimation = lib.Find<delete_BaseAnimationDelegate>("delete_BaseAnimation");
    _BaseAnimation_GetEasingFunction = lib.Find<BaseAnimation_GetEasingFunctionDelegate>("BaseAnimation_GetEasingFunction");
    _BaseAnimation_SetEasingFunction = lib.Find<BaseAnimation_SetEasingFunctionDelegate>("BaseAnimation_SetEasingFunction");
    _new_BeginStoryboard = lib.Find<new_BeginStoryboardDelegate>("new_BeginStoryboard");
    _BeginStoryboard_GetHandoffBehavior = lib.Find<BeginStoryboard_GetHandoffBehaviorDelegate>("BeginStoryboard_GetHandoffBehavior");
    _BeginStoryboard_SetHandoffBehavior = lib.Find<BeginStoryboard_SetHandoffBehaviorDelegate>("BeginStoryboard_SetHandoffBehavior");
    _BeginStoryboard_GetName = lib.Find<BeginStoryboard_GetNameDelegate>("BeginStoryboard_GetName");
    _BeginStoryboard_SetName = lib.Find<BeginStoryboard_SetNameDelegate>("BeginStoryboard_SetName");
    _BeginStoryboard_GetStoryboard = lib.Find<BeginStoryboard_GetStoryboardDelegate>("BeginStoryboard_GetStoryboard");
    _BeginStoryboard_SetStoryboard = lib.Find<BeginStoryboard_SetStoryboardDelegate>("BeginStoryboard_SetStoryboard");
    _BeginStoryboard_Invoke__SWIG_0 = lib.Find<BeginStoryboard_Invoke__SWIG_0Delegate>("BeginStoryboard_Invoke__SWIG_0");
    _BeginStoryboard_Invoke__SWIG_1 = lib.Find<BeginStoryboard_Invoke__SWIG_1Delegate>("BeginStoryboard_Invoke__SWIG_1");
    _delete_BeginStoryboard = lib.Find<delete_BeginStoryboardDelegate>("delete_BeginStoryboard");
    _new_BounceEase = lib.Find<new_BounceEaseDelegate>("new_BounceEase");
    _BounceEase_GetBounces = lib.Find<BounceEase_GetBouncesDelegate>("BounceEase_GetBounces");
    _BounceEase_SetBounces = lib.Find<BounceEase_SetBouncesDelegate>("BounceEase_SetBounces");
    _BounceEase_GetBounciness = lib.Find<BounceEase_GetBouncinessDelegate>("BounceEase_GetBounciness");
    _BounceEase_SetBounciness = lib.Find<BounceEase_SetBouncinessDelegate>("BounceEase_SetBounciness");
    _delete_BounceEase = lib.Find<delete_BounceEaseDelegate>("delete_BounceEase");
    _new_CircleEase = lib.Find<new_CircleEaseDelegate>("new_CircleEase");
    _delete_CircleEase = lib.Find<delete_CircleEaseDelegate>("delete_CircleEase");
    _delete_Clock = lib.Find<delete_ClockDelegate>("delete_Clock");
    _Clock_GetCurrentIteration = lib.Find<Clock_GetCurrentIterationDelegate>("Clock_GetCurrentIteration");
    _Clock_GetCurrentProgress = lib.Find<Clock_GetCurrentProgressDelegate>("Clock_GetCurrentProgress");
    _Clock_GetCurrentTime = lib.Find<Clock_GetCurrentTimeDelegate>("Clock_GetCurrentTime");
    _Clock_GetCurrentState = lib.Find<Clock_GetCurrentStateDelegate>("Clock_GetCurrentState");
    _Clock_HasControllableRoot = lib.Find<Clock_HasControllableRootDelegate>("Clock_HasControllableRoot");
    _Clock_GetParent = lib.Find<Clock_GetParentDelegate>("Clock_GetParent");
    _Clock_GetTimeline = lib.Find<Clock_GetTimelineDelegate>("Clock_GetTimeline");
    _Clock_Completed = lib.Find<Clock_CompletedDelegate>("Clock_Completed");
    _Clock_Tick = lib.Find<Clock_TickDelegate>("Clock_Tick");
    _Clock_FlattenChildren = lib.Find<Clock_FlattenChildrenDelegate>("Clock_FlattenChildren");
    _new_ClockController = lib.Find<new_ClockControllerDelegate>("new_ClockController");
    _delete_ClockController = lib.Find<delete_ClockControllerDelegate>("delete_ClockController");
    _new_ClockGroup = lib.Find<new_ClockGroupDelegate>("new_ClockGroup");
    _delete_ClockGroup = lib.Find<delete_ClockGroupDelegate>("delete_ClockGroup");
    _ClockGroup_Add = lib.Find<ClockGroup_AddDelegate>("ClockGroup_Add");
    _ClockGroup_GetChildrenCount = lib.Find<ClockGroup_GetChildrenCountDelegate>("ClockGroup_GetChildrenCount");
    _ClockGroup_GetChild = lib.Find<ClockGroup_GetChildDelegate>("ClockGroup_GetChild");
    _ClockGroup_Tick = lib.Find<ClockGroup_TickDelegate>("ClockGroup_Tick");
    _ClockGroup_FlattenChildren = lib.Find<ClockGroup_FlattenChildrenDelegate>("ClockGroup_FlattenChildren");
    _delete_ControllableStoryboardAction = lib.Find<delete_ControllableStoryboardActionDelegate>("delete_ControllableStoryboardAction");
    _ControllableStoryboardAction_GetBeginStoryboardName = lib.Find<ControllableStoryboardAction_GetBeginStoryboardNameDelegate>("ControllableStoryboardAction_GetBeginStoryboardName");
    _ControllableStoryboardAction_SetBeginStoryboardName = lib.Find<ControllableStoryboardAction_SetBeginStoryboardNameDelegate>("ControllableStoryboardAction_SetBeginStoryboardName");
    _ControllableStoryboardAction_Invoke__SWIG_0 = lib.Find<ControllableStoryboardAction_Invoke__SWIG_0Delegate>("ControllableStoryboardAction_Invoke__SWIG_0");
    _ControllableStoryboardAction_Invoke__SWIG_1 = lib.Find<ControllableStoryboardAction_Invoke__SWIG_1Delegate>("ControllableStoryboardAction_Invoke__SWIG_1");
    _new_CubicEase = lib.Find<new_CubicEaseDelegate>("new_CubicEase");
    _delete_CubicEase = lib.Find<delete_CubicEaseDelegate>("delete_CubicEase");
    _new_Duration__SWIG_0 = lib.Find<new_Duration__SWIG_0Delegate>("new_Duration__SWIG_0");
    _new_Duration__SWIG_1 = lib.Find<new_Duration__SWIG_1Delegate>("new_Duration__SWIG_1");
    _Duration_Automatic = lib.Find<Duration_AutomaticDelegate>("Duration_Automatic");
    _Duration_Forever = lib.Find<Duration_ForeverDelegate>("Duration_Forever");
    _Duration_Parse = lib.Find<Duration_ParseDelegate>("Duration_Parse");
    _Duration_TryParse = lib.Find<Duration_TryParseDelegate>("Duration_TryParse");
    _Duration_GetTimeSpan = lib.Find<Duration_GetTimeSpanDelegate>("Duration_GetTimeSpan");
    _Duration_GetDurationType = lib.Find<Duration_GetDurationTypeDelegate>("Duration_GetDurationType");
    _Duration_ToStr = lib.Find<Duration_ToStrDelegate>("Duration_ToStr");
    _delete_Duration = lib.Find<delete_DurationDelegate>("delete_Duration");
    _new_ElasticEase = lib.Find<new_ElasticEaseDelegate>("new_ElasticEase");
    _ElasticEase_GetOscillations = lib.Find<ElasticEase_GetOscillationsDelegate>("ElasticEase_GetOscillations");
    _ElasticEase_SetOscillations = lib.Find<ElasticEase_SetOscillationsDelegate>("ElasticEase_SetOscillations");
    _ElasticEase_GetSpringiness = lib.Find<ElasticEase_GetSpringinessDelegate>("ElasticEase_GetSpringiness");
    _ElasticEase_SetSpringiness = lib.Find<ElasticEase_SetSpringinessDelegate>("ElasticEase_SetSpringiness");
    _delete_ElasticEase = lib.Find<delete_ElasticEaseDelegate>("delete_ElasticEase");
    _new_ExponentialEase = lib.Find<new_ExponentialEaseDelegate>("new_ExponentialEase");
    _ExponentialEase_GetExponent = lib.Find<ExponentialEase_GetExponentDelegate>("ExponentialEase_GetExponent");
    _ExponentialEase_SetExponent = lib.Find<ExponentialEase_SetExponentDelegate>("ExponentialEase_SetExponent");
    _delete_ExponentialEase = lib.Find<delete_ExponentialEaseDelegate>("delete_ExponentialEase");
    _new_KeySpline__SWIG_0 = lib.Find<new_KeySpline__SWIG_0Delegate>("new_KeySpline__SWIG_0");
    _new_KeySpline__SWIG_1 = lib.Find<new_KeySpline__SWIG_1Delegate>("new_KeySpline__SWIG_1");
    _new_KeySpline__SWIG_2 = lib.Find<new_KeySpline__SWIG_2Delegate>("new_KeySpline__SWIG_2");
    _KeySpline_GetControlPoint1 = lib.Find<KeySpline_GetControlPoint1Delegate>("KeySpline_GetControlPoint1");
    _KeySpline_SetControlPoint1 = lib.Find<KeySpline_SetControlPoint1Delegate>("KeySpline_SetControlPoint1");
    _KeySpline_GetControlPoint2 = lib.Find<KeySpline_GetControlPoint2Delegate>("KeySpline_GetControlPoint2");
    _KeySpline_SetControlPoint2 = lib.Find<KeySpline_SetControlPoint2Delegate>("KeySpline_SetControlPoint2");
    _KeySpline_GetSplineProgress = lib.Find<KeySpline_GetSplineProgressDelegate>("KeySpline_GetSplineProgress");
    _KeySpline_Parse = lib.Find<KeySpline_ParseDelegate>("KeySpline_Parse");
    _KeySpline_TryParse = lib.Find<KeySpline_TryParseDelegate>("KeySpline_TryParse");
    _delete_KeySpline = lib.Find<delete_KeySplineDelegate>("delete_KeySpline");
    _new_KeyTime = lib.Find<new_KeyTimeDelegate>("new_KeyTime");
    _KeyTime_FromPercent = lib.Find<KeyTime_FromPercentDelegate>("KeyTime_FromPercent");
    _KeyTime_FromTimeSpan = lib.Find<KeyTime_FromTimeSpanDelegate>("KeyTime_FromTimeSpan");
    _KeyTime_Paced = lib.Find<KeyTime_PacedDelegate>("KeyTime_Paced");
    _KeyTime_Uniform = lib.Find<KeyTime_UniformDelegate>("KeyTime_Uniform");
    _KeyTime_Parse = lib.Find<KeyTime_ParseDelegate>("KeyTime_Parse");
    _KeyTime_TryParse = lib.Find<KeyTime_TryParseDelegate>("KeyTime_TryParse");
    _KeyTime_GetKeyTimeType = lib.Find<KeyTime_GetKeyTimeTypeDelegate>("KeyTime_GetKeyTimeType");
    _KeyTime_GetTimeSpan = lib.Find<KeyTime_GetTimeSpanDelegate>("KeyTime_GetTimeSpan");
    _KeyTime_GetPercent = lib.Find<KeyTime_GetPercentDelegate>("KeyTime_GetPercent");
    _delete_KeyTime = lib.Find<delete_KeyTimeDelegate>("delete_KeyTime");
    _TimelineEventArgs_target_set = lib.Find<TimelineEventArgs_target_setDelegate>("TimelineEventArgs_target_set");
    _TimelineEventArgs_target_get = lib.Find<TimelineEventArgs_target_getDelegate>("TimelineEventArgs_target_get");
    _new_TimelineEventArgs = lib.Find<new_TimelineEventArgsDelegate>("new_TimelineEventArgs");
    _delete_TimelineEventArgs = lib.Find<delete_TimelineEventArgsDelegate>("delete_TimelineEventArgs");
    _delete_Timeline = lib.Find<delete_TimelineDelegate>("delete_Timeline");
    _Timeline_GetDesiredFrameRate = lib.Find<Timeline_GetDesiredFrameRateDelegate>("Timeline_GetDesiredFrameRate");
    _Timeline_SetDesiredFrameRate = lib.Find<Timeline_SetDesiredFrameRateDelegate>("Timeline_SetDesiredFrameRate");
    _Timeline_GetAccelerationRatio = lib.Find<Timeline_GetAccelerationRatioDelegate>("Timeline_GetAccelerationRatio");
    _Timeline_SetAccelerationRatio = lib.Find<Timeline_SetAccelerationRatioDelegate>("Timeline_SetAccelerationRatio");
    _Timeline_GetAutoReverse = lib.Find<Timeline_GetAutoReverseDelegate>("Timeline_GetAutoReverse");
    _Timeline_SetAutoReverse = lib.Find<Timeline_SetAutoReverseDelegate>("Timeline_SetAutoReverse");
    _Timeline_GetBeginTime = lib.Find<Timeline_GetBeginTimeDelegate>("Timeline_GetBeginTime");
    _Timeline_SetBeginTime = lib.Find<Timeline_SetBeginTimeDelegate>("Timeline_SetBeginTime");
    _Timeline_GetDecelerationRatio = lib.Find<Timeline_GetDecelerationRatioDelegate>("Timeline_GetDecelerationRatio");
    _Timeline_SetDecelerationRatio = lib.Find<Timeline_SetDecelerationRatioDelegate>("Timeline_SetDecelerationRatio");
    _Timeline_GetDuration = lib.Find<Timeline_GetDurationDelegate>("Timeline_GetDuration");
    _Timeline_SetDuration = lib.Find<Timeline_SetDurationDelegate>("Timeline_SetDuration");
    _Timeline_GetFillBehavior = lib.Find<Timeline_GetFillBehaviorDelegate>("Timeline_GetFillBehavior");
    _Timeline_SetFillBehavior = lib.Find<Timeline_SetFillBehaviorDelegate>("Timeline_SetFillBehavior");
    _Timeline_GetName = lib.Find<Timeline_GetNameDelegate>("Timeline_GetName");
    _Timeline_SetName = lib.Find<Timeline_SetNameDelegate>("Timeline_SetName");
    _Timeline_GetRepeatBehavior = lib.Find<Timeline_GetRepeatBehaviorDelegate>("Timeline_GetRepeatBehavior");
    _Timeline_SetRepeatBehavior = lib.Find<Timeline_SetRepeatBehaviorDelegate>("Timeline_SetRepeatBehavior");
    _Timeline_GetSpeedRatio = lib.Find<Timeline_GetSpeedRatioDelegate>("Timeline_GetSpeedRatio");
    _Timeline_SetSpeedRatio = lib.Find<Timeline_SetSpeedRatioDelegate>("Timeline_SetSpeedRatio");
    _Timeline_CreateClock = lib.Find<Timeline_CreateClockDelegate>("Timeline_CreateClock");
    _Timeline_GetNaturalDuration = lib.Find<Timeline_GetNaturalDurationDelegate>("Timeline_GetNaturalDuration");
    _Timeline_GetSinglePassDuration = lib.Find<Timeline_GetSinglePassDurationDelegate>("Timeline_GetSinglePassDuration");
    _Timeline_GetIterationDuration = lib.Find<Timeline_GetIterationDurationDelegate>("Timeline_GetIterationDuration");
    _Timeline_GetTotalDuration = lib.Find<Timeline_GetTotalDurationDelegate>("Timeline_GetTotalDuration");
    _Timeline_IsTotalDurationAbsolute = lib.Find<Timeline_IsTotalDurationAbsoluteDelegate>("Timeline_IsTotalDurationAbsolute");
    _Timeline_GetNormalizedDuration = lib.Find<Timeline_GetNormalizedDurationDelegate>("Timeline_GetNormalizedDuration");
    _Timeline_CalculateEffectiveDurations = lib.Find<Timeline_CalculateEffectiveDurationsDelegate>("Timeline_CalculateEffectiveDurations");
    _Timeline_GetEffectiveDuration = lib.Find<Timeline_GetEffectiveDurationDelegate>("Timeline_GetEffectiveDuration");
    _Timeline_OnClockDestroyed = lib.Find<Timeline_OnClockDestroyedDelegate>("Timeline_OnClockDestroyed");
    _delete_TimelineGroup = lib.Find<delete_TimelineGroupDelegate>("delete_TimelineGroup");
    _TimelineGroup_GetChildren = lib.Find<TimelineGroup_GetChildrenDelegate>("TimelineGroup_GetChildren");
    _TimelineGroup_SetChildren = lib.Find<TimelineGroup_SetChildrenDelegate>("TimelineGroup_SetChildren");
    _new_ParallelTimeline__SWIG_0 = lib.Find<new_ParallelTimeline__SWIG_0Delegate>("new_ParallelTimeline__SWIG_0");
    _new_ParallelTimeline__SWIG_1 = lib.Find<new_ParallelTimeline__SWIG_1Delegate>("new_ParallelTimeline__SWIG_1");
    _delete_ParallelTimeline = lib.Find<delete_ParallelTimelineDelegate>("delete_ParallelTimeline");
    _ParallelTimeline_GetSlipBehavior = lib.Find<ParallelTimeline_GetSlipBehaviorDelegate>("ParallelTimeline_GetSlipBehavior");
    _ParallelTimeline_SetSlipBehavior = lib.Find<ParallelTimeline_SetSlipBehaviorDelegate>("ParallelTimeline_SetSlipBehavior");
    _ParallelTimeline_GetNaturalDuration = lib.Find<ParallelTimeline_GetNaturalDurationDelegate>("ParallelTimeline_GetNaturalDuration");
    _ParallelTimeline_GetEffectiveDuration = lib.Find<ParallelTimeline_GetEffectiveDurationDelegate>("ParallelTimeline_GetEffectiveDuration");
    _new_PauseStoryboard = lib.Find<new_PauseStoryboardDelegate>("new_PauseStoryboard");
    _delete_PauseStoryboard = lib.Find<delete_PauseStoryboardDelegate>("delete_PauseStoryboard");
    _new_PowerEase = lib.Find<new_PowerEaseDelegate>("new_PowerEase");
    _PowerEase_GetPower = lib.Find<PowerEase_GetPowerDelegate>("PowerEase_GetPower");
    _PowerEase_SetPower = lib.Find<PowerEase_SetPowerDelegate>("PowerEase_SetPower");
    _delete_PowerEase = lib.Find<delete_PowerEaseDelegate>("delete_PowerEase");
    _new_QuadraticEase = lib.Find<new_QuadraticEaseDelegate>("new_QuadraticEase");
    _delete_QuadraticEase = lib.Find<delete_QuadraticEaseDelegate>("delete_QuadraticEase");
    _new_QuarticEase = lib.Find<new_QuarticEaseDelegate>("new_QuarticEase");
    _delete_QuarticEase = lib.Find<delete_QuarticEaseDelegate>("delete_QuarticEase");
    _new_QuinticEase = lib.Find<new_QuinticEaseDelegate>("new_QuinticEase");
    _delete_QuinticEase = lib.Find<delete_QuinticEaseDelegate>("delete_QuinticEase");
    _new_RepeatBehavior__SWIG_0 = lib.Find<new_RepeatBehavior__SWIG_0Delegate>("new_RepeatBehavior__SWIG_0");
    _new_RepeatBehavior__SWIG_1 = lib.Find<new_RepeatBehavior__SWIG_1Delegate>("new_RepeatBehavior__SWIG_1");
    _new_RepeatBehavior__SWIG_2 = lib.Find<new_RepeatBehavior__SWIG_2Delegate>("new_RepeatBehavior__SWIG_2");
    _RepeatBehavior_Forever = lib.Find<RepeatBehavior_ForeverDelegate>("RepeatBehavior_Forever");
    _RepeatBehavior_Parse = lib.Find<RepeatBehavior_ParseDelegate>("RepeatBehavior_Parse");
    _RepeatBehavior_TryParse = lib.Find<RepeatBehavior_TryParseDelegate>("RepeatBehavior_TryParse");
    _RepeatBehavior_GetRepeatMode = lib.Find<RepeatBehavior_GetRepeatModeDelegate>("RepeatBehavior_GetRepeatMode");
    _RepeatBehavior_GetCount = lib.Find<RepeatBehavior_GetCountDelegate>("RepeatBehavior_GetCount");
    _RepeatBehavior_GetDuration = lib.Find<RepeatBehavior_GetDurationDelegate>("RepeatBehavior_GetDuration");
    _delete_RepeatBehavior = lib.Find<delete_RepeatBehaviorDelegate>("delete_RepeatBehavior");
    _new_ResumeStoryboard = lib.Find<new_ResumeStoryboardDelegate>("new_ResumeStoryboard");
    _delete_ResumeStoryboard = lib.Find<delete_ResumeStoryboardDelegate>("delete_ResumeStoryboard");
    _new_SineEase = lib.Find<new_SineEaseDelegate>("new_SineEase");
    _delete_SineEase = lib.Find<delete_SineEaseDelegate>("delete_SineEase");
    _new_StopStoryboard = lib.Find<new_StopStoryboardDelegate>("new_StopStoryboard");
    _delete_StopStoryboard = lib.Find<delete_StopStoryboardDelegate>("delete_StopStoryboard");
    _AnimationTarget__object_set = lib.Find<AnimationTarget__object_setDelegate>("AnimationTarget__object_set");
    _AnimationTarget__object_get = lib.Find<AnimationTarget__object_getDelegate>("AnimationTarget__object_get");
    _AnimationTarget_dp_set = lib.Find<AnimationTarget_dp_setDelegate>("AnimationTarget_dp_set");
    _AnimationTarget_dp_get = lib.Find<AnimationTarget_dp_getDelegate>("AnimationTarget_dp_get");
    _new_AnimationTarget = lib.Find<new_AnimationTargetDelegate>("new_AnimationTarget");
    _delete_AnimationTarget = lib.Find<delete_AnimationTargetDelegate>("delete_AnimationTarget");
    _new_Storyboard__SWIG_0 = lib.Find<new_Storyboard__SWIG_0Delegate>("new_Storyboard__SWIG_0");
    _new_Storyboard__SWIG_1 = lib.Find<new_Storyboard__SWIG_1Delegate>("new_Storyboard__SWIG_1");
    _delete_Storyboard = lib.Find<delete_StoryboardDelegate>("delete_Storyboard");
    _Storyboard_GetTargetName = lib.Find<Storyboard_GetTargetNameDelegate>("Storyboard_GetTargetName");
    _Storyboard_SetTargetName = lib.Find<Storyboard_SetTargetNameDelegate>("Storyboard_SetTargetName");
    _Storyboard_GetTargetProperty = lib.Find<Storyboard_GetTargetPropertyDelegate>("Storyboard_GetTargetProperty");
    _Storyboard_SetTargetProperty = lib.Find<Storyboard_SetTargetPropertyDelegate>("Storyboard_SetTargetProperty");
    _Storyboard_GetTarget = lib.Find<Storyboard_GetTargetDelegate>("Storyboard_GetTarget");
    _Storyboard_SetTarget = lib.Find<Storyboard_SetTargetDelegate>("Storyboard_SetTarget");
    _Storyboard_Begin__SWIG_0 = lib.Find<Storyboard_Begin__SWIG_0Delegate>("Storyboard_Begin__SWIG_0");
    _Storyboard_Begin__SWIG_1 = lib.Find<Storyboard_Begin__SWIG_1Delegate>("Storyboard_Begin__SWIG_1");
    _Storyboard_Begin__SWIG_2 = lib.Find<Storyboard_Begin__SWIG_2Delegate>("Storyboard_Begin__SWIG_2");
    _Storyboard_Begin__SWIG_3 = lib.Find<Storyboard_Begin__SWIG_3Delegate>("Storyboard_Begin__SWIG_3");
    _Storyboard_Pause = lib.Find<Storyboard_PauseDelegate>("Storyboard_Pause");
    _Storyboard_Resume = lib.Find<Storyboard_ResumeDelegate>("Storyboard_Resume");
    _Storyboard_Stop = lib.Find<Storyboard_StopDelegate>("Storyboard_Stop");
    _Storyboard_Remove = lib.Find<Storyboard_RemoveDelegate>("Storyboard_Remove");
    _Storyboard_IsPlaying = lib.Find<Storyboard_IsPlayingDelegate>("Storyboard_IsPlaying");
    _Storyboard_IsPaused = lib.Find<Storyboard_IsPausedDelegate>("Storyboard_IsPaused");
    _Storyboard_AnimationCompleted = lib.Find<Storyboard_AnimationCompletedDelegate>("Storyboard_AnimationCompleted");
    _new_TimeSpan__SWIG_0 = lib.Find<new_TimeSpan__SWIG_0Delegate>("new_TimeSpan__SWIG_0");
    _new_TimeSpan__SWIG_1 = lib.Find<new_TimeSpan__SWIG_1Delegate>("new_TimeSpan__SWIG_1");
    _new_TimeSpan__SWIG_2 = lib.Find<new_TimeSpan__SWIG_2Delegate>("new_TimeSpan__SWIG_2");
    _new_TimeSpan__SWIG_3 = lib.Find<new_TimeSpan__SWIG_3Delegate>("new_TimeSpan__SWIG_3");
    _new_TimeSpan__SWIG_4 = lib.Find<new_TimeSpan__SWIG_4Delegate>("new_TimeSpan__SWIG_4");
    _new_TimeSpan__SWIG_5 = lib.Find<new_TimeSpan__SWIG_5Delegate>("new_TimeSpan__SWIG_5");
    _TimeSpan_Parse = lib.Find<TimeSpan_ParseDelegate>("TimeSpan_Parse");
    _TimeSpan_TryParse = lib.Find<TimeSpan_TryParseDelegate>("TimeSpan_TryParse");
    _TimeSpan_ToStr = lib.Find<TimeSpan_ToStrDelegate>("TimeSpan_ToStr");
    _TimeSpan_Zero = lib.Find<TimeSpan_ZeroDelegate>("TimeSpan_Zero");
    _TimeSpan_GetDays = lib.Find<TimeSpan_GetDaysDelegate>("TimeSpan_GetDays");
    _TimeSpan_GetHours = lib.Find<TimeSpan_GetHoursDelegate>("TimeSpan_GetHours");
    _TimeSpan_GetMinutes = lib.Find<TimeSpan_GetMinutesDelegate>("TimeSpan_GetMinutes");
    _TimeSpan_GetSeconds = lib.Find<TimeSpan_GetSecondsDelegate>("TimeSpan_GetSeconds");
    _TimeSpan_GetMilliseconds = lib.Find<TimeSpan_GetMillisecondsDelegate>("TimeSpan_GetMilliseconds");
    _TimeSpan_GetTicks = lib.Find<TimeSpan_GetTicksDelegate>("TimeSpan_GetTicks");
    _TimeSpan_GetTimeInSeconds = lib.Find<TimeSpan_GetTimeInSecondsDelegate>("TimeSpan_GetTimeInSeconds");
    _delete_TimeSpan = lib.Find<delete_TimeSpanDelegate>("delete_TimeSpan");
    _new_VisualState = lib.Find<new_VisualStateDelegate>("new_VisualState");
    _VisualState_GetName = lib.Find<VisualState_GetNameDelegate>("VisualState_GetName");
    _VisualState_SetName = lib.Find<VisualState_SetNameDelegate>("VisualState_SetName");
    _VisualState_GetStoryboard = lib.Find<VisualState_GetStoryboardDelegate>("VisualState_GetStoryboard");
    _VisualState_SetStoryboard = lib.Find<VisualState_SetStoryboardDelegate>("VisualState_SetStoryboard");
    _delete_VisualState = lib.Find<delete_VisualStateDelegate>("delete_VisualState");
    _new_VisualStateGroup = lib.Find<new_VisualStateGroupDelegate>("new_VisualStateGroup");
    _delete_VisualStateGroup = lib.Find<delete_VisualStateGroupDelegate>("delete_VisualStateGroup");
    _VisualStateGroup_GetName = lib.Find<VisualStateGroup_GetNameDelegate>("VisualStateGroup_GetName");
    _VisualStateGroup_GetStates = lib.Find<VisualStateGroup_GetStatesDelegate>("VisualStateGroup_GetStates");
    _VisualStateGroup_GetTransitions = lib.Find<VisualStateGroup_GetTransitionsDelegate>("VisualStateGroup_GetTransitions");
    _VisualStateGroup_GetCurrentState = lib.Find<VisualStateGroup_GetCurrentStateDelegate>("VisualStateGroup_GetCurrentState");
    _VisualStateGroup_SetCurrentState = lib.Find<VisualStateGroup_SetCurrentStateDelegate>("VisualStateGroup_SetCurrentState");
    _VisualStateGroup_FindState = lib.Find<VisualStateGroup_FindStateDelegate>("VisualStateGroup_FindState");
    _VisualStateGroup_FindTransition = lib.Find<VisualStateGroup_FindTransitionDelegate>("VisualStateGroup_FindTransition");
    _VisualStateGroup_UpdateAnimations__SWIG_0 = lib.Find<VisualStateGroup_UpdateAnimations__SWIG_0Delegate>("VisualStateGroup_UpdateAnimations__SWIG_0");
    _VisualStateGroup_UpdateAnimations__SWIG_1 = lib.Find<VisualStateGroup_UpdateAnimations__SWIG_1Delegate>("VisualStateGroup_UpdateAnimations__SWIG_1");
    _VisualStateGroup_CreateTransitionStoryboard = lib.Find<VisualStateGroup_CreateTransitionStoryboardDelegate>("VisualStateGroup_CreateTransitionStoryboard");
    _new_VisualStateManager = lib.Find<new_VisualStateManagerDelegate>("new_VisualStateManager");
    _delete_VisualStateManager = lib.Find<delete_VisualStateManagerDelegate>("delete_VisualStateManager");
    _VisualStateManager_GetCustomVisualStateManager = lib.Find<VisualStateManager_GetCustomVisualStateManagerDelegate>("VisualStateManager_GetCustomVisualStateManager");
    _VisualStateManager_SetCustomVisualStateManager = lib.Find<VisualStateManager_SetCustomVisualStateManagerDelegate>("VisualStateManager_SetCustomVisualStateManager");
    _VisualStateManager_GetVisualStateGroups = lib.Find<VisualStateManager_GetVisualStateGroupsDelegate>("VisualStateManager_GetVisualStateGroups");
    _VisualStateManager_SetVisualStateGroups = lib.Find<VisualStateManager_SetVisualStateGroupsDelegate>("VisualStateManager_SetVisualStateGroups");
    _VisualStateManager_GoToState = lib.Find<VisualStateManager_GoToStateDelegate>("VisualStateManager_GoToState");
    _VisualStateManager_GoToElementState = lib.Find<VisualStateManager_GoToElementStateDelegate>("VisualStateManager_GoToElementState");
    _new_VisualTransition = lib.Find<new_VisualTransitionDelegate>("new_VisualTransition");
    _delete_VisualTransition = lib.Find<delete_VisualTransitionDelegate>("delete_VisualTransition");
    _VisualTransition_GetFrom = lib.Find<VisualTransition_GetFromDelegate>("VisualTransition_GetFrom");
    _VisualTransition_SetFrom = lib.Find<VisualTransition_SetFromDelegate>("VisualTransition_SetFrom");
    _VisualTransition_GetTo = lib.Find<VisualTransition_GetToDelegate>("VisualTransition_GetTo");
    _VisualTransition_SetTo = lib.Find<VisualTransition_SetToDelegate>("VisualTransition_SetTo");
    _VisualTransition_GetGeneratedDuration = lib.Find<VisualTransition_GetGeneratedDurationDelegate>("VisualTransition_GetGeneratedDuration");
    _VisualTransition_SetGeneratedDuration = lib.Find<VisualTransition_SetGeneratedDurationDelegate>("VisualTransition_SetGeneratedDuration");
    _VisualTransition_GetGeneratedEasingFunction = lib.Find<VisualTransition_GetGeneratedEasingFunctionDelegate>("VisualTransition_GetGeneratedEasingFunction");
    _VisualTransition_SetGeneratedEasingFunction = lib.Find<VisualTransition_SetGeneratedEasingFunctionDelegate>("VisualTransition_SetGeneratedEasingFunction");
    _VisualTransition_GetStoryboard = lib.Find<VisualTransition_GetStoryboardDelegate>("VisualTransition_GetStoryboard");
    _VisualTransition_SetStoryboard = lib.Find<VisualTransition_SetStoryboardDelegate>("VisualTransition_SetStoryboard");
    _VisualTransition_IsDefault = lib.Find<VisualTransition_IsDefaultDelegate>("VisualTransition_IsDefault");
    _delete_BaseSetterCollection = lib.Find<delete_BaseSetterCollectionDelegate>("delete_BaseSetterCollection");
    _delete_TriggerActionCollection = lib.Find<delete_TriggerActionCollectionDelegate>("delete_TriggerActionCollection");
    _delete_GroupDescriptionCollection = lib.Find<delete_GroupDescriptionCollectionDelegate>("delete_GroupDescriptionCollection");
    _delete_SortDescriptionCollection = lib.Find<delete_SortDescriptionCollectionDelegate>("delete_SortDescriptionCollection");
    _delete_CommandBindingCollection = lib.Find<delete_CommandBindingCollectionDelegate>("delete_CommandBindingCollection");
    _delete_InputBindingCollection = lib.Find<delete_InputBindingCollectionDelegate>("delete_InputBindingCollection");
    _CommandIterator_Get = lib.Find<CommandIterator_GetDelegate>("CommandIterator_Get");
    _CommandIterator_Advance = lib.Find<CommandIterator_AdvanceDelegate>("CommandIterator_Advance");
    _CommandIterator_End = lib.Find<CommandIterator_EndDelegate>("CommandIterator_End");
    _delete_CommandIterator = lib.Find<delete_CommandIteratorDelegate>("delete_CommandIterator");
    _delete_GeometryCollection = lib.Find<delete_GeometryCollectionDelegate>("delete_GeometryCollection");
    _delete_ColumnDefinitionCollection = lib.Find<delete_ColumnDefinitionCollectionDelegate>("delete_ColumnDefinitionCollection");
    _delete_RowDefinitionCollection = lib.Find<delete_RowDefinitionCollectionDelegate>("delete_RowDefinitionCollection");
    _new_Transform2f__SWIG_0 = lib.Find<new_Transform2f__SWIG_0Delegate>("new_Transform2f__SWIG_0");
    _new_Transform2f__SWIG_1 = lib.Find<new_Transform2f__SWIG_1Delegate>("new_Transform2f__SWIG_1");
    _new_Transform2f__SWIG_2 = lib.Find<new_Transform2f__SWIG_2Delegate>("new_Transform2f__SWIG_2");
    _new_Transform2f__SWIG_3 = lib.Find<new_Transform2f__SWIG_3Delegate>("new_Transform2f__SWIG_3");
    _new_Transform2f__SWIG_4 = lib.Find<new_Transform2f__SWIG_4Delegate>("new_Transform2f__SWIG_4");
    _Transform2f_GetData = lib.Find<Transform2f_GetDataDelegate>("Transform2f_GetData");
    _Transform2f_SetUpper2x2 = lib.Find<Transform2f_SetUpper2x2Delegate>("Transform2f_SetUpper2x2");
    _Transform2f_SetTranslation = lib.Find<Transform2f_SetTranslationDelegate>("Transform2f_SetTranslation");
    _Transform2f_GetUpper2x2 = lib.Find<Transform2f_GetUpper2x2Delegate>("Transform2f_GetUpper2x2");
    _Transform2f_GetTranslation = lib.Find<Transform2f_GetTranslationDelegate>("Transform2f_GetTranslation");
    _Transform2f_Identity = lib.Find<Transform2f_IdentityDelegate>("Transform2f_Identity");
    _Transform2f_Scale = lib.Find<Transform2f_ScaleDelegate>("Transform2f_Scale");
    _Transform2f_Trans = lib.Find<Transform2f_TransDelegate>("Transform2f_Trans");
    _Transform2f_Rot = lib.Find<Transform2f_RotDelegate>("Transform2f_Rot");
    _Transform2f_ShearXY = lib.Find<Transform2f_ShearXYDelegate>("Transform2f_ShearXY");
    _Transform2f_ShearYX = lib.Find<Transform2f_ShearYXDelegate>("Transform2f_ShearYX");
    _Transform2f_Skew = lib.Find<Transform2f_SkewDelegate>("Transform2f_Skew");
    _delete_Transform2f = lib.Find<delete_Transform2fDelegate>("delete_Transform2f");
    _delete_ConditionCollection = lib.Find<delete_ConditionCollectionDelegate>("delete_ConditionCollection");
    _new_Matrix4f__SWIG_0 = lib.Find<new_Matrix4f__SWIG_0Delegate>("new_Matrix4f__SWIG_0");
    _new_Matrix4f__SWIG_1 = lib.Find<new_Matrix4f__SWIG_1Delegate>("new_Matrix4f__SWIG_1");
    _new_Matrix4f__SWIG_2 = lib.Find<new_Matrix4f__SWIG_2Delegate>("new_Matrix4f__SWIG_2");
    _new_Matrix4f__SWIG_3 = lib.Find<new_Matrix4f__SWIG_3Delegate>("new_Matrix4f__SWIG_3");
    _new_Matrix4f__SWIG_4 = lib.Find<new_Matrix4f__SWIG_4Delegate>("new_Matrix4f__SWIG_4");
    _new_Matrix4f__SWIG_5 = lib.Find<new_Matrix4f__SWIG_5Delegate>("new_Matrix4f__SWIG_5");
    _Matrix4f_GetData = lib.Find<Matrix4f_GetDataDelegate>("Matrix4f_GetData");
    _Matrix4f_Identity = lib.Find<Matrix4f_IdentityDelegate>("Matrix4f_Identity");
    _Matrix4f_Scale = lib.Find<Matrix4f_ScaleDelegate>("Matrix4f_Scale");
    _Matrix4f_RotX = lib.Find<Matrix4f_RotXDelegate>("Matrix4f_RotX");
    _Matrix4f_RotY = lib.Find<Matrix4f_RotYDelegate>("Matrix4f_RotY");
    _Matrix4f_RotZ = lib.Find<Matrix4f_RotZDelegate>("Matrix4f_RotZ");
    _Matrix4f_Ortho__SWIG_0 = lib.Find<Matrix4f_Ortho__SWIG_0Delegate>("Matrix4f_Ortho__SWIG_0");
    _Matrix4f_Ortho__SWIG_1 = lib.Find<Matrix4f_Ortho__SWIG_1Delegate>("Matrix4f_Ortho__SWIG_1");
    _Matrix4f_Perspective__SWIG_0 = lib.Find<Matrix4f_Perspective__SWIG_0Delegate>("Matrix4f_Perspective__SWIG_0");
    _Matrix4f_PerspectiveFov = lib.Find<Matrix4f_PerspectiveFovDelegate>("Matrix4f_PerspectiveFov");
    _Matrix4f_Perspective__SWIG_1 = lib.Find<Matrix4f_Perspective__SWIG_1Delegate>("Matrix4f_Perspective__SWIG_1");
    _Matrix4f_Viewport = lib.Find<Matrix4f_ViewportDelegate>("Matrix4f_Viewport");
    _delete_Matrix4f = lib.Find<delete_Matrix4fDelegate>("delete_Matrix4f");
    _delete_ResourceDictionaryCollection = lib.Find<delete_ResourceDictionaryCollectionDelegate>("delete_ResourceDictionaryCollection");
    _delete_InputGestureCollection = lib.Find<delete_InputGestureCollectionDelegate>("delete_InputGestureCollection");
    _Vector2f_x_set = lib.Find<Vector2f_x_setDelegate>("Vector2f_x_set");
    _Vector2f_x_get = lib.Find<Vector2f_x_getDelegate>("Vector2f_x_get");
    _Vector2f_y_set = lib.Find<Vector2f_y_setDelegate>("Vector2f_y_set");
    _Vector2f_y_get = lib.Find<Vector2f_y_getDelegate>("Vector2f_y_get");
    _new_Vector2f__SWIG_0 = lib.Find<new_Vector2f__SWIG_0Delegate>("new_Vector2f__SWIG_0");
    _new_Vector2f__SWIG_1 = lib.Find<new_Vector2f__SWIG_1Delegate>("new_Vector2f__SWIG_1");
    _new_Vector2f__SWIG_2 = lib.Find<new_Vector2f__SWIG_2Delegate>("new_Vector2f__SWIG_2");
    _new_Vector2f__SWIG_3 = lib.Find<new_Vector2f__SWIG_3Delegate>("new_Vector2f__SWIG_3");
    _Vector2f_GetData = lib.Find<Vector2f_GetDataDelegate>("Vector2f_GetData");
    _Vector2f_Zero = lib.Find<Vector2f_ZeroDelegate>("Vector2f_Zero");
    _Vector2f_XAxis = lib.Find<Vector2f_XAxisDelegate>("Vector2f_XAxis");
    _Vector2f_YAxis = lib.Find<Vector2f_YAxisDelegate>("Vector2f_YAxis");
    _delete_Vector2f = lib.Find<delete_Vector2fDelegate>("delete_Vector2f");
    _delete_TransformCollection = lib.Find<delete_TransformCollectionDelegate>("delete_TransformCollection");
    _EventIterator_Get = lib.Find<EventIterator_GetDelegate>("EventIterator_Get");
    _EventIterator_Advance = lib.Find<EventIterator_AdvanceDelegate>("EventIterator_Advance");
    _EventIterator_End = lib.Find<EventIterator_EndDelegate>("EventIterator_End");
    _delete_EventIterator = lib.Find<delete_EventIteratorDelegate>("delete_EventIterator");
    _Vector2i_x_set = lib.Find<Vector2i_x_setDelegate>("Vector2i_x_set");
    _Vector2i_x_get = lib.Find<Vector2i_x_getDelegate>("Vector2i_x_get");
    _Vector2i_y_set = lib.Find<Vector2i_y_setDelegate>("Vector2i_y_set");
    _Vector2i_y_get = lib.Find<Vector2i_y_getDelegate>("Vector2i_y_get");
    _new_Vector2i__SWIG_0 = lib.Find<new_Vector2i__SWIG_0Delegate>("new_Vector2i__SWIG_0");
    _new_Vector2i__SWIG_1 = lib.Find<new_Vector2i__SWIG_1Delegate>("new_Vector2i__SWIG_1");
    _new_Vector2i__SWIG_2 = lib.Find<new_Vector2i__SWIG_2Delegate>("new_Vector2i__SWIG_2");
    _new_Vector2i__SWIG_3 = lib.Find<new_Vector2i__SWIG_3Delegate>("new_Vector2i__SWIG_3");
    _Vector2i_GetData = lib.Find<Vector2i_GetDataDelegate>("Vector2i_GetData");
    _Vector2i_Zero = lib.Find<Vector2i_ZeroDelegate>("Vector2i_Zero");
    _Vector2i_XAxis = lib.Find<Vector2i_XAxisDelegate>("Vector2i_XAxis");
    _Vector2i_YAxis = lib.Find<Vector2i_YAxisDelegate>("Vector2i_YAxis");
    _delete_Vector2i = lib.Find<delete_Vector2iDelegate>("delete_Vector2i");
    _new_Matrix3f__SWIG_0 = lib.Find<new_Matrix3f__SWIG_0Delegate>("new_Matrix3f__SWIG_0");
    _new_Matrix3f__SWIG_1 = lib.Find<new_Matrix3f__SWIG_1Delegate>("new_Matrix3f__SWIG_1");
    _new_Matrix3f__SWIG_2 = lib.Find<new_Matrix3f__SWIG_2Delegate>("new_Matrix3f__SWIG_2");
    _new_Matrix3f__SWIG_3 = lib.Find<new_Matrix3f__SWIG_3Delegate>("new_Matrix3f__SWIG_3");
    _new_Matrix3f__SWIG_4 = lib.Find<new_Matrix3f__SWIG_4Delegate>("new_Matrix3f__SWIG_4");
    _new_Matrix3f__SWIG_5 = lib.Find<new_Matrix3f__SWIG_5Delegate>("new_Matrix3f__SWIG_5");
    _Matrix3f_GetData = lib.Find<Matrix3f_GetDataDelegate>("Matrix3f_GetData");
    _Matrix3f_Identity = lib.Find<Matrix3f_IdentityDelegate>("Matrix3f_Identity");
    _Matrix3f_Scale = lib.Find<Matrix3f_ScaleDelegate>("Matrix3f_Scale");
    _Matrix3f_RotX = lib.Find<Matrix3f_RotXDelegate>("Matrix3f_RotX");
    _Matrix3f_RotY = lib.Find<Matrix3f_RotYDelegate>("Matrix3f_RotY");
    _Matrix3f_RotZ = lib.Find<Matrix3f_RotZDelegate>("Matrix3f_RotZ");
    _Matrix3f_EulerZXY = lib.Find<Matrix3f_EulerZXYDelegate>("Matrix3f_EulerZXY");
    _delete_Matrix3f = lib.Find<delete_Matrix3fDelegate>("delete_Matrix3f");
    _new_NullableBool__SWIG_0 = lib.Find<new_NullableBool__SWIG_0Delegate>("new_NullableBool__SWIG_0");
    _new_NullableBool__SWIG_1 = lib.Find<new_NullableBool__SWIG_1Delegate>("new_NullableBool__SWIG_1");
    _NullableBool_GetValue = lib.Find<NullableBool_GetValueDelegate>("NullableBool_GetValue");
    _delete_NullableBool = lib.Find<delete_NullableBoolDelegate>("delete_NullableBool");
    _new_NullableFloat__SWIG_0 = lib.Find<new_NullableFloat__SWIG_0Delegate>("new_NullableFloat__SWIG_0");
    _new_NullableFloat__SWIG_1 = lib.Find<new_NullableFloat__SWIG_1Delegate>("new_NullableFloat__SWIG_1");
    _NullableFloat_GetValue = lib.Find<NullableFloat_GetValueDelegate>("NullableFloat_GetValue");
    _delete_NullableFloat = lib.Find<delete_NullableFloatDelegate>("delete_NullableFloat");
    _new_NullableInt16__SWIG_0 = lib.Find<new_NullableInt16__SWIG_0Delegate>("new_NullableInt16__SWIG_0");
    _new_NullableInt16__SWIG_1 = lib.Find<new_NullableInt16__SWIG_1Delegate>("new_NullableInt16__SWIG_1");
    _NullableInt16_GetValue = lib.Find<NullableInt16_GetValueDelegate>("NullableInt16_GetValue");
    _delete_NullableInt16 = lib.Find<delete_NullableInt16Delegate>("delete_NullableInt16");
    _new_NullableInt32__SWIG_0 = lib.Find<new_NullableInt32__SWIG_0Delegate>("new_NullableInt32__SWIG_0");
    _new_NullableInt32__SWIG_1 = lib.Find<new_NullableInt32__SWIG_1Delegate>("new_NullableInt32__SWIG_1");
    _NullableInt32_GetValue = lib.Find<NullableInt32_GetValueDelegate>("NullableInt32_GetValue");
    _delete_NullableInt32 = lib.Find<delete_NullableInt32Delegate>("delete_NullableInt32");
    _new_DoubleAnimation = lib.Find<new_DoubleAnimationDelegate>("new_DoubleAnimation");
    _delete_DoubleAnimation = lib.Find<delete_DoubleAnimationDelegate>("delete_DoubleAnimation");
    _DoubleAnimation_GetBy = lib.Find<DoubleAnimation_GetByDelegate>("DoubleAnimation_GetBy");
    _DoubleAnimation_SetBy = lib.Find<DoubleAnimation_SetByDelegate>("DoubleAnimation_SetBy");
    _DoubleAnimation_GetFrom = lib.Find<DoubleAnimation_GetFromDelegate>("DoubleAnimation_GetFrom");
    _DoubleAnimation_SetFrom = lib.Find<DoubleAnimation_SetFromDelegate>("DoubleAnimation_SetFrom");
    _DoubleAnimation_GetTo = lib.Find<DoubleAnimation_GetToDelegate>("DoubleAnimation_GetTo");
    _DoubleAnimation_SetTo = lib.Find<DoubleAnimation_SetToDelegate>("DoubleAnimation_SetTo");
    _new_Int16Animation = lib.Find<new_Int16AnimationDelegate>("new_Int16Animation");
    _delete_Int16Animation = lib.Find<delete_Int16AnimationDelegate>("delete_Int16Animation");
    _Int16Animation_GetBy = lib.Find<Int16Animation_GetByDelegate>("Int16Animation_GetBy");
    _Int16Animation_SetBy = lib.Find<Int16Animation_SetByDelegate>("Int16Animation_SetBy");
    _Int16Animation_GetFrom = lib.Find<Int16Animation_GetFromDelegate>("Int16Animation_GetFrom");
    _Int16Animation_SetFrom = lib.Find<Int16Animation_SetFromDelegate>("Int16Animation_SetFrom");
    _Int16Animation_GetTo = lib.Find<Int16Animation_GetToDelegate>("Int16Animation_GetTo");
    _Int16Animation_SetTo = lib.Find<Int16Animation_SetToDelegate>("Int16Animation_SetTo");
    _new_Int32Animation = lib.Find<new_Int32AnimationDelegate>("new_Int32Animation");
    _delete_Int32Animation = lib.Find<delete_Int32AnimationDelegate>("delete_Int32Animation");
    _Int32Animation_GetBy = lib.Find<Int32Animation_GetByDelegate>("Int32Animation_GetBy");
    _Int32Animation_SetBy = lib.Find<Int32Animation_SetByDelegate>("Int32Animation_SetBy");
    _Int32Animation_GetFrom = lib.Find<Int32Animation_GetFromDelegate>("Int32Animation_GetFrom");
    _Int32Animation_SetFrom = lib.Find<Int32Animation_SetFromDelegate>("Int32Animation_SetFrom");
    _Int32Animation_GetTo = lib.Find<Int32Animation_GetToDelegate>("Int32Animation_GetTo");
    _Int32Animation_SetTo = lib.Find<Int32Animation_SetToDelegate>("Int32Animation_SetTo");
    _new_Int64Animation = lib.Find<new_Int64AnimationDelegate>("new_Int64Animation");
    _delete_Int64Animation = lib.Find<delete_Int64AnimationDelegate>("delete_Int64Animation");
    _Int64Animation_GetBy = lib.Find<Int64Animation_GetByDelegate>("Int64Animation_GetBy");
    _Int64Animation_SetBy = lib.Find<Int64Animation_SetByDelegate>("Int64Animation_SetBy");
    _Int64Animation_GetFrom = lib.Find<Int64Animation_GetFromDelegate>("Int64Animation_GetFrom");
    _Int64Animation_SetFrom = lib.Find<Int64Animation_SetFromDelegate>("Int64Animation_SetFrom");
    _Int64Animation_GetTo = lib.Find<Int64Animation_GetToDelegate>("Int64Animation_GetTo");
    _Int64Animation_SetTo = lib.Find<Int64Animation_SetToDelegate>("Int64Animation_SetTo");
    _new_ColorAnimation = lib.Find<new_ColorAnimationDelegate>("new_ColorAnimation");
    _delete_ColorAnimation = lib.Find<delete_ColorAnimationDelegate>("delete_ColorAnimation");
    _ColorAnimation_GetBy = lib.Find<ColorAnimation_GetByDelegate>("ColorAnimation_GetBy");
    _ColorAnimation_SetBy = lib.Find<ColorAnimation_SetByDelegate>("ColorAnimation_SetBy");
    _ColorAnimation_GetFrom = lib.Find<ColorAnimation_GetFromDelegate>("ColorAnimation_GetFrom");
    _ColorAnimation_SetFrom = lib.Find<ColorAnimation_SetFromDelegate>("ColorAnimation_SetFrom");
    _ColorAnimation_GetTo = lib.Find<ColorAnimation_GetToDelegate>("ColorAnimation_GetTo");
    _ColorAnimation_SetTo = lib.Find<ColorAnimation_SetToDelegate>("ColorAnimation_SetTo");
    _new_PointAnimation = lib.Find<new_PointAnimationDelegate>("new_PointAnimation");
    _delete_PointAnimation = lib.Find<delete_PointAnimationDelegate>("delete_PointAnimation");
    _PointAnimation_GetBy = lib.Find<PointAnimation_GetByDelegate>("PointAnimation_GetBy");
    _PointAnimation_SetBy = lib.Find<PointAnimation_SetByDelegate>("PointAnimation_SetBy");
    _PointAnimation_GetFrom = lib.Find<PointAnimation_GetFromDelegate>("PointAnimation_GetFrom");
    _PointAnimation_SetFrom = lib.Find<PointAnimation_SetFromDelegate>("PointAnimation_SetFrom");
    _PointAnimation_GetTo = lib.Find<PointAnimation_GetToDelegate>("PointAnimation_GetTo");
    _PointAnimation_SetTo = lib.Find<PointAnimation_SetToDelegate>("PointAnimation_SetTo");
    _new_RectAnimation = lib.Find<new_RectAnimationDelegate>("new_RectAnimation");
    _delete_RectAnimation = lib.Find<delete_RectAnimationDelegate>("delete_RectAnimation");
    _RectAnimation_GetBy = lib.Find<RectAnimation_GetByDelegate>("RectAnimation_GetBy");
    _RectAnimation_SetBy = lib.Find<RectAnimation_SetByDelegate>("RectAnimation_SetBy");
    _RectAnimation_GetFrom = lib.Find<RectAnimation_GetFromDelegate>("RectAnimation_GetFrom");
    _RectAnimation_SetFrom = lib.Find<RectAnimation_SetFromDelegate>("RectAnimation_SetFrom");
    _RectAnimation_GetTo = lib.Find<RectAnimation_GetToDelegate>("RectAnimation_GetTo");
    _RectAnimation_SetTo = lib.Find<RectAnimation_SetToDelegate>("RectAnimation_SetTo");
    _new_SizeAnimation = lib.Find<new_SizeAnimationDelegate>("new_SizeAnimation");
    _delete_SizeAnimation = lib.Find<delete_SizeAnimationDelegate>("delete_SizeAnimation");
    _SizeAnimation_GetBy = lib.Find<SizeAnimation_GetByDelegate>("SizeAnimation_GetBy");
    _SizeAnimation_SetBy = lib.Find<SizeAnimation_SetByDelegate>("SizeAnimation_SetBy");
    _SizeAnimation_GetFrom = lib.Find<SizeAnimation_GetFromDelegate>("SizeAnimation_GetFrom");
    _SizeAnimation_SetFrom = lib.Find<SizeAnimation_SetFromDelegate>("SizeAnimation_SetFrom");
    _SizeAnimation_GetTo = lib.Find<SizeAnimation_GetToDelegate>("SizeAnimation_GetTo");
    _SizeAnimation_SetTo = lib.Find<SizeAnimation_SetToDelegate>("SizeAnimation_SetTo");
    _new_ThicknessAnimation = lib.Find<new_ThicknessAnimationDelegate>("new_ThicknessAnimation");
    _delete_ThicknessAnimation = lib.Find<delete_ThicknessAnimationDelegate>("delete_ThicknessAnimation");
    _ThicknessAnimation_GetBy = lib.Find<ThicknessAnimation_GetByDelegate>("ThicknessAnimation_GetBy");
    _ThicknessAnimation_SetBy = lib.Find<ThicknessAnimation_SetByDelegate>("ThicknessAnimation_SetBy");
    _ThicknessAnimation_GetFrom = lib.Find<ThicknessAnimation_GetFromDelegate>("ThicknessAnimation_GetFrom");
    _ThicknessAnimation_SetFrom = lib.Find<ThicknessAnimation_SetFromDelegate>("ThicknessAnimation_SetFrom");
    _ThicknessAnimation_GetTo = lib.Find<ThicknessAnimation_GetToDelegate>("ThicknessAnimation_GetTo");
    _ThicknessAnimation_SetTo = lib.Find<ThicknessAnimation_SetToDelegate>("ThicknessAnimation_SetTo");
    _delete_BooleanKeyFrame = lib.Find<delete_BooleanKeyFrameDelegate>("delete_BooleanKeyFrame");
    _BooleanKeyFrame_GetKeyTime = lib.Find<BooleanKeyFrame_GetKeyTimeDelegate>("BooleanKeyFrame_GetKeyTime");
    _BooleanKeyFrame_SetKeyTime = lib.Find<BooleanKeyFrame_SetKeyTimeDelegate>("BooleanKeyFrame_SetKeyTime");
    _BooleanKeyFrame_GetValue = lib.Find<BooleanKeyFrame_GetValueDelegate>("BooleanKeyFrame_GetValue");
    _BooleanKeyFrame_SetValue = lib.Find<BooleanKeyFrame_SetValueDelegate>("BooleanKeyFrame_SetValue");
    _BooleanKeyFrame_InterpolateValue = lib.Find<BooleanKeyFrame_InterpolateValueDelegate>("BooleanKeyFrame_InterpolateValue");
    _BooleanKeyFrame_BoxValue = lib.Find<BooleanKeyFrame_BoxValueDelegate>("BooleanKeyFrame_BoxValue");
    _BooleanKeyFrame_UnboxValue = lib.Find<BooleanKeyFrame_UnboxValueDelegate>("BooleanKeyFrame_UnboxValue");
    _BooleanKeyFrame_Len = lib.Find<BooleanKeyFrame_LenDelegate>("BooleanKeyFrame_Len");
    _delete_DoubleKeyFrame = lib.Find<delete_DoubleKeyFrameDelegate>("delete_DoubleKeyFrame");
    _DoubleKeyFrame_GetKeyTime = lib.Find<DoubleKeyFrame_GetKeyTimeDelegate>("DoubleKeyFrame_GetKeyTime");
    _DoubleKeyFrame_SetKeyTime = lib.Find<DoubleKeyFrame_SetKeyTimeDelegate>("DoubleKeyFrame_SetKeyTime");
    _DoubleKeyFrame_GetValue = lib.Find<DoubleKeyFrame_GetValueDelegate>("DoubleKeyFrame_GetValue");
    _DoubleKeyFrame_SetValue = lib.Find<DoubleKeyFrame_SetValueDelegate>("DoubleKeyFrame_SetValue");
    _DoubleKeyFrame_InterpolateValue = lib.Find<DoubleKeyFrame_InterpolateValueDelegate>("DoubleKeyFrame_InterpolateValue");
    _DoubleKeyFrame_BoxValue = lib.Find<DoubleKeyFrame_BoxValueDelegate>("DoubleKeyFrame_BoxValue");
    _DoubleKeyFrame_UnboxValue = lib.Find<DoubleKeyFrame_UnboxValueDelegate>("DoubleKeyFrame_UnboxValue");
    _DoubleKeyFrame_Len = lib.Find<DoubleKeyFrame_LenDelegate>("DoubleKeyFrame_Len");
    _delete_Int16KeyFrame = lib.Find<delete_Int16KeyFrameDelegate>("delete_Int16KeyFrame");
    _Int16KeyFrame_GetKeyTime = lib.Find<Int16KeyFrame_GetKeyTimeDelegate>("Int16KeyFrame_GetKeyTime");
    _Int16KeyFrame_SetKeyTime = lib.Find<Int16KeyFrame_SetKeyTimeDelegate>("Int16KeyFrame_SetKeyTime");
    _Int16KeyFrame_GetValue = lib.Find<Int16KeyFrame_GetValueDelegate>("Int16KeyFrame_GetValue");
    _Int16KeyFrame_SetValue = lib.Find<Int16KeyFrame_SetValueDelegate>("Int16KeyFrame_SetValue");
    _Int16KeyFrame_InterpolateValue = lib.Find<Int16KeyFrame_InterpolateValueDelegate>("Int16KeyFrame_InterpolateValue");
    _Int16KeyFrame_BoxValue = lib.Find<Int16KeyFrame_BoxValueDelegate>("Int16KeyFrame_BoxValue");
    _Int16KeyFrame_UnboxValue = lib.Find<Int16KeyFrame_UnboxValueDelegate>("Int16KeyFrame_UnboxValue");
    _Int16KeyFrame_Len = lib.Find<Int16KeyFrame_LenDelegate>("Int16KeyFrame_Len");
    _delete_Int32KeyFrame = lib.Find<delete_Int32KeyFrameDelegate>("delete_Int32KeyFrame");
    _Int32KeyFrame_GetKeyTime = lib.Find<Int32KeyFrame_GetKeyTimeDelegate>("Int32KeyFrame_GetKeyTime");
    _Int32KeyFrame_SetKeyTime = lib.Find<Int32KeyFrame_SetKeyTimeDelegate>("Int32KeyFrame_SetKeyTime");
    _Int32KeyFrame_GetValue = lib.Find<Int32KeyFrame_GetValueDelegate>("Int32KeyFrame_GetValue");
    _Int32KeyFrame_SetValue = lib.Find<Int32KeyFrame_SetValueDelegate>("Int32KeyFrame_SetValue");
    _Int32KeyFrame_InterpolateValue = lib.Find<Int32KeyFrame_InterpolateValueDelegate>("Int32KeyFrame_InterpolateValue");
    _Int32KeyFrame_BoxValue = lib.Find<Int32KeyFrame_BoxValueDelegate>("Int32KeyFrame_BoxValue");
    _Int32KeyFrame_UnboxValue = lib.Find<Int32KeyFrame_UnboxValueDelegate>("Int32KeyFrame_UnboxValue");
    _Int32KeyFrame_Len = lib.Find<Int32KeyFrame_LenDelegate>("Int32KeyFrame_Len");
    _delete_ColorKeyFrame = lib.Find<delete_ColorKeyFrameDelegate>("delete_ColorKeyFrame");
    _ColorKeyFrame_GetKeyTime = lib.Find<ColorKeyFrame_GetKeyTimeDelegate>("ColorKeyFrame_GetKeyTime");
    _ColorKeyFrame_SetKeyTime = lib.Find<ColorKeyFrame_SetKeyTimeDelegate>("ColorKeyFrame_SetKeyTime");
    _ColorKeyFrame_GetValue = lib.Find<ColorKeyFrame_GetValueDelegate>("ColorKeyFrame_GetValue");
    _ColorKeyFrame_SetValue = lib.Find<ColorKeyFrame_SetValueDelegate>("ColorKeyFrame_SetValue");
    _ColorKeyFrame_InterpolateValue = lib.Find<ColorKeyFrame_InterpolateValueDelegate>("ColorKeyFrame_InterpolateValue");
    _ColorKeyFrame_BoxValue = lib.Find<ColorKeyFrame_BoxValueDelegate>("ColorKeyFrame_BoxValue");
    _ColorKeyFrame_UnboxValue = lib.Find<ColorKeyFrame_UnboxValueDelegate>("ColorKeyFrame_UnboxValue");
    _ColorKeyFrame_Len = lib.Find<ColorKeyFrame_LenDelegate>("ColorKeyFrame_Len");
    _delete_PointKeyFrame = lib.Find<delete_PointKeyFrameDelegate>("delete_PointKeyFrame");
    _PointKeyFrame_GetKeyTime = lib.Find<PointKeyFrame_GetKeyTimeDelegate>("PointKeyFrame_GetKeyTime");
    _PointKeyFrame_SetKeyTime = lib.Find<PointKeyFrame_SetKeyTimeDelegate>("PointKeyFrame_SetKeyTime");
    _PointKeyFrame_GetValue = lib.Find<PointKeyFrame_GetValueDelegate>("PointKeyFrame_GetValue");
    _PointKeyFrame_SetValue = lib.Find<PointKeyFrame_SetValueDelegate>("PointKeyFrame_SetValue");
    _PointKeyFrame_InterpolateValue = lib.Find<PointKeyFrame_InterpolateValueDelegate>("PointKeyFrame_InterpolateValue");
    _PointKeyFrame_BoxValue = lib.Find<PointKeyFrame_BoxValueDelegate>("PointKeyFrame_BoxValue");
    _PointKeyFrame_UnboxValue = lib.Find<PointKeyFrame_UnboxValueDelegate>("PointKeyFrame_UnboxValue");
    _PointKeyFrame_Len = lib.Find<PointKeyFrame_LenDelegate>("PointKeyFrame_Len");
    _delete_RectKeyFrame = lib.Find<delete_RectKeyFrameDelegate>("delete_RectKeyFrame");
    _RectKeyFrame_GetKeyTime = lib.Find<RectKeyFrame_GetKeyTimeDelegate>("RectKeyFrame_GetKeyTime");
    _RectKeyFrame_SetKeyTime = lib.Find<RectKeyFrame_SetKeyTimeDelegate>("RectKeyFrame_SetKeyTime");
    _RectKeyFrame_GetValue = lib.Find<RectKeyFrame_GetValueDelegate>("RectKeyFrame_GetValue");
    _RectKeyFrame_SetValue = lib.Find<RectKeyFrame_SetValueDelegate>("RectKeyFrame_SetValue");
    _RectKeyFrame_InterpolateValue = lib.Find<RectKeyFrame_InterpolateValueDelegate>("RectKeyFrame_InterpolateValue");
    _RectKeyFrame_BoxValue = lib.Find<RectKeyFrame_BoxValueDelegate>("RectKeyFrame_BoxValue");
    _RectKeyFrame_UnboxValue = lib.Find<RectKeyFrame_UnboxValueDelegate>("RectKeyFrame_UnboxValue");
    _RectKeyFrame_Len = lib.Find<RectKeyFrame_LenDelegate>("RectKeyFrame_Len");
    _delete_SizeKeyFrame = lib.Find<delete_SizeKeyFrameDelegate>("delete_SizeKeyFrame");
    _SizeKeyFrame_GetKeyTime = lib.Find<SizeKeyFrame_GetKeyTimeDelegate>("SizeKeyFrame_GetKeyTime");
    _SizeKeyFrame_SetKeyTime = lib.Find<SizeKeyFrame_SetKeyTimeDelegate>("SizeKeyFrame_SetKeyTime");
    _SizeKeyFrame_GetValue = lib.Find<SizeKeyFrame_GetValueDelegate>("SizeKeyFrame_GetValue");
    _SizeKeyFrame_SetValue = lib.Find<SizeKeyFrame_SetValueDelegate>("SizeKeyFrame_SetValue");
    _SizeKeyFrame_InterpolateValue = lib.Find<SizeKeyFrame_InterpolateValueDelegate>("SizeKeyFrame_InterpolateValue");
    _SizeKeyFrame_BoxValue = lib.Find<SizeKeyFrame_BoxValueDelegate>("SizeKeyFrame_BoxValue");
    _SizeKeyFrame_UnboxValue = lib.Find<SizeKeyFrame_UnboxValueDelegate>("SizeKeyFrame_UnboxValue");
    _SizeKeyFrame_Len = lib.Find<SizeKeyFrame_LenDelegate>("SizeKeyFrame_Len");
    _delete_ThicknessKeyFrame = lib.Find<delete_ThicknessKeyFrameDelegate>("delete_ThicknessKeyFrame");
    _ThicknessKeyFrame_GetKeyTime = lib.Find<ThicknessKeyFrame_GetKeyTimeDelegate>("ThicknessKeyFrame_GetKeyTime");
    _ThicknessKeyFrame_SetKeyTime = lib.Find<ThicknessKeyFrame_SetKeyTimeDelegate>("ThicknessKeyFrame_SetKeyTime");
    _ThicknessKeyFrame_GetValue = lib.Find<ThicknessKeyFrame_GetValueDelegate>("ThicknessKeyFrame_GetValue");
    _ThicknessKeyFrame_SetValue = lib.Find<ThicknessKeyFrame_SetValueDelegate>("ThicknessKeyFrame_SetValue");
    _ThicknessKeyFrame_InterpolateValue = lib.Find<ThicknessKeyFrame_InterpolateValueDelegate>("ThicknessKeyFrame_InterpolateValue");
    _ThicknessKeyFrame_BoxValue = lib.Find<ThicknessKeyFrame_BoxValueDelegate>("ThicknessKeyFrame_BoxValue");
    _ThicknessKeyFrame_UnboxValue = lib.Find<ThicknessKeyFrame_UnboxValueDelegate>("ThicknessKeyFrame_UnboxValue");
    _ThicknessKeyFrame_Len = lib.Find<ThicknessKeyFrame_LenDelegate>("ThicknessKeyFrame_Len");
    _delete_StringKeyFrame = lib.Find<delete_StringKeyFrameDelegate>("delete_StringKeyFrame");
    _StringKeyFrame_GetKeyTime = lib.Find<StringKeyFrame_GetKeyTimeDelegate>("StringKeyFrame_GetKeyTime");
    _StringKeyFrame_SetKeyTime = lib.Find<StringKeyFrame_SetKeyTimeDelegate>("StringKeyFrame_SetKeyTime");
    _StringKeyFrame_GetValue = lib.Find<StringKeyFrame_GetValueDelegate>("StringKeyFrame_GetValue");
    _StringKeyFrame_SetValue = lib.Find<StringKeyFrame_SetValueDelegate>("StringKeyFrame_SetValue");
    _StringKeyFrame_InterpolateValue = lib.Find<StringKeyFrame_InterpolateValueDelegate>("StringKeyFrame_InterpolateValue");
    _StringKeyFrame_BoxValue = lib.Find<StringKeyFrame_BoxValueDelegate>("StringKeyFrame_BoxValue");
    _StringKeyFrame_UnboxValue = lib.Find<StringKeyFrame_UnboxValueDelegate>("StringKeyFrame_UnboxValue");
    _StringKeyFrame_Len = lib.Find<StringKeyFrame_LenDelegate>("StringKeyFrame_Len");
    _new_DiscreteBooleanKeyFrame = lib.Find<new_DiscreteBooleanKeyFrameDelegate>("new_DiscreteBooleanKeyFrame");
    _delete_DiscreteBooleanKeyFrame = lib.Find<delete_DiscreteBooleanKeyFrameDelegate>("delete_DiscreteBooleanKeyFrame");
    _new_DiscreteDoubleKeyFrame = lib.Find<new_DiscreteDoubleKeyFrameDelegate>("new_DiscreteDoubleKeyFrame");
    _delete_DiscreteDoubleKeyFrame = lib.Find<delete_DiscreteDoubleKeyFrameDelegate>("delete_DiscreteDoubleKeyFrame");
    _new_DiscreteInt16KeyFrame = lib.Find<new_DiscreteInt16KeyFrameDelegate>("new_DiscreteInt16KeyFrame");
    _delete_DiscreteInt16KeyFrame = lib.Find<delete_DiscreteInt16KeyFrameDelegate>("delete_DiscreteInt16KeyFrame");
    _new_DiscreteInt32KeyFrame = lib.Find<new_DiscreteInt32KeyFrameDelegate>("new_DiscreteInt32KeyFrame");
    _delete_DiscreteInt32KeyFrame = lib.Find<delete_DiscreteInt32KeyFrameDelegate>("delete_DiscreteInt32KeyFrame");
    _new_DiscreteColorKeyFrame = lib.Find<new_DiscreteColorKeyFrameDelegate>("new_DiscreteColorKeyFrame");
    _delete_DiscreteColorKeyFrame = lib.Find<delete_DiscreteColorKeyFrameDelegate>("delete_DiscreteColorKeyFrame");
    _new_DiscretePointKeyFrame = lib.Find<new_DiscretePointKeyFrameDelegate>("new_DiscretePointKeyFrame");
    _delete_DiscretePointKeyFrame = lib.Find<delete_DiscretePointKeyFrameDelegate>("delete_DiscretePointKeyFrame");
    _new_DiscreteRectKeyFrame = lib.Find<new_DiscreteRectKeyFrameDelegate>("new_DiscreteRectKeyFrame");
    _delete_DiscreteRectKeyFrame = lib.Find<delete_DiscreteRectKeyFrameDelegate>("delete_DiscreteRectKeyFrame");
    _new_DiscreteSizeKeyFrame = lib.Find<new_DiscreteSizeKeyFrameDelegate>("new_DiscreteSizeKeyFrame");
    _delete_DiscreteSizeKeyFrame = lib.Find<delete_DiscreteSizeKeyFrameDelegate>("delete_DiscreteSizeKeyFrame");
    _new_DiscreteThicknessKeyFrame = lib.Find<new_DiscreteThicknessKeyFrameDelegate>("new_DiscreteThicknessKeyFrame");
    _delete_DiscreteThicknessKeyFrame = lib.Find<delete_DiscreteThicknessKeyFrameDelegate>("delete_DiscreteThicknessKeyFrame");
    _new_DiscreteStringKeyFrame = lib.Find<new_DiscreteStringKeyFrameDelegate>("new_DiscreteStringKeyFrame");
    _delete_DiscreteStringKeyFrame = lib.Find<delete_DiscreteStringKeyFrameDelegate>("delete_DiscreteStringKeyFrame");
    _new_EasingDoubleKeyFrame = lib.Find<new_EasingDoubleKeyFrameDelegate>("new_EasingDoubleKeyFrame");
    _delete_EasingDoubleKeyFrame = lib.Find<delete_EasingDoubleKeyFrameDelegate>("delete_EasingDoubleKeyFrame");
    _EasingDoubleKeyFrame_GetEasingFunction = lib.Find<EasingDoubleKeyFrame_GetEasingFunctionDelegate>("EasingDoubleKeyFrame_GetEasingFunction");
    _EasingDoubleKeyFrame_SetEasingFunction = lib.Find<EasingDoubleKeyFrame_SetEasingFunctionDelegate>("EasingDoubleKeyFrame_SetEasingFunction");
    _new_EasingInt16KeyFrame = lib.Find<new_EasingInt16KeyFrameDelegate>("new_EasingInt16KeyFrame");
    _delete_EasingInt16KeyFrame = lib.Find<delete_EasingInt16KeyFrameDelegate>("delete_EasingInt16KeyFrame");
    _EasingInt16KeyFrame_GetEasingFunction = lib.Find<EasingInt16KeyFrame_GetEasingFunctionDelegate>("EasingInt16KeyFrame_GetEasingFunction");
    _EasingInt16KeyFrame_SetEasingFunction = lib.Find<EasingInt16KeyFrame_SetEasingFunctionDelegate>("EasingInt16KeyFrame_SetEasingFunction");
    _new_EasingInt32KeyFrame = lib.Find<new_EasingInt32KeyFrameDelegate>("new_EasingInt32KeyFrame");
    _delete_EasingInt32KeyFrame = lib.Find<delete_EasingInt32KeyFrameDelegate>("delete_EasingInt32KeyFrame");
    _EasingInt32KeyFrame_GetEasingFunction = lib.Find<EasingInt32KeyFrame_GetEasingFunctionDelegate>("EasingInt32KeyFrame_GetEasingFunction");
    _EasingInt32KeyFrame_SetEasingFunction = lib.Find<EasingInt32KeyFrame_SetEasingFunctionDelegate>("EasingInt32KeyFrame_SetEasingFunction");
    _new_EasingColorKeyFrame = lib.Find<new_EasingColorKeyFrameDelegate>("new_EasingColorKeyFrame");
    _delete_EasingColorKeyFrame = lib.Find<delete_EasingColorKeyFrameDelegate>("delete_EasingColorKeyFrame");
    _EasingColorKeyFrame_GetEasingFunction = lib.Find<EasingColorKeyFrame_GetEasingFunctionDelegate>("EasingColorKeyFrame_GetEasingFunction");
    _EasingColorKeyFrame_SetEasingFunction = lib.Find<EasingColorKeyFrame_SetEasingFunctionDelegate>("EasingColorKeyFrame_SetEasingFunction");
    _new_EasingPointKeyFrame = lib.Find<new_EasingPointKeyFrameDelegate>("new_EasingPointKeyFrame");
    _delete_EasingPointKeyFrame = lib.Find<delete_EasingPointKeyFrameDelegate>("delete_EasingPointKeyFrame");
    _EasingPointKeyFrame_GetEasingFunction = lib.Find<EasingPointKeyFrame_GetEasingFunctionDelegate>("EasingPointKeyFrame_GetEasingFunction");
    _EasingPointKeyFrame_SetEasingFunction = lib.Find<EasingPointKeyFrame_SetEasingFunctionDelegate>("EasingPointKeyFrame_SetEasingFunction");
    _new_EasingRectKeyFrame = lib.Find<new_EasingRectKeyFrameDelegate>("new_EasingRectKeyFrame");
    _delete_EasingRectKeyFrame = lib.Find<delete_EasingRectKeyFrameDelegate>("delete_EasingRectKeyFrame");
    _EasingRectKeyFrame_GetEasingFunction = lib.Find<EasingRectKeyFrame_GetEasingFunctionDelegate>("EasingRectKeyFrame_GetEasingFunction");
    _EasingRectKeyFrame_SetEasingFunction = lib.Find<EasingRectKeyFrame_SetEasingFunctionDelegate>("EasingRectKeyFrame_SetEasingFunction");
    _new_EasingSizeKeyFrame = lib.Find<new_EasingSizeKeyFrameDelegate>("new_EasingSizeKeyFrame");
    _delete_EasingSizeKeyFrame = lib.Find<delete_EasingSizeKeyFrameDelegate>("delete_EasingSizeKeyFrame");
    _EasingSizeKeyFrame_GetEasingFunction = lib.Find<EasingSizeKeyFrame_GetEasingFunctionDelegate>("EasingSizeKeyFrame_GetEasingFunction");
    _EasingSizeKeyFrame_SetEasingFunction = lib.Find<EasingSizeKeyFrame_SetEasingFunctionDelegate>("EasingSizeKeyFrame_SetEasingFunction");
    _new_EasingThicknessKeyFrame = lib.Find<new_EasingThicknessKeyFrameDelegate>("new_EasingThicknessKeyFrame");
    _delete_EasingThicknessKeyFrame = lib.Find<delete_EasingThicknessKeyFrameDelegate>("delete_EasingThicknessKeyFrame");
    _EasingThicknessKeyFrame_GetEasingFunction = lib.Find<EasingThicknessKeyFrame_GetEasingFunctionDelegate>("EasingThicknessKeyFrame_GetEasingFunction");
    _EasingThicknessKeyFrame_SetEasingFunction = lib.Find<EasingThicknessKeyFrame_SetEasingFunctionDelegate>("EasingThicknessKeyFrame_SetEasingFunction");
    _new_LinearDoubleKeyFrame = lib.Find<new_LinearDoubleKeyFrameDelegate>("new_LinearDoubleKeyFrame");
    _delete_LinearDoubleKeyFrame = lib.Find<delete_LinearDoubleKeyFrameDelegate>("delete_LinearDoubleKeyFrame");
    _new_LinearInt16KeyFrame = lib.Find<new_LinearInt16KeyFrameDelegate>("new_LinearInt16KeyFrame");
    _delete_LinearInt16KeyFrame = lib.Find<delete_LinearInt16KeyFrameDelegate>("delete_LinearInt16KeyFrame");
    _new_LinearInt32KeyFrame = lib.Find<new_LinearInt32KeyFrameDelegate>("new_LinearInt32KeyFrame");
    _delete_LinearInt32KeyFrame = lib.Find<delete_LinearInt32KeyFrameDelegate>("delete_LinearInt32KeyFrame");
    _new_LinearColorKeyFrame = lib.Find<new_LinearColorKeyFrameDelegate>("new_LinearColorKeyFrame");
    _delete_LinearColorKeyFrame = lib.Find<delete_LinearColorKeyFrameDelegate>("delete_LinearColorKeyFrame");
    _new_LinearPointKeyFrame = lib.Find<new_LinearPointKeyFrameDelegate>("new_LinearPointKeyFrame");
    _delete_LinearPointKeyFrame = lib.Find<delete_LinearPointKeyFrameDelegate>("delete_LinearPointKeyFrame");
    _new_LinearRectKeyFrame = lib.Find<new_LinearRectKeyFrameDelegate>("new_LinearRectKeyFrame");
    _delete_LinearRectKeyFrame = lib.Find<delete_LinearRectKeyFrameDelegate>("delete_LinearRectKeyFrame");
    _new_LinearSizeKeyFrame = lib.Find<new_LinearSizeKeyFrameDelegate>("new_LinearSizeKeyFrame");
    _delete_LinearSizeKeyFrame = lib.Find<delete_LinearSizeKeyFrameDelegate>("delete_LinearSizeKeyFrame");
    _new_LinearThicknessKeyFrame = lib.Find<new_LinearThicknessKeyFrameDelegate>("new_LinearThicknessKeyFrame");
    _delete_LinearThicknessKeyFrame = lib.Find<delete_LinearThicknessKeyFrameDelegate>("delete_LinearThicknessKeyFrame");
    _new_SplineDoubleKeyFrame = lib.Find<new_SplineDoubleKeyFrameDelegate>("new_SplineDoubleKeyFrame");
    _delete_SplineDoubleKeyFrame = lib.Find<delete_SplineDoubleKeyFrameDelegate>("delete_SplineDoubleKeyFrame");
    _SplineDoubleKeyFrame_GetKeySpline = lib.Find<SplineDoubleKeyFrame_GetKeySplineDelegate>("SplineDoubleKeyFrame_GetKeySpline");
    _SplineDoubleKeyFrame_SetKeySpline = lib.Find<SplineDoubleKeyFrame_SetKeySplineDelegate>("SplineDoubleKeyFrame_SetKeySpline");
    _new_SplineInt16KeyFrame = lib.Find<new_SplineInt16KeyFrameDelegate>("new_SplineInt16KeyFrame");
    _delete_SplineInt16KeyFrame = lib.Find<delete_SplineInt16KeyFrameDelegate>("delete_SplineInt16KeyFrame");
    _SplineInt16KeyFrame_GetKeySpline = lib.Find<SplineInt16KeyFrame_GetKeySplineDelegate>("SplineInt16KeyFrame_GetKeySpline");
    _SplineInt16KeyFrame_SetKeySpline = lib.Find<SplineInt16KeyFrame_SetKeySplineDelegate>("SplineInt16KeyFrame_SetKeySpline");
    _new_SplineInt32KeyFrame = lib.Find<new_SplineInt32KeyFrameDelegate>("new_SplineInt32KeyFrame");
    _delete_SplineInt32KeyFrame = lib.Find<delete_SplineInt32KeyFrameDelegate>("delete_SplineInt32KeyFrame");
    _SplineInt32KeyFrame_GetKeySpline = lib.Find<SplineInt32KeyFrame_GetKeySplineDelegate>("SplineInt32KeyFrame_GetKeySpline");
    _SplineInt32KeyFrame_SetKeySpline = lib.Find<SplineInt32KeyFrame_SetKeySplineDelegate>("SplineInt32KeyFrame_SetKeySpline");
    _new_SplineColorKeyFrame = lib.Find<new_SplineColorKeyFrameDelegate>("new_SplineColorKeyFrame");
    _delete_SplineColorKeyFrame = lib.Find<delete_SplineColorKeyFrameDelegate>("delete_SplineColorKeyFrame");
    _SplineColorKeyFrame_GetKeySpline = lib.Find<SplineColorKeyFrame_GetKeySplineDelegate>("SplineColorKeyFrame_GetKeySpline");
    _SplineColorKeyFrame_SetKeySpline = lib.Find<SplineColorKeyFrame_SetKeySplineDelegate>("SplineColorKeyFrame_SetKeySpline");
    _new_SplinePointKeyFrame = lib.Find<new_SplinePointKeyFrameDelegate>("new_SplinePointKeyFrame");
    _delete_SplinePointKeyFrame = lib.Find<delete_SplinePointKeyFrameDelegate>("delete_SplinePointKeyFrame");
    _SplinePointKeyFrame_GetKeySpline = lib.Find<SplinePointKeyFrame_GetKeySplineDelegate>("SplinePointKeyFrame_GetKeySpline");
    _SplinePointKeyFrame_SetKeySpline = lib.Find<SplinePointKeyFrame_SetKeySplineDelegate>("SplinePointKeyFrame_SetKeySpline");
    _new_SplineRectKeyFrame = lib.Find<new_SplineRectKeyFrameDelegate>("new_SplineRectKeyFrame");
    _delete_SplineRectKeyFrame = lib.Find<delete_SplineRectKeyFrameDelegate>("delete_SplineRectKeyFrame");
    _SplineRectKeyFrame_GetKeySpline = lib.Find<SplineRectKeyFrame_GetKeySplineDelegate>("SplineRectKeyFrame_GetKeySpline");
    _SplineRectKeyFrame_SetKeySpline = lib.Find<SplineRectKeyFrame_SetKeySplineDelegate>("SplineRectKeyFrame_SetKeySpline");
    _new_SplineSizeKeyFrame = lib.Find<new_SplineSizeKeyFrameDelegate>("new_SplineSizeKeyFrame");
    _delete_SplineSizeKeyFrame = lib.Find<delete_SplineSizeKeyFrameDelegate>("delete_SplineSizeKeyFrame");
    _SplineSizeKeyFrame_GetKeySpline = lib.Find<SplineSizeKeyFrame_GetKeySplineDelegate>("SplineSizeKeyFrame_GetKeySpline");
    _SplineSizeKeyFrame_SetKeySpline = lib.Find<SplineSizeKeyFrame_SetKeySplineDelegate>("SplineSizeKeyFrame_SetKeySpline");
    _new_SplineThicknessKeyFrame = lib.Find<new_SplineThicknessKeyFrameDelegate>("new_SplineThicknessKeyFrame");
    _delete_SplineThicknessKeyFrame = lib.Find<delete_SplineThicknessKeyFrameDelegate>("delete_SplineThicknessKeyFrame");
    _SplineThicknessKeyFrame_GetKeySpline = lib.Find<SplineThicknessKeyFrame_GetKeySplineDelegate>("SplineThicknessKeyFrame_GetKeySpline");
    _SplineThicknessKeyFrame_SetKeySpline = lib.Find<SplineThicknessKeyFrame_SetKeySplineDelegate>("SplineThicknessKeyFrame_SetKeySpline");
    _new_AnimationUsingKeyFramesBool = lib.Find<new_AnimationUsingKeyFramesBoolDelegate>("new_AnimationUsingKeyFramesBool");
    _delete_AnimationUsingKeyFramesBool = lib.Find<delete_AnimationUsingKeyFramesBoolDelegate>("delete_AnimationUsingKeyFramesBool");
    _AnimationUsingKeyFramesBool_GetKeyFrames = lib.Find<AnimationUsingKeyFramesBool_GetKeyFramesDelegate>("AnimationUsingKeyFramesBool_GetKeyFrames");
    _AnimationUsingKeyFramesBool_GetAnimatedValue = lib.Find<AnimationUsingKeyFramesBool_GetAnimatedValueDelegate>("AnimationUsingKeyFramesBool_GetAnimatedValue");
    _new_AnimationUsingKeyFramesFloat = lib.Find<new_AnimationUsingKeyFramesFloatDelegate>("new_AnimationUsingKeyFramesFloat");
    _delete_AnimationUsingKeyFramesFloat = lib.Find<delete_AnimationUsingKeyFramesFloatDelegate>("delete_AnimationUsingKeyFramesFloat");
    _AnimationUsingKeyFramesFloat_GetKeyFrames = lib.Find<AnimationUsingKeyFramesFloat_GetKeyFramesDelegate>("AnimationUsingKeyFramesFloat_GetKeyFrames");
    _AnimationUsingKeyFramesFloat_GetAnimatedValue = lib.Find<AnimationUsingKeyFramesFloat_GetAnimatedValueDelegate>("AnimationUsingKeyFramesFloat_GetAnimatedValue");
    _new_AnimationUsingKeyFramesInt16 = lib.Find<new_AnimationUsingKeyFramesInt16Delegate>("new_AnimationUsingKeyFramesInt16");
    _delete_AnimationUsingKeyFramesInt16 = lib.Find<delete_AnimationUsingKeyFramesInt16Delegate>("delete_AnimationUsingKeyFramesInt16");
    _AnimationUsingKeyFramesInt16_GetKeyFrames = lib.Find<AnimationUsingKeyFramesInt16_GetKeyFramesDelegate>("AnimationUsingKeyFramesInt16_GetKeyFrames");
    _AnimationUsingKeyFramesInt16_GetAnimatedValue = lib.Find<AnimationUsingKeyFramesInt16_GetAnimatedValueDelegate>("AnimationUsingKeyFramesInt16_GetAnimatedValue");
    _new_AnimationUsingKeyFramesInt32 = lib.Find<new_AnimationUsingKeyFramesInt32Delegate>("new_AnimationUsingKeyFramesInt32");
    _delete_AnimationUsingKeyFramesInt32 = lib.Find<delete_AnimationUsingKeyFramesInt32Delegate>("delete_AnimationUsingKeyFramesInt32");
    _AnimationUsingKeyFramesInt32_GetKeyFrames = lib.Find<AnimationUsingKeyFramesInt32_GetKeyFramesDelegate>("AnimationUsingKeyFramesInt32_GetKeyFrames");
    _AnimationUsingKeyFramesInt32_GetAnimatedValue = lib.Find<AnimationUsingKeyFramesInt32_GetAnimatedValueDelegate>("AnimationUsingKeyFramesInt32_GetAnimatedValue");
    _new_AnimationUsingKeyFramesColor = lib.Find<new_AnimationUsingKeyFramesColorDelegate>("new_AnimationUsingKeyFramesColor");
    _delete_AnimationUsingKeyFramesColor = lib.Find<delete_AnimationUsingKeyFramesColorDelegate>("delete_AnimationUsingKeyFramesColor");
    _AnimationUsingKeyFramesColor_GetKeyFrames = lib.Find<AnimationUsingKeyFramesColor_GetKeyFramesDelegate>("AnimationUsingKeyFramesColor_GetKeyFrames");
    _AnimationUsingKeyFramesColor_GetAnimatedValue = lib.Find<AnimationUsingKeyFramesColor_GetAnimatedValueDelegate>("AnimationUsingKeyFramesColor_GetAnimatedValue");
    _new_AnimationUsingKeyFramesPoint = lib.Find<new_AnimationUsingKeyFramesPointDelegate>("new_AnimationUsingKeyFramesPoint");
    _delete_AnimationUsingKeyFramesPoint = lib.Find<delete_AnimationUsingKeyFramesPointDelegate>("delete_AnimationUsingKeyFramesPoint");
    _AnimationUsingKeyFramesPoint_GetKeyFrames = lib.Find<AnimationUsingKeyFramesPoint_GetKeyFramesDelegate>("AnimationUsingKeyFramesPoint_GetKeyFrames");
    _AnimationUsingKeyFramesPoint_GetAnimatedValue = lib.Find<AnimationUsingKeyFramesPoint_GetAnimatedValueDelegate>("AnimationUsingKeyFramesPoint_GetAnimatedValue");
    _new_AnimationUsingKeyFramesRect = lib.Find<new_AnimationUsingKeyFramesRectDelegate>("new_AnimationUsingKeyFramesRect");
    _delete_AnimationUsingKeyFramesRect = lib.Find<delete_AnimationUsingKeyFramesRectDelegate>("delete_AnimationUsingKeyFramesRect");
    _AnimationUsingKeyFramesRect_GetKeyFrames = lib.Find<AnimationUsingKeyFramesRect_GetKeyFramesDelegate>("AnimationUsingKeyFramesRect_GetKeyFrames");
    _AnimationUsingKeyFramesRect_GetAnimatedValue = lib.Find<AnimationUsingKeyFramesRect_GetAnimatedValueDelegate>("AnimationUsingKeyFramesRect_GetAnimatedValue");
    _new_AnimationUsingKeyFramesSize = lib.Find<new_AnimationUsingKeyFramesSizeDelegate>("new_AnimationUsingKeyFramesSize");
    _delete_AnimationUsingKeyFramesSize = lib.Find<delete_AnimationUsingKeyFramesSizeDelegate>("delete_AnimationUsingKeyFramesSize");
    _AnimationUsingKeyFramesSize_GetKeyFrames = lib.Find<AnimationUsingKeyFramesSize_GetKeyFramesDelegate>("AnimationUsingKeyFramesSize_GetKeyFrames");
    _AnimationUsingKeyFramesSize_GetAnimatedValue = lib.Find<AnimationUsingKeyFramesSize_GetAnimatedValueDelegate>("AnimationUsingKeyFramesSize_GetAnimatedValue");
    _new_AnimationUsingKeyFramesThickness = lib.Find<new_AnimationUsingKeyFramesThicknessDelegate>("new_AnimationUsingKeyFramesThickness");
    _delete_AnimationUsingKeyFramesThickness = lib.Find<delete_AnimationUsingKeyFramesThicknessDelegate>("delete_AnimationUsingKeyFramesThickness");
    _AnimationUsingKeyFramesThickness_GetKeyFrames = lib.Find<AnimationUsingKeyFramesThickness_GetKeyFramesDelegate>("AnimationUsingKeyFramesThickness_GetKeyFrames");
    _AnimationUsingKeyFramesThickness_GetAnimatedValue = lib.Find<AnimationUsingKeyFramesThickness_GetAnimatedValueDelegate>("AnimationUsingKeyFramesThickness_GetAnimatedValue");
    _new_AnimationUsingKeyFramesNsString = lib.Find<new_AnimationUsingKeyFramesNsStringDelegate>("new_AnimationUsingKeyFramesNsString");
    _delete_AnimationUsingKeyFramesNsString = lib.Find<delete_AnimationUsingKeyFramesNsStringDelegate>("delete_AnimationUsingKeyFramesNsString");
    _AnimationUsingKeyFramesNsString_GetKeyFrames = lib.Find<AnimationUsingKeyFramesNsString_GetKeyFramesDelegate>("AnimationUsingKeyFramesNsString_GetKeyFrames");
    _AnimationUsingKeyFramesNsString_GetAnimatedValue = lib.Find<AnimationUsingKeyFramesNsString_GetAnimatedValueDelegate>("AnimationUsingKeyFramesNsString_GetAnimatedValue");
    _delete_TimelineCollection = lib.Find<delete_TimelineCollectionDelegate>("delete_TimelineCollection");
    RegisterExtendFunctions(lib);
    SWIGExceptionHelper.Init();
    swigExceptionHelper = new SWIGExceptionHelper();
    SWIGStringHelper.Init();
    swigStringHelper = new SWIGStringHelper();
}

public static void RegisterExtendFunctions(Noesis.Library lib)
{
    SWIGExceptionHelper._SWIGRegisterExceptionCallbacks_NoesisGUI_ = lib.Find<SWIGExceptionHelper.SWIGRegisterExceptionCallbacks_NoesisGUI_Delegate>("SWIGRegisterExceptionCallbacks_NoesisGUI_");
    _CheckType_SerializableComponent = lib.Find<CheckType_SerializableComponentDelegate>("CheckType_SerializableComponent");
    _CheckType_DependencyProperty = lib.Find<CheckType_DependencyPropertyDelegate>("CheckType_DependencyProperty");
    _CheckType_PropertyMetadata = lib.Find<CheckType_PropertyMetadataDelegate>("CheckType_PropertyMetadata");
    _Extend_BaseComponent = lib.Find<Extend_BaseComponentDelegate>("Extend_BaseComponent");
    _Extend_SerializableComponent = lib.Find<Extend_SerializableComponentDelegate>("Extend_SerializableComponent");
    _Extend_AdornerDecorator = lib.Find<Extend_AdornerDecoratorDelegate>("Extend_AdornerDecorator");
    _Extend_Animatable = lib.Find<Extend_AnimatableDelegate>("Extend_Animatable");
    _Extend_AtlasSource = lib.Find<Extend_AtlasSourceDelegate>("Extend_AtlasSource");
    _Extend_BaseButton = lib.Find<Extend_BaseButtonDelegate>("Extend_BaseButton");
    _Extend_BaseCommand = lib.Find<Extend_BaseCommandDelegate>("Extend_BaseCommand");
    _Extend_BaseDefinition = lib.Find<Extend_BaseDefinitionDelegate>("Extend_BaseDefinition");
    _Extend_BaseDictionary = lib.Find<Extend_BaseDictionaryDelegate>("Extend_BaseDictionary");
    _Extend_BaseMenu = lib.Find<Extend_BaseMenuDelegate>("Extend_BaseMenu");
    _Extend_BaseSetter = lib.Find<Extend_BaseSetterDelegate>("Extend_BaseSetter");
    _Extend_BaseTextBox = lib.Find<Extend_BaseTextBoxDelegate>("Extend_BaseTextBox");
    _Extend_Binding = lib.Find<Extend_BindingDelegate>("Extend_Binding");
    _Extend_BitmapSource = lib.Find<Extend_BitmapSourceDelegate>("Extend_BitmapSource");
    _Extend_Border = lib.Find<Extend_BorderDelegate>("Extend_Border");
    _Extend_BulletDecorator = lib.Find<Extend_BulletDecoratorDelegate>("Extend_BulletDecorator");
    _Extend_Button = lib.Find<Extend_ButtonDelegate>("Extend_Button");
    _Extend_Canvas = lib.Find<Extend_CanvasDelegate>("Extend_Canvas");
    _Extend_CheckBox = lib.Find<Extend_CheckBoxDelegate>("Extend_CheckBox");
    _Extend_Collection = lib.Find<Extend_CollectionDelegate>("Extend_Collection");
    _Extend_CollectionView = lib.Find<Extend_CollectionViewDelegate>("Extend_CollectionView");
    _Extend_CollectionViewSource = lib.Find<Extend_CollectionViewSourceDelegate>("Extend_CollectionViewSource");
    _Extend_ColumnDefinition = lib.Find<Extend_ColumnDefinitionDelegate>("Extend_ColumnDefinition");
    _Extend_CombinedGeometry = lib.Find<Extend_CombinedGeometryDelegate>("Extend_CombinedGeometry");
    _Extend_ComboBox = lib.Find<Extend_ComboBoxDelegate>("Extend_ComboBox");
    _Extend_ComboBoxItem = lib.Find<Extend_ComboBoxItemDelegate>("Extend_ComboBoxItem");
    _Extend_CommandBinding = lib.Find<Extend_CommandBindingDelegate>("Extend_CommandBinding");
    _Extend_CompositeTransform = lib.Find<Extend_CompositeTransformDelegate>("Extend_CompositeTransform");
    _Extend_Condition = lib.Find<Extend_ConditionDelegate>("Extend_Condition");
    _Extend_ContentControl = lib.Find<Extend_ContentControlDelegate>("Extend_ContentControl");
    _Extend_ContentPresenter = lib.Find<Extend_ContentPresenterDelegate>("Extend_ContentPresenter");
    _Extend_ContextMenu = lib.Find<Extend_ContextMenuDelegate>("Extend_ContextMenu");
    _Extend_Control = lib.Find<Extend_ControlDelegate>("Extend_Control");
    _Extend_ControlTemplate = lib.Find<Extend_ControlTemplateDelegate>("Extend_ControlTemplate");
    _Extend_DashStyle = lib.Find<Extend_DashStyleDelegate>("Extend_DashStyle");
    _Extend_DataTemplate = lib.Find<Extend_DataTemplateDelegate>("Extend_DataTemplate");
    _Extend_Decorator = lib.Find<Extend_DecoratorDelegate>("Extend_Decorator");
    _Extend_Dialog = lib.Find<Extend_DialogDelegate>("Extend_Dialog");
    _Extend_DockPanel = lib.Find<Extend_DockPanelDelegate>("Extend_DockPanel");
    _Extend_DrawingContext = lib.Find<Extend_DrawingContextDelegate>("Extend_DrawingContext");
    _Extend_DropShadowEffect = lib.Find<Extend_DropShadowEffectDelegate>("Extend_DropShadowEffect");
    _Extend_Effect = lib.Find<Extend_EffectDelegate>("Extend_Effect");
    _Extend_Ellipse = lib.Find<Extend_EllipseDelegate>("Extend_Ellipse");
    _Extend_EllipseGeometry = lib.Find<Extend_EllipseGeometryDelegate>("Extend_EllipseGeometry");
    _Extend_EventTrigger = lib.Find<Extend_EventTriggerDelegate>("Extend_EventTrigger");
    _Extend_Expander = lib.Find<Extend_ExpanderDelegate>("Extend_Expander");
    _Extend_FormattedText = lib.Find<Extend_FormattedTextDelegate>("Extend_FormattedText");
    _Extend_FrameworkElement = lib.Find<Extend_FrameworkElementDelegate>("Extend_FrameworkElement");
    _Extend_FrameworkTemplate = lib.Find<Extend_FrameworkTemplateDelegate>("Extend_FrameworkTemplate");
    _Extend_FreezableCollection = lib.Find<Extend_FreezableCollectionDelegate>("Extend_FreezableCollection");
    _Extend_GeometryGroup = lib.Find<Extend_GeometryGroupDelegate>("Extend_GeometryGroup");
    _Extend_GradientStop = lib.Find<Extend_GradientStopDelegate>("Extend_GradientStop");
    _Extend_GradientStopCollection = lib.Find<Extend_GradientStopCollectionDelegate>("Extend_GradientStopCollection");
    _Extend_Grid = lib.Find<Extend_GridDelegate>("Extend_Grid");
    _Extend_GroupBox = lib.Find<Extend_GroupBoxDelegate>("Extend_GroupBox");
    _Extend_HeaderedContentControl = lib.Find<Extend_HeaderedContentControlDelegate>("Extend_HeaderedContentControl");
    _Extend_HeaderedItemsControl = lib.Find<Extend_HeaderedItemsControlDelegate>("Extend_HeaderedItemsControl");
    _Extend_Image = lib.Find<Extend_ImageDelegate>("Extend_Image");
    _Extend_ImageAtlasList = lib.Find<Extend_ImageAtlasListDelegate>("Extend_ImageAtlasList");
    _Extend_ImageBrush = lib.Find<Extend_ImageBrushDelegate>("Extend_ImageBrush");
    _Extend_InputBinding = lib.Find<Extend_InputBindingDelegate>("Extend_InputBinding");
    _Extend_ItemCollection = lib.Find<Extend_ItemCollectionDelegate>("Extend_ItemCollection");
    _Extend_ItemsControl = lib.Find<Extend_ItemsControlDelegate>("Extend_ItemsControl");
    _Extend_ItemsPanelTemplate = lib.Find<Extend_ItemsPanelTemplateDelegate>("Extend_ItemsPanelTemplate");
    _Extend_ItemsPresenter = lib.Find<Extend_ItemsPresenterDelegate>("Extend_ItemsPresenter");
    _Extend_KeyBinding = lib.Find<Extend_KeyBindingDelegate>("Extend_KeyBinding");
    _Extend_KeyboardNavigation = lib.Find<Extend_KeyboardNavigationDelegate>("Extend_KeyboardNavigation");
    _Extend_KeyGesture = lib.Find<Extend_KeyGestureDelegate>("Extend_KeyGesture");
    _Extend_Label = lib.Find<Extend_LabelDelegate>("Extend_Label");
    _Extend_Line = lib.Find<Extend_LineDelegate>("Extend_Line");
    _Extend_LinearGradientBrush = lib.Find<Extend_LinearGradientBrushDelegate>("Extend_LinearGradientBrush");
    _Extend_LineGeometry = lib.Find<Extend_LineGeometryDelegate>("Extend_LineGeometry");
    _Extend_ListBox = lib.Find<Extend_ListBoxDelegate>("Extend_ListBox");
    _Extend_ListBoxItem = lib.Find<Extend_ListBoxItemDelegate>("Extend_ListBoxItem");
    _Extend_Matrix3DProjection = lib.Find<Extend_Matrix3DProjectionDelegate>("Extend_Matrix3DProjection");
    _Extend_MatrixTransform = lib.Find<Extend_MatrixTransformDelegate>("Extend_MatrixTransform");
    _Extend_Menu = lib.Find<Extend_MenuDelegate>("Extend_Menu");
    _Extend_MenuItem = lib.Find<Extend_MenuItemDelegate>("Extend_MenuItem");
    _Extend_MessageDialog = lib.Find<Extend_MessageDialogDelegate>("Extend_MessageDialog");
    _Extend_MultiTrigger = lib.Find<Extend_MultiTriggerDelegate>("Extend_MultiTrigger");
    _Extend_NameScope = lib.Find<Extend_NameScopeDelegate>("Extend_NameScope");
    _Extend_Page = lib.Find<Extend_PageDelegate>("Extend_Page");
    _Extend_Panel = lib.Find<Extend_PanelDelegate>("Extend_Panel");
    _Extend_PasswordBox = lib.Find<Extend_PasswordBoxDelegate>("Extend_PasswordBox");
    _Extend_Path = lib.Find<Extend_PathDelegate>("Extend_Path");
    _Extend_Pen = lib.Find<Extend_PenDelegate>("Extend_Pen");
    _Extend_PlaneProjection = lib.Find<Extend_PlaneProjectionDelegate>("Extend_PlaneProjection");
    _Extend_Popup = lib.Find<Extend_PopupDelegate>("Extend_Popup");
    _Extend_ProgressBar = lib.Find<Extend_ProgressBarDelegate>("Extend_ProgressBar");
    _Extend_PropertyPath = lib.Find<Extend_PropertyPathDelegate>("Extend_PropertyPath");
    _Extend_RadialGradientBrush = lib.Find<Extend_RadialGradientBrushDelegate>("Extend_RadialGradientBrush");
    _Extend_RadioButton = lib.Find<Extend_RadioButtonDelegate>("Extend_RadioButton");
    _Extend_RangeBase = lib.Find<Extend_RangeBaseDelegate>("Extend_RangeBase");
    _Extend_Rectangle = lib.Find<Extend_RectangleDelegate>("Extend_Rectangle");
    _Extend_RectangleGeometry = lib.Find<Extend_RectangleGeometryDelegate>("Extend_RectangleGeometry");
    _Extend_RelativeSource = lib.Find<Extend_RelativeSourceDelegate>("Extend_RelativeSource");
    _Extend_RepeatButton = lib.Find<Extend_RepeatButtonDelegate>("Extend_RepeatButton");
    _Extend_ResourceDictionary = lib.Find<Extend_ResourceDictionaryDelegate>("Extend_ResourceDictionary");
    _Extend_ResourceKeyString = lib.Find<Extend_ResourceKeyStringDelegate>("Extend_ResourceKeyString");
    _Extend_ResourceKeyType = lib.Find<Extend_ResourceKeyTypeDelegate>("Extend_ResourceKeyType");
    _Extend_RotateTransform = lib.Find<Extend_RotateTransformDelegate>("Extend_RotateTransform");
    _Extend_RowDefinition = lib.Find<Extend_RowDefinitionDelegate>("Extend_RowDefinition");
    _Extend_ScaleTransform = lib.Find<Extend_ScaleTransformDelegate>("Extend_ScaleTransform");
    _Extend_ScrollBar = lib.Find<Extend_ScrollBarDelegate>("Extend_ScrollBar");
    _Extend_ScrollContentPresenter = lib.Find<Extend_ScrollContentPresenterDelegate>("Extend_ScrollContentPresenter");
    _Extend_ScrollViewer = lib.Find<Extend_ScrollViewerDelegate>("Extend_ScrollViewer");
    _Extend_Selector = lib.Find<Extend_SelectorDelegate>("Extend_Selector");
    _Extend_Separator = lib.Find<Extend_SeparatorDelegate>("Extend_Separator");
    _Extend_Setter = lib.Find<Extend_SetterDelegate>("Extend_Setter");
    _Extend_Shape = lib.Find<Extend_ShapeDelegate>("Extend_Shape");
    _Extend_SkewTransform = lib.Find<Extend_SkewTransformDelegate>("Extend_SkewTransform");
    _Extend_Slider = lib.Find<Extend_SliderDelegate>("Extend_Slider");
    _Extend_SolidColorBrush = lib.Find<Extend_SolidColorBrushDelegate>("Extend_SolidColorBrush");
    _Extend_StackPanel = lib.Find<Extend_StackPanelDelegate>("Extend_StackPanel");
    _Extend_StatusBar = lib.Find<Extend_StatusBarDelegate>("Extend_StatusBar");
    _Extend_StatusBarItem = lib.Find<Extend_StatusBarItemDelegate>("Extend_StatusBarItem");
    _Extend_StreamGeometry = lib.Find<Extend_StreamGeometryDelegate>("Extend_StreamGeometry");
    _Extend_Style = lib.Find<Extend_StyleDelegate>("Extend_Style");
    _Extend_TabControl = lib.Find<Extend_TabControlDelegate>("Extend_TabControl");
    _Extend_TabItem = lib.Find<Extend_TabItemDelegate>("Extend_TabItem");
    _Extend_TabPanel = lib.Find<Extend_TabPanelDelegate>("Extend_TabPanel");
    _Extend_TemplateBinding = lib.Find<Extend_TemplateBindingDelegate>("Extend_TemplateBinding");
    _Extend_TextBlock = lib.Find<Extend_TextBlockDelegate>("Extend_TextBlock");
    _Extend_TextBox = lib.Find<Extend_TextBoxDelegate>("Extend_TextBox");
    _Extend_TextureSource = lib.Find<Extend_TextureSourceDelegate>("Extend_TextureSource");
    _Extend_Thumb = lib.Find<Extend_ThumbDelegate>("Extend_Thumb");
    _Extend_TickBar = lib.Find<Extend_TickBarDelegate>("Extend_TickBar");
    _Extend_ToggleButton = lib.Find<Extend_ToggleButtonDelegate>("Extend_ToggleButton");
    _Extend_ToolBar = lib.Find<Extend_ToolBarDelegate>("Extend_ToolBar");
    _Extend_ToolBarOverflowPanel = lib.Find<Extend_ToolBarOverflowPanelDelegate>("Extend_ToolBarOverflowPanel");
    _Extend_ToolBarPanel = lib.Find<Extend_ToolBarPanelDelegate>("Extend_ToolBarPanel");
    _Extend_ToolBarTray = lib.Find<Extend_ToolBarTrayDelegate>("Extend_ToolBarTray");
    _Extend_ToolTip = lib.Find<Extend_ToolTipDelegate>("Extend_ToolTip");
    _Extend_Track = lib.Find<Extend_TrackDelegate>("Extend_Track");
    _Extend_TransformGroup = lib.Find<Extend_TransformGroupDelegate>("Extend_TransformGroup");
    _Extend_TranslateTransform = lib.Find<Extend_TranslateTransformDelegate>("Extend_TranslateTransform");
    _Extend_TreeView = lib.Find<Extend_TreeViewDelegate>("Extend_TreeView");
    _Extend_TreeViewItem = lib.Find<Extend_TreeViewItemDelegate>("Extend_TreeViewItem");
    _Extend_Trigger = lib.Find<Extend_TriggerDelegate>("Extend_Trigger");
    _Extend_TriggerCollection = lib.Find<Extend_TriggerCollectionDelegate>("Extend_TriggerCollection");
    _Extend_UIElement = lib.Find<Extend_UIElementDelegate>("Extend_UIElement");
    _Extend_UIElementCollection = lib.Find<Extend_UIElementCollectionDelegate>("Extend_UIElementCollection");
    _Extend_UserControl = lib.Find<Extend_UserControlDelegate>("Extend_UserControl");
    _Extend_Viewbox = lib.Find<Extend_ViewboxDelegate>("Extend_Viewbox");
    _Extend_Visual = lib.Find<Extend_VisualDelegate>("Extend_Visual");
    _Extend_VisualBrush = lib.Find<Extend_VisualBrushDelegate>("Extend_VisualBrush");
    _Extend_VisualCollection = lib.Find<Extend_VisualCollectionDelegate>("Extend_VisualCollection");
    _Extend_Window = lib.Find<Extend_WindowDelegate>("Extend_Window");
    _Extend_WrapPanel = lib.Find<Extend_WrapPanelDelegate>("Extend_WrapPanel");
    _new_SerializableComponent = lib.Find<new_SerializableComponentDelegate>("new_SerializableComponent");
    _delete_SerializableComponent = lib.Find<delete_SerializableComponentDelegate>("delete_SerializableComponent");
    _new_DependencyPropertyChangedEventArgs = lib.Find<new_DependencyPropertyChangedEventArgsDelegate>("new_DependencyPropertyChangedEventArgs");
    _delete_DependencyPropertyChangedEventArgs = lib.Find<delete_DependencyPropertyChangedEventArgsDelegate>("delete_DependencyPropertyChangedEventArgs");
    _delete_DependencyProperty = lib.Find<delete_DependencyPropertyDelegate>("delete_DependencyProperty");
    _new_PropertyMetadata__SWIG_0 = lib.Find<new_PropertyMetadata__SWIG_0Delegate>("new_PropertyMetadata__SWIG_0");
    _new_PropertyMetadata__SWIG_1 = lib.Find<new_PropertyMetadata__SWIG_1Delegate>("new_PropertyMetadata__SWIG_1");
    _new_PropertyMetadata__SWIG_2 = lib.Find<new_PropertyMetadata__SWIG_2Delegate>("new_PropertyMetadata__SWIG_2");
    _new_PropertyMetadata__SWIG_3 = lib.Find<new_PropertyMetadata__SWIG_3Delegate>("new_PropertyMetadata__SWIG_3");
    _new_PropertyMetadata__SWIG_4 = lib.Find<new_PropertyMetadata__SWIG_4Delegate>("new_PropertyMetadata__SWIG_4");
    _new_PropertyMetadata__SWIG_5 = lib.Find<new_PropertyMetadata__SWIG_5Delegate>("new_PropertyMetadata__SWIG_5");
    _new_PropertyMetadata__SWIG_6 = lib.Find<new_PropertyMetadata__SWIG_6Delegate>("new_PropertyMetadata__SWIG_6");
    _delete_PropertyMetadata = lib.Find<delete_PropertyMetadataDelegate>("delete_PropertyMetadata");
    _UIElement_AllowDropProperty_set = lib.Find<UIElement_AllowDropProperty_setDelegate>("UIElement_AllowDropProperty_set");
    _UIElement_AllowDropProperty_get = lib.Find<UIElement_AllowDropProperty_getDelegate>("UIElement_AllowDropProperty_get");
    _UIElement_ClipProperty_set = lib.Find<UIElement_ClipProperty_setDelegate>("UIElement_ClipProperty_set");
    _UIElement_ClipProperty_get = lib.Find<UIElement_ClipProperty_getDelegate>("UIElement_ClipProperty_get");
    _UIElement_ClipToBoundsProperty_set = lib.Find<UIElement_ClipToBoundsProperty_setDelegate>("UIElement_ClipToBoundsProperty_set");
    _UIElement_ClipToBoundsProperty_get = lib.Find<UIElement_ClipToBoundsProperty_getDelegate>("UIElement_ClipToBoundsProperty_get");
    _UIElement_EffectProperty_set = lib.Find<UIElement_EffectProperty_setDelegate>("UIElement_EffectProperty_set");
    _UIElement_EffectProperty_get = lib.Find<UIElement_EffectProperty_getDelegate>("UIElement_EffectProperty_get");
    _UIElement_FocusableProperty_set = lib.Find<UIElement_FocusableProperty_setDelegate>("UIElement_FocusableProperty_set");
    _UIElement_FocusableProperty_get = lib.Find<UIElement_FocusableProperty_getDelegate>("UIElement_FocusableProperty_get");
    _UIElement_IsEnabledProperty_set = lib.Find<UIElement_IsEnabledProperty_setDelegate>("UIElement_IsEnabledProperty_set");
    _UIElement_IsEnabledProperty_get = lib.Find<UIElement_IsEnabledProperty_getDelegate>("UIElement_IsEnabledProperty_get");
    _UIElement_IsFocusedProperty_set = lib.Find<UIElement_IsFocusedProperty_setDelegate>("UIElement_IsFocusedProperty_set");
    _UIElement_IsFocusedProperty_get = lib.Find<UIElement_IsFocusedProperty_getDelegate>("UIElement_IsFocusedProperty_get");
    _UIElement_IsHitTestVisibleProperty_set = lib.Find<UIElement_IsHitTestVisibleProperty_setDelegate>("UIElement_IsHitTestVisibleProperty_set");
    _UIElement_IsHitTestVisibleProperty_get = lib.Find<UIElement_IsHitTestVisibleProperty_getDelegate>("UIElement_IsHitTestVisibleProperty_get");
    _UIElement_IsKeyboardFocusedProperty_set = lib.Find<UIElement_IsKeyboardFocusedProperty_setDelegate>("UIElement_IsKeyboardFocusedProperty_set");
    _UIElement_IsKeyboardFocusedProperty_get = lib.Find<UIElement_IsKeyboardFocusedProperty_getDelegate>("UIElement_IsKeyboardFocusedProperty_get");
    _UIElement_IsKeyboardFocusWithinProperty_set = lib.Find<UIElement_IsKeyboardFocusWithinProperty_setDelegate>("UIElement_IsKeyboardFocusWithinProperty_set");
    _UIElement_IsKeyboardFocusWithinProperty_get = lib.Find<UIElement_IsKeyboardFocusWithinProperty_getDelegate>("UIElement_IsKeyboardFocusWithinProperty_get");
    _UIElement_IsMouseCapturedProperty_set = lib.Find<UIElement_IsMouseCapturedProperty_setDelegate>("UIElement_IsMouseCapturedProperty_set");
    _UIElement_IsMouseCapturedProperty_get = lib.Find<UIElement_IsMouseCapturedProperty_getDelegate>("UIElement_IsMouseCapturedProperty_get");
    _UIElement_IsMouseCaptureWithinProperty_set = lib.Find<UIElement_IsMouseCaptureWithinProperty_setDelegate>("UIElement_IsMouseCaptureWithinProperty_set");
    _UIElement_IsMouseCaptureWithinProperty_get = lib.Find<UIElement_IsMouseCaptureWithinProperty_getDelegate>("UIElement_IsMouseCaptureWithinProperty_get");
    _UIElement_IsMouseDirectlyOverProperty_set = lib.Find<UIElement_IsMouseDirectlyOverProperty_setDelegate>("UIElement_IsMouseDirectlyOverProperty_set");
    _UIElement_IsMouseDirectlyOverProperty_get = lib.Find<UIElement_IsMouseDirectlyOverProperty_getDelegate>("UIElement_IsMouseDirectlyOverProperty_get");
    _UIElement_IsMouseOverProperty_set = lib.Find<UIElement_IsMouseOverProperty_setDelegate>("UIElement_IsMouseOverProperty_set");
    _UIElement_IsMouseOverProperty_get = lib.Find<UIElement_IsMouseOverProperty_getDelegate>("UIElement_IsMouseOverProperty_get");
    _UIElement_IsVisibleProperty_set = lib.Find<UIElement_IsVisibleProperty_setDelegate>("UIElement_IsVisibleProperty_set");
    _UIElement_IsVisibleProperty_get = lib.Find<UIElement_IsVisibleProperty_getDelegate>("UIElement_IsVisibleProperty_get");
    _UIElement_OpacityMaskProperty_set = lib.Find<UIElement_OpacityMaskProperty_setDelegate>("UIElement_OpacityMaskProperty_set");
    _UIElement_OpacityMaskProperty_get = lib.Find<UIElement_OpacityMaskProperty_getDelegate>("UIElement_OpacityMaskProperty_get");
    _UIElement_OpacityProperty_set = lib.Find<UIElement_OpacityProperty_setDelegate>("UIElement_OpacityProperty_set");
    _UIElement_OpacityProperty_get = lib.Find<UIElement_OpacityProperty_getDelegate>("UIElement_OpacityProperty_get");
    _UIElement_ProjectionProperty_set = lib.Find<UIElement_ProjectionProperty_setDelegate>("UIElement_ProjectionProperty_set");
    _UIElement_ProjectionProperty_get = lib.Find<UIElement_ProjectionProperty_getDelegate>("UIElement_ProjectionProperty_get");
    _UIElement_RenderTransformOriginProperty_set = lib.Find<UIElement_RenderTransformOriginProperty_setDelegate>("UIElement_RenderTransformOriginProperty_set");
    _UIElement_RenderTransformOriginProperty_get = lib.Find<UIElement_RenderTransformOriginProperty_getDelegate>("UIElement_RenderTransformOriginProperty_get");
    _UIElement_RenderTransformProperty_set = lib.Find<UIElement_RenderTransformProperty_setDelegate>("UIElement_RenderTransformProperty_set");
    _UIElement_RenderTransformProperty_get = lib.Find<UIElement_RenderTransformProperty_getDelegate>("UIElement_RenderTransformProperty_get");
    _UIElement_VisibilityProperty_set = lib.Find<UIElement_VisibilityProperty_setDelegate>("UIElement_VisibilityProperty_set");
    _UIElement_VisibilityProperty_get = lib.Find<UIElement_VisibilityProperty_getDelegate>("UIElement_VisibilityProperty_get");
    _FrameworkElement_ActualHeightProperty_set = lib.Find<FrameworkElement_ActualHeightProperty_setDelegate>("FrameworkElement_ActualHeightProperty_set");
    _FrameworkElement_ActualHeightProperty_get = lib.Find<FrameworkElement_ActualHeightProperty_getDelegate>("FrameworkElement_ActualHeightProperty_get");
    _FrameworkElement_ActualWidthProperty_set = lib.Find<FrameworkElement_ActualWidthProperty_setDelegate>("FrameworkElement_ActualWidthProperty_set");
    _FrameworkElement_ActualWidthProperty_get = lib.Find<FrameworkElement_ActualWidthProperty_getDelegate>("FrameworkElement_ActualWidthProperty_get");
    _FrameworkElement_ContextMenuProperty_set = lib.Find<FrameworkElement_ContextMenuProperty_setDelegate>("FrameworkElement_ContextMenuProperty_set");
    _FrameworkElement_ContextMenuProperty_get = lib.Find<FrameworkElement_ContextMenuProperty_getDelegate>("FrameworkElement_ContextMenuProperty_get");
    _FrameworkElement_CursorProperty_set = lib.Find<FrameworkElement_CursorProperty_setDelegate>("FrameworkElement_CursorProperty_set");
    _FrameworkElement_CursorProperty_get = lib.Find<FrameworkElement_CursorProperty_getDelegate>("FrameworkElement_CursorProperty_get");
    _FrameworkElement_DataContextProperty_set = lib.Find<FrameworkElement_DataContextProperty_setDelegate>("FrameworkElement_DataContextProperty_set");
    _FrameworkElement_DataContextProperty_get = lib.Find<FrameworkElement_DataContextProperty_getDelegate>("FrameworkElement_DataContextProperty_get");
    _FrameworkElement_DefaultStyleKeyProperty_set = lib.Find<FrameworkElement_DefaultStyleKeyProperty_setDelegate>("FrameworkElement_DefaultStyleKeyProperty_set");
    _FrameworkElement_DefaultStyleKeyProperty_get = lib.Find<FrameworkElement_DefaultStyleKeyProperty_getDelegate>("FrameworkElement_DefaultStyleKeyProperty_get");
    _FrameworkElement_FlowDirectionProperty_set = lib.Find<FrameworkElement_FlowDirectionProperty_setDelegate>("FrameworkElement_FlowDirectionProperty_set");
    _FrameworkElement_FlowDirectionProperty_get = lib.Find<FrameworkElement_FlowDirectionProperty_getDelegate>("FrameworkElement_FlowDirectionProperty_get");
    _FrameworkElement_FocusVisualStyleProperty_set = lib.Find<FrameworkElement_FocusVisualStyleProperty_setDelegate>("FrameworkElement_FocusVisualStyleProperty_set");
    _FrameworkElement_FocusVisualStyleProperty_get = lib.Find<FrameworkElement_FocusVisualStyleProperty_getDelegate>("FrameworkElement_FocusVisualStyleProperty_get");
    _FrameworkElement_ForceCursorProperty_set = lib.Find<FrameworkElement_ForceCursorProperty_setDelegate>("FrameworkElement_ForceCursorProperty_set");
    _FrameworkElement_ForceCursorProperty_get = lib.Find<FrameworkElement_ForceCursorProperty_getDelegate>("FrameworkElement_ForceCursorProperty_get");
    _FrameworkElement_HeightProperty_set = lib.Find<FrameworkElement_HeightProperty_setDelegate>("FrameworkElement_HeightProperty_set");
    _FrameworkElement_HeightProperty_get = lib.Find<FrameworkElement_HeightProperty_getDelegate>("FrameworkElement_HeightProperty_get");
    _FrameworkElement_HorizontalAlignmentProperty_set = lib.Find<FrameworkElement_HorizontalAlignmentProperty_setDelegate>("FrameworkElement_HorizontalAlignmentProperty_set");
    _FrameworkElement_HorizontalAlignmentProperty_get = lib.Find<FrameworkElement_HorizontalAlignmentProperty_getDelegate>("FrameworkElement_HorizontalAlignmentProperty_get");
    _FrameworkElement_InputScopeProperty_set = lib.Find<FrameworkElement_InputScopeProperty_setDelegate>("FrameworkElement_InputScopeProperty_set");
    _FrameworkElement_InputScopeProperty_get = lib.Find<FrameworkElement_InputScopeProperty_getDelegate>("FrameworkElement_InputScopeProperty_get");
    _FrameworkElement_LanguageProperty_set = lib.Find<FrameworkElement_LanguageProperty_setDelegate>("FrameworkElement_LanguageProperty_set");
    _FrameworkElement_LanguageProperty_get = lib.Find<FrameworkElement_LanguageProperty_getDelegate>("FrameworkElement_LanguageProperty_get");
    _FrameworkElement_LayoutTransformProperty_set = lib.Find<FrameworkElement_LayoutTransformProperty_setDelegate>("FrameworkElement_LayoutTransformProperty_set");
    _FrameworkElement_LayoutTransformProperty_get = lib.Find<FrameworkElement_LayoutTransformProperty_getDelegate>("FrameworkElement_LayoutTransformProperty_get");
    _FrameworkElement_MarginProperty_set = lib.Find<FrameworkElement_MarginProperty_setDelegate>("FrameworkElement_MarginProperty_set");
    _FrameworkElement_MarginProperty_get = lib.Find<FrameworkElement_MarginProperty_getDelegate>("FrameworkElement_MarginProperty_get");
    _FrameworkElement_MaxHeightProperty_set = lib.Find<FrameworkElement_MaxHeightProperty_setDelegate>("FrameworkElement_MaxHeightProperty_set");
    _FrameworkElement_MaxHeightProperty_get = lib.Find<FrameworkElement_MaxHeightProperty_getDelegate>("FrameworkElement_MaxHeightProperty_get");
    _FrameworkElement_MaxWidthProperty_set = lib.Find<FrameworkElement_MaxWidthProperty_setDelegate>("FrameworkElement_MaxWidthProperty_set");
    _FrameworkElement_MaxWidthProperty_get = lib.Find<FrameworkElement_MaxWidthProperty_getDelegate>("FrameworkElement_MaxWidthProperty_get");
    _FrameworkElement_MinHeightProperty_set = lib.Find<FrameworkElement_MinHeightProperty_setDelegate>("FrameworkElement_MinHeightProperty_set");
    _FrameworkElement_MinHeightProperty_get = lib.Find<FrameworkElement_MinHeightProperty_getDelegate>("FrameworkElement_MinHeightProperty_get");
    _FrameworkElement_MinWidthProperty_set = lib.Find<FrameworkElement_MinWidthProperty_setDelegate>("FrameworkElement_MinWidthProperty_set");
    _FrameworkElement_MinWidthProperty_get = lib.Find<FrameworkElement_MinWidthProperty_getDelegate>("FrameworkElement_MinWidthProperty_get");
    _FrameworkElement_NameProperty_set = lib.Find<FrameworkElement_NameProperty_setDelegate>("FrameworkElement_NameProperty_set");
    _FrameworkElement_NameProperty_get = lib.Find<FrameworkElement_NameProperty_getDelegate>("FrameworkElement_NameProperty_get");
    _FrameworkElement_OverridesDefaultStyleProperty_set = lib.Find<FrameworkElement_OverridesDefaultStyleProperty_setDelegate>("FrameworkElement_OverridesDefaultStyleProperty_set");
    _FrameworkElement_OverridesDefaultStyleProperty_get = lib.Find<FrameworkElement_OverridesDefaultStyleProperty_getDelegate>("FrameworkElement_OverridesDefaultStyleProperty_get");
    _FrameworkElement_StyleProperty_set = lib.Find<FrameworkElement_StyleProperty_setDelegate>("FrameworkElement_StyleProperty_set");
    _FrameworkElement_StyleProperty_get = lib.Find<FrameworkElement_StyleProperty_getDelegate>("FrameworkElement_StyleProperty_get");
    _FrameworkElement_TagProperty_set = lib.Find<FrameworkElement_TagProperty_setDelegate>("FrameworkElement_TagProperty_set");
    _FrameworkElement_TagProperty_get = lib.Find<FrameworkElement_TagProperty_getDelegate>("FrameworkElement_TagProperty_get");
    _FrameworkElement_ToolTipProperty_set = lib.Find<FrameworkElement_ToolTipProperty_setDelegate>("FrameworkElement_ToolTipProperty_set");
    _FrameworkElement_ToolTipProperty_get = lib.Find<FrameworkElement_ToolTipProperty_getDelegate>("FrameworkElement_ToolTipProperty_get");
    _FrameworkElement_UseLayoutRoundingProperty_set = lib.Find<FrameworkElement_UseLayoutRoundingProperty_setDelegate>("FrameworkElement_UseLayoutRoundingProperty_set");
    _FrameworkElement_UseLayoutRoundingProperty_get = lib.Find<FrameworkElement_UseLayoutRoundingProperty_getDelegate>("FrameworkElement_UseLayoutRoundingProperty_get");
    _FrameworkElement_VerticalAlignmentProperty_set = lib.Find<FrameworkElement_VerticalAlignmentProperty_setDelegate>("FrameworkElement_VerticalAlignmentProperty_set");
    _FrameworkElement_VerticalAlignmentProperty_get = lib.Find<FrameworkElement_VerticalAlignmentProperty_getDelegate>("FrameworkElement_VerticalAlignmentProperty_get");
    _FrameworkElement_WidthProperty_set = lib.Find<FrameworkElement_WidthProperty_setDelegate>("FrameworkElement_WidthProperty_set");
    _FrameworkElement_WidthProperty_get = lib.Find<FrameworkElement_WidthProperty_getDelegate>("FrameworkElement_WidthProperty_get");
    _Control_BackgroundProperty_set = lib.Find<Control_BackgroundProperty_setDelegate>("Control_BackgroundProperty_set");
    _Control_BackgroundProperty_get = lib.Find<Control_BackgroundProperty_getDelegate>("Control_BackgroundProperty_get");
    _Control_BorderBrushProperty_set = lib.Find<Control_BorderBrushProperty_setDelegate>("Control_BorderBrushProperty_set");
    _Control_BorderBrushProperty_get = lib.Find<Control_BorderBrushProperty_getDelegate>("Control_BorderBrushProperty_get");
    _Control_BorderThicknessProperty_set = lib.Find<Control_BorderThicknessProperty_setDelegate>("Control_BorderThicknessProperty_set");
    _Control_BorderThicknessProperty_get = lib.Find<Control_BorderThicknessProperty_getDelegate>("Control_BorderThicknessProperty_get");
    _Control_FontFamilyProperty_set = lib.Find<Control_FontFamilyProperty_setDelegate>("Control_FontFamilyProperty_set");
    _Control_FontFamilyProperty_get = lib.Find<Control_FontFamilyProperty_getDelegate>("Control_FontFamilyProperty_get");
    _Control_FontSizeProperty_set = lib.Find<Control_FontSizeProperty_setDelegate>("Control_FontSizeProperty_set");
    _Control_FontSizeProperty_get = lib.Find<Control_FontSizeProperty_getDelegate>("Control_FontSizeProperty_get");
    _Control_FontStretchProperty_set = lib.Find<Control_FontStretchProperty_setDelegate>("Control_FontStretchProperty_set");
    _Control_FontStretchProperty_get = lib.Find<Control_FontStretchProperty_getDelegate>("Control_FontStretchProperty_get");
    _Control_FontStyleProperty_set = lib.Find<Control_FontStyleProperty_setDelegate>("Control_FontStyleProperty_set");
    _Control_FontStyleProperty_get = lib.Find<Control_FontStyleProperty_getDelegate>("Control_FontStyleProperty_get");
    _Control_FontWeightProperty_set = lib.Find<Control_FontWeightProperty_setDelegate>("Control_FontWeightProperty_set");
    _Control_FontWeightProperty_get = lib.Find<Control_FontWeightProperty_getDelegate>("Control_FontWeightProperty_get");
    _Control_ForegroundProperty_set = lib.Find<Control_ForegroundProperty_setDelegate>("Control_ForegroundProperty_set");
    _Control_ForegroundProperty_get = lib.Find<Control_ForegroundProperty_getDelegate>("Control_ForegroundProperty_get");
    _Control_HorizontalContentAlignmentProperty_set = lib.Find<Control_HorizontalContentAlignmentProperty_setDelegate>("Control_HorizontalContentAlignmentProperty_set");
    _Control_HorizontalContentAlignmentProperty_get = lib.Find<Control_HorizontalContentAlignmentProperty_getDelegate>("Control_HorizontalContentAlignmentProperty_get");
    _Control_IsTabStopProperty_set = lib.Find<Control_IsTabStopProperty_setDelegate>("Control_IsTabStopProperty_set");
    _Control_IsTabStopProperty_get = lib.Find<Control_IsTabStopProperty_getDelegate>("Control_IsTabStopProperty_get");
    _Control_PaddingProperty_set = lib.Find<Control_PaddingProperty_setDelegate>("Control_PaddingProperty_set");
    _Control_PaddingProperty_get = lib.Find<Control_PaddingProperty_getDelegate>("Control_PaddingProperty_get");
    _Control_TabIndexProperty_set = lib.Find<Control_TabIndexProperty_setDelegate>("Control_TabIndexProperty_set");
    _Control_TabIndexProperty_get = lib.Find<Control_TabIndexProperty_getDelegate>("Control_TabIndexProperty_get");
    _Control_TemplateProperty_set = lib.Find<Control_TemplateProperty_setDelegate>("Control_TemplateProperty_set");
    _Control_TemplateProperty_get = lib.Find<Control_TemplateProperty_getDelegate>("Control_TemplateProperty_get");
    _Control_VerticalContentAlignmentProperty_set = lib.Find<Control_VerticalContentAlignmentProperty_setDelegate>("Control_VerticalContentAlignmentProperty_set");
    _Control_VerticalContentAlignmentProperty_get = lib.Find<Control_VerticalContentAlignmentProperty_getDelegate>("Control_VerticalContentAlignmentProperty_get");
    _ContentControl_ContentProperty_set = lib.Find<ContentControl_ContentProperty_setDelegate>("ContentControl_ContentProperty_set");
    _ContentControl_ContentProperty_get = lib.Find<ContentControl_ContentProperty_getDelegate>("ContentControl_ContentProperty_get");
    _ContentControl_ContentTemplateProperty_set = lib.Find<ContentControl_ContentTemplateProperty_setDelegate>("ContentControl_ContentTemplateProperty_set");
    _ContentControl_ContentTemplateProperty_get = lib.Find<ContentControl_ContentTemplateProperty_getDelegate>("ContentControl_ContentTemplateProperty_get");
    _ContentControl_ContentTemplateSelectorProperty_set = lib.Find<ContentControl_ContentTemplateSelectorProperty_setDelegate>("ContentControl_ContentTemplateSelectorProperty_set");
    _ContentControl_ContentTemplateSelectorProperty_get = lib.Find<ContentControl_ContentTemplateSelectorProperty_getDelegate>("ContentControl_ContentTemplateSelectorProperty_get");
    _ContentControl_HasContentProperty_set = lib.Find<ContentControl_HasContentProperty_setDelegate>("ContentControl_HasContentProperty_set");
    _ContentControl_HasContentProperty_get = lib.Find<ContentControl_HasContentProperty_getDelegate>("ContentControl_HasContentProperty_get");
    _Panel_BackgroundProperty_set = lib.Find<Panel_BackgroundProperty_setDelegate>("Panel_BackgroundProperty_set");
    _Panel_BackgroundProperty_get = lib.Find<Panel_BackgroundProperty_getDelegate>("Panel_BackgroundProperty_get");
    _Panel_IsItemsHostProperty_set = lib.Find<Panel_IsItemsHostProperty_setDelegate>("Panel_IsItemsHostProperty_set");
    _Panel_IsItemsHostProperty_get = lib.Find<Panel_IsItemsHostProperty_getDelegate>("Panel_IsItemsHostProperty_get");
    _Panel_ZIndexProperty_set = lib.Find<Panel_ZIndexProperty_setDelegate>("Panel_ZIndexProperty_set");
    _Panel_ZIndexProperty_get = lib.Find<Panel_ZIndexProperty_getDelegate>("Panel_ZIndexProperty_get");
    _ItemsControl_DisplayMemberPathProperty_set = lib.Find<ItemsControl_DisplayMemberPathProperty_setDelegate>("ItemsControl_DisplayMemberPathProperty_set");
    _ItemsControl_DisplayMemberPathProperty_get = lib.Find<ItemsControl_DisplayMemberPathProperty_getDelegate>("ItemsControl_DisplayMemberPathProperty_get");
    _ItemsControl_GroupStyleSelectorProperty_set = lib.Find<ItemsControl_GroupStyleSelectorProperty_setDelegate>("ItemsControl_GroupStyleSelectorProperty_set");
    _ItemsControl_GroupStyleSelectorProperty_get = lib.Find<ItemsControl_GroupStyleSelectorProperty_getDelegate>("ItemsControl_GroupStyleSelectorProperty_get");
    _ItemsControl_HasItemsProperty_set = lib.Find<ItemsControl_HasItemsProperty_setDelegate>("ItemsControl_HasItemsProperty_set");
    _ItemsControl_HasItemsProperty_get = lib.Find<ItemsControl_HasItemsProperty_getDelegate>("ItemsControl_HasItemsProperty_get");
    _ItemsControl_IsGroupingProperty_set = lib.Find<ItemsControl_IsGroupingProperty_setDelegate>("ItemsControl_IsGroupingProperty_set");
    _ItemsControl_IsGroupingProperty_get = lib.Find<ItemsControl_IsGroupingProperty_getDelegate>("ItemsControl_IsGroupingProperty_get");
    _ItemsControl_IsTextSearchEnabledProperty_set = lib.Find<ItemsControl_IsTextSearchEnabledProperty_setDelegate>("ItemsControl_IsTextSearchEnabledProperty_set");
    _ItemsControl_IsTextSearchEnabledProperty_get = lib.Find<ItemsControl_IsTextSearchEnabledProperty_getDelegate>("ItemsControl_IsTextSearchEnabledProperty_get");
    _ItemsControl_ItemContainerStyleProperty_set = lib.Find<ItemsControl_ItemContainerStyleProperty_setDelegate>("ItemsControl_ItemContainerStyleProperty_set");
    _ItemsControl_ItemContainerStyleProperty_get = lib.Find<ItemsControl_ItemContainerStyleProperty_getDelegate>("ItemsControl_ItemContainerStyleProperty_get");
    _ItemsControl_ItemContainerStyleSelectorProperty_set = lib.Find<ItemsControl_ItemContainerStyleSelectorProperty_setDelegate>("ItemsControl_ItemContainerStyleSelectorProperty_set");
    _ItemsControl_ItemContainerStyleSelectorProperty_get = lib.Find<ItemsControl_ItemContainerStyleSelectorProperty_getDelegate>("ItemsControl_ItemContainerStyleSelectorProperty_get");
    _ItemsControl_ItemsPanelProperty_set = lib.Find<ItemsControl_ItemsPanelProperty_setDelegate>("ItemsControl_ItemsPanelProperty_set");
    _ItemsControl_ItemsPanelProperty_get = lib.Find<ItemsControl_ItemsPanelProperty_getDelegate>("ItemsControl_ItemsPanelProperty_get");
    _ItemsControl_ItemsSourceProperty_set = lib.Find<ItemsControl_ItemsSourceProperty_setDelegate>("ItemsControl_ItemsSourceProperty_set");
    _ItemsControl_ItemsSourceProperty_get = lib.Find<ItemsControl_ItemsSourceProperty_getDelegate>("ItemsControl_ItemsSourceProperty_get");
    _ItemsControl_ItemTemplateProperty_set = lib.Find<ItemsControl_ItemTemplateProperty_setDelegate>("ItemsControl_ItemTemplateProperty_set");
    _ItemsControl_ItemTemplateProperty_get = lib.Find<ItemsControl_ItemTemplateProperty_getDelegate>("ItemsControl_ItemTemplateProperty_get");
    _ItemsControl_ItemTemplateSelectorProperty_set = lib.Find<ItemsControl_ItemTemplateSelectorProperty_setDelegate>("ItemsControl_ItemTemplateSelectorProperty_set");
    _ItemsControl_ItemTemplateSelectorProperty_get = lib.Find<ItemsControl_ItemTemplateSelectorProperty_getDelegate>("ItemsControl_ItemTemplateSelectorProperty_get");
    _Selector_IsSelectedProperty_set = lib.Find<Selector_IsSelectedProperty_setDelegate>("Selector_IsSelectedProperty_set");
    _Selector_IsSelectedProperty_get = lib.Find<Selector_IsSelectedProperty_getDelegate>("Selector_IsSelectedProperty_get");
    _Selector_IsSelectionActiveProperty_set = lib.Find<Selector_IsSelectionActiveProperty_setDelegate>("Selector_IsSelectionActiveProperty_set");
    _Selector_IsSelectionActiveProperty_get = lib.Find<Selector_IsSelectionActiveProperty_getDelegate>("Selector_IsSelectionActiveProperty_get");
    _Selector_IsSynchronizedWithCurrentItemProperty_set = lib.Find<Selector_IsSynchronizedWithCurrentItemProperty_setDelegate>("Selector_IsSynchronizedWithCurrentItemProperty_set");
    _Selector_IsSynchronizedWithCurrentItemProperty_get = lib.Find<Selector_IsSynchronizedWithCurrentItemProperty_getDelegate>("Selector_IsSynchronizedWithCurrentItemProperty_get");
    _Selector_SelectedIndexProperty_set = lib.Find<Selector_SelectedIndexProperty_setDelegate>("Selector_SelectedIndexProperty_set");
    _Selector_SelectedIndexProperty_get = lib.Find<Selector_SelectedIndexProperty_getDelegate>("Selector_SelectedIndexProperty_get");
    _Selector_SelectedItemProperty_set = lib.Find<Selector_SelectedItemProperty_setDelegate>("Selector_SelectedItemProperty_set");
    _Selector_SelectedItemProperty_get = lib.Find<Selector_SelectedItemProperty_getDelegate>("Selector_SelectedItemProperty_get");
    _Selector_SelectedValuePathProperty_set = lib.Find<Selector_SelectedValuePathProperty_setDelegate>("Selector_SelectedValuePathProperty_set");
    _Selector_SelectedValuePathProperty_get = lib.Find<Selector_SelectedValuePathProperty_getDelegate>("Selector_SelectedValuePathProperty_get");
    _Selector_SelectedValueProperty_set = lib.Find<Selector_SelectedValueProperty_setDelegate>("Selector_SelectedValueProperty_set");
    _Selector_SelectedValueProperty_get = lib.Find<Selector_SelectedValueProperty_getDelegate>("Selector_SelectedValueProperty_get");
    _Geometry_TransformProperty_set = lib.Find<Geometry_TransformProperty_setDelegate>("Geometry_TransformProperty_set");
    _Geometry_TransformProperty_get = lib.Find<Geometry_TransformProperty_getDelegate>("Geometry_TransformProperty_get");
    _BaseButton_ClickModeProperty_set = lib.Find<BaseButton_ClickModeProperty_setDelegate>("BaseButton_ClickModeProperty_set");
    _BaseButton_ClickModeProperty_get = lib.Find<BaseButton_ClickModeProperty_getDelegate>("BaseButton_ClickModeProperty_get");
    _BaseButton_CommandProperty_set = lib.Find<BaseButton_CommandProperty_setDelegate>("BaseButton_CommandProperty_set");
    _BaseButton_CommandProperty_get = lib.Find<BaseButton_CommandProperty_getDelegate>("BaseButton_CommandProperty_get");
    _BaseButton_CommandParameterProperty_set = lib.Find<BaseButton_CommandParameterProperty_setDelegate>("BaseButton_CommandParameterProperty_set");
    _BaseButton_CommandParameterProperty_get = lib.Find<BaseButton_CommandParameterProperty_getDelegate>("BaseButton_CommandParameterProperty_get");
    _BaseButton_CommandTargetProperty_set = lib.Find<BaseButton_CommandTargetProperty_setDelegate>("BaseButton_CommandTargetProperty_set");
    _BaseButton_CommandTargetProperty_get = lib.Find<BaseButton_CommandTargetProperty_getDelegate>("BaseButton_CommandTargetProperty_get");
    _BaseButton_IsPressedProperty_set = lib.Find<BaseButton_IsPressedProperty_setDelegate>("BaseButton_IsPressedProperty_set");
    _BaseButton_IsPressedProperty_get = lib.Find<BaseButton_IsPressedProperty_getDelegate>("BaseButton_IsPressedProperty_get");
    _ToggleButton_IsCheckedProperty_set = lib.Find<ToggleButton_IsCheckedProperty_setDelegate>("ToggleButton_IsCheckedProperty_set");
    _ToggleButton_IsCheckedProperty_get = lib.Find<ToggleButton_IsCheckedProperty_getDelegate>("ToggleButton_IsCheckedProperty_get");
    _ToggleButton_IsThreeStateProperty_set = lib.Find<ToggleButton_IsThreeStateProperty_setDelegate>("ToggleButton_IsThreeStateProperty_set");
    _ToggleButton_IsThreeStateProperty_get = lib.Find<ToggleButton_IsThreeStateProperty_getDelegate>("ToggleButton_IsThreeStateProperty_get");
    _BaseDefinition_SharedSizeGroupProperty_set = lib.Find<BaseDefinition_SharedSizeGroupProperty_setDelegate>("BaseDefinition_SharedSizeGroupProperty_set");
    _BaseDefinition_SharedSizeGroupProperty_get = lib.Find<BaseDefinition_SharedSizeGroupProperty_getDelegate>("BaseDefinition_SharedSizeGroupProperty_get");
    _BaseTextBox_AcceptsReturnProperty_set = lib.Find<BaseTextBox_AcceptsReturnProperty_setDelegate>("BaseTextBox_AcceptsReturnProperty_set");
    _BaseTextBox_AcceptsReturnProperty_get = lib.Find<BaseTextBox_AcceptsReturnProperty_getDelegate>("BaseTextBox_AcceptsReturnProperty_get");
    _BaseTextBox_AcceptsTabProperty_set = lib.Find<BaseTextBox_AcceptsTabProperty_setDelegate>("BaseTextBox_AcceptsTabProperty_set");
    _BaseTextBox_AcceptsTabProperty_get = lib.Find<BaseTextBox_AcceptsTabProperty_getDelegate>("BaseTextBox_AcceptsTabProperty_get");
    _BaseTextBox_AutoWordSelectionProperty_set = lib.Find<BaseTextBox_AutoWordSelectionProperty_setDelegate>("BaseTextBox_AutoWordSelectionProperty_set");
    _BaseTextBox_AutoWordSelectionProperty_get = lib.Find<BaseTextBox_AutoWordSelectionProperty_getDelegate>("BaseTextBox_AutoWordSelectionProperty_get");
    _BaseTextBox_CaretBrushProperty_set = lib.Find<BaseTextBox_CaretBrushProperty_setDelegate>("BaseTextBox_CaretBrushProperty_set");
    _BaseTextBox_CaretBrushProperty_get = lib.Find<BaseTextBox_CaretBrushProperty_getDelegate>("BaseTextBox_CaretBrushProperty_get");
    _BaseTextBox_HorizontalScrollBarVisibilityProperty_set = lib.Find<BaseTextBox_HorizontalScrollBarVisibilityProperty_setDelegate>("BaseTextBox_HorizontalScrollBarVisibilityProperty_set");
    _BaseTextBox_HorizontalScrollBarVisibilityProperty_get = lib.Find<BaseTextBox_HorizontalScrollBarVisibilityProperty_getDelegate>("BaseTextBox_HorizontalScrollBarVisibilityProperty_get");
    _BaseTextBox_IsReadOnlyProperty_set = lib.Find<BaseTextBox_IsReadOnlyProperty_setDelegate>("BaseTextBox_IsReadOnlyProperty_set");
    _BaseTextBox_IsReadOnlyProperty_get = lib.Find<BaseTextBox_IsReadOnlyProperty_getDelegate>("BaseTextBox_IsReadOnlyProperty_get");
    _BaseTextBox_IsUndoEnabledProperty_set = lib.Find<BaseTextBox_IsUndoEnabledProperty_setDelegate>("BaseTextBox_IsUndoEnabledProperty_set");
    _BaseTextBox_IsUndoEnabledProperty_get = lib.Find<BaseTextBox_IsUndoEnabledProperty_getDelegate>("BaseTextBox_IsUndoEnabledProperty_get");
    _BaseTextBox_SelectionBrushProperty_set = lib.Find<BaseTextBox_SelectionBrushProperty_setDelegate>("BaseTextBox_SelectionBrushProperty_set");
    _BaseTextBox_SelectionBrushProperty_get = lib.Find<BaseTextBox_SelectionBrushProperty_getDelegate>("BaseTextBox_SelectionBrushProperty_get");
    _BaseTextBox_SelectionOpacityProperty_set = lib.Find<BaseTextBox_SelectionOpacityProperty_setDelegate>("BaseTextBox_SelectionOpacityProperty_set");
    _BaseTextBox_SelectionOpacityProperty_get = lib.Find<BaseTextBox_SelectionOpacityProperty_getDelegate>("BaseTextBox_SelectionOpacityProperty_get");
    _BaseTextBox_UndoLimitProperty_set = lib.Find<BaseTextBox_UndoLimitProperty_setDelegate>("BaseTextBox_UndoLimitProperty_set");
    _BaseTextBox_UndoLimitProperty_get = lib.Find<BaseTextBox_UndoLimitProperty_getDelegate>("BaseTextBox_UndoLimitProperty_get");
    _BaseTextBox_VerticalScrollBarVisibilityProperty_set = lib.Find<BaseTextBox_VerticalScrollBarVisibilityProperty_setDelegate>("BaseTextBox_VerticalScrollBarVisibilityProperty_set");
    _BaseTextBox_VerticalScrollBarVisibilityProperty_get = lib.Find<BaseTextBox_VerticalScrollBarVisibilityProperty_getDelegate>("BaseTextBox_VerticalScrollBarVisibilityProperty_get");
    _Border_BackgroundProperty_set = lib.Find<Border_BackgroundProperty_setDelegate>("Border_BackgroundProperty_set");
    _Border_BackgroundProperty_get = lib.Find<Border_BackgroundProperty_getDelegate>("Border_BackgroundProperty_get");
    _Border_BorderBrushProperty_set = lib.Find<Border_BorderBrushProperty_setDelegate>("Border_BorderBrushProperty_set");
    _Border_BorderBrushProperty_get = lib.Find<Border_BorderBrushProperty_getDelegate>("Border_BorderBrushProperty_get");
    _Border_BorderThicknessProperty_set = lib.Find<Border_BorderThicknessProperty_setDelegate>("Border_BorderThicknessProperty_set");
    _Border_BorderThicknessProperty_get = lib.Find<Border_BorderThicknessProperty_getDelegate>("Border_BorderThicknessProperty_get");
    _Border_CornerRadiusProperty_set = lib.Find<Border_CornerRadiusProperty_setDelegate>("Border_CornerRadiusProperty_set");
    _Border_CornerRadiusProperty_get = lib.Find<Border_CornerRadiusProperty_getDelegate>("Border_CornerRadiusProperty_get");
    _Border_PaddingProperty_set = lib.Find<Border_PaddingProperty_setDelegate>("Border_PaddingProperty_set");
    _Border_PaddingProperty_get = lib.Find<Border_PaddingProperty_getDelegate>("Border_PaddingProperty_get");
    _Brush_OpacityProperty_set = lib.Find<Brush_OpacityProperty_setDelegate>("Brush_OpacityProperty_set");
    _Brush_OpacityProperty_get = lib.Find<Brush_OpacityProperty_getDelegate>("Brush_OpacityProperty_get");
    _Brush_RelativeTransformProperty_set = lib.Find<Brush_RelativeTransformProperty_setDelegate>("Brush_RelativeTransformProperty_set");
    _Brush_RelativeTransformProperty_get = lib.Find<Brush_RelativeTransformProperty_getDelegate>("Brush_RelativeTransformProperty_get");
    _Brush_TransformProperty_set = lib.Find<Brush_TransformProperty_setDelegate>("Brush_TransformProperty_set");
    _Brush_TransformProperty_get = lib.Find<Brush_TransformProperty_getDelegate>("Brush_TransformProperty_get");
    _BulletDecorator_BackgroundProperty_set = lib.Find<BulletDecorator_BackgroundProperty_setDelegate>("BulletDecorator_BackgroundProperty_set");
    _BulletDecorator_BackgroundProperty_get = lib.Find<BulletDecorator_BackgroundProperty_getDelegate>("BulletDecorator_BackgroundProperty_get");
    _Button_IsCancelProperty_set = lib.Find<Button_IsCancelProperty_setDelegate>("Button_IsCancelProperty_set");
    _Button_IsCancelProperty_get = lib.Find<Button_IsCancelProperty_getDelegate>("Button_IsCancelProperty_get");
    _Button_IsDefaultProperty_set = lib.Find<Button_IsDefaultProperty_setDelegate>("Button_IsDefaultProperty_set");
    _Button_IsDefaultProperty_get = lib.Find<Button_IsDefaultProperty_getDelegate>("Button_IsDefaultProperty_get");
    _Button_IsDefaultedProperty_set = lib.Find<Button_IsDefaultedProperty_setDelegate>("Button_IsDefaultedProperty_set");
    _Button_IsDefaultedProperty_get = lib.Find<Button_IsDefaultedProperty_getDelegate>("Button_IsDefaultedProperty_get");
    _Canvas_BottomProperty_set = lib.Find<Canvas_BottomProperty_setDelegate>("Canvas_BottomProperty_set");
    _Canvas_BottomProperty_get = lib.Find<Canvas_BottomProperty_getDelegate>("Canvas_BottomProperty_get");
    _Canvas_LeftProperty_set = lib.Find<Canvas_LeftProperty_setDelegate>("Canvas_LeftProperty_set");
    _Canvas_LeftProperty_get = lib.Find<Canvas_LeftProperty_getDelegate>("Canvas_LeftProperty_get");
    _Canvas_RightProperty_set = lib.Find<Canvas_RightProperty_setDelegate>("Canvas_RightProperty_set");
    _Canvas_RightProperty_get = lib.Find<Canvas_RightProperty_getDelegate>("Canvas_RightProperty_get");
    _Canvas_TopProperty_set = lib.Find<Canvas_TopProperty_setDelegate>("Canvas_TopProperty_set");
    _Canvas_TopProperty_get = lib.Find<Canvas_TopProperty_getDelegate>("Canvas_TopProperty_get");
    _CollectionViewSource_CollectionViewTypeProperty_set = lib.Find<CollectionViewSource_CollectionViewTypeProperty_setDelegate>("CollectionViewSource_CollectionViewTypeProperty_set");
    _CollectionViewSource_CollectionViewTypeProperty_get = lib.Find<CollectionViewSource_CollectionViewTypeProperty_getDelegate>("CollectionViewSource_CollectionViewTypeProperty_get");
    _CollectionViewSource_SourceProperty_set = lib.Find<CollectionViewSource_SourceProperty_setDelegate>("CollectionViewSource_SourceProperty_set");
    _CollectionViewSource_SourceProperty_get = lib.Find<CollectionViewSource_SourceProperty_getDelegate>("CollectionViewSource_SourceProperty_get");
    _CollectionViewSource_ViewProperty_set = lib.Find<CollectionViewSource_ViewProperty_setDelegate>("CollectionViewSource_ViewProperty_set");
    _CollectionViewSource_ViewProperty_get = lib.Find<CollectionViewSource_ViewProperty_getDelegate>("CollectionViewSource_ViewProperty_get");
    _ColumnDefinition_WidthProperty_set = lib.Find<ColumnDefinition_WidthProperty_setDelegate>("ColumnDefinition_WidthProperty_set");
    _ColumnDefinition_WidthProperty_get = lib.Find<ColumnDefinition_WidthProperty_getDelegate>("ColumnDefinition_WidthProperty_get");
    _ColumnDefinition_MinWidthProperty_set = lib.Find<ColumnDefinition_MinWidthProperty_setDelegate>("ColumnDefinition_MinWidthProperty_set");
    _ColumnDefinition_MinWidthProperty_get = lib.Find<ColumnDefinition_MinWidthProperty_getDelegate>("ColumnDefinition_MinWidthProperty_get");
    _ColumnDefinition_MaxWidthProperty_set = lib.Find<ColumnDefinition_MaxWidthProperty_setDelegate>("ColumnDefinition_MaxWidthProperty_set");
    _ColumnDefinition_MaxWidthProperty_get = lib.Find<ColumnDefinition_MaxWidthProperty_getDelegate>("ColumnDefinition_MaxWidthProperty_get");
    _CombinedGeometry_Geometry1Property_set = lib.Find<CombinedGeometry_Geometry1Property_setDelegate>("CombinedGeometry_Geometry1Property_set");
    _CombinedGeometry_Geometry1Property_get = lib.Find<CombinedGeometry_Geometry1Property_getDelegate>("CombinedGeometry_Geometry1Property_get");
    _CombinedGeometry_Geometry2Property_set = lib.Find<CombinedGeometry_Geometry2Property_setDelegate>("CombinedGeometry_Geometry2Property_set");
    _CombinedGeometry_Geometry2Property_get = lib.Find<CombinedGeometry_Geometry2Property_getDelegate>("CombinedGeometry_Geometry2Property_get");
    _CombinedGeometry_GeometryCombineModeProperty_set = lib.Find<CombinedGeometry_GeometryCombineModeProperty_setDelegate>("CombinedGeometry_GeometryCombineModeProperty_set");
    _CombinedGeometry_GeometryCombineModeProperty_get = lib.Find<CombinedGeometry_GeometryCombineModeProperty_getDelegate>("CombinedGeometry_GeometryCombineModeProperty_get");
    _ComboBox_IsDropDownOpenProperty_set = lib.Find<ComboBox_IsDropDownOpenProperty_setDelegate>("ComboBox_IsDropDownOpenProperty_set");
    _ComboBox_IsDropDownOpenProperty_get = lib.Find<ComboBox_IsDropDownOpenProperty_getDelegate>("ComboBox_IsDropDownOpenProperty_get");
    _ComboBox_IsEditableProperty_set = lib.Find<ComboBox_IsEditableProperty_setDelegate>("ComboBox_IsEditableProperty_set");
    _ComboBox_IsEditableProperty_get = lib.Find<ComboBox_IsEditableProperty_getDelegate>("ComboBox_IsEditableProperty_get");
    _ComboBox_IsReadOnlyProperty_set = lib.Find<ComboBox_IsReadOnlyProperty_setDelegate>("ComboBox_IsReadOnlyProperty_set");
    _ComboBox_IsReadOnlyProperty_get = lib.Find<ComboBox_IsReadOnlyProperty_getDelegate>("ComboBox_IsReadOnlyProperty_get");
    _ComboBox_MaxDropDownHeightProperty_set = lib.Find<ComboBox_MaxDropDownHeightProperty_setDelegate>("ComboBox_MaxDropDownHeightProperty_set");
    _ComboBox_MaxDropDownHeightProperty_get = lib.Find<ComboBox_MaxDropDownHeightProperty_getDelegate>("ComboBox_MaxDropDownHeightProperty_get");
    _ComboBox_SelectionBoxItemProperty_set = lib.Find<ComboBox_SelectionBoxItemProperty_setDelegate>("ComboBox_SelectionBoxItemProperty_set");
    _ComboBox_SelectionBoxItemProperty_get = lib.Find<ComboBox_SelectionBoxItemProperty_getDelegate>("ComboBox_SelectionBoxItemProperty_get");
    _ComboBox_SelectionBoxItemTemplateProperty_set = lib.Find<ComboBox_SelectionBoxItemTemplateProperty_setDelegate>("ComboBox_SelectionBoxItemTemplateProperty_set");
    _ComboBox_SelectionBoxItemTemplateProperty_get = lib.Find<ComboBox_SelectionBoxItemTemplateProperty_getDelegate>("ComboBox_SelectionBoxItemTemplateProperty_get");
    _ComboBox_StaysOpenOnEditProperty_set = lib.Find<ComboBox_StaysOpenOnEditProperty_setDelegate>("ComboBox_StaysOpenOnEditProperty_set");
    _ComboBox_StaysOpenOnEditProperty_get = lib.Find<ComboBox_StaysOpenOnEditProperty_getDelegate>("ComboBox_StaysOpenOnEditProperty_get");
    _ComboBox_TextProperty_set = lib.Find<ComboBox_TextProperty_setDelegate>("ComboBox_TextProperty_set");
    _ComboBox_TextProperty_get = lib.Find<ComboBox_TextProperty_getDelegate>("ComboBox_TextProperty_get");
    _ListBoxItem_IsSelectedProperty_set = lib.Find<ListBoxItem_IsSelectedProperty_setDelegate>("ListBoxItem_IsSelectedProperty_set");
    _ListBoxItem_IsSelectedProperty_get = lib.Find<ListBoxItem_IsSelectedProperty_getDelegate>("ListBoxItem_IsSelectedProperty_get");
    _ComboBoxItem_IsHighlightedProperty_set = lib.Find<ComboBoxItem_IsHighlightedProperty_setDelegate>("ComboBoxItem_IsHighlightedProperty_set");
    _ComboBoxItem_IsHighlightedProperty_get = lib.Find<ComboBoxItem_IsHighlightedProperty_getDelegate>("ComboBoxItem_IsHighlightedProperty_get");
    _CompositeTransform_CenterXProperty_set = lib.Find<CompositeTransform_CenterXProperty_setDelegate>("CompositeTransform_CenterXProperty_set");
    _CompositeTransform_CenterXProperty_get = lib.Find<CompositeTransform_CenterXProperty_getDelegate>("CompositeTransform_CenterXProperty_get");
    _CompositeTransform_CenterYProperty_set = lib.Find<CompositeTransform_CenterYProperty_setDelegate>("CompositeTransform_CenterYProperty_set");
    _CompositeTransform_CenterYProperty_get = lib.Find<CompositeTransform_CenterYProperty_getDelegate>("CompositeTransform_CenterYProperty_get");
    _CompositeTransform_RotationProperty_set = lib.Find<CompositeTransform_RotationProperty_setDelegate>("CompositeTransform_RotationProperty_set");
    _CompositeTransform_RotationProperty_get = lib.Find<CompositeTransform_RotationProperty_getDelegate>("CompositeTransform_RotationProperty_get");
    _CompositeTransform_ScaleXProperty_set = lib.Find<CompositeTransform_ScaleXProperty_setDelegate>("CompositeTransform_ScaleXProperty_set");
    _CompositeTransform_ScaleXProperty_get = lib.Find<CompositeTransform_ScaleXProperty_getDelegate>("CompositeTransform_ScaleXProperty_get");
    _CompositeTransform_ScaleYProperty_set = lib.Find<CompositeTransform_ScaleYProperty_setDelegate>("CompositeTransform_ScaleYProperty_set");
    _CompositeTransform_ScaleYProperty_get = lib.Find<CompositeTransform_ScaleYProperty_getDelegate>("CompositeTransform_ScaleYProperty_get");
    _CompositeTransform_SkewXProperty_set = lib.Find<CompositeTransform_SkewXProperty_setDelegate>("CompositeTransform_SkewXProperty_set");
    _CompositeTransform_SkewXProperty_get = lib.Find<CompositeTransform_SkewXProperty_getDelegate>("CompositeTransform_SkewXProperty_get");
    _CompositeTransform_SkewYProperty_set = lib.Find<CompositeTransform_SkewYProperty_setDelegate>("CompositeTransform_SkewYProperty_set");
    _CompositeTransform_SkewYProperty_get = lib.Find<CompositeTransform_SkewYProperty_getDelegate>("CompositeTransform_SkewYProperty_get");
    _CompositeTransform_TranslateXProperty_set = lib.Find<CompositeTransform_TranslateXProperty_setDelegate>("CompositeTransform_TranslateXProperty_set");
    _CompositeTransform_TranslateXProperty_get = lib.Find<CompositeTransform_TranslateXProperty_getDelegate>("CompositeTransform_TranslateXProperty_get");
    _CompositeTransform_TranslateYProperty_set = lib.Find<CompositeTransform_TranslateYProperty_setDelegate>("CompositeTransform_TranslateYProperty_set");
    _CompositeTransform_TranslateYProperty_get = lib.Find<CompositeTransform_TranslateYProperty_getDelegate>("CompositeTransform_TranslateYProperty_get");
    _ContentPresenter_ContentProperty_set = lib.Find<ContentPresenter_ContentProperty_setDelegate>("ContentPresenter_ContentProperty_set");
    _ContentPresenter_ContentProperty_get = lib.Find<ContentPresenter_ContentProperty_getDelegate>("ContentPresenter_ContentProperty_get");
    _ContentPresenter_ContentSourceProperty_set = lib.Find<ContentPresenter_ContentSourceProperty_setDelegate>("ContentPresenter_ContentSourceProperty_set");
    _ContentPresenter_ContentSourceProperty_get = lib.Find<ContentPresenter_ContentSourceProperty_getDelegate>("ContentPresenter_ContentSourceProperty_get");
    _ContentPresenter_ContentTemplateProperty_set = lib.Find<ContentPresenter_ContentTemplateProperty_setDelegate>("ContentPresenter_ContentTemplateProperty_set");
    _ContentPresenter_ContentTemplateProperty_get = lib.Find<ContentPresenter_ContentTemplateProperty_getDelegate>("ContentPresenter_ContentTemplateProperty_get");
    _ContentPresenter_ContentTemplateSelectorProperty_set = lib.Find<ContentPresenter_ContentTemplateSelectorProperty_setDelegate>("ContentPresenter_ContentTemplateSelectorProperty_set");
    _ContentPresenter_ContentTemplateSelectorProperty_get = lib.Find<ContentPresenter_ContentTemplateSelectorProperty_getDelegate>("ContentPresenter_ContentTemplateSelectorProperty_get");
    _ContentPresenter_RecognizesAccessKeyProperty_set = lib.Find<ContentPresenter_RecognizesAccessKeyProperty_setDelegate>("ContentPresenter_RecognizesAccessKeyProperty_set");
    _ContentPresenter_RecognizesAccessKeyProperty_get = lib.Find<ContentPresenter_RecognizesAccessKeyProperty_getDelegate>("ContentPresenter_RecognizesAccessKeyProperty_get");
    _ContextMenu_CustomPopupPlacementCallbackProperty_set = lib.Find<ContextMenu_CustomPopupPlacementCallbackProperty_setDelegate>("ContextMenu_CustomPopupPlacementCallbackProperty_set");
    _ContextMenu_CustomPopupPlacementCallbackProperty_get = lib.Find<ContextMenu_CustomPopupPlacementCallbackProperty_getDelegate>("ContextMenu_CustomPopupPlacementCallbackProperty_get");
    _ContextMenu_HasDropShadowProperty_set = lib.Find<ContextMenu_HasDropShadowProperty_setDelegate>("ContextMenu_HasDropShadowProperty_set");
    _ContextMenu_HasDropShadowProperty_get = lib.Find<ContextMenu_HasDropShadowProperty_getDelegate>("ContextMenu_HasDropShadowProperty_get");
    _ContextMenu_HorizontalOffsetProperty_set = lib.Find<ContextMenu_HorizontalOffsetProperty_setDelegate>("ContextMenu_HorizontalOffsetProperty_set");
    _ContextMenu_HorizontalOffsetProperty_get = lib.Find<ContextMenu_HorizontalOffsetProperty_getDelegate>("ContextMenu_HorizontalOffsetProperty_get");
    _ContextMenu_IsOpenProperty_set = lib.Find<ContextMenu_IsOpenProperty_setDelegate>("ContextMenu_IsOpenProperty_set");
    _ContextMenu_IsOpenProperty_get = lib.Find<ContextMenu_IsOpenProperty_getDelegate>("ContextMenu_IsOpenProperty_get");
    _ContextMenu_PlacementProperty_set = lib.Find<ContextMenu_PlacementProperty_setDelegate>("ContextMenu_PlacementProperty_set");
    _ContextMenu_PlacementProperty_get = lib.Find<ContextMenu_PlacementProperty_getDelegate>("ContextMenu_PlacementProperty_get");
    _ContextMenu_PlacementRectangleProperty_set = lib.Find<ContextMenu_PlacementRectangleProperty_setDelegate>("ContextMenu_PlacementRectangleProperty_set");
    _ContextMenu_PlacementRectangleProperty_get = lib.Find<ContextMenu_PlacementRectangleProperty_getDelegate>("ContextMenu_PlacementRectangleProperty_get");
    _ContextMenu_PlacementTargetProperty_set = lib.Find<ContextMenu_PlacementTargetProperty_setDelegate>("ContextMenu_PlacementTargetProperty_set");
    _ContextMenu_PlacementTargetProperty_get = lib.Find<ContextMenu_PlacementTargetProperty_getDelegate>("ContextMenu_PlacementTargetProperty_get");
    _ContextMenu_StaysOpenProperty_set = lib.Find<ContextMenu_StaysOpenProperty_setDelegate>("ContextMenu_StaysOpenProperty_set");
    _ContextMenu_StaysOpenProperty_get = lib.Find<ContextMenu_StaysOpenProperty_getDelegate>("ContextMenu_StaysOpenProperty_get");
    _ContextMenu_VerticalOffsetProperty_set = lib.Find<ContextMenu_VerticalOffsetProperty_setDelegate>("ContextMenu_VerticalOffsetProperty_set");
    _ContextMenu_VerticalOffsetProperty_get = lib.Find<ContextMenu_VerticalOffsetProperty_getDelegate>("ContextMenu_VerticalOffsetProperty_get");
    _ContextMenuService_ContextMenuProperty_set = lib.Find<ContextMenuService_ContextMenuProperty_setDelegate>("ContextMenuService_ContextMenuProperty_set");
    _ContextMenuService_ContextMenuProperty_get = lib.Find<ContextMenuService_ContextMenuProperty_getDelegate>("ContextMenuService_ContextMenuProperty_get");
    _ContextMenuService_HasDropShadowProperty_set = lib.Find<ContextMenuService_HasDropShadowProperty_setDelegate>("ContextMenuService_HasDropShadowProperty_set");
    _ContextMenuService_HasDropShadowProperty_get = lib.Find<ContextMenuService_HasDropShadowProperty_getDelegate>("ContextMenuService_HasDropShadowProperty_get");
    _ContextMenuService_HorizontalOffsetProperty_set = lib.Find<ContextMenuService_HorizontalOffsetProperty_setDelegate>("ContextMenuService_HorizontalOffsetProperty_set");
    _ContextMenuService_HorizontalOffsetProperty_get = lib.Find<ContextMenuService_HorizontalOffsetProperty_getDelegate>("ContextMenuService_HorizontalOffsetProperty_get");
    _ContextMenuService_IsEnabledProperty_set = lib.Find<ContextMenuService_IsEnabledProperty_setDelegate>("ContextMenuService_IsEnabledProperty_set");
    _ContextMenuService_IsEnabledProperty_get = lib.Find<ContextMenuService_IsEnabledProperty_getDelegate>("ContextMenuService_IsEnabledProperty_get");
    _ContextMenuService_PlacementProperty_set = lib.Find<ContextMenuService_PlacementProperty_setDelegate>("ContextMenuService_PlacementProperty_set");
    _ContextMenuService_PlacementProperty_get = lib.Find<ContextMenuService_PlacementProperty_getDelegate>("ContextMenuService_PlacementProperty_get");
    _ContextMenuService_PlacementRectangleProperty_set = lib.Find<ContextMenuService_PlacementRectangleProperty_setDelegate>("ContextMenuService_PlacementRectangleProperty_set");
    _ContextMenuService_PlacementRectangleProperty_get = lib.Find<ContextMenuService_PlacementRectangleProperty_getDelegate>("ContextMenuService_PlacementRectangleProperty_get");
    _ContextMenuService_PlacementTargetProperty_set = lib.Find<ContextMenuService_PlacementTargetProperty_setDelegate>("ContextMenuService_PlacementTargetProperty_set");
    _ContextMenuService_PlacementTargetProperty_get = lib.Find<ContextMenuService_PlacementTargetProperty_getDelegate>("ContextMenuService_PlacementTargetProperty_get");
    _ContextMenuService_ShowOnDisabledProperty_set = lib.Find<ContextMenuService_ShowOnDisabledProperty_setDelegate>("ContextMenuService_ShowOnDisabledProperty_set");
    _ContextMenuService_ShowOnDisabledProperty_get = lib.Find<ContextMenuService_ShowOnDisabledProperty_getDelegate>("ContextMenuService_ShowOnDisabledProperty_get");
    _ContextMenuService_VerticalOffsetProperty_set = lib.Find<ContextMenuService_VerticalOffsetProperty_setDelegate>("ContextMenuService_VerticalOffsetProperty_set");
    _ContextMenuService_VerticalOffsetProperty_get = lib.Find<ContextMenuService_VerticalOffsetProperty_getDelegate>("ContextMenuService_VerticalOffsetProperty_get");
    _DashStyle_DashesProperty_set = lib.Find<DashStyle_DashesProperty_setDelegate>("DashStyle_DashesProperty_set");
    _DashStyle_DashesProperty_get = lib.Find<DashStyle_DashesProperty_getDelegate>("DashStyle_DashesProperty_get");
    _DashStyle_OffsetProperty_set = lib.Find<DashStyle_OffsetProperty_setDelegate>("DashStyle_OffsetProperty_set");
    _DashStyle_OffsetProperty_get = lib.Find<DashStyle_OffsetProperty_getDelegate>("DashStyle_OffsetProperty_get");
    _DockPanel_DockProperty_set = lib.Find<DockPanel_DockProperty_setDelegate>("DockPanel_DockProperty_set");
    _DockPanel_DockProperty_get = lib.Find<DockPanel_DockProperty_getDelegate>("DockPanel_DockProperty_get");
    _DockPanel_LastChildFillProperty_set = lib.Find<DockPanel_LastChildFillProperty_setDelegate>("DockPanel_LastChildFillProperty_set");
    _DockPanel_LastChildFillProperty_get = lib.Find<DockPanel_LastChildFillProperty_getDelegate>("DockPanel_LastChildFillProperty_get");
    _DropShadowEffect_BlurRadiusProperty_set = lib.Find<DropShadowEffect_BlurRadiusProperty_setDelegate>("DropShadowEffect_BlurRadiusProperty_set");
    _DropShadowEffect_BlurRadiusProperty_get = lib.Find<DropShadowEffect_BlurRadiusProperty_getDelegate>("DropShadowEffect_BlurRadiusProperty_get");
    _DropShadowEffect_ColorProperty_set = lib.Find<DropShadowEffect_ColorProperty_setDelegate>("DropShadowEffect_ColorProperty_set");
    _DropShadowEffect_ColorProperty_get = lib.Find<DropShadowEffect_ColorProperty_getDelegate>("DropShadowEffect_ColorProperty_get");
    _DropShadowEffect_DirectionProperty_set = lib.Find<DropShadowEffect_DirectionProperty_setDelegate>("DropShadowEffect_DirectionProperty_set");
    _DropShadowEffect_DirectionProperty_get = lib.Find<DropShadowEffect_DirectionProperty_getDelegate>("DropShadowEffect_DirectionProperty_get");
    _DropShadowEffect_OpacityProperty_set = lib.Find<DropShadowEffect_OpacityProperty_setDelegate>("DropShadowEffect_OpacityProperty_set");
    _DropShadowEffect_OpacityProperty_get = lib.Find<DropShadowEffect_OpacityProperty_getDelegate>("DropShadowEffect_OpacityProperty_get");
    _DropShadowEffect_RenderingBiasProperty_set = lib.Find<DropShadowEffect_RenderingBiasProperty_setDelegate>("DropShadowEffect_RenderingBiasProperty_set");
    _DropShadowEffect_RenderingBiasProperty_get = lib.Find<DropShadowEffect_RenderingBiasProperty_getDelegate>("DropShadowEffect_RenderingBiasProperty_get");
    _DropShadowEffect_ShadowDepthProperty_set = lib.Find<DropShadowEffect_ShadowDepthProperty_setDelegate>("DropShadowEffect_ShadowDepthProperty_set");
    _DropShadowEffect_ShadowDepthProperty_get = lib.Find<DropShadowEffect_ShadowDepthProperty_getDelegate>("DropShadowEffect_ShadowDepthProperty_get");
    _Shape_FillProperty_set = lib.Find<Shape_FillProperty_setDelegate>("Shape_FillProperty_set");
    _Shape_FillProperty_get = lib.Find<Shape_FillProperty_getDelegate>("Shape_FillProperty_get");
    _Shape_StretchProperty_set = lib.Find<Shape_StretchProperty_setDelegate>("Shape_StretchProperty_set");
    _Shape_StretchProperty_get = lib.Find<Shape_StretchProperty_getDelegate>("Shape_StretchProperty_get");
    _Shape_StrokeProperty_set = lib.Find<Shape_StrokeProperty_setDelegate>("Shape_StrokeProperty_set");
    _Shape_StrokeProperty_get = lib.Find<Shape_StrokeProperty_getDelegate>("Shape_StrokeProperty_get");
    _Shape_StrokeDashArrayProperty_set = lib.Find<Shape_StrokeDashArrayProperty_setDelegate>("Shape_StrokeDashArrayProperty_set");
    _Shape_StrokeDashArrayProperty_get = lib.Find<Shape_StrokeDashArrayProperty_getDelegate>("Shape_StrokeDashArrayProperty_get");
    _Shape_StrokeDashCapProperty_set = lib.Find<Shape_StrokeDashCapProperty_setDelegate>("Shape_StrokeDashCapProperty_set");
    _Shape_StrokeDashCapProperty_get = lib.Find<Shape_StrokeDashCapProperty_getDelegate>("Shape_StrokeDashCapProperty_get");
    _Shape_StrokeDashOffsetProperty_set = lib.Find<Shape_StrokeDashOffsetProperty_setDelegate>("Shape_StrokeDashOffsetProperty_set");
    _Shape_StrokeDashOffsetProperty_get = lib.Find<Shape_StrokeDashOffsetProperty_getDelegate>("Shape_StrokeDashOffsetProperty_get");
    _Shape_StrokeEndLineCapProperty_set = lib.Find<Shape_StrokeEndLineCapProperty_setDelegate>("Shape_StrokeEndLineCapProperty_set");
    _Shape_StrokeEndLineCapProperty_get = lib.Find<Shape_StrokeEndLineCapProperty_getDelegate>("Shape_StrokeEndLineCapProperty_get");
    _Shape_StrokeLineJoinProperty_set = lib.Find<Shape_StrokeLineJoinProperty_setDelegate>("Shape_StrokeLineJoinProperty_set");
    _Shape_StrokeLineJoinProperty_get = lib.Find<Shape_StrokeLineJoinProperty_getDelegate>("Shape_StrokeLineJoinProperty_get");
    _Shape_StrokeMiterLimitProperty_set = lib.Find<Shape_StrokeMiterLimitProperty_setDelegate>("Shape_StrokeMiterLimitProperty_set");
    _Shape_StrokeMiterLimitProperty_get = lib.Find<Shape_StrokeMiterLimitProperty_getDelegate>("Shape_StrokeMiterLimitProperty_get");
    _Shape_StrokeStartLineCapProperty_set = lib.Find<Shape_StrokeStartLineCapProperty_setDelegate>("Shape_StrokeStartLineCapProperty_set");
    _Shape_StrokeStartLineCapProperty_get = lib.Find<Shape_StrokeStartLineCapProperty_getDelegate>("Shape_StrokeStartLineCapProperty_get");
    _Shape_StrokeThicknessProperty_set = lib.Find<Shape_StrokeThicknessProperty_setDelegate>("Shape_StrokeThicknessProperty_set");
    _Shape_StrokeThicknessProperty_get = lib.Find<Shape_StrokeThicknessProperty_getDelegate>("Shape_StrokeThicknessProperty_get");
    _EllipseGeometry_CenterProperty_set = lib.Find<EllipseGeometry_CenterProperty_setDelegate>("EllipseGeometry_CenterProperty_set");
    _EllipseGeometry_CenterProperty_get = lib.Find<EllipseGeometry_CenterProperty_getDelegate>("EllipseGeometry_CenterProperty_get");
    _EllipseGeometry_RadiusXProperty_set = lib.Find<EllipseGeometry_RadiusXProperty_setDelegate>("EllipseGeometry_RadiusXProperty_set");
    _EllipseGeometry_RadiusXProperty_get = lib.Find<EllipseGeometry_RadiusXProperty_getDelegate>("EllipseGeometry_RadiusXProperty_get");
    _EllipseGeometry_RadiusYProperty_set = lib.Find<EllipseGeometry_RadiusYProperty_setDelegate>("EllipseGeometry_RadiusYProperty_set");
    _EllipseGeometry_RadiusYProperty_get = lib.Find<EllipseGeometry_RadiusYProperty_getDelegate>("EllipseGeometry_RadiusYProperty_get");
    _HeaderedContentControl_HasHeaderProperty_set = lib.Find<HeaderedContentControl_HasHeaderProperty_setDelegate>("HeaderedContentControl_HasHeaderProperty_set");
    _HeaderedContentControl_HasHeaderProperty_get = lib.Find<HeaderedContentControl_HasHeaderProperty_getDelegate>("HeaderedContentControl_HasHeaderProperty_get");
    _HeaderedContentControl_HeaderProperty_set = lib.Find<HeaderedContentControl_HeaderProperty_setDelegate>("HeaderedContentControl_HeaderProperty_set");
    _HeaderedContentControl_HeaderProperty_get = lib.Find<HeaderedContentControl_HeaderProperty_getDelegate>("HeaderedContentControl_HeaderProperty_get");
    _HeaderedContentControl_HeaderTemplateProperty_set = lib.Find<HeaderedContentControl_HeaderTemplateProperty_setDelegate>("HeaderedContentControl_HeaderTemplateProperty_set");
    _HeaderedContentControl_HeaderTemplateProperty_get = lib.Find<HeaderedContentControl_HeaderTemplateProperty_getDelegate>("HeaderedContentControl_HeaderTemplateProperty_get");
    _HeaderedContentControl_HeaderTemplateSelectorProperty_set = lib.Find<HeaderedContentControl_HeaderTemplateSelectorProperty_setDelegate>("HeaderedContentControl_HeaderTemplateSelectorProperty_set");
    _HeaderedContentControl_HeaderTemplateSelectorProperty_get = lib.Find<HeaderedContentControl_HeaderTemplateSelectorProperty_getDelegate>("HeaderedContentControl_HeaderTemplateSelectorProperty_get");
    _Expander_ExpandDirectionProperty_set = lib.Find<Expander_ExpandDirectionProperty_setDelegate>("Expander_ExpandDirectionProperty_set");
    _Expander_ExpandDirectionProperty_get = lib.Find<Expander_ExpandDirectionProperty_getDelegate>("Expander_ExpandDirectionProperty_get");
    _Expander_IsExpandedProperty_set = lib.Find<Expander_IsExpandedProperty_setDelegate>("Expander_IsExpandedProperty_set");
    _Expander_IsExpandedProperty_get = lib.Find<Expander_IsExpandedProperty_getDelegate>("Expander_IsExpandedProperty_get");
    _FocusManager_FocusedElementProperty_set = lib.Find<FocusManager_FocusedElementProperty_setDelegate>("FocusManager_FocusedElementProperty_set");
    _FocusManager_FocusedElementProperty_get = lib.Find<FocusManager_FocusedElementProperty_getDelegate>("FocusManager_FocusedElementProperty_get");
    _FocusManager_IsFocusScopeProperty_set = lib.Find<FocusManager_IsFocusScopeProperty_setDelegate>("FocusManager_IsFocusScopeProperty_set");
    _FocusManager_IsFocusScopeProperty_get = lib.Find<FocusManager_IsFocusScopeProperty_getDelegate>("FocusManager_IsFocusScopeProperty_get");
    _GeometryGroup_ChildrenProperty_set = lib.Find<GeometryGroup_ChildrenProperty_setDelegate>("GeometryGroup_ChildrenProperty_set");
    _GeometryGroup_ChildrenProperty_get = lib.Find<GeometryGroup_ChildrenProperty_getDelegate>("GeometryGroup_ChildrenProperty_get");
    _GeometryGroup_FillRuleProperty_set = lib.Find<GeometryGroup_FillRuleProperty_setDelegate>("GeometryGroup_FillRuleProperty_set");
    _GeometryGroup_FillRuleProperty_get = lib.Find<GeometryGroup_FillRuleProperty_getDelegate>("GeometryGroup_FillRuleProperty_get");
    _GradientBrush_ColorInterpolationModeProperty_set = lib.Find<GradientBrush_ColorInterpolationModeProperty_setDelegate>("GradientBrush_ColorInterpolationModeProperty_set");
    _GradientBrush_ColorInterpolationModeProperty_get = lib.Find<GradientBrush_ColorInterpolationModeProperty_getDelegate>("GradientBrush_ColorInterpolationModeProperty_get");
    _GradientBrush_GradientStopsProperty_set = lib.Find<GradientBrush_GradientStopsProperty_setDelegate>("GradientBrush_GradientStopsProperty_set");
    _GradientBrush_GradientStopsProperty_get = lib.Find<GradientBrush_GradientStopsProperty_getDelegate>("GradientBrush_GradientStopsProperty_get");
    _GradientBrush_MappingModeProperty_set = lib.Find<GradientBrush_MappingModeProperty_setDelegate>("GradientBrush_MappingModeProperty_set");
    _GradientBrush_MappingModeProperty_get = lib.Find<GradientBrush_MappingModeProperty_getDelegate>("GradientBrush_MappingModeProperty_get");
    _GradientBrush_SpreadMethodProperty_set = lib.Find<GradientBrush_SpreadMethodProperty_setDelegate>("GradientBrush_SpreadMethodProperty_set");
    _GradientBrush_SpreadMethodProperty_get = lib.Find<GradientBrush_SpreadMethodProperty_getDelegate>("GradientBrush_SpreadMethodProperty_get");
    _GradientStop_ColorProperty_set = lib.Find<GradientStop_ColorProperty_setDelegate>("GradientStop_ColorProperty_set");
    _GradientStop_ColorProperty_get = lib.Find<GradientStop_ColorProperty_getDelegate>("GradientStop_ColorProperty_get");
    _GradientStop_OffsetProperty_set = lib.Find<GradientStop_OffsetProperty_setDelegate>("GradientStop_OffsetProperty_set");
    _GradientStop_OffsetProperty_get = lib.Find<GradientStop_OffsetProperty_getDelegate>("GradientStop_OffsetProperty_get");
    _Grid_ColumnProperty_set = lib.Find<Grid_ColumnProperty_setDelegate>("Grid_ColumnProperty_set");
    _Grid_ColumnProperty_get = lib.Find<Grid_ColumnProperty_getDelegate>("Grid_ColumnProperty_get");
    _Grid_ColumnSpanProperty_set = lib.Find<Grid_ColumnSpanProperty_setDelegate>("Grid_ColumnSpanProperty_set");
    _Grid_ColumnSpanProperty_get = lib.Find<Grid_ColumnSpanProperty_getDelegate>("Grid_ColumnSpanProperty_get");
    _Grid_IsSharedSizeScopeProperty_set = lib.Find<Grid_IsSharedSizeScopeProperty_setDelegate>("Grid_IsSharedSizeScopeProperty_set");
    _Grid_IsSharedSizeScopeProperty_get = lib.Find<Grid_IsSharedSizeScopeProperty_getDelegate>("Grid_IsSharedSizeScopeProperty_get");
    _Grid_RowProperty_set = lib.Find<Grid_RowProperty_setDelegate>("Grid_RowProperty_set");
    _Grid_RowProperty_get = lib.Find<Grid_RowProperty_getDelegate>("Grid_RowProperty_get");
    _Grid_RowSpanProperty_set = lib.Find<Grid_RowSpanProperty_setDelegate>("Grid_RowSpanProperty_set");
    _Grid_RowSpanProperty_get = lib.Find<Grid_RowSpanProperty_getDelegate>("Grid_RowSpanProperty_get");
    _Grid_ShowGridLinesProperty_set = lib.Find<Grid_ShowGridLinesProperty_setDelegate>("Grid_ShowGridLinesProperty_set");
    _Grid_ShowGridLinesProperty_get = lib.Find<Grid_ShowGridLinesProperty_getDelegate>("Grid_ShowGridLinesProperty_get");
    _HeaderedItemsControl_HasHeaderProperty_set = lib.Find<HeaderedItemsControl_HasHeaderProperty_setDelegate>("HeaderedItemsControl_HasHeaderProperty_set");
    _HeaderedItemsControl_HasHeaderProperty_get = lib.Find<HeaderedItemsControl_HasHeaderProperty_getDelegate>("HeaderedItemsControl_HasHeaderProperty_get");
    _HeaderedItemsControl_HeaderProperty_set = lib.Find<HeaderedItemsControl_HeaderProperty_setDelegate>("HeaderedItemsControl_HeaderProperty_set");
    _HeaderedItemsControl_HeaderProperty_get = lib.Find<HeaderedItemsControl_HeaderProperty_getDelegate>("HeaderedItemsControl_HeaderProperty_get");
    _HeaderedItemsControl_HeaderStringFormatProperty_set = lib.Find<HeaderedItemsControl_HeaderStringFormatProperty_setDelegate>("HeaderedItemsControl_HeaderStringFormatProperty_set");
    _HeaderedItemsControl_HeaderStringFormatProperty_get = lib.Find<HeaderedItemsControl_HeaderStringFormatProperty_getDelegate>("HeaderedItemsControl_HeaderStringFormatProperty_get");
    _HeaderedItemsControl_HeaderTemplateProperty_set = lib.Find<HeaderedItemsControl_HeaderTemplateProperty_setDelegate>("HeaderedItemsControl_HeaderTemplateProperty_set");
    _HeaderedItemsControl_HeaderTemplateProperty_get = lib.Find<HeaderedItemsControl_HeaderTemplateProperty_getDelegate>("HeaderedItemsControl_HeaderTemplateProperty_get");
    _HeaderedItemsControl_HeaderTemplateSelectorProperty_set = lib.Find<HeaderedItemsControl_HeaderTemplateSelectorProperty_setDelegate>("HeaderedItemsControl_HeaderTemplateSelectorProperty_set");
    _HeaderedItemsControl_HeaderTemplateSelectorProperty_get = lib.Find<HeaderedItemsControl_HeaderTemplateSelectorProperty_getDelegate>("HeaderedItemsControl_HeaderTemplateSelectorProperty_get");
    _Image_SourceProperty_set = lib.Find<Image_SourceProperty_setDelegate>("Image_SourceProperty_set");
    _Image_SourceProperty_get = lib.Find<Image_SourceProperty_getDelegate>("Image_SourceProperty_get");
    _Image_StretchProperty_set = lib.Find<Image_StretchProperty_setDelegate>("Image_StretchProperty_set");
    _Image_StretchProperty_get = lib.Find<Image_StretchProperty_getDelegate>("Image_StretchProperty_get");
    _Image_StretchDirectionProperty_set = lib.Find<Image_StretchDirectionProperty_setDelegate>("Image_StretchDirectionProperty_set");
    _Image_StretchDirectionProperty_get = lib.Find<Image_StretchDirectionProperty_getDelegate>("Image_StretchDirectionProperty_get");
    _TileBrush_AlignmentXProperty_set = lib.Find<TileBrush_AlignmentXProperty_setDelegate>("TileBrush_AlignmentXProperty_set");
    _TileBrush_AlignmentXProperty_get = lib.Find<TileBrush_AlignmentXProperty_getDelegate>("TileBrush_AlignmentXProperty_get");
    _TileBrush_AlignmentYProperty_set = lib.Find<TileBrush_AlignmentYProperty_setDelegate>("TileBrush_AlignmentYProperty_set");
    _TileBrush_AlignmentYProperty_get = lib.Find<TileBrush_AlignmentYProperty_getDelegate>("TileBrush_AlignmentYProperty_get");
    _TileBrush_StretchProperty_set = lib.Find<TileBrush_StretchProperty_setDelegate>("TileBrush_StretchProperty_set");
    _TileBrush_StretchProperty_get = lib.Find<TileBrush_StretchProperty_getDelegate>("TileBrush_StretchProperty_get");
    _TileBrush_TileModeProperty_set = lib.Find<TileBrush_TileModeProperty_setDelegate>("TileBrush_TileModeProperty_set");
    _TileBrush_TileModeProperty_get = lib.Find<TileBrush_TileModeProperty_getDelegate>("TileBrush_TileModeProperty_get");
    _TileBrush_ViewboxProperty_set = lib.Find<TileBrush_ViewboxProperty_setDelegate>("TileBrush_ViewboxProperty_set");
    _TileBrush_ViewboxProperty_get = lib.Find<TileBrush_ViewboxProperty_getDelegate>("TileBrush_ViewboxProperty_get");
    _TileBrush_ViewboxUnitsProperty_set = lib.Find<TileBrush_ViewboxUnitsProperty_setDelegate>("TileBrush_ViewboxUnitsProperty_set");
    _TileBrush_ViewboxUnitsProperty_get = lib.Find<TileBrush_ViewboxUnitsProperty_getDelegate>("TileBrush_ViewboxUnitsProperty_get");
    _TileBrush_ViewportProperty_set = lib.Find<TileBrush_ViewportProperty_setDelegate>("TileBrush_ViewportProperty_set");
    _TileBrush_ViewportProperty_get = lib.Find<TileBrush_ViewportProperty_getDelegate>("TileBrush_ViewportProperty_get");
    _TileBrush_ViewportUnitsProperty_set = lib.Find<TileBrush_ViewportUnitsProperty_setDelegate>("TileBrush_ViewportUnitsProperty_set");
    _TileBrush_ViewportUnitsProperty_get = lib.Find<TileBrush_ViewportUnitsProperty_getDelegate>("TileBrush_ViewportUnitsProperty_get");
    _ImageBrush_ImageSourceProperty_set = lib.Find<ImageBrush_ImageSourceProperty_setDelegate>("ImageBrush_ImageSourceProperty_set");
    _ImageBrush_ImageSourceProperty_get = lib.Find<ImageBrush_ImageSourceProperty_getDelegate>("ImageBrush_ImageSourceProperty_get");
    _KeyboardNavigation_AcceptsReturnProperty_set = lib.Find<KeyboardNavigation_AcceptsReturnProperty_setDelegate>("KeyboardNavigation_AcceptsReturnProperty_set");
    _KeyboardNavigation_AcceptsReturnProperty_get = lib.Find<KeyboardNavigation_AcceptsReturnProperty_getDelegate>("KeyboardNavigation_AcceptsReturnProperty_get");
    _KeyboardNavigation_ControlTabNavigationProperty_set = lib.Find<KeyboardNavigation_ControlTabNavigationProperty_setDelegate>("KeyboardNavigation_ControlTabNavigationProperty_set");
    _KeyboardNavigation_ControlTabNavigationProperty_get = lib.Find<KeyboardNavigation_ControlTabNavigationProperty_getDelegate>("KeyboardNavigation_ControlTabNavigationProperty_get");
    _KeyboardNavigation_DirectionalNavigationProperty_set = lib.Find<KeyboardNavigation_DirectionalNavigationProperty_setDelegate>("KeyboardNavigation_DirectionalNavigationProperty_set");
    _KeyboardNavigation_DirectionalNavigationProperty_get = lib.Find<KeyboardNavigation_DirectionalNavigationProperty_getDelegate>("KeyboardNavigation_DirectionalNavigationProperty_get");
    _KeyboardNavigation_IsTabStopProperty_set = lib.Find<KeyboardNavigation_IsTabStopProperty_setDelegate>("KeyboardNavigation_IsTabStopProperty_set");
    _KeyboardNavigation_IsTabStopProperty_get = lib.Find<KeyboardNavigation_IsTabStopProperty_getDelegate>("KeyboardNavigation_IsTabStopProperty_get");
    _KeyboardNavigation_TabIndexProperty_set = lib.Find<KeyboardNavigation_TabIndexProperty_setDelegate>("KeyboardNavigation_TabIndexProperty_set");
    _KeyboardNavigation_TabIndexProperty_get = lib.Find<KeyboardNavigation_TabIndexProperty_getDelegate>("KeyboardNavigation_TabIndexProperty_get");
    _KeyboardNavigation_TabNavigationProperty_set = lib.Find<KeyboardNavigation_TabNavigationProperty_setDelegate>("KeyboardNavigation_TabNavigationProperty_set");
    _KeyboardNavigation_TabNavigationProperty_get = lib.Find<KeyboardNavigation_TabNavigationProperty_getDelegate>("KeyboardNavigation_TabNavigationProperty_get");
    _Label_TargetProperty_set = lib.Find<Label_TargetProperty_setDelegate>("Label_TargetProperty_set");
    _Label_TargetProperty_get = lib.Find<Label_TargetProperty_getDelegate>("Label_TargetProperty_get");
    _Line_X1Property_set = lib.Find<Line_X1Property_setDelegate>("Line_X1Property_set");
    _Line_X1Property_get = lib.Find<Line_X1Property_getDelegate>("Line_X1Property_get");
    _Line_Y1Property_set = lib.Find<Line_Y1Property_setDelegate>("Line_Y1Property_set");
    _Line_Y1Property_get = lib.Find<Line_Y1Property_getDelegate>("Line_Y1Property_get");
    _Line_X2Property_set = lib.Find<Line_X2Property_setDelegate>("Line_X2Property_set");
    _Line_X2Property_get = lib.Find<Line_X2Property_getDelegate>("Line_X2Property_get");
    _Line_Y2Property_set = lib.Find<Line_Y2Property_setDelegate>("Line_Y2Property_set");
    _Line_Y2Property_get = lib.Find<Line_Y2Property_getDelegate>("Line_Y2Property_get");
    _LinearGradientBrush_EndPointProperty_set = lib.Find<LinearGradientBrush_EndPointProperty_setDelegate>("LinearGradientBrush_EndPointProperty_set");
    _LinearGradientBrush_EndPointProperty_get = lib.Find<LinearGradientBrush_EndPointProperty_getDelegate>("LinearGradientBrush_EndPointProperty_get");
    _LinearGradientBrush_StartPointProperty_set = lib.Find<LinearGradientBrush_StartPointProperty_setDelegate>("LinearGradientBrush_StartPointProperty_set");
    _LinearGradientBrush_StartPointProperty_get = lib.Find<LinearGradientBrush_StartPointProperty_getDelegate>("LinearGradientBrush_StartPointProperty_get");
    _LineGeometry_EndPointProperty_set = lib.Find<LineGeometry_EndPointProperty_setDelegate>("LineGeometry_EndPointProperty_set");
    _LineGeometry_EndPointProperty_get = lib.Find<LineGeometry_EndPointProperty_getDelegate>("LineGeometry_EndPointProperty_get");
    _LineGeometry_StartPointProperty_set = lib.Find<LineGeometry_StartPointProperty_setDelegate>("LineGeometry_StartPointProperty_set");
    _LineGeometry_StartPointProperty_get = lib.Find<LineGeometry_StartPointProperty_getDelegate>("LineGeometry_StartPointProperty_get");
    _ListBox_SelectedItemsProperty_set = lib.Find<ListBox_SelectedItemsProperty_setDelegate>("ListBox_SelectedItemsProperty_set");
    _ListBox_SelectedItemsProperty_get = lib.Find<ListBox_SelectedItemsProperty_getDelegate>("ListBox_SelectedItemsProperty_get");
    _ListBox_SelectionModeProperty_set = lib.Find<ListBox_SelectionModeProperty_setDelegate>("ListBox_SelectionModeProperty_set");
    _ListBox_SelectionModeProperty_get = lib.Find<ListBox_SelectionModeProperty_getDelegate>("ListBox_SelectionModeProperty_get");
    _Matrix3DProjection_ProjectionMatrixProperty_set = lib.Find<Matrix3DProjection_ProjectionMatrixProperty_setDelegate>("Matrix3DProjection_ProjectionMatrixProperty_set");
    _Matrix3DProjection_ProjectionMatrixProperty_get = lib.Find<Matrix3DProjection_ProjectionMatrixProperty_getDelegate>("Matrix3DProjection_ProjectionMatrixProperty_get");
    _MatrixTransform_MatrixProperty_set = lib.Find<MatrixTransform_MatrixProperty_setDelegate>("MatrixTransform_MatrixProperty_set");
    _MatrixTransform_MatrixProperty_get = lib.Find<MatrixTransform_MatrixProperty_getDelegate>("MatrixTransform_MatrixProperty_get");
    _Menu_IsMainMenuProperty_set = lib.Find<Menu_IsMainMenuProperty_setDelegate>("Menu_IsMainMenuProperty_set");
    _Menu_IsMainMenuProperty_get = lib.Find<Menu_IsMainMenuProperty_getDelegate>("Menu_IsMainMenuProperty_get");
    _MenuItem_CommandParameterProperty_set = lib.Find<MenuItem_CommandParameterProperty_setDelegate>("MenuItem_CommandParameterProperty_set");
    _MenuItem_CommandParameterProperty_get = lib.Find<MenuItem_CommandParameterProperty_getDelegate>("MenuItem_CommandParameterProperty_get");
    _MenuItem_CommandProperty_set = lib.Find<MenuItem_CommandProperty_setDelegate>("MenuItem_CommandProperty_set");
    _MenuItem_CommandProperty_get = lib.Find<MenuItem_CommandProperty_getDelegate>("MenuItem_CommandProperty_get");
    _MenuItem_CommandTargetProperty_set = lib.Find<MenuItem_CommandTargetProperty_setDelegate>("MenuItem_CommandTargetProperty_set");
    _MenuItem_CommandTargetProperty_get = lib.Find<MenuItem_CommandTargetProperty_getDelegate>("MenuItem_CommandTargetProperty_get");
    _MenuItem_IconProperty_set = lib.Find<MenuItem_IconProperty_setDelegate>("MenuItem_IconProperty_set");
    _MenuItem_IconProperty_get = lib.Find<MenuItem_IconProperty_getDelegate>("MenuItem_IconProperty_get");
    _MenuItem_InputGestureTextProperty_set = lib.Find<MenuItem_InputGestureTextProperty_setDelegate>("MenuItem_InputGestureTextProperty_set");
    _MenuItem_InputGestureTextProperty_get = lib.Find<MenuItem_InputGestureTextProperty_getDelegate>("MenuItem_InputGestureTextProperty_get");
    _MenuItem_IsCheckableProperty_set = lib.Find<MenuItem_IsCheckableProperty_setDelegate>("MenuItem_IsCheckableProperty_set");
    _MenuItem_IsCheckableProperty_get = lib.Find<MenuItem_IsCheckableProperty_getDelegate>("MenuItem_IsCheckableProperty_get");
    _MenuItem_IsCheckedProperty_set = lib.Find<MenuItem_IsCheckedProperty_setDelegate>("MenuItem_IsCheckedProperty_set");
    _MenuItem_IsCheckedProperty_get = lib.Find<MenuItem_IsCheckedProperty_getDelegate>("MenuItem_IsCheckedProperty_get");
    _MenuItem_IsHighlightedProperty_set = lib.Find<MenuItem_IsHighlightedProperty_setDelegate>("MenuItem_IsHighlightedProperty_set");
    _MenuItem_IsHighlightedProperty_get = lib.Find<MenuItem_IsHighlightedProperty_getDelegate>("MenuItem_IsHighlightedProperty_get");
    _MenuItem_IsPressedProperty_set = lib.Find<MenuItem_IsPressedProperty_setDelegate>("MenuItem_IsPressedProperty_set");
    _MenuItem_IsPressedProperty_get = lib.Find<MenuItem_IsPressedProperty_getDelegate>("MenuItem_IsPressedProperty_get");
    _MenuItem_IsSubmenuOpenProperty_set = lib.Find<MenuItem_IsSubmenuOpenProperty_setDelegate>("MenuItem_IsSubmenuOpenProperty_set");
    _MenuItem_IsSubmenuOpenProperty_get = lib.Find<MenuItem_IsSubmenuOpenProperty_getDelegate>("MenuItem_IsSubmenuOpenProperty_get");
    _MenuItem_IsSuspendingPopupAnimationProperty_set = lib.Find<MenuItem_IsSuspendingPopupAnimationProperty_setDelegate>("MenuItem_IsSuspendingPopupAnimationProperty_set");
    _MenuItem_IsSuspendingPopupAnimationProperty_get = lib.Find<MenuItem_IsSuspendingPopupAnimationProperty_getDelegate>("MenuItem_IsSuspendingPopupAnimationProperty_get");
    _MenuItem_RoleProperty_set = lib.Find<MenuItem_RoleProperty_setDelegate>("MenuItem_RoleProperty_set");
    _MenuItem_RoleProperty_get = lib.Find<MenuItem_RoleProperty_getDelegate>("MenuItem_RoleProperty_get");
    _MenuItem_StaysOpenOnClickProperty_set = lib.Find<MenuItem_StaysOpenOnClickProperty_setDelegate>("MenuItem_StaysOpenOnClickProperty_set");
    _MenuItem_StaysOpenOnClickProperty_get = lib.Find<MenuItem_StaysOpenOnClickProperty_getDelegate>("MenuItem_StaysOpenOnClickProperty_get");
    _UserControl_SourceProperty_set = lib.Find<UserControl_SourceProperty_setDelegate>("UserControl_SourceProperty_set");
    _UserControl_SourceProperty_get = lib.Find<UserControl_SourceProperty_getDelegate>("UserControl_SourceProperty_get");
    _MessageDialog_MessageProperty_set = lib.Find<MessageDialog_MessageProperty_setDelegate>("MessageDialog_MessageProperty_set");
    _MessageDialog_MessageProperty_get = lib.Find<MessageDialog_MessageProperty_getDelegate>("MessageDialog_MessageProperty_get");
    _MessageDialog_CaptionProperty_set = lib.Find<MessageDialog_CaptionProperty_setDelegate>("MessageDialog_CaptionProperty_set");
    _MessageDialog_CaptionProperty_get = lib.Find<MessageDialog_CaptionProperty_getDelegate>("MessageDialog_CaptionProperty_get");
    _MessageDialog_ButtonsProperty_set = lib.Find<MessageDialog_ButtonsProperty_setDelegate>("MessageDialog_ButtonsProperty_set");
    _MessageDialog_ButtonsProperty_get = lib.Find<MessageDialog_ButtonsProperty_getDelegate>("MessageDialog_ButtonsProperty_get");
    _MessageDialog_ImageProperty_set = lib.Find<MessageDialog_ImageProperty_setDelegate>("MessageDialog_ImageProperty_set");
    _MessageDialog_ImageProperty_get = lib.Find<MessageDialog_ImageProperty_getDelegate>("MessageDialog_ImageProperty_get");
    _NameScope_NameScopeProperty_set = lib.Find<NameScope_NameScopeProperty_setDelegate>("NameScope_NameScopeProperty_set");
    _NameScope_NameScopeProperty_get = lib.Find<NameScope_NameScopeProperty_getDelegate>("NameScope_NameScopeProperty_get");
    _PasswordBox_MaxLengthProperty_set = lib.Find<PasswordBox_MaxLengthProperty_setDelegate>("PasswordBox_MaxLengthProperty_set");
    _PasswordBox_MaxLengthProperty_get = lib.Find<PasswordBox_MaxLengthProperty_getDelegate>("PasswordBox_MaxLengthProperty_get");
    _PasswordBox_PasswordCharProperty_set = lib.Find<PasswordBox_PasswordCharProperty_setDelegate>("PasswordBox_PasswordCharProperty_set");
    _PasswordBox_PasswordCharProperty_get = lib.Find<PasswordBox_PasswordCharProperty_getDelegate>("PasswordBox_PasswordCharProperty_get");
    _Path_DataProperty_set = lib.Find<Path_DataProperty_setDelegate>("Path_DataProperty_set");
    _Path_DataProperty_get = lib.Find<Path_DataProperty_getDelegate>("Path_DataProperty_get");
    _Pen_BrushProperty_set = lib.Find<Pen_BrushProperty_setDelegate>("Pen_BrushProperty_set");
    _Pen_BrushProperty_get = lib.Find<Pen_BrushProperty_getDelegate>("Pen_BrushProperty_get");
    _Pen_DashCapProperty_set = lib.Find<Pen_DashCapProperty_setDelegate>("Pen_DashCapProperty_set");
    _Pen_DashCapProperty_get = lib.Find<Pen_DashCapProperty_getDelegate>("Pen_DashCapProperty_get");
    _Pen_DashStyleProperty_set = lib.Find<Pen_DashStyleProperty_setDelegate>("Pen_DashStyleProperty_set");
    _Pen_DashStyleProperty_get = lib.Find<Pen_DashStyleProperty_getDelegate>("Pen_DashStyleProperty_get");
    _Pen_EndLineCapProperty_set = lib.Find<Pen_EndLineCapProperty_setDelegate>("Pen_EndLineCapProperty_set");
    _Pen_EndLineCapProperty_get = lib.Find<Pen_EndLineCapProperty_getDelegate>("Pen_EndLineCapProperty_get");
    _Pen_LineJoinProperty_set = lib.Find<Pen_LineJoinProperty_setDelegate>("Pen_LineJoinProperty_set");
    _Pen_LineJoinProperty_get = lib.Find<Pen_LineJoinProperty_getDelegate>("Pen_LineJoinProperty_get");
    _Pen_MiterLimitProperty_set = lib.Find<Pen_MiterLimitProperty_setDelegate>("Pen_MiterLimitProperty_set");
    _Pen_MiterLimitProperty_get = lib.Find<Pen_MiterLimitProperty_getDelegate>("Pen_MiterLimitProperty_get");
    _Pen_StartLineCapProperty_set = lib.Find<Pen_StartLineCapProperty_setDelegate>("Pen_StartLineCapProperty_set");
    _Pen_StartLineCapProperty_get = lib.Find<Pen_StartLineCapProperty_getDelegate>("Pen_StartLineCapProperty_get");
    _Pen_ThicknessProperty_set = lib.Find<Pen_ThicknessProperty_setDelegate>("Pen_ThicknessProperty_set");
    _Pen_ThicknessProperty_get = lib.Find<Pen_ThicknessProperty_getDelegate>("Pen_ThicknessProperty_get");
    _PlaneProjection_CenterOfRotationXProperty_set = lib.Find<PlaneProjection_CenterOfRotationXProperty_setDelegate>("PlaneProjection_CenterOfRotationXProperty_set");
    _PlaneProjection_CenterOfRotationXProperty_get = lib.Find<PlaneProjection_CenterOfRotationXProperty_getDelegate>("PlaneProjection_CenterOfRotationXProperty_get");
    _PlaneProjection_CenterOfRotationYProperty_set = lib.Find<PlaneProjection_CenterOfRotationYProperty_setDelegate>("PlaneProjection_CenterOfRotationYProperty_set");
    _PlaneProjection_CenterOfRotationYProperty_get = lib.Find<PlaneProjection_CenterOfRotationYProperty_getDelegate>("PlaneProjection_CenterOfRotationYProperty_get");
    _PlaneProjection_CenterOfRotationZProperty_set = lib.Find<PlaneProjection_CenterOfRotationZProperty_setDelegate>("PlaneProjection_CenterOfRotationZProperty_set");
    _PlaneProjection_CenterOfRotationZProperty_get = lib.Find<PlaneProjection_CenterOfRotationZProperty_getDelegate>("PlaneProjection_CenterOfRotationZProperty_get");
    _PlaneProjection_GlobalOffsetXProperty_set = lib.Find<PlaneProjection_GlobalOffsetXProperty_setDelegate>("PlaneProjection_GlobalOffsetXProperty_set");
    _PlaneProjection_GlobalOffsetXProperty_get = lib.Find<PlaneProjection_GlobalOffsetXProperty_getDelegate>("PlaneProjection_GlobalOffsetXProperty_get");
    _PlaneProjection_GlobalOffsetYProperty_set = lib.Find<PlaneProjection_GlobalOffsetYProperty_setDelegate>("PlaneProjection_GlobalOffsetYProperty_set");
    _PlaneProjection_GlobalOffsetYProperty_get = lib.Find<PlaneProjection_GlobalOffsetYProperty_getDelegate>("PlaneProjection_GlobalOffsetYProperty_get");
    _PlaneProjection_GlobalOffsetZProperty_set = lib.Find<PlaneProjection_GlobalOffsetZProperty_setDelegate>("PlaneProjection_GlobalOffsetZProperty_set");
    _PlaneProjection_GlobalOffsetZProperty_get = lib.Find<PlaneProjection_GlobalOffsetZProperty_getDelegate>("PlaneProjection_GlobalOffsetZProperty_get");
    _PlaneProjection_LocalOffsetXProperty_set = lib.Find<PlaneProjection_LocalOffsetXProperty_setDelegate>("PlaneProjection_LocalOffsetXProperty_set");
    _PlaneProjection_LocalOffsetXProperty_get = lib.Find<PlaneProjection_LocalOffsetXProperty_getDelegate>("PlaneProjection_LocalOffsetXProperty_get");
    _PlaneProjection_LocalOffsetYProperty_set = lib.Find<PlaneProjection_LocalOffsetYProperty_setDelegate>("PlaneProjection_LocalOffsetYProperty_set");
    _PlaneProjection_LocalOffsetYProperty_get = lib.Find<PlaneProjection_LocalOffsetYProperty_getDelegate>("PlaneProjection_LocalOffsetYProperty_get");
    _PlaneProjection_LocalOffsetZProperty_set = lib.Find<PlaneProjection_LocalOffsetZProperty_setDelegate>("PlaneProjection_LocalOffsetZProperty_set");
    _PlaneProjection_LocalOffsetZProperty_get = lib.Find<PlaneProjection_LocalOffsetZProperty_getDelegate>("PlaneProjection_LocalOffsetZProperty_get");
    _PlaneProjection_ProjectionMatrixProperty_set = lib.Find<PlaneProjection_ProjectionMatrixProperty_setDelegate>("PlaneProjection_ProjectionMatrixProperty_set");
    _PlaneProjection_ProjectionMatrixProperty_get = lib.Find<PlaneProjection_ProjectionMatrixProperty_getDelegate>("PlaneProjection_ProjectionMatrixProperty_get");
    _PlaneProjection_RotationXProperty_set = lib.Find<PlaneProjection_RotationXProperty_setDelegate>("PlaneProjection_RotationXProperty_set");
    _PlaneProjection_RotationXProperty_get = lib.Find<PlaneProjection_RotationXProperty_getDelegate>("PlaneProjection_RotationXProperty_get");
    _PlaneProjection_RotationYProperty_set = lib.Find<PlaneProjection_RotationYProperty_setDelegate>("PlaneProjection_RotationYProperty_set");
    _PlaneProjection_RotationYProperty_get = lib.Find<PlaneProjection_RotationYProperty_getDelegate>("PlaneProjection_RotationYProperty_get");
    _PlaneProjection_RotationZProperty_set = lib.Find<PlaneProjection_RotationZProperty_setDelegate>("PlaneProjection_RotationZProperty_set");
    _PlaneProjection_RotationZProperty_get = lib.Find<PlaneProjection_RotationZProperty_getDelegate>("PlaneProjection_RotationZProperty_get");
    _Popup_AllowsTransparencyProperty_set = lib.Find<Popup_AllowsTransparencyProperty_setDelegate>("Popup_AllowsTransparencyProperty_set");
    _Popup_AllowsTransparencyProperty_get = lib.Find<Popup_AllowsTransparencyProperty_getDelegate>("Popup_AllowsTransparencyProperty_get");
    _Popup_ChildProperty_set = lib.Find<Popup_ChildProperty_setDelegate>("Popup_ChildProperty_set");
    _Popup_ChildProperty_get = lib.Find<Popup_ChildProperty_getDelegate>("Popup_ChildProperty_get");
    _Popup_CustomPopupPlacementCallbackProperty_set = lib.Find<Popup_CustomPopupPlacementCallbackProperty_setDelegate>("Popup_CustomPopupPlacementCallbackProperty_set");
    _Popup_CustomPopupPlacementCallbackProperty_get = lib.Find<Popup_CustomPopupPlacementCallbackProperty_getDelegate>("Popup_CustomPopupPlacementCallbackProperty_get");
    _Popup_HasDropShadowProperty_set = lib.Find<Popup_HasDropShadowProperty_setDelegate>("Popup_HasDropShadowProperty_set");
    _Popup_HasDropShadowProperty_get = lib.Find<Popup_HasDropShadowProperty_getDelegate>("Popup_HasDropShadowProperty_get");
    _Popup_HorizontalOffsetProperty_set = lib.Find<Popup_HorizontalOffsetProperty_setDelegate>("Popup_HorizontalOffsetProperty_set");
    _Popup_HorizontalOffsetProperty_get = lib.Find<Popup_HorizontalOffsetProperty_getDelegate>("Popup_HorizontalOffsetProperty_get");
    _Popup_IsOpenProperty_set = lib.Find<Popup_IsOpenProperty_setDelegate>("Popup_IsOpenProperty_set");
    _Popup_IsOpenProperty_get = lib.Find<Popup_IsOpenProperty_getDelegate>("Popup_IsOpenProperty_get");
    _Popup_PlacementProperty_set = lib.Find<Popup_PlacementProperty_setDelegate>("Popup_PlacementProperty_set");
    _Popup_PlacementProperty_get = lib.Find<Popup_PlacementProperty_getDelegate>("Popup_PlacementProperty_get");
    _Popup_PlacementRectangleProperty_set = lib.Find<Popup_PlacementRectangleProperty_setDelegate>("Popup_PlacementRectangleProperty_set");
    _Popup_PlacementRectangleProperty_get = lib.Find<Popup_PlacementRectangleProperty_getDelegate>("Popup_PlacementRectangleProperty_get");
    _Popup_PlacementTargetProperty_set = lib.Find<Popup_PlacementTargetProperty_setDelegate>("Popup_PlacementTargetProperty_set");
    _Popup_PlacementTargetProperty_get = lib.Find<Popup_PlacementTargetProperty_getDelegate>("Popup_PlacementTargetProperty_get");
    _Popup_PopupAnimationProperty_set = lib.Find<Popup_PopupAnimationProperty_setDelegate>("Popup_PopupAnimationProperty_set");
    _Popup_PopupAnimationProperty_get = lib.Find<Popup_PopupAnimationProperty_getDelegate>("Popup_PopupAnimationProperty_get");
    _Popup_StaysOpenProperty_set = lib.Find<Popup_StaysOpenProperty_setDelegate>("Popup_StaysOpenProperty_set");
    _Popup_StaysOpenProperty_get = lib.Find<Popup_StaysOpenProperty_getDelegate>("Popup_StaysOpenProperty_get");
    _Popup_VerticalOffsetProperty_set = lib.Find<Popup_VerticalOffsetProperty_setDelegate>("Popup_VerticalOffsetProperty_set");
    _Popup_VerticalOffsetProperty_get = lib.Find<Popup_VerticalOffsetProperty_getDelegate>("Popup_VerticalOffsetProperty_get");
    _RangeBase_LargeChangeProperty_set = lib.Find<RangeBase_LargeChangeProperty_setDelegate>("RangeBase_LargeChangeProperty_set");
    _RangeBase_LargeChangeProperty_get = lib.Find<RangeBase_LargeChangeProperty_getDelegate>("RangeBase_LargeChangeProperty_get");
    _RangeBase_MaximumProperty_set = lib.Find<RangeBase_MaximumProperty_setDelegate>("RangeBase_MaximumProperty_set");
    _RangeBase_MaximumProperty_get = lib.Find<RangeBase_MaximumProperty_getDelegate>("RangeBase_MaximumProperty_get");
    _RangeBase_MinimumProperty_set = lib.Find<RangeBase_MinimumProperty_setDelegate>("RangeBase_MinimumProperty_set");
    _RangeBase_MinimumProperty_get = lib.Find<RangeBase_MinimumProperty_getDelegate>("RangeBase_MinimumProperty_get");
    _RangeBase_SmallChangeProperty_set = lib.Find<RangeBase_SmallChangeProperty_setDelegate>("RangeBase_SmallChangeProperty_set");
    _RangeBase_SmallChangeProperty_get = lib.Find<RangeBase_SmallChangeProperty_getDelegate>("RangeBase_SmallChangeProperty_get");
    _RangeBase_ValueProperty_set = lib.Find<RangeBase_ValueProperty_setDelegate>("RangeBase_ValueProperty_set");
    _RangeBase_ValueProperty_get = lib.Find<RangeBase_ValueProperty_getDelegate>("RangeBase_ValueProperty_get");
    _ProgressBar_IsIndeterminateProperty_set = lib.Find<ProgressBar_IsIndeterminateProperty_setDelegate>("ProgressBar_IsIndeterminateProperty_set");
    _ProgressBar_IsIndeterminateProperty_get = lib.Find<ProgressBar_IsIndeterminateProperty_getDelegate>("ProgressBar_IsIndeterminateProperty_get");
    _ProgressBar_OrientationProperty_set = lib.Find<ProgressBar_OrientationProperty_setDelegate>("ProgressBar_OrientationProperty_set");
    _ProgressBar_OrientationProperty_get = lib.Find<ProgressBar_OrientationProperty_getDelegate>("ProgressBar_OrientationProperty_get");
    _RadialGradientBrush_CenterProperty_set = lib.Find<RadialGradientBrush_CenterProperty_setDelegate>("RadialGradientBrush_CenterProperty_set");
    _RadialGradientBrush_CenterProperty_get = lib.Find<RadialGradientBrush_CenterProperty_getDelegate>("RadialGradientBrush_CenterProperty_get");
    _RadialGradientBrush_GradientOriginProperty_set = lib.Find<RadialGradientBrush_GradientOriginProperty_setDelegate>("RadialGradientBrush_GradientOriginProperty_set");
    _RadialGradientBrush_GradientOriginProperty_get = lib.Find<RadialGradientBrush_GradientOriginProperty_getDelegate>("RadialGradientBrush_GradientOriginProperty_get");
    _RadialGradientBrush_RadiusXProperty_set = lib.Find<RadialGradientBrush_RadiusXProperty_setDelegate>("RadialGradientBrush_RadiusXProperty_set");
    _RadialGradientBrush_RadiusXProperty_get = lib.Find<RadialGradientBrush_RadiusXProperty_getDelegate>("RadialGradientBrush_RadiusXProperty_get");
    _RadialGradientBrush_RadiusYProperty_set = lib.Find<RadialGradientBrush_RadiusYProperty_setDelegate>("RadialGradientBrush_RadiusYProperty_set");
    _RadialGradientBrush_RadiusYProperty_get = lib.Find<RadialGradientBrush_RadiusYProperty_getDelegate>("RadialGradientBrush_RadiusYProperty_get");
    _RadioButton_GroupNameProperty_set = lib.Find<RadioButton_GroupNameProperty_setDelegate>("RadioButton_GroupNameProperty_set");
    _RadioButton_GroupNameProperty_get = lib.Find<RadioButton_GroupNameProperty_getDelegate>("RadioButton_GroupNameProperty_get");
    _Rectangle_RadiusXProperty_set = lib.Find<Rectangle_RadiusXProperty_setDelegate>("Rectangle_RadiusXProperty_set");
    _Rectangle_RadiusXProperty_get = lib.Find<Rectangle_RadiusXProperty_getDelegate>("Rectangle_RadiusXProperty_get");
    _Rectangle_RadiusYProperty_set = lib.Find<Rectangle_RadiusYProperty_setDelegate>("Rectangle_RadiusYProperty_set");
    _Rectangle_RadiusYProperty_get = lib.Find<Rectangle_RadiusYProperty_getDelegate>("Rectangle_RadiusYProperty_get");
    _RectangleGeometry_RadiusXProperty_set = lib.Find<RectangleGeometry_RadiusXProperty_setDelegate>("RectangleGeometry_RadiusXProperty_set");
    _RectangleGeometry_RadiusXProperty_get = lib.Find<RectangleGeometry_RadiusXProperty_getDelegate>("RectangleGeometry_RadiusXProperty_get");
    _RectangleGeometry_RadiusYProperty_set = lib.Find<RectangleGeometry_RadiusYProperty_setDelegate>("RectangleGeometry_RadiusYProperty_set");
    _RectangleGeometry_RadiusYProperty_get = lib.Find<RectangleGeometry_RadiusYProperty_getDelegate>("RectangleGeometry_RadiusYProperty_get");
    _RectangleGeometry_RectProperty_set = lib.Find<RectangleGeometry_RectProperty_setDelegate>("RectangleGeometry_RectProperty_set");
    _RectangleGeometry_RectProperty_get = lib.Find<RectangleGeometry_RectProperty_getDelegate>("RectangleGeometry_RectProperty_get");
    _RepeatButton_DelayProperty_set = lib.Find<RepeatButton_DelayProperty_setDelegate>("RepeatButton_DelayProperty_set");
    _RepeatButton_DelayProperty_get = lib.Find<RepeatButton_DelayProperty_getDelegate>("RepeatButton_DelayProperty_get");
    _RepeatButton_IntervalProperty_set = lib.Find<RepeatButton_IntervalProperty_setDelegate>("RepeatButton_IntervalProperty_set");
    _RepeatButton_IntervalProperty_get = lib.Find<RepeatButton_IntervalProperty_getDelegate>("RepeatButton_IntervalProperty_get");
    _RotateTransform_AngleProperty_set = lib.Find<RotateTransform_AngleProperty_setDelegate>("RotateTransform_AngleProperty_set");
    _RotateTransform_AngleProperty_get = lib.Find<RotateTransform_AngleProperty_getDelegate>("RotateTransform_AngleProperty_get");
    _RotateTransform_CenterXProperty_set = lib.Find<RotateTransform_CenterXProperty_setDelegate>("RotateTransform_CenterXProperty_set");
    _RotateTransform_CenterXProperty_get = lib.Find<RotateTransform_CenterXProperty_getDelegate>("RotateTransform_CenterXProperty_get");
    _RotateTransform_CenterYProperty_set = lib.Find<RotateTransform_CenterYProperty_setDelegate>("RotateTransform_CenterYProperty_set");
    _RotateTransform_CenterYProperty_get = lib.Find<RotateTransform_CenterYProperty_getDelegate>("RotateTransform_CenterYProperty_get");
    _RowDefinition_HeightProperty_set = lib.Find<RowDefinition_HeightProperty_setDelegate>("RowDefinition_HeightProperty_set");
    _RowDefinition_HeightProperty_get = lib.Find<RowDefinition_HeightProperty_getDelegate>("RowDefinition_HeightProperty_get");
    _RowDefinition_MinHeightProperty_set = lib.Find<RowDefinition_MinHeightProperty_setDelegate>("RowDefinition_MinHeightProperty_set");
    _RowDefinition_MinHeightProperty_get = lib.Find<RowDefinition_MinHeightProperty_getDelegate>("RowDefinition_MinHeightProperty_get");
    _RowDefinition_MaxHeightProperty_set = lib.Find<RowDefinition_MaxHeightProperty_setDelegate>("RowDefinition_MaxHeightProperty_set");
    _RowDefinition_MaxHeightProperty_get = lib.Find<RowDefinition_MaxHeightProperty_getDelegate>("RowDefinition_MaxHeightProperty_get");
    _ScaleTransform_CenterXProperty_set = lib.Find<ScaleTransform_CenterXProperty_setDelegate>("ScaleTransform_CenterXProperty_set");
    _ScaleTransform_CenterXProperty_get = lib.Find<ScaleTransform_CenterXProperty_getDelegate>("ScaleTransform_CenterXProperty_get");
    _ScaleTransform_CenterYProperty_set = lib.Find<ScaleTransform_CenterYProperty_setDelegate>("ScaleTransform_CenterYProperty_set");
    _ScaleTransform_CenterYProperty_get = lib.Find<ScaleTransform_CenterYProperty_getDelegate>("ScaleTransform_CenterYProperty_get");
    _ScaleTransform_ScaleXProperty_set = lib.Find<ScaleTransform_ScaleXProperty_setDelegate>("ScaleTransform_ScaleXProperty_set");
    _ScaleTransform_ScaleXProperty_get = lib.Find<ScaleTransform_ScaleXProperty_getDelegate>("ScaleTransform_ScaleXProperty_get");
    _ScaleTransform_ScaleYProperty_set = lib.Find<ScaleTransform_ScaleYProperty_setDelegate>("ScaleTransform_ScaleYProperty_set");
    _ScaleTransform_ScaleYProperty_get = lib.Find<ScaleTransform_ScaleYProperty_getDelegate>("ScaleTransform_ScaleYProperty_get");
    _ScrollBar_OrientationProperty_set = lib.Find<ScrollBar_OrientationProperty_setDelegate>("ScrollBar_OrientationProperty_set");
    _ScrollBar_OrientationProperty_get = lib.Find<ScrollBar_OrientationProperty_getDelegate>("ScrollBar_OrientationProperty_get");
    _ScrollBar_ViewportSizeProperty_set = lib.Find<ScrollBar_ViewportSizeProperty_setDelegate>("ScrollBar_ViewportSizeProperty_set");
    _ScrollBar_ViewportSizeProperty_get = lib.Find<ScrollBar_ViewportSizeProperty_getDelegate>("ScrollBar_ViewportSizeProperty_get");
    _ScrollContentPresenter_CanContentScrollProperty_set = lib.Find<ScrollContentPresenter_CanContentScrollProperty_setDelegate>("ScrollContentPresenter_CanContentScrollProperty_set");
    _ScrollContentPresenter_CanContentScrollProperty_get = lib.Find<ScrollContentPresenter_CanContentScrollProperty_getDelegate>("ScrollContentPresenter_CanContentScrollProperty_get");
    _ScrollViewer_CanContentScrollProperty_set = lib.Find<ScrollViewer_CanContentScrollProperty_setDelegate>("ScrollViewer_CanContentScrollProperty_set");
    _ScrollViewer_CanContentScrollProperty_get = lib.Find<ScrollViewer_CanContentScrollProperty_getDelegate>("ScrollViewer_CanContentScrollProperty_get");
    _ScrollViewer_ComputedHorizontalScrollBarVisibilityProperty_set = lib.Find<ScrollViewer_ComputedHorizontalScrollBarVisibilityProperty_setDelegate>("ScrollViewer_ComputedHorizontalScrollBarVisibilityProperty_set");
    _ScrollViewer_ComputedHorizontalScrollBarVisibilityProperty_get = lib.Find<ScrollViewer_ComputedHorizontalScrollBarVisibilityProperty_getDelegate>("ScrollViewer_ComputedHorizontalScrollBarVisibilityProperty_get");
    _ScrollViewer_ComputedVerticalScrollBarVisibilityProperty_set = lib.Find<ScrollViewer_ComputedVerticalScrollBarVisibilityProperty_setDelegate>("ScrollViewer_ComputedVerticalScrollBarVisibilityProperty_set");
    _ScrollViewer_ComputedVerticalScrollBarVisibilityProperty_get = lib.Find<ScrollViewer_ComputedVerticalScrollBarVisibilityProperty_getDelegate>("ScrollViewer_ComputedVerticalScrollBarVisibilityProperty_get");
    _ScrollViewer_ExtentHeightProperty_set = lib.Find<ScrollViewer_ExtentHeightProperty_setDelegate>("ScrollViewer_ExtentHeightProperty_set");
    _ScrollViewer_ExtentHeightProperty_get = lib.Find<ScrollViewer_ExtentHeightProperty_getDelegate>("ScrollViewer_ExtentHeightProperty_get");
    _ScrollViewer_ExtentWidthProperty_set = lib.Find<ScrollViewer_ExtentWidthProperty_setDelegate>("ScrollViewer_ExtentWidthProperty_set");
    _ScrollViewer_ExtentWidthProperty_get = lib.Find<ScrollViewer_ExtentWidthProperty_getDelegate>("ScrollViewer_ExtentWidthProperty_get");
    _ScrollViewer_HorizontalOffsetProperty_set = lib.Find<ScrollViewer_HorizontalOffsetProperty_setDelegate>("ScrollViewer_HorizontalOffsetProperty_set");
    _ScrollViewer_HorizontalOffsetProperty_get = lib.Find<ScrollViewer_HorizontalOffsetProperty_getDelegate>("ScrollViewer_HorizontalOffsetProperty_get");
    _ScrollViewer_HorizontalScrollBarVisibilityProperty_set = lib.Find<ScrollViewer_HorizontalScrollBarVisibilityProperty_setDelegate>("ScrollViewer_HorizontalScrollBarVisibilityProperty_set");
    _ScrollViewer_HorizontalScrollBarVisibilityProperty_get = lib.Find<ScrollViewer_HorizontalScrollBarVisibilityProperty_getDelegate>("ScrollViewer_HorizontalScrollBarVisibilityProperty_get");
    _ScrollViewer_ScrollableHeightProperty_set = lib.Find<ScrollViewer_ScrollableHeightProperty_setDelegate>("ScrollViewer_ScrollableHeightProperty_set");
    _ScrollViewer_ScrollableHeightProperty_get = lib.Find<ScrollViewer_ScrollableHeightProperty_getDelegate>("ScrollViewer_ScrollableHeightProperty_get");
    _ScrollViewer_ScrollableWidthProperty_set = lib.Find<ScrollViewer_ScrollableWidthProperty_setDelegate>("ScrollViewer_ScrollableWidthProperty_set");
    _ScrollViewer_ScrollableWidthProperty_get = lib.Find<ScrollViewer_ScrollableWidthProperty_getDelegate>("ScrollViewer_ScrollableWidthProperty_get");
    _ScrollViewer_VerticalOffsetProperty_set = lib.Find<ScrollViewer_VerticalOffsetProperty_setDelegate>("ScrollViewer_VerticalOffsetProperty_set");
    _ScrollViewer_VerticalOffsetProperty_get = lib.Find<ScrollViewer_VerticalOffsetProperty_getDelegate>("ScrollViewer_VerticalOffsetProperty_get");
    _ScrollViewer_VerticalScrollBarVisibilityProperty_set = lib.Find<ScrollViewer_VerticalScrollBarVisibilityProperty_setDelegate>("ScrollViewer_VerticalScrollBarVisibilityProperty_set");
    _ScrollViewer_VerticalScrollBarVisibilityProperty_get = lib.Find<ScrollViewer_VerticalScrollBarVisibilityProperty_getDelegate>("ScrollViewer_VerticalScrollBarVisibilityProperty_get");
    _ScrollViewer_ViewportHeightProperty_set = lib.Find<ScrollViewer_ViewportHeightProperty_setDelegate>("ScrollViewer_ViewportHeightProperty_set");
    _ScrollViewer_ViewportHeightProperty_get = lib.Find<ScrollViewer_ViewportHeightProperty_getDelegate>("ScrollViewer_ViewportHeightProperty_get");
    _ScrollViewer_ViewportWidthProperty_set = lib.Find<ScrollViewer_ViewportWidthProperty_setDelegate>("ScrollViewer_ViewportWidthProperty_set");
    _ScrollViewer_ViewportWidthProperty_get = lib.Find<ScrollViewer_ViewportWidthProperty_getDelegate>("ScrollViewer_ViewportWidthProperty_get");
    _SkewTransform_AngleXProperty_set = lib.Find<SkewTransform_AngleXProperty_setDelegate>("SkewTransform_AngleXProperty_set");
    _SkewTransform_AngleXProperty_get = lib.Find<SkewTransform_AngleXProperty_getDelegate>("SkewTransform_AngleXProperty_get");
    _SkewTransform_AngleYProperty_set = lib.Find<SkewTransform_AngleYProperty_setDelegate>("SkewTransform_AngleYProperty_set");
    _SkewTransform_AngleYProperty_get = lib.Find<SkewTransform_AngleYProperty_getDelegate>("SkewTransform_AngleYProperty_get");
    _SkewTransform_CenterXProperty_set = lib.Find<SkewTransform_CenterXProperty_setDelegate>("SkewTransform_CenterXProperty_set");
    _SkewTransform_CenterXProperty_get = lib.Find<SkewTransform_CenterXProperty_getDelegate>("SkewTransform_CenterXProperty_get");
    _SkewTransform_CenterYProperty_set = lib.Find<SkewTransform_CenterYProperty_setDelegate>("SkewTransform_CenterYProperty_set");
    _SkewTransform_CenterYProperty_get = lib.Find<SkewTransform_CenterYProperty_getDelegate>("SkewTransform_CenterYProperty_get");
    _Slider_AutoToolTipPlacementProperty_set = lib.Find<Slider_AutoToolTipPlacementProperty_setDelegate>("Slider_AutoToolTipPlacementProperty_set");
    _Slider_AutoToolTipPlacementProperty_get = lib.Find<Slider_AutoToolTipPlacementProperty_getDelegate>("Slider_AutoToolTipPlacementProperty_get");
    _Slider_AutoToolTipPrecisionProperty_set = lib.Find<Slider_AutoToolTipPrecisionProperty_setDelegate>("Slider_AutoToolTipPrecisionProperty_set");
    _Slider_AutoToolTipPrecisionProperty_get = lib.Find<Slider_AutoToolTipPrecisionProperty_getDelegate>("Slider_AutoToolTipPrecisionProperty_get");
    _Slider_DelayProperty_set = lib.Find<Slider_DelayProperty_setDelegate>("Slider_DelayProperty_set");
    _Slider_DelayProperty_get = lib.Find<Slider_DelayProperty_getDelegate>("Slider_DelayProperty_get");
    _Slider_IntervalProperty_set = lib.Find<Slider_IntervalProperty_setDelegate>("Slider_IntervalProperty_set");
    _Slider_IntervalProperty_get = lib.Find<Slider_IntervalProperty_getDelegate>("Slider_IntervalProperty_get");
    _Slider_IsDirectionReversedProperty_set = lib.Find<Slider_IsDirectionReversedProperty_setDelegate>("Slider_IsDirectionReversedProperty_set");
    _Slider_IsDirectionReversedProperty_get = lib.Find<Slider_IsDirectionReversedProperty_getDelegate>("Slider_IsDirectionReversedProperty_get");
    _Slider_IsMoveToPointEnabledProperty_set = lib.Find<Slider_IsMoveToPointEnabledProperty_setDelegate>("Slider_IsMoveToPointEnabledProperty_set");
    _Slider_IsMoveToPointEnabledProperty_get = lib.Find<Slider_IsMoveToPointEnabledProperty_getDelegate>("Slider_IsMoveToPointEnabledProperty_get");
    _Slider_IsSelectionRangeEnabledProperty_set = lib.Find<Slider_IsSelectionRangeEnabledProperty_setDelegate>("Slider_IsSelectionRangeEnabledProperty_set");
    _Slider_IsSelectionRangeEnabledProperty_get = lib.Find<Slider_IsSelectionRangeEnabledProperty_getDelegate>("Slider_IsSelectionRangeEnabledProperty_get");
    _Slider_IsSnapToTickEnabledProperty_set = lib.Find<Slider_IsSnapToTickEnabledProperty_setDelegate>("Slider_IsSnapToTickEnabledProperty_set");
    _Slider_IsSnapToTickEnabledProperty_get = lib.Find<Slider_IsSnapToTickEnabledProperty_getDelegate>("Slider_IsSnapToTickEnabledProperty_get");
    _Slider_OrientationProperty_set = lib.Find<Slider_OrientationProperty_setDelegate>("Slider_OrientationProperty_set");
    _Slider_OrientationProperty_get = lib.Find<Slider_OrientationProperty_getDelegate>("Slider_OrientationProperty_get");
    _Slider_SelectionEndProperty_set = lib.Find<Slider_SelectionEndProperty_setDelegate>("Slider_SelectionEndProperty_set");
    _Slider_SelectionEndProperty_get = lib.Find<Slider_SelectionEndProperty_getDelegate>("Slider_SelectionEndProperty_get");
    _Slider_SelectionStartProperty_set = lib.Find<Slider_SelectionStartProperty_setDelegate>("Slider_SelectionStartProperty_set");
    _Slider_SelectionStartProperty_get = lib.Find<Slider_SelectionStartProperty_getDelegate>("Slider_SelectionStartProperty_get");
    _Slider_TickFrequencyProperty_set = lib.Find<Slider_TickFrequencyProperty_setDelegate>("Slider_TickFrequencyProperty_set");
    _Slider_TickFrequencyProperty_get = lib.Find<Slider_TickFrequencyProperty_getDelegate>("Slider_TickFrequencyProperty_get");
    _Slider_TickPlacementProperty_set = lib.Find<Slider_TickPlacementProperty_setDelegate>("Slider_TickPlacementProperty_set");
    _Slider_TickPlacementProperty_get = lib.Find<Slider_TickPlacementProperty_getDelegate>("Slider_TickPlacementProperty_get");
    _Slider_TicksProperty_set = lib.Find<Slider_TicksProperty_setDelegate>("Slider_TicksProperty_set");
    _Slider_TicksProperty_get = lib.Find<Slider_TicksProperty_getDelegate>("Slider_TicksProperty_get");
    _SolidColorBrush_ColorProperty_set = lib.Find<SolidColorBrush_ColorProperty_setDelegate>("SolidColorBrush_ColorProperty_set");
    _SolidColorBrush_ColorProperty_get = lib.Find<SolidColorBrush_ColorProperty_getDelegate>("SolidColorBrush_ColorProperty_get");
    _StackPanel_OrientationProperty_set = lib.Find<StackPanel_OrientationProperty_setDelegate>("StackPanel_OrientationProperty_set");
    _StackPanel_OrientationProperty_get = lib.Find<StackPanel_OrientationProperty_getDelegate>("StackPanel_OrientationProperty_get");
    _StreamGeometry_FillRuleProperty_set = lib.Find<StreamGeometry_FillRuleProperty_setDelegate>("StreamGeometry_FillRuleProperty_set");
    _StreamGeometry_FillRuleProperty_get = lib.Find<StreamGeometry_FillRuleProperty_getDelegate>("StreamGeometry_FillRuleProperty_get");
    _TabControl_ContentTemplateProperty_set = lib.Find<TabControl_ContentTemplateProperty_setDelegate>("TabControl_ContentTemplateProperty_set");
    _TabControl_ContentTemplateProperty_get = lib.Find<TabControl_ContentTemplateProperty_getDelegate>("TabControl_ContentTemplateProperty_get");
    _TabControl_ContentTemplateSelectorProperty_set = lib.Find<TabControl_ContentTemplateSelectorProperty_setDelegate>("TabControl_ContentTemplateSelectorProperty_set");
    _TabControl_ContentTemplateSelectorProperty_get = lib.Find<TabControl_ContentTemplateSelectorProperty_getDelegate>("TabControl_ContentTemplateSelectorProperty_get");
    _TabControl_SelectedContentProperty_set = lib.Find<TabControl_SelectedContentProperty_setDelegate>("TabControl_SelectedContentProperty_set");
    _TabControl_SelectedContentProperty_get = lib.Find<TabControl_SelectedContentProperty_getDelegate>("TabControl_SelectedContentProperty_get");
    _TabControl_SelectedContentTemplateProperty_set = lib.Find<TabControl_SelectedContentTemplateProperty_setDelegate>("TabControl_SelectedContentTemplateProperty_set");
    _TabControl_SelectedContentTemplateProperty_get = lib.Find<TabControl_SelectedContentTemplateProperty_getDelegate>("TabControl_SelectedContentTemplateProperty_get");
    _TabControl_SelectedContentTemplateSelectorProperty_set = lib.Find<TabControl_SelectedContentTemplateSelectorProperty_setDelegate>("TabControl_SelectedContentTemplateSelectorProperty_set");
    _TabControl_SelectedContentTemplateSelectorProperty_get = lib.Find<TabControl_SelectedContentTemplateSelectorProperty_getDelegate>("TabControl_SelectedContentTemplateSelectorProperty_get");
    _TabControl_TabStripPlacementProperty_set = lib.Find<TabControl_TabStripPlacementProperty_setDelegate>("TabControl_TabStripPlacementProperty_set");
    _TabControl_TabStripPlacementProperty_get = lib.Find<TabControl_TabStripPlacementProperty_getDelegate>("TabControl_TabStripPlacementProperty_get");
    _TabItem_IsSelectedProperty_set = lib.Find<TabItem_IsSelectedProperty_setDelegate>("TabItem_IsSelectedProperty_set");
    _TabItem_IsSelectedProperty_get = lib.Find<TabItem_IsSelectedProperty_getDelegate>("TabItem_IsSelectedProperty_get");
    _TabItem_TabStripPlacementProperty_set = lib.Find<TabItem_TabStripPlacementProperty_setDelegate>("TabItem_TabStripPlacementProperty_set");
    _TabItem_TabStripPlacementProperty_get = lib.Find<TabItem_TabStripPlacementProperty_getDelegate>("TabItem_TabStripPlacementProperty_get");
    _TextBlock_BackgroundProperty_set = lib.Find<TextBlock_BackgroundProperty_setDelegate>("TextBlock_BackgroundProperty_set");
    _TextBlock_BackgroundProperty_get = lib.Find<TextBlock_BackgroundProperty_getDelegate>("TextBlock_BackgroundProperty_get");
    _TextBlock_BaselineOffsetProperty_set = lib.Find<TextBlock_BaselineOffsetProperty_setDelegate>("TextBlock_BaselineOffsetProperty_set");
    _TextBlock_BaselineOffsetProperty_get = lib.Find<TextBlock_BaselineOffsetProperty_getDelegate>("TextBlock_BaselineOffsetProperty_get");
    _TextBlock_FontFamilyProperty_set = lib.Find<TextBlock_FontFamilyProperty_setDelegate>("TextBlock_FontFamilyProperty_set");
    _TextBlock_FontFamilyProperty_get = lib.Find<TextBlock_FontFamilyProperty_getDelegate>("TextBlock_FontFamilyProperty_get");
    _TextBlock_FontSizeProperty_set = lib.Find<TextBlock_FontSizeProperty_setDelegate>("TextBlock_FontSizeProperty_set");
    _TextBlock_FontSizeProperty_get = lib.Find<TextBlock_FontSizeProperty_getDelegate>("TextBlock_FontSizeProperty_get");
    _TextBlock_FontStretchProperty_set = lib.Find<TextBlock_FontStretchProperty_setDelegate>("TextBlock_FontStretchProperty_set");
    _TextBlock_FontStretchProperty_get = lib.Find<TextBlock_FontStretchProperty_getDelegate>("TextBlock_FontStretchProperty_get");
    _TextBlock_FontStyleProperty_set = lib.Find<TextBlock_FontStyleProperty_setDelegate>("TextBlock_FontStyleProperty_set");
    _TextBlock_FontStyleProperty_get = lib.Find<TextBlock_FontStyleProperty_getDelegate>("TextBlock_FontStyleProperty_get");
    _TextBlock_FontWeightProperty_set = lib.Find<TextBlock_FontWeightProperty_setDelegate>("TextBlock_FontWeightProperty_set");
    _TextBlock_FontWeightProperty_get = lib.Find<TextBlock_FontWeightProperty_getDelegate>("TextBlock_FontWeightProperty_get");
    _TextBlock_ForegroundProperty_set = lib.Find<TextBlock_ForegroundProperty_setDelegate>("TextBlock_ForegroundProperty_set");
    _TextBlock_ForegroundProperty_get = lib.Find<TextBlock_ForegroundProperty_getDelegate>("TextBlock_ForegroundProperty_get");
    _TextBlock_IsHyphenationEnabledProperty_set = lib.Find<TextBlock_IsHyphenationEnabledProperty_setDelegate>("TextBlock_IsHyphenationEnabledProperty_set");
    _TextBlock_IsHyphenationEnabledProperty_get = lib.Find<TextBlock_IsHyphenationEnabledProperty_getDelegate>("TextBlock_IsHyphenationEnabledProperty_get");
    _TextBlock_LineHeightProperty_set = lib.Find<TextBlock_LineHeightProperty_setDelegate>("TextBlock_LineHeightProperty_set");
    _TextBlock_LineHeightProperty_get = lib.Find<TextBlock_LineHeightProperty_getDelegate>("TextBlock_LineHeightProperty_get");
    _TextBlock_LineStackingStrategyProperty_set = lib.Find<TextBlock_LineStackingStrategyProperty_setDelegate>("TextBlock_LineStackingStrategyProperty_set");
    _TextBlock_LineStackingStrategyProperty_get = lib.Find<TextBlock_LineStackingStrategyProperty_getDelegate>("TextBlock_LineStackingStrategyProperty_get");
    _TextBlock_PaddingProperty_set = lib.Find<TextBlock_PaddingProperty_setDelegate>("TextBlock_PaddingProperty_set");
    _TextBlock_PaddingProperty_get = lib.Find<TextBlock_PaddingProperty_getDelegate>("TextBlock_PaddingProperty_get");
    _TextBlock_StrokeProperty_set = lib.Find<TextBlock_StrokeProperty_setDelegate>("TextBlock_StrokeProperty_set");
    _TextBlock_StrokeProperty_get = lib.Find<TextBlock_StrokeProperty_getDelegate>("TextBlock_StrokeProperty_get");
    _TextBlock_StrokeThicknessProperty_set = lib.Find<TextBlock_StrokeThicknessProperty_setDelegate>("TextBlock_StrokeThicknessProperty_set");
    _TextBlock_StrokeThicknessProperty_get = lib.Find<TextBlock_StrokeThicknessProperty_getDelegate>("TextBlock_StrokeThicknessProperty_get");
    _TextBlock_TextAlignmentProperty_set = lib.Find<TextBlock_TextAlignmentProperty_setDelegate>("TextBlock_TextAlignmentProperty_set");
    _TextBlock_TextAlignmentProperty_get = lib.Find<TextBlock_TextAlignmentProperty_getDelegate>("TextBlock_TextAlignmentProperty_get");
    _TextBlock_TextDecorationsProperty_set = lib.Find<TextBlock_TextDecorationsProperty_setDelegate>("TextBlock_TextDecorationsProperty_set");
    _TextBlock_TextDecorationsProperty_get = lib.Find<TextBlock_TextDecorationsProperty_getDelegate>("TextBlock_TextDecorationsProperty_get");
    _TextBlock_TextEffectsProperty_set = lib.Find<TextBlock_TextEffectsProperty_setDelegate>("TextBlock_TextEffectsProperty_set");
    _TextBlock_TextEffectsProperty_get = lib.Find<TextBlock_TextEffectsProperty_getDelegate>("TextBlock_TextEffectsProperty_get");
    _TextBlock_TextProperty_set = lib.Find<TextBlock_TextProperty_setDelegate>("TextBlock_TextProperty_set");
    _TextBlock_TextProperty_get = lib.Find<TextBlock_TextProperty_getDelegate>("TextBlock_TextProperty_get");
    _TextBlock_TextTrimmingProperty_set = lib.Find<TextBlock_TextTrimmingProperty_setDelegate>("TextBlock_TextTrimmingProperty_set");
    _TextBlock_TextTrimmingProperty_get = lib.Find<TextBlock_TextTrimmingProperty_getDelegate>("TextBlock_TextTrimmingProperty_get");
    _TextBlock_TextWrappingProperty_set = lib.Find<TextBlock_TextWrappingProperty_setDelegate>("TextBlock_TextWrappingProperty_set");
    _TextBlock_TextWrappingProperty_get = lib.Find<TextBlock_TextWrappingProperty_getDelegate>("TextBlock_TextWrappingProperty_get");
    _TextBox_CharacterCasingProperty_set = lib.Find<TextBox_CharacterCasingProperty_setDelegate>("TextBox_CharacterCasingProperty_set");
    _TextBox_CharacterCasingProperty_get = lib.Find<TextBox_CharacterCasingProperty_getDelegate>("TextBox_CharacterCasingProperty_get");
    _TextBox_MaxLengthProperty_set = lib.Find<TextBox_MaxLengthProperty_setDelegate>("TextBox_MaxLengthProperty_set");
    _TextBox_MaxLengthProperty_get = lib.Find<TextBox_MaxLengthProperty_getDelegate>("TextBox_MaxLengthProperty_get");
    _TextBox_MaxLinesProperty_set = lib.Find<TextBox_MaxLinesProperty_setDelegate>("TextBox_MaxLinesProperty_set");
    _TextBox_MaxLinesProperty_get = lib.Find<TextBox_MaxLinesProperty_getDelegate>("TextBox_MaxLinesProperty_get");
    _TextBox_MinLinesProperty_set = lib.Find<TextBox_MinLinesProperty_setDelegate>("TextBox_MinLinesProperty_set");
    _TextBox_MinLinesProperty_get = lib.Find<TextBox_MinLinesProperty_getDelegate>("TextBox_MinLinesProperty_get");
    _TextBox_TextAlignmentProperty_set = lib.Find<TextBox_TextAlignmentProperty_setDelegate>("TextBox_TextAlignmentProperty_set");
    _TextBox_TextAlignmentProperty_get = lib.Find<TextBox_TextAlignmentProperty_getDelegate>("TextBox_TextAlignmentProperty_get");
    _TextBox_TextDecorationsProperty_set = lib.Find<TextBox_TextDecorationsProperty_setDelegate>("TextBox_TextDecorationsProperty_set");
    _TextBox_TextDecorationsProperty_get = lib.Find<TextBox_TextDecorationsProperty_getDelegate>("TextBox_TextDecorationsProperty_get");
    _TextBox_TextProperty_set = lib.Find<TextBox_TextProperty_setDelegate>("TextBox_TextProperty_set");
    _TextBox_TextProperty_get = lib.Find<TextBox_TextProperty_getDelegate>("TextBox_TextProperty_get");
    _TextBox_TextWrappingProperty_set = lib.Find<TextBox_TextWrappingProperty_setDelegate>("TextBox_TextWrappingProperty_set");
    _TextBox_TextWrappingProperty_get = lib.Find<TextBox_TextWrappingProperty_getDelegate>("TextBox_TextWrappingProperty_get");
    _TextElement_BackgroundProperty_set = lib.Find<TextElement_BackgroundProperty_setDelegate>("TextElement_BackgroundProperty_set");
    _TextElement_BackgroundProperty_get = lib.Find<TextElement_BackgroundProperty_getDelegate>("TextElement_BackgroundProperty_get");
    _TextElement_FontFamilyProperty_set = lib.Find<TextElement_FontFamilyProperty_setDelegate>("TextElement_FontFamilyProperty_set");
    _TextElement_FontFamilyProperty_get = lib.Find<TextElement_FontFamilyProperty_getDelegate>("TextElement_FontFamilyProperty_get");
    _TextElement_FontSizeProperty_set = lib.Find<TextElement_FontSizeProperty_setDelegate>("TextElement_FontSizeProperty_set");
    _TextElement_FontSizeProperty_get = lib.Find<TextElement_FontSizeProperty_getDelegate>("TextElement_FontSizeProperty_get");
    _TextElement_FontStretchProperty_set = lib.Find<TextElement_FontStretchProperty_setDelegate>("TextElement_FontStretchProperty_set");
    _TextElement_FontStretchProperty_get = lib.Find<TextElement_FontStretchProperty_getDelegate>("TextElement_FontStretchProperty_get");
    _TextElement_FontStyleProperty_set = lib.Find<TextElement_FontStyleProperty_setDelegate>("TextElement_FontStyleProperty_set");
    _TextElement_FontStyleProperty_get = lib.Find<TextElement_FontStyleProperty_getDelegate>("TextElement_FontStyleProperty_get");
    _TextElement_FontWeightProperty_set = lib.Find<TextElement_FontWeightProperty_setDelegate>("TextElement_FontWeightProperty_set");
    _TextElement_FontWeightProperty_get = lib.Find<TextElement_FontWeightProperty_getDelegate>("TextElement_FontWeightProperty_get");
    _TextElement_ForegroundProperty_set = lib.Find<TextElement_ForegroundProperty_setDelegate>("TextElement_ForegroundProperty_set");
    _TextElement_ForegroundProperty_get = lib.Find<TextElement_ForegroundProperty_getDelegate>("TextElement_ForegroundProperty_get");
    _TextElement_StrokeProperty_set = lib.Find<TextElement_StrokeProperty_setDelegate>("TextElement_StrokeProperty_set");
    _TextElement_StrokeProperty_get = lib.Find<TextElement_StrokeProperty_getDelegate>("TextElement_StrokeProperty_get");
    _TextElement_StrokeThicknessProperty_set = lib.Find<TextElement_StrokeThicknessProperty_setDelegate>("TextElement_StrokeThicknessProperty_set");
    _TextElement_StrokeThicknessProperty_get = lib.Find<TextElement_StrokeThicknessProperty_getDelegate>("TextElement_StrokeThicknessProperty_get");
    _TextElement_TextEffectsProperty_set = lib.Find<TextElement_TextEffectsProperty_setDelegate>("TextElement_TextEffectsProperty_set");
    _TextElement_TextEffectsProperty_get = lib.Find<TextElement_TextEffectsProperty_getDelegate>("TextElement_TextEffectsProperty_get");
    _Thumb_IsDraggingProperty_set = lib.Find<Thumb_IsDraggingProperty_setDelegate>("Thumb_IsDraggingProperty_set");
    _Thumb_IsDraggingProperty_get = lib.Find<Thumb_IsDraggingProperty_getDelegate>("Thumb_IsDraggingProperty_get");
    _TickBar_FillProperty_set = lib.Find<TickBar_FillProperty_setDelegate>("TickBar_FillProperty_set");
    _TickBar_FillProperty_get = lib.Find<TickBar_FillProperty_getDelegate>("TickBar_FillProperty_get");
    _TickBar_IsDirectionReversedProperty_set = lib.Find<TickBar_IsDirectionReversedProperty_setDelegate>("TickBar_IsDirectionReversedProperty_set");
    _TickBar_IsDirectionReversedProperty_get = lib.Find<TickBar_IsDirectionReversedProperty_getDelegate>("TickBar_IsDirectionReversedProperty_get");
    _TickBar_IsSelectionRangeEnabledProperty_set = lib.Find<TickBar_IsSelectionRangeEnabledProperty_setDelegate>("TickBar_IsSelectionRangeEnabledProperty_set");
    _TickBar_IsSelectionRangeEnabledProperty_get = lib.Find<TickBar_IsSelectionRangeEnabledProperty_getDelegate>("TickBar_IsSelectionRangeEnabledProperty_get");
    _TickBar_MaximumProperty_set = lib.Find<TickBar_MaximumProperty_setDelegate>("TickBar_MaximumProperty_set");
    _TickBar_MaximumProperty_get = lib.Find<TickBar_MaximumProperty_getDelegate>("TickBar_MaximumProperty_get");
    _TickBar_MinimumProperty_set = lib.Find<TickBar_MinimumProperty_setDelegate>("TickBar_MinimumProperty_set");
    _TickBar_MinimumProperty_get = lib.Find<TickBar_MinimumProperty_getDelegate>("TickBar_MinimumProperty_get");
    _TickBar_PlacementProperty_set = lib.Find<TickBar_PlacementProperty_setDelegate>("TickBar_PlacementProperty_set");
    _TickBar_PlacementProperty_get = lib.Find<TickBar_PlacementProperty_getDelegate>("TickBar_PlacementProperty_get");
    _TickBar_ReservedSpaceProperty_set = lib.Find<TickBar_ReservedSpaceProperty_setDelegate>("TickBar_ReservedSpaceProperty_set");
    _TickBar_ReservedSpaceProperty_get = lib.Find<TickBar_ReservedSpaceProperty_getDelegate>("TickBar_ReservedSpaceProperty_get");
    _TickBar_SelectionEndProperty_set = lib.Find<TickBar_SelectionEndProperty_setDelegate>("TickBar_SelectionEndProperty_set");
    _TickBar_SelectionEndProperty_get = lib.Find<TickBar_SelectionEndProperty_getDelegate>("TickBar_SelectionEndProperty_get");
    _TickBar_SelectionStartProperty_set = lib.Find<TickBar_SelectionStartProperty_setDelegate>("TickBar_SelectionStartProperty_set");
    _TickBar_SelectionStartProperty_get = lib.Find<TickBar_SelectionStartProperty_getDelegate>("TickBar_SelectionStartProperty_get");
    _TickBar_TickFrequencyProperty_set = lib.Find<TickBar_TickFrequencyProperty_setDelegate>("TickBar_TickFrequencyProperty_set");
    _TickBar_TickFrequencyProperty_get = lib.Find<TickBar_TickFrequencyProperty_getDelegate>("TickBar_TickFrequencyProperty_get");
    _TickBar_TicksProperty_set = lib.Find<TickBar_TicksProperty_setDelegate>("TickBar_TicksProperty_set");
    _TickBar_TicksProperty_get = lib.Find<TickBar_TicksProperty_getDelegate>("TickBar_TicksProperty_get");
    _ToolBar_BandIndexProperty_set = lib.Find<ToolBar_BandIndexProperty_setDelegate>("ToolBar_BandIndexProperty_set");
    _ToolBar_BandIndexProperty_get = lib.Find<ToolBar_BandIndexProperty_getDelegate>("ToolBar_BandIndexProperty_get");
    _ToolBar_BandProperty_set = lib.Find<ToolBar_BandProperty_setDelegate>("ToolBar_BandProperty_set");
    _ToolBar_BandProperty_get = lib.Find<ToolBar_BandProperty_getDelegate>("ToolBar_BandProperty_get");
    _ToolBar_HasOverflowItemsProperty_set = lib.Find<ToolBar_HasOverflowItemsProperty_setDelegate>("ToolBar_HasOverflowItemsProperty_set");
    _ToolBar_HasOverflowItemsProperty_get = lib.Find<ToolBar_HasOverflowItemsProperty_getDelegate>("ToolBar_HasOverflowItemsProperty_get");
    _ToolBar_IsOverflowItemProperty_set = lib.Find<ToolBar_IsOverflowItemProperty_setDelegate>("ToolBar_IsOverflowItemProperty_set");
    _ToolBar_IsOverflowItemProperty_get = lib.Find<ToolBar_IsOverflowItemProperty_getDelegate>("ToolBar_IsOverflowItemProperty_get");
    _ToolBar_IsOverflowOpenProperty_set = lib.Find<ToolBar_IsOverflowOpenProperty_setDelegate>("ToolBar_IsOverflowOpenProperty_set");
    _ToolBar_IsOverflowOpenProperty_get = lib.Find<ToolBar_IsOverflowOpenProperty_getDelegate>("ToolBar_IsOverflowOpenProperty_get");
    _ToolBar_OrientationProperty_set = lib.Find<ToolBar_OrientationProperty_setDelegate>("ToolBar_OrientationProperty_set");
    _ToolBar_OrientationProperty_get = lib.Find<ToolBar_OrientationProperty_getDelegate>("ToolBar_OrientationProperty_get");
    _ToolBar_OverflowModeProperty_set = lib.Find<ToolBar_OverflowModeProperty_setDelegate>("ToolBar_OverflowModeProperty_set");
    _ToolBar_OverflowModeProperty_get = lib.Find<ToolBar_OverflowModeProperty_getDelegate>("ToolBar_OverflowModeProperty_get");
    _ToolBarOverflowPanel_WrapWidthProperty_set = lib.Find<ToolBarOverflowPanel_WrapWidthProperty_setDelegate>("ToolBarOverflowPanel_WrapWidthProperty_set");
    _ToolBarOverflowPanel_WrapWidthProperty_get = lib.Find<ToolBarOverflowPanel_WrapWidthProperty_getDelegate>("ToolBarOverflowPanel_WrapWidthProperty_get");
    _ToolBarTray_BackgroundProperty_set = lib.Find<ToolBarTray_BackgroundProperty_setDelegate>("ToolBarTray_BackgroundProperty_set");
    _ToolBarTray_BackgroundProperty_get = lib.Find<ToolBarTray_BackgroundProperty_getDelegate>("ToolBarTray_BackgroundProperty_get");
    _ToolBarTray_IsLockedProperty_set = lib.Find<ToolBarTray_IsLockedProperty_setDelegate>("ToolBarTray_IsLockedProperty_set");
    _ToolBarTray_IsLockedProperty_get = lib.Find<ToolBarTray_IsLockedProperty_getDelegate>("ToolBarTray_IsLockedProperty_get");
    _ToolBarTray_OrientationProperty_set = lib.Find<ToolBarTray_OrientationProperty_setDelegate>("ToolBarTray_OrientationProperty_set");
    _ToolBarTray_OrientationProperty_get = lib.Find<ToolBarTray_OrientationProperty_getDelegate>("ToolBarTray_OrientationProperty_get");
    _ToolTip_CustomPopupPlacementCallbackProperty_set = lib.Find<ToolTip_CustomPopupPlacementCallbackProperty_setDelegate>("ToolTip_CustomPopupPlacementCallbackProperty_set");
    _ToolTip_CustomPopupPlacementCallbackProperty_get = lib.Find<ToolTip_CustomPopupPlacementCallbackProperty_getDelegate>("ToolTip_CustomPopupPlacementCallbackProperty_get");
    _ToolTip_HasDropShadowProperty_set = lib.Find<ToolTip_HasDropShadowProperty_setDelegate>("ToolTip_HasDropShadowProperty_set");
    _ToolTip_HasDropShadowProperty_get = lib.Find<ToolTip_HasDropShadowProperty_getDelegate>("ToolTip_HasDropShadowProperty_get");
    _ToolTip_HorizontalOffsetProperty_set = lib.Find<ToolTip_HorizontalOffsetProperty_setDelegate>("ToolTip_HorizontalOffsetProperty_set");
    _ToolTip_HorizontalOffsetProperty_get = lib.Find<ToolTip_HorizontalOffsetProperty_getDelegate>("ToolTip_HorizontalOffsetProperty_get");
    _ToolTip_IsOpenProperty_set = lib.Find<ToolTip_IsOpenProperty_setDelegate>("ToolTip_IsOpenProperty_set");
    _ToolTip_IsOpenProperty_get = lib.Find<ToolTip_IsOpenProperty_getDelegate>("ToolTip_IsOpenProperty_get");
    _ToolTip_PlacementProperty_set = lib.Find<ToolTip_PlacementProperty_setDelegate>("ToolTip_PlacementProperty_set");
    _ToolTip_PlacementProperty_get = lib.Find<ToolTip_PlacementProperty_getDelegate>("ToolTip_PlacementProperty_get");
    _ToolTip_PlacementRectangleProperty_set = lib.Find<ToolTip_PlacementRectangleProperty_setDelegate>("ToolTip_PlacementRectangleProperty_set");
    _ToolTip_PlacementRectangleProperty_get = lib.Find<ToolTip_PlacementRectangleProperty_getDelegate>("ToolTip_PlacementRectangleProperty_get");
    _ToolTip_PlacementTargetProperty_set = lib.Find<ToolTip_PlacementTargetProperty_setDelegate>("ToolTip_PlacementTargetProperty_set");
    _ToolTip_PlacementTargetProperty_get = lib.Find<ToolTip_PlacementTargetProperty_getDelegate>("ToolTip_PlacementTargetProperty_get");
    _ToolTip_StaysOpenProperty_set = lib.Find<ToolTip_StaysOpenProperty_setDelegate>("ToolTip_StaysOpenProperty_set");
    _ToolTip_StaysOpenProperty_get = lib.Find<ToolTip_StaysOpenProperty_getDelegate>("ToolTip_StaysOpenProperty_get");
    _ToolTip_VerticalOffsetProperty_set = lib.Find<ToolTip_VerticalOffsetProperty_setDelegate>("ToolTip_VerticalOffsetProperty_set");
    _ToolTip_VerticalOffsetProperty_get = lib.Find<ToolTip_VerticalOffsetProperty_getDelegate>("ToolTip_VerticalOffsetProperty_get");
    _ToolTipService_BetweenShowDelayProperty_set = lib.Find<ToolTipService_BetweenShowDelayProperty_setDelegate>("ToolTipService_BetweenShowDelayProperty_set");
    _ToolTipService_BetweenShowDelayProperty_get = lib.Find<ToolTipService_BetweenShowDelayProperty_getDelegate>("ToolTipService_BetweenShowDelayProperty_get");
    _ToolTipService_HasDropShadowProperty_set = lib.Find<ToolTipService_HasDropShadowProperty_setDelegate>("ToolTipService_HasDropShadowProperty_set");
    _ToolTipService_HasDropShadowProperty_get = lib.Find<ToolTipService_HasDropShadowProperty_getDelegate>("ToolTipService_HasDropShadowProperty_get");
    _ToolTipService_HorizontalOffsetProperty_set = lib.Find<ToolTipService_HorizontalOffsetProperty_setDelegate>("ToolTipService_HorizontalOffsetProperty_set");
    _ToolTipService_HorizontalOffsetProperty_get = lib.Find<ToolTipService_HorizontalOffsetProperty_getDelegate>("ToolTipService_HorizontalOffsetProperty_get");
    _ToolTipService_InitialShowDelayProperty_set = lib.Find<ToolTipService_InitialShowDelayProperty_setDelegate>("ToolTipService_InitialShowDelayProperty_set");
    _ToolTipService_InitialShowDelayProperty_get = lib.Find<ToolTipService_InitialShowDelayProperty_getDelegate>("ToolTipService_InitialShowDelayProperty_get");
    _ToolTipService_IsEnabledProperty_set = lib.Find<ToolTipService_IsEnabledProperty_setDelegate>("ToolTipService_IsEnabledProperty_set");
    _ToolTipService_IsEnabledProperty_get = lib.Find<ToolTipService_IsEnabledProperty_getDelegate>("ToolTipService_IsEnabledProperty_get");
    _ToolTipService_IsOpenProperty_set = lib.Find<ToolTipService_IsOpenProperty_setDelegate>("ToolTipService_IsOpenProperty_set");
    _ToolTipService_IsOpenProperty_get = lib.Find<ToolTipService_IsOpenProperty_getDelegate>("ToolTipService_IsOpenProperty_get");
    _ToolTipService_PlacementProperty_set = lib.Find<ToolTipService_PlacementProperty_setDelegate>("ToolTipService_PlacementProperty_set");
    _ToolTipService_PlacementProperty_get = lib.Find<ToolTipService_PlacementProperty_getDelegate>("ToolTipService_PlacementProperty_get");
    _ToolTipService_PlacementRectangleProperty_set = lib.Find<ToolTipService_PlacementRectangleProperty_setDelegate>("ToolTipService_PlacementRectangleProperty_set");
    _ToolTipService_PlacementRectangleProperty_get = lib.Find<ToolTipService_PlacementRectangleProperty_getDelegate>("ToolTipService_PlacementRectangleProperty_get");
    _ToolTipService_PlacementTargetProperty_set = lib.Find<ToolTipService_PlacementTargetProperty_setDelegate>("ToolTipService_PlacementTargetProperty_set");
    _ToolTipService_PlacementTargetProperty_get = lib.Find<ToolTipService_PlacementTargetProperty_getDelegate>("ToolTipService_PlacementTargetProperty_get");
    _ToolTipService_ShowDurationProperty_set = lib.Find<ToolTipService_ShowDurationProperty_setDelegate>("ToolTipService_ShowDurationProperty_set");
    _ToolTipService_ShowDurationProperty_get = lib.Find<ToolTipService_ShowDurationProperty_getDelegate>("ToolTipService_ShowDurationProperty_get");
    _ToolTipService_ShowOnDisabledProperty_set = lib.Find<ToolTipService_ShowOnDisabledProperty_setDelegate>("ToolTipService_ShowOnDisabledProperty_set");
    _ToolTipService_ShowOnDisabledProperty_get = lib.Find<ToolTipService_ShowOnDisabledProperty_getDelegate>("ToolTipService_ShowOnDisabledProperty_get");
    _ToolTipService_ToolTipProperty_set = lib.Find<ToolTipService_ToolTipProperty_setDelegate>("ToolTipService_ToolTipProperty_set");
    _ToolTipService_ToolTipProperty_get = lib.Find<ToolTipService_ToolTipProperty_getDelegate>("ToolTipService_ToolTipProperty_get");
    _ToolTipService_VerticalOffsetProperty_set = lib.Find<ToolTipService_VerticalOffsetProperty_setDelegate>("ToolTipService_VerticalOffsetProperty_set");
    _ToolTipService_VerticalOffsetProperty_get = lib.Find<ToolTipService_VerticalOffsetProperty_getDelegate>("ToolTipService_VerticalOffsetProperty_get");
    _Track_IsDirectionReversedProperty_set = lib.Find<Track_IsDirectionReversedProperty_setDelegate>("Track_IsDirectionReversedProperty_set");
    _Track_IsDirectionReversedProperty_get = lib.Find<Track_IsDirectionReversedProperty_getDelegate>("Track_IsDirectionReversedProperty_get");
    _Track_MaximumProperty_set = lib.Find<Track_MaximumProperty_setDelegate>("Track_MaximumProperty_set");
    _Track_MaximumProperty_get = lib.Find<Track_MaximumProperty_getDelegate>("Track_MaximumProperty_get");
    _Track_MinimumProperty_set = lib.Find<Track_MinimumProperty_setDelegate>("Track_MinimumProperty_set");
    _Track_MinimumProperty_get = lib.Find<Track_MinimumProperty_getDelegate>("Track_MinimumProperty_get");
    _Track_OrientationProperty_set = lib.Find<Track_OrientationProperty_setDelegate>("Track_OrientationProperty_set");
    _Track_OrientationProperty_get = lib.Find<Track_OrientationProperty_getDelegate>("Track_OrientationProperty_get");
    _Track_ValueProperty_set = lib.Find<Track_ValueProperty_setDelegate>("Track_ValueProperty_set");
    _Track_ValueProperty_get = lib.Find<Track_ValueProperty_getDelegate>("Track_ValueProperty_get");
    _Track_ViewportSizeProperty_set = lib.Find<Track_ViewportSizeProperty_setDelegate>("Track_ViewportSizeProperty_set");
    _Track_ViewportSizeProperty_get = lib.Find<Track_ViewportSizeProperty_getDelegate>("Track_ViewportSizeProperty_get");
    _TransformGroup_ChildrenProperty_set = lib.Find<TransformGroup_ChildrenProperty_setDelegate>("TransformGroup_ChildrenProperty_set");
    _TransformGroup_ChildrenProperty_get = lib.Find<TransformGroup_ChildrenProperty_getDelegate>("TransformGroup_ChildrenProperty_get");
    _TranslateTransform_XProperty_set = lib.Find<TranslateTransform_XProperty_setDelegate>("TranslateTransform_XProperty_set");
    _TranslateTransform_XProperty_get = lib.Find<TranslateTransform_XProperty_getDelegate>("TranslateTransform_XProperty_get");
    _TranslateTransform_YProperty_set = lib.Find<TranslateTransform_YProperty_setDelegate>("TranslateTransform_YProperty_set");
    _TranslateTransform_YProperty_get = lib.Find<TranslateTransform_YProperty_getDelegate>("TranslateTransform_YProperty_get");
    _TreeView_SelectedItemProperty_set = lib.Find<TreeView_SelectedItemProperty_setDelegate>("TreeView_SelectedItemProperty_set");
    _TreeView_SelectedItemProperty_get = lib.Find<TreeView_SelectedItemProperty_getDelegate>("TreeView_SelectedItemProperty_get");
    _TreeView_SelectedValuePathProperty_set = lib.Find<TreeView_SelectedValuePathProperty_setDelegate>("TreeView_SelectedValuePathProperty_set");
    _TreeView_SelectedValuePathProperty_get = lib.Find<TreeView_SelectedValuePathProperty_getDelegate>("TreeView_SelectedValuePathProperty_get");
    _TreeView_SelectedValueProperty_set = lib.Find<TreeView_SelectedValueProperty_setDelegate>("TreeView_SelectedValueProperty_set");
    _TreeView_SelectedValueProperty_get = lib.Find<TreeView_SelectedValueProperty_getDelegate>("TreeView_SelectedValueProperty_get");
    _TreeViewItem_IsExpandedProperty_set = lib.Find<TreeViewItem_IsExpandedProperty_setDelegate>("TreeViewItem_IsExpandedProperty_set");
    _TreeViewItem_IsExpandedProperty_get = lib.Find<TreeViewItem_IsExpandedProperty_getDelegate>("TreeViewItem_IsExpandedProperty_get");
    _TreeViewItem_IsSelectedProperty_set = lib.Find<TreeViewItem_IsSelectedProperty_setDelegate>("TreeViewItem_IsSelectedProperty_set");
    _TreeViewItem_IsSelectedProperty_get = lib.Find<TreeViewItem_IsSelectedProperty_getDelegate>("TreeViewItem_IsSelectedProperty_get");
    _TreeViewItem_IsSelectionActiveProperty_set = lib.Find<TreeViewItem_IsSelectionActiveProperty_setDelegate>("TreeViewItem_IsSelectionActiveProperty_set");
    _TreeViewItem_IsSelectionActiveProperty_get = lib.Find<TreeViewItem_IsSelectionActiveProperty_getDelegate>("TreeViewItem_IsSelectionActiveProperty_get");
    _Viewbox_StretchDirectionProperty_set = lib.Find<Viewbox_StretchDirectionProperty_setDelegate>("Viewbox_StretchDirectionProperty_set");
    _Viewbox_StretchDirectionProperty_get = lib.Find<Viewbox_StretchDirectionProperty_getDelegate>("Viewbox_StretchDirectionProperty_get");
    _Viewbox_StretchProperty_set = lib.Find<Viewbox_StretchProperty_setDelegate>("Viewbox_StretchProperty_set");
    _Viewbox_StretchProperty_get = lib.Find<Viewbox_StretchProperty_getDelegate>("Viewbox_StretchProperty_get");
    _VisualBrush_AutoLayoutContentProperty_set = lib.Find<VisualBrush_AutoLayoutContentProperty_setDelegate>("VisualBrush_AutoLayoutContentProperty_set");
    _VisualBrush_AutoLayoutContentProperty_get = lib.Find<VisualBrush_AutoLayoutContentProperty_getDelegate>("VisualBrush_AutoLayoutContentProperty_get");
    _VisualBrush_VisualProperty_set = lib.Find<VisualBrush_VisualProperty_setDelegate>("VisualBrush_VisualProperty_set");
    _VisualBrush_VisualProperty_get = lib.Find<VisualBrush_VisualProperty_getDelegate>("VisualBrush_VisualProperty_get");
    _Window_AllowsTransparencyProperty_set = lib.Find<Window_AllowsTransparencyProperty_setDelegate>("Window_AllowsTransparencyProperty_set");
    _Window_AllowsTransparencyProperty_get = lib.Find<Window_AllowsTransparencyProperty_getDelegate>("Window_AllowsTransparencyProperty_get");
    _Window_FullscreenProperty_set = lib.Find<Window_FullscreenProperty_setDelegate>("Window_FullscreenProperty_set");
    _Window_FullscreenProperty_get = lib.Find<Window_FullscreenProperty_getDelegate>("Window_FullscreenProperty_get");
    _Window_IconProperty_set = lib.Find<Window_IconProperty_setDelegate>("Window_IconProperty_set");
    _Window_IconProperty_get = lib.Find<Window_IconProperty_getDelegate>("Window_IconProperty_get");
    _Window_IsActiveProperty_set = lib.Find<Window_IsActiveProperty_setDelegate>("Window_IsActiveProperty_set");
    _Window_IsActiveProperty_get = lib.Find<Window_IsActiveProperty_getDelegate>("Window_IsActiveProperty_get");
    _Window_LeftProperty_set = lib.Find<Window_LeftProperty_setDelegate>("Window_LeftProperty_set");
    _Window_LeftProperty_get = lib.Find<Window_LeftProperty_getDelegate>("Window_LeftProperty_get");
    _Window_ResizeModeProperty_set = lib.Find<Window_ResizeModeProperty_setDelegate>("Window_ResizeModeProperty_set");
    _Window_ResizeModeProperty_get = lib.Find<Window_ResizeModeProperty_getDelegate>("Window_ResizeModeProperty_get");
    _Window_ShowInTaskbarProperty_set = lib.Find<Window_ShowInTaskbarProperty_setDelegate>("Window_ShowInTaskbarProperty_set");
    _Window_ShowInTaskbarProperty_get = lib.Find<Window_ShowInTaskbarProperty_getDelegate>("Window_ShowInTaskbarProperty_get");
    _Window_SizeToContentProperty_set = lib.Find<Window_SizeToContentProperty_setDelegate>("Window_SizeToContentProperty_set");
    _Window_SizeToContentProperty_get = lib.Find<Window_SizeToContentProperty_getDelegate>("Window_SizeToContentProperty_get");
    _Window_TitleProperty_set = lib.Find<Window_TitleProperty_setDelegate>("Window_TitleProperty_set");
    _Window_TitleProperty_get = lib.Find<Window_TitleProperty_getDelegate>("Window_TitleProperty_get");
    _Window_TopmostProperty_set = lib.Find<Window_TopmostProperty_setDelegate>("Window_TopmostProperty_set");
    _Window_TopmostProperty_get = lib.Find<Window_TopmostProperty_getDelegate>("Window_TopmostProperty_get");
    _Window_TopProperty_set = lib.Find<Window_TopProperty_setDelegate>("Window_TopProperty_set");
    _Window_TopProperty_get = lib.Find<Window_TopProperty_getDelegate>("Window_TopProperty_get");
    _Window_WindowStateProperty_set = lib.Find<Window_WindowStateProperty_setDelegate>("Window_WindowStateProperty_set");
    _Window_WindowStateProperty_get = lib.Find<Window_WindowStateProperty_getDelegate>("Window_WindowStateProperty_get");
    _Window_WindowStyleProperty_set = lib.Find<Window_WindowStyleProperty_setDelegate>("Window_WindowStyleProperty_set");
    _Window_WindowStyleProperty_get = lib.Find<Window_WindowStyleProperty_getDelegate>("Window_WindowStyleProperty_get");
    _Window_WindowStartupLocationProperty_set = lib.Find<Window_WindowStartupLocationProperty_setDelegate>("Window_WindowStartupLocationProperty_set");
    _Window_WindowStartupLocationProperty_get = lib.Find<Window_WindowStartupLocationProperty_getDelegate>("Window_WindowStartupLocationProperty_get");
    _WrapPanel_ItemWidthProperty_set = lib.Find<WrapPanel_ItemWidthProperty_setDelegate>("WrapPanel_ItemWidthProperty_set");
    _WrapPanel_ItemWidthProperty_get = lib.Find<WrapPanel_ItemWidthProperty_getDelegate>("WrapPanel_ItemWidthProperty_get");
    _WrapPanel_ItemHeightProperty_set = lib.Find<WrapPanel_ItemHeightProperty_setDelegate>("WrapPanel_ItemHeightProperty_set");
    _WrapPanel_ItemHeightProperty_get = lib.Find<WrapPanel_ItemHeightProperty_getDelegate>("WrapPanel_ItemHeightProperty_get");
    _WrapPanel_OrientationProperty_set = lib.Find<WrapPanel_OrientationProperty_setDelegate>("WrapPanel_OrientationProperty_set");
    _WrapPanel_OrientationProperty_get = lib.Find<WrapPanel_OrientationProperty_getDelegate>("WrapPanel_OrientationProperty_get");
    _AnimationTimeline_IsAdditiveProperty_set = lib.Find<AnimationTimeline_IsAdditiveProperty_setDelegate>("AnimationTimeline_IsAdditiveProperty_set");
    _AnimationTimeline_IsAdditiveProperty_get = lib.Find<AnimationTimeline_IsAdditiveProperty_getDelegate>("AnimationTimeline_IsAdditiveProperty_get");
    _AnimationTimeline_IsCumulativeProperty_set = lib.Find<AnimationTimeline_IsCumulativeProperty_setDelegate>("AnimationTimeline_IsCumulativeProperty_set");
    _AnimationTimeline_IsCumulativeProperty_get = lib.Find<AnimationTimeline_IsCumulativeProperty_getDelegate>("AnimationTimeline_IsCumulativeProperty_get");
    _EasingFunctionBase_EasingModeProperty_set = lib.Find<EasingFunctionBase_EasingModeProperty_setDelegate>("EasingFunctionBase_EasingModeProperty_set");
    _EasingFunctionBase_EasingModeProperty_get = lib.Find<EasingFunctionBase_EasingModeProperty_getDelegate>("EasingFunctionBase_EasingModeProperty_get");
    _BackEase_AmplitudeProperty_set = lib.Find<BackEase_AmplitudeProperty_setDelegate>("BackEase_AmplitudeProperty_set");
    _BackEase_AmplitudeProperty_get = lib.Find<BackEase_AmplitudeProperty_getDelegate>("BackEase_AmplitudeProperty_get");
    _BaseAnimation_EasingFunctionProperty_set = lib.Find<BaseAnimation_EasingFunctionProperty_setDelegate>("BaseAnimation_EasingFunctionProperty_set");
    _BaseAnimation_EasingFunctionProperty_get = lib.Find<BaseAnimation_EasingFunctionProperty_getDelegate>("BaseAnimation_EasingFunctionProperty_get");
    _BeginStoryboard_StoryboardProperty_set = lib.Find<BeginStoryboard_StoryboardProperty_setDelegate>("BeginStoryboard_StoryboardProperty_set");
    _BeginStoryboard_StoryboardProperty_get = lib.Find<BeginStoryboard_StoryboardProperty_getDelegate>("BeginStoryboard_StoryboardProperty_get");
    _BounceEase_BouncesProperty_set = lib.Find<BounceEase_BouncesProperty_setDelegate>("BounceEase_BouncesProperty_set");
    _BounceEase_BouncesProperty_get = lib.Find<BounceEase_BouncesProperty_getDelegate>("BounceEase_BouncesProperty_get");
    _BounceEase_BouncinessProperty_set = lib.Find<BounceEase_BouncinessProperty_setDelegate>("BounceEase_BouncinessProperty_set");
    _BounceEase_BouncinessProperty_get = lib.Find<BounceEase_BouncinessProperty_getDelegate>("BounceEase_BouncinessProperty_get");
    _ElasticEase_OscillationsProperty_set = lib.Find<ElasticEase_OscillationsProperty_setDelegate>("ElasticEase_OscillationsProperty_set");
    _ElasticEase_OscillationsProperty_get = lib.Find<ElasticEase_OscillationsProperty_getDelegate>("ElasticEase_OscillationsProperty_get");
    _ElasticEase_SpringinessProperty_set = lib.Find<ElasticEase_SpringinessProperty_setDelegate>("ElasticEase_SpringinessProperty_set");
    _ElasticEase_SpringinessProperty_get = lib.Find<ElasticEase_SpringinessProperty_getDelegate>("ElasticEase_SpringinessProperty_get");
    _ExponentialEase_ExponentProperty_set = lib.Find<ExponentialEase_ExponentProperty_setDelegate>("ExponentialEase_ExponentProperty_set");
    _ExponentialEase_ExponentProperty_get = lib.Find<ExponentialEase_ExponentProperty_getDelegate>("ExponentialEase_ExponentProperty_get");
    _Timeline_AccelerationRatioProperty_set = lib.Find<Timeline_AccelerationRatioProperty_setDelegate>("Timeline_AccelerationRatioProperty_set");
    _Timeline_AccelerationRatioProperty_get = lib.Find<Timeline_AccelerationRatioProperty_getDelegate>("Timeline_AccelerationRatioProperty_get");
    _Timeline_AutoReverseProperty_set = lib.Find<Timeline_AutoReverseProperty_setDelegate>("Timeline_AutoReverseProperty_set");
    _Timeline_AutoReverseProperty_get = lib.Find<Timeline_AutoReverseProperty_getDelegate>("Timeline_AutoReverseProperty_get");
    _Timeline_BeginTimeProperty_set = lib.Find<Timeline_BeginTimeProperty_setDelegate>("Timeline_BeginTimeProperty_set");
    _Timeline_BeginTimeProperty_get = lib.Find<Timeline_BeginTimeProperty_getDelegate>("Timeline_BeginTimeProperty_get");
    _Timeline_DecelerationRatioProperty_set = lib.Find<Timeline_DecelerationRatioProperty_setDelegate>("Timeline_DecelerationRatioProperty_set");
    _Timeline_DecelerationRatioProperty_get = lib.Find<Timeline_DecelerationRatioProperty_getDelegate>("Timeline_DecelerationRatioProperty_get");
    _Timeline_DesiredFrameRateProperty_set = lib.Find<Timeline_DesiredFrameRateProperty_setDelegate>("Timeline_DesiredFrameRateProperty_set");
    _Timeline_DesiredFrameRateProperty_get = lib.Find<Timeline_DesiredFrameRateProperty_getDelegate>("Timeline_DesiredFrameRateProperty_get");
    _Timeline_DurationProperty_set = lib.Find<Timeline_DurationProperty_setDelegate>("Timeline_DurationProperty_set");
    _Timeline_DurationProperty_get = lib.Find<Timeline_DurationProperty_getDelegate>("Timeline_DurationProperty_get");
    _Timeline_FillBehaviorProperty_set = lib.Find<Timeline_FillBehaviorProperty_setDelegate>("Timeline_FillBehaviorProperty_set");
    _Timeline_FillBehaviorProperty_get = lib.Find<Timeline_FillBehaviorProperty_getDelegate>("Timeline_FillBehaviorProperty_get");
    _Timeline_NameProperty_set = lib.Find<Timeline_NameProperty_setDelegate>("Timeline_NameProperty_set");
    _Timeline_NameProperty_get = lib.Find<Timeline_NameProperty_getDelegate>("Timeline_NameProperty_get");
    _Timeline_RepeatBehaviorProperty_set = lib.Find<Timeline_RepeatBehaviorProperty_setDelegate>("Timeline_RepeatBehaviorProperty_set");
    _Timeline_RepeatBehaviorProperty_get = lib.Find<Timeline_RepeatBehaviorProperty_getDelegate>("Timeline_RepeatBehaviorProperty_get");
    _Timeline_SpeedRatioProperty_set = lib.Find<Timeline_SpeedRatioProperty_setDelegate>("Timeline_SpeedRatioProperty_set");
    _Timeline_SpeedRatioProperty_get = lib.Find<Timeline_SpeedRatioProperty_getDelegate>("Timeline_SpeedRatioProperty_get");
    _TimelineGroup_ChildrenProperty_set = lib.Find<TimelineGroup_ChildrenProperty_setDelegate>("TimelineGroup_ChildrenProperty_set");
    _TimelineGroup_ChildrenProperty_get = lib.Find<TimelineGroup_ChildrenProperty_getDelegate>("TimelineGroup_ChildrenProperty_get");
    _ParallelTimeline_SlipBehaviorProperty_set = lib.Find<ParallelTimeline_SlipBehaviorProperty_setDelegate>("ParallelTimeline_SlipBehaviorProperty_set");
    _ParallelTimeline_SlipBehaviorProperty_get = lib.Find<ParallelTimeline_SlipBehaviorProperty_getDelegate>("ParallelTimeline_SlipBehaviorProperty_get");
    _PowerEase_PowerProperty_set = lib.Find<PowerEase_PowerProperty_setDelegate>("PowerEase_PowerProperty_set");
    _PowerEase_PowerProperty_get = lib.Find<PowerEase_PowerProperty_getDelegate>("PowerEase_PowerProperty_get");
    _Storyboard_TargetNameProperty_set = lib.Find<Storyboard_TargetNameProperty_setDelegate>("Storyboard_TargetNameProperty_set");
    _Storyboard_TargetNameProperty_get = lib.Find<Storyboard_TargetNameProperty_getDelegate>("Storyboard_TargetNameProperty_get");
    _Storyboard_TargetProperty_set = lib.Find<Storyboard_TargetProperty_setDelegate>("Storyboard_TargetProperty_set");
    _Storyboard_TargetProperty_get = lib.Find<Storyboard_TargetProperty_getDelegate>("Storyboard_TargetProperty_get");
    _Storyboard_TargetPropertyProperty_set = lib.Find<Storyboard_TargetPropertyProperty_setDelegate>("Storyboard_TargetPropertyProperty_set");
    _Storyboard_TargetPropertyProperty_get = lib.Find<Storyboard_TargetPropertyProperty_getDelegate>("Storyboard_TargetPropertyProperty_get");
    _VisualStateManager_CustomVisualStateManagerProperty_set = lib.Find<VisualStateManager_CustomVisualStateManagerProperty_setDelegate>("VisualStateManager_CustomVisualStateManagerProperty_set");
    _VisualStateManager_CustomVisualStateManagerProperty_get = lib.Find<VisualStateManager_CustomVisualStateManagerProperty_getDelegate>("VisualStateManager_CustomVisualStateManagerProperty_get");
    _VisualStateManager_VisualStateGroupsProperty_set = lib.Find<VisualStateManager_VisualStateGroupsProperty_setDelegate>("VisualStateManager_VisualStateGroupsProperty_set");
    _VisualStateManager_VisualStateGroupsProperty_get = lib.Find<VisualStateManager_VisualStateGroupsProperty_getDelegate>("VisualStateManager_VisualStateGroupsProperty_get");
    _DoubleAnimation_ByProperty_set = lib.Find<DoubleAnimation_ByProperty_setDelegate>("DoubleAnimation_ByProperty_set");
    _DoubleAnimation_ByProperty_get = lib.Find<DoubleAnimation_ByProperty_getDelegate>("DoubleAnimation_ByProperty_get");
    _DoubleAnimation_FromProperty_set = lib.Find<DoubleAnimation_FromProperty_setDelegate>("DoubleAnimation_FromProperty_set");
    _DoubleAnimation_FromProperty_get = lib.Find<DoubleAnimation_FromProperty_getDelegate>("DoubleAnimation_FromProperty_get");
    _DoubleAnimation_ToProperty_set = lib.Find<DoubleAnimation_ToProperty_setDelegate>("DoubleAnimation_ToProperty_set");
    _DoubleAnimation_ToProperty_get = lib.Find<DoubleAnimation_ToProperty_getDelegate>("DoubleAnimation_ToProperty_get");
    _Int16Animation_ByProperty_set = lib.Find<Int16Animation_ByProperty_setDelegate>("Int16Animation_ByProperty_set");
    _Int16Animation_ByProperty_get = lib.Find<Int16Animation_ByProperty_getDelegate>("Int16Animation_ByProperty_get");
    _Int16Animation_FromProperty_set = lib.Find<Int16Animation_FromProperty_setDelegate>("Int16Animation_FromProperty_set");
    _Int16Animation_FromProperty_get = lib.Find<Int16Animation_FromProperty_getDelegate>("Int16Animation_FromProperty_get");
    _Int16Animation_ToProperty_set = lib.Find<Int16Animation_ToProperty_setDelegate>("Int16Animation_ToProperty_set");
    _Int16Animation_ToProperty_get = lib.Find<Int16Animation_ToProperty_getDelegate>("Int16Animation_ToProperty_get");
    _Int32Animation_ByProperty_set = lib.Find<Int32Animation_ByProperty_setDelegate>("Int32Animation_ByProperty_set");
    _Int32Animation_ByProperty_get = lib.Find<Int32Animation_ByProperty_getDelegate>("Int32Animation_ByProperty_get");
    _Int32Animation_FromProperty_set = lib.Find<Int32Animation_FromProperty_setDelegate>("Int32Animation_FromProperty_set");
    _Int32Animation_FromProperty_get = lib.Find<Int32Animation_FromProperty_getDelegate>("Int32Animation_FromProperty_get");
    _Int32Animation_ToProperty_set = lib.Find<Int32Animation_ToProperty_setDelegate>("Int32Animation_ToProperty_set");
    _Int32Animation_ToProperty_get = lib.Find<Int32Animation_ToProperty_getDelegate>("Int32Animation_ToProperty_get");
    _Int64Animation_ByProperty_set = lib.Find<Int64Animation_ByProperty_setDelegate>("Int64Animation_ByProperty_set");
    _Int64Animation_ByProperty_get = lib.Find<Int64Animation_ByProperty_getDelegate>("Int64Animation_ByProperty_get");
    _Int64Animation_FromProperty_set = lib.Find<Int64Animation_FromProperty_setDelegate>("Int64Animation_FromProperty_set");
    _Int64Animation_FromProperty_get = lib.Find<Int64Animation_FromProperty_getDelegate>("Int64Animation_FromProperty_get");
    _Int64Animation_ToProperty_set = lib.Find<Int64Animation_ToProperty_setDelegate>("Int64Animation_ToProperty_set");
    _Int64Animation_ToProperty_get = lib.Find<Int64Animation_ToProperty_getDelegate>("Int64Animation_ToProperty_get");
    _ColorAnimation_ByProperty_set = lib.Find<ColorAnimation_ByProperty_setDelegate>("ColorAnimation_ByProperty_set");
    _ColorAnimation_ByProperty_get = lib.Find<ColorAnimation_ByProperty_getDelegate>("ColorAnimation_ByProperty_get");
    _ColorAnimation_FromProperty_set = lib.Find<ColorAnimation_FromProperty_setDelegate>("ColorAnimation_FromProperty_set");
    _ColorAnimation_FromProperty_get = lib.Find<ColorAnimation_FromProperty_getDelegate>("ColorAnimation_FromProperty_get");
    _ColorAnimation_ToProperty_set = lib.Find<ColorAnimation_ToProperty_setDelegate>("ColorAnimation_ToProperty_set");
    _ColorAnimation_ToProperty_get = lib.Find<ColorAnimation_ToProperty_getDelegate>("ColorAnimation_ToProperty_get");
    _PointAnimation_ByProperty_set = lib.Find<PointAnimation_ByProperty_setDelegate>("PointAnimation_ByProperty_set");
    _PointAnimation_ByProperty_get = lib.Find<PointAnimation_ByProperty_getDelegate>("PointAnimation_ByProperty_get");
    _PointAnimation_FromProperty_set = lib.Find<PointAnimation_FromProperty_setDelegate>("PointAnimation_FromProperty_set");
    _PointAnimation_FromProperty_get = lib.Find<PointAnimation_FromProperty_getDelegate>("PointAnimation_FromProperty_get");
    _PointAnimation_ToProperty_set = lib.Find<PointAnimation_ToProperty_setDelegate>("PointAnimation_ToProperty_set");
    _PointAnimation_ToProperty_get = lib.Find<PointAnimation_ToProperty_getDelegate>("PointAnimation_ToProperty_get");
    _RectAnimation_ByProperty_set = lib.Find<RectAnimation_ByProperty_setDelegate>("RectAnimation_ByProperty_set");
    _RectAnimation_ByProperty_get = lib.Find<RectAnimation_ByProperty_getDelegate>("RectAnimation_ByProperty_get");
    _RectAnimation_FromProperty_set = lib.Find<RectAnimation_FromProperty_setDelegate>("RectAnimation_FromProperty_set");
    _RectAnimation_FromProperty_get = lib.Find<RectAnimation_FromProperty_getDelegate>("RectAnimation_FromProperty_get");
    _RectAnimation_ToProperty_set = lib.Find<RectAnimation_ToProperty_setDelegate>("RectAnimation_ToProperty_set");
    _RectAnimation_ToProperty_get = lib.Find<RectAnimation_ToProperty_getDelegate>("RectAnimation_ToProperty_get");
    _SizeAnimation_ByProperty_set = lib.Find<SizeAnimation_ByProperty_setDelegate>("SizeAnimation_ByProperty_set");
    _SizeAnimation_ByProperty_get = lib.Find<SizeAnimation_ByProperty_getDelegate>("SizeAnimation_ByProperty_get");
    _SizeAnimation_FromProperty_set = lib.Find<SizeAnimation_FromProperty_setDelegate>("SizeAnimation_FromProperty_set");
    _SizeAnimation_FromProperty_get = lib.Find<SizeAnimation_FromProperty_getDelegate>("SizeAnimation_FromProperty_get");
    _SizeAnimation_ToProperty_set = lib.Find<SizeAnimation_ToProperty_setDelegate>("SizeAnimation_ToProperty_set");
    _SizeAnimation_ToProperty_get = lib.Find<SizeAnimation_ToProperty_getDelegate>("SizeAnimation_ToProperty_get");
    _ThicknessAnimation_ByProperty_set = lib.Find<ThicknessAnimation_ByProperty_setDelegate>("ThicknessAnimation_ByProperty_set");
    _ThicknessAnimation_ByProperty_get = lib.Find<ThicknessAnimation_ByProperty_getDelegate>("ThicknessAnimation_ByProperty_get");
    _ThicknessAnimation_FromProperty_set = lib.Find<ThicknessAnimation_FromProperty_setDelegate>("ThicknessAnimation_FromProperty_set");
    _ThicknessAnimation_FromProperty_get = lib.Find<ThicknessAnimation_FromProperty_getDelegate>("ThicknessAnimation_FromProperty_get");
    _ThicknessAnimation_ToProperty_set = lib.Find<ThicknessAnimation_ToProperty_setDelegate>("ThicknessAnimation_ToProperty_set");
    _ThicknessAnimation_ToProperty_get = lib.Find<ThicknessAnimation_ToProperty_getDelegate>("ThicknessAnimation_ToProperty_get");
    _BooleanKeyFrame_KeyTimeProperty_set = lib.Find<BooleanKeyFrame_KeyTimeProperty_setDelegate>("BooleanKeyFrame_KeyTimeProperty_set");
    _BooleanKeyFrame_KeyTimeProperty_get = lib.Find<BooleanKeyFrame_KeyTimeProperty_getDelegate>("BooleanKeyFrame_KeyTimeProperty_get");
    _BooleanKeyFrame_ValueProperty_set = lib.Find<BooleanKeyFrame_ValueProperty_setDelegate>("BooleanKeyFrame_ValueProperty_set");
    _BooleanKeyFrame_ValueProperty_get = lib.Find<BooleanKeyFrame_ValueProperty_getDelegate>("BooleanKeyFrame_ValueProperty_get");
    _DoubleKeyFrame_KeyTimeProperty_set = lib.Find<DoubleKeyFrame_KeyTimeProperty_setDelegate>("DoubleKeyFrame_KeyTimeProperty_set");
    _DoubleKeyFrame_KeyTimeProperty_get = lib.Find<DoubleKeyFrame_KeyTimeProperty_getDelegate>("DoubleKeyFrame_KeyTimeProperty_get");
    _DoubleKeyFrame_ValueProperty_set = lib.Find<DoubleKeyFrame_ValueProperty_setDelegate>("DoubleKeyFrame_ValueProperty_set");
    _DoubleKeyFrame_ValueProperty_get = lib.Find<DoubleKeyFrame_ValueProperty_getDelegate>("DoubleKeyFrame_ValueProperty_get");
    _Int16KeyFrame_KeyTimeProperty_set = lib.Find<Int16KeyFrame_KeyTimeProperty_setDelegate>("Int16KeyFrame_KeyTimeProperty_set");
    _Int16KeyFrame_KeyTimeProperty_get = lib.Find<Int16KeyFrame_KeyTimeProperty_getDelegate>("Int16KeyFrame_KeyTimeProperty_get");
    _Int16KeyFrame_ValueProperty_set = lib.Find<Int16KeyFrame_ValueProperty_setDelegate>("Int16KeyFrame_ValueProperty_set");
    _Int16KeyFrame_ValueProperty_get = lib.Find<Int16KeyFrame_ValueProperty_getDelegate>("Int16KeyFrame_ValueProperty_get");
    _Int32KeyFrame_KeyTimeProperty_set = lib.Find<Int32KeyFrame_KeyTimeProperty_setDelegate>("Int32KeyFrame_KeyTimeProperty_set");
    _Int32KeyFrame_KeyTimeProperty_get = lib.Find<Int32KeyFrame_KeyTimeProperty_getDelegate>("Int32KeyFrame_KeyTimeProperty_get");
    _Int32KeyFrame_ValueProperty_set = lib.Find<Int32KeyFrame_ValueProperty_setDelegate>("Int32KeyFrame_ValueProperty_set");
    _Int32KeyFrame_ValueProperty_get = lib.Find<Int32KeyFrame_ValueProperty_getDelegate>("Int32KeyFrame_ValueProperty_get");
    _ColorKeyFrame_KeyTimeProperty_set = lib.Find<ColorKeyFrame_KeyTimeProperty_setDelegate>("ColorKeyFrame_KeyTimeProperty_set");
    _ColorKeyFrame_KeyTimeProperty_get = lib.Find<ColorKeyFrame_KeyTimeProperty_getDelegate>("ColorKeyFrame_KeyTimeProperty_get");
    _ColorKeyFrame_ValueProperty_set = lib.Find<ColorKeyFrame_ValueProperty_setDelegate>("ColorKeyFrame_ValueProperty_set");
    _ColorKeyFrame_ValueProperty_get = lib.Find<ColorKeyFrame_ValueProperty_getDelegate>("ColorKeyFrame_ValueProperty_get");
    _PointKeyFrame_KeyTimeProperty_set = lib.Find<PointKeyFrame_KeyTimeProperty_setDelegate>("PointKeyFrame_KeyTimeProperty_set");
    _PointKeyFrame_KeyTimeProperty_get = lib.Find<PointKeyFrame_KeyTimeProperty_getDelegate>("PointKeyFrame_KeyTimeProperty_get");
    _PointKeyFrame_ValueProperty_set = lib.Find<PointKeyFrame_ValueProperty_setDelegate>("PointKeyFrame_ValueProperty_set");
    _PointKeyFrame_ValueProperty_get = lib.Find<PointKeyFrame_ValueProperty_getDelegate>("PointKeyFrame_ValueProperty_get");
    _RectKeyFrame_KeyTimeProperty_set = lib.Find<RectKeyFrame_KeyTimeProperty_setDelegate>("RectKeyFrame_KeyTimeProperty_set");
    _RectKeyFrame_KeyTimeProperty_get = lib.Find<RectKeyFrame_KeyTimeProperty_getDelegate>("RectKeyFrame_KeyTimeProperty_get");
    _RectKeyFrame_ValueProperty_set = lib.Find<RectKeyFrame_ValueProperty_setDelegate>("RectKeyFrame_ValueProperty_set");
    _RectKeyFrame_ValueProperty_get = lib.Find<RectKeyFrame_ValueProperty_getDelegate>("RectKeyFrame_ValueProperty_get");
    _SizeKeyFrame_KeyTimeProperty_set = lib.Find<SizeKeyFrame_KeyTimeProperty_setDelegate>("SizeKeyFrame_KeyTimeProperty_set");
    _SizeKeyFrame_KeyTimeProperty_get = lib.Find<SizeKeyFrame_KeyTimeProperty_getDelegate>("SizeKeyFrame_KeyTimeProperty_get");
    _SizeKeyFrame_ValueProperty_set = lib.Find<SizeKeyFrame_ValueProperty_setDelegate>("SizeKeyFrame_ValueProperty_set");
    _SizeKeyFrame_ValueProperty_get = lib.Find<SizeKeyFrame_ValueProperty_getDelegate>("SizeKeyFrame_ValueProperty_get");
    _ThicknessKeyFrame_KeyTimeProperty_set = lib.Find<ThicknessKeyFrame_KeyTimeProperty_setDelegate>("ThicknessKeyFrame_KeyTimeProperty_set");
    _ThicknessKeyFrame_KeyTimeProperty_get = lib.Find<ThicknessKeyFrame_KeyTimeProperty_getDelegate>("ThicknessKeyFrame_KeyTimeProperty_get");
    _ThicknessKeyFrame_ValueProperty_set = lib.Find<ThicknessKeyFrame_ValueProperty_setDelegate>("ThicknessKeyFrame_ValueProperty_set");
    _ThicknessKeyFrame_ValueProperty_get = lib.Find<ThicknessKeyFrame_ValueProperty_getDelegate>("ThicknessKeyFrame_ValueProperty_get");
    _StringKeyFrame_KeyTimeProperty_set = lib.Find<StringKeyFrame_KeyTimeProperty_setDelegate>("StringKeyFrame_KeyTimeProperty_set");
    _StringKeyFrame_KeyTimeProperty_get = lib.Find<StringKeyFrame_KeyTimeProperty_getDelegate>("StringKeyFrame_KeyTimeProperty_get");
    _StringKeyFrame_ValueProperty_set = lib.Find<StringKeyFrame_ValueProperty_setDelegate>("StringKeyFrame_ValueProperty_set");
    _StringKeyFrame_ValueProperty_get = lib.Find<StringKeyFrame_ValueProperty_getDelegate>("StringKeyFrame_ValueProperty_get");
    _EasingDoubleKeyFrame_EasingFunctionProperty_set = lib.Find<EasingDoubleKeyFrame_EasingFunctionProperty_setDelegate>("EasingDoubleKeyFrame_EasingFunctionProperty_set");
    _EasingDoubleKeyFrame_EasingFunctionProperty_get = lib.Find<EasingDoubleKeyFrame_EasingFunctionProperty_getDelegate>("EasingDoubleKeyFrame_EasingFunctionProperty_get");
    _EasingInt16KeyFrame_EasingFunctionProperty_set = lib.Find<EasingInt16KeyFrame_EasingFunctionProperty_setDelegate>("EasingInt16KeyFrame_EasingFunctionProperty_set");
    _EasingInt16KeyFrame_EasingFunctionProperty_get = lib.Find<EasingInt16KeyFrame_EasingFunctionProperty_getDelegate>("EasingInt16KeyFrame_EasingFunctionProperty_get");
    _EasingInt32KeyFrame_EasingFunctionProperty_set = lib.Find<EasingInt32KeyFrame_EasingFunctionProperty_setDelegate>("EasingInt32KeyFrame_EasingFunctionProperty_set");
    _EasingInt32KeyFrame_EasingFunctionProperty_get = lib.Find<EasingInt32KeyFrame_EasingFunctionProperty_getDelegate>("EasingInt32KeyFrame_EasingFunctionProperty_get");
    _EasingColorKeyFrame_EasingFunctionProperty_set = lib.Find<EasingColorKeyFrame_EasingFunctionProperty_setDelegate>("EasingColorKeyFrame_EasingFunctionProperty_set");
    _EasingColorKeyFrame_EasingFunctionProperty_get = lib.Find<EasingColorKeyFrame_EasingFunctionProperty_getDelegate>("EasingColorKeyFrame_EasingFunctionProperty_get");
    _EasingPointKeyFrame_EasingFunctionProperty_set = lib.Find<EasingPointKeyFrame_EasingFunctionProperty_setDelegate>("EasingPointKeyFrame_EasingFunctionProperty_set");
    _EasingPointKeyFrame_EasingFunctionProperty_get = lib.Find<EasingPointKeyFrame_EasingFunctionProperty_getDelegate>("EasingPointKeyFrame_EasingFunctionProperty_get");
    _EasingRectKeyFrame_EasingFunctionProperty_set = lib.Find<EasingRectKeyFrame_EasingFunctionProperty_setDelegate>("EasingRectKeyFrame_EasingFunctionProperty_set");
    _EasingRectKeyFrame_EasingFunctionProperty_get = lib.Find<EasingRectKeyFrame_EasingFunctionProperty_getDelegate>("EasingRectKeyFrame_EasingFunctionProperty_get");
    _EasingSizeKeyFrame_EasingFunctionProperty_set = lib.Find<EasingSizeKeyFrame_EasingFunctionProperty_setDelegate>("EasingSizeKeyFrame_EasingFunctionProperty_set");
    _EasingSizeKeyFrame_EasingFunctionProperty_get = lib.Find<EasingSizeKeyFrame_EasingFunctionProperty_getDelegate>("EasingSizeKeyFrame_EasingFunctionProperty_get");
    _EasingThicknessKeyFrame_EasingFunctionProperty_set = lib.Find<EasingThicknessKeyFrame_EasingFunctionProperty_setDelegate>("EasingThicknessKeyFrame_EasingFunctionProperty_set");
    _EasingThicknessKeyFrame_EasingFunctionProperty_get = lib.Find<EasingThicknessKeyFrame_EasingFunctionProperty_getDelegate>("EasingThicknessKeyFrame_EasingFunctionProperty_get");
    _SplineDoubleKeyFrame_KeySplineProperty_set = lib.Find<SplineDoubleKeyFrame_KeySplineProperty_setDelegate>("SplineDoubleKeyFrame_KeySplineProperty_set");
    _SplineDoubleKeyFrame_KeySplineProperty_get = lib.Find<SplineDoubleKeyFrame_KeySplineProperty_getDelegate>("SplineDoubleKeyFrame_KeySplineProperty_get");
    _SplineInt16KeyFrame_KeySplineProperty_set = lib.Find<SplineInt16KeyFrame_KeySplineProperty_setDelegate>("SplineInt16KeyFrame_KeySplineProperty_set");
    _SplineInt16KeyFrame_KeySplineProperty_get = lib.Find<SplineInt16KeyFrame_KeySplineProperty_getDelegate>("SplineInt16KeyFrame_KeySplineProperty_get");
    _SplineInt32KeyFrame_KeySplineProperty_set = lib.Find<SplineInt32KeyFrame_KeySplineProperty_setDelegate>("SplineInt32KeyFrame_KeySplineProperty_set");
    _SplineInt32KeyFrame_KeySplineProperty_get = lib.Find<SplineInt32KeyFrame_KeySplineProperty_getDelegate>("SplineInt32KeyFrame_KeySplineProperty_get");
    _SplineColorKeyFrame_KeySplineProperty_set = lib.Find<SplineColorKeyFrame_KeySplineProperty_setDelegate>("SplineColorKeyFrame_KeySplineProperty_set");
    _SplineColorKeyFrame_KeySplineProperty_get = lib.Find<SplineColorKeyFrame_KeySplineProperty_getDelegate>("SplineColorKeyFrame_KeySplineProperty_get");
    _SplinePointKeyFrame_KeySplineProperty_set = lib.Find<SplinePointKeyFrame_KeySplineProperty_setDelegate>("SplinePointKeyFrame_KeySplineProperty_set");
    _SplinePointKeyFrame_KeySplineProperty_get = lib.Find<SplinePointKeyFrame_KeySplineProperty_getDelegate>("SplinePointKeyFrame_KeySplineProperty_get");
    _SplineRectKeyFrame_KeySplineProperty_set = lib.Find<SplineRectKeyFrame_KeySplineProperty_setDelegate>("SplineRectKeyFrame_KeySplineProperty_set");
    _SplineRectKeyFrame_KeySplineProperty_get = lib.Find<SplineRectKeyFrame_KeySplineProperty_getDelegate>("SplineRectKeyFrame_KeySplineProperty_get");
    _SplineSizeKeyFrame_KeySplineProperty_set = lib.Find<SplineSizeKeyFrame_KeySplineProperty_setDelegate>("SplineSizeKeyFrame_KeySplineProperty_set");
    _SplineSizeKeyFrame_KeySplineProperty_get = lib.Find<SplineSizeKeyFrame_KeySplineProperty_getDelegate>("SplineSizeKeyFrame_KeySplineProperty_get");
    _SplineThicknessKeyFrame_KeySplineProperty_set = lib.Find<SplineThicknessKeyFrame_KeySplineProperty_setDelegate>("SplineThicknessKeyFrame_KeySplineProperty_set");
    _SplineThicknessKeyFrame_KeySplineProperty_get = lib.Find<SplineThicknessKeyFrame_KeySplineProperty_getDelegate>("SplineThicknessKeyFrame_KeySplineProperty_get");
    _SerializableComponent_SWIGUpcast = lib.Find<SerializableComponent_SWIGUpcastDelegate>("SerializableComponent_SWIGUpcast");
    _DependencyObject_SWIGUpcast = lib.Find<DependencyObject_SWIGUpcastDelegate>("DependencyObject_SWIGUpcast");
    _DependencyProperty_SWIGUpcast = lib.Find<DependencyProperty_SWIGUpcastDelegate>("DependencyProperty_SWIGUpcast");
    _Freezable_SWIGUpcast = lib.Find<Freezable_SWIGUpcastDelegate>("Freezable_SWIGUpcast");
    _BaseExpression_SWIGUpcast = lib.Find<BaseExpression_SWIGUpcastDelegate>("BaseExpression_SWIGUpcast");
    _PropertyMetadata_SWIGUpcast = lib.Find<PropertyMetadata_SWIGUpcastDelegate>("PropertyMetadata_SWIGUpcast");
    _UIPropertyMetadata_SWIGUpcast = lib.Find<UIPropertyMetadata_SWIGUpcastDelegate>("UIPropertyMetadata_SWIGUpcast");
    _FrameworkPropertyMetadata_SWIGUpcast = lib.Find<FrameworkPropertyMetadata_SWIGUpcastDelegate>("FrameworkPropertyMetadata_SWIGUpcast");
    _Visual_SWIGUpcast = lib.Find<Visual_SWIGUpcastDelegate>("Visual_SWIGUpcast");
    _Collection_SWIGUpcast = lib.Find<Collection_SWIGUpcastDelegate>("Collection_SWIGUpcast");
    _VisualCollection_SWIGUpcast = lib.Find<VisualCollection_SWIGUpcastDelegate>("VisualCollection_SWIGUpcast");
    _UIElement_SWIGUpcast = lib.Find<UIElement_SWIGUpcastDelegate>("UIElement_SWIGUpcast");
    _UIElementCollection_SWIGUpcast = lib.Find<UIElementCollection_SWIGUpcastDelegate>("UIElementCollection_SWIGUpcast");
    _TriggerCollection_SWIGUpcast = lib.Find<TriggerCollection_SWIGUpcastDelegate>("TriggerCollection_SWIGUpcast");
    _BaseSetter_SWIGUpcast = lib.Find<BaseSetter_SWIGUpcastDelegate>("BaseSetter_SWIGUpcast");
    _BaseDictionary_SWIGUpcast = lib.Find<BaseDictionary_SWIGUpcastDelegate>("BaseDictionary_SWIGUpcast");
    _ResourceDictionary_SWIGUpcast = lib.Find<ResourceDictionary_SWIGUpcastDelegate>("ResourceDictionary_SWIGUpcast");
    _ResourceKeyString_SWIGUpcast = lib.Find<ResourceKeyString_SWIGUpcastDelegate>("ResourceKeyString_SWIGUpcast");
    _ResourceKeyType_SWIGUpcast = lib.Find<ResourceKeyType_SWIGUpcastDelegate>("ResourceKeyType_SWIGUpcast");
    _Style_SWIGUpcast = lib.Find<Style_SWIGUpcastDelegate>("Style_SWIGUpcast");
    _TimeManagerRef_SWIGUpcast = lib.Find<TimeManagerRef_SWIGUpcastDelegate>("TimeManagerRef_SWIGUpcast");
    _FrameworkElement_SWIGUpcast = lib.Find<FrameworkElement_SWIGUpcastDelegate>("FrameworkElement_SWIGUpcast");
    _FrameworkTemplate_SWIGUpcast = lib.Find<FrameworkTemplate_SWIGUpcastDelegate>("FrameworkTemplate_SWIGUpcast");
    _ControlTemplate_SWIGUpcast = lib.Find<ControlTemplate_SWIGUpcastDelegate>("ControlTemplate_SWIGUpcast");
    _Control_SWIGUpcast = lib.Find<Control_SWIGUpcastDelegate>("Control_SWIGUpcast");
    _ContentControl_SWIGUpcast = lib.Find<ContentControl_SWIGUpcastDelegate>("ContentControl_SWIGUpcast");
    _Decorator_SWIGUpcast = lib.Find<Decorator_SWIGUpcastDelegate>("Decorator_SWIGUpcast");
    _Panel_SWIGUpcast = lib.Find<Panel_SWIGUpcastDelegate>("Panel_SWIGUpcast");
    _RoutedEvent_SWIGUpcast = lib.Find<RoutedEvent_SWIGUpcastDelegate>("RoutedEvent_SWIGUpcast");
    _RoutedEventArgs_SWIGUpcast = lib.Find<RoutedEventArgs_SWIGUpcastDelegate>("RoutedEventArgs_SWIGUpcast");
    _ItemsControl_SWIGUpcast = lib.Find<ItemsControl_SWIGUpcastDelegate>("ItemsControl_SWIGUpcast");
    _SelectionChangedEventArgs_SWIGUpcast = lib.Find<SelectionChangedEventArgs_SWIGUpcastDelegate>("SelectionChangedEventArgs_SWIGUpcast");
    _Selector_SWIGUpcast = lib.Find<Selector_SWIGUpcastDelegate>("Selector_SWIGUpcast");
    _AdornerDecorator_SWIGUpcast = lib.Find<AdornerDecorator_SWIGUpcastDelegate>("AdornerDecorator_SWIGUpcast");
    _Animatable_SWIGUpcast = lib.Find<Animatable_SWIGUpcastDelegate>("Animatable_SWIGUpcast");
    _Geometry_SWIGUpcast = lib.Find<Geometry_SWIGUpcastDelegate>("Geometry_SWIGUpcast");
    _ImageSource_SWIGUpcast = lib.Find<ImageSource_SWIGUpcastDelegate>("ImageSource_SWIGUpcast");
    _Application_SWIGUpcast = lib.Find<Application_SWIGUpcastDelegate>("Application_SWIGUpcast");
    _AtlasSource_SWIGUpcast = lib.Find<AtlasSource_SWIGUpcastDelegate>("AtlasSource_SWIGUpcast");
    _BaseBinding_SWIGUpcast = lib.Find<BaseBinding_SWIGUpcastDelegate>("BaseBinding_SWIGUpcast");
    _BaseBindingExpression_SWIGUpcast = lib.Find<BaseBindingExpression_SWIGUpcastDelegate>("BaseBindingExpression_SWIGUpcast");
    _BaseButton_SWIGUpcast = lib.Find<BaseButton_SWIGUpcastDelegate>("BaseButton_SWIGUpcast");
    _ToggleButton_SWIGUpcast = lib.Find<ToggleButton_SWIGUpcastDelegate>("ToggleButton_SWIGUpcast");
    _BaseCommand_SWIGUpcast = lib.Find<BaseCommand_SWIGUpcastDelegate>("BaseCommand_SWIGUpcast");
    _BaseDefinition_SWIGUpcast = lib.Find<BaseDefinition_SWIGUpcastDelegate>("BaseDefinition_SWIGUpcast");
    _BaseMenu_SWIGUpcast = lib.Find<BaseMenu_SWIGUpcastDelegate>("BaseMenu_SWIGUpcast");
    _BaseTextBox_SWIGUpcast = lib.Find<BaseTextBox_SWIGUpcastDelegate>("BaseTextBox_SWIGUpcast");
    _BaseTrigger_SWIGUpcast = lib.Find<BaseTrigger_SWIGUpcastDelegate>("BaseTrigger_SWIGUpcast");
    _BaseValueConverter_SWIGUpcast = lib.Find<BaseValueConverter_SWIGUpcastDelegate>("BaseValueConverter_SWIGUpcast");
    _Binding_SWIGUpcast = lib.Find<Binding_SWIGUpcastDelegate>("Binding_SWIGUpcast");
    _BitmapSource_SWIGUpcast = lib.Find<BitmapSource_SWIGUpcastDelegate>("BitmapSource_SWIGUpcast");
    _Border_SWIGUpcast = lib.Find<Border_SWIGUpcastDelegate>("Border_SWIGUpcast");
    _Brush_SWIGUpcast = lib.Find<Brush_SWIGUpcastDelegate>("Brush_SWIGUpcast");
    _BulletDecorator_SWIGUpcast = lib.Find<BulletDecorator_SWIGUpcastDelegate>("BulletDecorator_SWIGUpcast");
    _Button_SWIGUpcast = lib.Find<Button_SWIGUpcastDelegate>("Button_SWIGUpcast");
    _Canvas_SWIGUpcast = lib.Find<Canvas_SWIGUpcastDelegate>("Canvas_SWIGUpcast");
    _CheckBox_SWIGUpcast = lib.Find<CheckBox_SWIGUpcastDelegate>("CheckBox_SWIGUpcast");
    _CollectionView_SWIGUpcast = lib.Find<CollectionView_SWIGUpcastDelegate>("CollectionView_SWIGUpcast");
    _CollectionViewSource_SWIGUpcast = lib.Find<CollectionViewSource_SWIGUpcastDelegate>("CollectionViewSource_SWIGUpcast");
    _ColumnDefinition_SWIGUpcast = lib.Find<ColumnDefinition_SWIGUpcastDelegate>("ColumnDefinition_SWIGUpcast");
    _CombinedGeometry_SWIGUpcast = lib.Find<CombinedGeometry_SWIGUpcastDelegate>("CombinedGeometry_SWIGUpcast");
    _ComboBox_SWIGUpcast = lib.Find<ComboBox_SWIGUpcastDelegate>("ComboBox_SWIGUpcast");
    _ListBoxItem_SWIGUpcast = lib.Find<ListBoxItem_SWIGUpcastDelegate>("ListBoxItem_SWIGUpcast");
    _ComboBoxItem_SWIGUpcast = lib.Find<ComboBoxItem_SWIGUpcastDelegate>("ComboBoxItem_SWIGUpcast");
    _CanExecuteRoutedEventArgs_SWIGUpcast = lib.Find<CanExecuteRoutedEventArgs_SWIGUpcastDelegate>("CanExecuteRoutedEventArgs_SWIGUpcast");
    _ExecutedRoutedEventArgs_SWIGUpcast = lib.Find<ExecutedRoutedEventArgs_SWIGUpcastDelegate>("ExecutedRoutedEventArgs_SWIGUpcast");
    _CommandBinding_SWIGUpcast = lib.Find<CommandBinding_SWIGUpcastDelegate>("CommandBinding_SWIGUpcast");
    _UITransform_SWIGUpcast = lib.Find<UITransform_SWIGUpcastDelegate>("UITransform_SWIGUpcast");
    _CompositeTransform_SWIGUpcast = lib.Find<CompositeTransform_SWIGUpcastDelegate>("CompositeTransform_SWIGUpcast");
    _Condition_SWIGUpcast = lib.Find<Condition_SWIGUpcastDelegate>("Condition_SWIGUpcast");
    _ContentPresenter_SWIGUpcast = lib.Find<ContentPresenter_SWIGUpcastDelegate>("ContentPresenter_SWIGUpcast");
    _ContextMenu_SWIGUpcast = lib.Find<ContextMenu_SWIGUpcastDelegate>("ContextMenu_SWIGUpcast");
    _DashStyle_SWIGUpcast = lib.Find<DashStyle_SWIGUpcastDelegate>("DashStyle_SWIGUpcast");
    _DataTemplate_SWIGUpcast = lib.Find<DataTemplate_SWIGUpcastDelegate>("DataTemplate_SWIGUpcast");
    _DataTemplateSelector_SWIGUpcast = lib.Find<DataTemplateSelector_SWIGUpcastDelegate>("DataTemplateSelector_SWIGUpcast");
    _Dialog_SWIGUpcast = lib.Find<Dialog_SWIGUpcastDelegate>("Dialog_SWIGUpcast");
    _DockPanel_SWIGUpcast = lib.Find<DockPanel_SWIGUpcastDelegate>("DockPanel_SWIGUpcast");
    _DrawingContext_SWIGUpcast = lib.Find<DrawingContext_SWIGUpcastDelegate>("DrawingContext_SWIGUpcast");
    _Effect_SWIGUpcast = lib.Find<Effect_SWIGUpcastDelegate>("Effect_SWIGUpcast");
    _DropShadowEffect_SWIGUpcast = lib.Find<DropShadowEffect_SWIGUpcastDelegate>("DropShadowEffect_SWIGUpcast");
    _Shape_SWIGUpcast = lib.Find<Shape_SWIGUpcastDelegate>("Shape_SWIGUpcast");
    _Ellipse_SWIGUpcast = lib.Find<Ellipse_SWIGUpcastDelegate>("Ellipse_SWIGUpcast");
    _EllipseGeometry_SWIGUpcast = lib.Find<EllipseGeometry_SWIGUpcastDelegate>("EllipseGeometry_SWIGUpcast");
    _EventTrigger_SWIGUpcast = lib.Find<EventTrigger_SWIGUpcastDelegate>("EventTrigger_SWIGUpcast");
    _HeaderedContentControl_SWIGUpcast = lib.Find<HeaderedContentControl_SWIGUpcastDelegate>("HeaderedContentControl_SWIGUpcast");
    _Expander_SWIGUpcast = lib.Find<Expander_SWIGUpcastDelegate>("Expander_SWIGUpcast");
    _FormattedText_SWIGUpcast = lib.Find<FormattedText_SWIGUpcastDelegate>("FormattedText_SWIGUpcast");
    _ContextMenuEventArgs_SWIGUpcast = lib.Find<ContextMenuEventArgs_SWIGUpcastDelegate>("ContextMenuEventArgs_SWIGUpcast");
    _ToolTipEventArgs_SWIGUpcast = lib.Find<ToolTipEventArgs_SWIGUpcastDelegate>("ToolTipEventArgs_SWIGUpcast");
    _RequestBringIntoViewEventArgs_SWIGUpcast = lib.Find<RequestBringIntoViewEventArgs_SWIGUpcastDelegate>("RequestBringIntoViewEventArgs_SWIGUpcast");
    _FreezableCollection_SWIGUpcast = lib.Find<FreezableCollection_SWIGUpcastDelegate>("FreezableCollection_SWIGUpcast");
    _GeometryGroup_SWIGUpcast = lib.Find<GeometryGroup_SWIGUpcastDelegate>("GeometryGroup_SWIGUpcast");
    _GradientBrush_SWIGUpcast = lib.Find<GradientBrush_SWIGUpcastDelegate>("GradientBrush_SWIGUpcast");
    _GradientStop_SWIGUpcast = lib.Find<GradientStop_SWIGUpcastDelegate>("GradientStop_SWIGUpcast");
    _GradientStopCollection_SWIGUpcast = lib.Find<GradientStopCollection_SWIGUpcastDelegate>("GradientStopCollection_SWIGUpcast");
    _Grid_SWIGUpcast = lib.Find<Grid_SWIGUpcastDelegate>("Grid_SWIGUpcast");
    _GroupBox_SWIGUpcast = lib.Find<GroupBox_SWIGUpcastDelegate>("GroupBox_SWIGUpcast");
    _HeaderedItemsControl_SWIGUpcast = lib.Find<HeaderedItemsControl_SWIGUpcastDelegate>("HeaderedItemsControl_SWIGUpcast");
    _IconSource_SWIGUpcast = lib.Find<IconSource_SWIGUpcastDelegate>("IconSource_SWIGUpcast");
    _Image_SWIGUpcast = lib.Find<Image_SWIGUpcastDelegate>("Image_SWIGUpcast");
    _ImageAtlasList_SWIGUpcast = lib.Find<ImageAtlasList_SWIGUpcastDelegate>("ImageAtlasList_SWIGUpcast");
    _TileBrush_SWIGUpcast = lib.Find<TileBrush_SWIGUpcastDelegate>("TileBrush_SWIGUpcast");
    _ImageBrush_SWIGUpcast = lib.Find<ImageBrush_SWIGUpcastDelegate>("ImageBrush_SWIGUpcast");
    _InputBinding_SWIGUpcast = lib.Find<InputBinding_SWIGUpcastDelegate>("InputBinding_SWIGUpcast");
    _InputGesture_SWIGUpcast = lib.Find<InputGesture_SWIGUpcastDelegate>("InputGesture_SWIGUpcast");
    _ItemCollection_SWIGUpcast = lib.Find<ItemCollection_SWIGUpcastDelegate>("ItemCollection_SWIGUpcast");
    _ItemsPanelTemplate_SWIGUpcast = lib.Find<ItemsPanelTemplate_SWIGUpcastDelegate>("ItemsPanelTemplate_SWIGUpcast");
    _ItemsPresenter_SWIGUpcast = lib.Find<ItemsPresenter_SWIGUpcastDelegate>("ItemsPresenter_SWIGUpcast");
    _KeyBinding_SWIGUpcast = lib.Find<KeyBinding_SWIGUpcastDelegate>("KeyBinding_SWIGUpcast");
    _Keyboard_SWIGUpcast = lib.Find<Keyboard_SWIGUpcastDelegate>("Keyboard_SWIGUpcast");
    _KeyboardNavigation_SWIGUpcast = lib.Find<KeyboardNavigation_SWIGUpcastDelegate>("KeyboardNavigation_SWIGUpcast");
    _KeyGesture_SWIGUpcast = lib.Find<KeyGesture_SWIGUpcastDelegate>("KeyGesture_SWIGUpcast");
    _Label_SWIGUpcast = lib.Find<Label_SWIGUpcastDelegate>("Label_SWIGUpcast");
    _Line_SWIGUpcast = lib.Find<Line_SWIGUpcastDelegate>("Line_SWIGUpcast");
    _LinearGradientBrush_SWIGUpcast = lib.Find<LinearGradientBrush_SWIGUpcastDelegate>("LinearGradientBrush_SWIGUpcast");
    _LineGeometry_SWIGUpcast = lib.Find<LineGeometry_SWIGUpcastDelegate>("LineGeometry_SWIGUpcast");
    _ListBox_SWIGUpcast = lib.Find<ListBox_SWIGUpcastDelegate>("ListBox_SWIGUpcast");
    _Projection_SWIGUpcast = lib.Find<Projection_SWIGUpcastDelegate>("Projection_SWIGUpcast");
    _Matrix3DProjection_SWIGUpcast = lib.Find<Matrix3DProjection_SWIGUpcastDelegate>("Matrix3DProjection_SWIGUpcast");
    _MatrixTransform_SWIGUpcast = lib.Find<MatrixTransform_SWIGUpcastDelegate>("MatrixTransform_SWIGUpcast");
    _Menu_SWIGUpcast = lib.Find<Menu_SWIGUpcastDelegate>("Menu_SWIGUpcast");
    _MenuItem_SWIGUpcast = lib.Find<MenuItem_SWIGUpcastDelegate>("MenuItem_SWIGUpcast");
    _UserControl_SWIGUpcast = lib.Find<UserControl_SWIGUpcastDelegate>("UserControl_SWIGUpcast");
    _MessageDialog_SWIGUpcast = lib.Find<MessageDialog_SWIGUpcastDelegate>("MessageDialog_SWIGUpcast");
    _Mouse_SWIGUpcast = lib.Find<Mouse_SWIGUpcastDelegate>("Mouse_SWIGUpcast");
    _MultiTrigger_SWIGUpcast = lib.Find<MultiTrigger_SWIGUpcastDelegate>("MultiTrigger_SWIGUpcast");
    _NameScope_SWIGUpcast = lib.Find<NameScope_SWIGUpcastDelegate>("NameScope_SWIGUpcast");
    _Page_SWIGUpcast = lib.Find<Page_SWIGUpcastDelegate>("Page_SWIGUpcast");
    _PasswordBox_SWIGUpcast = lib.Find<PasswordBox_SWIGUpcastDelegate>("PasswordBox_SWIGUpcast");
    _Path_SWIGUpcast = lib.Find<Path_SWIGUpcastDelegate>("Path_SWIGUpcast");
    _Pen_SWIGUpcast = lib.Find<Pen_SWIGUpcastDelegate>("Pen_SWIGUpcast");
    _PlaneProjection_SWIGUpcast = lib.Find<PlaneProjection_SWIGUpcastDelegate>("PlaneProjection_SWIGUpcast");
    _Popup_SWIGUpcast = lib.Find<Popup_SWIGUpcastDelegate>("Popup_SWIGUpcast");
    _RangeBase_SWIGUpcast = lib.Find<RangeBase_SWIGUpcastDelegate>("RangeBase_SWIGUpcast");
    _ProgressBar_SWIGUpcast = lib.Find<ProgressBar_SWIGUpcastDelegate>("ProgressBar_SWIGUpcast");
    _PropertyPath_SWIGUpcast = lib.Find<PropertyPath_SWIGUpcastDelegate>("PropertyPath_SWIGUpcast");
    _RadialGradientBrush_SWIGUpcast = lib.Find<RadialGradientBrush_SWIGUpcastDelegate>("RadialGradientBrush_SWIGUpcast");
    _RadioButton_SWIGUpcast = lib.Find<RadioButton_SWIGUpcastDelegate>("RadioButton_SWIGUpcast");
    _Rectangle_SWIGUpcast = lib.Find<Rectangle_SWIGUpcastDelegate>("Rectangle_SWIGUpcast");
    _RectangleGeometry_SWIGUpcast = lib.Find<RectangleGeometry_SWIGUpcastDelegate>("RectangleGeometry_SWIGUpcast");
    _RelativeSource_SWIGUpcast = lib.Find<RelativeSource_SWIGUpcastDelegate>("RelativeSource_SWIGUpcast");
    _RepeatButton_SWIGUpcast = lib.Find<RepeatButton_SWIGUpcastDelegate>("RepeatButton_SWIGUpcast");
    _RotateTransform_SWIGUpcast = lib.Find<RotateTransform_SWIGUpcastDelegate>("RotateTransform_SWIGUpcast");
    _RoutedCommand_SWIGUpcast = lib.Find<RoutedCommand_SWIGUpcastDelegate>("RoutedCommand_SWIGUpcast");
    _RoutedUICommand_SWIGUpcast = lib.Find<RoutedUICommand_SWIGUpcastDelegate>("RoutedUICommand_SWIGUpcast");
    _RowDefinition_SWIGUpcast = lib.Find<RowDefinition_SWIGUpcastDelegate>("RowDefinition_SWIGUpcast");
    _ScaleTransform_SWIGUpcast = lib.Find<ScaleTransform_SWIGUpcastDelegate>("ScaleTransform_SWIGUpcast");
    _ScrollEventArgs_SWIGUpcast = lib.Find<ScrollEventArgs_SWIGUpcastDelegate>("ScrollEventArgs_SWIGUpcast");
    _ScrollBar_SWIGUpcast = lib.Find<ScrollBar_SWIGUpcastDelegate>("ScrollBar_SWIGUpcast");
    _ScrollContentPresenter_SWIGUpcast = lib.Find<ScrollContentPresenter_SWIGUpcastDelegate>("ScrollContentPresenter_SWIGUpcast");
    _ScrollChangedEventArgs_SWIGUpcast = lib.Find<ScrollChangedEventArgs_SWIGUpcastDelegate>("ScrollChangedEventArgs_SWIGUpcast");
    _ScrollViewer_SWIGUpcast = lib.Find<ScrollViewer_SWIGUpcastDelegate>("ScrollViewer_SWIGUpcast");
    _Separator_SWIGUpcast = lib.Find<Separator_SWIGUpcastDelegate>("Separator_SWIGUpcast");
    _Setter_SWIGUpcast = lib.Find<Setter_SWIGUpcastDelegate>("Setter_SWIGUpcast");
    _SizeChangedEventArgs_SWIGUpcast = lib.Find<SizeChangedEventArgs_SWIGUpcastDelegate>("SizeChangedEventArgs_SWIGUpcast");
    _SkewTransform_SWIGUpcast = lib.Find<SkewTransform_SWIGUpcastDelegate>("SkewTransform_SWIGUpcast");
    _Slider_SWIGUpcast = lib.Find<Slider_SWIGUpcastDelegate>("Slider_SWIGUpcast");
    _SolidColorBrush_SWIGUpcast = lib.Find<SolidColorBrush_SWIGUpcastDelegate>("SolidColorBrush_SWIGUpcast");
    _StackPanel_SWIGUpcast = lib.Find<StackPanel_SWIGUpcastDelegate>("StackPanel_SWIGUpcast");
    _StatusBar_SWIGUpcast = lib.Find<StatusBar_SWIGUpcastDelegate>("StatusBar_SWIGUpcast");
    _StatusBarItem_SWIGUpcast = lib.Find<StatusBarItem_SWIGUpcastDelegate>("StatusBarItem_SWIGUpcast");
    _StreamGeometry_SWIGUpcast = lib.Find<StreamGeometry_SWIGUpcastDelegate>("StreamGeometry_SWIGUpcast");
    _TabControl_SWIGUpcast = lib.Find<TabControl_SWIGUpcastDelegate>("TabControl_SWIGUpcast");
    _TabItem_SWIGUpcast = lib.Find<TabItem_SWIGUpcastDelegate>("TabItem_SWIGUpcast");
    _TabPanel_SWIGUpcast = lib.Find<TabPanel_SWIGUpcastDelegate>("TabPanel_SWIGUpcast");
    _TemplateBinding_SWIGUpcast = lib.Find<TemplateBinding_SWIGUpcastDelegate>("TemplateBinding_SWIGUpcast");
    _TextBlock_SWIGUpcast = lib.Find<TextBlock_SWIGUpcastDelegate>("TextBlock_SWIGUpcast");
    _TextBox_SWIGUpcast = lib.Find<TextBox_SWIGUpcastDelegate>("TextBox_SWIGUpcast");
    _TextureSource_SWIGUpcast = lib.Find<TextureSource_SWIGUpcastDelegate>("TextureSource_SWIGUpcast");
    _DragCompletedEventArgs_SWIGUpcast = lib.Find<DragCompletedEventArgs_SWIGUpcastDelegate>("DragCompletedEventArgs_SWIGUpcast");
    _DragStartedEventArgs_SWIGUpcast = lib.Find<DragStartedEventArgs_SWIGUpcastDelegate>("DragStartedEventArgs_SWIGUpcast");
    _DragDeltaEventArgs_SWIGUpcast = lib.Find<DragDeltaEventArgs_SWIGUpcastDelegate>("DragDeltaEventArgs_SWIGUpcast");
    _Thumb_SWIGUpcast = lib.Find<Thumb_SWIGUpcastDelegate>("Thumb_SWIGUpcast");
    _TickBar_SWIGUpcast = lib.Find<TickBar_SWIGUpcastDelegate>("TickBar_SWIGUpcast");
    _ToolBar_SWIGUpcast = lib.Find<ToolBar_SWIGUpcastDelegate>("ToolBar_SWIGUpcast");
    _ToolBarOverflowPanel_SWIGUpcast = lib.Find<ToolBarOverflowPanel_SWIGUpcastDelegate>("ToolBarOverflowPanel_SWIGUpcast");
    _ToolBarPanel_SWIGUpcast = lib.Find<ToolBarPanel_SWIGUpcastDelegate>("ToolBarPanel_SWIGUpcast");
    _ToolBarTray_SWIGUpcast = lib.Find<ToolBarTray_SWIGUpcastDelegate>("ToolBarTray_SWIGUpcast");
    _ToolTip_SWIGUpcast = lib.Find<ToolTip_SWIGUpcastDelegate>("ToolTip_SWIGUpcast");
    _Track_SWIGUpcast = lib.Find<Track_SWIGUpcastDelegate>("Track_SWIGUpcast");
    _TransformGroup_SWIGUpcast = lib.Find<TransformGroup_SWIGUpcastDelegate>("TransformGroup_SWIGUpcast");
    _TranslateTransform_SWIGUpcast = lib.Find<TranslateTransform_SWIGUpcastDelegate>("TranslateTransform_SWIGUpcast");
    _TreeView_SWIGUpcast = lib.Find<TreeView_SWIGUpcastDelegate>("TreeView_SWIGUpcast");
    _TreeViewItem_SWIGUpcast = lib.Find<TreeViewItem_SWIGUpcastDelegate>("TreeViewItem_SWIGUpcast");
    _Trigger_SWIGUpcast = lib.Find<Trigger_SWIGUpcastDelegate>("Trigger_SWIGUpcast");
    _TriggerAction_SWIGUpcast = lib.Find<TriggerAction_SWIGUpcastDelegate>("TriggerAction_SWIGUpcast");
    _UIElementData_SWIGUpcast = lib.Find<UIElementData_SWIGUpcastDelegate>("UIElementData_SWIGUpcast");
    _MouseEventArgs_SWIGUpcast = lib.Find<MouseEventArgs_SWIGUpcastDelegate>("MouseEventArgs_SWIGUpcast");
    _MouseButtonEventArgs_SWIGUpcast = lib.Find<MouseButtonEventArgs_SWIGUpcastDelegate>("MouseButtonEventArgs_SWIGUpcast");
    _MouseWheelEventArgs_SWIGUpcast = lib.Find<MouseWheelEventArgs_SWIGUpcastDelegate>("MouseWheelEventArgs_SWIGUpcast");
    _AccessKeyEventArgs_SWIGUpcast = lib.Find<AccessKeyEventArgs_SWIGUpcastDelegate>("AccessKeyEventArgs_SWIGUpcast");
    _KeyboardFocusChangedEventArgs_SWIGUpcast = lib.Find<KeyboardFocusChangedEventArgs_SWIGUpcastDelegate>("KeyboardFocusChangedEventArgs_SWIGUpcast");
    _KeyEventArgs_SWIGUpcast = lib.Find<KeyEventArgs_SWIGUpcastDelegate>("KeyEventArgs_SWIGUpcast");
    _DragEventArgs_SWIGUpcast = lib.Find<DragEventArgs_SWIGUpcastDelegate>("DragEventArgs_SWIGUpcast");
    _GiveFeedbackEventArgs_SWIGUpcast = lib.Find<GiveFeedbackEventArgs_SWIGUpcastDelegate>("GiveFeedbackEventArgs_SWIGUpcast");
    _QueryContinueDragEventArgs_SWIGUpcast = lib.Find<QueryContinueDragEventArgs_SWIGUpcastDelegate>("QueryContinueDragEventArgs_SWIGUpcast");
    _TextCompositionEventArgs_SWIGUpcast = lib.Find<TextCompositionEventArgs_SWIGUpcastDelegate>("TextCompositionEventArgs_SWIGUpcast");
    _QueryCursorEventArgs_SWIGUpcast = lib.Find<QueryCursorEventArgs_SWIGUpcastDelegate>("QueryCursorEventArgs_SWIGUpcast");
    _Viewbox_SWIGUpcast = lib.Find<Viewbox_SWIGUpcastDelegate>("Viewbox_SWIGUpcast");
    _VisualBrush_SWIGUpcast = lib.Find<VisualBrush_SWIGUpcastDelegate>("VisualBrush_SWIGUpcast");
    _CancelEventArgs_SWIGUpcast = lib.Find<CancelEventArgs_SWIGUpcastDelegate>("CancelEventArgs_SWIGUpcast");
    _Window_SWIGUpcast = lib.Find<Window_SWIGUpcastDelegate>("Window_SWIGUpcast");
    _WrapPanel_SWIGUpcast = lib.Find<WrapPanel_SWIGUpcastDelegate>("WrapPanel_SWIGUpcast");
    _MScorlibBoolean_SWIGUpcast = lib.Find<MScorlibBoolean_SWIGUpcastDelegate>("MScorlibBoolean_SWIGUpcast");
    _MScorlibString_SWIGUpcast = lib.Find<MScorlibString_SWIGUpcastDelegate>("MScorlibString_SWIGUpcast");
    _AnimationTimeline_SWIGUpcast = lib.Find<AnimationTimeline_SWIGUpcastDelegate>("AnimationTimeline_SWIGUpcast");
    _EasingFunctionBase_SWIGUpcast = lib.Find<EasingFunctionBase_SWIGUpcastDelegate>("EasingFunctionBase_SWIGUpcast");
    _BackEase_SWIGUpcast = lib.Find<BackEase_SWIGUpcastDelegate>("BackEase_SWIGUpcast");
    _BaseAnimation_SWIGUpcast = lib.Find<BaseAnimation_SWIGUpcastDelegate>("BaseAnimation_SWIGUpcast");
    _BeginStoryboard_SWIGUpcast = lib.Find<BeginStoryboard_SWIGUpcastDelegate>("BeginStoryboard_SWIGUpcast");
    _BounceEase_SWIGUpcast = lib.Find<BounceEase_SWIGUpcastDelegate>("BounceEase_SWIGUpcast");
    _CircleEase_SWIGUpcast = lib.Find<CircleEase_SWIGUpcastDelegate>("CircleEase_SWIGUpcast");
    _ClockController_SWIGUpcast = lib.Find<ClockController_SWIGUpcastDelegate>("ClockController_SWIGUpcast");
    _ClockGroup_SWIGUpcast = lib.Find<ClockGroup_SWIGUpcastDelegate>("ClockGroup_SWIGUpcast");
    _ControllableStoryboardAction_SWIGUpcast = lib.Find<ControllableStoryboardAction_SWIGUpcastDelegate>("ControllableStoryboardAction_SWIGUpcast");
    _CubicEase_SWIGUpcast = lib.Find<CubicEase_SWIGUpcastDelegate>("CubicEase_SWIGUpcast");
    _ElasticEase_SWIGUpcast = lib.Find<ElasticEase_SWIGUpcastDelegate>("ElasticEase_SWIGUpcast");
    _ExponentialEase_SWIGUpcast = lib.Find<ExponentialEase_SWIGUpcastDelegate>("ExponentialEase_SWIGUpcast");
    _KeySpline_SWIGUpcast = lib.Find<KeySpline_SWIGUpcastDelegate>("KeySpline_SWIGUpcast");
    _TimelineEventArgs_SWIGUpcast = lib.Find<TimelineEventArgs_SWIGUpcastDelegate>("TimelineEventArgs_SWIGUpcast");
    _Timeline_SWIGUpcast = lib.Find<Timeline_SWIGUpcastDelegate>("Timeline_SWIGUpcast");
    _TimelineGroup_SWIGUpcast = lib.Find<TimelineGroup_SWIGUpcastDelegate>("TimelineGroup_SWIGUpcast");
    _ParallelTimeline_SWIGUpcast = lib.Find<ParallelTimeline_SWIGUpcastDelegate>("ParallelTimeline_SWIGUpcast");
    _PauseStoryboard_SWIGUpcast = lib.Find<PauseStoryboard_SWIGUpcastDelegate>("PauseStoryboard_SWIGUpcast");
    _PowerEase_SWIGUpcast = lib.Find<PowerEase_SWIGUpcastDelegate>("PowerEase_SWIGUpcast");
    _QuadraticEase_SWIGUpcast = lib.Find<QuadraticEase_SWIGUpcastDelegate>("QuadraticEase_SWIGUpcast");
    _QuarticEase_SWIGUpcast = lib.Find<QuarticEase_SWIGUpcastDelegate>("QuarticEase_SWIGUpcast");
    _QuinticEase_SWIGUpcast = lib.Find<QuinticEase_SWIGUpcastDelegate>("QuinticEase_SWIGUpcast");
    _ResumeStoryboard_SWIGUpcast = lib.Find<ResumeStoryboard_SWIGUpcastDelegate>("ResumeStoryboard_SWIGUpcast");
    _SineEase_SWIGUpcast = lib.Find<SineEase_SWIGUpcastDelegate>("SineEase_SWIGUpcast");
    _StopStoryboard_SWIGUpcast = lib.Find<StopStoryboard_SWIGUpcastDelegate>("StopStoryboard_SWIGUpcast");
    _Storyboard_SWIGUpcast = lib.Find<Storyboard_SWIGUpcastDelegate>("Storyboard_SWIGUpcast");
    _VisualState_SWIGUpcast = lib.Find<VisualState_SWIGUpcastDelegate>("VisualState_SWIGUpcast");
    _VisualStateGroup_SWIGUpcast = lib.Find<VisualStateGroup_SWIGUpcastDelegate>("VisualStateGroup_SWIGUpcast");
    _VisualStateManager_SWIGUpcast = lib.Find<VisualStateManager_SWIGUpcastDelegate>("VisualStateManager_SWIGUpcast");
    _VisualTransition_SWIGUpcast = lib.Find<VisualTransition_SWIGUpcastDelegate>("VisualTransition_SWIGUpcast");
    _BaseSetterCollection_SWIGUpcast = lib.Find<BaseSetterCollection_SWIGUpcastDelegate>("BaseSetterCollection_SWIGUpcast");
    _TriggerActionCollection_SWIGUpcast = lib.Find<TriggerActionCollection_SWIGUpcastDelegate>("TriggerActionCollection_SWIGUpcast");
    _GroupDescriptionCollection_SWIGUpcast = lib.Find<GroupDescriptionCollection_SWIGUpcastDelegate>("GroupDescriptionCollection_SWIGUpcast");
    _SortDescriptionCollection_SWIGUpcast = lib.Find<SortDescriptionCollection_SWIGUpcastDelegate>("SortDescriptionCollection_SWIGUpcast");
    _CommandBindingCollection_SWIGUpcast = lib.Find<CommandBindingCollection_SWIGUpcastDelegate>("CommandBindingCollection_SWIGUpcast");
    _InputBindingCollection_SWIGUpcast = lib.Find<InputBindingCollection_SWIGUpcastDelegate>("InputBindingCollection_SWIGUpcast");
    _GeometryCollection_SWIGUpcast = lib.Find<GeometryCollection_SWIGUpcastDelegate>("GeometryCollection_SWIGUpcast");
    _ColumnDefinitionCollection_SWIGUpcast = lib.Find<ColumnDefinitionCollection_SWIGUpcastDelegate>("ColumnDefinitionCollection_SWIGUpcast");
    _RowDefinitionCollection_SWIGUpcast = lib.Find<RowDefinitionCollection_SWIGUpcastDelegate>("RowDefinitionCollection_SWIGUpcast");
    _ConditionCollection_SWIGUpcast = lib.Find<ConditionCollection_SWIGUpcastDelegate>("ConditionCollection_SWIGUpcast");
    _ResourceDictionaryCollection_SWIGUpcast = lib.Find<ResourceDictionaryCollection_SWIGUpcastDelegate>("ResourceDictionaryCollection_SWIGUpcast");
    _InputGestureCollection_SWIGUpcast = lib.Find<InputGestureCollection_SWIGUpcastDelegate>("InputGestureCollection_SWIGUpcast");
    _TransformCollection_SWIGUpcast = lib.Find<TransformCollection_SWIGUpcastDelegate>("TransformCollection_SWIGUpcast");
    _NullableBool_SWIGUpcast = lib.Find<NullableBool_SWIGUpcastDelegate>("NullableBool_SWIGUpcast");
    _NullableFloat_SWIGUpcast = lib.Find<NullableFloat_SWIGUpcastDelegate>("NullableFloat_SWIGUpcast");
    _NullableInt16_SWIGUpcast = lib.Find<NullableInt16_SWIGUpcastDelegate>("NullableInt16_SWIGUpcast");
    _NullableInt32_SWIGUpcast = lib.Find<NullableInt32_SWIGUpcastDelegate>("NullableInt32_SWIGUpcast");
    _DoubleAnimation_SWIGUpcast = lib.Find<DoubleAnimation_SWIGUpcastDelegate>("DoubleAnimation_SWIGUpcast");
    _Int16Animation_SWIGUpcast = lib.Find<Int16Animation_SWIGUpcastDelegate>("Int16Animation_SWIGUpcast");
    _Int32Animation_SWIGUpcast = lib.Find<Int32Animation_SWIGUpcastDelegate>("Int32Animation_SWIGUpcast");
    _Int64Animation_SWIGUpcast = lib.Find<Int64Animation_SWIGUpcastDelegate>("Int64Animation_SWIGUpcast");
    _ColorAnimation_SWIGUpcast = lib.Find<ColorAnimation_SWIGUpcastDelegate>("ColorAnimation_SWIGUpcast");
    _PointAnimation_SWIGUpcast = lib.Find<PointAnimation_SWIGUpcastDelegate>("PointAnimation_SWIGUpcast");
    _RectAnimation_SWIGUpcast = lib.Find<RectAnimation_SWIGUpcastDelegate>("RectAnimation_SWIGUpcast");
    _SizeAnimation_SWIGUpcast = lib.Find<SizeAnimation_SWIGUpcastDelegate>("SizeAnimation_SWIGUpcast");
    _ThicknessAnimation_SWIGUpcast = lib.Find<ThicknessAnimation_SWIGUpcastDelegate>("ThicknessAnimation_SWIGUpcast");
    _BooleanKeyFrame_SWIGUpcast = lib.Find<BooleanKeyFrame_SWIGUpcastDelegate>("BooleanKeyFrame_SWIGUpcast");
    _DoubleKeyFrame_SWIGUpcast = lib.Find<DoubleKeyFrame_SWIGUpcastDelegate>("DoubleKeyFrame_SWIGUpcast");
    _Int16KeyFrame_SWIGUpcast = lib.Find<Int16KeyFrame_SWIGUpcastDelegate>("Int16KeyFrame_SWIGUpcast");
    _Int32KeyFrame_SWIGUpcast = lib.Find<Int32KeyFrame_SWIGUpcastDelegate>("Int32KeyFrame_SWIGUpcast");
    _ColorKeyFrame_SWIGUpcast = lib.Find<ColorKeyFrame_SWIGUpcastDelegate>("ColorKeyFrame_SWIGUpcast");
    _PointKeyFrame_SWIGUpcast = lib.Find<PointKeyFrame_SWIGUpcastDelegate>("PointKeyFrame_SWIGUpcast");
    _RectKeyFrame_SWIGUpcast = lib.Find<RectKeyFrame_SWIGUpcastDelegate>("RectKeyFrame_SWIGUpcast");
    _SizeKeyFrame_SWIGUpcast = lib.Find<SizeKeyFrame_SWIGUpcastDelegate>("SizeKeyFrame_SWIGUpcast");
    _ThicknessKeyFrame_SWIGUpcast = lib.Find<ThicknessKeyFrame_SWIGUpcastDelegate>("ThicknessKeyFrame_SWIGUpcast");
    _StringKeyFrame_SWIGUpcast = lib.Find<StringKeyFrame_SWIGUpcastDelegate>("StringKeyFrame_SWIGUpcast");
    _DiscreteBooleanKeyFrame_SWIGUpcast = lib.Find<DiscreteBooleanKeyFrame_SWIGUpcastDelegate>("DiscreteBooleanKeyFrame_SWIGUpcast");
    _DiscreteDoubleKeyFrame_SWIGUpcast = lib.Find<DiscreteDoubleKeyFrame_SWIGUpcastDelegate>("DiscreteDoubleKeyFrame_SWIGUpcast");
    _DiscreteInt16KeyFrame_SWIGUpcast = lib.Find<DiscreteInt16KeyFrame_SWIGUpcastDelegate>("DiscreteInt16KeyFrame_SWIGUpcast");
    _DiscreteInt32KeyFrame_SWIGUpcast = lib.Find<DiscreteInt32KeyFrame_SWIGUpcastDelegate>("DiscreteInt32KeyFrame_SWIGUpcast");
    _DiscreteColorKeyFrame_SWIGUpcast = lib.Find<DiscreteColorKeyFrame_SWIGUpcastDelegate>("DiscreteColorKeyFrame_SWIGUpcast");
    _DiscretePointKeyFrame_SWIGUpcast = lib.Find<DiscretePointKeyFrame_SWIGUpcastDelegate>("DiscretePointKeyFrame_SWIGUpcast");
    _DiscreteRectKeyFrame_SWIGUpcast = lib.Find<DiscreteRectKeyFrame_SWIGUpcastDelegate>("DiscreteRectKeyFrame_SWIGUpcast");
    _DiscreteSizeKeyFrame_SWIGUpcast = lib.Find<DiscreteSizeKeyFrame_SWIGUpcastDelegate>("DiscreteSizeKeyFrame_SWIGUpcast");
    _DiscreteThicknessKeyFrame_SWIGUpcast = lib.Find<DiscreteThicknessKeyFrame_SWIGUpcastDelegate>("DiscreteThicknessKeyFrame_SWIGUpcast");
    _DiscreteStringKeyFrame_SWIGUpcast = lib.Find<DiscreteStringKeyFrame_SWIGUpcastDelegate>("DiscreteStringKeyFrame_SWIGUpcast");
    _EasingDoubleKeyFrame_SWIGUpcast = lib.Find<EasingDoubleKeyFrame_SWIGUpcastDelegate>("EasingDoubleKeyFrame_SWIGUpcast");
    _EasingInt16KeyFrame_SWIGUpcast = lib.Find<EasingInt16KeyFrame_SWIGUpcastDelegate>("EasingInt16KeyFrame_SWIGUpcast");
    _EasingInt32KeyFrame_SWIGUpcast = lib.Find<EasingInt32KeyFrame_SWIGUpcastDelegate>("EasingInt32KeyFrame_SWIGUpcast");
    _EasingColorKeyFrame_SWIGUpcast = lib.Find<EasingColorKeyFrame_SWIGUpcastDelegate>("EasingColorKeyFrame_SWIGUpcast");
    _EasingPointKeyFrame_SWIGUpcast = lib.Find<EasingPointKeyFrame_SWIGUpcastDelegate>("EasingPointKeyFrame_SWIGUpcast");
    _EasingRectKeyFrame_SWIGUpcast = lib.Find<EasingRectKeyFrame_SWIGUpcastDelegate>("EasingRectKeyFrame_SWIGUpcast");
    _EasingSizeKeyFrame_SWIGUpcast = lib.Find<EasingSizeKeyFrame_SWIGUpcastDelegate>("EasingSizeKeyFrame_SWIGUpcast");
    _EasingThicknessKeyFrame_SWIGUpcast = lib.Find<EasingThicknessKeyFrame_SWIGUpcastDelegate>("EasingThicknessKeyFrame_SWIGUpcast");
    _LinearDoubleKeyFrame_SWIGUpcast = lib.Find<LinearDoubleKeyFrame_SWIGUpcastDelegate>("LinearDoubleKeyFrame_SWIGUpcast");
    _LinearInt16KeyFrame_SWIGUpcast = lib.Find<LinearInt16KeyFrame_SWIGUpcastDelegate>("LinearInt16KeyFrame_SWIGUpcast");
    _LinearInt32KeyFrame_SWIGUpcast = lib.Find<LinearInt32KeyFrame_SWIGUpcastDelegate>("LinearInt32KeyFrame_SWIGUpcast");
    _LinearColorKeyFrame_SWIGUpcast = lib.Find<LinearColorKeyFrame_SWIGUpcastDelegate>("LinearColorKeyFrame_SWIGUpcast");
    _LinearPointKeyFrame_SWIGUpcast = lib.Find<LinearPointKeyFrame_SWIGUpcastDelegate>("LinearPointKeyFrame_SWIGUpcast");
    _LinearRectKeyFrame_SWIGUpcast = lib.Find<LinearRectKeyFrame_SWIGUpcastDelegate>("LinearRectKeyFrame_SWIGUpcast");
    _LinearSizeKeyFrame_SWIGUpcast = lib.Find<LinearSizeKeyFrame_SWIGUpcastDelegate>("LinearSizeKeyFrame_SWIGUpcast");
    _LinearThicknessKeyFrame_SWIGUpcast = lib.Find<LinearThicknessKeyFrame_SWIGUpcastDelegate>("LinearThicknessKeyFrame_SWIGUpcast");
    _SplineDoubleKeyFrame_SWIGUpcast = lib.Find<SplineDoubleKeyFrame_SWIGUpcastDelegate>("SplineDoubleKeyFrame_SWIGUpcast");
    _SplineInt16KeyFrame_SWIGUpcast = lib.Find<SplineInt16KeyFrame_SWIGUpcastDelegate>("SplineInt16KeyFrame_SWIGUpcast");
    _SplineInt32KeyFrame_SWIGUpcast = lib.Find<SplineInt32KeyFrame_SWIGUpcastDelegate>("SplineInt32KeyFrame_SWIGUpcast");
    _SplineColorKeyFrame_SWIGUpcast = lib.Find<SplineColorKeyFrame_SWIGUpcastDelegate>("SplineColorKeyFrame_SWIGUpcast");
    _SplinePointKeyFrame_SWIGUpcast = lib.Find<SplinePointKeyFrame_SWIGUpcastDelegate>("SplinePointKeyFrame_SWIGUpcast");
    _SplineRectKeyFrame_SWIGUpcast = lib.Find<SplineRectKeyFrame_SWIGUpcastDelegate>("SplineRectKeyFrame_SWIGUpcast");
    _SplineSizeKeyFrame_SWIGUpcast = lib.Find<SplineSizeKeyFrame_SWIGUpcastDelegate>("SplineSizeKeyFrame_SWIGUpcast");
    _SplineThicknessKeyFrame_SWIGUpcast = lib.Find<SplineThicknessKeyFrame_SWIGUpcastDelegate>("SplineThicknessKeyFrame_SWIGUpcast");
    _AnimationUsingKeyFramesBool_SWIGUpcast = lib.Find<AnimationUsingKeyFramesBool_SWIGUpcastDelegate>("AnimationUsingKeyFramesBool_SWIGUpcast");
    _AnimationUsingKeyFramesFloat_SWIGUpcast = lib.Find<AnimationUsingKeyFramesFloat_SWIGUpcastDelegate>("AnimationUsingKeyFramesFloat_SWIGUpcast");
    _AnimationUsingKeyFramesInt16_SWIGUpcast = lib.Find<AnimationUsingKeyFramesInt16_SWIGUpcastDelegate>("AnimationUsingKeyFramesInt16_SWIGUpcast");
    _AnimationUsingKeyFramesInt32_SWIGUpcast = lib.Find<AnimationUsingKeyFramesInt32_SWIGUpcastDelegate>("AnimationUsingKeyFramesInt32_SWIGUpcast");
    _AnimationUsingKeyFramesColor_SWIGUpcast = lib.Find<AnimationUsingKeyFramesColor_SWIGUpcastDelegate>("AnimationUsingKeyFramesColor_SWIGUpcast");
    _AnimationUsingKeyFramesPoint_SWIGUpcast = lib.Find<AnimationUsingKeyFramesPoint_SWIGUpcastDelegate>("AnimationUsingKeyFramesPoint_SWIGUpcast");
    _AnimationUsingKeyFramesRect_SWIGUpcast = lib.Find<AnimationUsingKeyFramesRect_SWIGUpcastDelegate>("AnimationUsingKeyFramesRect_SWIGUpcast");
    _AnimationUsingKeyFramesSize_SWIGUpcast = lib.Find<AnimationUsingKeyFramesSize_SWIGUpcastDelegate>("AnimationUsingKeyFramesSize_SWIGUpcast");
    _AnimationUsingKeyFramesThickness_SWIGUpcast = lib.Find<AnimationUsingKeyFramesThickness_SWIGUpcastDelegate>("AnimationUsingKeyFramesThickness_SWIGUpcast");
    _AnimationUsingKeyFramesNsString_SWIGUpcast = lib.Find<AnimationUsingKeyFramesNsString_SWIGUpcastDelegate>("AnimationUsingKeyFramesNsString_SWIGUpcast");
    _TimelineCollection_SWIGUpcast = lib.Find<TimelineCollection_SWIGUpcastDelegate>("TimelineCollection_SWIGUpcast");
    SWIGExceptionHelper.InitExtend();
    swigExceptionHelper = new SWIGExceptionHelper();
}

    public delegate bool CheckType_BaseComponentDelegate(IntPtr baseComponent);
    public static CheckType_BaseComponentDelegate _CheckType_BaseComponent;
    public static bool CheckType_BaseComponent(IntPtr baseComponent)
    {
        bool ret = _CheckType_BaseComponent(baseComponent);

        return ret;
    }

    public delegate bool CheckType_AdornerDecoratorDelegate(IntPtr baseComponent);
    public static CheckType_AdornerDecoratorDelegate _CheckType_AdornerDecorator;
    public static bool CheckType_AdornerDecorator(IntPtr baseComponent)
    {
        bool ret = _CheckType_AdornerDecorator(baseComponent);

        return ret;
    }

    public delegate bool CheckType_AnimatableDelegate(IntPtr baseComponent);
    public static CheckType_AnimatableDelegate _CheckType_Animatable;
    public static bool CheckType_Animatable(IntPtr baseComponent)
    {
        bool ret = _CheckType_Animatable(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ApplicationDelegate(IntPtr baseComponent);
    public static CheckType_ApplicationDelegate _CheckType_Application;
    public static bool CheckType_Application(IntPtr baseComponent)
    {
        bool ret = _CheckType_Application(baseComponent);

        return ret;
    }

    public delegate bool CheckType_AtlasSourceDelegate(IntPtr baseComponent);
    public static CheckType_AtlasSourceDelegate _CheckType_AtlasSource;
    public static bool CheckType_AtlasSource(IntPtr baseComponent)
    {
        bool ret = _CheckType_AtlasSource(baseComponent);

        return ret;
    }

    public delegate bool CheckType_BaseBindingDelegate(IntPtr baseComponent);
    public static CheckType_BaseBindingDelegate _CheckType_BaseBinding;
    public static bool CheckType_BaseBinding(IntPtr baseComponent)
    {
        bool ret = _CheckType_BaseBinding(baseComponent);

        return ret;
    }

    public delegate bool CheckType_BaseBindingExpressionDelegate(IntPtr baseComponent);
    public static CheckType_BaseBindingExpressionDelegate _CheckType_BaseBindingExpression;
    public static bool CheckType_BaseBindingExpression(IntPtr baseComponent)
    {
        bool ret = _CheckType_BaseBindingExpression(baseComponent);

        return ret;
    }

    public delegate bool CheckType_BaseButtonDelegate(IntPtr baseComponent);
    public static CheckType_BaseButtonDelegate _CheckType_BaseButton;
    public static bool CheckType_BaseButton(IntPtr baseComponent)
    {
        bool ret = _CheckType_BaseButton(baseComponent);

        return ret;
    }

    public delegate bool CheckType_BaseCommandDelegate(IntPtr baseComponent);
    public static CheckType_BaseCommandDelegate _CheckType_BaseCommand;
    public static bool CheckType_BaseCommand(IntPtr baseComponent)
    {
        bool ret = _CheckType_BaseCommand(baseComponent);

        return ret;
    }

    public delegate bool CheckType_BaseDefinitionDelegate(IntPtr baseComponent);
    public static CheckType_BaseDefinitionDelegate _CheckType_BaseDefinition;
    public static bool CheckType_BaseDefinition(IntPtr baseComponent)
    {
        bool ret = _CheckType_BaseDefinition(baseComponent);

        return ret;
    }

    public delegate bool CheckType_BaseDictionaryDelegate(IntPtr baseComponent);
    public static CheckType_BaseDictionaryDelegate _CheckType_BaseDictionary;
    public static bool CheckType_BaseDictionary(IntPtr baseComponent)
    {
        bool ret = _CheckType_BaseDictionary(baseComponent);

        return ret;
    }

    public delegate bool CheckType_BaseMenuDelegate(IntPtr baseComponent);
    public static CheckType_BaseMenuDelegate _CheckType_BaseMenu;
    public static bool CheckType_BaseMenu(IntPtr baseComponent)
    {
        bool ret = _CheckType_BaseMenu(baseComponent);

        return ret;
    }

    public delegate bool CheckType_BaseSetterDelegate(IntPtr baseComponent);
    public static CheckType_BaseSetterDelegate _CheckType_BaseSetter;
    public static bool CheckType_BaseSetter(IntPtr baseComponent)
    {
        bool ret = _CheckType_BaseSetter(baseComponent);

        return ret;
    }

    public delegate bool CheckType_BaseTextBoxDelegate(IntPtr baseComponent);
    public static CheckType_BaseTextBoxDelegate _CheckType_BaseTextBox;
    public static bool CheckType_BaseTextBox(IntPtr baseComponent)
    {
        bool ret = _CheckType_BaseTextBox(baseComponent);

        return ret;
    }

    public delegate bool CheckType_BaseTriggerDelegate(IntPtr baseComponent);
    public static CheckType_BaseTriggerDelegate _CheckType_BaseTrigger;
    public static bool CheckType_BaseTrigger(IntPtr baseComponent)
    {
        bool ret = _CheckType_BaseTrigger(baseComponent);

        return ret;
    }

    public delegate bool CheckType_BaseValueConverterDelegate(IntPtr baseComponent);
    public static CheckType_BaseValueConverterDelegate _CheckType_BaseValueConverter;
    public static bool CheckType_BaseValueConverter(IntPtr baseComponent)
    {
        bool ret = _CheckType_BaseValueConverter(baseComponent);

        return ret;
    }

    public delegate bool CheckType_BindingDelegate(IntPtr baseComponent);
    public static CheckType_BindingDelegate _CheckType_Binding;
    public static bool CheckType_Binding(IntPtr baseComponent)
    {
        bool ret = _CheckType_Binding(baseComponent);

        return ret;
    }

    public delegate bool CheckType_BitmapSourceDelegate(IntPtr baseComponent);
    public static CheckType_BitmapSourceDelegate _CheckType_BitmapSource;
    public static bool CheckType_BitmapSource(IntPtr baseComponent)
    {
        bool ret = _CheckType_BitmapSource(baseComponent);

        return ret;
    }

    public delegate bool CheckType_BorderDelegate(IntPtr baseComponent);
    public static CheckType_BorderDelegate _CheckType_Border;
    public static bool CheckType_Border(IntPtr baseComponent)
    {
        bool ret = _CheckType_Border(baseComponent);

        return ret;
    }

    public delegate bool CheckType_BrushDelegate(IntPtr baseComponent);
    public static CheckType_BrushDelegate _CheckType_Brush;
    public static bool CheckType_Brush(IntPtr baseComponent)
    {
        bool ret = _CheckType_Brush(baseComponent);

        return ret;
    }

    public delegate bool CheckType_BulletDecoratorDelegate(IntPtr baseComponent);
    public static CheckType_BulletDecoratorDelegate _CheckType_BulletDecorator;
    public static bool CheckType_BulletDecorator(IntPtr baseComponent)
    {
        bool ret = _CheckType_BulletDecorator(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ButtonDelegate(IntPtr baseComponent);
    public static CheckType_ButtonDelegate _CheckType_Button;
    public static bool CheckType_Button(IntPtr baseComponent)
    {
        bool ret = _CheckType_Button(baseComponent);

        return ret;
    }

    public delegate bool CheckType_CanvasDelegate(IntPtr baseComponent);
    public static CheckType_CanvasDelegate _CheckType_Canvas;
    public static bool CheckType_Canvas(IntPtr baseComponent)
    {
        bool ret = _CheckType_Canvas(baseComponent);

        return ret;
    }

    public delegate bool CheckType_CheckBoxDelegate(IntPtr baseComponent);
    public static CheckType_CheckBoxDelegate _CheckType_CheckBox;
    public static bool CheckType_CheckBox(IntPtr baseComponent)
    {
        bool ret = _CheckType_CheckBox(baseComponent);

        return ret;
    }

    public delegate bool CheckType_CollectionDelegate(IntPtr baseComponent);
    public static CheckType_CollectionDelegate _CheckType_Collection;
    public static bool CheckType_Collection(IntPtr baseComponent)
    {
        bool ret = _CheckType_Collection(baseComponent);

        return ret;
    }

    public delegate bool CheckType_CollectionViewDelegate(IntPtr baseComponent);
    public static CheckType_CollectionViewDelegate _CheckType_CollectionView;
    public static bool CheckType_CollectionView(IntPtr baseComponent)
    {
        bool ret = _CheckType_CollectionView(baseComponent);

        return ret;
    }

    public delegate bool CheckType_CollectionViewSourceDelegate(IntPtr baseComponent);
    public static CheckType_CollectionViewSourceDelegate _CheckType_CollectionViewSource;
    public static bool CheckType_CollectionViewSource(IntPtr baseComponent)
    {
        bool ret = _CheckType_CollectionViewSource(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ColumnDefinitionDelegate(IntPtr baseComponent);
    public static CheckType_ColumnDefinitionDelegate _CheckType_ColumnDefinition;
    public static bool CheckType_ColumnDefinition(IntPtr baseComponent)
    {
        bool ret = _CheckType_ColumnDefinition(baseComponent);

        return ret;
    }

    public delegate bool CheckType_CombinedGeometryDelegate(IntPtr baseComponent);
    public static CheckType_CombinedGeometryDelegate _CheckType_CombinedGeometry;
    public static bool CheckType_CombinedGeometry(IntPtr baseComponent)
    {
        bool ret = _CheckType_CombinedGeometry(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ComboBoxDelegate(IntPtr baseComponent);
    public static CheckType_ComboBoxDelegate _CheckType_ComboBox;
    public static bool CheckType_ComboBox(IntPtr baseComponent)
    {
        bool ret = _CheckType_ComboBox(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ComboBoxItemDelegate(IntPtr baseComponent);
    public static CheckType_ComboBoxItemDelegate _CheckType_ComboBoxItem;
    public static bool CheckType_ComboBoxItem(IntPtr baseComponent)
    {
        bool ret = _CheckType_ComboBoxItem(baseComponent);

        return ret;
    }

    public delegate bool CheckType_CommandBindingDelegate(IntPtr baseComponent);
    public static CheckType_CommandBindingDelegate _CheckType_CommandBinding;
    public static bool CheckType_CommandBinding(IntPtr baseComponent)
    {
        bool ret = _CheckType_CommandBinding(baseComponent);

        return ret;
    }

    public delegate bool CheckType_CompositeTransformDelegate(IntPtr baseComponent);
    public static CheckType_CompositeTransformDelegate _CheckType_CompositeTransform;
    public static bool CheckType_CompositeTransform(IntPtr baseComponent)
    {
        bool ret = _CheckType_CompositeTransform(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ConditionDelegate(IntPtr baseComponent);
    public static CheckType_ConditionDelegate _CheckType_Condition;
    public static bool CheckType_Condition(IntPtr baseComponent)
    {
        bool ret = _CheckType_Condition(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ContentControlDelegate(IntPtr baseComponent);
    public static CheckType_ContentControlDelegate _CheckType_ContentControl;
    public static bool CheckType_ContentControl(IntPtr baseComponent)
    {
        bool ret = _CheckType_ContentControl(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ContentPresenterDelegate(IntPtr baseComponent);
    public static CheckType_ContentPresenterDelegate _CheckType_ContentPresenter;
    public static bool CheckType_ContentPresenter(IntPtr baseComponent)
    {
        bool ret = _CheckType_ContentPresenter(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ContextMenuDelegate(IntPtr baseComponent);
    public static CheckType_ContextMenuDelegate _CheckType_ContextMenu;
    public static bool CheckType_ContextMenu(IntPtr baseComponent)
    {
        bool ret = _CheckType_ContextMenu(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ControlDelegate(IntPtr baseComponent);
    public static CheckType_ControlDelegate _CheckType_Control;
    public static bool CheckType_Control(IntPtr baseComponent)
    {
        bool ret = _CheckType_Control(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ControlTemplateDelegate(IntPtr baseComponent);
    public static CheckType_ControlTemplateDelegate _CheckType_ControlTemplate;
    public static bool CheckType_ControlTemplate(IntPtr baseComponent)
    {
        bool ret = _CheckType_ControlTemplate(baseComponent);

        return ret;
    }

    public delegate bool CheckType_DashStyleDelegate(IntPtr baseComponent);
    public static CheckType_DashStyleDelegate _CheckType_DashStyle;
    public static bool CheckType_DashStyle(IntPtr baseComponent)
    {
        bool ret = _CheckType_DashStyle(baseComponent);

        return ret;
    }

    public delegate bool CheckType_DataTemplateDelegate(IntPtr baseComponent);
    public static CheckType_DataTemplateDelegate _CheckType_DataTemplate;
    public static bool CheckType_DataTemplate(IntPtr baseComponent)
    {
        bool ret = _CheckType_DataTemplate(baseComponent);

        return ret;
    }

    public delegate bool CheckType_DataTemplateSelectorDelegate(IntPtr baseComponent);
    public static CheckType_DataTemplateSelectorDelegate _CheckType_DataTemplateSelector;
    public static bool CheckType_DataTemplateSelector(IntPtr baseComponent)
    {
        bool ret = _CheckType_DataTemplateSelector(baseComponent);

        return ret;
    }

    public delegate bool CheckType_DecoratorDelegate(IntPtr baseComponent);
    public static CheckType_DecoratorDelegate _CheckType_Decorator;
    public static bool CheckType_Decorator(IntPtr baseComponent)
    {
        bool ret = _CheckType_Decorator(baseComponent);

        return ret;
    }

    public delegate bool CheckType_DialogDelegate(IntPtr baseComponent);
    public static CheckType_DialogDelegate _CheckType_Dialog;
    public static bool CheckType_Dialog(IntPtr baseComponent)
    {
        bool ret = _CheckType_Dialog(baseComponent);

        return ret;
    }

    public delegate bool CheckType_DockPanelDelegate(IntPtr baseComponent);
    public static CheckType_DockPanelDelegate _CheckType_DockPanel;
    public static bool CheckType_DockPanel(IntPtr baseComponent)
    {
        bool ret = _CheckType_DockPanel(baseComponent);

        return ret;
    }

    public delegate bool CheckType_DrawingContextDelegate(IntPtr baseComponent);
    public static CheckType_DrawingContextDelegate _CheckType_DrawingContext;
    public static bool CheckType_DrawingContext(IntPtr baseComponent)
    {
        bool ret = _CheckType_DrawingContext(baseComponent);

        return ret;
    }

    public delegate bool CheckType_DropShadowEffectDelegate(IntPtr baseComponent);
    public static CheckType_DropShadowEffectDelegate _CheckType_DropShadowEffect;
    public static bool CheckType_DropShadowEffect(IntPtr baseComponent)
    {
        bool ret = _CheckType_DropShadowEffect(baseComponent);

        return ret;
    }

    public delegate bool CheckType_EffectDelegate(IntPtr baseComponent);
    public static CheckType_EffectDelegate _CheckType_Effect;
    public static bool CheckType_Effect(IntPtr baseComponent)
    {
        bool ret = _CheckType_Effect(baseComponent);

        return ret;
    }

    public delegate bool CheckType_EllipseDelegate(IntPtr baseComponent);
    public static CheckType_EllipseDelegate _CheckType_Ellipse;
    public static bool CheckType_Ellipse(IntPtr baseComponent)
    {
        bool ret = _CheckType_Ellipse(baseComponent);

        return ret;
    }

    public delegate bool CheckType_EllipseGeometryDelegate(IntPtr baseComponent);
    public static CheckType_EllipseGeometryDelegate _CheckType_EllipseGeometry;
    public static bool CheckType_EllipseGeometry(IntPtr baseComponent)
    {
        bool ret = _CheckType_EllipseGeometry(baseComponent);

        return ret;
    }

    public delegate bool CheckType_EventTriggerDelegate(IntPtr baseComponent);
    public static CheckType_EventTriggerDelegate _CheckType_EventTrigger;
    public static bool CheckType_EventTrigger(IntPtr baseComponent)
    {
        bool ret = _CheckType_EventTrigger(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ExpanderDelegate(IntPtr baseComponent);
    public static CheckType_ExpanderDelegate _CheckType_Expander;
    public static bool CheckType_Expander(IntPtr baseComponent)
    {
        bool ret = _CheckType_Expander(baseComponent);

        return ret;
    }

    public delegate bool CheckType_FormattedTextDelegate(IntPtr baseComponent);
    public static CheckType_FormattedTextDelegate _CheckType_FormattedText;
    public static bool CheckType_FormattedText(IntPtr baseComponent)
    {
        bool ret = _CheckType_FormattedText(baseComponent);

        return ret;
    }

    public delegate bool CheckType_FrameworkElementDelegate(IntPtr baseComponent);
    public static CheckType_FrameworkElementDelegate _CheckType_FrameworkElement;
    public static bool CheckType_FrameworkElement(IntPtr baseComponent)
    {
        bool ret = _CheckType_FrameworkElement(baseComponent);

        return ret;
    }

    public delegate bool CheckType_FrameworkPropertyMetadataDelegate(IntPtr baseComponent);
    public static CheckType_FrameworkPropertyMetadataDelegate _CheckType_FrameworkPropertyMetadata;
    public static bool CheckType_FrameworkPropertyMetadata(IntPtr baseComponent)
    {
        bool ret = _CheckType_FrameworkPropertyMetadata(baseComponent);

        return ret;
    }

    public delegate bool CheckType_FrameworkTemplateDelegate(IntPtr baseComponent);
    public static CheckType_FrameworkTemplateDelegate _CheckType_FrameworkTemplate;
    public static bool CheckType_FrameworkTemplate(IntPtr baseComponent)
    {
        bool ret = _CheckType_FrameworkTemplate(baseComponent);

        return ret;
    }

    public delegate bool CheckType_FreezableCollectionDelegate(IntPtr baseComponent);
    public static CheckType_FreezableCollectionDelegate _CheckType_FreezableCollection;
    public static bool CheckType_FreezableCollection(IntPtr baseComponent)
    {
        bool ret = _CheckType_FreezableCollection(baseComponent);

        return ret;
    }

    public delegate bool CheckType_GeometryDelegate(IntPtr baseComponent);
    public static CheckType_GeometryDelegate _CheckType_Geometry;
    public static bool CheckType_Geometry(IntPtr baseComponent)
    {
        bool ret = _CheckType_Geometry(baseComponent);

        return ret;
    }

    public delegate bool CheckType_GeometryGroupDelegate(IntPtr baseComponent);
    public static CheckType_GeometryGroupDelegate _CheckType_GeometryGroup;
    public static bool CheckType_GeometryGroup(IntPtr baseComponent)
    {
        bool ret = _CheckType_GeometryGroup(baseComponent);

        return ret;
    }

    public delegate bool CheckType_GradientBrushDelegate(IntPtr baseComponent);
    public static CheckType_GradientBrushDelegate _CheckType_GradientBrush;
    public static bool CheckType_GradientBrush(IntPtr baseComponent)
    {
        bool ret = _CheckType_GradientBrush(baseComponent);

        return ret;
    }

    public delegate bool CheckType_GradientStopDelegate(IntPtr baseComponent);
    public static CheckType_GradientStopDelegate _CheckType_GradientStop;
    public static bool CheckType_GradientStop(IntPtr baseComponent)
    {
        bool ret = _CheckType_GradientStop(baseComponent);

        return ret;
    }

    public delegate bool CheckType_GradientStopCollectionDelegate(IntPtr baseComponent);
    public static CheckType_GradientStopCollectionDelegate _CheckType_GradientStopCollection;
    public static bool CheckType_GradientStopCollection(IntPtr baseComponent)
    {
        bool ret = _CheckType_GradientStopCollection(baseComponent);

        return ret;
    }

    public delegate bool CheckType_GridDelegate(IntPtr baseComponent);
    public static CheckType_GridDelegate _CheckType_Grid;
    public static bool CheckType_Grid(IntPtr baseComponent)
    {
        bool ret = _CheckType_Grid(baseComponent);

        return ret;
    }

    public delegate bool CheckType_GroupBoxDelegate(IntPtr baseComponent);
    public static CheckType_GroupBoxDelegate _CheckType_GroupBox;
    public static bool CheckType_GroupBox(IntPtr baseComponent)
    {
        bool ret = _CheckType_GroupBox(baseComponent);

        return ret;
    }

    public delegate bool CheckType_HeaderedContentControlDelegate(IntPtr baseComponent);
    public static CheckType_HeaderedContentControlDelegate _CheckType_HeaderedContentControl;
    public static bool CheckType_HeaderedContentControl(IntPtr baseComponent)
    {
        bool ret = _CheckType_HeaderedContentControl(baseComponent);

        return ret;
    }

    public delegate bool CheckType_HeaderedItemsControlDelegate(IntPtr baseComponent);
    public static CheckType_HeaderedItemsControlDelegate _CheckType_HeaderedItemsControl;
    public static bool CheckType_HeaderedItemsControl(IntPtr baseComponent)
    {
        bool ret = _CheckType_HeaderedItemsControl(baseComponent);

        return ret;
    }

    public delegate bool CheckType_IconSourceDelegate(IntPtr baseComponent);
    public static CheckType_IconSourceDelegate _CheckType_IconSource;
    public static bool CheckType_IconSource(IntPtr baseComponent)
    {
        bool ret = _CheckType_IconSource(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ImageDelegate(IntPtr baseComponent);
    public static CheckType_ImageDelegate _CheckType_Image;
    public static bool CheckType_Image(IntPtr baseComponent)
    {
        bool ret = _CheckType_Image(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ImageAtlasListDelegate(IntPtr baseComponent);
    public static CheckType_ImageAtlasListDelegate _CheckType_ImageAtlasList;
    public static bool CheckType_ImageAtlasList(IntPtr baseComponent)
    {
        bool ret = _CheckType_ImageAtlasList(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ImageBrushDelegate(IntPtr baseComponent);
    public static CheckType_ImageBrushDelegate _CheckType_ImageBrush;
    public static bool CheckType_ImageBrush(IntPtr baseComponent)
    {
        bool ret = _CheckType_ImageBrush(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ImageSourceDelegate(IntPtr baseComponent);
    public static CheckType_ImageSourceDelegate _CheckType_ImageSource;
    public static bool CheckType_ImageSource(IntPtr baseComponent)
    {
        bool ret = _CheckType_ImageSource(baseComponent);

        return ret;
    }

    public delegate bool CheckType_InputBindingDelegate(IntPtr baseComponent);
    public static CheckType_InputBindingDelegate _CheckType_InputBinding;
    public static bool CheckType_InputBinding(IntPtr baseComponent)
    {
        bool ret = _CheckType_InputBinding(baseComponent);

        return ret;
    }

    public delegate bool CheckType_InputGestureDelegate(IntPtr baseComponent);
    public static CheckType_InputGestureDelegate _CheckType_InputGesture;
    public static bool CheckType_InputGesture(IntPtr baseComponent)
    {
        bool ret = _CheckType_InputGesture(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ItemCollectionDelegate(IntPtr baseComponent);
    public static CheckType_ItemCollectionDelegate _CheckType_ItemCollection;
    public static bool CheckType_ItemCollection(IntPtr baseComponent)
    {
        bool ret = _CheckType_ItemCollection(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ItemsControlDelegate(IntPtr baseComponent);
    public static CheckType_ItemsControlDelegate _CheckType_ItemsControl;
    public static bool CheckType_ItemsControl(IntPtr baseComponent)
    {
        bool ret = _CheckType_ItemsControl(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ItemsPanelTemplateDelegate(IntPtr baseComponent);
    public static CheckType_ItemsPanelTemplateDelegate _CheckType_ItemsPanelTemplate;
    public static bool CheckType_ItemsPanelTemplate(IntPtr baseComponent)
    {
        bool ret = _CheckType_ItemsPanelTemplate(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ItemsPresenterDelegate(IntPtr baseComponent);
    public static CheckType_ItemsPresenterDelegate _CheckType_ItemsPresenter;
    public static bool CheckType_ItemsPresenter(IntPtr baseComponent)
    {
        bool ret = _CheckType_ItemsPresenter(baseComponent);

        return ret;
    }

    public delegate bool CheckType_KeyBindingDelegate(IntPtr baseComponent);
    public static CheckType_KeyBindingDelegate _CheckType_KeyBinding;
    public static bool CheckType_KeyBinding(IntPtr baseComponent)
    {
        bool ret = _CheckType_KeyBinding(baseComponent);

        return ret;
    }

    public delegate bool CheckType_KeyboardDelegate(IntPtr baseComponent);
    public static CheckType_KeyboardDelegate _CheckType_Keyboard;
    public static bool CheckType_Keyboard(IntPtr baseComponent)
    {
        bool ret = _CheckType_Keyboard(baseComponent);

        return ret;
    }

    public delegate bool CheckType_KeyboardNavigationDelegate(IntPtr baseComponent);
    public static CheckType_KeyboardNavigationDelegate _CheckType_KeyboardNavigation;
    public static bool CheckType_KeyboardNavigation(IntPtr baseComponent)
    {
        bool ret = _CheckType_KeyboardNavigation(baseComponent);

        return ret;
    }

    public delegate bool CheckType_KeyGestureDelegate(IntPtr baseComponent);
    public static CheckType_KeyGestureDelegate _CheckType_KeyGesture;
    public static bool CheckType_KeyGesture(IntPtr baseComponent)
    {
        bool ret = _CheckType_KeyGesture(baseComponent);

        return ret;
    }

    public delegate bool CheckType_LabelDelegate(IntPtr baseComponent);
    public static CheckType_LabelDelegate _CheckType_Label;
    public static bool CheckType_Label(IntPtr baseComponent)
    {
        bool ret = _CheckType_Label(baseComponent);

        return ret;
    }

    public delegate bool CheckType_LineDelegate(IntPtr baseComponent);
    public static CheckType_LineDelegate _CheckType_Line;
    public static bool CheckType_Line(IntPtr baseComponent)
    {
        bool ret = _CheckType_Line(baseComponent);

        return ret;
    }

    public delegate bool CheckType_LinearGradientBrushDelegate(IntPtr baseComponent);
    public static CheckType_LinearGradientBrushDelegate _CheckType_LinearGradientBrush;
    public static bool CheckType_LinearGradientBrush(IntPtr baseComponent)
    {
        bool ret = _CheckType_LinearGradientBrush(baseComponent);

        return ret;
    }

    public delegate bool CheckType_LineGeometryDelegate(IntPtr baseComponent);
    public static CheckType_LineGeometryDelegate _CheckType_LineGeometry;
    public static bool CheckType_LineGeometry(IntPtr baseComponent)
    {
        bool ret = _CheckType_LineGeometry(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ListBoxDelegate(IntPtr baseComponent);
    public static CheckType_ListBoxDelegate _CheckType_ListBox;
    public static bool CheckType_ListBox(IntPtr baseComponent)
    {
        bool ret = _CheckType_ListBox(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ListBoxItemDelegate(IntPtr baseComponent);
    public static CheckType_ListBoxItemDelegate _CheckType_ListBoxItem;
    public static bool CheckType_ListBoxItem(IntPtr baseComponent)
    {
        bool ret = _CheckType_ListBoxItem(baseComponent);

        return ret;
    }

    public delegate bool CheckType_Matrix3DProjectionDelegate(IntPtr baseComponent);
    public static CheckType_Matrix3DProjectionDelegate _CheckType_Matrix3DProjection;
    public static bool CheckType_Matrix3DProjection(IntPtr baseComponent)
    {
        bool ret = _CheckType_Matrix3DProjection(baseComponent);

        return ret;
    }

    public delegate bool CheckType_MatrixTransformDelegate(IntPtr baseComponent);
    public static CheckType_MatrixTransformDelegate _CheckType_MatrixTransform;
    public static bool CheckType_MatrixTransform(IntPtr baseComponent)
    {
        bool ret = _CheckType_MatrixTransform(baseComponent);

        return ret;
    }

    public delegate bool CheckType_MenuDelegate(IntPtr baseComponent);
    public static CheckType_MenuDelegate _CheckType_Menu;
    public static bool CheckType_Menu(IntPtr baseComponent)
    {
        bool ret = _CheckType_Menu(baseComponent);

        return ret;
    }

    public delegate bool CheckType_MenuItemDelegate(IntPtr baseComponent);
    public static CheckType_MenuItemDelegate _CheckType_MenuItem;
    public static bool CheckType_MenuItem(IntPtr baseComponent)
    {
        bool ret = _CheckType_MenuItem(baseComponent);

        return ret;
    }

    public delegate bool CheckType_MessageDialogDelegate(IntPtr baseComponent);
    public static CheckType_MessageDialogDelegate _CheckType_MessageDialog;
    public static bool CheckType_MessageDialog(IntPtr baseComponent)
    {
        bool ret = _CheckType_MessageDialog(baseComponent);

        return ret;
    }

    public delegate bool CheckType_MouseDelegate(IntPtr baseComponent);
    public static CheckType_MouseDelegate _CheckType_Mouse;
    public static bool CheckType_Mouse(IntPtr baseComponent)
    {
        bool ret = _CheckType_Mouse(baseComponent);

        return ret;
    }

    public delegate bool CheckType_MScorlibBooleanDelegate(IntPtr baseComponent);
    public static CheckType_MScorlibBooleanDelegate _CheckType_MScorlibBoolean;
    public static bool CheckType_MScorlibBoolean(IntPtr baseComponent)
    {
        bool ret = _CheckType_MScorlibBoolean(baseComponent);

        return ret;
    }

    public delegate bool CheckType_MScorlibStringDelegate(IntPtr baseComponent);
    public static CheckType_MScorlibStringDelegate _CheckType_MScorlibString;
    public static bool CheckType_MScorlibString(IntPtr baseComponent)
    {
        bool ret = _CheckType_MScorlibString(baseComponent);

        return ret;
    }

    public delegate bool CheckType_MultiTriggerDelegate(IntPtr baseComponent);
    public static CheckType_MultiTriggerDelegate _CheckType_MultiTrigger;
    public static bool CheckType_MultiTrigger(IntPtr baseComponent)
    {
        bool ret = _CheckType_MultiTrigger(baseComponent);

        return ret;
    }

    public delegate bool CheckType_NameScopeDelegate(IntPtr baseComponent);
    public static CheckType_NameScopeDelegate _CheckType_NameScope;
    public static bool CheckType_NameScope(IntPtr baseComponent)
    {
        bool ret = _CheckType_NameScope(baseComponent);

        return ret;
    }

    public delegate bool CheckType_PageDelegate(IntPtr baseComponent);
    public static CheckType_PageDelegate _CheckType_Page;
    public static bool CheckType_Page(IntPtr baseComponent)
    {
        bool ret = _CheckType_Page(baseComponent);

        return ret;
    }

    public delegate bool CheckType_PanelDelegate(IntPtr baseComponent);
    public static CheckType_PanelDelegate _CheckType_Panel;
    public static bool CheckType_Panel(IntPtr baseComponent)
    {
        bool ret = _CheckType_Panel(baseComponent);

        return ret;
    }

    public delegate bool CheckType_PasswordBoxDelegate(IntPtr baseComponent);
    public static CheckType_PasswordBoxDelegate _CheckType_PasswordBox;
    public static bool CheckType_PasswordBox(IntPtr baseComponent)
    {
        bool ret = _CheckType_PasswordBox(baseComponent);

        return ret;
    }

    public delegate bool CheckType_PathDelegate(IntPtr baseComponent);
    public static CheckType_PathDelegate _CheckType_Path;
    public static bool CheckType_Path(IntPtr baseComponent)
    {
        bool ret = _CheckType_Path(baseComponent);

        return ret;
    }

    public delegate bool CheckType_PenDelegate(IntPtr baseComponent);
    public static CheckType_PenDelegate _CheckType_Pen;
    public static bool CheckType_Pen(IntPtr baseComponent)
    {
        bool ret = _CheckType_Pen(baseComponent);

        return ret;
    }

    public delegate bool CheckType_PlaneProjectionDelegate(IntPtr baseComponent);
    public static CheckType_PlaneProjectionDelegate _CheckType_PlaneProjection;
    public static bool CheckType_PlaneProjection(IntPtr baseComponent)
    {
        bool ret = _CheckType_PlaneProjection(baseComponent);

        return ret;
    }

    public delegate bool CheckType_PopupDelegate(IntPtr baseComponent);
    public static CheckType_PopupDelegate _CheckType_Popup;
    public static bool CheckType_Popup(IntPtr baseComponent)
    {
        bool ret = _CheckType_Popup(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ProgressBarDelegate(IntPtr baseComponent);
    public static CheckType_ProgressBarDelegate _CheckType_ProgressBar;
    public static bool CheckType_ProgressBar(IntPtr baseComponent)
    {
        bool ret = _CheckType_ProgressBar(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ProjectionDelegate(IntPtr baseComponent);
    public static CheckType_ProjectionDelegate _CheckType_Projection;
    public static bool CheckType_Projection(IntPtr baseComponent)
    {
        bool ret = _CheckType_Projection(baseComponent);

        return ret;
    }

    public delegate bool CheckType_PropertyPathDelegate(IntPtr baseComponent);
    public static CheckType_PropertyPathDelegate _CheckType_PropertyPath;
    public static bool CheckType_PropertyPath(IntPtr baseComponent)
    {
        bool ret = _CheckType_PropertyPath(baseComponent);

        return ret;
    }

    public delegate bool CheckType_RadialGradientBrushDelegate(IntPtr baseComponent);
    public static CheckType_RadialGradientBrushDelegate _CheckType_RadialGradientBrush;
    public static bool CheckType_RadialGradientBrush(IntPtr baseComponent)
    {
        bool ret = _CheckType_RadialGradientBrush(baseComponent);

        return ret;
    }

    public delegate bool CheckType_RadioButtonDelegate(IntPtr baseComponent);
    public static CheckType_RadioButtonDelegate _CheckType_RadioButton;
    public static bool CheckType_RadioButton(IntPtr baseComponent)
    {
        bool ret = _CheckType_RadioButton(baseComponent);

        return ret;
    }

    public delegate bool CheckType_RangeBaseDelegate(IntPtr baseComponent);
    public static CheckType_RangeBaseDelegate _CheckType_RangeBase;
    public static bool CheckType_RangeBase(IntPtr baseComponent)
    {
        bool ret = _CheckType_RangeBase(baseComponent);

        return ret;
    }

    public delegate bool CheckType_RectangleDelegate(IntPtr baseComponent);
    public static CheckType_RectangleDelegate _CheckType_Rectangle;
    public static bool CheckType_Rectangle(IntPtr baseComponent)
    {
        bool ret = _CheckType_Rectangle(baseComponent);

        return ret;
    }

    public delegate bool CheckType_RectangleGeometryDelegate(IntPtr baseComponent);
    public static CheckType_RectangleGeometryDelegate _CheckType_RectangleGeometry;
    public static bool CheckType_RectangleGeometry(IntPtr baseComponent)
    {
        bool ret = _CheckType_RectangleGeometry(baseComponent);

        return ret;
    }

    public delegate bool CheckType_RelativeSourceDelegate(IntPtr baseComponent);
    public static CheckType_RelativeSourceDelegate _CheckType_RelativeSource;
    public static bool CheckType_RelativeSource(IntPtr baseComponent)
    {
        bool ret = _CheckType_RelativeSource(baseComponent);

        return ret;
    }

    public delegate bool CheckType_RepeatButtonDelegate(IntPtr baseComponent);
    public static CheckType_RepeatButtonDelegate _CheckType_RepeatButton;
    public static bool CheckType_RepeatButton(IntPtr baseComponent)
    {
        bool ret = _CheckType_RepeatButton(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ResourceDictionaryDelegate(IntPtr baseComponent);
    public static CheckType_ResourceDictionaryDelegate _CheckType_ResourceDictionary;
    public static bool CheckType_ResourceDictionary(IntPtr baseComponent)
    {
        bool ret = _CheckType_ResourceDictionary(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ResourceKeyStringDelegate(IntPtr baseComponent);
    public static CheckType_ResourceKeyStringDelegate _CheckType_ResourceKeyString;
    public static bool CheckType_ResourceKeyString(IntPtr baseComponent)
    {
        bool ret = _CheckType_ResourceKeyString(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ResourceKeyTypeDelegate(IntPtr baseComponent);
    public static CheckType_ResourceKeyTypeDelegate _CheckType_ResourceKeyType;
    public static bool CheckType_ResourceKeyType(IntPtr baseComponent)
    {
        bool ret = _CheckType_ResourceKeyType(baseComponent);

        return ret;
    }

    public delegate bool CheckType_RotateTransformDelegate(IntPtr baseComponent);
    public static CheckType_RotateTransformDelegate _CheckType_RotateTransform;
    public static bool CheckType_RotateTransform(IntPtr baseComponent)
    {
        bool ret = _CheckType_RotateTransform(baseComponent);

        return ret;
    }

    public delegate bool CheckType_RoutedCommandDelegate(IntPtr baseComponent);
    public static CheckType_RoutedCommandDelegate _CheckType_RoutedCommand;
    public static bool CheckType_RoutedCommand(IntPtr baseComponent)
    {
        bool ret = _CheckType_RoutedCommand(baseComponent);

        return ret;
    }

    public delegate bool CheckType_RoutedEventDelegate(IntPtr baseComponent);
    public static CheckType_RoutedEventDelegate _CheckType_RoutedEvent;
    public static bool CheckType_RoutedEvent(IntPtr baseComponent)
    {
        bool ret = _CheckType_RoutedEvent(baseComponent);

        return ret;
    }

    public delegate bool CheckType_RoutedUICommandDelegate(IntPtr baseComponent);
    public static CheckType_RoutedUICommandDelegate _CheckType_RoutedUICommand;
    public static bool CheckType_RoutedUICommand(IntPtr baseComponent)
    {
        bool ret = _CheckType_RoutedUICommand(baseComponent);

        return ret;
    }

    public delegate bool CheckType_RowDefinitionDelegate(IntPtr baseComponent);
    public static CheckType_RowDefinitionDelegate _CheckType_RowDefinition;
    public static bool CheckType_RowDefinition(IntPtr baseComponent)
    {
        bool ret = _CheckType_RowDefinition(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ScaleTransformDelegate(IntPtr baseComponent);
    public static CheckType_ScaleTransformDelegate _CheckType_ScaleTransform;
    public static bool CheckType_ScaleTransform(IntPtr baseComponent)
    {
        bool ret = _CheckType_ScaleTransform(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ScrollBarDelegate(IntPtr baseComponent);
    public static CheckType_ScrollBarDelegate _CheckType_ScrollBar;
    public static bool CheckType_ScrollBar(IntPtr baseComponent)
    {
        bool ret = _CheckType_ScrollBar(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ScrollContentPresenterDelegate(IntPtr baseComponent);
    public static CheckType_ScrollContentPresenterDelegate _CheckType_ScrollContentPresenter;
    public static bool CheckType_ScrollContentPresenter(IntPtr baseComponent)
    {
        bool ret = _CheckType_ScrollContentPresenter(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ScrollViewerDelegate(IntPtr baseComponent);
    public static CheckType_ScrollViewerDelegate _CheckType_ScrollViewer;
    public static bool CheckType_ScrollViewer(IntPtr baseComponent)
    {
        bool ret = _CheckType_ScrollViewer(baseComponent);

        return ret;
    }

    public delegate bool CheckType_SelectorDelegate(IntPtr baseComponent);
    public static CheckType_SelectorDelegate _CheckType_Selector;
    public static bool CheckType_Selector(IntPtr baseComponent)
    {
        bool ret = _CheckType_Selector(baseComponent);

        return ret;
    }

    public delegate bool CheckType_SeparatorDelegate(IntPtr baseComponent);
    public static CheckType_SeparatorDelegate _CheckType_Separator;
    public static bool CheckType_Separator(IntPtr baseComponent)
    {
        bool ret = _CheckType_Separator(baseComponent);

        return ret;
    }

    public delegate bool CheckType_SetterDelegate(IntPtr baseComponent);
    public static CheckType_SetterDelegate _CheckType_Setter;
    public static bool CheckType_Setter(IntPtr baseComponent)
    {
        bool ret = _CheckType_Setter(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ShapeDelegate(IntPtr baseComponent);
    public static CheckType_ShapeDelegate _CheckType_Shape;
    public static bool CheckType_Shape(IntPtr baseComponent)
    {
        bool ret = _CheckType_Shape(baseComponent);

        return ret;
    }

    public delegate bool CheckType_SkewTransformDelegate(IntPtr baseComponent);
    public static CheckType_SkewTransformDelegate _CheckType_SkewTransform;
    public static bool CheckType_SkewTransform(IntPtr baseComponent)
    {
        bool ret = _CheckType_SkewTransform(baseComponent);

        return ret;
    }

    public delegate bool CheckType_SliderDelegate(IntPtr baseComponent);
    public static CheckType_SliderDelegate _CheckType_Slider;
    public static bool CheckType_Slider(IntPtr baseComponent)
    {
        bool ret = _CheckType_Slider(baseComponent);

        return ret;
    }

    public delegate bool CheckType_SolidColorBrushDelegate(IntPtr baseComponent);
    public static CheckType_SolidColorBrushDelegate _CheckType_SolidColorBrush;
    public static bool CheckType_SolidColorBrush(IntPtr baseComponent)
    {
        bool ret = _CheckType_SolidColorBrush(baseComponent);

        return ret;
    }

    public delegate bool CheckType_StackPanelDelegate(IntPtr baseComponent);
    public static CheckType_StackPanelDelegate _CheckType_StackPanel;
    public static bool CheckType_StackPanel(IntPtr baseComponent)
    {
        bool ret = _CheckType_StackPanel(baseComponent);

        return ret;
    }

    public delegate bool CheckType_StatusBarDelegate(IntPtr baseComponent);
    public static CheckType_StatusBarDelegate _CheckType_StatusBar;
    public static bool CheckType_StatusBar(IntPtr baseComponent)
    {
        bool ret = _CheckType_StatusBar(baseComponent);

        return ret;
    }

    public delegate bool CheckType_StatusBarItemDelegate(IntPtr baseComponent);
    public static CheckType_StatusBarItemDelegate _CheckType_StatusBarItem;
    public static bool CheckType_StatusBarItem(IntPtr baseComponent)
    {
        bool ret = _CheckType_StatusBarItem(baseComponent);

        return ret;
    }

    public delegate bool CheckType_StreamGeometryDelegate(IntPtr baseComponent);
    public static CheckType_StreamGeometryDelegate _CheckType_StreamGeometry;
    public static bool CheckType_StreamGeometry(IntPtr baseComponent)
    {
        bool ret = _CheckType_StreamGeometry(baseComponent);

        return ret;
    }

    public delegate bool CheckType_StyleDelegate(IntPtr baseComponent);
    public static CheckType_StyleDelegate _CheckType_Style;
    public static bool CheckType_Style(IntPtr baseComponent)
    {
        bool ret = _CheckType_Style(baseComponent);

        return ret;
    }

    public delegate bool CheckType_TabControlDelegate(IntPtr baseComponent);
    public static CheckType_TabControlDelegate _CheckType_TabControl;
    public static bool CheckType_TabControl(IntPtr baseComponent)
    {
        bool ret = _CheckType_TabControl(baseComponent);

        return ret;
    }

    public delegate bool CheckType_TabItemDelegate(IntPtr baseComponent);
    public static CheckType_TabItemDelegate _CheckType_TabItem;
    public static bool CheckType_TabItem(IntPtr baseComponent)
    {
        bool ret = _CheckType_TabItem(baseComponent);

        return ret;
    }

    public delegate bool CheckType_TabPanelDelegate(IntPtr baseComponent);
    public static CheckType_TabPanelDelegate _CheckType_TabPanel;
    public static bool CheckType_TabPanel(IntPtr baseComponent)
    {
        bool ret = _CheckType_TabPanel(baseComponent);

        return ret;
    }

    public delegate bool CheckType_TemplateBindingDelegate(IntPtr baseComponent);
    public static CheckType_TemplateBindingDelegate _CheckType_TemplateBinding;
    public static bool CheckType_TemplateBinding(IntPtr baseComponent)
    {
        bool ret = _CheckType_TemplateBinding(baseComponent);

        return ret;
    }

    public delegate bool CheckType_TextBlockDelegate(IntPtr baseComponent);
    public static CheckType_TextBlockDelegate _CheckType_TextBlock;
    public static bool CheckType_TextBlock(IntPtr baseComponent)
    {
        bool ret = _CheckType_TextBlock(baseComponent);

        return ret;
    }

    public delegate bool CheckType_TextBoxDelegate(IntPtr baseComponent);
    public static CheckType_TextBoxDelegate _CheckType_TextBox;
    public static bool CheckType_TextBox(IntPtr baseComponent)
    {
        bool ret = _CheckType_TextBox(baseComponent);

        return ret;
    }

    public delegate bool CheckType_TextureSourceDelegate(IntPtr baseComponent);
    public static CheckType_TextureSourceDelegate _CheckType_TextureSource;
    public static bool CheckType_TextureSource(IntPtr baseComponent)
    {
        bool ret = _CheckType_TextureSource(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ThumbDelegate(IntPtr baseComponent);
    public static CheckType_ThumbDelegate _CheckType_Thumb;
    public static bool CheckType_Thumb(IntPtr baseComponent)
    {
        bool ret = _CheckType_Thumb(baseComponent);

        return ret;
    }

    public delegate bool CheckType_TickBarDelegate(IntPtr baseComponent);
    public static CheckType_TickBarDelegate _CheckType_TickBar;
    public static bool CheckType_TickBar(IntPtr baseComponent)
    {
        bool ret = _CheckType_TickBar(baseComponent);

        return ret;
    }

    public delegate bool CheckType_TileBrushDelegate(IntPtr baseComponent);
    public static CheckType_TileBrushDelegate _CheckType_TileBrush;
    public static bool CheckType_TileBrush(IntPtr baseComponent)
    {
        bool ret = _CheckType_TileBrush(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ToggleButtonDelegate(IntPtr baseComponent);
    public static CheckType_ToggleButtonDelegate _CheckType_ToggleButton;
    public static bool CheckType_ToggleButton(IntPtr baseComponent)
    {
        bool ret = _CheckType_ToggleButton(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ToolBarDelegate(IntPtr baseComponent);
    public static CheckType_ToolBarDelegate _CheckType_ToolBar;
    public static bool CheckType_ToolBar(IntPtr baseComponent)
    {
        bool ret = _CheckType_ToolBar(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ToolBarOverflowPanelDelegate(IntPtr baseComponent);
    public static CheckType_ToolBarOverflowPanelDelegate _CheckType_ToolBarOverflowPanel;
    public static bool CheckType_ToolBarOverflowPanel(IntPtr baseComponent)
    {
        bool ret = _CheckType_ToolBarOverflowPanel(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ToolBarPanelDelegate(IntPtr baseComponent);
    public static CheckType_ToolBarPanelDelegate _CheckType_ToolBarPanel;
    public static bool CheckType_ToolBarPanel(IntPtr baseComponent)
    {
        bool ret = _CheckType_ToolBarPanel(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ToolBarTrayDelegate(IntPtr baseComponent);
    public static CheckType_ToolBarTrayDelegate _CheckType_ToolBarTray;
    public static bool CheckType_ToolBarTray(IntPtr baseComponent)
    {
        bool ret = _CheckType_ToolBarTray(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ToolTipDelegate(IntPtr baseComponent);
    public static CheckType_ToolTipDelegate _CheckType_ToolTip;
    public static bool CheckType_ToolTip(IntPtr baseComponent)
    {
        bool ret = _CheckType_ToolTip(baseComponent);

        return ret;
    }

    public delegate bool CheckType_TrackDelegate(IntPtr baseComponent);
    public static CheckType_TrackDelegate _CheckType_Track;
    public static bool CheckType_Track(IntPtr baseComponent)
    {
        bool ret = _CheckType_Track(baseComponent);

        return ret;
    }

    public delegate bool CheckType_TransformGroupDelegate(IntPtr baseComponent);
    public static CheckType_TransformGroupDelegate _CheckType_TransformGroup;
    public static bool CheckType_TransformGroup(IntPtr baseComponent)
    {
        bool ret = _CheckType_TransformGroup(baseComponent);

        return ret;
    }

    public delegate bool CheckType_TranslateTransformDelegate(IntPtr baseComponent);
    public static CheckType_TranslateTransformDelegate _CheckType_TranslateTransform;
    public static bool CheckType_TranslateTransform(IntPtr baseComponent)
    {
        bool ret = _CheckType_TranslateTransform(baseComponent);

        return ret;
    }

    public delegate bool CheckType_TreeViewDelegate(IntPtr baseComponent);
    public static CheckType_TreeViewDelegate _CheckType_TreeView;
    public static bool CheckType_TreeView(IntPtr baseComponent)
    {
        bool ret = _CheckType_TreeView(baseComponent);

        return ret;
    }

    public delegate bool CheckType_TreeViewItemDelegate(IntPtr baseComponent);
    public static CheckType_TreeViewItemDelegate _CheckType_TreeViewItem;
    public static bool CheckType_TreeViewItem(IntPtr baseComponent)
    {
        bool ret = _CheckType_TreeViewItem(baseComponent);

        return ret;
    }

    public delegate bool CheckType_TriggerDelegate(IntPtr baseComponent);
    public static CheckType_TriggerDelegate _CheckType_Trigger;
    public static bool CheckType_Trigger(IntPtr baseComponent)
    {
        bool ret = _CheckType_Trigger(baseComponent);

        return ret;
    }

    public delegate bool CheckType_TriggerActionDelegate(IntPtr baseComponent);
    public static CheckType_TriggerActionDelegate _CheckType_TriggerAction;
    public static bool CheckType_TriggerAction(IntPtr baseComponent)
    {
        bool ret = _CheckType_TriggerAction(baseComponent);

        return ret;
    }

    public delegate bool CheckType_TriggerCollectionDelegate(IntPtr baseComponent);
    public static CheckType_TriggerCollectionDelegate _CheckType_TriggerCollection;
    public static bool CheckType_TriggerCollection(IntPtr baseComponent)
    {
        bool ret = _CheckType_TriggerCollection(baseComponent);

        return ret;
    }

    public delegate bool CheckType_UIElementDelegate(IntPtr baseComponent);
    public static CheckType_UIElementDelegate _CheckType_UIElement;
    public static bool CheckType_UIElement(IntPtr baseComponent)
    {
        bool ret = _CheckType_UIElement(baseComponent);

        return ret;
    }

    public delegate bool CheckType_UIElementCollectionDelegate(IntPtr baseComponent);
    public static CheckType_UIElementCollectionDelegate _CheckType_UIElementCollection;
    public static bool CheckType_UIElementCollection(IntPtr baseComponent)
    {
        bool ret = _CheckType_UIElementCollection(baseComponent);

        return ret;
    }

    public delegate bool CheckType_UIPropertyMetadataDelegate(IntPtr baseComponent);
    public static CheckType_UIPropertyMetadataDelegate _CheckType_UIPropertyMetadata;
    public static bool CheckType_UIPropertyMetadata(IntPtr baseComponent)
    {
        bool ret = _CheckType_UIPropertyMetadata(baseComponent);

        return ret;
    }

    public delegate bool CheckType_UserControlDelegate(IntPtr baseComponent);
    public static CheckType_UserControlDelegate _CheckType_UserControl;
    public static bool CheckType_UserControl(IntPtr baseComponent)
    {
        bool ret = _CheckType_UserControl(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ViewboxDelegate(IntPtr baseComponent);
    public static CheckType_ViewboxDelegate _CheckType_Viewbox;
    public static bool CheckType_Viewbox(IntPtr baseComponent)
    {
        bool ret = _CheckType_Viewbox(baseComponent);

        return ret;
    }

    public delegate bool CheckType_VisualDelegate(IntPtr baseComponent);
    public static CheckType_VisualDelegate _CheckType_Visual;
    public static bool CheckType_Visual(IntPtr baseComponent)
    {
        bool ret = _CheckType_Visual(baseComponent);

        return ret;
    }

    public delegate bool CheckType_VisualBrushDelegate(IntPtr baseComponent);
    public static CheckType_VisualBrushDelegate _CheckType_VisualBrush;
    public static bool CheckType_VisualBrush(IntPtr baseComponent)
    {
        bool ret = _CheckType_VisualBrush(baseComponent);

        return ret;
    }

    public delegate bool CheckType_VisualCollectionDelegate(IntPtr baseComponent);
    public static CheckType_VisualCollectionDelegate _CheckType_VisualCollection;
    public static bool CheckType_VisualCollection(IntPtr baseComponent)
    {
        bool ret = _CheckType_VisualCollection(baseComponent);

        return ret;
    }

    public delegate bool CheckType_WindowDelegate(IntPtr baseComponent);
    public static CheckType_WindowDelegate _CheckType_Window;
    public static bool CheckType_Window(IntPtr baseComponent)
    {
        bool ret = _CheckType_Window(baseComponent);

        return ret;
    }

    public delegate bool CheckType_WrapPanelDelegate(IntPtr baseComponent);
    public static CheckType_WrapPanelDelegate _CheckType_WrapPanel;
    public static bool CheckType_WrapPanel(IntPtr baseComponent)
    {
        bool ret = _CheckType_WrapPanel(baseComponent);

        return ret;
    }

    public delegate bool CheckType_BaseExpressionDelegate(IntPtr baseComponent);
    public static CheckType_BaseExpressionDelegate _CheckType_BaseExpression;
    public static bool CheckType_BaseExpression(IntPtr baseComponent)
    {
        bool ret = _CheckType_BaseExpression(baseComponent);

        return ret;
    }

    public delegate bool CheckType_DependencyObjectDelegate(IntPtr baseComponent);
    public static CheckType_DependencyObjectDelegate _CheckType_DependencyObject;
    public static bool CheckType_DependencyObject(IntPtr baseComponent)
    {
        bool ret = _CheckType_DependencyObject(baseComponent);

        return ret;
    }

    public delegate bool CheckType_FreezableDelegate(IntPtr baseComponent);
    public static CheckType_FreezableDelegate _CheckType_Freezable;
    public static bool CheckType_Freezable(IntPtr baseComponent)
    {
        bool ret = _CheckType_Freezable(baseComponent);

        return ret;
    }

    public delegate bool CheckType_AnimationTimelineDelegate(IntPtr baseComponent);
    public static CheckType_AnimationTimelineDelegate _CheckType_AnimationTimeline;
    public static bool CheckType_AnimationTimeline(IntPtr baseComponent)
    {
        bool ret = _CheckType_AnimationTimeline(baseComponent);

        return ret;
    }

    public delegate bool CheckType_BackEaseDelegate(IntPtr baseComponent);
    public static CheckType_BackEaseDelegate _CheckType_BackEase;
    public static bool CheckType_BackEase(IntPtr baseComponent)
    {
        bool ret = _CheckType_BackEase(baseComponent);

        return ret;
    }

    public delegate bool CheckType_BaseAnimationDelegate(IntPtr baseComponent);
    public static CheckType_BaseAnimationDelegate _CheckType_BaseAnimation;
    public static bool CheckType_BaseAnimation(IntPtr baseComponent)
    {
        bool ret = _CheckType_BaseAnimation(baseComponent);

        return ret;
    }

    public delegate bool CheckType_BeginStoryboardDelegate(IntPtr baseComponent);
    public static CheckType_BeginStoryboardDelegate _CheckType_BeginStoryboard;
    public static bool CheckType_BeginStoryboard(IntPtr baseComponent)
    {
        bool ret = _CheckType_BeginStoryboard(baseComponent);

        return ret;
    }

    public delegate bool CheckType_BounceEaseDelegate(IntPtr baseComponent);
    public static CheckType_BounceEaseDelegate _CheckType_BounceEase;
    public static bool CheckType_BounceEase(IntPtr baseComponent)
    {
        bool ret = _CheckType_BounceEase(baseComponent);

        return ret;
    }

    public delegate bool CheckType_CircleEaseDelegate(IntPtr baseComponent);
    public static CheckType_CircleEaseDelegate _CheckType_CircleEase;
    public static bool CheckType_CircleEase(IntPtr baseComponent)
    {
        bool ret = _CheckType_CircleEase(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ClockControllerDelegate(IntPtr baseComponent);
    public static CheckType_ClockControllerDelegate _CheckType_ClockController;
    public static bool CheckType_ClockController(IntPtr baseComponent)
    {
        bool ret = _CheckType_ClockController(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ControllableStoryboardActionDelegate(IntPtr baseComponent);
    public static CheckType_ControllableStoryboardActionDelegate _CheckType_ControllableStoryboardAction;
    public static bool CheckType_ControllableStoryboardAction(IntPtr baseComponent)
    {
        bool ret = _CheckType_ControllableStoryboardAction(baseComponent);

        return ret;
    }

    public delegate bool CheckType_CubicEaseDelegate(IntPtr baseComponent);
    public static CheckType_CubicEaseDelegate _CheckType_CubicEase;
    public static bool CheckType_CubicEase(IntPtr baseComponent)
    {
        bool ret = _CheckType_CubicEase(baseComponent);

        return ret;
    }

    public delegate bool CheckType_EasingFunctionBaseDelegate(IntPtr baseComponent);
    public static CheckType_EasingFunctionBaseDelegate _CheckType_EasingFunctionBase;
    public static bool CheckType_EasingFunctionBase(IntPtr baseComponent)
    {
        bool ret = _CheckType_EasingFunctionBase(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ElasticEaseDelegate(IntPtr baseComponent);
    public static CheckType_ElasticEaseDelegate _CheckType_ElasticEase;
    public static bool CheckType_ElasticEase(IntPtr baseComponent)
    {
        bool ret = _CheckType_ElasticEase(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ExponentialEaseDelegate(IntPtr baseComponent);
    public static CheckType_ExponentialEaseDelegate _CheckType_ExponentialEase;
    public static bool CheckType_ExponentialEase(IntPtr baseComponent)
    {
        bool ret = _CheckType_ExponentialEase(baseComponent);

        return ret;
    }

    public delegate bool CheckType_KeySplineDelegate(IntPtr baseComponent);
    public static CheckType_KeySplineDelegate _CheckType_KeySpline;
    public static bool CheckType_KeySpline(IntPtr baseComponent)
    {
        bool ret = _CheckType_KeySpline(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ParallelTimelineDelegate(IntPtr baseComponent);
    public static CheckType_ParallelTimelineDelegate _CheckType_ParallelTimeline;
    public static bool CheckType_ParallelTimeline(IntPtr baseComponent)
    {
        bool ret = _CheckType_ParallelTimeline(baseComponent);

        return ret;
    }

    public delegate bool CheckType_PauseStoryboardDelegate(IntPtr baseComponent);
    public static CheckType_PauseStoryboardDelegate _CheckType_PauseStoryboard;
    public static bool CheckType_PauseStoryboard(IntPtr baseComponent)
    {
        bool ret = _CheckType_PauseStoryboard(baseComponent);

        return ret;
    }

    public delegate bool CheckType_PowerEaseDelegate(IntPtr baseComponent);
    public static CheckType_PowerEaseDelegate _CheckType_PowerEase;
    public static bool CheckType_PowerEase(IntPtr baseComponent)
    {
        bool ret = _CheckType_PowerEase(baseComponent);

        return ret;
    }

    public delegate bool CheckType_QuadraticEaseDelegate(IntPtr baseComponent);
    public static CheckType_QuadraticEaseDelegate _CheckType_QuadraticEase;
    public static bool CheckType_QuadraticEase(IntPtr baseComponent)
    {
        bool ret = _CheckType_QuadraticEase(baseComponent);

        return ret;
    }

    public delegate bool CheckType_QuarticEaseDelegate(IntPtr baseComponent);
    public static CheckType_QuarticEaseDelegate _CheckType_QuarticEase;
    public static bool CheckType_QuarticEase(IntPtr baseComponent)
    {
        bool ret = _CheckType_QuarticEase(baseComponent);

        return ret;
    }

    public delegate bool CheckType_QuinticEaseDelegate(IntPtr baseComponent);
    public static CheckType_QuinticEaseDelegate _CheckType_QuinticEase;
    public static bool CheckType_QuinticEase(IntPtr baseComponent)
    {
        bool ret = _CheckType_QuinticEase(baseComponent);

        return ret;
    }

    public delegate bool CheckType_ResumeStoryboardDelegate(IntPtr baseComponent);
    public static CheckType_ResumeStoryboardDelegate _CheckType_ResumeStoryboard;
    public static bool CheckType_ResumeStoryboard(IntPtr baseComponent)
    {
        bool ret = _CheckType_ResumeStoryboard(baseComponent);

        return ret;
    }

    public delegate bool CheckType_SineEaseDelegate(IntPtr baseComponent);
    public static CheckType_SineEaseDelegate _CheckType_SineEase;
    public static bool CheckType_SineEase(IntPtr baseComponent)
    {
        bool ret = _CheckType_SineEase(baseComponent);

        return ret;
    }

    public delegate bool CheckType_StopStoryboardDelegate(IntPtr baseComponent);
    public static CheckType_StopStoryboardDelegate _CheckType_StopStoryboard;
    public static bool CheckType_StopStoryboard(IntPtr baseComponent)
    {
        bool ret = _CheckType_StopStoryboard(baseComponent);

        return ret;
    }

    public delegate bool CheckType_StoryboardDelegate(IntPtr baseComponent);
    public static CheckType_StoryboardDelegate _CheckType_Storyboard;
    public static bool CheckType_Storyboard(IntPtr baseComponent)
    {
        bool ret = _CheckType_Storyboard(baseComponent);

        return ret;
    }

    public delegate bool CheckType_TimelineDelegate(IntPtr baseComponent);
    public static CheckType_TimelineDelegate _CheckType_Timeline;
    public static bool CheckType_Timeline(IntPtr baseComponent)
    {
        bool ret = _CheckType_Timeline(baseComponent);

        return ret;
    }

    public delegate bool CheckType_TimelineGroupDelegate(IntPtr baseComponent);
    public static CheckType_TimelineGroupDelegate _CheckType_TimelineGroup;
    public static bool CheckType_TimelineGroup(IntPtr baseComponent)
    {
        bool ret = _CheckType_TimelineGroup(baseComponent);

        return ret;
    }

    public delegate bool CheckType_VisualStateDelegate(IntPtr baseComponent);
    public static CheckType_VisualStateDelegate _CheckType_VisualState;
    public static bool CheckType_VisualState(IntPtr baseComponent)
    {
        bool ret = _CheckType_VisualState(baseComponent);

        return ret;
    }

    public delegate bool CheckType_VisualStateGroupDelegate(IntPtr baseComponent);
    public static CheckType_VisualStateGroupDelegate _CheckType_VisualStateGroup;
    public static bool CheckType_VisualStateGroup(IntPtr baseComponent)
    {
        bool ret = _CheckType_VisualStateGroup(baseComponent);

        return ret;
    }

    public delegate bool CheckType_VisualStateManagerDelegate(IntPtr baseComponent);
    public static CheckType_VisualStateManagerDelegate _CheckType_VisualStateManager;
    public static bool CheckType_VisualStateManager(IntPtr baseComponent)
    {
        bool ret = _CheckType_VisualStateManager(baseComponent);

        return ret;
    }

    public delegate bool CheckType_VisualTransitionDelegate(IntPtr baseComponent);
    public static CheckType_VisualTransitionDelegate _CheckType_VisualTransition;
    public static bool CheckType_VisualTransition(IntPtr baseComponent)
    {
        bool ret = _CheckType_VisualTransition(baseComponent);

        return ret;
    }

    public delegate void BindEvent_Timeline_CompletedDelegate(Timeline.DelegateRaiseCompleted callback, IntPtr instance);
    public static BindEvent_Timeline_CompletedDelegate _BindEvent_Timeline_Completed;
    public static void BindEvent_Timeline_Completed(Timeline.DelegateRaiseCompleted callback, IntPtr instance)
    {
        _BindEvent_Timeline_Completed(callback, instance);
    }

    public delegate void UnbindEvent_Timeline_CompletedDelegate(Timeline.DelegateRaiseCompleted callback, IntPtr instance);
    public static UnbindEvent_Timeline_CompletedDelegate _UnbindEvent_Timeline_Completed;
    public static void UnbindEvent_Timeline_Completed(Timeline.DelegateRaiseCompleted callback, IntPtr instance)
    {
        _UnbindEvent_Timeline_Completed(callback, instance);
    }

    public delegate void BindEvent_RangeBase_ValueChangedDelegate(RangeBase.DelegateRaiseValueChanged callback, IntPtr instance);
    public static BindEvent_RangeBase_ValueChangedDelegate _BindEvent_RangeBase_ValueChanged;
    public static void BindEvent_RangeBase_ValueChanged(RangeBase.DelegateRaiseValueChanged callback, IntPtr instance)
    {
        _BindEvent_RangeBase_ValueChanged(callback, instance);
    }

    public delegate void UnbindEvent_RangeBase_ValueChangedDelegate(RangeBase.DelegateRaiseValueChanged callback, IntPtr instance);
    public static UnbindEvent_RangeBase_ValueChangedDelegate _UnbindEvent_RangeBase_ValueChanged;
    public static void UnbindEvent_RangeBase_ValueChanged(RangeBase.DelegateRaiseValueChanged callback, IntPtr instance)
    {
        _UnbindEvent_RangeBase_ValueChanged(callback, instance);
    }

    public delegate void BindEvent_TreeView_SelectedItemChangedDelegate(TreeView.DelegateRaiseSelectedItemChanged callback, IntPtr instance);
    public static BindEvent_TreeView_SelectedItemChangedDelegate _BindEvent_TreeView_SelectedItemChanged;
    public static void BindEvent_TreeView_SelectedItemChanged(TreeView.DelegateRaiseSelectedItemChanged callback, IntPtr instance)
    {
        _BindEvent_TreeView_SelectedItemChanged(callback, instance);
    }

    public delegate void UnbindEvent_TreeView_SelectedItemChangedDelegate(TreeView.DelegateRaiseSelectedItemChanged callback, IntPtr instance);
    public static UnbindEvent_TreeView_SelectedItemChangedDelegate _UnbindEvent_TreeView_SelectedItemChanged;
    public static void UnbindEvent_TreeView_SelectedItemChanged(TreeView.DelegateRaiseSelectedItemChanged callback, IntPtr instance)
    {
        _UnbindEvent_TreeView_SelectedItemChanged(callback, instance);
    }

    public delegate IntPtr new_NullableBool__Delegate(bool jarg1);
    public static new_NullableBool__Delegate _new_NullableBool__;
    public static IntPtr new_NullableBool__(bool jarg1)
    {
        IntPtr ret = _new_NullableBool__(jarg1);

        return ret;
    }

    public delegate bool NullableBool_GetValue__Delegate(HandleRef jarg1);
    public static NullableBool_GetValue__Delegate _NullableBool_GetValue__;
    public static bool NullableBool_GetValue__(HandleRef jarg1)
    {
        bool ret = _NullableBool_GetValue__(jarg1);

        return ret;
    }

    public delegate void NullableBool_SetValue__Delegate(HandleRef jarg1, bool jarg2);
    public static NullableBool_SetValue__Delegate _NullableBool_SetValue__;
    public static void NullableBool_SetValue__(HandleRef jarg1, bool jarg2)
    {
        _NullableBool_SetValue__(jarg1, jarg2);
    }

    public delegate IntPtr new_NullableFloat__Delegate(float jarg1);
    public static new_NullableFloat__Delegate _new_NullableFloat__;
    public static IntPtr new_NullableFloat__(float jarg1)
    {
        IntPtr ret = _new_NullableFloat__(jarg1);

        return ret;
    }

    public delegate float NullableFloat_GetValue__Delegate(HandleRef jarg1);
    public static NullableFloat_GetValue__Delegate _NullableFloat_GetValue__;
    public static float NullableFloat_GetValue__(HandleRef jarg1)
    {
        float ret = _NullableFloat_GetValue__(jarg1);

        return ret;
    }

    public delegate void NullableFloat_SetValue__Delegate(HandleRef jarg1, float jarg2);
    public static NullableFloat_SetValue__Delegate _NullableFloat_SetValue__;
    public static void NullableFloat_SetValue__(HandleRef jarg1, float jarg2)
    {
        _NullableFloat_SetValue__(jarg1, jarg2);
    }

    public delegate IntPtr new_NullableInt16__Delegate(short jarg1);
    public static new_NullableInt16__Delegate _new_NullableInt16__;
    public static IntPtr new_NullableInt16__(short jarg1)
    {
        IntPtr ret = _new_NullableInt16__(jarg1);

        return ret;
    }

    public delegate short NullableInt16_GetValue__Delegate(HandleRef jarg1);
    public static NullableInt16_GetValue__Delegate _NullableInt16_GetValue__;
    public static short NullableInt16_GetValue__(HandleRef jarg1)
    {
        short ret = _NullableInt16_GetValue__(jarg1);

        return ret;
    }

    public delegate void NullableInt16_SetValue__Delegate(HandleRef jarg1, short jarg2);
    public static NullableInt16_SetValue__Delegate _NullableInt16_SetValue__;
    public static void NullableInt16_SetValue__(HandleRef jarg1, short jarg2)
    {
        _NullableInt16_SetValue__(jarg1, jarg2);
    }

    public delegate IntPtr new_NullableInt32__Delegate(int jarg1);
    public static new_NullableInt32__Delegate _new_NullableInt32__;
    public static IntPtr new_NullableInt32__(int jarg1)
    {
        IntPtr ret = _new_NullableInt32__(jarg1);

        return ret;
    }

    public delegate int NullableInt32_GetValue__Delegate(HandleRef jarg1);
    public static NullableInt32_GetValue__Delegate _NullableInt32_GetValue__;
    public static int NullableInt32_GetValue__(HandleRef jarg1)
    {
        int ret = _NullableInt32_GetValue__(jarg1);

        return ret;
    }

    public delegate void NullableInt32_SetValue__Delegate(HandleRef jarg1, int jarg2);
    public static NullableInt32_SetValue__Delegate _NullableInt32_SetValue__;
    public static void NullableInt32_SetValue__(HandleRef jarg1, int jarg2)
    {
        _NullableInt32_SetValue__(jarg1, jarg2);
    }

    public delegate IntPtr FrameworkElement_FindStringResourceDelegate(HandleRef jarg1, IntPtr jarg2);
    public static FrameworkElement_FindStringResourceDelegate _FrameworkElement_FindStringResource;
    public static IntPtr FrameworkElement_FindStringResource(HandleRef jarg1, IntPtr jarg2)
    {
        IntPtr ret = _FrameworkElement_FindStringResource(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr FrameworkElement_FindTypeResourceDelegate(HandleRef jarg1, IntPtr jarg2);
    public static FrameworkElement_FindTypeResourceDelegate _FrameworkElement_FindTypeResource;
    public static IntPtr FrameworkElement_FindTypeResource(HandleRef jarg1, IntPtr jarg2)
    {
        IntPtr ret = _FrameworkElement_FindTypeResource(jarg1, jarg2);

        return ret;
    }

    public delegate float Point_GetXDelegate(HandleRef jarg1);
    public static Point_GetXDelegate _Point_GetX;
    public static float Point_GetX(HandleRef jarg1)
    {
        float ret = _Point_GetX(jarg1);

        return ret;
    }

    public delegate void Point_SetXDelegate(HandleRef jarg1, float jarg2);
    public static Point_SetXDelegate _Point_SetX;
    public static void Point_SetX(HandleRef jarg1, float jarg2)
    {
        _Point_SetX(jarg1, jarg2);
    }

    public delegate float Point_GetYDelegate(HandleRef jarg1);
    public static Point_GetYDelegate _Point_GetY;
    public static float Point_GetY(HandleRef jarg1)
    {
        float ret = _Point_GetY(jarg1);

        return ret;
    }

    public delegate void Point_SetYDelegate(HandleRef jarg1, float jarg2);
    public static Point_SetYDelegate _Point_SetY;
    public static void Point_SetY(HandleRef jarg1, float jarg2)
    {
        _Point_SetY(jarg1, jarg2);
    }

    public delegate int Pointi_GetXDelegate(HandleRef jarg1);
    public static Pointi_GetXDelegate _Pointi_GetX;
    public static int Pointi_GetX(HandleRef jarg1)
    {
        int ret = _Pointi_GetX(jarg1);

        return ret;
    }

    public delegate void Pointi_SetXDelegate(HandleRef jarg1, int jarg2);
    public static Pointi_SetXDelegate _Pointi_SetX;
    public static void Pointi_SetX(HandleRef jarg1, int jarg2)
    {
        _Pointi_SetX(jarg1, jarg2);
    }

    public delegate int Pointi_GetYDelegate(HandleRef jarg1);
    public static Pointi_GetYDelegate _Pointi_GetY;
    public static int Pointi_GetY(HandleRef jarg1)
    {
        int ret = _Pointi_GetY(jarg1);

        return ret;
    }

    public delegate void Pointi_SetYDelegate(HandleRef jarg1, int jarg2);
    public static Pointi_SetYDelegate _Pointi_SetY;
    public static void Pointi_SetY(HandleRef jarg1, int jarg2)
    {
        _Pointi_SetY(jarg1, jarg2);
    }

    public delegate void BindEvent_BaseButton_ClickDelegate(BaseButton.DelegateRaiseClick callback, IntPtr instance);
    public static BindEvent_BaseButton_ClickDelegate _BindEvent_BaseButton_Click;
    public static void BindEvent_BaseButton_Click(BaseButton.DelegateRaiseClick callback, IntPtr instance)
    {
        _BindEvent_BaseButton_Click(callback, instance);
    }

    public delegate void UnbindEvent_BaseButton_ClickDelegate(BaseButton.DelegateRaiseClick callback, IntPtr instance);
    public static UnbindEvent_BaseButton_ClickDelegate _UnbindEvent_BaseButton_Click;
    public static void UnbindEvent_BaseButton_Click(BaseButton.DelegateRaiseClick callback, IntPtr instance)
    {
        _UnbindEvent_BaseButton_Click(callback, instance);
    }

    public delegate void BindEvent_BaseTextBox_SelectionChangedDelegate(BaseTextBox.DelegateRaiseSelectionChanged callback, IntPtr instance);
    public static BindEvent_BaseTextBox_SelectionChangedDelegate _BindEvent_BaseTextBox_SelectionChanged;
    public static void BindEvent_BaseTextBox_SelectionChanged(BaseTextBox.DelegateRaiseSelectionChanged callback, IntPtr instance)
    {
        _BindEvent_BaseTextBox_SelectionChanged(callback, instance);
    }

    public delegate void UnbindEvent_BaseTextBox_SelectionChangedDelegate(BaseTextBox.DelegateRaiseSelectionChanged callback, IntPtr instance);
    public static UnbindEvent_BaseTextBox_SelectionChangedDelegate _UnbindEvent_BaseTextBox_SelectionChanged;
    public static void UnbindEvent_BaseTextBox_SelectionChanged(BaseTextBox.DelegateRaiseSelectionChanged callback, IntPtr instance)
    {
        _UnbindEvent_BaseTextBox_SelectionChanged(callback, instance);
    }

    public delegate void BindEvent_BaseTextBox_TextChangedDelegate(BaseTextBox.DelegateRaiseTextChanged callback, IntPtr instance);
    public static BindEvent_BaseTextBox_TextChangedDelegate _BindEvent_BaseTextBox_TextChanged;
    public static void BindEvent_BaseTextBox_TextChanged(BaseTextBox.DelegateRaiseTextChanged callback, IntPtr instance)
    {
        _BindEvent_BaseTextBox_TextChanged(callback, instance);
    }

    public delegate void UnbindEvent_BaseTextBox_TextChangedDelegate(BaseTextBox.DelegateRaiseTextChanged callback, IntPtr instance);
    public static UnbindEvent_BaseTextBox_TextChangedDelegate _UnbindEvent_BaseTextBox_TextChanged;
    public static void UnbindEvent_BaseTextBox_TextChanged(BaseTextBox.DelegateRaiseTextChanged callback, IntPtr instance)
    {
        _UnbindEvent_BaseTextBox_TextChanged(callback, instance);
    }

    public delegate void BindEvent_ContextMenu_ClosedDelegate(ContextMenu.DelegateRaiseClosed callback, IntPtr instance);
    public static BindEvent_ContextMenu_ClosedDelegate _BindEvent_ContextMenu_Closed;
    public static void BindEvent_ContextMenu_Closed(ContextMenu.DelegateRaiseClosed callback, IntPtr instance)
    {
        _BindEvent_ContextMenu_Closed(callback, instance);
    }

    public delegate void UnbindEvent_ContextMenu_ClosedDelegate(ContextMenu.DelegateRaiseClosed callback, IntPtr instance);
    public static UnbindEvent_ContextMenu_ClosedDelegate _UnbindEvent_ContextMenu_Closed;
    public static void UnbindEvent_ContextMenu_Closed(ContextMenu.DelegateRaiseClosed callback, IntPtr instance)
    {
        _UnbindEvent_ContextMenu_Closed(callback, instance);
    }

    public delegate void BindEvent_ContextMenu_OpenedDelegate(ContextMenu.DelegateRaiseOpened callback, IntPtr instance);
    public static BindEvent_ContextMenu_OpenedDelegate _BindEvent_ContextMenu_Opened;
    public static void BindEvent_ContextMenu_Opened(ContextMenu.DelegateRaiseOpened callback, IntPtr instance)
    {
        _BindEvent_ContextMenu_Opened(callback, instance);
    }

    public delegate void UnbindEvent_ContextMenu_OpenedDelegate(ContextMenu.DelegateRaiseOpened callback, IntPtr instance);
    public static UnbindEvent_ContextMenu_OpenedDelegate _UnbindEvent_ContextMenu_Opened;
    public static void UnbindEvent_ContextMenu_Opened(ContextMenu.DelegateRaiseOpened callback, IntPtr instance)
    {
        _UnbindEvent_ContextMenu_Opened(callback, instance);
    }

    public delegate void BindEvent_Control_MouseDoubleClickDelegate(Control.DelegateRaiseMouseDoubleClick callback, IntPtr instance);
    public static BindEvent_Control_MouseDoubleClickDelegate _BindEvent_Control_MouseDoubleClick;
    public static void BindEvent_Control_MouseDoubleClick(Control.DelegateRaiseMouseDoubleClick callback, IntPtr instance)
    {
        _BindEvent_Control_MouseDoubleClick(callback, instance);
    }

    public delegate void UnbindEvent_Control_MouseDoubleClickDelegate(Control.DelegateRaiseMouseDoubleClick callback, IntPtr instance);
    public static UnbindEvent_Control_MouseDoubleClickDelegate _UnbindEvent_Control_MouseDoubleClick;
    public static void UnbindEvent_Control_MouseDoubleClick(Control.DelegateRaiseMouseDoubleClick callback, IntPtr instance)
    {
        _UnbindEvent_Control_MouseDoubleClick(callback, instance);
    }

    public delegate void BindEvent_Control_PreviewMouseDoubleClickDelegate(Control.DelegateRaisePreviewMouseDoubleClick callback, IntPtr instance);
    public static BindEvent_Control_PreviewMouseDoubleClickDelegate _BindEvent_Control_PreviewMouseDoubleClick;
    public static void BindEvent_Control_PreviewMouseDoubleClick(Control.DelegateRaisePreviewMouseDoubleClick callback, IntPtr instance)
    {
        _BindEvent_Control_PreviewMouseDoubleClick(callback, instance);
    }

    public delegate void UnbindEvent_Control_PreviewMouseDoubleClickDelegate(Control.DelegateRaisePreviewMouseDoubleClick callback, IntPtr instance);
    public static UnbindEvent_Control_PreviewMouseDoubleClickDelegate _UnbindEvent_Control_PreviewMouseDoubleClick;
    public static void UnbindEvent_Control_PreviewMouseDoubleClick(Control.DelegateRaisePreviewMouseDoubleClick callback, IntPtr instance)
    {
        _UnbindEvent_Control_PreviewMouseDoubleClick(callback, instance);
    }

    public delegate void BindEvent_Expander_CollapsedDelegate(Expander.DelegateRaiseCollapsed callback, IntPtr instance);
    public static BindEvent_Expander_CollapsedDelegate _BindEvent_Expander_Collapsed;
    public static void BindEvent_Expander_Collapsed(Expander.DelegateRaiseCollapsed callback, IntPtr instance)
    {
        _BindEvent_Expander_Collapsed(callback, instance);
    }

    public delegate void UnbindEvent_Expander_CollapsedDelegate(Expander.DelegateRaiseCollapsed callback, IntPtr instance);
    public static UnbindEvent_Expander_CollapsedDelegate _UnbindEvent_Expander_Collapsed;
    public static void UnbindEvent_Expander_Collapsed(Expander.DelegateRaiseCollapsed callback, IntPtr instance)
    {
        _UnbindEvent_Expander_Collapsed(callback, instance);
    }

    public delegate void BindEvent_Expander_ExpandedDelegate(Expander.DelegateRaiseExpanded callback, IntPtr instance);
    public static BindEvent_Expander_ExpandedDelegate _BindEvent_Expander_Expanded;
    public static void BindEvent_Expander_Expanded(Expander.DelegateRaiseExpanded callback, IntPtr instance)
    {
        _BindEvent_Expander_Expanded(callback, instance);
    }

    public delegate void UnbindEvent_Expander_ExpandedDelegate(Expander.DelegateRaiseExpanded callback, IntPtr instance);
    public static UnbindEvent_Expander_ExpandedDelegate _UnbindEvent_Expander_Expanded;
    public static void UnbindEvent_Expander_Expanded(Expander.DelegateRaiseExpanded callback, IntPtr instance)
    {
        _UnbindEvent_Expander_Expanded(callback, instance);
    }

    public delegate void BindEvent_FrameworkElement_ContextMenuClosingDelegate(FrameworkElement.DelegateRaiseContextMenuClosing callback, IntPtr instance);
    public static BindEvent_FrameworkElement_ContextMenuClosingDelegate _BindEvent_FrameworkElement_ContextMenuClosing;
    public static void BindEvent_FrameworkElement_ContextMenuClosing(FrameworkElement.DelegateRaiseContextMenuClosing callback, IntPtr instance)
    {
        _BindEvent_FrameworkElement_ContextMenuClosing(callback, instance);
    }

    public delegate void UnbindEvent_FrameworkElement_ContextMenuClosingDelegate(FrameworkElement.DelegateRaiseContextMenuClosing callback, IntPtr instance);
    public static UnbindEvent_FrameworkElement_ContextMenuClosingDelegate _UnbindEvent_FrameworkElement_ContextMenuClosing;
    public static void UnbindEvent_FrameworkElement_ContextMenuClosing(FrameworkElement.DelegateRaiseContextMenuClosing callback, IntPtr instance)
    {
        _UnbindEvent_FrameworkElement_ContextMenuClosing(callback, instance);
    }

    public delegate void BindEvent_FrameworkElement_ContextMenuOpeningDelegate(FrameworkElement.DelegateRaiseContextMenuOpening callback, IntPtr instance);
    public static BindEvent_FrameworkElement_ContextMenuOpeningDelegate _BindEvent_FrameworkElement_ContextMenuOpening;
    public static void BindEvent_FrameworkElement_ContextMenuOpening(FrameworkElement.DelegateRaiseContextMenuOpening callback, IntPtr instance)
    {
        _BindEvent_FrameworkElement_ContextMenuOpening(callback, instance);
    }

    public delegate void UnbindEvent_FrameworkElement_ContextMenuOpeningDelegate(FrameworkElement.DelegateRaiseContextMenuOpening callback, IntPtr instance);
    public static UnbindEvent_FrameworkElement_ContextMenuOpeningDelegate _UnbindEvent_FrameworkElement_ContextMenuOpening;
    public static void UnbindEvent_FrameworkElement_ContextMenuOpening(FrameworkElement.DelegateRaiseContextMenuOpening callback, IntPtr instance)
    {
        _UnbindEvent_FrameworkElement_ContextMenuOpening(callback, instance);
    }

    public delegate void BindEvent_FrameworkElement_DataContextChangedDelegate(FrameworkElement.DelegateRaiseDataContextChanged callback, IntPtr instance);
    public static BindEvent_FrameworkElement_DataContextChangedDelegate _BindEvent_FrameworkElement_DataContextChanged;
    public static void BindEvent_FrameworkElement_DataContextChanged(FrameworkElement.DelegateRaiseDataContextChanged callback, IntPtr instance)
    {
        _BindEvent_FrameworkElement_DataContextChanged(callback, instance);
    }

    public delegate void UnbindEvent_FrameworkElement_DataContextChangedDelegate(FrameworkElement.DelegateRaiseDataContextChanged callback, IntPtr instance);
    public static UnbindEvent_FrameworkElement_DataContextChangedDelegate _UnbindEvent_FrameworkElement_DataContextChanged;
    public static void UnbindEvent_FrameworkElement_DataContextChanged(FrameworkElement.DelegateRaiseDataContextChanged callback, IntPtr instance)
    {
        _UnbindEvent_FrameworkElement_DataContextChanged(callback, instance);
    }

    public delegate void BindEvent_FrameworkElement_LoadedDelegate(FrameworkElement.DelegateRaiseLoaded callback, IntPtr instance);
    public static BindEvent_FrameworkElement_LoadedDelegate _BindEvent_FrameworkElement_Loaded;
    public static void BindEvent_FrameworkElement_Loaded(FrameworkElement.DelegateRaiseLoaded callback, IntPtr instance)
    {
        _BindEvent_FrameworkElement_Loaded(callback, instance);
    }

    public delegate void UnbindEvent_FrameworkElement_LoadedDelegate(FrameworkElement.DelegateRaiseLoaded callback, IntPtr instance);
    public static UnbindEvent_FrameworkElement_LoadedDelegate _UnbindEvent_FrameworkElement_Loaded;
    public static void UnbindEvent_FrameworkElement_Loaded(FrameworkElement.DelegateRaiseLoaded callback, IntPtr instance)
    {
        _UnbindEvent_FrameworkElement_Loaded(callback, instance);
    }

    public delegate void BindEvent_FrameworkElement_SizeChangedDelegate(FrameworkElement.DelegateRaiseSizeChanged callback, IntPtr instance);
    public static BindEvent_FrameworkElement_SizeChangedDelegate _BindEvent_FrameworkElement_SizeChanged;
    public static void BindEvent_FrameworkElement_SizeChanged(FrameworkElement.DelegateRaiseSizeChanged callback, IntPtr instance)
    {
        _BindEvent_FrameworkElement_SizeChanged(callback, instance);
    }

    public delegate void UnbindEvent_FrameworkElement_SizeChangedDelegate(FrameworkElement.DelegateRaiseSizeChanged callback, IntPtr instance);
    public static UnbindEvent_FrameworkElement_SizeChangedDelegate _UnbindEvent_FrameworkElement_SizeChanged;
    public static void UnbindEvent_FrameworkElement_SizeChanged(FrameworkElement.DelegateRaiseSizeChanged callback, IntPtr instance)
    {
        _UnbindEvent_FrameworkElement_SizeChanged(callback, instance);
    }

    public delegate void BindEvent_FrameworkElement_ToolTipClosingDelegate(FrameworkElement.DelegateRaiseToolTipClosing callback, IntPtr instance);
    public static BindEvent_FrameworkElement_ToolTipClosingDelegate _BindEvent_FrameworkElement_ToolTipClosing;
    public static void BindEvent_FrameworkElement_ToolTipClosing(FrameworkElement.DelegateRaiseToolTipClosing callback, IntPtr instance)
    {
        _BindEvent_FrameworkElement_ToolTipClosing(callback, instance);
    }

    public delegate void UnbindEvent_FrameworkElement_ToolTipClosingDelegate(FrameworkElement.DelegateRaiseToolTipClosing callback, IntPtr instance);
    public static UnbindEvent_FrameworkElement_ToolTipClosingDelegate _UnbindEvent_FrameworkElement_ToolTipClosing;
    public static void UnbindEvent_FrameworkElement_ToolTipClosing(FrameworkElement.DelegateRaiseToolTipClosing callback, IntPtr instance)
    {
        _UnbindEvent_FrameworkElement_ToolTipClosing(callback, instance);
    }

    public delegate void BindEvent_FrameworkElement_ToolTipOpeningDelegate(FrameworkElement.DelegateRaiseToolTipOpening callback, IntPtr instance);
    public static BindEvent_FrameworkElement_ToolTipOpeningDelegate _BindEvent_FrameworkElement_ToolTipOpening;
    public static void BindEvent_FrameworkElement_ToolTipOpening(FrameworkElement.DelegateRaiseToolTipOpening callback, IntPtr instance)
    {
        _BindEvent_FrameworkElement_ToolTipOpening(callback, instance);
    }

    public delegate void UnbindEvent_FrameworkElement_ToolTipOpeningDelegate(FrameworkElement.DelegateRaiseToolTipOpening callback, IntPtr instance);
    public static UnbindEvent_FrameworkElement_ToolTipOpeningDelegate _UnbindEvent_FrameworkElement_ToolTipOpening;
    public static void UnbindEvent_FrameworkElement_ToolTipOpening(FrameworkElement.DelegateRaiseToolTipOpening callback, IntPtr instance)
    {
        _UnbindEvent_FrameworkElement_ToolTipOpening(callback, instance);
    }

    public delegate void BindEvent_FrameworkElement_UnloadedDelegate(FrameworkElement.DelegateRaiseUnloaded callback, IntPtr instance);
    public static BindEvent_FrameworkElement_UnloadedDelegate _BindEvent_FrameworkElement_Unloaded;
    public static void BindEvent_FrameworkElement_Unloaded(FrameworkElement.DelegateRaiseUnloaded callback, IntPtr instance)
    {
        _BindEvent_FrameworkElement_Unloaded(callback, instance);
    }

    public delegate void UnbindEvent_FrameworkElement_UnloadedDelegate(FrameworkElement.DelegateRaiseUnloaded callback, IntPtr instance);
    public static UnbindEvent_FrameworkElement_UnloadedDelegate _UnbindEvent_FrameworkElement_Unloaded;
    public static void UnbindEvent_FrameworkElement_Unloaded(FrameworkElement.DelegateRaiseUnloaded callback, IntPtr instance)
    {
        _UnbindEvent_FrameworkElement_Unloaded(callback, instance);
    }

    public delegate void BindEvent_ListBoxItem_SelectedDelegate(ListBoxItem.DelegateRaiseSelected callback, IntPtr instance);
    public static BindEvent_ListBoxItem_SelectedDelegate _BindEvent_ListBoxItem_Selected;
    public static void BindEvent_ListBoxItem_Selected(ListBoxItem.DelegateRaiseSelected callback, IntPtr instance)
    {
        _BindEvent_ListBoxItem_Selected(callback, instance);
    }

    public delegate void UnbindEvent_ListBoxItem_SelectedDelegate(ListBoxItem.DelegateRaiseSelected callback, IntPtr instance);
    public static UnbindEvent_ListBoxItem_SelectedDelegate _UnbindEvent_ListBoxItem_Selected;
    public static void UnbindEvent_ListBoxItem_Selected(ListBoxItem.DelegateRaiseSelected callback, IntPtr instance)
    {
        _UnbindEvent_ListBoxItem_Selected(callback, instance);
    }

    public delegate void BindEvent_ListBoxItem_UnselectedDelegate(ListBoxItem.DelegateRaiseUnselected callback, IntPtr instance);
    public static BindEvent_ListBoxItem_UnselectedDelegate _BindEvent_ListBoxItem_Unselected;
    public static void BindEvent_ListBoxItem_Unselected(ListBoxItem.DelegateRaiseUnselected callback, IntPtr instance)
    {
        _BindEvent_ListBoxItem_Unselected(callback, instance);
    }

    public delegate void UnbindEvent_ListBoxItem_UnselectedDelegate(ListBoxItem.DelegateRaiseUnselected callback, IntPtr instance);
    public static UnbindEvent_ListBoxItem_UnselectedDelegate _UnbindEvent_ListBoxItem_Unselected;
    public static void UnbindEvent_ListBoxItem_Unselected(ListBoxItem.DelegateRaiseUnselected callback, IntPtr instance)
    {
        _UnbindEvent_ListBoxItem_Unselected(callback, instance);
    }

    public delegate void BindEvent_MenuItem_CheckedDelegate(MenuItem.DelegateRaiseChecked callback, IntPtr instance);
    public static BindEvent_MenuItem_CheckedDelegate _BindEvent_MenuItem_Checked;
    public static void BindEvent_MenuItem_Checked(MenuItem.DelegateRaiseChecked callback, IntPtr instance)
    {
        _BindEvent_MenuItem_Checked(callback, instance);
    }

    public delegate void UnbindEvent_MenuItem_CheckedDelegate(MenuItem.DelegateRaiseChecked callback, IntPtr instance);
    public static UnbindEvent_MenuItem_CheckedDelegate _UnbindEvent_MenuItem_Checked;
    public static void UnbindEvent_MenuItem_Checked(MenuItem.DelegateRaiseChecked callback, IntPtr instance)
    {
        _UnbindEvent_MenuItem_Checked(callback, instance);
    }

    public delegate void BindEvent_MenuItem_ClickDelegate(MenuItem.DelegateRaiseClick callback, IntPtr instance);
    public static BindEvent_MenuItem_ClickDelegate _BindEvent_MenuItem_Click;
    public static void BindEvent_MenuItem_Click(MenuItem.DelegateRaiseClick callback, IntPtr instance)
    {
        _BindEvent_MenuItem_Click(callback, instance);
    }

    public delegate void UnbindEvent_MenuItem_ClickDelegate(MenuItem.DelegateRaiseClick callback, IntPtr instance);
    public static UnbindEvent_MenuItem_ClickDelegate _UnbindEvent_MenuItem_Click;
    public static void UnbindEvent_MenuItem_Click(MenuItem.DelegateRaiseClick callback, IntPtr instance)
    {
        _UnbindEvent_MenuItem_Click(callback, instance);
    }

    public delegate void BindEvent_MenuItem_SubmenuClosedDelegate(MenuItem.DelegateRaiseSubmenuClosed callback, IntPtr instance);
    public static BindEvent_MenuItem_SubmenuClosedDelegate _BindEvent_MenuItem_SubmenuClosed;
    public static void BindEvent_MenuItem_SubmenuClosed(MenuItem.DelegateRaiseSubmenuClosed callback, IntPtr instance)
    {
        _BindEvent_MenuItem_SubmenuClosed(callback, instance);
    }

    public delegate void UnbindEvent_MenuItem_SubmenuClosedDelegate(MenuItem.DelegateRaiseSubmenuClosed callback, IntPtr instance);
    public static UnbindEvent_MenuItem_SubmenuClosedDelegate _UnbindEvent_MenuItem_SubmenuClosed;
    public static void UnbindEvent_MenuItem_SubmenuClosed(MenuItem.DelegateRaiseSubmenuClosed callback, IntPtr instance)
    {
        _UnbindEvent_MenuItem_SubmenuClosed(callback, instance);
    }

    public delegate void BindEvent_MenuItem_SubmenuOpenedDelegate(MenuItem.DelegateRaiseSubmenuOpened callback, IntPtr instance);
    public static BindEvent_MenuItem_SubmenuOpenedDelegate _BindEvent_MenuItem_SubmenuOpened;
    public static void BindEvent_MenuItem_SubmenuOpened(MenuItem.DelegateRaiseSubmenuOpened callback, IntPtr instance)
    {
        _BindEvent_MenuItem_SubmenuOpened(callback, instance);
    }

    public delegate void UnbindEvent_MenuItem_SubmenuOpenedDelegate(MenuItem.DelegateRaiseSubmenuOpened callback, IntPtr instance);
    public static UnbindEvent_MenuItem_SubmenuOpenedDelegate _UnbindEvent_MenuItem_SubmenuOpened;
    public static void UnbindEvent_MenuItem_SubmenuOpened(MenuItem.DelegateRaiseSubmenuOpened callback, IntPtr instance)
    {
        _UnbindEvent_MenuItem_SubmenuOpened(callback, instance);
    }

    public delegate void BindEvent_MenuItem_UncheckedDelegate(MenuItem.DelegateRaiseUnchecked callback, IntPtr instance);
    public static BindEvent_MenuItem_UncheckedDelegate _BindEvent_MenuItem_Unchecked;
    public static void BindEvent_MenuItem_Unchecked(MenuItem.DelegateRaiseUnchecked callback, IntPtr instance)
    {
        _BindEvent_MenuItem_Unchecked(callback, instance);
    }

    public delegate void UnbindEvent_MenuItem_UncheckedDelegate(MenuItem.DelegateRaiseUnchecked callback, IntPtr instance);
    public static UnbindEvent_MenuItem_UncheckedDelegate _UnbindEvent_MenuItem_Unchecked;
    public static void UnbindEvent_MenuItem_Unchecked(MenuItem.DelegateRaiseUnchecked callback, IntPtr instance)
    {
        _UnbindEvent_MenuItem_Unchecked(callback, instance);
    }

    public delegate void BindEvent_ScrollBar_ScrollDelegate(ScrollBar.DelegateRaiseScroll callback, IntPtr instance);
    public static BindEvent_ScrollBar_ScrollDelegate _BindEvent_ScrollBar_Scroll;
    public static void BindEvent_ScrollBar_Scroll(ScrollBar.DelegateRaiseScroll callback, IntPtr instance)
    {
        _BindEvent_ScrollBar_Scroll(callback, instance);
    }

    public delegate void UnbindEvent_ScrollBar_ScrollDelegate(ScrollBar.DelegateRaiseScroll callback, IntPtr instance);
    public static UnbindEvent_ScrollBar_ScrollDelegate _UnbindEvent_ScrollBar_Scroll;
    public static void UnbindEvent_ScrollBar_Scroll(ScrollBar.DelegateRaiseScroll callback, IntPtr instance)
    {
        _UnbindEvent_ScrollBar_Scroll(callback, instance);
    }

    public delegate void BindEvent_ScrollViewer_ScrollChangedDelegate(ScrollViewer.DelegateRaiseScrollChanged callback, IntPtr instance);
    public static BindEvent_ScrollViewer_ScrollChangedDelegate _BindEvent_ScrollViewer_ScrollChanged;
    public static void BindEvent_ScrollViewer_ScrollChanged(ScrollViewer.DelegateRaiseScrollChanged callback, IntPtr instance)
    {
        _BindEvent_ScrollViewer_ScrollChanged(callback, instance);
    }

    public delegate void UnbindEvent_ScrollViewer_ScrollChangedDelegate(ScrollViewer.DelegateRaiseScrollChanged callback, IntPtr instance);
    public static UnbindEvent_ScrollViewer_ScrollChangedDelegate _UnbindEvent_ScrollViewer_ScrollChanged;
    public static void UnbindEvent_ScrollViewer_ScrollChanged(ScrollViewer.DelegateRaiseScrollChanged callback, IntPtr instance)
    {
        _UnbindEvent_ScrollViewer_ScrollChanged(callback, instance);
    }

    public delegate void BindEvent_Selector_SelectionChangedDelegate(Selector.DelegateRaiseSelectionChanged callback, IntPtr instance);
    public static BindEvent_Selector_SelectionChangedDelegate _BindEvent_Selector_SelectionChanged;
    public static void BindEvent_Selector_SelectionChanged(Selector.DelegateRaiseSelectionChanged callback, IntPtr instance)
    {
        _BindEvent_Selector_SelectionChanged(callback, instance);
    }

    public delegate void UnbindEvent_Selector_SelectionChangedDelegate(Selector.DelegateRaiseSelectionChanged callback, IntPtr instance);
    public static UnbindEvent_Selector_SelectionChangedDelegate _UnbindEvent_Selector_SelectionChanged;
    public static void UnbindEvent_Selector_SelectionChanged(Selector.DelegateRaiseSelectionChanged callback, IntPtr instance)
    {
        _UnbindEvent_Selector_SelectionChanged(callback, instance);
    }

    public delegate void BindEvent_Thumb_DragCompletedDelegate(Thumb.DelegateRaiseDragCompleted callback, IntPtr instance);
    public static BindEvent_Thumb_DragCompletedDelegate _BindEvent_Thumb_DragCompleted;
    public static void BindEvent_Thumb_DragCompleted(Thumb.DelegateRaiseDragCompleted callback, IntPtr instance)
    {
        _BindEvent_Thumb_DragCompleted(callback, instance);
    }

    public delegate void UnbindEvent_Thumb_DragCompletedDelegate(Thumb.DelegateRaiseDragCompleted callback, IntPtr instance);
    public static UnbindEvent_Thumb_DragCompletedDelegate _UnbindEvent_Thumb_DragCompleted;
    public static void UnbindEvent_Thumb_DragCompleted(Thumb.DelegateRaiseDragCompleted callback, IntPtr instance)
    {
        _UnbindEvent_Thumb_DragCompleted(callback, instance);
    }

    public delegate void BindEvent_Thumb_DragDeltaDelegate(Thumb.DelegateRaiseDragDelta callback, IntPtr instance);
    public static BindEvent_Thumb_DragDeltaDelegate _BindEvent_Thumb_DragDelta;
    public static void BindEvent_Thumb_DragDelta(Thumb.DelegateRaiseDragDelta callback, IntPtr instance)
    {
        _BindEvent_Thumb_DragDelta(callback, instance);
    }

    public delegate void UnbindEvent_Thumb_DragDeltaDelegate(Thumb.DelegateRaiseDragDelta callback, IntPtr instance);
    public static UnbindEvent_Thumb_DragDeltaDelegate _UnbindEvent_Thumb_DragDelta;
    public static void UnbindEvent_Thumb_DragDelta(Thumb.DelegateRaiseDragDelta callback, IntPtr instance)
    {
        _UnbindEvent_Thumb_DragDelta(callback, instance);
    }

    public delegate void BindEvent_Thumb_DragStartedDelegate(Thumb.DelegateRaiseDragStarted callback, IntPtr instance);
    public static BindEvent_Thumb_DragStartedDelegate _BindEvent_Thumb_DragStarted;
    public static void BindEvent_Thumb_DragStarted(Thumb.DelegateRaiseDragStarted callback, IntPtr instance)
    {
        _BindEvent_Thumb_DragStarted(callback, instance);
    }

    public delegate void UnbindEvent_Thumb_DragStartedDelegate(Thumb.DelegateRaiseDragStarted callback, IntPtr instance);
    public static UnbindEvent_Thumb_DragStartedDelegate _UnbindEvent_Thumb_DragStarted;
    public static void UnbindEvent_Thumb_DragStarted(Thumb.DelegateRaiseDragStarted callback, IntPtr instance)
    {
        _UnbindEvent_Thumb_DragStarted(callback, instance);
    }

    public delegate void BindEvent_ToggleButton_CheckedDelegate(ToggleButton.DelegateRaiseChecked callback, IntPtr instance);
    public static BindEvent_ToggleButton_CheckedDelegate _BindEvent_ToggleButton_Checked;
    public static void BindEvent_ToggleButton_Checked(ToggleButton.DelegateRaiseChecked callback, IntPtr instance)
    {
        _BindEvent_ToggleButton_Checked(callback, instance);
    }

    public delegate void UnbindEvent_ToggleButton_CheckedDelegate(ToggleButton.DelegateRaiseChecked callback, IntPtr instance);
    public static UnbindEvent_ToggleButton_CheckedDelegate _UnbindEvent_ToggleButton_Checked;
    public static void UnbindEvent_ToggleButton_Checked(ToggleButton.DelegateRaiseChecked callback, IntPtr instance)
    {
        _UnbindEvent_ToggleButton_Checked(callback, instance);
    }

    public delegate void BindEvent_ToggleButton_IndeterminateDelegate(ToggleButton.DelegateRaiseIndeterminate callback, IntPtr instance);
    public static BindEvent_ToggleButton_IndeterminateDelegate _BindEvent_ToggleButton_Indeterminate;
    public static void BindEvent_ToggleButton_Indeterminate(ToggleButton.DelegateRaiseIndeterminate callback, IntPtr instance)
    {
        _BindEvent_ToggleButton_Indeterminate(callback, instance);
    }

    public delegate void UnbindEvent_ToggleButton_IndeterminateDelegate(ToggleButton.DelegateRaiseIndeterminate callback, IntPtr instance);
    public static UnbindEvent_ToggleButton_IndeterminateDelegate _UnbindEvent_ToggleButton_Indeterminate;
    public static void UnbindEvent_ToggleButton_Indeterminate(ToggleButton.DelegateRaiseIndeterminate callback, IntPtr instance)
    {
        _UnbindEvent_ToggleButton_Indeterminate(callback, instance);
    }

    public delegate void BindEvent_ToggleButton_UncheckedDelegate(ToggleButton.DelegateRaiseUnchecked callback, IntPtr instance);
    public static BindEvent_ToggleButton_UncheckedDelegate _BindEvent_ToggleButton_Unchecked;
    public static void BindEvent_ToggleButton_Unchecked(ToggleButton.DelegateRaiseUnchecked callback, IntPtr instance)
    {
        _BindEvent_ToggleButton_Unchecked(callback, instance);
    }

    public delegate void UnbindEvent_ToggleButton_UncheckedDelegate(ToggleButton.DelegateRaiseUnchecked callback, IntPtr instance);
    public static UnbindEvent_ToggleButton_UncheckedDelegate _UnbindEvent_ToggleButton_Unchecked;
    public static void UnbindEvent_ToggleButton_Unchecked(ToggleButton.DelegateRaiseUnchecked callback, IntPtr instance)
    {
        _UnbindEvent_ToggleButton_Unchecked(callback, instance);
    }

    public delegate void BindEvent_ToolTip_ClosedDelegate(ToolTip.DelegateRaiseClosed callback, IntPtr instance);
    public static BindEvent_ToolTip_ClosedDelegate _BindEvent_ToolTip_Closed;
    public static void BindEvent_ToolTip_Closed(ToolTip.DelegateRaiseClosed callback, IntPtr instance)
    {
        _BindEvent_ToolTip_Closed(callback, instance);
    }

    public delegate void UnbindEvent_ToolTip_ClosedDelegate(ToolTip.DelegateRaiseClosed callback, IntPtr instance);
    public static UnbindEvent_ToolTip_ClosedDelegate _UnbindEvent_ToolTip_Closed;
    public static void UnbindEvent_ToolTip_Closed(ToolTip.DelegateRaiseClosed callback, IntPtr instance)
    {
        _UnbindEvent_ToolTip_Closed(callback, instance);
    }

    public delegate void BindEvent_ToolTip_OpenedDelegate(ToolTip.DelegateRaiseOpened callback, IntPtr instance);
    public static BindEvent_ToolTip_OpenedDelegate _BindEvent_ToolTip_Opened;
    public static void BindEvent_ToolTip_Opened(ToolTip.DelegateRaiseOpened callback, IntPtr instance)
    {
        _BindEvent_ToolTip_Opened(callback, instance);
    }

    public delegate void UnbindEvent_ToolTip_OpenedDelegate(ToolTip.DelegateRaiseOpened callback, IntPtr instance);
    public static UnbindEvent_ToolTip_OpenedDelegate _UnbindEvent_ToolTip_Opened;
    public static void UnbindEvent_ToolTip_Opened(ToolTip.DelegateRaiseOpened callback, IntPtr instance)
    {
        _UnbindEvent_ToolTip_Opened(callback, instance);
    }

    public delegate void BindEvent_TreeViewItem_CollapsedDelegate(TreeViewItem.DelegateRaiseCollapsed callback, IntPtr instance);
    public static BindEvent_TreeViewItem_CollapsedDelegate _BindEvent_TreeViewItem_Collapsed;
    public static void BindEvent_TreeViewItem_Collapsed(TreeViewItem.DelegateRaiseCollapsed callback, IntPtr instance)
    {
        _BindEvent_TreeViewItem_Collapsed(callback, instance);
    }

    public delegate void UnbindEvent_TreeViewItem_CollapsedDelegate(TreeViewItem.DelegateRaiseCollapsed callback, IntPtr instance);
    public static UnbindEvent_TreeViewItem_CollapsedDelegate _UnbindEvent_TreeViewItem_Collapsed;
    public static void UnbindEvent_TreeViewItem_Collapsed(TreeViewItem.DelegateRaiseCollapsed callback, IntPtr instance)
    {
        _UnbindEvent_TreeViewItem_Collapsed(callback, instance);
    }

    public delegate void BindEvent_TreeViewItem_ExpandedDelegate(TreeViewItem.DelegateRaiseExpanded callback, IntPtr instance);
    public static BindEvent_TreeViewItem_ExpandedDelegate _BindEvent_TreeViewItem_Expanded;
    public static void BindEvent_TreeViewItem_Expanded(TreeViewItem.DelegateRaiseExpanded callback, IntPtr instance)
    {
        _BindEvent_TreeViewItem_Expanded(callback, instance);
    }

    public delegate void UnbindEvent_TreeViewItem_ExpandedDelegate(TreeViewItem.DelegateRaiseExpanded callback, IntPtr instance);
    public static UnbindEvent_TreeViewItem_ExpandedDelegate _UnbindEvent_TreeViewItem_Expanded;
    public static void UnbindEvent_TreeViewItem_Expanded(TreeViewItem.DelegateRaiseExpanded callback, IntPtr instance)
    {
        _UnbindEvent_TreeViewItem_Expanded(callback, instance);
    }

    public delegate void BindEvent_TreeViewItem_SelectedDelegate(TreeViewItem.DelegateRaiseSelected callback, IntPtr instance);
    public static BindEvent_TreeViewItem_SelectedDelegate _BindEvent_TreeViewItem_Selected;
    public static void BindEvent_TreeViewItem_Selected(TreeViewItem.DelegateRaiseSelected callback, IntPtr instance)
    {
        _BindEvent_TreeViewItem_Selected(callback, instance);
    }

    public delegate void UnbindEvent_TreeViewItem_SelectedDelegate(TreeViewItem.DelegateRaiseSelected callback, IntPtr instance);
    public static UnbindEvent_TreeViewItem_SelectedDelegate _UnbindEvent_TreeViewItem_Selected;
    public static void UnbindEvent_TreeViewItem_Selected(TreeViewItem.DelegateRaiseSelected callback, IntPtr instance)
    {
        _UnbindEvent_TreeViewItem_Selected(callback, instance);
    }

    public delegate void BindEvent_TreeViewItem_UnselectedDelegate(TreeViewItem.DelegateRaiseUnselected callback, IntPtr instance);
    public static BindEvent_TreeViewItem_UnselectedDelegate _BindEvent_TreeViewItem_Unselected;
    public static void BindEvent_TreeViewItem_Unselected(TreeViewItem.DelegateRaiseUnselected callback, IntPtr instance)
    {
        _BindEvent_TreeViewItem_Unselected(callback, instance);
    }

    public delegate void UnbindEvent_TreeViewItem_UnselectedDelegate(TreeViewItem.DelegateRaiseUnselected callback, IntPtr instance);
    public static UnbindEvent_TreeViewItem_UnselectedDelegate _UnbindEvent_TreeViewItem_Unselected;
    public static void UnbindEvent_TreeViewItem_Unselected(TreeViewItem.DelegateRaiseUnselected callback, IntPtr instance)
    {
        _UnbindEvent_TreeViewItem_Unselected(callback, instance);
    }

    public delegate void BindEvent_UIElement_DragEnterDelegate(UIElement.DelegateRaiseDragEnter callback, IntPtr instance);
    public static BindEvent_UIElement_DragEnterDelegate _BindEvent_UIElement_DragEnter;
    public static void BindEvent_UIElement_DragEnter(UIElement.DelegateRaiseDragEnter callback, IntPtr instance)
    {
        _BindEvent_UIElement_DragEnter(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_DragEnterDelegate(UIElement.DelegateRaiseDragEnter callback, IntPtr instance);
    public static UnbindEvent_UIElement_DragEnterDelegate _UnbindEvent_UIElement_DragEnter;
    public static void UnbindEvent_UIElement_DragEnter(UIElement.DelegateRaiseDragEnter callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_DragEnter(callback, instance);
    }

    public delegate void BindEvent_UIElement_DragLeaveDelegate(UIElement.DelegateRaiseDragLeave callback, IntPtr instance);
    public static BindEvent_UIElement_DragLeaveDelegate _BindEvent_UIElement_DragLeave;
    public static void BindEvent_UIElement_DragLeave(UIElement.DelegateRaiseDragLeave callback, IntPtr instance)
    {
        _BindEvent_UIElement_DragLeave(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_DragLeaveDelegate(UIElement.DelegateRaiseDragLeave callback, IntPtr instance);
    public static UnbindEvent_UIElement_DragLeaveDelegate _UnbindEvent_UIElement_DragLeave;
    public static void UnbindEvent_UIElement_DragLeave(UIElement.DelegateRaiseDragLeave callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_DragLeave(callback, instance);
    }

    public delegate void BindEvent_UIElement_DragOverDelegate(UIElement.DelegateRaiseDragOver callback, IntPtr instance);
    public static BindEvent_UIElement_DragOverDelegate _BindEvent_UIElement_DragOver;
    public static void BindEvent_UIElement_DragOver(UIElement.DelegateRaiseDragOver callback, IntPtr instance)
    {
        _BindEvent_UIElement_DragOver(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_DragOverDelegate(UIElement.DelegateRaiseDragOver callback, IntPtr instance);
    public static UnbindEvent_UIElement_DragOverDelegate _UnbindEvent_UIElement_DragOver;
    public static void UnbindEvent_UIElement_DragOver(UIElement.DelegateRaiseDragOver callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_DragOver(callback, instance);
    }

    public delegate void BindEvent_UIElement_DropDelegate(UIElement.DelegateRaiseDrop callback, IntPtr instance);
    public static BindEvent_UIElement_DropDelegate _BindEvent_UIElement_Drop;
    public static void BindEvent_UIElement_Drop(UIElement.DelegateRaiseDrop callback, IntPtr instance)
    {
        _BindEvent_UIElement_Drop(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_DropDelegate(UIElement.DelegateRaiseDrop callback, IntPtr instance);
    public static UnbindEvent_UIElement_DropDelegate _UnbindEvent_UIElement_Drop;
    public static void UnbindEvent_UIElement_Drop(UIElement.DelegateRaiseDrop callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_Drop(callback, instance);
    }

    public delegate void BindEvent_UIElement_GiveFeedbackDelegate(UIElement.DelegateRaiseGiveFeedback callback, IntPtr instance);
    public static BindEvent_UIElement_GiveFeedbackDelegate _BindEvent_UIElement_GiveFeedback;
    public static void BindEvent_UIElement_GiveFeedback(UIElement.DelegateRaiseGiveFeedback callback, IntPtr instance)
    {
        _BindEvent_UIElement_GiveFeedback(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_GiveFeedbackDelegate(UIElement.DelegateRaiseGiveFeedback callback, IntPtr instance);
    public static UnbindEvent_UIElement_GiveFeedbackDelegate _UnbindEvent_UIElement_GiveFeedback;
    public static void UnbindEvent_UIElement_GiveFeedback(UIElement.DelegateRaiseGiveFeedback callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_GiveFeedback(callback, instance);
    }

    public delegate void BindEvent_UIElement_GotFocusDelegate(UIElement.DelegateRaiseGotFocus callback, IntPtr instance);
    public static BindEvent_UIElement_GotFocusDelegate _BindEvent_UIElement_GotFocus;
    public static void BindEvent_UIElement_GotFocus(UIElement.DelegateRaiseGotFocus callback, IntPtr instance)
    {
        _BindEvent_UIElement_GotFocus(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_GotFocusDelegate(UIElement.DelegateRaiseGotFocus callback, IntPtr instance);
    public static UnbindEvent_UIElement_GotFocusDelegate _UnbindEvent_UIElement_GotFocus;
    public static void UnbindEvent_UIElement_GotFocus(UIElement.DelegateRaiseGotFocus callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_GotFocus(callback, instance);
    }

    public delegate void BindEvent_UIElement_GotKeyboardFocusDelegate(UIElement.DelegateRaiseGotKeyboardFocus callback, IntPtr instance);
    public static BindEvent_UIElement_GotKeyboardFocusDelegate _BindEvent_UIElement_GotKeyboardFocus;
    public static void BindEvent_UIElement_GotKeyboardFocus(UIElement.DelegateRaiseGotKeyboardFocus callback, IntPtr instance)
    {
        _BindEvent_UIElement_GotKeyboardFocus(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_GotKeyboardFocusDelegate(UIElement.DelegateRaiseGotKeyboardFocus callback, IntPtr instance);
    public static UnbindEvent_UIElement_GotKeyboardFocusDelegate _UnbindEvent_UIElement_GotKeyboardFocus;
    public static void UnbindEvent_UIElement_GotKeyboardFocus(UIElement.DelegateRaiseGotKeyboardFocus callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_GotKeyboardFocus(callback, instance);
    }

    public delegate void BindEvent_UIElement_GotMouseCaptureDelegate(UIElement.DelegateRaiseGotMouseCapture callback, IntPtr instance);
    public static BindEvent_UIElement_GotMouseCaptureDelegate _BindEvent_UIElement_GotMouseCapture;
    public static void BindEvent_UIElement_GotMouseCapture(UIElement.DelegateRaiseGotMouseCapture callback, IntPtr instance)
    {
        _BindEvent_UIElement_GotMouseCapture(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_GotMouseCaptureDelegate(UIElement.DelegateRaiseGotMouseCapture callback, IntPtr instance);
    public static UnbindEvent_UIElement_GotMouseCaptureDelegate _UnbindEvent_UIElement_GotMouseCapture;
    public static void UnbindEvent_UIElement_GotMouseCapture(UIElement.DelegateRaiseGotMouseCapture callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_GotMouseCapture(callback, instance);
    }

    public delegate void BindEvent_UIElement_KeyDownDelegate(UIElement.DelegateRaiseKeyDown callback, IntPtr instance);
    public static BindEvent_UIElement_KeyDownDelegate _BindEvent_UIElement_KeyDown;
    public static void BindEvent_UIElement_KeyDown(UIElement.DelegateRaiseKeyDown callback, IntPtr instance)
    {
        _BindEvent_UIElement_KeyDown(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_KeyDownDelegate(UIElement.DelegateRaiseKeyDown callback, IntPtr instance);
    public static UnbindEvent_UIElement_KeyDownDelegate _UnbindEvent_UIElement_KeyDown;
    public static void UnbindEvent_UIElement_KeyDown(UIElement.DelegateRaiseKeyDown callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_KeyDown(callback, instance);
    }

    public delegate void BindEvent_UIElement_KeyUpDelegate(UIElement.DelegateRaiseKeyUp callback, IntPtr instance);
    public static BindEvent_UIElement_KeyUpDelegate _BindEvent_UIElement_KeyUp;
    public static void BindEvent_UIElement_KeyUp(UIElement.DelegateRaiseKeyUp callback, IntPtr instance)
    {
        _BindEvent_UIElement_KeyUp(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_KeyUpDelegate(UIElement.DelegateRaiseKeyUp callback, IntPtr instance);
    public static UnbindEvent_UIElement_KeyUpDelegate _UnbindEvent_UIElement_KeyUp;
    public static void UnbindEvent_UIElement_KeyUp(UIElement.DelegateRaiseKeyUp callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_KeyUp(callback, instance);
    }

    public delegate void BindEvent_UIElement_LostFocusDelegate(UIElement.DelegateRaiseLostFocus callback, IntPtr instance);
    public static BindEvent_UIElement_LostFocusDelegate _BindEvent_UIElement_LostFocus;
    public static void BindEvent_UIElement_LostFocus(UIElement.DelegateRaiseLostFocus callback, IntPtr instance)
    {
        _BindEvent_UIElement_LostFocus(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_LostFocusDelegate(UIElement.DelegateRaiseLostFocus callback, IntPtr instance);
    public static UnbindEvent_UIElement_LostFocusDelegate _UnbindEvent_UIElement_LostFocus;
    public static void UnbindEvent_UIElement_LostFocus(UIElement.DelegateRaiseLostFocus callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_LostFocus(callback, instance);
    }

    public delegate void BindEvent_UIElement_LostKeyboardFocusDelegate(UIElement.DelegateRaiseLostKeyboardFocus callback, IntPtr instance);
    public static BindEvent_UIElement_LostKeyboardFocusDelegate _BindEvent_UIElement_LostKeyboardFocus;
    public static void BindEvent_UIElement_LostKeyboardFocus(UIElement.DelegateRaiseLostKeyboardFocus callback, IntPtr instance)
    {
        _BindEvent_UIElement_LostKeyboardFocus(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_LostKeyboardFocusDelegate(UIElement.DelegateRaiseLostKeyboardFocus callback, IntPtr instance);
    public static UnbindEvent_UIElement_LostKeyboardFocusDelegate _UnbindEvent_UIElement_LostKeyboardFocus;
    public static void UnbindEvent_UIElement_LostKeyboardFocus(UIElement.DelegateRaiseLostKeyboardFocus callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_LostKeyboardFocus(callback, instance);
    }

    public delegate void BindEvent_UIElement_LostMouseCaptureDelegate(UIElement.DelegateRaiseLostMouseCapture callback, IntPtr instance);
    public static BindEvent_UIElement_LostMouseCaptureDelegate _BindEvent_UIElement_LostMouseCapture;
    public static void BindEvent_UIElement_LostMouseCapture(UIElement.DelegateRaiseLostMouseCapture callback, IntPtr instance)
    {
        _BindEvent_UIElement_LostMouseCapture(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_LostMouseCaptureDelegate(UIElement.DelegateRaiseLostMouseCapture callback, IntPtr instance);
    public static UnbindEvent_UIElement_LostMouseCaptureDelegate _UnbindEvent_UIElement_LostMouseCapture;
    public static void UnbindEvent_UIElement_LostMouseCapture(UIElement.DelegateRaiseLostMouseCapture callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_LostMouseCapture(callback, instance);
    }

    public delegate void BindEvent_UIElement_MouseDownDelegate(UIElement.DelegateRaiseMouseDown callback, IntPtr instance);
    public static BindEvent_UIElement_MouseDownDelegate _BindEvent_UIElement_MouseDown;
    public static void BindEvent_UIElement_MouseDown(UIElement.DelegateRaiseMouseDown callback, IntPtr instance)
    {
        _BindEvent_UIElement_MouseDown(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_MouseDownDelegate(UIElement.DelegateRaiseMouseDown callback, IntPtr instance);
    public static UnbindEvent_UIElement_MouseDownDelegate _UnbindEvent_UIElement_MouseDown;
    public static void UnbindEvent_UIElement_MouseDown(UIElement.DelegateRaiseMouseDown callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_MouseDown(callback, instance);
    }

    public delegate void BindEvent_UIElement_MouseEnterDelegate(UIElement.DelegateRaiseMouseEnter callback, IntPtr instance);
    public static BindEvent_UIElement_MouseEnterDelegate _BindEvent_UIElement_MouseEnter;
    public static void BindEvent_UIElement_MouseEnter(UIElement.DelegateRaiseMouseEnter callback, IntPtr instance)
    {
        _BindEvent_UIElement_MouseEnter(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_MouseEnterDelegate(UIElement.DelegateRaiseMouseEnter callback, IntPtr instance);
    public static UnbindEvent_UIElement_MouseEnterDelegate _UnbindEvent_UIElement_MouseEnter;
    public static void UnbindEvent_UIElement_MouseEnter(UIElement.DelegateRaiseMouseEnter callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_MouseEnter(callback, instance);
    }

    public delegate void BindEvent_UIElement_MouseLeaveDelegate(UIElement.DelegateRaiseMouseLeave callback, IntPtr instance);
    public static BindEvent_UIElement_MouseLeaveDelegate _BindEvent_UIElement_MouseLeave;
    public static void BindEvent_UIElement_MouseLeave(UIElement.DelegateRaiseMouseLeave callback, IntPtr instance)
    {
        _BindEvent_UIElement_MouseLeave(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_MouseLeaveDelegate(UIElement.DelegateRaiseMouseLeave callback, IntPtr instance);
    public static UnbindEvent_UIElement_MouseLeaveDelegate _UnbindEvent_UIElement_MouseLeave;
    public static void UnbindEvent_UIElement_MouseLeave(UIElement.DelegateRaiseMouseLeave callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_MouseLeave(callback, instance);
    }

    public delegate void BindEvent_UIElement_MouseLeftButtonDownDelegate(UIElement.DelegateRaiseMouseLeftButtonDown callback, IntPtr instance);
    public static BindEvent_UIElement_MouseLeftButtonDownDelegate _BindEvent_UIElement_MouseLeftButtonDown;
    public static void BindEvent_UIElement_MouseLeftButtonDown(UIElement.DelegateRaiseMouseLeftButtonDown callback, IntPtr instance)
    {
        _BindEvent_UIElement_MouseLeftButtonDown(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_MouseLeftButtonDownDelegate(UIElement.DelegateRaiseMouseLeftButtonDown callback, IntPtr instance);
    public static UnbindEvent_UIElement_MouseLeftButtonDownDelegate _UnbindEvent_UIElement_MouseLeftButtonDown;
    public static void UnbindEvent_UIElement_MouseLeftButtonDown(UIElement.DelegateRaiseMouseLeftButtonDown callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_MouseLeftButtonDown(callback, instance);
    }

    public delegate void BindEvent_UIElement_MouseLeftButtonUpDelegate(UIElement.DelegateRaiseMouseLeftButtonUp callback, IntPtr instance);
    public static BindEvent_UIElement_MouseLeftButtonUpDelegate _BindEvent_UIElement_MouseLeftButtonUp;
    public static void BindEvent_UIElement_MouseLeftButtonUp(UIElement.DelegateRaiseMouseLeftButtonUp callback, IntPtr instance)
    {
        _BindEvent_UIElement_MouseLeftButtonUp(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_MouseLeftButtonUpDelegate(UIElement.DelegateRaiseMouseLeftButtonUp callback, IntPtr instance);
    public static UnbindEvent_UIElement_MouseLeftButtonUpDelegate _UnbindEvent_UIElement_MouseLeftButtonUp;
    public static void UnbindEvent_UIElement_MouseLeftButtonUp(UIElement.DelegateRaiseMouseLeftButtonUp callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_MouseLeftButtonUp(callback, instance);
    }

    public delegate void BindEvent_UIElement_MouseMoveDelegate(UIElement.DelegateRaiseMouseMove callback, IntPtr instance);
    public static BindEvent_UIElement_MouseMoveDelegate _BindEvent_UIElement_MouseMove;
    public static void BindEvent_UIElement_MouseMove(UIElement.DelegateRaiseMouseMove callback, IntPtr instance)
    {
        _BindEvent_UIElement_MouseMove(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_MouseMoveDelegate(UIElement.DelegateRaiseMouseMove callback, IntPtr instance);
    public static UnbindEvent_UIElement_MouseMoveDelegate _UnbindEvent_UIElement_MouseMove;
    public static void UnbindEvent_UIElement_MouseMove(UIElement.DelegateRaiseMouseMove callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_MouseMove(callback, instance);
    }

    public delegate void BindEvent_UIElement_MouseRightButtonDownDelegate(UIElement.DelegateRaiseMouseRightButtonDown callback, IntPtr instance);
    public static BindEvent_UIElement_MouseRightButtonDownDelegate _BindEvent_UIElement_MouseRightButtonDown;
    public static void BindEvent_UIElement_MouseRightButtonDown(UIElement.DelegateRaiseMouseRightButtonDown callback, IntPtr instance)
    {
        _BindEvent_UIElement_MouseRightButtonDown(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_MouseRightButtonDownDelegate(UIElement.DelegateRaiseMouseRightButtonDown callback, IntPtr instance);
    public static UnbindEvent_UIElement_MouseRightButtonDownDelegate _UnbindEvent_UIElement_MouseRightButtonDown;
    public static void UnbindEvent_UIElement_MouseRightButtonDown(UIElement.DelegateRaiseMouseRightButtonDown callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_MouseRightButtonDown(callback, instance);
    }

    public delegate void BindEvent_UIElement_MouseRightButtonUpDelegate(UIElement.DelegateRaiseMouseRightButtonUp callback, IntPtr instance);
    public static BindEvent_UIElement_MouseRightButtonUpDelegate _BindEvent_UIElement_MouseRightButtonUp;
    public static void BindEvent_UIElement_MouseRightButtonUp(UIElement.DelegateRaiseMouseRightButtonUp callback, IntPtr instance)
    {
        _BindEvent_UIElement_MouseRightButtonUp(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_MouseRightButtonUpDelegate(UIElement.DelegateRaiseMouseRightButtonUp callback, IntPtr instance);
    public static UnbindEvent_UIElement_MouseRightButtonUpDelegate _UnbindEvent_UIElement_MouseRightButtonUp;
    public static void UnbindEvent_UIElement_MouseRightButtonUp(UIElement.DelegateRaiseMouseRightButtonUp callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_MouseRightButtonUp(callback, instance);
    }

    public delegate void BindEvent_UIElement_MouseUpDelegate(UIElement.DelegateRaiseMouseUp callback, IntPtr instance);
    public static BindEvent_UIElement_MouseUpDelegate _BindEvent_UIElement_MouseUp;
    public static void BindEvent_UIElement_MouseUp(UIElement.DelegateRaiseMouseUp callback, IntPtr instance)
    {
        _BindEvent_UIElement_MouseUp(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_MouseUpDelegate(UIElement.DelegateRaiseMouseUp callback, IntPtr instance);
    public static UnbindEvent_UIElement_MouseUpDelegate _UnbindEvent_UIElement_MouseUp;
    public static void UnbindEvent_UIElement_MouseUp(UIElement.DelegateRaiseMouseUp callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_MouseUp(callback, instance);
    }

    public delegate void BindEvent_UIElement_MouseWheelDelegate(UIElement.DelegateRaiseMouseWheel callback, IntPtr instance);
    public static BindEvent_UIElement_MouseWheelDelegate _BindEvent_UIElement_MouseWheel;
    public static void BindEvent_UIElement_MouseWheel(UIElement.DelegateRaiseMouseWheel callback, IntPtr instance)
    {
        _BindEvent_UIElement_MouseWheel(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_MouseWheelDelegate(UIElement.DelegateRaiseMouseWheel callback, IntPtr instance);
    public static UnbindEvent_UIElement_MouseWheelDelegate _UnbindEvent_UIElement_MouseWheel;
    public static void UnbindEvent_UIElement_MouseWheel(UIElement.DelegateRaiseMouseWheel callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_MouseWheel(callback, instance);
    }

    public delegate void BindEvent_UIElement_PreviewDragEnterDelegate(UIElement.DelegateRaisePreviewDragEnter callback, IntPtr instance);
    public static BindEvent_UIElement_PreviewDragEnterDelegate _BindEvent_UIElement_PreviewDragEnter;
    public static void BindEvent_UIElement_PreviewDragEnter(UIElement.DelegateRaisePreviewDragEnter callback, IntPtr instance)
    {
        _BindEvent_UIElement_PreviewDragEnter(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_PreviewDragEnterDelegate(UIElement.DelegateRaisePreviewDragEnter callback, IntPtr instance);
    public static UnbindEvent_UIElement_PreviewDragEnterDelegate _UnbindEvent_UIElement_PreviewDragEnter;
    public static void UnbindEvent_UIElement_PreviewDragEnter(UIElement.DelegateRaisePreviewDragEnter callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_PreviewDragEnter(callback, instance);
    }

    public delegate void BindEvent_UIElement_PreviewDragLeaveDelegate(UIElement.DelegateRaisePreviewDragLeave callback, IntPtr instance);
    public static BindEvent_UIElement_PreviewDragLeaveDelegate _BindEvent_UIElement_PreviewDragLeave;
    public static void BindEvent_UIElement_PreviewDragLeave(UIElement.DelegateRaisePreviewDragLeave callback, IntPtr instance)
    {
        _BindEvent_UIElement_PreviewDragLeave(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_PreviewDragLeaveDelegate(UIElement.DelegateRaisePreviewDragLeave callback, IntPtr instance);
    public static UnbindEvent_UIElement_PreviewDragLeaveDelegate _UnbindEvent_UIElement_PreviewDragLeave;
    public static void UnbindEvent_UIElement_PreviewDragLeave(UIElement.DelegateRaisePreviewDragLeave callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_PreviewDragLeave(callback, instance);
    }

    public delegate void BindEvent_UIElement_PreviewDragOverDelegate(UIElement.DelegateRaisePreviewDragOver callback, IntPtr instance);
    public static BindEvent_UIElement_PreviewDragOverDelegate _BindEvent_UIElement_PreviewDragOver;
    public static void BindEvent_UIElement_PreviewDragOver(UIElement.DelegateRaisePreviewDragOver callback, IntPtr instance)
    {
        _BindEvent_UIElement_PreviewDragOver(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_PreviewDragOverDelegate(UIElement.DelegateRaisePreviewDragOver callback, IntPtr instance);
    public static UnbindEvent_UIElement_PreviewDragOverDelegate _UnbindEvent_UIElement_PreviewDragOver;
    public static void UnbindEvent_UIElement_PreviewDragOver(UIElement.DelegateRaisePreviewDragOver callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_PreviewDragOver(callback, instance);
    }

    public delegate void BindEvent_UIElement_PreviewDropDelegate(UIElement.DelegateRaisePreviewDrop callback, IntPtr instance);
    public static BindEvent_UIElement_PreviewDropDelegate _BindEvent_UIElement_PreviewDrop;
    public static void BindEvent_UIElement_PreviewDrop(UIElement.DelegateRaisePreviewDrop callback, IntPtr instance)
    {
        _BindEvent_UIElement_PreviewDrop(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_PreviewDropDelegate(UIElement.DelegateRaisePreviewDrop callback, IntPtr instance);
    public static UnbindEvent_UIElement_PreviewDropDelegate _UnbindEvent_UIElement_PreviewDrop;
    public static void UnbindEvent_UIElement_PreviewDrop(UIElement.DelegateRaisePreviewDrop callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_PreviewDrop(callback, instance);
    }

    public delegate void BindEvent_UIElement_PreviewGiveFeedbackDelegate(UIElement.DelegateRaisePreviewGiveFeedback callback, IntPtr instance);
    public static BindEvent_UIElement_PreviewGiveFeedbackDelegate _BindEvent_UIElement_PreviewGiveFeedback;
    public static void BindEvent_UIElement_PreviewGiveFeedback(UIElement.DelegateRaisePreviewGiveFeedback callback, IntPtr instance)
    {
        _BindEvent_UIElement_PreviewGiveFeedback(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_PreviewGiveFeedbackDelegate(UIElement.DelegateRaisePreviewGiveFeedback callback, IntPtr instance);
    public static UnbindEvent_UIElement_PreviewGiveFeedbackDelegate _UnbindEvent_UIElement_PreviewGiveFeedback;
    public static void UnbindEvent_UIElement_PreviewGiveFeedback(UIElement.DelegateRaisePreviewGiveFeedback callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_PreviewGiveFeedback(callback, instance);
    }

    public delegate void BindEvent_UIElement_PreviewGotKeyboardFocusDelegate(UIElement.DelegateRaisePreviewGotKeyboardFocus callback, IntPtr instance);
    public static BindEvent_UIElement_PreviewGotKeyboardFocusDelegate _BindEvent_UIElement_PreviewGotKeyboardFocus;
    public static void BindEvent_UIElement_PreviewGotKeyboardFocus(UIElement.DelegateRaisePreviewGotKeyboardFocus callback, IntPtr instance)
    {
        _BindEvent_UIElement_PreviewGotKeyboardFocus(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_PreviewGotKeyboardFocusDelegate(UIElement.DelegateRaisePreviewGotKeyboardFocus callback, IntPtr instance);
    public static UnbindEvent_UIElement_PreviewGotKeyboardFocusDelegate _UnbindEvent_UIElement_PreviewGotKeyboardFocus;
    public static void UnbindEvent_UIElement_PreviewGotKeyboardFocus(UIElement.DelegateRaisePreviewGotKeyboardFocus callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_PreviewGotKeyboardFocus(callback, instance);
    }

    public delegate void BindEvent_UIElement_PreviewKeyDownDelegate(UIElement.DelegateRaisePreviewKeyDown callback, IntPtr instance);
    public static BindEvent_UIElement_PreviewKeyDownDelegate _BindEvent_UIElement_PreviewKeyDown;
    public static void BindEvent_UIElement_PreviewKeyDown(UIElement.DelegateRaisePreviewKeyDown callback, IntPtr instance)
    {
        _BindEvent_UIElement_PreviewKeyDown(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_PreviewKeyDownDelegate(UIElement.DelegateRaisePreviewKeyDown callback, IntPtr instance);
    public static UnbindEvent_UIElement_PreviewKeyDownDelegate _UnbindEvent_UIElement_PreviewKeyDown;
    public static void UnbindEvent_UIElement_PreviewKeyDown(UIElement.DelegateRaisePreviewKeyDown callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_PreviewKeyDown(callback, instance);
    }

    public delegate void BindEvent_UIElement_PreviewKeyUpDelegate(UIElement.DelegateRaisePreviewKeyUp callback, IntPtr instance);
    public static BindEvent_UIElement_PreviewKeyUpDelegate _BindEvent_UIElement_PreviewKeyUp;
    public static void BindEvent_UIElement_PreviewKeyUp(UIElement.DelegateRaisePreviewKeyUp callback, IntPtr instance)
    {
        _BindEvent_UIElement_PreviewKeyUp(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_PreviewKeyUpDelegate(UIElement.DelegateRaisePreviewKeyUp callback, IntPtr instance);
    public static UnbindEvent_UIElement_PreviewKeyUpDelegate _UnbindEvent_UIElement_PreviewKeyUp;
    public static void UnbindEvent_UIElement_PreviewKeyUp(UIElement.DelegateRaisePreviewKeyUp callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_PreviewKeyUp(callback, instance);
    }

    public delegate void BindEvent_UIElement_PreviewLostKeyboardFocusDelegate(UIElement.DelegateRaisePreviewLostKeyboardFocus callback, IntPtr instance);
    public static BindEvent_UIElement_PreviewLostKeyboardFocusDelegate _BindEvent_UIElement_PreviewLostKeyboardFocus;
    public static void BindEvent_UIElement_PreviewLostKeyboardFocus(UIElement.DelegateRaisePreviewLostKeyboardFocus callback, IntPtr instance)
    {
        _BindEvent_UIElement_PreviewLostKeyboardFocus(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_PreviewLostKeyboardFocusDelegate(UIElement.DelegateRaisePreviewLostKeyboardFocus callback, IntPtr instance);
    public static UnbindEvent_UIElement_PreviewLostKeyboardFocusDelegate _UnbindEvent_UIElement_PreviewLostKeyboardFocus;
    public static void UnbindEvent_UIElement_PreviewLostKeyboardFocus(UIElement.DelegateRaisePreviewLostKeyboardFocus callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_PreviewLostKeyboardFocus(callback, instance);
    }

    public delegate void BindEvent_UIElement_PreviewMouseDownDelegate(UIElement.DelegateRaisePreviewMouseDown callback, IntPtr instance);
    public static BindEvent_UIElement_PreviewMouseDownDelegate _BindEvent_UIElement_PreviewMouseDown;
    public static void BindEvent_UIElement_PreviewMouseDown(UIElement.DelegateRaisePreviewMouseDown callback, IntPtr instance)
    {
        _BindEvent_UIElement_PreviewMouseDown(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_PreviewMouseDownDelegate(UIElement.DelegateRaisePreviewMouseDown callback, IntPtr instance);
    public static UnbindEvent_UIElement_PreviewMouseDownDelegate _UnbindEvent_UIElement_PreviewMouseDown;
    public static void UnbindEvent_UIElement_PreviewMouseDown(UIElement.DelegateRaisePreviewMouseDown callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_PreviewMouseDown(callback, instance);
    }

    public delegate void BindEvent_UIElement_PreviewMouseLeftButtonDownDelegate(UIElement.DelegateRaisePreviewMouseLeftButtonDown callback, IntPtr instance);
    public static BindEvent_UIElement_PreviewMouseLeftButtonDownDelegate _BindEvent_UIElement_PreviewMouseLeftButtonDown;
    public static void BindEvent_UIElement_PreviewMouseLeftButtonDown(UIElement.DelegateRaisePreviewMouseLeftButtonDown callback, IntPtr instance)
    {
        _BindEvent_UIElement_PreviewMouseLeftButtonDown(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_PreviewMouseLeftButtonDownDelegate(UIElement.DelegateRaisePreviewMouseLeftButtonDown callback, IntPtr instance);
    public static UnbindEvent_UIElement_PreviewMouseLeftButtonDownDelegate _UnbindEvent_UIElement_PreviewMouseLeftButtonDown;
    public static void UnbindEvent_UIElement_PreviewMouseLeftButtonDown(UIElement.DelegateRaisePreviewMouseLeftButtonDown callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_PreviewMouseLeftButtonDown(callback, instance);
    }

    public delegate void BindEvent_UIElement_PreviewMouseLeftButtonUpDelegate(UIElement.DelegateRaisePreviewMouseLeftButtonUp callback, IntPtr instance);
    public static BindEvent_UIElement_PreviewMouseLeftButtonUpDelegate _BindEvent_UIElement_PreviewMouseLeftButtonUp;
    public static void BindEvent_UIElement_PreviewMouseLeftButtonUp(UIElement.DelegateRaisePreviewMouseLeftButtonUp callback, IntPtr instance)
    {
        _BindEvent_UIElement_PreviewMouseLeftButtonUp(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_PreviewMouseLeftButtonUpDelegate(UIElement.DelegateRaisePreviewMouseLeftButtonUp callback, IntPtr instance);
    public static UnbindEvent_UIElement_PreviewMouseLeftButtonUpDelegate _UnbindEvent_UIElement_PreviewMouseLeftButtonUp;
    public static void UnbindEvent_UIElement_PreviewMouseLeftButtonUp(UIElement.DelegateRaisePreviewMouseLeftButtonUp callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_PreviewMouseLeftButtonUp(callback, instance);
    }

    public delegate void BindEvent_UIElement_PreviewMouseMoveDelegate(UIElement.DelegateRaisePreviewMouseMove callback, IntPtr instance);
    public static BindEvent_UIElement_PreviewMouseMoveDelegate _BindEvent_UIElement_PreviewMouseMove;
    public static void BindEvent_UIElement_PreviewMouseMove(UIElement.DelegateRaisePreviewMouseMove callback, IntPtr instance)
    {
        _BindEvent_UIElement_PreviewMouseMove(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_PreviewMouseMoveDelegate(UIElement.DelegateRaisePreviewMouseMove callback, IntPtr instance);
    public static UnbindEvent_UIElement_PreviewMouseMoveDelegate _UnbindEvent_UIElement_PreviewMouseMove;
    public static void UnbindEvent_UIElement_PreviewMouseMove(UIElement.DelegateRaisePreviewMouseMove callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_PreviewMouseMove(callback, instance);
    }

    public delegate void BindEvent_UIElement_PreviewMouseRightButtonDownDelegate(UIElement.DelegateRaisePreviewMouseRightButtonDown callback, IntPtr instance);
    public static BindEvent_UIElement_PreviewMouseRightButtonDownDelegate _BindEvent_UIElement_PreviewMouseRightButtonDown;
    public static void BindEvent_UIElement_PreviewMouseRightButtonDown(UIElement.DelegateRaisePreviewMouseRightButtonDown callback, IntPtr instance)
    {
        _BindEvent_UIElement_PreviewMouseRightButtonDown(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_PreviewMouseRightButtonDownDelegate(UIElement.DelegateRaisePreviewMouseRightButtonDown callback, IntPtr instance);
    public static UnbindEvent_UIElement_PreviewMouseRightButtonDownDelegate _UnbindEvent_UIElement_PreviewMouseRightButtonDown;
    public static void UnbindEvent_UIElement_PreviewMouseRightButtonDown(UIElement.DelegateRaisePreviewMouseRightButtonDown callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_PreviewMouseRightButtonDown(callback, instance);
    }

    public delegate void BindEvent_UIElement_PreviewMouseRightButtonUpDelegate(UIElement.DelegateRaisePreviewMouseRightButtonUp callback, IntPtr instance);
    public static BindEvent_UIElement_PreviewMouseRightButtonUpDelegate _BindEvent_UIElement_PreviewMouseRightButtonUp;
    public static void BindEvent_UIElement_PreviewMouseRightButtonUp(UIElement.DelegateRaisePreviewMouseRightButtonUp callback, IntPtr instance)
    {
        _BindEvent_UIElement_PreviewMouseRightButtonUp(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_PreviewMouseRightButtonUpDelegate(UIElement.DelegateRaisePreviewMouseRightButtonUp callback, IntPtr instance);
    public static UnbindEvent_UIElement_PreviewMouseRightButtonUpDelegate _UnbindEvent_UIElement_PreviewMouseRightButtonUp;
    public static void UnbindEvent_UIElement_PreviewMouseRightButtonUp(UIElement.DelegateRaisePreviewMouseRightButtonUp callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_PreviewMouseRightButtonUp(callback, instance);
    }

    public delegate void BindEvent_UIElement_PreviewMouseUpDelegate(UIElement.DelegateRaisePreviewMouseUp callback, IntPtr instance);
    public static BindEvent_UIElement_PreviewMouseUpDelegate _BindEvent_UIElement_PreviewMouseUp;
    public static void BindEvent_UIElement_PreviewMouseUp(UIElement.DelegateRaisePreviewMouseUp callback, IntPtr instance)
    {
        _BindEvent_UIElement_PreviewMouseUp(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_PreviewMouseUpDelegate(UIElement.DelegateRaisePreviewMouseUp callback, IntPtr instance);
    public static UnbindEvent_UIElement_PreviewMouseUpDelegate _UnbindEvent_UIElement_PreviewMouseUp;
    public static void UnbindEvent_UIElement_PreviewMouseUp(UIElement.DelegateRaisePreviewMouseUp callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_PreviewMouseUp(callback, instance);
    }

    public delegate void BindEvent_UIElement_PreviewMouseWheelDelegate(UIElement.DelegateRaisePreviewMouseWheel callback, IntPtr instance);
    public static BindEvent_UIElement_PreviewMouseWheelDelegate _BindEvent_UIElement_PreviewMouseWheel;
    public static void BindEvent_UIElement_PreviewMouseWheel(UIElement.DelegateRaisePreviewMouseWheel callback, IntPtr instance)
    {
        _BindEvent_UIElement_PreviewMouseWheel(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_PreviewMouseWheelDelegate(UIElement.DelegateRaisePreviewMouseWheel callback, IntPtr instance);
    public static UnbindEvent_UIElement_PreviewMouseWheelDelegate _UnbindEvent_UIElement_PreviewMouseWheel;
    public static void UnbindEvent_UIElement_PreviewMouseWheel(UIElement.DelegateRaisePreviewMouseWheel callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_PreviewMouseWheel(callback, instance);
    }

    public delegate void BindEvent_UIElement_PreviewQueryContinueDragDelegate(UIElement.DelegateRaisePreviewQueryContinueDrag callback, IntPtr instance);
    public static BindEvent_UIElement_PreviewQueryContinueDragDelegate _BindEvent_UIElement_PreviewQueryContinueDrag;
    public static void BindEvent_UIElement_PreviewQueryContinueDrag(UIElement.DelegateRaisePreviewQueryContinueDrag callback, IntPtr instance)
    {
        _BindEvent_UIElement_PreviewQueryContinueDrag(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_PreviewQueryContinueDragDelegate(UIElement.DelegateRaisePreviewQueryContinueDrag callback, IntPtr instance);
    public static UnbindEvent_UIElement_PreviewQueryContinueDragDelegate _UnbindEvent_UIElement_PreviewQueryContinueDrag;
    public static void UnbindEvent_UIElement_PreviewQueryContinueDrag(UIElement.DelegateRaisePreviewQueryContinueDrag callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_PreviewQueryContinueDrag(callback, instance);
    }

    public delegate void BindEvent_UIElement_PreviewTextInputDelegate(UIElement.DelegateRaisePreviewTextInput callback, IntPtr instance);
    public static BindEvent_UIElement_PreviewTextInputDelegate _BindEvent_UIElement_PreviewTextInput;
    public static void BindEvent_UIElement_PreviewTextInput(UIElement.DelegateRaisePreviewTextInput callback, IntPtr instance)
    {
        _BindEvent_UIElement_PreviewTextInput(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_PreviewTextInputDelegate(UIElement.DelegateRaisePreviewTextInput callback, IntPtr instance);
    public static UnbindEvent_UIElement_PreviewTextInputDelegate _UnbindEvent_UIElement_PreviewTextInput;
    public static void UnbindEvent_UIElement_PreviewTextInput(UIElement.DelegateRaisePreviewTextInput callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_PreviewTextInput(callback, instance);
    }

    public delegate void BindEvent_UIElement_QueryContinueDragDelegate(UIElement.DelegateRaiseQueryContinueDrag callback, IntPtr instance);
    public static BindEvent_UIElement_QueryContinueDragDelegate _BindEvent_UIElement_QueryContinueDrag;
    public static void BindEvent_UIElement_QueryContinueDrag(UIElement.DelegateRaiseQueryContinueDrag callback, IntPtr instance)
    {
        _BindEvent_UIElement_QueryContinueDrag(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_QueryContinueDragDelegate(UIElement.DelegateRaiseQueryContinueDrag callback, IntPtr instance);
    public static UnbindEvent_UIElement_QueryContinueDragDelegate _UnbindEvent_UIElement_QueryContinueDrag;
    public static void UnbindEvent_UIElement_QueryContinueDrag(UIElement.DelegateRaiseQueryContinueDrag callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_QueryContinueDrag(callback, instance);
    }

    public delegate void BindEvent_UIElement_QueryCursorDelegate(UIElement.DelegateRaiseQueryCursor callback, IntPtr instance);
    public static BindEvent_UIElement_QueryCursorDelegate _BindEvent_UIElement_QueryCursor;
    public static void BindEvent_UIElement_QueryCursor(UIElement.DelegateRaiseQueryCursor callback, IntPtr instance)
    {
        _BindEvent_UIElement_QueryCursor(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_QueryCursorDelegate(UIElement.DelegateRaiseQueryCursor callback, IntPtr instance);
    public static UnbindEvent_UIElement_QueryCursorDelegate _UnbindEvent_UIElement_QueryCursor;
    public static void UnbindEvent_UIElement_QueryCursor(UIElement.DelegateRaiseQueryCursor callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_QueryCursor(callback, instance);
    }

    public delegate void BindEvent_UIElement_TextInputDelegate(UIElement.DelegateRaiseTextInput callback, IntPtr instance);
    public static BindEvent_UIElement_TextInputDelegate _BindEvent_UIElement_TextInput;
    public static void BindEvent_UIElement_TextInput(UIElement.DelegateRaiseTextInput callback, IntPtr instance)
    {
        _BindEvent_UIElement_TextInput(callback, instance);
    }

    public delegate void UnbindEvent_UIElement_TextInputDelegate(UIElement.DelegateRaiseTextInput callback, IntPtr instance);
    public static UnbindEvent_UIElement_TextInputDelegate _UnbindEvent_UIElement_TextInput;
    public static void UnbindEvent_UIElement_TextInput(UIElement.DelegateRaiseTextInput callback, IntPtr instance)
    {
        _UnbindEvent_UIElement_TextInput(callback, instance);
    }

    public delegate IntPtr UnboxStringDelegate(HandleRef jarg1);
    public static UnboxStringDelegate _UnboxString;
    public static IntPtr UnboxString(HandleRef jarg1)
    {
        IntPtr ret = _UnboxString(jarg1);

        return ret;
    }

    public delegate IntPtr new_NsStringDelegate(IntPtr jarg1);
    public static new_NsStringDelegate _new_NsString;
    public static IntPtr new_NsString(IntPtr jarg1)
    {
        IntPtr ret = _new_NsString(jarg1);

        return ret;
    }

    public delegate IntPtr NsString_c_strDelegate(HandleRef jarg1);
    public static NsString_c_strDelegate _NsString_c_str;
    public static IntPtr NsString_c_str(HandleRef jarg1)
    {
        IntPtr ret = _NsString_c_str(jarg1);

        return ret;
    }

    public delegate void delete_NsStringDelegate(HandleRef jarg1);
    public static delete_NsStringDelegate _delete_NsString;
    public static void delete_NsString(HandleRef jarg1)
    {
        _delete_NsString(jarg1);
    }

    public delegate IntPtr new_NsSymbolDelegate(IntPtr jarg1);
    public static new_NsSymbolDelegate _new_NsSymbol;
    public static IntPtr new_NsSymbol(IntPtr jarg1)
    {
        IntPtr ret = _new_NsSymbol(jarg1);

        return ret;
    }

    public delegate IntPtr NsSymbol_GetStrDelegate(HandleRef jarg1);
    public static NsSymbol_GetStrDelegate _NsSymbol_GetStr;
    public static IntPtr NsSymbol_GetStr(HandleRef jarg1)
    {
        IntPtr ret = _NsSymbol_GetStr(jarg1);

        return ret;
    }

    public delegate void delete_NsSymbolDelegate(HandleRef jarg1);
    public static delete_NsSymbolDelegate _delete_NsSymbol;
    public static void delete_NsSymbol(HandleRef jarg1)
    {
        _delete_NsSymbol(jarg1);
    }

    public delegate void delete_BaseComponentDelegate(HandleRef jarg1);
    public static delete_BaseComponentDelegate _delete_BaseComponent;
    public static void delete_BaseComponent(HandleRef jarg1)
    {
        _delete_BaseComponent(jarg1);
    }

    public delegate IntPtr new_Color__SWIG_0Delegate();
    public static new_Color__SWIG_0Delegate _new_Color__SWIG_0;
    public static IntPtr new_Color__SWIG_0()
    {
        IntPtr ret = _new_Color__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_Color__SWIG_1Delegate(float jarg1, float jarg2, float jarg3, float jarg4);
    public static new_Color__SWIG_1Delegate _new_Color__SWIG_1;
    public static IntPtr new_Color__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4)
    {
        IntPtr ret = _new_Color__SWIG_1(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr new_Color__SWIG_2Delegate(float jarg1, float jarg2, float jarg3);
    public static new_Color__SWIG_2Delegate _new_Color__SWIG_2;
    public static IntPtr new_Color__SWIG_2(float jarg1, float jarg2, float jarg3)
    {
        IntPtr ret = _new_Color__SWIG_2(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr new_Color__SWIG_3Delegate(int jarg1, int jarg2, int jarg3, int jarg4);
    public static new_Color__SWIG_3Delegate _new_Color__SWIG_3;
    public static IntPtr new_Color__SWIG_3(int jarg1, int jarg2, int jarg3, int jarg4)
    {
        IntPtr ret = _new_Color__SWIG_3(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr new_Color__SWIG_4Delegate(int jarg1, int jarg2, int jarg3);
    public static new_Color__SWIG_4Delegate _new_Color__SWIG_4;
    public static IntPtr new_Color__SWIG_4(int jarg1, int jarg2, int jarg3)
    {
        IntPtr ret = _new_Color__SWIG_4(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr Color_FromPackedBGRADelegate(uint jarg1);
    public static Color_FromPackedBGRADelegate _Color_FromPackedBGRA;
    public static IntPtr Color_FromPackedBGRA(uint jarg1)
    {
        IntPtr ret = _Color_FromPackedBGRA(jarg1);

        return ret;
    }

    public delegate IntPtr Color_FromPackedRGBADelegate(uint jarg1);
    public static Color_FromPackedRGBADelegate _Color_FromPackedRGBA;
    public static IntPtr Color_FromPackedRGBA(uint jarg1)
    {
        IntPtr ret = _Color_FromPackedRGBA(jarg1);

        return ret;
    }

    public delegate IntPtr Color_FromLinearRGB__SWIG_0Delegate(float jarg1, float jarg2, float jarg3, float jarg4);
    public static Color_FromLinearRGB__SWIG_0Delegate _Color_FromLinearRGB__SWIG_0;
    public static IntPtr Color_FromLinearRGB__SWIG_0(float jarg1, float jarg2, float jarg3, float jarg4)
    {
        IntPtr ret = _Color_FromLinearRGB__SWIG_0(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr Color_FromLinearRGB__SWIG_1Delegate(float jarg1, float jarg2, float jarg3);
    public static Color_FromLinearRGB__SWIG_1Delegate _Color_FromLinearRGB__SWIG_1;
    public static IntPtr Color_FromLinearRGB__SWIG_1(float jarg1, float jarg2, float jarg3)
    {
        IntPtr ret = _Color_FromLinearRGB__SWIG_1(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void Color_ToLinearRGBDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);
    public static Color_ToLinearRGBDelegate _Color_ToLinearRGB;
    public static void Color_ToLinearRGB(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5)
    {
        _Color_ToLinearRGB(jarg1, jarg2, jarg3, jarg4, jarg5);
    }

    public delegate void Color_SetRed__SWIG_0Delegate(HandleRef jarg1, float jarg2);
    public static Color_SetRed__SWIG_0Delegate _Color_SetRed__SWIG_0;
    public static void Color_SetRed__SWIG_0(HandleRef jarg1, float jarg2)
    {
        _Color_SetRed__SWIG_0(jarg1, jarg2);
    }

    public delegate void Color_SetRed__SWIG_1Delegate(HandleRef jarg1, int jarg2);
    public static Color_SetRed__SWIG_1Delegate _Color_SetRed__SWIG_1;
    public static void Color_SetRed__SWIG_1(HandleRef jarg1, int jarg2)
    {
        _Color_SetRed__SWIG_1(jarg1, jarg2);
    }

    public delegate void Color_SetGreen__SWIG_0Delegate(HandleRef jarg1, float jarg2);
    public static Color_SetGreen__SWIG_0Delegate _Color_SetGreen__SWIG_0;
    public static void Color_SetGreen__SWIG_0(HandleRef jarg1, float jarg2)
    {
        _Color_SetGreen__SWIG_0(jarg1, jarg2);
    }

    public delegate void Color_SetGreen__SWIG_1Delegate(HandleRef jarg1, int jarg2);
    public static Color_SetGreen__SWIG_1Delegate _Color_SetGreen__SWIG_1;
    public static void Color_SetGreen__SWIG_1(HandleRef jarg1, int jarg2)
    {
        _Color_SetGreen__SWIG_1(jarg1, jarg2);
    }

    public delegate void Color_SetBlue__SWIG_0Delegate(HandleRef jarg1, float jarg2);
    public static Color_SetBlue__SWIG_0Delegate _Color_SetBlue__SWIG_0;
    public static void Color_SetBlue__SWIG_0(HandleRef jarg1, float jarg2)
    {
        _Color_SetBlue__SWIG_0(jarg1, jarg2);
    }

    public delegate void Color_SetBlue__SWIG_1Delegate(HandleRef jarg1, int jarg2);
    public static Color_SetBlue__SWIG_1Delegate _Color_SetBlue__SWIG_1;
    public static void Color_SetBlue__SWIG_1(HandleRef jarg1, int jarg2)
    {
        _Color_SetBlue__SWIG_1(jarg1, jarg2);
    }

    public delegate void Color_SetAlpha__SWIG_0Delegate(HandleRef jarg1, float jarg2);
    public static Color_SetAlpha__SWIG_0Delegate _Color_SetAlpha__SWIG_0;
    public static void Color_SetAlpha__SWIG_0(HandleRef jarg1, float jarg2)
    {
        _Color_SetAlpha__SWIG_0(jarg1, jarg2);
    }

    public delegate void Color_SetAlpha__SWIG_1Delegate(HandleRef jarg1, int jarg2);
    public static Color_SetAlpha__SWIG_1Delegate _Color_SetAlpha__SWIG_1;
    public static void Color_SetAlpha__SWIG_1(HandleRef jarg1, int jarg2)
    {
        _Color_SetAlpha__SWIG_1(jarg1, jarg2);
    }

    public delegate void Color_SetPackedColorBGRADelegate(HandleRef jarg1, uint jarg2);
    public static Color_SetPackedColorBGRADelegate _Color_SetPackedColorBGRA;
    public static void Color_SetPackedColorBGRA(HandleRef jarg1, uint jarg2)
    {
        _Color_SetPackedColorBGRA(jarg1, jarg2);
    }

    public delegate void Color_SetPackedColorRGBADelegate(HandleRef jarg1, uint jarg2);
    public static Color_SetPackedColorRGBADelegate _Color_SetPackedColorRGBA;
    public static void Color_SetPackedColorRGBA(HandleRef jarg1, uint jarg2)
    {
        _Color_SetPackedColorRGBA(jarg1, jarg2);
    }

    public delegate int Color_GetRedIDelegate(HandleRef jarg1);
    public static Color_GetRedIDelegate _Color_GetRedI;
    public static int Color_GetRedI(HandleRef jarg1)
    {
        int ret = _Color_GetRedI(jarg1);

        return ret;
    }

    public delegate int Color_GetGreenIDelegate(HandleRef jarg1);
    public static Color_GetGreenIDelegate _Color_GetGreenI;
    public static int Color_GetGreenI(HandleRef jarg1)
    {
        int ret = _Color_GetGreenI(jarg1);

        return ret;
    }

    public delegate int Color_GetBlueIDelegate(HandleRef jarg1);
    public static Color_GetBlueIDelegate _Color_GetBlueI;
    public static int Color_GetBlueI(HandleRef jarg1)
    {
        int ret = _Color_GetBlueI(jarg1);

        return ret;
    }

    public delegate int Color_GetAlphaIDelegate(HandleRef jarg1);
    public static Color_GetAlphaIDelegate _Color_GetAlphaI;
    public static int Color_GetAlphaI(HandleRef jarg1)
    {
        int ret = _Color_GetAlphaI(jarg1);

        return ret;
    }

    public delegate float Color_GetRedFDelegate(HandleRef jarg1);
    public static Color_GetRedFDelegate _Color_GetRedF;
    public static float Color_GetRedF(HandleRef jarg1)
    {
        float ret = _Color_GetRedF(jarg1);

        return ret;
    }

    public delegate float Color_GetGreenFDelegate(HandleRef jarg1);
    public static Color_GetGreenFDelegate _Color_GetGreenF;
    public static float Color_GetGreenF(HandleRef jarg1)
    {
        float ret = _Color_GetGreenF(jarg1);

        return ret;
    }

    public delegate float Color_GetBlueFDelegate(HandleRef jarg1);
    public static Color_GetBlueFDelegate _Color_GetBlueF;
    public static float Color_GetBlueF(HandleRef jarg1)
    {
        float ret = _Color_GetBlueF(jarg1);

        return ret;
    }

    public delegate float Color_GetAlphaFDelegate(HandleRef jarg1);
    public static Color_GetAlphaFDelegate _Color_GetAlphaF;
    public static float Color_GetAlphaF(HandleRef jarg1)
    {
        float ret = _Color_GetAlphaF(jarg1);

        return ret;
    }

    public delegate uint Color_GetPackedColorBGRADelegate(HandleRef jarg1);
    public static Color_GetPackedColorBGRADelegate _Color_GetPackedColorBGRA;
    public static uint Color_GetPackedColorBGRA(HandleRef jarg1)
    {
        uint ret = _Color_GetPackedColorBGRA(jarg1);

        return ret;
    }

    public delegate uint Color_GetPackedColorRGBADelegate(HandleRef jarg1);
    public static Color_GetPackedColorRGBADelegate _Color_GetPackedColorRGBA;
    public static uint Color_GetPackedColorRGBA(HandleRef jarg1)
    {
        uint ret = _Color_GetPackedColorRGBA(jarg1);

        return ret;
    }

    public delegate bool Color_TryParseDelegate(string jarg1, HandleRef jarg2);
    public static Color_TryParseDelegate _Color_TryParse;
    public static bool Color_TryParse(string jarg1, HandleRef jarg2)
    {
        bool ret = _Color_TryParse(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr Color_ParseDelegate(string jarg1);
    public static Color_ParseDelegate _Color_Parse;
    public static IntPtr Color_Parse(string jarg1)
    {
        IntPtr ret = _Color_Parse(jarg1);

        return ret;
    }

    public delegate IntPtr Color_Black_getDelegate();
    public static Color_Black_getDelegate _Color_Black_get;
    public static IntPtr Color_Black_get()
    {
        IntPtr ret = _Color_Black_get();

        return ret;
    }

    public delegate IntPtr Color_Blue_getDelegate();
    public static Color_Blue_getDelegate _Color_Blue_get;
    public static IntPtr Color_Blue_get()
    {
        IntPtr ret = _Color_Blue_get();

        return ret;
    }

    public delegate IntPtr Color_Cyan_getDelegate();
    public static Color_Cyan_getDelegate _Color_Cyan_get;
    public static IntPtr Color_Cyan_get()
    {
        IntPtr ret = _Color_Cyan_get();

        return ret;
    }

    public delegate IntPtr Color_DarkGray_getDelegate();
    public static Color_DarkGray_getDelegate _Color_DarkGray_get;
    public static IntPtr Color_DarkGray_get()
    {
        IntPtr ret = _Color_DarkGray_get();

        return ret;
    }

    public delegate IntPtr Color_Gray_getDelegate();
    public static Color_Gray_getDelegate _Color_Gray_get;
    public static IntPtr Color_Gray_get()
    {
        IntPtr ret = _Color_Gray_get();

        return ret;
    }

    public delegate IntPtr Color_Green_getDelegate();
    public static Color_Green_getDelegate _Color_Green_get;
    public static IntPtr Color_Green_get()
    {
        IntPtr ret = _Color_Green_get();

        return ret;
    }

    public delegate IntPtr Color_LightGray_getDelegate();
    public static Color_LightGray_getDelegate _Color_LightGray_get;
    public static IntPtr Color_LightGray_get()
    {
        IntPtr ret = _Color_LightGray_get();

        return ret;
    }

    public delegate IntPtr Color_Magenta_getDelegate();
    public static Color_Magenta_getDelegate _Color_Magenta_get;
    public static IntPtr Color_Magenta_get()
    {
        IntPtr ret = _Color_Magenta_get();

        return ret;
    }

    public delegate IntPtr Color_Orange_getDelegate();
    public static Color_Orange_getDelegate _Color_Orange_get;
    public static IntPtr Color_Orange_get()
    {
        IntPtr ret = _Color_Orange_get();

        return ret;
    }

    public delegate IntPtr Color_Pink_getDelegate();
    public static Color_Pink_getDelegate _Color_Pink_get;
    public static IntPtr Color_Pink_get()
    {
        IntPtr ret = _Color_Pink_get();

        return ret;
    }

    public delegate IntPtr Color_Red_getDelegate();
    public static Color_Red_getDelegate _Color_Red_get;
    public static IntPtr Color_Red_get()
    {
        IntPtr ret = _Color_Red_get();

        return ret;
    }

    public delegate IntPtr Color_White_getDelegate();
    public static Color_White_getDelegate _Color_White_get;
    public static IntPtr Color_White_get()
    {
        IntPtr ret = _Color_White_get();

        return ret;
    }

    public delegate IntPtr Color_Yellow_getDelegate();
    public static Color_Yellow_getDelegate _Color_Yellow_get;
    public static IntPtr Color_Yellow_get()
    {
        IntPtr ret = _Color_Yellow_get();

        return ret;
    }

    public delegate void delete_ColorDelegate(HandleRef jarg1);
    public static delete_ColorDelegate _delete_Color;
    public static void delete_Color(HandleRef jarg1)
    {
        _delete_Color(jarg1);
    }

    public delegate IntPtr PreMultiplyAlphaDelegate(HandleRef jarg1);
    public static PreMultiplyAlphaDelegate _PreMultiplyAlpha;
    public static IntPtr PreMultiplyAlpha(HandleRef jarg1)
    {
        IntPtr ret = _PreMultiplyAlpha(jarg1);

        return ret;
    }

    public delegate IntPtr Lerp__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, float jarg3, bool jarg4);
    public static Lerp__SWIG_0Delegate _Lerp__SWIG_0;
    public static IntPtr Lerp__SWIG_0(HandleRef jarg1, HandleRef jarg2, float jarg3, bool jarg4)
    {
        IntPtr ret = _Lerp__SWIG_0(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr Lerp__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2, float jarg3);
    public static Lerp__SWIG_1Delegate _Lerp__SWIG_1;
    public static IntPtr Lerp__SWIG_1(HandleRef jarg1, HandleRef jarg2, float jarg3)
    {
        IntPtr ret = _Lerp__SWIG_1(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr Add__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, bool jarg3);
    public static Add__SWIG_0Delegate _Add__SWIG_0;
    public static IntPtr Add__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3)
    {
        IntPtr ret = _Add__SWIG_0(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr Add__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static Add__SWIG_1Delegate _Add__SWIG_1;
    public static IntPtr Add__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _Add__SWIG_1(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr ModulateDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ModulateDelegate _Modulate;
    public static IntPtr Modulate(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _Modulate(jarg1, jarg2);

        return ret;
    }

    public delegate void Size_width_setDelegate(HandleRef jarg1, float jarg2);
    public static Size_width_setDelegate _Size_width_set;
    public static void Size_width_set(HandleRef jarg1, float jarg2)
    {
        _Size_width_set(jarg1, jarg2);
    }

    public delegate float Size_width_getDelegate(HandleRef jarg1);
    public static Size_width_getDelegate _Size_width_get;
    public static float Size_width_get(HandleRef jarg1)
    {
        float ret = _Size_width_get(jarg1);

        return ret;
    }

    public delegate void Size_height_setDelegate(HandleRef jarg1, float jarg2);
    public static Size_height_setDelegate _Size_height_set;
    public static void Size_height_set(HandleRef jarg1, float jarg2)
    {
        _Size_height_set(jarg1, jarg2);
    }

    public delegate float Size_height_getDelegate(HandleRef jarg1);
    public static Size_height_getDelegate _Size_height_get;
    public static float Size_height_get(HandleRef jarg1)
    {
        float ret = _Size_height_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_Size__SWIG_0Delegate(float jarg1, float jarg2);
    public static new_Size__SWIG_0Delegate _new_Size__SWIG_0;
    public static IntPtr new_Size__SWIG_0(float jarg1, float jarg2)
    {
        IntPtr ret = _new_Size__SWIG_0(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_Size__SWIG_1Delegate(float jarg1);
    public static new_Size__SWIG_1Delegate _new_Size__SWIG_1;
    public static IntPtr new_Size__SWIG_1(float jarg1)
    {
        IntPtr ret = _new_Size__SWIG_1(jarg1);

        return ret;
    }

    public delegate IntPtr new_Size__SWIG_2Delegate();
    public static new_Size__SWIG_2Delegate _new_Size__SWIG_2;
    public static IntPtr new_Size__SWIG_2()
    {
        IntPtr ret = _new_Size__SWIG_2();

        return ret;
    }

    public delegate IntPtr new_Size__SWIG_3Delegate(HandleRef jarg1);
    public static new_Size__SWIG_3Delegate _new_Size__SWIG_3;
    public static IntPtr new_Size__SWIG_3(HandleRef jarg1)
    {
        IntPtr ret = _new_Size__SWIG_3(jarg1);

        return ret;
    }

    public delegate IntPtr new_Size__SWIG_4Delegate(HandleRef jarg1);
    public static new_Size__SWIG_4Delegate _new_Size__SWIG_4;
    public static IntPtr new_Size__SWIG_4(HandleRef jarg1)
    {
        IntPtr ret = _new_Size__SWIG_4(jarg1);

        return ret;
    }

    public delegate IntPtr new_Size__SWIG_5Delegate(HandleRef jarg1);
    public static new_Size__SWIG_5Delegate _new_Size__SWIG_5;
    public static IntPtr new_Size__SWIG_5(HandleRef jarg1)
    {
        IntPtr ret = _new_Size__SWIG_5(jarg1);

        return ret;
    }

    public delegate void Size_ExpandDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Size_ExpandDelegate _Size_Expand;
    public static void Size_Expand(HandleRef jarg1, HandleRef jarg2)
    {
        _Size_Expand(jarg1, jarg2);
    }

    public delegate void Size_ScaleDelegate(HandleRef jarg1, float jarg2, float jarg3);
    public static Size_ScaleDelegate _Size_Scale;
    public static void Size_Scale(HandleRef jarg1, float jarg2, float jarg3)
    {
        _Size_Scale(jarg1, jarg2, jarg3);
    }

    public delegate IntPtr Size_ParseDelegate(string jarg1);
    public static Size_ParseDelegate _Size_Parse;
    public static IntPtr Size_Parse(string jarg1)
    {
        IntPtr ret = _Size_Parse(jarg1);

        return ret;
    }

    public delegate bool Size_TryParseDelegate(string jarg1, HandleRef jarg2);
    public static Size_TryParseDelegate _Size_TryParse;
    public static bool Size_TryParse(string jarg1, HandleRef jarg2)
    {
        bool ret = _Size_TryParse(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr Size_ZeroDelegate();
    public static Size_ZeroDelegate _Size_Zero;
    public static IntPtr Size_Zero()
    {
        IntPtr ret = _Size_Zero();

        return ret;
    }

    public delegate IntPtr Size_InfiniteDelegate();
    public static Size_InfiniteDelegate _Size_Infinite;
    public static IntPtr Size_Infinite()
    {
        IntPtr ret = _Size_Infinite();

        return ret;
    }

    public delegate void delete_SizeDelegate(HandleRef jarg1);
    public static delete_SizeDelegate _delete_Size;
    public static void delete_Size(HandleRef jarg1)
    {
        _delete_Size(jarg1);
    }

    public delegate void Sizei_width_setDelegate(HandleRef jarg1, int jarg2);
    public static Sizei_width_setDelegate _Sizei_width_set;
    public static void Sizei_width_set(HandleRef jarg1, int jarg2)
    {
        _Sizei_width_set(jarg1, jarg2);
    }

    public delegate int Sizei_width_getDelegate(HandleRef jarg1);
    public static Sizei_width_getDelegate _Sizei_width_get;
    public static int Sizei_width_get(HandleRef jarg1)
    {
        int ret = _Sizei_width_get(jarg1);

        return ret;
    }

    public delegate void Sizei_height_setDelegate(HandleRef jarg1, int jarg2);
    public static Sizei_height_setDelegate _Sizei_height_set;
    public static void Sizei_height_set(HandleRef jarg1, int jarg2)
    {
        _Sizei_height_set(jarg1, jarg2);
    }

    public delegate int Sizei_height_getDelegate(HandleRef jarg1);
    public static Sizei_height_getDelegate _Sizei_height_get;
    public static int Sizei_height_get(HandleRef jarg1)
    {
        int ret = _Sizei_height_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_Sizei__SWIG_0Delegate(int jarg1, int jarg2);
    public static new_Sizei__SWIG_0Delegate _new_Sizei__SWIG_0;
    public static IntPtr new_Sizei__SWIG_0(int jarg1, int jarg2)
    {
        IntPtr ret = _new_Sizei__SWIG_0(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_Sizei__SWIG_1Delegate(int jarg1);
    public static new_Sizei__SWIG_1Delegate _new_Sizei__SWIG_1;
    public static IntPtr new_Sizei__SWIG_1(int jarg1)
    {
        IntPtr ret = _new_Sizei__SWIG_1(jarg1);

        return ret;
    }

    public delegate IntPtr new_Sizei__SWIG_2Delegate();
    public static new_Sizei__SWIG_2Delegate _new_Sizei__SWIG_2;
    public static IntPtr new_Sizei__SWIG_2()
    {
        IntPtr ret = _new_Sizei__SWIG_2();

        return ret;
    }

    public delegate IntPtr new_Sizei__SWIG_3Delegate(HandleRef jarg1);
    public static new_Sizei__SWIG_3Delegate _new_Sizei__SWIG_3;
    public static IntPtr new_Sizei__SWIG_3(HandleRef jarg1)
    {
        IntPtr ret = _new_Sizei__SWIG_3(jarg1);

        return ret;
    }

    public delegate IntPtr new_Sizei__SWIG_4Delegate(HandleRef jarg1);
    public static new_Sizei__SWIG_4Delegate _new_Sizei__SWIG_4;
    public static IntPtr new_Sizei__SWIG_4(HandleRef jarg1)
    {
        IntPtr ret = _new_Sizei__SWIG_4(jarg1);

        return ret;
    }

    public delegate IntPtr new_Sizei__SWIG_5Delegate(HandleRef jarg1);
    public static new_Sizei__SWIG_5Delegate _new_Sizei__SWIG_5;
    public static IntPtr new_Sizei__SWIG_5(HandleRef jarg1)
    {
        IntPtr ret = _new_Sizei__SWIG_5(jarg1);

        return ret;
    }

    public delegate void Sizei_ExpandDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Sizei_ExpandDelegate _Sizei_Expand;
    public static void Sizei_Expand(HandleRef jarg1, HandleRef jarg2)
    {
        _Sizei_Expand(jarg1, jarg2);
    }

    public delegate void Sizei_ScaleDelegate(HandleRef jarg1, int jarg2, int jarg3);
    public static Sizei_ScaleDelegate _Sizei_Scale;
    public static void Sizei_Scale(HandleRef jarg1, int jarg2, int jarg3)
    {
        _Sizei_Scale(jarg1, jarg2, jarg3);
    }

    public delegate IntPtr Sizei_ParseDelegate(string jarg1);
    public static Sizei_ParseDelegate _Sizei_Parse;
    public static IntPtr Sizei_Parse(string jarg1)
    {
        IntPtr ret = _Sizei_Parse(jarg1);

        return ret;
    }

    public delegate bool Sizei_TryParseDelegate(string jarg1, HandleRef jarg2);
    public static Sizei_TryParseDelegate _Sizei_TryParse;
    public static bool Sizei_TryParse(string jarg1, HandleRef jarg2)
    {
        bool ret = _Sizei_TryParse(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr Sizei_ZeroDelegate();
    public static Sizei_ZeroDelegate _Sizei_Zero;
    public static IntPtr Sizei_Zero()
    {
        IntPtr ret = _Sizei_Zero();

        return ret;
    }

    public delegate IntPtr Sizei_InfiniteDelegate();
    public static Sizei_InfiniteDelegate _Sizei_Infinite;
    public static IntPtr Sizei_Infinite()
    {
        IntPtr ret = _Sizei_Infinite();

        return ret;
    }

    public delegate void delete_SizeiDelegate(HandleRef jarg1);
    public static delete_SizeiDelegate _delete_Sizei;
    public static void delete_Sizei(HandleRef jarg1)
    {
        _delete_Sizei(jarg1);
    }

    public delegate IntPtr new_Point__SWIG_0Delegate();
    public static new_Point__SWIG_0Delegate _new_Point__SWIG_0;
    public static IntPtr new_Point__SWIG_0()
    {
        IntPtr ret = _new_Point__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_Point__SWIG_1Delegate(float jarg1, float jarg2);
    public static new_Point__SWIG_1Delegate _new_Point__SWIG_1;
    public static IntPtr new_Point__SWIG_1(float jarg1, float jarg2)
    {
        IntPtr ret = _new_Point__SWIG_1(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_Point__SWIG_2Delegate(HandleRef jarg1);
    public static new_Point__SWIG_2Delegate _new_Point__SWIG_2;
    public static IntPtr new_Point__SWIG_2(HandleRef jarg1)
    {
        IntPtr ret = _new_Point__SWIG_2(jarg1);

        return ret;
    }

    public delegate IntPtr new_Point__SWIG_3Delegate(HandleRef jarg1);
    public static new_Point__SWIG_3Delegate _new_Point__SWIG_3;
    public static IntPtr new_Point__SWIG_3(HandleRef jarg1)
    {
        IntPtr ret = _new_Point__SWIG_3(jarg1);

        return ret;
    }

    public delegate IntPtr new_Point__SWIG_4Delegate(HandleRef jarg1);
    public static new_Point__SWIG_4Delegate _new_Point__SWIG_4;
    public static IntPtr new_Point__SWIG_4(HandleRef jarg1)
    {
        IntPtr ret = _new_Point__SWIG_4(jarg1);

        return ret;
    }

    public delegate IntPtr new_Point__SWIG_5Delegate(HandleRef jarg1);
    public static new_Point__SWIG_5Delegate _new_Point__SWIG_5;
    public static IntPtr new_Point__SWIG_5(HandleRef jarg1)
    {
        IntPtr ret = _new_Point__SWIG_5(jarg1);

        return ret;
    }

    public delegate IntPtr Point_ParseDelegate(string jarg1);
    public static Point_ParseDelegate _Point_Parse;
    public static IntPtr Point_Parse(string jarg1)
    {
        IntPtr ret = _Point_Parse(jarg1);

        return ret;
    }

    public delegate bool Point_TryParseDelegate(string jarg1, HandleRef jarg2);
    public static Point_TryParseDelegate _Point_TryParse;
    public static bool Point_TryParse(string jarg1, HandleRef jarg2)
    {
        bool ret = _Point_TryParse(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_PointDelegate(HandleRef jarg1);
    public static delete_PointDelegate _delete_Point;
    public static void delete_Point(HandleRef jarg1)
    {
        _delete_Point(jarg1);
    }

    public delegate IntPtr new_Pointi__SWIG_0Delegate();
    public static new_Pointi__SWIG_0Delegate _new_Pointi__SWIG_0;
    public static IntPtr new_Pointi__SWIG_0()
    {
        IntPtr ret = _new_Pointi__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_Pointi__SWIG_1Delegate(int jarg1, int jarg2);
    public static new_Pointi__SWIG_1Delegate _new_Pointi__SWIG_1;
    public static IntPtr new_Pointi__SWIG_1(int jarg1, int jarg2)
    {
        IntPtr ret = _new_Pointi__SWIG_1(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_Pointi__SWIG_2Delegate(HandleRef jarg1);
    public static new_Pointi__SWIG_2Delegate _new_Pointi__SWIG_2;
    public static IntPtr new_Pointi__SWIG_2(HandleRef jarg1)
    {
        IntPtr ret = _new_Pointi__SWIG_2(jarg1);

        return ret;
    }

    public delegate IntPtr new_Pointi__SWIG_3Delegate(HandleRef jarg1);
    public static new_Pointi__SWIG_3Delegate _new_Pointi__SWIG_3;
    public static IntPtr new_Pointi__SWIG_3(HandleRef jarg1)
    {
        IntPtr ret = _new_Pointi__SWIG_3(jarg1);

        return ret;
    }

    public delegate IntPtr new_Pointi__SWIG_4Delegate(HandleRef jarg1);
    public static new_Pointi__SWIG_4Delegate _new_Pointi__SWIG_4;
    public static IntPtr new_Pointi__SWIG_4(HandleRef jarg1)
    {
        IntPtr ret = _new_Pointi__SWIG_4(jarg1);

        return ret;
    }

    public delegate IntPtr new_Pointi__SWIG_5Delegate(HandleRef jarg1);
    public static new_Pointi__SWIG_5Delegate _new_Pointi__SWIG_5;
    public static IntPtr new_Pointi__SWIG_5(HandleRef jarg1)
    {
        IntPtr ret = _new_Pointi__SWIG_5(jarg1);

        return ret;
    }

    public delegate IntPtr Pointi_ParseDelegate(string jarg1);
    public static Pointi_ParseDelegate _Pointi_Parse;
    public static IntPtr Pointi_Parse(string jarg1)
    {
        IntPtr ret = _Pointi_Parse(jarg1);

        return ret;
    }

    public delegate bool Pointi_TryParseDelegate(string jarg1, HandleRef jarg2);
    public static Pointi_TryParseDelegate _Pointi_TryParse;
    public static bool Pointi_TryParse(string jarg1, HandleRef jarg2)
    {
        bool ret = _Pointi_TryParse(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_PointiDelegate(HandleRef jarg1);
    public static delete_PointiDelegate _delete_Pointi;
    public static void delete_Pointi(HandleRef jarg1)
    {
        _delete_Pointi(jarg1);
    }

    public delegate void Rect_x_setDelegate(HandleRef jarg1, float jarg2);
    public static Rect_x_setDelegate _Rect_x_set;
    public static void Rect_x_set(HandleRef jarg1, float jarg2)
    {
        _Rect_x_set(jarg1, jarg2);
    }

    public delegate float Rect_x_getDelegate(HandleRef jarg1);
    public static Rect_x_getDelegate _Rect_x_get;
    public static float Rect_x_get(HandleRef jarg1)
    {
        float ret = _Rect_x_get(jarg1);

        return ret;
    }

    public delegate void Rect_y_setDelegate(HandleRef jarg1, float jarg2);
    public static Rect_y_setDelegate _Rect_y_set;
    public static void Rect_y_set(HandleRef jarg1, float jarg2)
    {
        _Rect_y_set(jarg1, jarg2);
    }

    public delegate float Rect_y_getDelegate(HandleRef jarg1);
    public static Rect_y_getDelegate _Rect_y_get;
    public static float Rect_y_get(HandleRef jarg1)
    {
        float ret = _Rect_y_get(jarg1);

        return ret;
    }

    public delegate void Rect_width_setDelegate(HandleRef jarg1, float jarg2);
    public static Rect_width_setDelegate _Rect_width_set;
    public static void Rect_width_set(HandleRef jarg1, float jarg2)
    {
        _Rect_width_set(jarg1, jarg2);
    }

    public delegate float Rect_width_getDelegate(HandleRef jarg1);
    public static Rect_width_getDelegate _Rect_width_get;
    public static float Rect_width_get(HandleRef jarg1)
    {
        float ret = _Rect_width_get(jarg1);

        return ret;
    }

    public delegate void Rect_height_setDelegate(HandleRef jarg1, float jarg2);
    public static Rect_height_setDelegate _Rect_height_set;
    public static void Rect_height_set(HandleRef jarg1, float jarg2)
    {
        _Rect_height_set(jarg1, jarg2);
    }

    public delegate float Rect_height_getDelegate(HandleRef jarg1);
    public static Rect_height_getDelegate _Rect_height_get;
    public static float Rect_height_get(HandleRef jarg1)
    {
        float ret = _Rect_height_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_Rect__SWIG_0Delegate(float jarg1, float jarg2, float jarg3, float jarg4);
    public static new_Rect__SWIG_0Delegate _new_Rect__SWIG_0;
    public static IntPtr new_Rect__SWIG_0(float jarg1, float jarg2, float jarg3, float jarg4)
    {
        IntPtr ret = _new_Rect__SWIG_0(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr new_Rect__SWIG_1Delegate(float jarg1, float jarg2, float jarg3);
    public static new_Rect__SWIG_1Delegate _new_Rect__SWIG_1;
    public static IntPtr new_Rect__SWIG_1(float jarg1, float jarg2, float jarg3)
    {
        IntPtr ret = _new_Rect__SWIG_1(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr new_Rect__SWIG_2Delegate(float jarg1, float jarg2);
    public static new_Rect__SWIG_2Delegate _new_Rect__SWIG_2;
    public static IntPtr new_Rect__SWIG_2(float jarg1, float jarg2)
    {
        IntPtr ret = _new_Rect__SWIG_2(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_Rect__SWIG_3Delegate(float jarg1);
    public static new_Rect__SWIG_3Delegate _new_Rect__SWIG_3;
    public static IntPtr new_Rect__SWIG_3(float jarg1)
    {
        IntPtr ret = _new_Rect__SWIG_3(jarg1);

        return ret;
    }

    public delegate IntPtr new_Rect__SWIG_4Delegate();
    public static new_Rect__SWIG_4Delegate _new_Rect__SWIG_4;
    public static IntPtr new_Rect__SWIG_4()
    {
        IntPtr ret = _new_Rect__SWIG_4();

        return ret;
    }

    public delegate IntPtr new_Rect__SWIG_5Delegate(HandleRef jarg1);
    public static new_Rect__SWIG_5Delegate _new_Rect__SWIG_5;
    public static IntPtr new_Rect__SWIG_5(HandleRef jarg1)
    {
        IntPtr ret = _new_Rect__SWIG_5(jarg1);

        return ret;
    }

    public delegate IntPtr new_Rect__SWIG_6Delegate(HandleRef jarg1, HandleRef jarg2);
    public static new_Rect__SWIG_6Delegate _new_Rect__SWIG_6;
    public static IntPtr new_Rect__SWIG_6(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_Rect__SWIG_6(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_Rect__SWIG_7Delegate(HandleRef jarg1);
    public static new_Rect__SWIG_7Delegate _new_Rect__SWIG_7;
    public static IntPtr new_Rect__SWIG_7(HandleRef jarg1)
    {
        IntPtr ret = _new_Rect__SWIG_7(jarg1);

        return ret;
    }

    public delegate IntPtr new_Rect__SWIG_8Delegate(HandleRef jarg1);
    public static new_Rect__SWIG_8Delegate _new_Rect__SWIG_8;
    public static IntPtr new_Rect__SWIG_8(HandleRef jarg1)
    {
        IntPtr ret = _new_Rect__SWIG_8(jarg1);

        return ret;
    }

    public delegate IntPtr Rect_GetLocationDelegate(HandleRef jarg1);
    public static Rect_GetLocationDelegate _Rect_GetLocation;
    public static IntPtr Rect_GetLocation(HandleRef jarg1)
    {
        IntPtr ret = _Rect_GetLocation(jarg1);

        return ret;
    }

    public delegate void Rect_SetLocationDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Rect_SetLocationDelegate _Rect_SetLocation;
    public static void Rect_SetLocation(HandleRef jarg1, HandleRef jarg2)
    {
        _Rect_SetLocation(jarg1, jarg2);
    }

    public delegate IntPtr Rect_GetSizeDelegate(HandleRef jarg1);
    public static Rect_GetSizeDelegate _Rect_GetSize;
    public static IntPtr Rect_GetSize(HandleRef jarg1)
    {
        IntPtr ret = _Rect_GetSize(jarg1);

        return ret;
    }

    public delegate void Rect_SetSizeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Rect_SetSizeDelegate _Rect_SetSize;
    public static void Rect_SetSize(HandleRef jarg1, HandleRef jarg2)
    {
        _Rect_SetSize(jarg1, jarg2);
    }

    public delegate float Rect_GetLeftDelegate(HandleRef jarg1);
    public static Rect_GetLeftDelegate _Rect_GetLeft;
    public static float Rect_GetLeft(HandleRef jarg1)
    {
        float ret = _Rect_GetLeft(jarg1);

        return ret;
    }

    public delegate float Rect_GetRightDelegate(HandleRef jarg1);
    public static Rect_GetRightDelegate _Rect_GetRight;
    public static float Rect_GetRight(HandleRef jarg1)
    {
        float ret = _Rect_GetRight(jarg1);

        return ret;
    }

    public delegate float Rect_GetTopDelegate(HandleRef jarg1);
    public static Rect_GetTopDelegate _Rect_GetTop;
    public static float Rect_GetTop(HandleRef jarg1)
    {
        float ret = _Rect_GetTop(jarg1);

        return ret;
    }

    public delegate float Rect_GetBottomDelegate(HandleRef jarg1);
    public static Rect_GetBottomDelegate _Rect_GetBottom;
    public static float Rect_GetBottom(HandleRef jarg1)
    {
        float ret = _Rect_GetBottom(jarg1);

        return ret;
    }

    public delegate IntPtr Rect_GetTopLeftDelegate(HandleRef jarg1);
    public static Rect_GetTopLeftDelegate _Rect_GetTopLeft;
    public static IntPtr Rect_GetTopLeft(HandleRef jarg1)
    {
        IntPtr ret = _Rect_GetTopLeft(jarg1);

        return ret;
    }

    public delegate IntPtr Rect_GetTopRightDelegate(HandleRef jarg1);
    public static Rect_GetTopRightDelegate _Rect_GetTopRight;
    public static IntPtr Rect_GetTopRight(HandleRef jarg1)
    {
        IntPtr ret = _Rect_GetTopRight(jarg1);

        return ret;
    }

    public delegate IntPtr Rect_GetBottomLeftDelegate(HandleRef jarg1);
    public static Rect_GetBottomLeftDelegate _Rect_GetBottomLeft;
    public static IntPtr Rect_GetBottomLeft(HandleRef jarg1)
    {
        IntPtr ret = _Rect_GetBottomLeft(jarg1);

        return ret;
    }

    public delegate IntPtr Rect_GetBottomRightDelegate(HandleRef jarg1);
    public static Rect_GetBottomRightDelegate _Rect_GetBottomRight;
    public static IntPtr Rect_GetBottomRight(HandleRef jarg1)
    {
        IntPtr ret = _Rect_GetBottomRight(jarg1);

        return ret;
    }

    public delegate bool Rect_IsEmptyDelegate(HandleRef jarg1);
    public static Rect_IsEmptyDelegate _Rect_IsEmpty;
    public static bool Rect_IsEmpty(HandleRef jarg1)
    {
        bool ret = _Rect_IsEmpty(jarg1);

        return ret;
    }

    public delegate bool Rect_Contains__SWIG_0Delegate(HandleRef jarg1, float jarg2, float jarg3);
    public static Rect_Contains__SWIG_0Delegate _Rect_Contains__SWIG_0;
    public static bool Rect_Contains__SWIG_0(HandleRef jarg1, float jarg2, float jarg3)
    {
        bool ret = _Rect_Contains__SWIG_0(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate bool Rect_Contains__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static Rect_Contains__SWIG_1Delegate _Rect_Contains__SWIG_1;
    public static bool Rect_Contains__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _Rect_Contains__SWIG_1(jarg1, jarg2);

        return ret;
    }

    public delegate bool Rect_Contains__SWIG_2Delegate(HandleRef jarg1, HandleRef jarg2);
    public static Rect_Contains__SWIG_2Delegate _Rect_Contains__SWIG_2;
    public static bool Rect_Contains__SWIG_2(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _Rect_Contains__SWIG_2(jarg1, jarg2);

        return ret;
    }

    public delegate void Rect_Inflate__SWIG_0Delegate(HandleRef jarg1, float jarg2, float jarg3);
    public static Rect_Inflate__SWIG_0Delegate _Rect_Inflate__SWIG_0;
    public static void Rect_Inflate__SWIG_0(HandleRef jarg1, float jarg2, float jarg3)
    {
        _Rect_Inflate__SWIG_0(jarg1, jarg2, jarg3);
    }

    public delegate void Rect_Inflate__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static Rect_Inflate__SWIG_1Delegate _Rect_Inflate__SWIG_1;
    public static void Rect_Inflate__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        _Rect_Inflate__SWIG_1(jarg1, jarg2);
    }

    public delegate IntPtr Rect_IntersectDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Rect_IntersectDelegate _Rect_Intersect;
    public static IntPtr Rect_Intersect(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _Rect_Intersect(jarg1, jarg2);

        return ret;
    }

    public delegate bool Rect_IntersectsWithDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Rect_IntersectsWithDelegate _Rect_IntersectsWith;
    public static bool Rect_IntersectsWith(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _Rect_IntersectsWith(jarg1, jarg2);

        return ret;
    }

    public delegate void Rect_OffsetDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Rect_OffsetDelegate _Rect_Offset;
    public static void Rect_Offset(HandleRef jarg1, HandleRef jarg2)
    {
        _Rect_Offset(jarg1, jarg2);
    }

    public delegate void Rect_ScaleDelegate(HandleRef jarg1, float jarg2, float jarg3);
    public static Rect_ScaleDelegate _Rect_Scale;
    public static void Rect_Scale(HandleRef jarg1, float jarg2, float jarg3)
    {
        _Rect_Scale(jarg1, jarg2, jarg3);
    }

    public delegate void Rect_Expand__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2);
    public static Rect_Expand__SWIG_0Delegate _Rect_Expand__SWIG_0;
    public static void Rect_Expand__SWIG_0(HandleRef jarg1, HandleRef jarg2)
    {
        _Rect_Expand__SWIG_0(jarg1, jarg2);
    }

    public delegate void Rect_Expand__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static Rect_Expand__SWIG_1Delegate _Rect_Expand__SWIG_1;
    public static void Rect_Expand__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        _Rect_Expand__SWIG_1(jarg1, jarg2);
    }

    public delegate void Rect_Transform__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2);
    public static Rect_Transform__SWIG_0Delegate _Rect_Transform__SWIG_0;
    public static void Rect_Transform__SWIG_0(HandleRef jarg1, HandleRef jarg2)
    {
        _Rect_Transform__SWIG_0(jarg1, jarg2);
    }

    public delegate void Rect_Transform__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static Rect_Transform__SWIG_1Delegate _Rect_Transform__SWIG_1;
    public static void Rect_Transform__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        _Rect_Transform__SWIG_1(jarg1, jarg2);
    }

    public delegate IntPtr Rect_ParseDelegate(string jarg1);
    public static Rect_ParseDelegate _Rect_Parse;
    public static IntPtr Rect_Parse(string jarg1)
    {
        IntPtr ret = _Rect_Parse(jarg1);

        return ret;
    }

    public delegate bool Rect_TryParseDelegate(string jarg1, HandleRef jarg2);
    public static Rect_TryParseDelegate _Rect_TryParse;
    public static bool Rect_TryParse(string jarg1, HandleRef jarg2)
    {
        bool ret = _Rect_TryParse(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr Rect_EmptyDelegate();
    public static Rect_EmptyDelegate _Rect_Empty;
    public static IntPtr Rect_Empty()
    {
        IntPtr ret = _Rect_Empty();

        return ret;
    }

    public delegate IntPtr Rect_InfiniteDelegate();
    public static Rect_InfiniteDelegate _Rect_Infinite;
    public static IntPtr Rect_Infinite()
    {
        IntPtr ret = _Rect_Infinite();

        return ret;
    }

    public delegate void delete_RectDelegate(HandleRef jarg1);
    public static delete_RectDelegate _delete_Rect;
    public static void delete_Rect(HandleRef jarg1)
    {
        _delete_Rect(jarg1);
    }

    public delegate void Recti_x_setDelegate(HandleRef jarg1, int jarg2);
    public static Recti_x_setDelegate _Recti_x_set;
    public static void Recti_x_set(HandleRef jarg1, int jarg2)
    {
        _Recti_x_set(jarg1, jarg2);
    }

    public delegate int Recti_x_getDelegate(HandleRef jarg1);
    public static Recti_x_getDelegate _Recti_x_get;
    public static int Recti_x_get(HandleRef jarg1)
    {
        int ret = _Recti_x_get(jarg1);

        return ret;
    }

    public delegate void Recti_y_setDelegate(HandleRef jarg1, int jarg2);
    public static Recti_y_setDelegate _Recti_y_set;
    public static void Recti_y_set(HandleRef jarg1, int jarg2)
    {
        _Recti_y_set(jarg1, jarg2);
    }

    public delegate int Recti_y_getDelegate(HandleRef jarg1);
    public static Recti_y_getDelegate _Recti_y_get;
    public static int Recti_y_get(HandleRef jarg1)
    {
        int ret = _Recti_y_get(jarg1);

        return ret;
    }

    public delegate void Recti_width_setDelegate(HandleRef jarg1, int jarg2);
    public static Recti_width_setDelegate _Recti_width_set;
    public static void Recti_width_set(HandleRef jarg1, int jarg2)
    {
        _Recti_width_set(jarg1, jarg2);
    }

    public delegate int Recti_width_getDelegate(HandleRef jarg1);
    public static Recti_width_getDelegate _Recti_width_get;
    public static int Recti_width_get(HandleRef jarg1)
    {
        int ret = _Recti_width_get(jarg1);

        return ret;
    }

    public delegate void Recti_height_setDelegate(HandleRef jarg1, int jarg2);
    public static Recti_height_setDelegate _Recti_height_set;
    public static void Recti_height_set(HandleRef jarg1, int jarg2)
    {
        _Recti_height_set(jarg1, jarg2);
    }

    public delegate int Recti_height_getDelegate(HandleRef jarg1);
    public static Recti_height_getDelegate _Recti_height_get;
    public static int Recti_height_get(HandleRef jarg1)
    {
        int ret = _Recti_height_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_Recti__SWIG_0Delegate(int jarg1, int jarg2, int jarg3, int jarg4);
    public static new_Recti__SWIG_0Delegate _new_Recti__SWIG_0;
    public static IntPtr new_Recti__SWIG_0(int jarg1, int jarg2, int jarg3, int jarg4)
    {
        IntPtr ret = _new_Recti__SWIG_0(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr new_Recti__SWIG_1Delegate(int jarg1, int jarg2, int jarg3);
    public static new_Recti__SWIG_1Delegate _new_Recti__SWIG_1;
    public static IntPtr new_Recti__SWIG_1(int jarg1, int jarg2, int jarg3)
    {
        IntPtr ret = _new_Recti__SWIG_1(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr new_Recti__SWIG_2Delegate(int jarg1, int jarg2);
    public static new_Recti__SWIG_2Delegate _new_Recti__SWIG_2;
    public static IntPtr new_Recti__SWIG_2(int jarg1, int jarg2)
    {
        IntPtr ret = _new_Recti__SWIG_2(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_Recti__SWIG_3Delegate(int jarg1);
    public static new_Recti__SWIG_3Delegate _new_Recti__SWIG_3;
    public static IntPtr new_Recti__SWIG_3(int jarg1)
    {
        IntPtr ret = _new_Recti__SWIG_3(jarg1);

        return ret;
    }

    public delegate IntPtr new_Recti__SWIG_4Delegate();
    public static new_Recti__SWIG_4Delegate _new_Recti__SWIG_4;
    public static IntPtr new_Recti__SWIG_4()
    {
        IntPtr ret = _new_Recti__SWIG_4();

        return ret;
    }

    public delegate IntPtr new_Recti__SWIG_5Delegate(HandleRef jarg1);
    public static new_Recti__SWIG_5Delegate _new_Recti__SWIG_5;
    public static IntPtr new_Recti__SWIG_5(HandleRef jarg1)
    {
        IntPtr ret = _new_Recti__SWIG_5(jarg1);

        return ret;
    }

    public delegate IntPtr new_Recti__SWIG_6Delegate(HandleRef jarg1, HandleRef jarg2);
    public static new_Recti__SWIG_6Delegate _new_Recti__SWIG_6;
    public static IntPtr new_Recti__SWIG_6(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_Recti__SWIG_6(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_Recti__SWIG_7Delegate(HandleRef jarg1);
    public static new_Recti__SWIG_7Delegate _new_Recti__SWIG_7;
    public static IntPtr new_Recti__SWIG_7(HandleRef jarg1)
    {
        IntPtr ret = _new_Recti__SWIG_7(jarg1);

        return ret;
    }

    public delegate IntPtr Recti_GetLocationDelegate(HandleRef jarg1);
    public static Recti_GetLocationDelegate _Recti_GetLocation;
    public static IntPtr Recti_GetLocation(HandleRef jarg1)
    {
        IntPtr ret = _Recti_GetLocation(jarg1);

        return ret;
    }

    public delegate void Recti_SetLocationDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Recti_SetLocationDelegate _Recti_SetLocation;
    public static void Recti_SetLocation(HandleRef jarg1, HandleRef jarg2)
    {
        _Recti_SetLocation(jarg1, jarg2);
    }

    public delegate IntPtr Recti_GetSizeDelegate(HandleRef jarg1);
    public static Recti_GetSizeDelegate _Recti_GetSize;
    public static IntPtr Recti_GetSize(HandleRef jarg1)
    {
        IntPtr ret = _Recti_GetSize(jarg1);

        return ret;
    }

    public delegate void Recti_SetSizeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Recti_SetSizeDelegate _Recti_SetSize;
    public static void Recti_SetSize(HandleRef jarg1, HandleRef jarg2)
    {
        _Recti_SetSize(jarg1, jarg2);
    }

    public delegate int Recti_GetLeftDelegate(HandleRef jarg1);
    public static Recti_GetLeftDelegate _Recti_GetLeft;
    public static int Recti_GetLeft(HandleRef jarg1)
    {
        int ret = _Recti_GetLeft(jarg1);

        return ret;
    }

    public delegate int Recti_GetRightDelegate(HandleRef jarg1);
    public static Recti_GetRightDelegate _Recti_GetRight;
    public static int Recti_GetRight(HandleRef jarg1)
    {
        int ret = _Recti_GetRight(jarg1);

        return ret;
    }

    public delegate int Recti_GetTopDelegate(HandleRef jarg1);
    public static Recti_GetTopDelegate _Recti_GetTop;
    public static int Recti_GetTop(HandleRef jarg1)
    {
        int ret = _Recti_GetTop(jarg1);

        return ret;
    }

    public delegate int Recti_GetBottomDelegate(HandleRef jarg1);
    public static Recti_GetBottomDelegate _Recti_GetBottom;
    public static int Recti_GetBottom(HandleRef jarg1)
    {
        int ret = _Recti_GetBottom(jarg1);

        return ret;
    }

    public delegate IntPtr Recti_GetTopLeftDelegate(HandleRef jarg1);
    public static Recti_GetTopLeftDelegate _Recti_GetTopLeft;
    public static IntPtr Recti_GetTopLeft(HandleRef jarg1)
    {
        IntPtr ret = _Recti_GetTopLeft(jarg1);

        return ret;
    }

    public delegate IntPtr Recti_GetTopRightDelegate(HandleRef jarg1);
    public static Recti_GetTopRightDelegate _Recti_GetTopRight;
    public static IntPtr Recti_GetTopRight(HandleRef jarg1)
    {
        IntPtr ret = _Recti_GetTopRight(jarg1);

        return ret;
    }

    public delegate IntPtr Recti_GetBottomLeftDelegate(HandleRef jarg1);
    public static Recti_GetBottomLeftDelegate _Recti_GetBottomLeft;
    public static IntPtr Recti_GetBottomLeft(HandleRef jarg1)
    {
        IntPtr ret = _Recti_GetBottomLeft(jarg1);

        return ret;
    }

    public delegate IntPtr Recti_GetBottomRightDelegate(HandleRef jarg1);
    public static Recti_GetBottomRightDelegate _Recti_GetBottomRight;
    public static IntPtr Recti_GetBottomRight(HandleRef jarg1)
    {
        IntPtr ret = _Recti_GetBottomRight(jarg1);

        return ret;
    }

    public delegate bool Recti_IsEmptyDelegate(HandleRef jarg1);
    public static Recti_IsEmptyDelegate _Recti_IsEmpty;
    public static bool Recti_IsEmpty(HandleRef jarg1)
    {
        bool ret = _Recti_IsEmpty(jarg1);

        return ret;
    }

    public delegate bool Recti_Contains__SWIG_0Delegate(HandleRef jarg1, int jarg2, int jarg3);
    public static Recti_Contains__SWIG_0Delegate _Recti_Contains__SWIG_0;
    public static bool Recti_Contains__SWIG_0(HandleRef jarg1, int jarg2, int jarg3)
    {
        bool ret = _Recti_Contains__SWIG_0(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate bool Recti_Contains__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static Recti_Contains__SWIG_1Delegate _Recti_Contains__SWIG_1;
    public static bool Recti_Contains__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _Recti_Contains__SWIG_1(jarg1, jarg2);

        return ret;
    }

    public delegate bool Recti_Contains__SWIG_2Delegate(HandleRef jarg1, HandleRef jarg2);
    public static Recti_Contains__SWIG_2Delegate _Recti_Contains__SWIG_2;
    public static bool Recti_Contains__SWIG_2(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _Recti_Contains__SWIG_2(jarg1, jarg2);

        return ret;
    }

    public delegate void Recti_Inflate__SWIG_0Delegate(HandleRef jarg1, int jarg2, int jarg3);
    public static Recti_Inflate__SWIG_0Delegate _Recti_Inflate__SWIG_0;
    public static void Recti_Inflate__SWIG_0(HandleRef jarg1, int jarg2, int jarg3)
    {
        _Recti_Inflate__SWIG_0(jarg1, jarg2, jarg3);
    }

    public delegate void Recti_Inflate__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static Recti_Inflate__SWIG_1Delegate _Recti_Inflate__SWIG_1;
    public static void Recti_Inflate__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        _Recti_Inflate__SWIG_1(jarg1, jarg2);
    }

    public delegate IntPtr Recti_IntersectDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Recti_IntersectDelegate _Recti_Intersect;
    public static IntPtr Recti_Intersect(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _Recti_Intersect(jarg1, jarg2);

        return ret;
    }

    public delegate bool Recti_IntersectsWithDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Recti_IntersectsWithDelegate _Recti_IntersectsWith;
    public static bool Recti_IntersectsWith(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _Recti_IntersectsWith(jarg1, jarg2);

        return ret;
    }

    public delegate void Recti_OffsetDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Recti_OffsetDelegate _Recti_Offset;
    public static void Recti_Offset(HandleRef jarg1, HandleRef jarg2)
    {
        _Recti_Offset(jarg1, jarg2);
    }

    public delegate void Recti_ScaleDelegate(HandleRef jarg1, int jarg2, int jarg3);
    public static Recti_ScaleDelegate _Recti_Scale;
    public static void Recti_Scale(HandleRef jarg1, int jarg2, int jarg3)
    {
        _Recti_Scale(jarg1, jarg2, jarg3);
    }

    public delegate void Recti_Expand__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2);
    public static Recti_Expand__SWIG_0Delegate _Recti_Expand__SWIG_0;
    public static void Recti_Expand__SWIG_0(HandleRef jarg1, HandleRef jarg2)
    {
        _Recti_Expand__SWIG_0(jarg1, jarg2);
    }

    public delegate void Recti_Expand__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static Recti_Expand__SWIG_1Delegate _Recti_Expand__SWIG_1;
    public static void Recti_Expand__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        _Recti_Expand__SWIG_1(jarg1, jarg2);
    }

    public delegate IntPtr Recti_ParseDelegate(string jarg1);
    public static Recti_ParseDelegate _Recti_Parse;
    public static IntPtr Recti_Parse(string jarg1)
    {
        IntPtr ret = _Recti_Parse(jarg1);

        return ret;
    }

    public delegate bool Recti_TryParseDelegate(string jarg1, HandleRef jarg2);
    public static Recti_TryParseDelegate _Recti_TryParse;
    public static bool Recti_TryParse(string jarg1, HandleRef jarg2)
    {
        bool ret = _Recti_TryParse(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr Recti_EmptyDelegate();
    public static Recti_EmptyDelegate _Recti_Empty;
    public static IntPtr Recti_Empty()
    {
        IntPtr ret = _Recti_Empty();

        return ret;
    }

    public delegate IntPtr Recti_InfiniteDelegate();
    public static Recti_InfiniteDelegate _Recti_Infinite;
    public static IntPtr Recti_Infinite()
    {
        IntPtr ret = _Recti_Infinite();

        return ret;
    }

    public delegate void delete_RectiDelegate(HandleRef jarg1);
    public static delete_RectiDelegate _delete_Recti;
    public static void delete_Recti(HandleRef jarg1)
    {
        _delete_Recti(jarg1);
    }

    public delegate void Thickness_left_setDelegate(HandleRef jarg1, float jarg2);
    public static Thickness_left_setDelegate _Thickness_left_set;
    public static void Thickness_left_set(HandleRef jarg1, float jarg2)
    {
        _Thickness_left_set(jarg1, jarg2);
    }

    public delegate float Thickness_left_getDelegate(HandleRef jarg1);
    public static Thickness_left_getDelegate _Thickness_left_get;
    public static float Thickness_left_get(HandleRef jarg1)
    {
        float ret = _Thickness_left_get(jarg1);

        return ret;
    }

    public delegate void Thickness_top_setDelegate(HandleRef jarg1, float jarg2);
    public static Thickness_top_setDelegate _Thickness_top_set;
    public static void Thickness_top_set(HandleRef jarg1, float jarg2)
    {
        _Thickness_top_set(jarg1, jarg2);
    }

    public delegate float Thickness_top_getDelegate(HandleRef jarg1);
    public static Thickness_top_getDelegate _Thickness_top_get;
    public static float Thickness_top_get(HandleRef jarg1)
    {
        float ret = _Thickness_top_get(jarg1);

        return ret;
    }

    public delegate void Thickness_right_setDelegate(HandleRef jarg1, float jarg2);
    public static Thickness_right_setDelegate _Thickness_right_set;
    public static void Thickness_right_set(HandleRef jarg1, float jarg2)
    {
        _Thickness_right_set(jarg1, jarg2);
    }

    public delegate float Thickness_right_getDelegate(HandleRef jarg1);
    public static Thickness_right_getDelegate _Thickness_right_get;
    public static float Thickness_right_get(HandleRef jarg1)
    {
        float ret = _Thickness_right_get(jarg1);

        return ret;
    }

    public delegate void Thickness_bottom_setDelegate(HandleRef jarg1, float jarg2);
    public static Thickness_bottom_setDelegate _Thickness_bottom_set;
    public static void Thickness_bottom_set(HandleRef jarg1, float jarg2)
    {
        _Thickness_bottom_set(jarg1, jarg2);
    }

    public delegate float Thickness_bottom_getDelegate(HandleRef jarg1);
    public static Thickness_bottom_getDelegate _Thickness_bottom_get;
    public static float Thickness_bottom_get(HandleRef jarg1)
    {
        float ret = _Thickness_bottom_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_Thickness__SWIG_0Delegate(float jarg1);
    public static new_Thickness__SWIG_0Delegate _new_Thickness__SWIG_0;
    public static IntPtr new_Thickness__SWIG_0(float jarg1)
    {
        IntPtr ret = _new_Thickness__SWIG_0(jarg1);

        return ret;
    }

    public delegate IntPtr new_Thickness__SWIG_1Delegate();
    public static new_Thickness__SWIG_1Delegate _new_Thickness__SWIG_1;
    public static IntPtr new_Thickness__SWIG_1()
    {
        IntPtr ret = _new_Thickness__SWIG_1();

        return ret;
    }

    public delegate IntPtr new_Thickness__SWIG_2Delegate(float jarg1, float jarg2, float jarg3, float jarg4);
    public static new_Thickness__SWIG_2Delegate _new_Thickness__SWIG_2;
    public static IntPtr new_Thickness__SWIG_2(float jarg1, float jarg2, float jarg3, float jarg4)
    {
        IntPtr ret = _new_Thickness__SWIG_2(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr new_Thickness__SWIG_3Delegate(HandleRef jarg1);
    public static new_Thickness__SWIG_3Delegate _new_Thickness__SWIG_3;
    public static IntPtr new_Thickness__SWIG_3(HandleRef jarg1)
    {
        IntPtr ret = _new_Thickness__SWIG_3(jarg1);

        return ret;
    }

    public delegate IntPtr Thickness_ParseDelegate(string jarg1);
    public static Thickness_ParseDelegate _Thickness_Parse;
    public static IntPtr Thickness_Parse(string jarg1)
    {
        IntPtr ret = _Thickness_Parse(jarg1);

        return ret;
    }

    public delegate bool Thickness_TryParseDelegate(string jarg1, HandleRef jarg2);
    public static Thickness_TryParseDelegate _Thickness_TryParse;
    public static bool Thickness_TryParse(string jarg1, HandleRef jarg2)
    {
        bool ret = _Thickness_TryParse(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_ThicknessDelegate(HandleRef jarg1);
    public static delete_ThicknessDelegate _delete_Thickness;
    public static void delete_Thickness(HandleRef jarg1)
    {
        _delete_Thickness(jarg1);
    }

    public delegate void CornerRadius_topLeft_setDelegate(HandleRef jarg1, float jarg2);
    public static CornerRadius_topLeft_setDelegate _CornerRadius_topLeft_set;
    public static void CornerRadius_topLeft_set(HandleRef jarg1, float jarg2)
    {
        _CornerRadius_topLeft_set(jarg1, jarg2);
    }

    public delegate float CornerRadius_topLeft_getDelegate(HandleRef jarg1);
    public static CornerRadius_topLeft_getDelegate _CornerRadius_topLeft_get;
    public static float CornerRadius_topLeft_get(HandleRef jarg1)
    {
        float ret = _CornerRadius_topLeft_get(jarg1);

        return ret;
    }

    public delegate void CornerRadius_topRight_setDelegate(HandleRef jarg1, float jarg2);
    public static CornerRadius_topRight_setDelegate _CornerRadius_topRight_set;
    public static void CornerRadius_topRight_set(HandleRef jarg1, float jarg2)
    {
        _CornerRadius_topRight_set(jarg1, jarg2);
    }

    public delegate float CornerRadius_topRight_getDelegate(HandleRef jarg1);
    public static CornerRadius_topRight_getDelegate _CornerRadius_topRight_get;
    public static float CornerRadius_topRight_get(HandleRef jarg1)
    {
        float ret = _CornerRadius_topRight_get(jarg1);

        return ret;
    }

    public delegate void CornerRadius_bottomRight_setDelegate(HandleRef jarg1, float jarg2);
    public static CornerRadius_bottomRight_setDelegate _CornerRadius_bottomRight_set;
    public static void CornerRadius_bottomRight_set(HandleRef jarg1, float jarg2)
    {
        _CornerRadius_bottomRight_set(jarg1, jarg2);
    }

    public delegate float CornerRadius_bottomRight_getDelegate(HandleRef jarg1);
    public static CornerRadius_bottomRight_getDelegate _CornerRadius_bottomRight_get;
    public static float CornerRadius_bottomRight_get(HandleRef jarg1)
    {
        float ret = _CornerRadius_bottomRight_get(jarg1);

        return ret;
    }

    public delegate void CornerRadius_bottomLeft_setDelegate(HandleRef jarg1, float jarg2);
    public static CornerRadius_bottomLeft_setDelegate _CornerRadius_bottomLeft_set;
    public static void CornerRadius_bottomLeft_set(HandleRef jarg1, float jarg2)
    {
        _CornerRadius_bottomLeft_set(jarg1, jarg2);
    }

    public delegate float CornerRadius_bottomLeft_getDelegate(HandleRef jarg1);
    public static CornerRadius_bottomLeft_getDelegate _CornerRadius_bottomLeft_get;
    public static float CornerRadius_bottomLeft_get(HandleRef jarg1)
    {
        float ret = _CornerRadius_bottomLeft_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_CornerRadius__SWIG_0Delegate(float jarg1);
    public static new_CornerRadius__SWIG_0Delegate _new_CornerRadius__SWIG_0;
    public static IntPtr new_CornerRadius__SWIG_0(float jarg1)
    {
        IntPtr ret = _new_CornerRadius__SWIG_0(jarg1);

        return ret;
    }

    public delegate IntPtr new_CornerRadius__SWIG_1Delegate();
    public static new_CornerRadius__SWIG_1Delegate _new_CornerRadius__SWIG_1;
    public static IntPtr new_CornerRadius__SWIG_1()
    {
        IntPtr ret = _new_CornerRadius__SWIG_1();

        return ret;
    }

    public delegate IntPtr new_CornerRadius__SWIG_2Delegate(float jarg1, float jarg2, float jarg3, float jarg4);
    public static new_CornerRadius__SWIG_2Delegate _new_CornerRadius__SWIG_2;
    public static IntPtr new_CornerRadius__SWIG_2(float jarg1, float jarg2, float jarg3, float jarg4)
    {
        IntPtr ret = _new_CornerRadius__SWIG_2(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr new_CornerRadius__SWIG_3Delegate(HandleRef jarg1);
    public static new_CornerRadius__SWIG_3Delegate _new_CornerRadius__SWIG_3;
    public static IntPtr new_CornerRadius__SWIG_3(HandleRef jarg1)
    {
        IntPtr ret = _new_CornerRadius__SWIG_3(jarg1);

        return ret;
    }

    public delegate IntPtr CornerRadius_ParseDelegate(string jarg1);
    public static CornerRadius_ParseDelegate _CornerRadius_Parse;
    public static IntPtr CornerRadius_Parse(string jarg1)
    {
        IntPtr ret = _CornerRadius_Parse(jarg1);

        return ret;
    }

    public delegate bool CornerRadius_TryParseDelegate(string jarg1, HandleRef jarg2);
    public static CornerRadius_TryParseDelegate _CornerRadius_TryParse;
    public static bool CornerRadius_TryParse(string jarg1, HandleRef jarg2)
    {
        bool ret = _CornerRadius_TryParse(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_CornerRadiusDelegate(HandleRef jarg1);
    public static delete_CornerRadiusDelegate _delete_CornerRadius;
    public static void delete_CornerRadius(HandleRef jarg1)
    {
        _delete_CornerRadius(jarg1);
    }

    public delegate void delete_DependencyObjectDelegate(HandleRef jarg1);
    public static delete_DependencyObjectDelegate _delete_DependencyObject;
    public static void delete_DependencyObject(HandleRef jarg1)
    {
        _delete_DependencyObject(jarg1);
    }

    public delegate byte DependencyObject_GetValueProviderDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DependencyObject_GetValueProviderDelegate _DependencyObject_GetValueProvider;
    public static byte DependencyObject_GetValueProvider(HandleRef jarg1, HandleRef jarg2)
    {
        byte ret = _DependencyObject_GetValueProvider(jarg1, jarg2);

        return ret;
    }

    public delegate void DependencyObject_ClearLocalValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DependencyObject_ClearLocalValueDelegate _DependencyObject_ClearLocalValue;
    public static void DependencyObject_ClearLocalValue(HandleRef jarg1, HandleRef jarg2)
    {
        _DependencyObject_ClearLocalValue(jarg1, jarg2);
    }

    public delegate void DependencyObject_InvalidateProperty__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, byte jarg3);
    public static DependencyObject_InvalidateProperty__SWIG_0Delegate _DependencyObject_InvalidateProperty__SWIG_0;
    public static void DependencyObject_InvalidateProperty__SWIG_0(HandleRef jarg1, HandleRef jarg2, byte jarg3)
    {
        _DependencyObject_InvalidateProperty__SWIG_0(jarg1, jarg2, jarg3);
    }

    public delegate void DependencyObject_InvalidateProperty__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static DependencyObject_InvalidateProperty__SWIG_1Delegate _DependencyObject_InvalidateProperty__SWIG_1;
    public static void DependencyObject_InvalidateProperty__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        _DependencyObject_InvalidateProperty__SWIG_1(jarg1, jarg2);
    }

    public delegate void DependencyObject_ClearAnimationDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DependencyObject_ClearAnimationDelegate _DependencyObject_ClearAnimation;
    public static void DependencyObject_ClearAnimation(HandleRef jarg1, HandleRef jarg2)
    {
        _DependencyObject_ClearAnimation(jarg1, jarg2);
    }

    public delegate void DependencyObject_CoerceValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DependencyObject_CoerceValueDelegate _DependencyObject_CoerceValue;
    public static void DependencyObject_CoerceValue(HandleRef jarg1, HandleRef jarg2)
    {
        _DependencyObject_CoerceValue(jarg1, jarg2);
    }

    public delegate bool DependencyObject_IsCachedDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static DependencyObject_IsCachedDelegate _DependencyObject_IsCached;
    public static bool DependencyObject_IsCached(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        bool ret = _DependencyObject_IsCached(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate bool DependencyObject_HasAnimatedPropertiesDelegate(HandleRef jarg1);
    public static DependencyObject_HasAnimatedPropertiesDelegate _DependencyObject_HasAnimatedProperties;
    public static bool DependencyObject_HasAnimatedProperties(HandleRef jarg1)
    {
        bool ret = _DependencyObject_HasAnimatedProperties(jarg1);

        return ret;
    }

    public delegate void DependencyPropertyChangedEventArgs_prop_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DependencyPropertyChangedEventArgs_prop_setDelegate _DependencyPropertyChangedEventArgs_prop_set;
    public static void DependencyPropertyChangedEventArgs_prop_set(HandleRef jarg1, HandleRef jarg2)
    {
        _DependencyPropertyChangedEventArgs_prop_set(jarg1, jarg2);
    }

    public delegate IntPtr DependencyPropertyChangedEventArgs_prop_getDelegate(HandleRef jarg1);
    public static DependencyPropertyChangedEventArgs_prop_getDelegate _DependencyPropertyChangedEventArgs_prop_get;
    public static IntPtr DependencyPropertyChangedEventArgs_prop_get(HandleRef jarg1)
    {
        IntPtr ret = _DependencyPropertyChangedEventArgs_prop_get(jarg1);

        return ret;
    }

    public delegate void DependencyPropertyChangedEventArgs_oldValue_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DependencyPropertyChangedEventArgs_oldValue_setDelegate _DependencyPropertyChangedEventArgs_oldValue_set;
    public static void DependencyPropertyChangedEventArgs_oldValue_set(HandleRef jarg1, HandleRef jarg2)
    {
        _DependencyPropertyChangedEventArgs_oldValue_set(jarg1, jarg2);
    }

    public delegate IntPtr DependencyPropertyChangedEventArgs_oldValue_getDelegate(HandleRef jarg1);
    public static DependencyPropertyChangedEventArgs_oldValue_getDelegate _DependencyPropertyChangedEventArgs_oldValue_get;
    public static IntPtr DependencyPropertyChangedEventArgs_oldValue_get(HandleRef jarg1)
    {
        IntPtr ret = _DependencyPropertyChangedEventArgs_oldValue_get(jarg1);

        return ret;
    }

    public delegate void DependencyPropertyChangedEventArgs_newValue_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DependencyPropertyChangedEventArgs_newValue_setDelegate _DependencyPropertyChangedEventArgs_newValue_set;
    public static void DependencyPropertyChangedEventArgs_newValue_set(HandleRef jarg1, HandleRef jarg2)
    {
        _DependencyPropertyChangedEventArgs_newValue_set(jarg1, jarg2);
    }

    public delegate IntPtr DependencyPropertyChangedEventArgs_newValue_getDelegate(HandleRef jarg1);
    public static DependencyPropertyChangedEventArgs_newValue_getDelegate _DependencyPropertyChangedEventArgs_newValue_get;
    public static IntPtr DependencyPropertyChangedEventArgs_newValue_get(HandleRef jarg1)
    {
        IntPtr ret = _DependencyPropertyChangedEventArgs_newValue_get(jarg1);

        return ret;
    }

    public delegate IntPtr DependencyProperty_GetUnsetValueDelegate();
    public static DependencyProperty_GetUnsetValueDelegate _DependencyProperty_GetUnsetValue;
    public static IntPtr DependencyProperty_GetUnsetValue()
    {
        IntPtr ret = _DependencyProperty_GetUnsetValue();

        return ret;
    }

    public delegate IntPtr DependencyProperty_GetNameDelegate(HandleRef jarg1);
    public static DependencyProperty_GetNameDelegate _DependencyProperty_GetName;
    public static IntPtr DependencyProperty_GetName(HandleRef jarg1)
    {
        IntPtr ret = _DependencyProperty_GetName(jarg1);

        return ret;
    }

    public delegate IntPtr DependencyProperty_GetOwnerTypeDelegate(HandleRef jarg1);
    public static DependencyProperty_GetOwnerTypeDelegate _DependencyProperty_GetOwnerType;
    public static IntPtr DependencyProperty_GetOwnerType(HandleRef jarg1)
    {
        IntPtr ret = _DependencyProperty_GetOwnerType(jarg1);

        return ret;
    }

    public delegate IntPtr DependencyProperty_GetDefaultValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DependencyProperty_GetDefaultValueDelegate _DependencyProperty_GetDefaultValue;
    public static IntPtr DependencyProperty_GetDefaultValue(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _DependencyProperty_GetDefaultValue(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr DependencyProperty_GetDefaultValueObjectDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DependencyProperty_GetDefaultValueObjectDelegate _DependencyProperty_GetDefaultValueObject;
    public static IntPtr DependencyProperty_GetDefaultValueObject(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _DependencyProperty_GetDefaultValueObject(jarg1, jarg2);

        return ret;
    }

    public delegate bool DependencyProperty_IsReadOnlyDelegate(HandleRef jarg1);
    public static DependencyProperty_IsReadOnlyDelegate _DependencyProperty_IsReadOnly;
    public static bool DependencyProperty_IsReadOnly(HandleRef jarg1)
    {
        bool ret = _DependencyProperty_IsReadOnly(jarg1);

        return ret;
    }

    public delegate uint DependencyProperty_GetSizeDelegate(HandleRef jarg1);
    public static DependencyProperty_GetSizeDelegate _DependencyProperty_GetSize;
    public static uint DependencyProperty_GetSize(HandleRef jarg1)
    {
        uint ret = _DependencyProperty_GetSize(jarg1);

        return ret;
    }

    public delegate IntPtr DependencyProperty_GetMetaDataDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DependencyProperty_GetMetaDataDelegate _DependencyProperty_GetMetaData;
    public static IntPtr DependencyProperty_GetMetaData(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _DependencyProperty_GetMetaData(jarg1, jarg2);

        return ret;
    }

    public delegate void DependencyProperty_OverrideMetadataDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static DependencyProperty_OverrideMetadataDelegate _DependencyProperty_OverrideMetadata;
    public static void DependencyProperty_OverrideMetadata(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _DependencyProperty_OverrideMetadata(jarg1, jarg2, jarg3);
    }

    public delegate IntPtr DependencyProperty_GetTypePropertyDelegate(HandleRef jarg1);
    public static DependencyProperty_GetTypePropertyDelegate _DependencyProperty_GetTypeProperty;
    public static IntPtr DependencyProperty_GetTypeProperty(HandleRef jarg1)
    {
        IntPtr ret = _DependencyProperty_GetTypeProperty(jarg1);

        return ret;
    }

    public delegate bool DependencyProperty_IsSameValue__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static DependencyProperty_IsSameValue__SWIG_0Delegate _DependencyProperty_IsSameValue__SWIG_0;
    public static bool DependencyProperty_IsSameValue__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        bool ret = _DependencyProperty_IsSameValue__SWIG_0(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate bool DependencyProperty_IsSameValue__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static DependencyProperty_IsSameValue__SWIG_1Delegate _DependencyProperty_IsSameValue__SWIG_1;
    public static bool DependencyProperty_IsSameValue__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        bool ret = _DependencyProperty_IsSameValue__SWIG_1(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate bool DependencyProperty_IsSameValue__SWIG_2Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static DependencyProperty_IsSameValue__SWIG_2Delegate _DependencyProperty_IsSameValue__SWIG_2;
    public static bool DependencyProperty_IsSameValue__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        bool ret = _DependencyProperty_IsSameValue__SWIG_2(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void DependencyProperty_ConstructValueDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static DependencyProperty_ConstructValueDelegate _DependencyProperty_ConstructValue;
    public static void DependencyProperty_ConstructValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _DependencyProperty_ConstructValue(jarg1, jarg2, jarg3);
    }

    public delegate void DependencyProperty_DestroyValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DependencyProperty_DestroyValueDelegate _DependencyProperty_DestroyValue;
    public static void DependencyProperty_DestroyValue(HandleRef jarg1, HandleRef jarg2)
    {
        _DependencyProperty_DestroyValue(jarg1, jarg2);
    }

    public delegate void DependencyProperty_CopyValueDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static DependencyProperty_CopyValueDelegate _DependencyProperty_CopyValue;
    public static void DependencyProperty_CopyValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _DependencyProperty_CopyValue(jarg1, jarg2, jarg3);
    }

    public delegate IntPtr DependencyProperty_GetValue__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2);
    public static DependencyProperty_GetValue__SWIG_0Delegate _DependencyProperty_GetValue__SWIG_0;
    public static IntPtr DependencyProperty_GetValue__SWIG_0(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _DependencyProperty_GetValue__SWIG_0(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr DependencyProperty_GetValueObject__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2);
    public static DependencyProperty_GetValueObject__SWIG_0Delegate _DependencyProperty_GetValueObject__SWIG_0;
    public static IntPtr DependencyProperty_GetValueObject__SWIG_0(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _DependencyProperty_GetValueObject__SWIG_0(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr DependencyProperty_GetValue__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static DependencyProperty_GetValue__SWIG_1Delegate _DependencyProperty_GetValue__SWIG_1;
    public static IntPtr DependencyProperty_GetValue__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _DependencyProperty_GetValue__SWIG_1(jarg1, jarg2);

        return ret;
    }

    public delegate void DependencyProperty_SetValueDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static DependencyProperty_SetValueDelegate _DependencyProperty_SetValue;
    public static void DependencyProperty_SetValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _DependencyProperty_SetValue(jarg1, jarg2, jarg3);
    }

    public delegate IntPtr DependencyProperty_GetValueObject__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static DependencyProperty_GetValueObject__SWIG_1Delegate _DependencyProperty_GetValueObject__SWIG_1;
    public static IntPtr DependencyProperty_GetValueObject__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _DependencyProperty_GetValueObject__SWIG_1(jarg1, jarg2);

        return ret;
    }

    public delegate void DependencyProperty_SetValueObjectDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static DependencyProperty_SetValueObjectDelegate _DependencyProperty_SetValueObject;
    public static void DependencyProperty_SetValueObject(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _DependencyProperty_SetValueObject(jarg1, jarg2, jarg3);
    }

    public delegate void DependencyProperty_SetCurrentValueObjectDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static DependencyProperty_SetCurrentValueObjectDelegate _DependencyProperty_SetCurrentValueObject;
    public static void DependencyProperty_SetCurrentValueObject(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _DependencyProperty_SetCurrentValueObject(jarg1, jarg2, jarg3);
    }

    public delegate IntPtr DependencyProperty_GetBaseValueObjectDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DependencyProperty_GetBaseValueObjectDelegate _DependencyProperty_GetBaseValueObject;
    public static IntPtr DependencyProperty_GetBaseValueObject(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _DependencyProperty_GetBaseValueObject(jarg1, jarg2);

        return ret;
    }

    public delegate void DependencyProperty_SetAnimationObjectDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static DependencyProperty_SetAnimationObjectDelegate _DependencyProperty_SetAnimationObject;
    public static void DependencyProperty_SetAnimationObject(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _DependencyProperty_SetAnimationObject(jarg1, jarg2, jarg3);
    }

    public delegate void DependencyProperty_ClearAnimationDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DependencyProperty_ClearAnimationDelegate _DependencyProperty_ClearAnimation;
    public static void DependencyProperty_ClearAnimation(HandleRef jarg1, HandleRef jarg2)
    {
        _DependencyProperty_ClearAnimation(jarg1, jarg2);
    }

    public delegate void DependencyProperty_CoerceValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DependencyProperty_CoerceValueDelegate _DependencyProperty_CoerceValue;
    public static void DependencyProperty_CoerceValue(HandleRef jarg1, HandleRef jarg2)
    {
        _DependencyProperty_CoerceValue(jarg1, jarg2);
    }

    public delegate IntPtr DependencyProperty_GetSerializerDelegate(HandleRef jarg1);
    public static DependencyProperty_GetSerializerDelegate _DependencyProperty_GetSerializer;
    public static IntPtr DependencyProperty_GetSerializer(HandleRef jarg1)
    {
        IntPtr ret = _DependencyProperty_GetSerializer(jarg1);

        return ret;
    }

    public delegate void DependencyProperty_SetOwnerTypeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DependencyProperty_SetOwnerTypeDelegate _DependencyProperty_SetOwnerType;
    public static void DependencyProperty_SetOwnerType(HandleRef jarg1, HandleRef jarg2)
    {
        _DependencyProperty_SetOwnerType(jarg1, jarg2);
    }

    public delegate void DependencyProperty_SetIsReadOnlyDelegate(HandleRef jarg1, bool jarg2);
    public static DependencyProperty_SetIsReadOnlyDelegate _DependencyProperty_SetIsReadOnly;
    public static void DependencyProperty_SetIsReadOnly(HandleRef jarg1, bool jarg2)
    {
        _DependencyProperty_SetIsReadOnly(jarg1, jarg2);
    }

    public delegate void DependencyProperty_AddMetaData__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2);
    public static DependencyProperty_AddMetaData__SWIG_0Delegate _DependencyProperty_AddMetaData__SWIG_0;
    public static void DependencyProperty_AddMetaData__SWIG_0(HandleRef jarg1, HandleRef jarg2)
    {
        _DependencyProperty_AddMetaData__SWIG_0(jarg1, jarg2);
    }

    public delegate void DependencyProperty_AddMetaData__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static DependencyProperty_AddMetaData__SWIG_1Delegate _DependencyProperty_AddMetaData__SWIG_1;
    public static void DependencyProperty_AddMetaData__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _DependencyProperty_AddMetaData__SWIG_1(jarg1, jarg2, jarg3);
    }

    public delegate void DependencyProperty_SetValidateValueDelegateDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DependencyProperty_SetValidateValueDelegateDelegate _DependencyProperty_SetValidateValueDelegate;
    public static void DependencyProperty_SetValidateValueDelegate(HandleRef jarg1, HandleRef jarg2)
    {
        _DependencyProperty_SetValidateValueDelegate(jarg1, jarg2);
    }

    public delegate IntPtr DependencyProperty_GetValidateValueDelegateDelegate(HandleRef jarg1);
    public static DependencyProperty_GetValidateValueDelegateDelegate _DependencyProperty_GetValidateValueDelegate;
    public static IntPtr DependencyProperty_GetValidateValueDelegate(HandleRef jarg1)
    {
        IntPtr ret = _DependencyProperty_GetValidateValueDelegate(jarg1);

        return ret;
    }

    public delegate void SerializePropertyHelper_dp_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static SerializePropertyHelper_dp_setDelegate _SerializePropertyHelper_dp_set;
    public static void SerializePropertyHelper_dp_set(HandleRef jarg1, HandleRef jarg2)
    {
        _SerializePropertyHelper_dp_set(jarg1, jarg2);
    }

    public delegate IntPtr SerializePropertyHelper_dp_getDelegate(HandleRef jarg1);
    public static SerializePropertyHelper_dp_getDelegate _SerializePropertyHelper_dp_get;
    public static IntPtr SerializePropertyHelper_dp_get(HandleRef jarg1)
    {
        IntPtr ret = _SerializePropertyHelper_dp_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_SerializePropertyHelper__SWIG_0Delegate(HandleRef jarg1);
    public static new_SerializePropertyHelper__SWIG_0Delegate _new_SerializePropertyHelper__SWIG_0;
    public static IntPtr new_SerializePropertyHelper__SWIG_0(HandleRef jarg1)
    {
        IntPtr ret = _new_SerializePropertyHelper__SWIG_0(jarg1);

        return ret;
    }

    public delegate IntPtr new_SerializePropertyHelper__SWIG_1Delegate();
    public static new_SerializePropertyHelper__SWIG_1Delegate _new_SerializePropertyHelper__SWIG_1;
    public static IntPtr new_SerializePropertyHelper__SWIG_1()
    {
        IntPtr ret = _new_SerializePropertyHelper__SWIG_1();

        return ret;
    }

    public delegate void delete_SerializePropertyHelperDelegate(HandleRef jarg1);
    public static delete_SerializePropertyHelperDelegate _delete_SerializePropertyHelper;
    public static void delete_SerializePropertyHelper(HandleRef jarg1)
    {
        _delete_SerializePropertyHelper(jarg1);
    }

    public delegate IntPtr FindDependencyPropertyDelegate(HandleRef jarg1, IntPtr jarg2);
    public static FindDependencyPropertyDelegate _FindDependencyProperty;
    public static IntPtr FindDependencyProperty(HandleRef jarg1, IntPtr jarg2)
    {
        IntPtr ret = _FindDependencyProperty(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_DependencyDataDelegate(HandleRef jarg1);
    public static new_DependencyDataDelegate _new_DependencyData;
    public static IntPtr new_DependencyData(HandleRef jarg1)
    {
        IntPtr ret = _new_DependencyData(jarg1);

        return ret;
    }

    public delegate IntPtr DependencyData_FindPropertyDelegate(HandleRef jarg1, IntPtr jarg2);
    public static DependencyData_FindPropertyDelegate _DependencyData_FindProperty;
    public static IntPtr DependencyData_FindProperty(HandleRef jarg1, IntPtr jarg2)
    {
        IntPtr ret = _DependencyData_FindProperty(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr DependencyData_EnumPropertiesDelegate(HandleRef jarg1);
    public static DependencyData_EnumPropertiesDelegate _DependencyData_EnumProperties;
    public static IntPtr DependencyData_EnumProperties(HandleRef jarg1)
    {
        IntPtr ret = _DependencyData_EnumProperties(jarg1);

        return ret;
    }

    public delegate void delete_DependencyDataDelegate(HandleRef jarg1);
    public static delete_DependencyDataDelegate _delete_DependencyData;
    public static void delete_DependencyData(HandleRef jarg1)
    {
        _delete_DependencyData(jarg1);
    }

    public delegate void delete_FreezableDelegate(HandleRef jarg1);
    public static delete_FreezableDelegate _delete_Freezable;
    public static void delete_Freezable(HandleRef jarg1)
    {
        _delete_Freezable(jarg1);
    }

    public delegate bool Freezable_CanFreezeDelegate(HandleRef jarg1);
    public static Freezable_CanFreezeDelegate _Freezable_CanFreeze;
    public static bool Freezable_CanFreeze(HandleRef jarg1)
    {
        bool ret = _Freezable_CanFreeze(jarg1);

        return ret;
    }

    public delegate bool Freezable_IsFrozenDelegate(HandleRef jarg1);
    public static Freezable_IsFrozenDelegate _Freezable_IsFrozen;
    public static bool Freezable_IsFrozen(HandleRef jarg1)
    {
        bool ret = _Freezable_IsFrozen(jarg1);

        return ret;
    }

    public delegate void Freezable_FreezeDelegate(HandleRef jarg1);
    public static Freezable_FreezeDelegate _Freezable_Freeze;
    public static void Freezable_Freeze(HandleRef jarg1)
    {
        _Freezable_Freeze(jarg1);
    }

    public delegate IntPtr Freezable_CloneDelegate(HandleRef jarg1);
    public static Freezable_CloneDelegate _Freezable_Clone;
    public static IntPtr Freezable_Clone(HandleRef jarg1)
    {
        IntPtr ret = _Freezable_Clone(jarg1);

        return ret;
    }

    public delegate IntPtr Freezable_CloneCurrentValueDelegate(HandleRef jarg1);
    public static Freezable_CloneCurrentValueDelegate _Freezable_CloneCurrentValue;
    public static IntPtr Freezable_CloneCurrentValue(HandleRef jarg1)
    {
        IntPtr ret = _Freezable_CloneCurrentValue(jarg1);

        return ret;
    }

    public delegate IntPtr Freezable_GetAsFrozenDelegate(HandleRef jarg1);
    public static Freezable_GetAsFrozenDelegate _Freezable_GetAsFrozen;
    public static IntPtr Freezable_GetAsFrozen(HandleRef jarg1)
    {
        IntPtr ret = _Freezable_GetAsFrozen(jarg1);

        return ret;
    }

    public delegate IntPtr Freezable_GetCurrentValueAsFrozenDelegate(HandleRef jarg1);
    public static Freezable_GetCurrentValueAsFrozenDelegate _Freezable_GetCurrentValueAsFrozen;
    public static IntPtr Freezable_GetCurrentValueAsFrozen(HandleRef jarg1)
    {
        IntPtr ret = _Freezable_GetCurrentValueAsFrozen(jarg1);

        return ret;
    }

    public delegate IntPtr Freezable_ChangedDelegate(HandleRef jarg1);
    public static Freezable_ChangedDelegate _Freezable_Changed;
    public static IntPtr Freezable_Changed(HandleRef jarg1)
    {
        IntPtr ret = _Freezable_Changed(jarg1);

        return ret;
    }

    public delegate void delete_BaseExpressionDelegate(HandleRef jarg1);
    public static delete_BaseExpressionDelegate _delete_BaseExpression;
    public static void delete_BaseExpression(HandleRef jarg1)
    {
        _delete_BaseExpression(jarg1);
    }

    public delegate int BaseExpression_GetEvaluateBehaviorDelegate(HandleRef jarg1);
    public static BaseExpression_GetEvaluateBehaviorDelegate _BaseExpression_GetEvaluateBehavior;
    public static int BaseExpression_GetEvaluateBehavior(HandleRef jarg1)
    {
        int ret = _BaseExpression_GetEvaluateBehavior(jarg1);

        return ret;
    }

    public delegate IntPtr BaseExpression_EvaluateDelegate(HandleRef jarg1);
    public static BaseExpression_EvaluateDelegate _BaseExpression_Evaluate;
    public static IntPtr BaseExpression_Evaluate(HandleRef jarg1)
    {
        IntPtr ret = _BaseExpression_Evaluate(jarg1);

        return ret;
    }

    public delegate IntPtr BaseExpression_ReapplyDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static BaseExpression_ReapplyDelegate _BaseExpression_Reapply;
    public static IntPtr BaseExpression_Reapply(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        IntPtr ret = _BaseExpression_Reapply(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate int BaseExpression_BeforeSetDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static BaseExpression_BeforeSetDelegate _BaseExpression_BeforeSet;
    public static int BaseExpression_BeforeSet(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        int ret = _BaseExpression_BeforeSet(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate void BaseExpression_AfterSetDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static BaseExpression_AfterSetDelegate _BaseExpression_AfterSet;
    public static void BaseExpression_AfterSet(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        _BaseExpression_AfterSet(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate bool PropertyMetadata_HasDefaultValueDelegate(HandleRef jarg1);
    public static PropertyMetadata_HasDefaultValueDelegate _PropertyMetadata_HasDefaultValue;
    public static bool PropertyMetadata_HasDefaultValue(HandleRef jarg1)
    {
        bool ret = _PropertyMetadata_HasDefaultValue(jarg1);

        return ret;
    }

    public delegate IntPtr PropertyMetadata_GetDefaultValueDelegate(HandleRef jarg1);
    public static PropertyMetadata_GetDefaultValueDelegate _PropertyMetadata_GetDefaultValue;
    public static IntPtr PropertyMetadata_GetDefaultValue(HandleRef jarg1)
    {
        IntPtr ret = _PropertyMetadata_GetDefaultValue(jarg1);

        return ret;
    }

    public delegate bool PropertyMetadata_HasCoerceDelegateDelegate(HandleRef jarg1);
    public static PropertyMetadata_HasCoerceDelegateDelegate _PropertyMetadata_HasCoerceDelegate;
    public static bool PropertyMetadata_HasCoerceDelegate(HandleRef jarg1)
    {
        bool ret = _PropertyMetadata_HasCoerceDelegate(jarg1);

        return ret;
    }

    public delegate IntPtr PropertyMetadata_GetCoerceDelegateDelegate(HandleRef jarg1);
    public static PropertyMetadata_GetCoerceDelegateDelegate _PropertyMetadata_GetCoerceDelegate;
    public static IntPtr PropertyMetadata_GetCoerceDelegate(HandleRef jarg1)
    {
        IntPtr ret = _PropertyMetadata_GetCoerceDelegate(jarg1);

        return ret;
    }

    public delegate bool PropertyMetadata_HasPropertyChangedDelegateDelegate(HandleRef jarg1);
    public static PropertyMetadata_HasPropertyChangedDelegateDelegate _PropertyMetadata_HasPropertyChangedDelegate;
    public static bool PropertyMetadata_HasPropertyChangedDelegate(HandleRef jarg1)
    {
        bool ret = _PropertyMetadata_HasPropertyChangedDelegate(jarg1);

        return ret;
    }

    public delegate IntPtr PropertyMetadata_GetPropertyChangedDelegateDelegate(HandleRef jarg1);
    public static PropertyMetadata_GetPropertyChangedDelegateDelegate _PropertyMetadata_GetPropertyChangedDelegate;
    public static IntPtr PropertyMetadata_GetPropertyChangedDelegate(HandleRef jarg1)
    {
        IntPtr ret = _PropertyMetadata_GetPropertyChangedDelegate(jarg1);

        return ret;
    }

    public delegate bool PropertyMetadata_IsUncachedDelegate(HandleRef jarg1);
    public static PropertyMetadata_IsUncachedDelegate _PropertyMetadata_IsUncached;
    public static bool PropertyMetadata_IsUncached(HandleRef jarg1)
    {
        bool ret = _PropertyMetadata_IsUncached(jarg1);

        return ret;
    }

    public delegate bool PropertyMetadata_UncachedDelegate(HandleRef jarg1);
    public static PropertyMetadata_UncachedDelegate _PropertyMetadata_Uncached;
    public static bool PropertyMetadata_Uncached(HandleRef jarg1)
    {
        bool ret = _PropertyMetadata_Uncached(jarg1);

        return ret;
    }

    public delegate void PropertyMetadata_SetAsUncachedDelegate(HandleRef jarg1);
    public static PropertyMetadata_SetAsUncachedDelegate _PropertyMetadata_SetAsUncached;
    public static void PropertyMetadata_SetAsUncached(HandleRef jarg1)
    {
        _PropertyMetadata_SetAsUncached(jarg1);
    }

    public delegate void PropertyMetadata_ClearInheritedValuesDelegate(HandleRef jarg1);
    public static PropertyMetadata_ClearInheritedValuesDelegate _PropertyMetadata_ClearInheritedValues;
    public static void PropertyMetadata_ClearInheritedValues(HandleRef jarg1)
    {
        _PropertyMetadata_ClearInheritedValues(jarg1);
    }

    public delegate void PropertyMetadata_MergeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static PropertyMetadata_MergeDelegate _PropertyMetadata_Merge;
    public static void PropertyMetadata_Merge(HandleRef jarg1, HandleRef jarg2)
    {
        _PropertyMetadata_Merge(jarg1, jarg2);
    }

    public delegate IntPtr new_UIPropertyMetadata__SWIG_0Delegate();
    public static new_UIPropertyMetadata__SWIG_0Delegate _new_UIPropertyMetadata__SWIG_0;
    public static IntPtr new_UIPropertyMetadata__SWIG_0()
    {
        IntPtr ret = _new_UIPropertyMetadata__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_UIPropertyMetadata__SWIG_1Delegate(HandleRef jarg1);
    public static new_UIPropertyMetadata__SWIG_1Delegate _new_UIPropertyMetadata__SWIG_1;
    public static IntPtr new_UIPropertyMetadata__SWIG_1(HandleRef jarg1)
    {
        IntPtr ret = _new_UIPropertyMetadata__SWIG_1(jarg1);

        return ret;
    }

    public delegate IntPtr new_UIPropertyMetadata__SWIG_2Delegate(HandleRef jarg1);
    public static new_UIPropertyMetadata__SWIG_2Delegate _new_UIPropertyMetadata__SWIG_2;
    public static IntPtr new_UIPropertyMetadata__SWIG_2(HandleRef jarg1)
    {
        IntPtr ret = _new_UIPropertyMetadata__SWIG_2(jarg1);

        return ret;
    }

    public delegate IntPtr new_UIPropertyMetadata__SWIG_3Delegate(HandleRef jarg1);
    public static new_UIPropertyMetadata__SWIG_3Delegate _new_UIPropertyMetadata__SWIG_3;
    public static IntPtr new_UIPropertyMetadata__SWIG_3(HandleRef jarg1)
    {
        IntPtr ret = _new_UIPropertyMetadata__SWIG_3(jarg1);

        return ret;
    }

    public delegate IntPtr new_UIPropertyMetadata__SWIG_4Delegate(HandleRef jarg1, HandleRef jarg2);
    public static new_UIPropertyMetadata__SWIG_4Delegate _new_UIPropertyMetadata__SWIG_4;
    public static IntPtr new_UIPropertyMetadata__SWIG_4(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_UIPropertyMetadata__SWIG_4(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_UIPropertyMetadata__SWIG_5Delegate(HandleRef jarg1, HandleRef jarg2);
    public static new_UIPropertyMetadata__SWIG_5Delegate _new_UIPropertyMetadata__SWIG_5;
    public static IntPtr new_UIPropertyMetadata__SWIG_5(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_UIPropertyMetadata__SWIG_5(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_UIPropertyMetadata__SWIG_6Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static new_UIPropertyMetadata__SWIG_6Delegate _new_UIPropertyMetadata__SWIG_6;
    public static IntPtr new_UIPropertyMetadata__SWIG_6(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        IntPtr ret = _new_UIPropertyMetadata__SWIG_6(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void delete_UIPropertyMetadataDelegate(HandleRef jarg1);
    public static delete_UIPropertyMetadataDelegate _delete_UIPropertyMetadata;
    public static void delete_UIPropertyMetadata(HandleRef jarg1)
    {
        _delete_UIPropertyMetadata(jarg1);
    }

    public delegate IntPtr new_FrameworkPropertyMetadata__SWIG_0Delegate();
    public static new_FrameworkPropertyMetadata__SWIG_0Delegate _new_FrameworkPropertyMetadata__SWIG_0;
    public static IntPtr new_FrameworkPropertyMetadata__SWIG_0()
    {
        IntPtr ret = _new_FrameworkPropertyMetadata__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_FrameworkPropertyMetadata__SWIG_1Delegate(int jarg1);
    public static new_FrameworkPropertyMetadata__SWIG_1Delegate _new_FrameworkPropertyMetadata__SWIG_1;
    public static IntPtr new_FrameworkPropertyMetadata__SWIG_1(int jarg1)
    {
        IntPtr ret = _new_FrameworkPropertyMetadata__SWIG_1(jarg1);

        return ret;
    }

    public delegate IntPtr new_FrameworkPropertyMetadata__SWIG_2Delegate(HandleRef jarg1);
    public static new_FrameworkPropertyMetadata__SWIG_2Delegate _new_FrameworkPropertyMetadata__SWIG_2;
    public static IntPtr new_FrameworkPropertyMetadata__SWIG_2(HandleRef jarg1)
    {
        IntPtr ret = _new_FrameworkPropertyMetadata__SWIG_2(jarg1);

        return ret;
    }

    public delegate IntPtr new_FrameworkPropertyMetadata__SWIG_3Delegate(HandleRef jarg1);
    public static new_FrameworkPropertyMetadata__SWIG_3Delegate _new_FrameworkPropertyMetadata__SWIG_3;
    public static IntPtr new_FrameworkPropertyMetadata__SWIG_3(HandleRef jarg1)
    {
        IntPtr ret = _new_FrameworkPropertyMetadata__SWIG_3(jarg1);

        return ret;
    }

    public delegate IntPtr new_FrameworkPropertyMetadata__SWIG_4Delegate(HandleRef jarg1, HandleRef jarg2);
    public static new_FrameworkPropertyMetadata__SWIG_4Delegate _new_FrameworkPropertyMetadata__SWIG_4;
    public static IntPtr new_FrameworkPropertyMetadata__SWIG_4(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_FrameworkPropertyMetadata__SWIG_4(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_FrameworkPropertyMetadata__SWIG_5Delegate(HandleRef jarg1, HandleRef jarg2);
    public static new_FrameworkPropertyMetadata__SWIG_5Delegate _new_FrameworkPropertyMetadata__SWIG_5;
    public static IntPtr new_FrameworkPropertyMetadata__SWIG_5(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_FrameworkPropertyMetadata__SWIG_5(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_FrameworkPropertyMetadata__SWIG_6Delegate(HandleRef jarg1, int jarg2);
    public static new_FrameworkPropertyMetadata__SWIG_6Delegate _new_FrameworkPropertyMetadata__SWIG_6;
    public static IntPtr new_FrameworkPropertyMetadata__SWIG_6(HandleRef jarg1, int jarg2)
    {
        IntPtr ret = _new_FrameworkPropertyMetadata__SWIG_6(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_FrameworkPropertyMetadata__SWIG_7Delegate(HandleRef jarg1, int jarg2, HandleRef jarg3);
    public static new_FrameworkPropertyMetadata__SWIG_7Delegate _new_FrameworkPropertyMetadata__SWIG_7;
    public static IntPtr new_FrameworkPropertyMetadata__SWIG_7(HandleRef jarg1, int jarg2, HandleRef jarg3)
    {
        IntPtr ret = _new_FrameworkPropertyMetadata__SWIG_7(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr new_FrameworkPropertyMetadata__SWIG_8Delegate(HandleRef jarg1, int jarg2, HandleRef jarg3);
    public static new_FrameworkPropertyMetadata__SWIG_8Delegate _new_FrameworkPropertyMetadata__SWIG_8;
    public static IntPtr new_FrameworkPropertyMetadata__SWIG_8(HandleRef jarg1, int jarg2, HandleRef jarg3)
    {
        IntPtr ret = _new_FrameworkPropertyMetadata__SWIG_8(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr new_FrameworkPropertyMetadata__SWIG_9Delegate(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4);
    public static new_FrameworkPropertyMetadata__SWIG_9Delegate _new_FrameworkPropertyMetadata__SWIG_9;
    public static IntPtr new_FrameworkPropertyMetadata__SWIG_9(HandleRef jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        IntPtr ret = _new_FrameworkPropertyMetadata__SWIG_9(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate bool FrameworkPropertyMetadata_AffectsMeasureDelegate(HandleRef jarg1);
    public static FrameworkPropertyMetadata_AffectsMeasureDelegate _FrameworkPropertyMetadata_AffectsMeasure;
    public static bool FrameworkPropertyMetadata_AffectsMeasure(HandleRef jarg1)
    {
        bool ret = _FrameworkPropertyMetadata_AffectsMeasure(jarg1);

        return ret;
    }

    public delegate bool FrameworkPropertyMetadata_AffectsArrangeDelegate(HandleRef jarg1);
    public static FrameworkPropertyMetadata_AffectsArrangeDelegate _FrameworkPropertyMetadata_AffectsArrange;
    public static bool FrameworkPropertyMetadata_AffectsArrange(HandleRef jarg1)
    {
        bool ret = _FrameworkPropertyMetadata_AffectsArrange(jarg1);

        return ret;
    }

    public delegate bool FrameworkPropertyMetadata_AffectsParentMeasureDelegate(HandleRef jarg1);
    public static FrameworkPropertyMetadata_AffectsParentMeasureDelegate _FrameworkPropertyMetadata_AffectsParentMeasure;
    public static bool FrameworkPropertyMetadata_AffectsParentMeasure(HandleRef jarg1)
    {
        bool ret = _FrameworkPropertyMetadata_AffectsParentMeasure(jarg1);

        return ret;
    }

    public delegate bool FrameworkPropertyMetadata_AffectsParentArrangeDelegate(HandleRef jarg1);
    public static FrameworkPropertyMetadata_AffectsParentArrangeDelegate _FrameworkPropertyMetadata_AffectsParentArrange;
    public static bool FrameworkPropertyMetadata_AffectsParentArrange(HandleRef jarg1)
    {
        bool ret = _FrameworkPropertyMetadata_AffectsParentArrange(jarg1);

        return ret;
    }

    public delegate bool FrameworkPropertyMetadata_AffectsRenderDelegate(HandleRef jarg1);
    public static FrameworkPropertyMetadata_AffectsRenderDelegate _FrameworkPropertyMetadata_AffectsRender;
    public static bool FrameworkPropertyMetadata_AffectsRender(HandleRef jarg1)
    {
        bool ret = _FrameworkPropertyMetadata_AffectsRender(jarg1);

        return ret;
    }

    public delegate bool FrameworkPropertyMetadata_InheritsDelegate(HandleRef jarg1);
    public static FrameworkPropertyMetadata_InheritsDelegate _FrameworkPropertyMetadata_Inherits;
    public static bool FrameworkPropertyMetadata_Inherits(HandleRef jarg1)
    {
        bool ret = _FrameworkPropertyMetadata_Inherits(jarg1);

        return ret;
    }

    public delegate bool FrameworkPropertyMetadata_OverridesInheritanceBehaviorDelegate(HandleRef jarg1);
    public static FrameworkPropertyMetadata_OverridesInheritanceBehaviorDelegate _FrameworkPropertyMetadata_OverridesInheritanceBehavior;
    public static bool FrameworkPropertyMetadata_OverridesInheritanceBehavior(HandleRef jarg1)
    {
        bool ret = _FrameworkPropertyMetadata_OverridesInheritanceBehavior(jarg1);

        return ret;
    }

    public delegate bool FrameworkPropertyMetadata_IsNotDataBindableDelegate(HandleRef jarg1);
    public static FrameworkPropertyMetadata_IsNotDataBindableDelegate _FrameworkPropertyMetadata_IsNotDataBindable;
    public static bool FrameworkPropertyMetadata_IsNotDataBindable(HandleRef jarg1)
    {
        bool ret = _FrameworkPropertyMetadata_IsNotDataBindable(jarg1);

        return ret;
    }

    public delegate bool FrameworkPropertyMetadata_BindsTwoWayByDefaultDelegate(HandleRef jarg1);
    public static FrameworkPropertyMetadata_BindsTwoWayByDefaultDelegate _FrameworkPropertyMetadata_BindsTwoWayByDefault;
    public static bool FrameworkPropertyMetadata_BindsTwoWayByDefault(HandleRef jarg1)
    {
        bool ret = _FrameworkPropertyMetadata_BindsTwoWayByDefault(jarg1);

        return ret;
    }

    public delegate IntPtr FrameworkPropertyMetadata_DefaultUpdateSourceTriggerDelegate(HandleRef jarg1);
    public static FrameworkPropertyMetadata_DefaultUpdateSourceTriggerDelegate _FrameworkPropertyMetadata_DefaultUpdateSourceTrigger;
    public static IntPtr FrameworkPropertyMetadata_DefaultUpdateSourceTrigger(HandleRef jarg1)
    {
        IntPtr ret = _FrameworkPropertyMetadata_DefaultUpdateSourceTrigger(jarg1);

        return ret;
    }

    public delegate bool FrameworkPropertyMetadata_SubPropertiesDoNotAffectRenderDelegate(HandleRef jarg1);
    public static FrameworkPropertyMetadata_SubPropertiesDoNotAffectRenderDelegate _FrameworkPropertyMetadata_SubPropertiesDoNotAffectRender;
    public static bool FrameworkPropertyMetadata_SubPropertiesDoNotAffectRender(HandleRef jarg1)
    {
        bool ret = _FrameworkPropertyMetadata_SubPropertiesDoNotAffectRender(jarg1);

        return ret;
    }

    public delegate void FrameworkPropertyMetadata_ClearInheritedValuesDelegate(HandleRef jarg1);
    public static FrameworkPropertyMetadata_ClearInheritedValuesDelegate _FrameworkPropertyMetadata_ClearInheritedValues;
    public static void FrameworkPropertyMetadata_ClearInheritedValues(HandleRef jarg1)
    {
        _FrameworkPropertyMetadata_ClearInheritedValues(jarg1);
    }

    public delegate void FrameworkPropertyMetadata_MergeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static FrameworkPropertyMetadata_MergeDelegate _FrameworkPropertyMetadata_Merge;
    public static void FrameworkPropertyMetadata_Merge(HandleRef jarg1, HandleRef jarg2)
    {
        _FrameworkPropertyMetadata_Merge(jarg1, jarg2);
    }

    public delegate void delete_FrameworkPropertyMetadataDelegate(HandleRef jarg1);
    public static delete_FrameworkPropertyMetadataDelegate _delete_FrameworkPropertyMetadata;
    public static void delete_FrameworkPropertyMetadata(HandleRef jarg1)
    {
        _delete_FrameworkPropertyMetadata(jarg1);
    }

    public delegate void ObjectWithNameScope__object_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ObjectWithNameScope__object_setDelegate _ObjectWithNameScope__object_set;
    public static void ObjectWithNameScope__object_set(HandleRef jarg1, HandleRef jarg2)
    {
        _ObjectWithNameScope__object_set(jarg1, jarg2);
    }

    public delegate IntPtr ObjectWithNameScope__object_getDelegate(HandleRef jarg1);
    public static ObjectWithNameScope__object_getDelegate _ObjectWithNameScope__object_get;
    public static IntPtr ObjectWithNameScope__object_get(HandleRef jarg1)
    {
        IntPtr ret = _ObjectWithNameScope__object_get(jarg1);

        return ret;
    }

    public delegate void ObjectWithNameScope_scope_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ObjectWithNameScope_scope_setDelegate _ObjectWithNameScope_scope_set;
    public static void ObjectWithNameScope_scope_set(HandleRef jarg1, HandleRef jarg2)
    {
        _ObjectWithNameScope_scope_set(jarg1, jarg2);
    }

    public delegate IntPtr ObjectWithNameScope_scope_getDelegate(HandleRef jarg1);
    public static ObjectWithNameScope_scope_getDelegate _ObjectWithNameScope_scope_get;
    public static IntPtr ObjectWithNameScope_scope_get(HandleRef jarg1)
    {
        IntPtr ret = _ObjectWithNameScope_scope_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_ObjectWithNameScopeDelegate();
    public static new_ObjectWithNameScopeDelegate _new_ObjectWithNameScope;
    public static IntPtr new_ObjectWithNameScope()
    {
        IntPtr ret = _new_ObjectWithNameScope();

        return ret;
    }

    public delegate void delete_ObjectWithNameScopeDelegate(HandleRef jarg1);
    public static delete_ObjectWithNameScopeDelegate _delete_ObjectWithNameScope;
    public static void delete_ObjectWithNameScope(HandleRef jarg1)
    {
        _delete_ObjectWithNameScope(jarg1);
    }

    public delegate void NameScopeChangedArgs_action_setDelegate(HandleRef jarg1, int jarg2);
    public static NameScopeChangedArgs_action_setDelegate _NameScopeChangedArgs_action_set;
    public static void NameScopeChangedArgs_action_set(HandleRef jarg1, int jarg2)
    {
        _NameScopeChangedArgs_action_set(jarg1, jarg2);
    }

    public delegate int NameScopeChangedArgs_action_getDelegate(HandleRef jarg1);
    public static NameScopeChangedArgs_action_getDelegate _NameScopeChangedArgs_action_get;
    public static int NameScopeChangedArgs_action_get(HandleRef jarg1)
    {
        int ret = _NameScopeChangedArgs_action_get(jarg1);

        return ret;
    }

    public delegate void NameScopeChangedArgs_name_setDelegate(HandleRef jarg1, string jarg2);
    public static NameScopeChangedArgs_name_setDelegate _NameScopeChangedArgs_name_set;
    public static void NameScopeChangedArgs_name_set(HandleRef jarg1, string jarg2)
    {
        _NameScopeChangedArgs_name_set(jarg1, jarg2);
    }

    public delegate string NameScopeChangedArgs_name_getDelegate(HandleRef jarg1);
    public static NameScopeChangedArgs_name_getDelegate _NameScopeChangedArgs_name_get;
    public static string NameScopeChangedArgs_name_get(HandleRef jarg1)
    {
        string ret = _NameScopeChangedArgs_name_get(jarg1);

        return ret;
    }

    public delegate void NameScopeChangedArgs_newElement_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static NameScopeChangedArgs_newElement_setDelegate _NameScopeChangedArgs_newElement_set;
    public static void NameScopeChangedArgs_newElement_set(HandleRef jarg1, HandleRef jarg2)
    {
        _NameScopeChangedArgs_newElement_set(jarg1, jarg2);
    }

    public delegate IntPtr NameScopeChangedArgs_newElement_getDelegate(HandleRef jarg1);
    public static NameScopeChangedArgs_newElement_getDelegate _NameScopeChangedArgs_newElement_get;
    public static IntPtr NameScopeChangedArgs_newElement_get(HandleRef jarg1)
    {
        IntPtr ret = _NameScopeChangedArgs_newElement_get(jarg1);

        return ret;
    }

    public delegate void NameScopeChangedArgs_oldElement_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static NameScopeChangedArgs_oldElement_setDelegate _NameScopeChangedArgs_oldElement_set;
    public static void NameScopeChangedArgs_oldElement_set(HandleRef jarg1, HandleRef jarg2)
    {
        _NameScopeChangedArgs_oldElement_set(jarg1, jarg2);
    }

    public delegate IntPtr NameScopeChangedArgs_oldElement_getDelegate(HandleRef jarg1);
    public static NameScopeChangedArgs_oldElement_getDelegate _NameScopeChangedArgs_oldElement_get;
    public static IntPtr NameScopeChangedArgs_oldElement_get(HandleRef jarg1)
    {
        IntPtr ret = _NameScopeChangedArgs_oldElement_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_NameScopeChangedArgsDelegate();
    public static new_NameScopeChangedArgsDelegate _new_NameScopeChangedArgs;
    public static IntPtr new_NameScopeChangedArgs()
    {
        IntPtr ret = _new_NameScopeChangedArgs();

        return ret;
    }

    public delegate void delete_NameScopeChangedArgsDelegate(HandleRef jarg1);
    public static delete_NameScopeChangedArgsDelegate _delete_NameScopeChangedArgs;
    public static void delete_NameScopeChangedArgs(HandleRef jarg1)
    {
        _delete_NameScopeChangedArgs(jarg1);
    }

    public delegate bool BaseNullable_HasValueDelegate(HandleRef jarg1);
    public static BaseNullable_HasValueDelegate _BaseNullable_HasValue;
    public static bool BaseNullable_HasValue(HandleRef jarg1)
    {
        bool ret = _BaseNullable_HasValue(jarg1);

        return ret;
    }

    public delegate void delete_BaseNullableDelegate(HandleRef jarg1);
    public static delete_BaseNullableDelegate _delete_BaseNullable;
    public static void delete_BaseNullable(HandleRef jarg1)
    {
        _delete_BaseNullable(jarg1);
    }

    public delegate void HitTestResult_visualHit_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static HitTestResult_visualHit_setDelegate _HitTestResult_visualHit_set;
    public static void HitTestResult_visualHit_set(HandleRef jarg1, HandleRef jarg2)
    {
        _HitTestResult_visualHit_set(jarg1, jarg2);
    }

    public delegate IntPtr HitTestResult_visualHit_getDelegate(HandleRef jarg1);
    public static HitTestResult_visualHit_getDelegate _HitTestResult_visualHit_get;
    public static IntPtr HitTestResult_visualHit_get(HandleRef jarg1)
    {
        IntPtr ret = _HitTestResult_visualHit_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_HitTestResultDelegate();
    public static new_HitTestResultDelegate _new_HitTestResult;
    public static IntPtr new_HitTestResult()
    {
        IntPtr ret = _new_HitTestResult();

        return ret;
    }

    public delegate void delete_HitTestResultDelegate(HandleRef jarg1);
    public static delete_HitTestResultDelegate _delete_HitTestResult;
    public static void delete_HitTestResult(HandleRef jarg1)
    {
        _delete_HitTestResult(jarg1);
    }

    public delegate void delete_VisualDelegate(HandleRef jarg1);
    public static delete_VisualDelegate _delete_Visual;
    public static void delete_Visual(HandleRef jarg1)
    {
        _delete_Visual(jarg1);
    }

    public delegate bool Visual_IsAncestorOfDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Visual_IsAncestorOfDelegate _Visual_IsAncestorOf;
    public static bool Visual_IsAncestorOf(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _Visual_IsAncestorOf(jarg1, jarg2);

        return ret;
    }

    public delegate bool Visual_IsDescendantOfDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Visual_IsDescendantOfDelegate _Visual_IsDescendantOf;
    public static bool Visual_IsDescendantOf(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _Visual_IsDescendantOf(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr Visual_FindCommonVisualAncestorDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Visual_FindCommonVisualAncestorDelegate _Visual_FindCommonVisualAncestor;
    public static IntPtr Visual_FindCommonVisualAncestor(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _Visual_FindCommonVisualAncestor(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr Visual_PointFromScreenDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Visual_PointFromScreenDelegate _Visual_PointFromScreen;
    public static IntPtr Visual_PointFromScreen(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _Visual_PointFromScreen(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr Visual_PointToScreenDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Visual_PointToScreenDelegate _Visual_PointToScreen;
    public static IntPtr Visual_PointToScreen(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _Visual_PointToScreen(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr Visual_TransformToAncestorDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Visual_TransformToAncestorDelegate _Visual_TransformToAncestor;
    public static IntPtr Visual_TransformToAncestor(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _Visual_TransformToAncestor(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr Visual_TransformToDescendantDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Visual_TransformToDescendantDelegate _Visual_TransformToDescendant;
    public static IntPtr Visual_TransformToDescendant(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _Visual_TransformToDescendant(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr Visual_TransformToVisualDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Visual_TransformToVisualDelegate _Visual_TransformToVisual;
    public static IntPtr Visual_TransformToVisual(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _Visual_TransformToVisual(jarg1, jarg2);

        return ret;
    }

    public delegate void Visual_CollectStatsDelegate(HandleRef jarg1, bool jarg2);
    public static Visual_CollectStatsDelegate _Visual_CollectStats;
    public static void Visual_CollectStats(HandleRef jarg1, bool jarg2)
    {
        _Visual_CollectStats(jarg1, jarg2);
    }

    public delegate void Visual_DrawWireframeDelegate(HandleRef jarg1, bool jarg2);
    public static Visual_DrawWireframeDelegate _Visual_DrawWireframe;
    public static void Visual_DrawWireframe(HandleRef jarg1, bool jarg2)
    {
        _Visual_DrawWireframe(jarg1, jarg2);
    }

    public delegate void CollectionChangedArgs_action_setDelegate(HandleRef jarg1, int jarg2);
    public static CollectionChangedArgs_action_setDelegate _CollectionChangedArgs_action_set;
    public static void CollectionChangedArgs_action_set(HandleRef jarg1, int jarg2)
    {
        _CollectionChangedArgs_action_set(jarg1, jarg2);
    }

    public delegate int CollectionChangedArgs_action_getDelegate(HandleRef jarg1);
    public static CollectionChangedArgs_action_getDelegate _CollectionChangedArgs_action_get;
    public static int CollectionChangedArgs_action_get(HandleRef jarg1)
    {
        int ret = _CollectionChangedArgs_action_get(jarg1);

        return ret;
    }

    public delegate void CollectionChangedArgs_oldIndex_setDelegate(HandleRef jarg1, uint jarg2);
    public static CollectionChangedArgs_oldIndex_setDelegate _CollectionChangedArgs_oldIndex_set;
    public static void CollectionChangedArgs_oldIndex_set(HandleRef jarg1, uint jarg2)
    {
        _CollectionChangedArgs_oldIndex_set(jarg1, jarg2);
    }

    public delegate uint CollectionChangedArgs_oldIndex_getDelegate(HandleRef jarg1);
    public static CollectionChangedArgs_oldIndex_getDelegate _CollectionChangedArgs_oldIndex_get;
    public static uint CollectionChangedArgs_oldIndex_get(HandleRef jarg1)
    {
        uint ret = _CollectionChangedArgs_oldIndex_get(jarg1);

        return ret;
    }

    public delegate void CollectionChangedArgs_newIndex_setDelegate(HandleRef jarg1, uint jarg2);
    public static CollectionChangedArgs_newIndex_setDelegate _CollectionChangedArgs_newIndex_set;
    public static void CollectionChangedArgs_newIndex_set(HandleRef jarg1, uint jarg2)
    {
        _CollectionChangedArgs_newIndex_set(jarg1, jarg2);
    }

    public delegate uint CollectionChangedArgs_newIndex_getDelegate(HandleRef jarg1);
    public static CollectionChangedArgs_newIndex_getDelegate _CollectionChangedArgs_newIndex_get;
    public static uint CollectionChangedArgs_newIndex_get(HandleRef jarg1)
    {
        uint ret = _CollectionChangedArgs_newIndex_get(jarg1);

        return ret;
    }

    public delegate void CollectionChangedArgs_oldValue_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static CollectionChangedArgs_oldValue_setDelegate _CollectionChangedArgs_oldValue_set;
    public static void CollectionChangedArgs_oldValue_set(HandleRef jarg1, HandleRef jarg2)
    {
        _CollectionChangedArgs_oldValue_set(jarg1, jarg2);
    }

    public delegate IntPtr CollectionChangedArgs_oldValue_getDelegate(HandleRef jarg1);
    public static CollectionChangedArgs_oldValue_getDelegate _CollectionChangedArgs_oldValue_get;
    public static IntPtr CollectionChangedArgs_oldValue_get(HandleRef jarg1)
    {
        IntPtr ret = _CollectionChangedArgs_oldValue_get(jarg1);

        return ret;
    }

    public delegate void CollectionChangedArgs_newValue_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static CollectionChangedArgs_newValue_setDelegate _CollectionChangedArgs_newValue_set;
    public static void CollectionChangedArgs_newValue_set(HandleRef jarg1, HandleRef jarg2)
    {
        _CollectionChangedArgs_newValue_set(jarg1, jarg2);
    }

    public delegate IntPtr CollectionChangedArgs_newValue_getDelegate(HandleRef jarg1);
    public static CollectionChangedArgs_newValue_getDelegate _CollectionChangedArgs_newValue_get;
    public static IntPtr CollectionChangedArgs_newValue_get(HandleRef jarg1)
    {
        IntPtr ret = _CollectionChangedArgs_newValue_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_CollectionChangedArgsDelegate(int jarg1, uint jarg2, uint jarg3, HandleRef jarg4, HandleRef jarg5);
    public static new_CollectionChangedArgsDelegate _new_CollectionChangedArgs;
    public static IntPtr new_CollectionChangedArgs(int jarg1, uint jarg2, uint jarg3, HandleRef jarg4, HandleRef jarg5)
    {
        IntPtr ret = _new_CollectionChangedArgs(jarg1, jarg2, jarg3, jarg4, jarg5);

        return ret;
    }

    public delegate void delete_CollectionChangedArgsDelegate(HandleRef jarg1);
    public static delete_CollectionChangedArgsDelegate _delete_CollectionChangedArgs;
    public static void delete_CollectionChangedArgs(HandleRef jarg1)
    {
        _delete_CollectionChangedArgs(jarg1);
    }

    public delegate IntPtr new_Collection__SWIG_0Delegate();
    public static new_Collection__SWIG_0Delegate _new_Collection__SWIG_0;
    public static IntPtr new_Collection__SWIG_0()
    {
        IntPtr ret = _new_Collection__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_Collection__SWIG_1Delegate(HandleRef jarg1);
    public static new_Collection__SWIG_1Delegate _new_Collection__SWIG_1;
    public static IntPtr new_Collection__SWIG_1(HandleRef jarg1)
    {
        IntPtr ret = _new_Collection__SWIG_1(jarg1);

        return ret;
    }

    public delegate void delete_CollectionDelegate(HandleRef jarg1);
    public static delete_CollectionDelegate _delete_Collection;
    public static void delete_Collection(HandleRef jarg1)
    {
        _delete_Collection(jarg1);
    }

    public delegate uint Collection_CountDelegate(HandleRef jarg1);
    public static Collection_CountDelegate _Collection_Count;
    public static uint Collection_Count(HandleRef jarg1)
    {
        uint ret = _Collection_Count(jarg1);

        return ret;
    }

    public delegate IntPtr Collection_GetDelegate(HandleRef jarg1, uint jarg2);
    public static Collection_GetDelegate _Collection_Get;
    public static IntPtr Collection_Get(HandleRef jarg1, uint jarg2)
    {
        IntPtr ret = _Collection_Get(jarg1, jarg2);

        return ret;
    }

    public delegate void Collection_Set__SWIG_0Delegate(HandleRef jarg1, uint jarg2, HandleRef jarg3);
    public static Collection_Set__SWIG_0Delegate _Collection_Set__SWIG_0;
    public static void Collection_Set__SWIG_0(HandleRef jarg1, uint jarg2, HandleRef jarg3)
    {
        _Collection_Set__SWIG_0(jarg1, jarg2, jarg3);
    }

    public delegate void Collection_Set__SWIG_1Delegate(HandleRef jarg1, uint jarg2, string jarg3);
    public static Collection_Set__SWIG_1Delegate _Collection_Set__SWIG_1;
    public static void Collection_Set__SWIG_1(HandleRef jarg1, uint jarg2, string jarg3)
    {
        _Collection_Set__SWIG_1(jarg1, jarg2, jarg3);
    }

    public delegate uint Collection_Add__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2);
    public static Collection_Add__SWIG_0Delegate _Collection_Add__SWIG_0;
    public static uint Collection_Add__SWIG_0(HandleRef jarg1, HandleRef jarg2)
    {
        uint ret = _Collection_Add__SWIG_0(jarg1, jarg2);

        return ret;
    }

    public delegate uint Collection_Add__SWIG_1Delegate(HandleRef jarg1, string jarg2);
    public static Collection_Add__SWIG_1Delegate _Collection_Add__SWIG_1;
    public static uint Collection_Add__SWIG_1(HandleRef jarg1, string jarg2)
    {
        uint ret = _Collection_Add__SWIG_1(jarg1, jarg2);

        return ret;
    }

    public delegate void Collection_ClearDelegate(HandleRef jarg1);
    public static Collection_ClearDelegate _Collection_Clear;
    public static void Collection_Clear(HandleRef jarg1)
    {
        _Collection_Clear(jarg1);
    }

    public delegate bool Collection_ContainsDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Collection_ContainsDelegate _Collection_Contains;
    public static bool Collection_Contains(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _Collection_Contains(jarg1, jarg2);

        return ret;
    }

    public delegate int Collection_IndexOfDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Collection_IndexOfDelegate _Collection_IndexOf;
    public static int Collection_IndexOf(HandleRef jarg1, HandleRef jarg2)
    {
        int ret = _Collection_IndexOf(jarg1, jarg2);

        return ret;
    }

    public delegate void Collection_Insert__SWIG_0Delegate(HandleRef jarg1, uint jarg2, HandleRef jarg3);
    public static Collection_Insert__SWIG_0Delegate _Collection_Insert__SWIG_0;
    public static void Collection_Insert__SWIG_0(HandleRef jarg1, uint jarg2, HandleRef jarg3)
    {
        _Collection_Insert__SWIG_0(jarg1, jarg2, jarg3);
    }

    public delegate void Collection_Insert__SWIG_1Delegate(HandleRef jarg1, uint jarg2, string jarg3);
    public static Collection_Insert__SWIG_1Delegate _Collection_Insert__SWIG_1;
    public static void Collection_Insert__SWIG_1(HandleRef jarg1, uint jarg2, string jarg3)
    {
        _Collection_Insert__SWIG_1(jarg1, jarg2, jarg3);
    }

    public delegate void Collection_RemoveDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Collection_RemoveDelegate _Collection_Remove;
    public static void Collection_Remove(HandleRef jarg1, HandleRef jarg2)
    {
        _Collection_Remove(jarg1, jarg2);
    }

    public delegate void Collection_RemoveAtDelegate(HandleRef jarg1, uint jarg2);
    public static Collection_RemoveAtDelegate _Collection_RemoveAt;
    public static void Collection_RemoveAt(HandleRef jarg1, uint jarg2)
    {
        _Collection_RemoveAt(jarg1, jarg2);
    }

    public delegate IntPtr Collection_GetIteratorDelegate(HandleRef jarg1);
    public static Collection_GetIteratorDelegate _Collection_GetIterator;
    public static IntPtr Collection_GetIterator(HandleRef jarg1)
    {
        IntPtr ret = _Collection_GetIterator(jarg1);

        return ret;
    }

    public delegate IntPtr Collection_CollectionChangedDelegate(HandleRef jarg1);
    public static Collection_CollectionChangedDelegate _Collection_CollectionChanged;
    public static IntPtr Collection_CollectionChanged(HandleRef jarg1)
    {
        IntPtr ret = _Collection_CollectionChanged(jarg1);

        return ret;
    }

    public delegate bool Collection_IsInitializedDelegate(HandleRef jarg1);
    public static Collection_IsInitializedDelegate _Collection_IsInitialized;
    public static bool Collection_IsInitialized(HandleRef jarg1)
    {
        bool ret = _Collection_IsInitialized(jarg1);

        return ret;
    }

    public delegate void Collection_InitDelegate(HandleRef jarg1);
    public static Collection_InitDelegate _Collection_Init;
    public static void Collection_Init(HandleRef jarg1)
    {
        _Collection_Init(jarg1);
    }

    public delegate IntPtr IdOfTypedCollectionDelegate(HandleRef jarg1);
    public static IdOfTypedCollectionDelegate _IdOfTypedCollection;
    public static IntPtr IdOfTypedCollection(HandleRef jarg1)
    {
        IntPtr ret = _IdOfTypedCollection(jarg1);

        return ret;
    }

    public delegate IntPtr new_VisualCollection__SWIG_0Delegate();
    public static new_VisualCollection__SWIG_0Delegate _new_VisualCollection__SWIG_0;
    public static IntPtr new_VisualCollection__SWIG_0()
    {
        IntPtr ret = _new_VisualCollection__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_VisualCollection__SWIG_1Delegate(HandleRef jarg1);
    public static new_VisualCollection__SWIG_1Delegate _new_VisualCollection__SWIG_1;
    public static IntPtr new_VisualCollection__SWIG_1(HandleRef jarg1)
    {
        IntPtr ret = _new_VisualCollection__SWIG_1(jarg1);

        return ret;
    }

    public delegate void delete_VisualCollectionDelegate(HandleRef jarg1);
    public static delete_VisualCollectionDelegate _delete_VisualCollection;
    public static void delete_VisualCollection(HandleRef jarg1)
    {
        _delete_VisualCollection(jarg1);
    }

    public delegate void VisualCollection_SetVisualParentDelegate(HandleRef jarg1, HandleRef jarg2);
    public static VisualCollection_SetVisualParentDelegate _VisualCollection_SetVisualParent;
    public static void VisualCollection_SetVisualParent(HandleRef jarg1, HandleRef jarg2)
    {
        _VisualCollection_SetVisualParent(jarg1, jarg2);
    }

    public delegate IntPtr new_UIElementDelegate();
    public static new_UIElementDelegate _new_UIElement;
    public static IntPtr new_UIElement()
    {
        IntPtr ret = _new_UIElement();

        return ret;
    }

    public delegate void delete_UIElementDelegate(HandleRef jarg1);
    public static delete_UIElementDelegate _delete_UIElement;
    public static void delete_UIElement(HandleRef jarg1)
    {
        _delete_UIElement(jarg1);
    }

    public delegate bool UIElement_GetAllowDropDelegate(HandleRef jarg1);
    public static UIElement_GetAllowDropDelegate _UIElement_GetAllowDrop;
    public static bool UIElement_GetAllowDrop(HandleRef jarg1)
    {
        bool ret = _UIElement_GetAllowDrop(jarg1);

        return ret;
    }

    public delegate void UIElement_SetAllowDropDelegate(HandleRef jarg1, bool jarg2);
    public static UIElement_SetAllowDropDelegate _UIElement_SetAllowDrop;
    public static void UIElement_SetAllowDrop(HandleRef jarg1, bool jarg2)
    {
        _UIElement_SetAllowDrop(jarg1, jarg2);
    }

    public delegate IntPtr UIElement_GetClipDelegate(HandleRef jarg1);
    public static UIElement_GetClipDelegate _UIElement_GetClip;
    public static IntPtr UIElement_GetClip(HandleRef jarg1)
    {
        IntPtr ret = _UIElement_GetClip(jarg1);

        return ret;
    }

    public delegate void UIElement_SetClipDelegate(HandleRef jarg1, HandleRef jarg2);
    public static UIElement_SetClipDelegate _UIElement_SetClip;
    public static void UIElement_SetClip(HandleRef jarg1, HandleRef jarg2)
    {
        _UIElement_SetClip(jarg1, jarg2);
    }

    public delegate bool UIElement_GetClipToBoundsDelegate(HandleRef jarg1);
    public static UIElement_GetClipToBoundsDelegate _UIElement_GetClipToBounds;
    public static bool UIElement_GetClipToBounds(HandleRef jarg1)
    {
        bool ret = _UIElement_GetClipToBounds(jarg1);

        return ret;
    }

    public delegate void UIElement_SetClipToBoundsDelegate(HandleRef jarg1, bool jarg2);
    public static UIElement_SetClipToBoundsDelegate _UIElement_SetClipToBounds;
    public static void UIElement_SetClipToBounds(HandleRef jarg1, bool jarg2)
    {
        _UIElement_SetClipToBounds(jarg1, jarg2);
    }

    public delegate bool UIElement_GetFocusableDelegate(HandleRef jarg1);
    public static UIElement_GetFocusableDelegate _UIElement_GetFocusable;
    public static bool UIElement_GetFocusable(HandleRef jarg1)
    {
        bool ret = _UIElement_GetFocusable(jarg1);

        return ret;
    }

    public delegate void UIElement_SetFocusableDelegate(HandleRef jarg1, bool jarg2);
    public static UIElement_SetFocusableDelegate _UIElement_SetFocusable;
    public static void UIElement_SetFocusable(HandleRef jarg1, bool jarg2)
    {
        _UIElement_SetFocusable(jarg1, jarg2);
    }

    public delegate bool UIElement_GetIsEnabledDelegate(HandleRef jarg1);
    public static UIElement_GetIsEnabledDelegate _UIElement_GetIsEnabled;
    public static bool UIElement_GetIsEnabled(HandleRef jarg1)
    {
        bool ret = _UIElement_GetIsEnabled(jarg1);

        return ret;
    }

    public delegate void UIElement_SetIsEnabledDelegate(HandleRef jarg1, bool jarg2);
    public static UIElement_SetIsEnabledDelegate _UIElement_SetIsEnabled;
    public static void UIElement_SetIsEnabled(HandleRef jarg1, bool jarg2)
    {
        _UIElement_SetIsEnabled(jarg1, jarg2);
    }

    public delegate bool UIElement_GetIsFocusedDelegate(HandleRef jarg1);
    public static UIElement_GetIsFocusedDelegate _UIElement_GetIsFocused;
    public static bool UIElement_GetIsFocused(HandleRef jarg1)
    {
        bool ret = _UIElement_GetIsFocused(jarg1);

        return ret;
    }

    public delegate bool UIElement_GetIsHitTestVisibleDelegate(HandleRef jarg1);
    public static UIElement_GetIsHitTestVisibleDelegate _UIElement_GetIsHitTestVisible;
    public static bool UIElement_GetIsHitTestVisible(HandleRef jarg1)
    {
        bool ret = _UIElement_GetIsHitTestVisible(jarg1);

        return ret;
    }

    public delegate void UIElement_SetIsHitTestVisibleDelegate(HandleRef jarg1, bool jarg2);
    public static UIElement_SetIsHitTestVisibleDelegate _UIElement_SetIsHitTestVisible;
    public static void UIElement_SetIsHitTestVisible(HandleRef jarg1, bool jarg2)
    {
        _UIElement_SetIsHitTestVisible(jarg1, jarg2);
    }

    public delegate bool UIElement_GetIsKeyboardFocusedDelegate(HandleRef jarg1);
    public static UIElement_GetIsKeyboardFocusedDelegate _UIElement_GetIsKeyboardFocused;
    public static bool UIElement_GetIsKeyboardFocused(HandleRef jarg1)
    {
        bool ret = _UIElement_GetIsKeyboardFocused(jarg1);

        return ret;
    }

    public delegate bool UIElement_GetIsKeyboardFocusWithinDelegate(HandleRef jarg1);
    public static UIElement_GetIsKeyboardFocusWithinDelegate _UIElement_GetIsKeyboardFocusWithin;
    public static bool UIElement_GetIsKeyboardFocusWithin(HandleRef jarg1)
    {
        bool ret = _UIElement_GetIsKeyboardFocusWithin(jarg1);

        return ret;
    }

    public delegate bool UIElement_GetIsMouseCapturedDelegate(HandleRef jarg1);
    public static UIElement_GetIsMouseCapturedDelegate _UIElement_GetIsMouseCaptured;
    public static bool UIElement_GetIsMouseCaptured(HandleRef jarg1)
    {
        bool ret = _UIElement_GetIsMouseCaptured(jarg1);

        return ret;
    }

    public delegate bool UIElement_GetIsMouseCaptureWithinDelegate(HandleRef jarg1);
    public static UIElement_GetIsMouseCaptureWithinDelegate _UIElement_GetIsMouseCaptureWithin;
    public static bool UIElement_GetIsMouseCaptureWithin(HandleRef jarg1)
    {
        bool ret = _UIElement_GetIsMouseCaptureWithin(jarg1);

        return ret;
    }

    public delegate bool UIElement_GetIsMouseDirectlyOverDelegate(HandleRef jarg1);
    public static UIElement_GetIsMouseDirectlyOverDelegate _UIElement_GetIsMouseDirectlyOver;
    public static bool UIElement_GetIsMouseDirectlyOver(HandleRef jarg1)
    {
        bool ret = _UIElement_GetIsMouseDirectlyOver(jarg1);

        return ret;
    }

    public delegate bool UIElement_GetIsMouseOverDelegate(HandleRef jarg1);
    public static UIElement_GetIsMouseOverDelegate _UIElement_GetIsMouseOver;
    public static bool UIElement_GetIsMouseOver(HandleRef jarg1)
    {
        bool ret = _UIElement_GetIsMouseOver(jarg1);

        return ret;
    }

    public delegate bool UIElement_GetIsVisibleDelegate(HandleRef jarg1);
    public static UIElement_GetIsVisibleDelegate _UIElement_GetIsVisible;
    public static bool UIElement_GetIsVisible(HandleRef jarg1)
    {
        bool ret = _UIElement_GetIsVisible(jarg1);

        return ret;
    }

    public delegate IntPtr UIElement_GetOpacityMaskDelegate(HandleRef jarg1);
    public static UIElement_GetOpacityMaskDelegate _UIElement_GetOpacityMask;
    public static IntPtr UIElement_GetOpacityMask(HandleRef jarg1)
    {
        IntPtr ret = _UIElement_GetOpacityMask(jarg1);

        return ret;
    }

    public delegate void UIElement_SetOpacityMaskDelegate(HandleRef jarg1, HandleRef jarg2);
    public static UIElement_SetOpacityMaskDelegate _UIElement_SetOpacityMask;
    public static void UIElement_SetOpacityMask(HandleRef jarg1, HandleRef jarg2)
    {
        _UIElement_SetOpacityMask(jarg1, jarg2);
    }

    public delegate float UIElement_GetOpacityDelegate(HandleRef jarg1);
    public static UIElement_GetOpacityDelegate _UIElement_GetOpacity;
    public static float UIElement_GetOpacity(HandleRef jarg1)
    {
        float ret = _UIElement_GetOpacity(jarg1);

        return ret;
    }

    public delegate void UIElement_SetOpacityDelegate(HandleRef jarg1, float jarg2);
    public static UIElement_SetOpacityDelegate _UIElement_SetOpacity;
    public static void UIElement_SetOpacity(HandleRef jarg1, float jarg2)
    {
        _UIElement_SetOpacity(jarg1, jarg2);
    }

    public delegate IntPtr UIElement_GetProjectionDelegate(HandleRef jarg1);
    public static UIElement_GetProjectionDelegate _UIElement_GetProjection;
    public static IntPtr UIElement_GetProjection(HandleRef jarg1)
    {
        IntPtr ret = _UIElement_GetProjection(jarg1);

        return ret;
    }

    public delegate void UIElement_SetProjectionDelegate(HandleRef jarg1, HandleRef jarg2);
    public static UIElement_SetProjectionDelegate _UIElement_SetProjection;
    public static void UIElement_SetProjection(HandleRef jarg1, HandleRef jarg2)
    {
        _UIElement_SetProjection(jarg1, jarg2);
    }

    public delegate IntPtr UIElement_GetRenderTransformOriginDelegate(HandleRef jarg1);
    public static UIElement_GetRenderTransformOriginDelegate _UIElement_GetRenderTransformOrigin;
    public static IntPtr UIElement_GetRenderTransformOrigin(HandleRef jarg1)
    {
        IntPtr ret = _UIElement_GetRenderTransformOrigin(jarg1);

        return ret;
    }

    public delegate void UIElement_SetRenderTransformOriginDelegate(HandleRef jarg1, HandleRef jarg2);
    public static UIElement_SetRenderTransformOriginDelegate _UIElement_SetRenderTransformOrigin;
    public static void UIElement_SetRenderTransformOrigin(HandleRef jarg1, HandleRef jarg2)
    {
        _UIElement_SetRenderTransformOrigin(jarg1, jarg2);
    }

    public delegate IntPtr UIElement_GetRenderTransformDelegate(HandleRef jarg1);
    public static UIElement_GetRenderTransformDelegate _UIElement_GetRenderTransform;
    public static IntPtr UIElement_GetRenderTransform(HandleRef jarg1)
    {
        IntPtr ret = _UIElement_GetRenderTransform(jarg1);

        return ret;
    }

    public delegate void UIElement_SetRenderTransformDelegate(HandleRef jarg1, HandleRef jarg2);
    public static UIElement_SetRenderTransformDelegate _UIElement_SetRenderTransform;
    public static void UIElement_SetRenderTransform(HandleRef jarg1, HandleRef jarg2)
    {
        _UIElement_SetRenderTransform(jarg1, jarg2);
    }

    public delegate int UIElement_GetVisibilityDelegate(HandleRef jarg1);
    public static UIElement_GetVisibilityDelegate _UIElement_GetVisibility;
    public static int UIElement_GetVisibility(HandleRef jarg1)
    {
        int ret = _UIElement_GetVisibility(jarg1);

        return ret;
    }

    public delegate void UIElement_SetVisibilityDelegate(HandleRef jarg1, int jarg2);
    public static UIElement_SetVisibilityDelegate _UIElement_SetVisibility;
    public static void UIElement_SetVisibility(HandleRef jarg1, int jarg2)
    {
        _UIElement_SetVisibility(jarg1, jarg2);
    }

    public delegate void UIElement_GetAncestorListDelegate(HandleRef jarg1, HandleRef jarg2);
    public static UIElement_GetAncestorListDelegate _UIElement_GetAncestorList;
    public static void UIElement_GetAncestorList(HandleRef jarg1, HandleRef jarg2)
    {
        _UIElement_GetAncestorList(jarg1, jarg2);
    }

    public delegate IntPtr UIElement_GetUIParentDelegate(HandleRef jarg1);
    public static UIElement_GetUIParentDelegate _UIElement_GetUIParent;
    public static IntPtr UIElement_GetUIParent(HandleRef jarg1)
    {
        IntPtr ret = _UIElement_GetUIParent(jarg1);

        return ret;
    }

    public delegate IntPtr UIElement_GetCommandBindingsDelegate(HandleRef jarg1);
    public static UIElement_GetCommandBindingsDelegate _UIElement_GetCommandBindings;
    public static IntPtr UIElement_GetCommandBindings(HandleRef jarg1)
    {
        IntPtr ret = _UIElement_GetCommandBindings(jarg1);

        return ret;
    }

    public delegate IntPtr UIElement_GetInputBindingsDelegate(HandleRef jarg1);
    public static UIElement_GetInputBindingsDelegate _UIElement_GetInputBindings;
    public static IntPtr UIElement_GetInputBindings(HandleRef jarg1)
    {
        IntPtr ret = _UIElement_GetInputBindings(jarg1);

        return ret;
    }

    public delegate bool UIElement_CaptureMouseDelegate(HandleRef jarg1);
    public static UIElement_CaptureMouseDelegate _UIElement_CaptureMouse;
    public static bool UIElement_CaptureMouse(HandleRef jarg1)
    {
        bool ret = _UIElement_CaptureMouse(jarg1);

        return ret;
    }

    public delegate void UIElement_ReleaseMouseCaptureDelegate(HandleRef jarg1);
    public static UIElement_ReleaseMouseCaptureDelegate _UIElement_ReleaseMouseCapture;
    public static void UIElement_ReleaseMouseCapture(HandleRef jarg1)
    {
        _UIElement_ReleaseMouseCapture(jarg1);
    }

    public delegate bool UIElement_FocusDelegate(HandleRef jarg1);
    public static UIElement_FocusDelegate _UIElement_Focus;
    public static bool UIElement_Focus(HandleRef jarg1)
    {
        bool ret = _UIElement_Focus(jarg1);

        return ret;
    }

    public delegate IntPtr UIElement_GetDesiredSizeDelegate(HandleRef jarg1);
    public static UIElement_GetDesiredSizeDelegate _UIElement_GetDesiredSize;
    public static IntPtr UIElement_GetDesiredSize(HandleRef jarg1)
    {
        IntPtr ret = _UIElement_GetDesiredSize(jarg1);

        return ret;
    }

    public delegate IntPtr UIElement_GetRenderSizeDelegate(HandleRef jarg1);
    public static UIElement_GetRenderSizeDelegate _UIElement_GetRenderSize;
    public static IntPtr UIElement_GetRenderSize(HandleRef jarg1)
    {
        IntPtr ret = _UIElement_GetRenderSize(jarg1);

        return ret;
    }

    public delegate void UIElement_InvalidateMeasureDelegate(HandleRef jarg1);
    public static UIElement_InvalidateMeasureDelegate _UIElement_InvalidateMeasure;
    public static void UIElement_InvalidateMeasure(HandleRef jarg1)
    {
        _UIElement_InvalidateMeasure(jarg1);
    }

    public delegate bool UIElement_IsMeasureValidDelegate(HandleRef jarg1);
    public static UIElement_IsMeasureValidDelegate _UIElement_IsMeasureValid;
    public static bool UIElement_IsMeasureValid(HandleRef jarg1)
    {
        bool ret = _UIElement_IsMeasureValid(jarg1);

        return ret;
    }

    public delegate void UIElement_MeasureDelegate(HandleRef jarg1, HandleRef jarg2);
    public static UIElement_MeasureDelegate _UIElement_Measure;
    public static void UIElement_Measure(HandleRef jarg1, HandleRef jarg2)
    {
        _UIElement_Measure(jarg1, jarg2);
    }

    public delegate void UIElement_InvalidateArrangeDelegate(HandleRef jarg1);
    public static UIElement_InvalidateArrangeDelegate _UIElement_InvalidateArrange;
    public static void UIElement_InvalidateArrange(HandleRef jarg1)
    {
        _UIElement_InvalidateArrange(jarg1);
    }

    public delegate bool UIElement_IsArrangeValidDelegate(HandleRef jarg1);
    public static UIElement_IsArrangeValidDelegate _UIElement_IsArrangeValid;
    public static bool UIElement_IsArrangeValid(HandleRef jarg1)
    {
        bool ret = _UIElement_IsArrangeValid(jarg1);

        return ret;
    }

    public delegate void UIElement_ArrangeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static UIElement_ArrangeDelegate _UIElement_Arrange;
    public static void UIElement_Arrange(HandleRef jarg1, HandleRef jarg2)
    {
        _UIElement_Arrange(jarg1, jarg2);
    }

    public delegate void UIElement_InvalidateVisualDelegate(HandleRef jarg1);
    public static UIElement_InvalidateVisualDelegate _UIElement_InvalidateVisual;
    public static void UIElement_InvalidateVisual(HandleRef jarg1)
    {
        _UIElement_InvalidateVisual(jarg1);
    }

    public delegate IntPtr UIElement_GetMouseDelegate(HandleRef jarg1);
    public static UIElement_GetMouseDelegate _UIElement_GetMouse;
    public static IntPtr UIElement_GetMouse(HandleRef jarg1)
    {
        IntPtr ret = _UIElement_GetMouse(jarg1);

        return ret;
    }

    public delegate IntPtr UIElement_GetKeyboardDelegate(HandleRef jarg1);
    public static UIElement_GetKeyboardDelegate _UIElement_GetKeyboard;
    public static IntPtr UIElement_GetKeyboard(HandleRef jarg1)
    {
        IntPtr ret = _UIElement_GetKeyboard(jarg1);

        return ret;
    }

    public delegate bool UIElement_MoveFocusDelegate(HandleRef jarg1, HandleRef jarg2);
    public static UIElement_MoveFocusDelegate _UIElement_MoveFocus;
    public static bool UIElement_MoveFocus(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _UIElement_MoveFocus(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr UIElement_PredictFocusDelegate(HandleRef jarg1, HandleRef jarg2);
    public static UIElement_PredictFocusDelegate _UIElement_PredictFocus;
    public static IntPtr UIElement_PredictFocus(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _UIElement_PredictFocus(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr UIElement_GetMeasureConstraintDelegate(HandleRef jarg1);
    public static UIElement_GetMeasureConstraintDelegate _UIElement_GetMeasureConstraint;
    public static IntPtr UIElement_GetMeasureConstraint(HandleRef jarg1)
    {
        IntPtr ret = _UIElement_GetMeasureConstraint(jarg1);

        return ret;
    }

    public delegate IntPtr UIElement_GetArrangeConstraintDelegate(HandleRef jarg1);
    public static UIElement_GetArrangeConstraintDelegate _UIElement_GetArrangeConstraint;
    public static IntPtr UIElement_GetArrangeConstraint(HandleRef jarg1)
    {
        IntPtr ret = _UIElement_GetArrangeConstraint(jarg1);

        return ret;
    }

    public delegate IntPtr new_UIElementCollection__SWIG_0Delegate();
    public static new_UIElementCollection__SWIG_0Delegate _new_UIElementCollection__SWIG_0;
    public static IntPtr new_UIElementCollection__SWIG_0()
    {
        IntPtr ret = _new_UIElementCollection__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_UIElementCollection__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static new_UIElementCollection__SWIG_1Delegate _new_UIElementCollection__SWIG_1;
    public static IntPtr new_UIElementCollection__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_UIElementCollection__SWIG_1(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_UIElementCollectionDelegate(HandleRef jarg1);
    public static delete_UIElementCollectionDelegate _delete_UIElementCollection;
    public static void delete_UIElementCollection(HandleRef jarg1)
    {
        _delete_UIElementCollection(jarg1);
    }

    public delegate void UIElementCollection_SetLogicalParentDelegate(HandleRef jarg1, HandleRef jarg2);
    public static UIElementCollection_SetLogicalParentDelegate _UIElementCollection_SetLogicalParent;
    public static void UIElementCollection_SetLogicalParent(HandleRef jarg1, HandleRef jarg2)
    {
        _UIElementCollection_SetLogicalParent(jarg1, jarg2);
    }

    public delegate IntPtr new_TriggerCollection__SWIG_0Delegate();
    public static new_TriggerCollection__SWIG_0Delegate _new_TriggerCollection__SWIG_0;
    public static IntPtr new_TriggerCollection__SWIG_0()
    {
        IntPtr ret = _new_TriggerCollection__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_TriggerCollection__SWIG_1Delegate(HandleRef jarg1);
    public static new_TriggerCollection__SWIG_1Delegate _new_TriggerCollection__SWIG_1;
    public static IntPtr new_TriggerCollection__SWIG_1(HandleRef jarg1)
    {
        IntPtr ret = _new_TriggerCollection__SWIG_1(jarg1);

        return ret;
    }

    public delegate void delete_TriggerCollectionDelegate(HandleRef jarg1);
    public static delete_TriggerCollectionDelegate _delete_TriggerCollection;
    public static void delete_TriggerCollection(HandleRef jarg1)
    {
        _delete_TriggerCollection(jarg1);
    }

    public delegate void delete_BaseSetterDelegate(HandleRef jarg1);
    public static delete_BaseSetterDelegate _delete_BaseSetter;
    public static void delete_BaseSetter(HandleRef jarg1)
    {
        _delete_BaseSetter(jarg1);
    }

    public delegate bool BaseSetter_IsInitializedDelegate(HandleRef jarg1);
    public static BaseSetter_IsInitializedDelegate _BaseSetter_IsInitialized;
    public static bool BaseSetter_IsInitialized(HandleRef jarg1)
    {
        bool ret = _BaseSetter_IsInitialized(jarg1);

        return ret;
    }

    public delegate void BaseSetter_InitDelegate(HandleRef jarg1);
    public static BaseSetter_InitDelegate _BaseSetter_Init;
    public static void BaseSetter_Init(HandleRef jarg1)
    {
        _BaseSetter_Init(jarg1);
    }

    public delegate void DictionaryChangedArgs_action_setDelegate(HandleRef jarg1, int jarg2);
    public static DictionaryChangedArgs_action_setDelegate _DictionaryChangedArgs_action_set;
    public static void DictionaryChangedArgs_action_set(HandleRef jarg1, int jarg2)
    {
        _DictionaryChangedArgs_action_set(jarg1, jarg2);
    }

    public delegate int DictionaryChangedArgs_action_getDelegate(HandleRef jarg1);
    public static DictionaryChangedArgs_action_getDelegate _DictionaryChangedArgs_action_get;
    public static int DictionaryChangedArgs_action_get(HandleRef jarg1)
    {
        int ret = _DictionaryChangedArgs_action_get(jarg1);

        return ret;
    }

    public delegate void DictionaryChangedArgs_key_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DictionaryChangedArgs_key_setDelegate _DictionaryChangedArgs_key_set;
    public static void DictionaryChangedArgs_key_set(HandleRef jarg1, HandleRef jarg2)
    {
        _DictionaryChangedArgs_key_set(jarg1, jarg2);
    }

    public delegate IntPtr DictionaryChangedArgs_key_getDelegate(HandleRef jarg1);
    public static DictionaryChangedArgs_key_getDelegate _DictionaryChangedArgs_key_get;
    public static IntPtr DictionaryChangedArgs_key_get(HandleRef jarg1)
    {
        IntPtr ret = _DictionaryChangedArgs_key_get(jarg1);

        return ret;
    }

    public delegate void DictionaryChangedArgs_oldValue_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DictionaryChangedArgs_oldValue_setDelegate _DictionaryChangedArgs_oldValue_set;
    public static void DictionaryChangedArgs_oldValue_set(HandleRef jarg1, HandleRef jarg2)
    {
        _DictionaryChangedArgs_oldValue_set(jarg1, jarg2);
    }

    public delegate IntPtr DictionaryChangedArgs_oldValue_getDelegate(HandleRef jarg1);
    public static DictionaryChangedArgs_oldValue_getDelegate _DictionaryChangedArgs_oldValue_get;
    public static IntPtr DictionaryChangedArgs_oldValue_get(HandleRef jarg1)
    {
        IntPtr ret = _DictionaryChangedArgs_oldValue_get(jarg1);

        return ret;
    }

    public delegate void DictionaryChangedArgs_newValue_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DictionaryChangedArgs_newValue_setDelegate _DictionaryChangedArgs_newValue_set;
    public static void DictionaryChangedArgs_newValue_set(HandleRef jarg1, HandleRef jarg2)
    {
        _DictionaryChangedArgs_newValue_set(jarg1, jarg2);
    }

    public delegate IntPtr DictionaryChangedArgs_newValue_getDelegate(HandleRef jarg1);
    public static DictionaryChangedArgs_newValue_getDelegate _DictionaryChangedArgs_newValue_get;
    public static IntPtr DictionaryChangedArgs_newValue_get(HandleRef jarg1)
    {
        IntPtr ret = _DictionaryChangedArgs_newValue_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_DictionaryChangedArgsDelegate(int jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static new_DictionaryChangedArgsDelegate _new_DictionaryChangedArgs;
    public static IntPtr new_DictionaryChangedArgs(int jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        IntPtr ret = _new_DictionaryChangedArgs(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate void delete_DictionaryChangedArgsDelegate(HandleRef jarg1);
    public static delete_DictionaryChangedArgsDelegate _delete_DictionaryChangedArgs;
    public static void delete_DictionaryChangedArgs(HandleRef jarg1)
    {
        _delete_DictionaryChangedArgs(jarg1);
    }

    public delegate IntPtr new_BaseDictionaryDelegate();
    public static new_BaseDictionaryDelegate _new_BaseDictionary;
    public static IntPtr new_BaseDictionary()
    {
        IntPtr ret = _new_BaseDictionary();

        return ret;
    }

    public delegate IntPtr BaseDictionary_DictionaryChangedDelegate(HandleRef jarg1);
    public static BaseDictionary_DictionaryChangedDelegate _BaseDictionary_DictionaryChanged;
    public static IntPtr BaseDictionary_DictionaryChanged(HandleRef jarg1)
    {
        IntPtr ret = _BaseDictionary_DictionaryChanged(jarg1);

        return ret;
    }

    public delegate void delete_BaseDictionaryDelegate(HandleRef jarg1);
    public static delete_BaseDictionaryDelegate _delete_BaseDictionary;
    public static void delete_BaseDictionary(HandleRef jarg1)
    {
        _delete_BaseDictionary(jarg1);
    }

    public delegate IntPtr new_ResourceDictionaryDelegate();
    public static new_ResourceDictionaryDelegate _new_ResourceDictionary;
    public static IntPtr new_ResourceDictionary()
    {
        IntPtr ret = _new_ResourceDictionary();

        return ret;
    }

    public delegate void delete_ResourceDictionaryDelegate(HandleRef jarg1);
    public static delete_ResourceDictionaryDelegate _delete_ResourceDictionary;
    public static void delete_ResourceDictionary(HandleRef jarg1)
    {
        _delete_ResourceDictionary(jarg1);
    }

    public delegate bool ResourceDictionary_HasResourcesDefinedDelegate(HandleRef jarg1);
    public static ResourceDictionary_HasResourcesDefinedDelegate _ResourceDictionary_HasResourcesDefined;
    public static bool ResourceDictionary_HasResourcesDefined(HandleRef jarg1)
    {
        bool ret = _ResourceDictionary_HasResourcesDefined(jarg1);

        return ret;
    }

    public delegate IntPtr ResourceDictionary_GetMergedDictionariesDelegate(HandleRef jarg1);
    public static ResourceDictionary_GetMergedDictionariesDelegate _ResourceDictionary_GetMergedDictionaries;
    public static IntPtr ResourceDictionary_GetMergedDictionaries(HandleRef jarg1)
    {
        IntPtr ret = _ResourceDictionary_GetMergedDictionaries(jarg1);

        return ret;
    }

    public delegate void ResourceDictionary_SetSourceDelegate(HandleRef jarg1, IntPtr jarg2);
    public static ResourceDictionary_SetSourceDelegate _ResourceDictionary_SetSource;
    public static void ResourceDictionary_SetSource(HandleRef jarg1, IntPtr jarg2)
    {
        _ResourceDictionary_SetSource(jarg1, jarg2);
    }

    public delegate IntPtr ResourceDictionary_GetSourceDelegate(HandleRef jarg1);
    public static ResourceDictionary_GetSourceDelegate _ResourceDictionary_GetSource;
    public static IntPtr ResourceDictionary_GetSource(HandleRef jarg1)
    {
        IntPtr ret = _ResourceDictionary_GetSource(jarg1);

        return ret;
    }

    public delegate bool ResourceDictionary_FindDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static ResourceDictionary_FindDelegate _ResourceDictionary_Find;
    public static bool ResourceDictionary_Find(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        bool ret = _ResourceDictionary_Find(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr ResourceDictionary_GetDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ResourceDictionary_GetDelegate _ResourceDictionary_Get;
    public static IntPtr ResourceDictionary_Get(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _ResourceDictionary_Get(jarg1, jarg2);

        return ret;
    }

    public delegate void ResourceDictionary_SetDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static ResourceDictionary_SetDelegate _ResourceDictionary_Set;
    public static void ResourceDictionary_Set(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _ResourceDictionary_Set(jarg1, jarg2, jarg3);
    }

    public delegate void ResourceDictionary_AddDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static ResourceDictionary_AddDelegate _ResourceDictionary_Add;
    public static void ResourceDictionary_Add(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _ResourceDictionary_Add(jarg1, jarg2, jarg3);
    }

    public delegate void ResourceDictionary_ClearDelegate(HandleRef jarg1);
    public static ResourceDictionary_ClearDelegate _ResourceDictionary_Clear;
    public static void ResourceDictionary_Clear(HandleRef jarg1)
    {
        _ResourceDictionary_Clear(jarg1);
    }

    public delegate bool ResourceDictionary_ContainsDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ResourceDictionary_ContainsDelegate _ResourceDictionary_Contains;
    public static bool ResourceDictionary_Contains(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _ResourceDictionary_Contains(jarg1, jarg2);

        return ret;
    }

    public delegate void ResourceDictionary_RemoveDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ResourceDictionary_RemoveDelegate _ResourceDictionary_Remove;
    public static void ResourceDictionary_Remove(HandleRef jarg1, HandleRef jarg2)
    {
        _ResourceDictionary_Remove(jarg1, jarg2);
    }

    public delegate uint ResourceDictionary_CountDelegate(HandleRef jarg1);
    public static ResourceDictionary_CountDelegate _ResourceDictionary_Count;
    public static uint ResourceDictionary_Count(HandleRef jarg1)
    {
        uint ret = _ResourceDictionary_Count(jarg1);

        return ret;
    }

    public delegate IntPtr ResourceDictionary_GetPairIteratorDelegate(HandleRef jarg1);
    public static ResourceDictionary_GetPairIteratorDelegate _ResourceDictionary_GetPairIterator;
    public static IntPtr ResourceDictionary_GetPairIterator(HandleRef jarg1)
    {
        IntPtr ret = _ResourceDictionary_GetPairIterator(jarg1);

        return ret;
    }

    public delegate IntPtr ResourceDictionary_GetIteratorDelegate(HandleRef jarg1);
    public static ResourceDictionary_GetIteratorDelegate _ResourceDictionary_GetIterator;
    public static IntPtr ResourceDictionary_GetIterator(HandleRef jarg1)
    {
        IntPtr ret = _ResourceDictionary_GetIterator(jarg1);

        return ret;
    }

    public delegate bool ResourceDictionary_IsInitializedDelegate(HandleRef jarg1);
    public static ResourceDictionary_IsInitializedDelegate _ResourceDictionary_IsInitialized;
    public static bool ResourceDictionary_IsInitialized(HandleRef jarg1)
    {
        bool ret = _ResourceDictionary_IsInitialized(jarg1);

        return ret;
    }

    public delegate void ResourceDictionary_InitDelegate(HandleRef jarg1);
    public static ResourceDictionary_InitDelegate _ResourceDictionary_Init;
    public static void ResourceDictionary_Init(HandleRef jarg1)
    {
        _ResourceDictionary_Init(jarg1);
    }

    public delegate IntPtr ResourceDictionary_FindNameDelegate(HandleRef jarg1, string jarg2);
    public static ResourceDictionary_FindNameDelegate _ResourceDictionary_FindName;
    public static IntPtr ResourceDictionary_FindName(HandleRef jarg1, string jarg2)
    {
        IntPtr ret = _ResourceDictionary_FindName(jarg1, jarg2);

        return ret;
    }

    public delegate void ResourceDictionary_RegisterNameDelegate(HandleRef jarg1, string jarg2, HandleRef jarg3);
    public static ResourceDictionary_RegisterNameDelegate _ResourceDictionary_RegisterName;
    public static void ResourceDictionary_RegisterName(HandleRef jarg1, string jarg2, HandleRef jarg3)
    {
        _ResourceDictionary_RegisterName(jarg1, jarg2, jarg3);
    }

    public delegate void ResourceDictionary_UnregisterNameDelegate(HandleRef jarg1, string jarg2);
    public static ResourceDictionary_UnregisterNameDelegate _ResourceDictionary_UnregisterName;
    public static void ResourceDictionary_UnregisterName(HandleRef jarg1, string jarg2)
    {
        _ResourceDictionary_UnregisterName(jarg1, jarg2);
    }

    public delegate void ResourceDictionary_UpdateNameDelegate(HandleRef jarg1, string jarg2, HandleRef jarg3);
    public static ResourceDictionary_UpdateNameDelegate _ResourceDictionary_UpdateName;
    public static void ResourceDictionary_UpdateName(HandleRef jarg1, string jarg2, HandleRef jarg3)
    {
        _ResourceDictionary_UpdateName(jarg1, jarg2, jarg3);
    }

    public delegate IntPtr ResourceDictionary_NameScopeChangedDelegate(HandleRef jarg1);
    public static ResourceDictionary_NameScopeChangedDelegate _ResourceDictionary_NameScopeChanged;
    public static IntPtr ResourceDictionary_NameScopeChanged(HandleRef jarg1)
    {
        IntPtr ret = _ResourceDictionary_NameScopeChanged(jarg1);

        return ret;
    }

    public delegate IntPtr ResourceDictionary_NameScopeDestroyedDelegate(HandleRef jarg1);
    public static ResourceDictionary_NameScopeDestroyedDelegate _ResourceDictionary_NameScopeDestroyed;
    public static IntPtr ResourceDictionary_NameScopeDestroyed(HandleRef jarg1)
    {
        IntPtr ret = _ResourceDictionary_NameScopeDestroyed(jarg1);

        return ret;
    }

    public delegate IntPtr ResourceDictionary_EnumObjectsDelegate(HandleRef jarg1);
    public static ResourceDictionary_EnumObjectsDelegate _ResourceDictionary_EnumObjects;
    public static IntPtr ResourceDictionary_EnumObjects(HandleRef jarg1)
    {
        IntPtr ret = _ResourceDictionary_EnumObjects(jarg1);

        return ret;
    }

    public delegate IntPtr ResourceDictionary_TryGetDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ResourceDictionary_TryGetDelegate _ResourceDictionary_TryGet;
    public static IntPtr ResourceDictionary_TryGet(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _ResourceDictionary_TryGet(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_ResourceKeyStringDelegate();
    public static new_ResourceKeyStringDelegate _new_ResourceKeyString;
    public static IntPtr new_ResourceKeyString()
    {
        IntPtr ret = _new_ResourceKeyString();

        return ret;
    }

    public delegate void delete_ResourceKeyStringDelegate(HandleRef jarg1);
    public static delete_ResourceKeyStringDelegate _delete_ResourceKeyString;
    public static void delete_ResourceKeyString(HandleRef jarg1)
    {
        _delete_ResourceKeyString(jarg1);
    }

    public delegate IntPtr ResourceKeyString_CreateDelegate(string jarg1);
    public static ResourceKeyString_CreateDelegate _ResourceKeyString_Create;
    public static IntPtr ResourceKeyString_Create(string jarg1)
    {
        IntPtr ret = _ResourceKeyString_Create(jarg1);

        return ret;
    }

    public delegate IntPtr ResourceKeyString_TryCreateDelegate(string jarg1);
    public static ResourceKeyString_TryCreateDelegate _ResourceKeyString_TryCreate;
    public static IntPtr ResourceKeyString_TryCreate(string jarg1)
    {
        IntPtr ret = _ResourceKeyString_TryCreate(jarg1);

        return ret;
    }

    public delegate IntPtr ResourceKeyString_ParseDelegate(string jarg1);
    public static ResourceKeyString_ParseDelegate _ResourceKeyString_Parse;
    public static IntPtr ResourceKeyString_Parse(string jarg1)
    {
        IntPtr ret = _ResourceKeyString_Parse(jarg1);

        return ret;
    }

    public delegate bool ResourceKeyString_TryParseDelegate(string jarg1, HandleRef jarg2);
    public static ResourceKeyString_TryParseDelegate _ResourceKeyString_TryParse;
    public static bool ResourceKeyString_TryParse(string jarg1, HandleRef jarg2)
    {
        bool ret = _ResourceKeyString_TryParse(jarg1, jarg2);

        return ret;
    }

    public delegate string ResourceKeyString_GetDelegate(HandleRef jarg1);
    public static ResourceKeyString_GetDelegate _ResourceKeyString_Get;
    public static string ResourceKeyString_Get(HandleRef jarg1)
    {
        string ret = _ResourceKeyString_Get(jarg1);

        return ret;
    }

    public delegate bool ResourceKeyString_EqualsDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ResourceKeyString_EqualsDelegate _ResourceKeyString_Equals;
    public static bool ResourceKeyString_Equals(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _ResourceKeyString_Equals(jarg1, jarg2);

        return ret;
    }

    public delegate bool ResourceKeyString_IsLessThanDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ResourceKeyString_IsLessThanDelegate _ResourceKeyString_IsLessThan;
    public static bool ResourceKeyString_IsLessThan(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _ResourceKeyString_IsLessThan(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr ResourceKeyString_GetStrDelegate(HandleRef jarg1);
    public static ResourceKeyString_GetStrDelegate _ResourceKeyString_GetStr;
    public static IntPtr ResourceKeyString_GetStr(HandleRef jarg1)
    {
        IntPtr ret = _ResourceKeyString_GetStr(jarg1);

        return ret;
    }

    public delegate IntPtr new_ResourceKeyTypeDelegate();
    public static new_ResourceKeyTypeDelegate _new_ResourceKeyType;
    public static IntPtr new_ResourceKeyType()
    {
        IntPtr ret = _new_ResourceKeyType();

        return ret;
    }

    public delegate void delete_ResourceKeyTypeDelegate(HandleRef jarg1);
    public static delete_ResourceKeyTypeDelegate _delete_ResourceKeyType;
    public static void delete_ResourceKeyType(HandleRef jarg1)
    {
        _delete_ResourceKeyType(jarg1);
    }

    public delegate IntPtr ResourceKeyType_CreateDelegate(HandleRef jarg1);
    public static ResourceKeyType_CreateDelegate _ResourceKeyType_Create;
    public static IntPtr ResourceKeyType_Create(HandleRef jarg1)
    {
        IntPtr ret = _ResourceKeyType_Create(jarg1);

        return ret;
    }

    public delegate IntPtr ResourceKeyType_ParseDelegate(string jarg1);
    public static ResourceKeyType_ParseDelegate _ResourceKeyType_Parse;
    public static IntPtr ResourceKeyType_Parse(string jarg1)
    {
        IntPtr ret = _ResourceKeyType_Parse(jarg1);

        return ret;
    }

    public delegate bool ResourceKeyType_TryParseDelegate(string jarg1, HandleRef jarg2);
    public static ResourceKeyType_TryParseDelegate _ResourceKeyType_TryParse;
    public static bool ResourceKeyType_TryParse(string jarg1, HandleRef jarg2)
    {
        bool ret = _ResourceKeyType_TryParse(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr ResourceKeyType_GetDelegate(HandleRef jarg1);
    public static ResourceKeyType_GetDelegate _ResourceKeyType_Get;
    public static IntPtr ResourceKeyType_Get(HandleRef jarg1)
    {
        IntPtr ret = _ResourceKeyType_Get(jarg1);

        return ret;
    }

    public delegate bool ResourceKeyType_EqualsDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ResourceKeyType_EqualsDelegate _ResourceKeyType_Equals;
    public static bool ResourceKeyType_Equals(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _ResourceKeyType_Equals(jarg1, jarg2);

        return ret;
    }

    public delegate bool ResourceKeyType_IsLessThanDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ResourceKeyType_IsLessThanDelegate _ResourceKeyType_IsLessThan;
    public static bool ResourceKeyType_IsLessThan(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _ResourceKeyType_IsLessThan(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr ResourceKeyType_GetStrDelegate(HandleRef jarg1);
    public static ResourceKeyType_GetStrDelegate _ResourceKeyType_GetStr;
    public static IntPtr ResourceKeyType_GetStr(HandleRef jarg1)
    {
        IntPtr ret = _ResourceKeyType_GetStr(jarg1);

        return ret;
    }

    public delegate IntPtr new_StyleDelegate();
    public static new_StyleDelegate _new_Style;
    public static IntPtr new_Style()
    {
        IntPtr ret = _new_Style();

        return ret;
    }

    public delegate void delete_StyleDelegate(HandleRef jarg1);
    public static delete_StyleDelegate _delete_Style;
    public static void delete_Style(HandleRef jarg1)
    {
        _delete_Style(jarg1);
    }

    public delegate IntPtr Style_GetTargetTypeDelegate(HandleRef jarg1);
    public static Style_GetTargetTypeDelegate _Style_GetTargetType;
    public static IntPtr Style_GetTargetType(HandleRef jarg1)
    {
        IntPtr ret = _Style_GetTargetType(jarg1);

        return ret;
    }

    public delegate void Style_SetTargetTypeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Style_SetTargetTypeDelegate _Style_SetTargetType;
    public static void Style_SetTargetType(HandleRef jarg1, HandleRef jarg2)
    {
        _Style_SetTargetType(jarg1, jarg2);
    }

    public delegate IntPtr Style_GetBasedOnDelegate(HandleRef jarg1);
    public static Style_GetBasedOnDelegate _Style_GetBasedOn;
    public static IntPtr Style_GetBasedOn(HandleRef jarg1)
    {
        IntPtr ret = _Style_GetBasedOn(jarg1);

        return ret;
    }

    public delegate void Style_SetBasedOnDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Style_SetBasedOnDelegate _Style_SetBasedOn;
    public static void Style_SetBasedOn(HandleRef jarg1, HandleRef jarg2)
    {
        _Style_SetBasedOn(jarg1, jarg2);
    }

    public delegate IntPtr Style_GetResourcesDelegate(HandleRef jarg1);
    public static Style_GetResourcesDelegate _Style_GetResources;
    public static IntPtr Style_GetResources(HandleRef jarg1)
    {
        IntPtr ret = _Style_GetResources(jarg1);

        return ret;
    }

    public delegate void Style_SetResourcesDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Style_SetResourcesDelegate _Style_SetResources;
    public static void Style_SetResources(HandleRef jarg1, HandleRef jarg2)
    {
        _Style_SetResources(jarg1, jarg2);
    }

    public delegate IntPtr Style_GetSettersDelegate(HandleRef jarg1);
    public static Style_GetSettersDelegate _Style_GetSetters;
    public static IntPtr Style_GetSetters(HandleRef jarg1)
    {
        IntPtr ret = _Style_GetSetters(jarg1);

        return ret;
    }

    public delegate IntPtr Style_GetTriggersDelegate(HandleRef jarg1);
    public static Style_GetTriggersDelegate _Style_GetTriggers;
    public static IntPtr Style_GetTriggers(HandleRef jarg1)
    {
        IntPtr ret = _Style_GetTriggers(jarg1);

        return ret;
    }

    public delegate void Style_AttachElementDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Style_AttachElementDelegate _Style_AttachElement;
    public static void Style_AttachElement(HandleRef jarg1, HandleRef jarg2)
    {
        _Style_AttachElement(jarg1, jarg2);
    }

    public delegate void Style_DetachElementDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Style_DetachElementDelegate _Style_DetachElement;
    public static void Style_DetachElement(HandleRef jarg1, HandleRef jarg2)
    {
        _Style_DetachElement(jarg1, jarg2);
    }

    public delegate bool Style_IsInitializedDelegate(HandleRef jarg1);
    public static Style_IsInitializedDelegate _Style_IsInitialized;
    public static bool Style_IsInitialized(HandleRef jarg1)
    {
        bool ret = _Style_IsInitialized(jarg1);

        return ret;
    }

    public delegate void Style_InitDelegate(HandleRef jarg1);
    public static Style_InitDelegate _Style_Init;
    public static void Style_Init(HandleRef jarg1)
    {
        _Style_Init(jarg1);
    }

    public delegate void TimeManagerRef_timeManager_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TimeManagerRef_timeManager_setDelegate _TimeManagerRef_timeManager_set;
    public static void TimeManagerRef_timeManager_set(HandleRef jarg1, HandleRef jarg2)
    {
        _TimeManagerRef_timeManager_set(jarg1, jarg2);
    }

    public delegate IntPtr TimeManagerRef_timeManager_getDelegate(HandleRef jarg1);
    public static TimeManagerRef_timeManager_getDelegate _TimeManagerRef_timeManager_get;
    public static IntPtr TimeManagerRef_timeManager_get(HandleRef jarg1)
    {
        IntPtr ret = _TimeManagerRef_timeManager_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_TimeManagerRefDelegate();
    public static new_TimeManagerRefDelegate _new_TimeManagerRef;
    public static IntPtr new_TimeManagerRef()
    {
        IntPtr ret = _new_TimeManagerRef();

        return ret;
    }

    public delegate void delete_TimeManagerRefDelegate(HandleRef jarg1);
    public static delete_TimeManagerRefDelegate _delete_TimeManagerRef;
    public static void delete_TimeManagerRef(HandleRef jarg1)
    {
        _delete_TimeManagerRef(jarg1);
    }

    public delegate void AncestorNameScopeChangedArgs_action_setDelegate(HandleRef jarg1, int jarg2);
    public static AncestorNameScopeChangedArgs_action_setDelegate _AncestorNameScopeChangedArgs_action_set;
    public static void AncestorNameScopeChangedArgs_action_set(HandleRef jarg1, int jarg2)
    {
        _AncestorNameScopeChangedArgs_action_set(jarg1, jarg2);
    }

    public delegate int AncestorNameScopeChangedArgs_action_getDelegate(HandleRef jarg1);
    public static AncestorNameScopeChangedArgs_action_getDelegate _AncestorNameScopeChangedArgs_action_get;
    public static int AncestorNameScopeChangedArgs_action_get(HandleRef jarg1)
    {
        int ret = _AncestorNameScopeChangedArgs_action_get(jarg1);

        return ret;
    }

    public delegate void AncestorNameScopeChangedArgs_nameScope_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static AncestorNameScopeChangedArgs_nameScope_setDelegate _AncestorNameScopeChangedArgs_nameScope_set;
    public static void AncestorNameScopeChangedArgs_nameScope_set(HandleRef jarg1, HandleRef jarg2)
    {
        _AncestorNameScopeChangedArgs_nameScope_set(jarg1, jarg2);
    }

    public delegate IntPtr AncestorNameScopeChangedArgs_nameScope_getDelegate(HandleRef jarg1);
    public static AncestorNameScopeChangedArgs_nameScope_getDelegate _AncestorNameScopeChangedArgs_nameScope_get;
    public static IntPtr AncestorNameScopeChangedArgs_nameScope_get(HandleRef jarg1)
    {
        IntPtr ret = _AncestorNameScopeChangedArgs_nameScope_get(jarg1);

        return ret;
    }

    public delegate void AncestorNameScopeChangedArgs_changeArgs_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static AncestorNameScopeChangedArgs_changeArgs_setDelegate _AncestorNameScopeChangedArgs_changeArgs_set;
    public static void AncestorNameScopeChangedArgs_changeArgs_set(HandleRef jarg1, HandleRef jarg2)
    {
        _AncestorNameScopeChangedArgs_changeArgs_set(jarg1, jarg2);
    }

    public delegate IntPtr AncestorNameScopeChangedArgs_changeArgs_getDelegate(HandleRef jarg1);
    public static AncestorNameScopeChangedArgs_changeArgs_getDelegate _AncestorNameScopeChangedArgs_changeArgs_get;
    public static IntPtr AncestorNameScopeChangedArgs_changeArgs_get(HandleRef jarg1)
    {
        IntPtr ret = _AncestorNameScopeChangedArgs_changeArgs_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_AncestorNameScopeChangedArgsDelegate();
    public static new_AncestorNameScopeChangedArgsDelegate _new_AncestorNameScopeChangedArgs;
    public static IntPtr new_AncestorNameScopeChangedArgs()
    {
        IntPtr ret = _new_AncestorNameScopeChangedArgs();

        return ret;
    }

    public delegate void delete_AncestorNameScopeChangedArgsDelegate(HandleRef jarg1);
    public static delete_AncestorNameScopeChangedArgsDelegate _delete_AncestorNameScopeChangedArgs;
    public static void delete_AncestorNameScopeChangedArgs(HandleRef jarg1)
    {
        _delete_AncestorNameScopeChangedArgs(jarg1);
    }

    public delegate IntPtr new_FrameworkElementDelegate();
    public static new_FrameworkElementDelegate _new_FrameworkElement;
    public static IntPtr new_FrameworkElement()
    {
        IntPtr ret = _new_FrameworkElement();

        return ret;
    }

    public delegate void delete_FrameworkElementDelegate(HandleRef jarg1);
    public static delete_FrameworkElementDelegate _delete_FrameworkElement;
    public static void delete_FrameworkElement(HandleRef jarg1)
    {
        _delete_FrameworkElement(jarg1);
    }

    public delegate float FrameworkElement_GetActualHeightDelegate(HandleRef jarg1);
    public static FrameworkElement_GetActualHeightDelegate _FrameworkElement_GetActualHeight;
    public static float FrameworkElement_GetActualHeight(HandleRef jarg1)
    {
        float ret = _FrameworkElement_GetActualHeight(jarg1);

        return ret;
    }

    public delegate float FrameworkElement_GetActualWidthDelegate(HandleRef jarg1);
    public static FrameworkElement_GetActualWidthDelegate _FrameworkElement_GetActualWidth;
    public static float FrameworkElement_GetActualWidth(HandleRef jarg1)
    {
        float ret = _FrameworkElement_GetActualWidth(jarg1);

        return ret;
    }

    public delegate IntPtr FrameworkElement_GetContextMenuDelegate(HandleRef jarg1);
    public static FrameworkElement_GetContextMenuDelegate _FrameworkElement_GetContextMenu;
    public static IntPtr FrameworkElement_GetContextMenu(HandleRef jarg1)
    {
        IntPtr ret = _FrameworkElement_GetContextMenu(jarg1);

        return ret;
    }

    public delegate void FrameworkElement_SetContextMenuDelegate(HandleRef jarg1, HandleRef jarg2);
    public static FrameworkElement_SetContextMenuDelegate _FrameworkElement_SetContextMenu;
    public static void FrameworkElement_SetContextMenu(HandleRef jarg1, HandleRef jarg2)
    {
        _FrameworkElement_SetContextMenu(jarg1, jarg2);
    }

    public delegate IntPtr FrameworkElement_GetDataContextDelegate(HandleRef jarg1);
    public static FrameworkElement_GetDataContextDelegate _FrameworkElement_GetDataContext;
    public static IntPtr FrameworkElement_GetDataContext(HandleRef jarg1)
    {
        IntPtr ret = _FrameworkElement_GetDataContext(jarg1);

        return ret;
    }

    public delegate void FrameworkElement_SetDataContextDelegate(HandleRef jarg1, HandleRef jarg2);
    public static FrameworkElement_SetDataContextDelegate _FrameworkElement_SetDataContext;
    public static void FrameworkElement_SetDataContext(HandleRef jarg1, HandleRef jarg2)
    {
        _FrameworkElement_SetDataContext(jarg1, jarg2);
    }

    public delegate IntPtr FrameworkElement_GetDefaultStyleKeyDelegate(HandleRef jarg1);
    public static FrameworkElement_GetDefaultStyleKeyDelegate _FrameworkElement_GetDefaultStyleKey;
    public static IntPtr FrameworkElement_GetDefaultStyleKey(HandleRef jarg1)
    {
        IntPtr ret = _FrameworkElement_GetDefaultStyleKey(jarg1);

        return ret;
    }

    public delegate void FrameworkElement_SetDefaultStyleKeyDelegate(HandleRef jarg1, HandleRef jarg2);
    public static FrameworkElement_SetDefaultStyleKeyDelegate _FrameworkElement_SetDefaultStyleKey;
    public static void FrameworkElement_SetDefaultStyleKey(HandleRef jarg1, HandleRef jarg2)
    {
        _FrameworkElement_SetDefaultStyleKey(jarg1, jarg2);
    }

    public delegate IntPtr FrameworkElement_GetFocusVisualStyleDelegate(HandleRef jarg1);
    public static FrameworkElement_GetFocusVisualStyleDelegate _FrameworkElement_GetFocusVisualStyle;
    public static IntPtr FrameworkElement_GetFocusVisualStyle(HandleRef jarg1)
    {
        IntPtr ret = _FrameworkElement_GetFocusVisualStyle(jarg1);

        return ret;
    }

    public delegate void FrameworkElement_SetFocusVisualStyleDelegate(HandleRef jarg1, HandleRef jarg2);
    public static FrameworkElement_SetFocusVisualStyleDelegate _FrameworkElement_SetFocusVisualStyle;
    public static void FrameworkElement_SetFocusVisualStyle(HandleRef jarg1, HandleRef jarg2)
    {
        _FrameworkElement_SetFocusVisualStyle(jarg1, jarg2);
    }

    public delegate float FrameworkElement_GetHeightDelegate(HandleRef jarg1);
    public static FrameworkElement_GetHeightDelegate _FrameworkElement_GetHeight;
    public static float FrameworkElement_GetHeight(HandleRef jarg1)
    {
        float ret = _FrameworkElement_GetHeight(jarg1);

        return ret;
    }

    public delegate void FrameworkElement_SetHeightDelegate(HandleRef jarg1, float jarg2);
    public static FrameworkElement_SetHeightDelegate _FrameworkElement_SetHeight;
    public static void FrameworkElement_SetHeight(HandleRef jarg1, float jarg2)
    {
        _FrameworkElement_SetHeight(jarg1, jarg2);
    }

    public delegate int FrameworkElement_GetHorizontalAlignmentDelegate(HandleRef jarg1);
    public static FrameworkElement_GetHorizontalAlignmentDelegate _FrameworkElement_GetHorizontalAlignment;
    public static int FrameworkElement_GetHorizontalAlignment(HandleRef jarg1)
    {
        int ret = _FrameworkElement_GetHorizontalAlignment(jarg1);

        return ret;
    }

    public delegate void FrameworkElement_SetHorizontalAlignmentDelegate(HandleRef jarg1, int jarg2);
    public static FrameworkElement_SetHorizontalAlignmentDelegate _FrameworkElement_SetHorizontalAlignment;
    public static void FrameworkElement_SetHorizontalAlignment(HandleRef jarg1, int jarg2)
    {
        _FrameworkElement_SetHorizontalAlignment(jarg1, jarg2);
    }

    public delegate IntPtr FrameworkElement_GetLayoutTransformDelegate(HandleRef jarg1);
    public static FrameworkElement_GetLayoutTransformDelegate _FrameworkElement_GetLayoutTransform;
    public static IntPtr FrameworkElement_GetLayoutTransform(HandleRef jarg1)
    {
        IntPtr ret = _FrameworkElement_GetLayoutTransform(jarg1);

        return ret;
    }

    public delegate void FrameworkElement_SetLayoutTransformDelegate(HandleRef jarg1, HandleRef jarg2);
    public static FrameworkElement_SetLayoutTransformDelegate _FrameworkElement_SetLayoutTransform;
    public static void FrameworkElement_SetLayoutTransform(HandleRef jarg1, HandleRef jarg2)
    {
        _FrameworkElement_SetLayoutTransform(jarg1, jarg2);
    }

    public delegate IntPtr FrameworkElement_GetMarginDelegate(HandleRef jarg1);
    public static FrameworkElement_GetMarginDelegate _FrameworkElement_GetMargin;
    public static IntPtr FrameworkElement_GetMargin(HandleRef jarg1)
    {
        IntPtr ret = _FrameworkElement_GetMargin(jarg1);

        return ret;
    }

    public delegate void FrameworkElement_SetMarginDelegate(HandleRef jarg1, HandleRef jarg2);
    public static FrameworkElement_SetMarginDelegate _FrameworkElement_SetMargin;
    public static void FrameworkElement_SetMargin(HandleRef jarg1, HandleRef jarg2)
    {
        _FrameworkElement_SetMargin(jarg1, jarg2);
    }

    public delegate float FrameworkElement_GetMaxHeightDelegate(HandleRef jarg1);
    public static FrameworkElement_GetMaxHeightDelegate _FrameworkElement_GetMaxHeight;
    public static float FrameworkElement_GetMaxHeight(HandleRef jarg1)
    {
        float ret = _FrameworkElement_GetMaxHeight(jarg1);

        return ret;
    }

    public delegate void FrameworkElement_SetMaxHeightDelegate(HandleRef jarg1, float jarg2);
    public static FrameworkElement_SetMaxHeightDelegate _FrameworkElement_SetMaxHeight;
    public static void FrameworkElement_SetMaxHeight(HandleRef jarg1, float jarg2)
    {
        _FrameworkElement_SetMaxHeight(jarg1, jarg2);
    }

    public delegate float FrameworkElement_GetMaxWidthDelegate(HandleRef jarg1);
    public static FrameworkElement_GetMaxWidthDelegate _FrameworkElement_GetMaxWidth;
    public static float FrameworkElement_GetMaxWidth(HandleRef jarg1)
    {
        float ret = _FrameworkElement_GetMaxWidth(jarg1);

        return ret;
    }

    public delegate void FrameworkElement_SetMaxWidthDelegate(HandleRef jarg1, float jarg2);
    public static FrameworkElement_SetMaxWidthDelegate _FrameworkElement_SetMaxWidth;
    public static void FrameworkElement_SetMaxWidth(HandleRef jarg1, float jarg2)
    {
        _FrameworkElement_SetMaxWidth(jarg1, jarg2);
    }

    public delegate float FrameworkElement_GetMinHeightDelegate(HandleRef jarg1);
    public static FrameworkElement_GetMinHeightDelegate _FrameworkElement_GetMinHeight;
    public static float FrameworkElement_GetMinHeight(HandleRef jarg1)
    {
        float ret = _FrameworkElement_GetMinHeight(jarg1);

        return ret;
    }

    public delegate void FrameworkElement_SetMinHeightDelegate(HandleRef jarg1, float jarg2);
    public static FrameworkElement_SetMinHeightDelegate _FrameworkElement_SetMinHeight;
    public static void FrameworkElement_SetMinHeight(HandleRef jarg1, float jarg2)
    {
        _FrameworkElement_SetMinHeight(jarg1, jarg2);
    }

    public delegate float FrameworkElement_GetMinWidthDelegate(HandleRef jarg1);
    public static FrameworkElement_GetMinWidthDelegate _FrameworkElement_GetMinWidth;
    public static float FrameworkElement_GetMinWidth(HandleRef jarg1)
    {
        float ret = _FrameworkElement_GetMinWidth(jarg1);

        return ret;
    }

    public delegate void FrameworkElement_SetMinWidthDelegate(HandleRef jarg1, float jarg2);
    public static FrameworkElement_SetMinWidthDelegate _FrameworkElement_SetMinWidth;
    public static void FrameworkElement_SetMinWidth(HandleRef jarg1, float jarg2)
    {
        _FrameworkElement_SetMinWidth(jarg1, jarg2);
    }

    public delegate IntPtr FrameworkElement_GetNameDelegate(HandleRef jarg1);
    public static FrameworkElement_GetNameDelegate _FrameworkElement_GetName;
    public static IntPtr FrameworkElement_GetName(HandleRef jarg1)
    {
        IntPtr ret = _FrameworkElement_GetName(jarg1);

        return ret;
    }

    public delegate void FrameworkElement_SetNameDelegate(HandleRef jarg1, IntPtr jarg2);
    public static FrameworkElement_SetNameDelegate _FrameworkElement_SetName;
    public static void FrameworkElement_SetName(HandleRef jarg1, IntPtr jarg2)
    {
        _FrameworkElement_SetName(jarg1, jarg2);
    }

    public delegate bool FrameworkElement_GetOverridesDefaultStyleDelegate(HandleRef jarg1);
    public static FrameworkElement_GetOverridesDefaultStyleDelegate _FrameworkElement_GetOverridesDefaultStyle;
    public static bool FrameworkElement_GetOverridesDefaultStyle(HandleRef jarg1)
    {
        bool ret = _FrameworkElement_GetOverridesDefaultStyle(jarg1);

        return ret;
    }

    public delegate void FrameworkElement_SetOverridesDefaultStyleDelegate(HandleRef jarg1, bool jarg2);
    public static FrameworkElement_SetOverridesDefaultStyleDelegate _FrameworkElement_SetOverridesDefaultStyle;
    public static void FrameworkElement_SetOverridesDefaultStyle(HandleRef jarg1, bool jarg2)
    {
        _FrameworkElement_SetOverridesDefaultStyle(jarg1, jarg2);
    }

    public delegate IntPtr FrameworkElement_GetStyleDelegate(HandleRef jarg1);
    public static FrameworkElement_GetStyleDelegate _FrameworkElement_GetStyle;
    public static IntPtr FrameworkElement_GetStyle(HandleRef jarg1)
    {
        IntPtr ret = _FrameworkElement_GetStyle(jarg1);

        return ret;
    }

    public delegate void FrameworkElement_SetStyleDelegate(HandleRef jarg1, HandleRef jarg2);
    public static FrameworkElement_SetStyleDelegate _FrameworkElement_SetStyle;
    public static void FrameworkElement_SetStyle(HandleRef jarg1, HandleRef jarg2)
    {
        _FrameworkElement_SetStyle(jarg1, jarg2);
    }

    public delegate IntPtr FrameworkElement_GetTagDelegate(HandleRef jarg1);
    public static FrameworkElement_GetTagDelegate _FrameworkElement_GetTag;
    public static IntPtr FrameworkElement_GetTag(HandleRef jarg1)
    {
        IntPtr ret = _FrameworkElement_GetTag(jarg1);

        return ret;
    }

    public delegate void FrameworkElement_SetTag__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2);
    public static FrameworkElement_SetTag__SWIG_0Delegate _FrameworkElement_SetTag__SWIG_0;
    public static void FrameworkElement_SetTag__SWIG_0(HandleRef jarg1, HandleRef jarg2)
    {
        _FrameworkElement_SetTag__SWIG_0(jarg1, jarg2);
    }

    public delegate void FrameworkElement_SetTag__SWIG_1Delegate(HandleRef jarg1, string jarg2);
    public static FrameworkElement_SetTag__SWIG_1Delegate _FrameworkElement_SetTag__SWIG_1;
    public static void FrameworkElement_SetTag__SWIG_1(HandleRef jarg1, string jarg2)
    {
        _FrameworkElement_SetTag__SWIG_1(jarg1, jarg2);
    }

    public delegate IntPtr FrameworkElement_GetToolTipDelegate(HandleRef jarg1);
    public static FrameworkElement_GetToolTipDelegate _FrameworkElement_GetToolTip;
    public static IntPtr FrameworkElement_GetToolTip(HandleRef jarg1)
    {
        IntPtr ret = _FrameworkElement_GetToolTip(jarg1);

        return ret;
    }

    public delegate void FrameworkElement_SetToolTip__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2);
    public static FrameworkElement_SetToolTip__SWIG_0Delegate _FrameworkElement_SetToolTip__SWIG_0;
    public static void FrameworkElement_SetToolTip__SWIG_0(HandleRef jarg1, HandleRef jarg2)
    {
        _FrameworkElement_SetToolTip__SWIG_0(jarg1, jarg2);
    }

    public delegate void FrameworkElement_SetToolTip__SWIG_1Delegate(HandleRef jarg1, string jarg2);
    public static FrameworkElement_SetToolTip__SWIG_1Delegate _FrameworkElement_SetToolTip__SWIG_1;
    public static void FrameworkElement_SetToolTip__SWIG_1(HandleRef jarg1, string jarg2)
    {
        _FrameworkElement_SetToolTip__SWIG_1(jarg1, jarg2);
    }

    public delegate bool FrameworkElement_GetUseLayoutRoundingDelegate(HandleRef jarg1);
    public static FrameworkElement_GetUseLayoutRoundingDelegate _FrameworkElement_GetUseLayoutRounding;
    public static bool FrameworkElement_GetUseLayoutRounding(HandleRef jarg1)
    {
        bool ret = _FrameworkElement_GetUseLayoutRounding(jarg1);

        return ret;
    }

    public delegate void FrameworkElement_SetUseLayoutRoundingDelegate(HandleRef jarg1, bool jarg2);
    public static FrameworkElement_SetUseLayoutRoundingDelegate _FrameworkElement_SetUseLayoutRounding;
    public static void FrameworkElement_SetUseLayoutRounding(HandleRef jarg1, bool jarg2)
    {
        _FrameworkElement_SetUseLayoutRounding(jarg1, jarg2);
    }

    public delegate int FrameworkElement_GetVerticalAlignmentDelegate(HandleRef jarg1);
    public static FrameworkElement_GetVerticalAlignmentDelegate _FrameworkElement_GetVerticalAlignment;
    public static int FrameworkElement_GetVerticalAlignment(HandleRef jarg1)
    {
        int ret = _FrameworkElement_GetVerticalAlignment(jarg1);

        return ret;
    }

    public delegate void FrameworkElement_SetVerticalAlignmentDelegate(HandleRef jarg1, int jarg2);
    public static FrameworkElement_SetVerticalAlignmentDelegate _FrameworkElement_SetVerticalAlignment;
    public static void FrameworkElement_SetVerticalAlignment(HandleRef jarg1, int jarg2)
    {
        _FrameworkElement_SetVerticalAlignment(jarg1, jarg2);
    }

    public delegate float FrameworkElement_GetWidthDelegate(HandleRef jarg1);
    public static FrameworkElement_GetWidthDelegate _FrameworkElement_GetWidth;
    public static float FrameworkElement_GetWidth(HandleRef jarg1)
    {
        float ret = _FrameworkElement_GetWidth(jarg1);

        return ret;
    }

    public delegate void FrameworkElement_SetWidthDelegate(HandleRef jarg1, float jarg2);
    public static FrameworkElement_SetWidthDelegate _FrameworkElement_SetWidth;
    public static void FrameworkElement_SetWidth(HandleRef jarg1, float jarg2)
    {
        _FrameworkElement_SetWidth(jarg1, jarg2);
    }

    public delegate IntPtr FrameworkElement_GetTriggersDelegate(HandleRef jarg1);
    public static FrameworkElement_GetTriggersDelegate _FrameworkElement_GetTriggers;
    public static IntPtr FrameworkElement_GetTriggers(HandleRef jarg1)
    {
        IntPtr ret = _FrameworkElement_GetTriggers(jarg1);

        return ret;
    }

    public delegate bool FrameworkElement_IsLoadedDelegate(HandleRef jarg1);
    public static FrameworkElement_IsLoadedDelegate _FrameworkElement_IsLoaded;
    public static bool FrameworkElement_IsLoaded(HandleRef jarg1)
    {
        bool ret = _FrameworkElement_IsLoaded(jarg1);

        return ret;
    }

    public delegate void FrameworkElement_BringIntoView__SWIG_0Delegate(HandleRef jarg1);
    public static FrameworkElement_BringIntoView__SWIG_0Delegate _FrameworkElement_BringIntoView__SWIG_0;
    public static void FrameworkElement_BringIntoView__SWIG_0(HandleRef jarg1)
    {
        _FrameworkElement_BringIntoView__SWIG_0(jarg1);
    }

    public delegate void FrameworkElement_BringIntoView__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static FrameworkElement_BringIntoView__SWIG_1Delegate _FrameworkElement_BringIntoView__SWIG_1;
    public static void FrameworkElement_BringIntoView__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        _FrameworkElement_BringIntoView__SWIG_1(jarg1, jarg2);
    }

    public delegate IntPtr FrameworkElement_GetParentDelegate(HandleRef jarg1);
    public static FrameworkElement_GetParentDelegate _FrameworkElement_GetParent;
    public static IntPtr FrameworkElement_GetParent(HandleRef jarg1)
    {
        IntPtr ret = _FrameworkElement_GetParent(jarg1);

        return ret;
    }

    public delegate IntPtr FrameworkElement_GetTemplatedParentDelegate(HandleRef jarg1);
    public static FrameworkElement_GetTemplatedParentDelegate _FrameworkElement_GetTemplatedParent;
    public static IntPtr FrameworkElement_GetTemplatedParent(HandleRef jarg1)
    {
        IntPtr ret = _FrameworkElement_GetTemplatedParent(jarg1);

        return ret;
    }

    public delegate IntPtr FrameworkElement_FindNameDelegate(HandleRef jarg1, string jarg2);
    public static FrameworkElement_FindNameDelegate _FrameworkElement_FindName;
    public static IntPtr FrameworkElement_FindName(HandleRef jarg1, string jarg2)
    {
        IntPtr ret = _FrameworkElement_FindName(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr FrameworkElement_FindNameAndScopeDelegate(HandleRef jarg1, string jarg2);
    public static FrameworkElement_FindNameAndScopeDelegate _FrameworkElement_FindNameAndScope;
    public static IntPtr FrameworkElement_FindNameAndScope(HandleRef jarg1, string jarg2)
    {
        IntPtr ret = _FrameworkElement_FindNameAndScope(jarg1, jarg2);

        return ret;
    }

    public delegate void FrameworkElement_RegisterNameDelegate(HandleRef jarg1, string jarg2, HandleRef jarg3);
    public static FrameworkElement_RegisterNameDelegate _FrameworkElement_RegisterName;
    public static void FrameworkElement_RegisterName(HandleRef jarg1, string jarg2, HandleRef jarg3)
    {
        _FrameworkElement_RegisterName(jarg1, jarg2, jarg3);
    }

    public delegate void FrameworkElement_UnregisterNameDelegate(HandleRef jarg1, string jarg2);
    public static FrameworkElement_UnregisterNameDelegate _FrameworkElement_UnregisterName;
    public static void FrameworkElement_UnregisterName(HandleRef jarg1, string jarg2)
    {
        _FrameworkElement_UnregisterName(jarg1, jarg2);
    }

    public delegate void FrameworkElement_UpdateNameDelegate(HandleRef jarg1, string jarg2, HandleRef jarg3);
    public static FrameworkElement_UpdateNameDelegate _FrameworkElement_UpdateName;
    public static void FrameworkElement_UpdateName(HandleRef jarg1, string jarg2, HandleRef jarg3)
    {
        _FrameworkElement_UpdateName(jarg1, jarg2, jarg3);
    }

    public delegate IntPtr FrameworkElement_GetResourcesDelegate(HandleRef jarg1);
    public static FrameworkElement_GetResourcesDelegate _FrameworkElement_GetResources;
    public static IntPtr FrameworkElement_GetResources(HandleRef jarg1)
    {
        IntPtr ret = _FrameworkElement_GetResources(jarg1);

        return ret;
    }

    public delegate void FrameworkElement_SetResourcesDelegate(HandleRef jarg1, HandleRef jarg2);
    public static FrameworkElement_SetResourcesDelegate _FrameworkElement_SetResources;
    public static void FrameworkElement_SetResources(HandleRef jarg1, HandleRef jarg2)
    {
        _FrameworkElement_SetResources(jarg1, jarg2);
    }

    public delegate void delete_FrameworkTemplateDelegate(HandleRef jarg1);
    public static delete_FrameworkTemplateDelegate _delete_FrameworkTemplate;
    public static void delete_FrameworkTemplate(HandleRef jarg1)
    {
        _delete_FrameworkTemplate(jarg1);
    }

    public delegate IntPtr FrameworkTemplate_ApplyDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static FrameworkTemplate_ApplyDelegate _FrameworkTemplate_Apply;
    public static IntPtr FrameworkTemplate_Apply(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        IntPtr ret = _FrameworkTemplate_Apply(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr FrameworkTemplate_GetResourcesDelegate(HandleRef jarg1);
    public static FrameworkTemplate_GetResourcesDelegate _FrameworkTemplate_GetResources;
    public static IntPtr FrameworkTemplate_GetResources(HandleRef jarg1)
    {
        IntPtr ret = _FrameworkTemplate_GetResources(jarg1);

        return ret;
    }

    public delegate void FrameworkTemplate_SetResourcesDelegate(HandleRef jarg1, HandleRef jarg2);
    public static FrameworkTemplate_SetResourcesDelegate _FrameworkTemplate_SetResources;
    public static void FrameworkTemplate_SetResources(HandleRef jarg1, HandleRef jarg2)
    {
        _FrameworkTemplate_SetResources(jarg1, jarg2);
    }

    public delegate IntPtr FrameworkTemplate_GetVisualTreeDelegate(HandleRef jarg1);
    public static FrameworkTemplate_GetVisualTreeDelegate _FrameworkTemplate_GetVisualTree;
    public static IntPtr FrameworkTemplate_GetVisualTree(HandleRef jarg1)
    {
        IntPtr ret = _FrameworkTemplate_GetVisualTree(jarg1);

        return ret;
    }

    public delegate void FrameworkTemplate_SetVisualTreeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static FrameworkTemplate_SetVisualTreeDelegate _FrameworkTemplate_SetVisualTree;
    public static void FrameworkTemplate_SetVisualTree(HandleRef jarg1, HandleRef jarg2)
    {
        _FrameworkTemplate_SetVisualTree(jarg1, jarg2);
    }

    public delegate bool FrameworkTemplate_IsInitializedDelegate(HandleRef jarg1);
    public static FrameworkTemplate_IsInitializedDelegate _FrameworkTemplate_IsInitialized;
    public static bool FrameworkTemplate_IsInitialized(HandleRef jarg1)
    {
        bool ret = _FrameworkTemplate_IsInitialized(jarg1);

        return ret;
    }

    public delegate void FrameworkTemplate_InitDelegate(HandleRef jarg1);
    public static FrameworkTemplate_InitDelegate _FrameworkTemplate_Init;
    public static void FrameworkTemplate_Init(HandleRef jarg1)
    {
        _FrameworkTemplate_Init(jarg1);
    }

    public delegate IntPtr FrameworkTemplate_FindNameDelegate(HandleRef jarg1, string jarg2);
    public static FrameworkTemplate_FindNameDelegate _FrameworkTemplate_FindName;
    public static IntPtr FrameworkTemplate_FindName(HandleRef jarg1, string jarg2)
    {
        IntPtr ret = _FrameworkTemplate_FindName(jarg1, jarg2);

        return ret;
    }

    public delegate void FrameworkTemplate_RegisterNameDelegate(HandleRef jarg1, string jarg2, HandleRef jarg3);
    public static FrameworkTemplate_RegisterNameDelegate _FrameworkTemplate_RegisterName;
    public static void FrameworkTemplate_RegisterName(HandleRef jarg1, string jarg2, HandleRef jarg3)
    {
        _FrameworkTemplate_RegisterName(jarg1, jarg2, jarg3);
    }

    public delegate void FrameworkTemplate_UnregisterNameDelegate(HandleRef jarg1, string jarg2);
    public static FrameworkTemplate_UnregisterNameDelegate _FrameworkTemplate_UnregisterName;
    public static void FrameworkTemplate_UnregisterName(HandleRef jarg1, string jarg2)
    {
        _FrameworkTemplate_UnregisterName(jarg1, jarg2);
    }

    public delegate void FrameworkTemplate_UpdateNameDelegate(HandleRef jarg1, string jarg2, HandleRef jarg3);
    public static FrameworkTemplate_UpdateNameDelegate _FrameworkTemplate_UpdateName;
    public static void FrameworkTemplate_UpdateName(HandleRef jarg1, string jarg2, HandleRef jarg3)
    {
        _FrameworkTemplate_UpdateName(jarg1, jarg2, jarg3);
    }

    public delegate IntPtr FrameworkTemplate_NameScopeChangedDelegate(HandleRef jarg1);
    public static FrameworkTemplate_NameScopeChangedDelegate _FrameworkTemplate_NameScopeChanged;
    public static IntPtr FrameworkTemplate_NameScopeChanged(HandleRef jarg1)
    {
        IntPtr ret = _FrameworkTemplate_NameScopeChanged(jarg1);

        return ret;
    }

    public delegate IntPtr FrameworkTemplate_NameScopeDestroyedDelegate(HandleRef jarg1);
    public static FrameworkTemplate_NameScopeDestroyedDelegate _FrameworkTemplate_NameScopeDestroyed;
    public static IntPtr FrameworkTemplate_NameScopeDestroyed(HandleRef jarg1)
    {
        IntPtr ret = _FrameworkTemplate_NameScopeDestroyed(jarg1);

        return ret;
    }

    public delegate IntPtr FrameworkTemplate_EnumObjectsDelegate(HandleRef jarg1);
    public static FrameworkTemplate_EnumObjectsDelegate _FrameworkTemplate_EnumObjects;
    public static IntPtr FrameworkTemplate_EnumObjects(HandleRef jarg1)
    {
        IntPtr ret = _FrameworkTemplate_EnumObjects(jarg1);

        return ret;
    }

    public delegate IntPtr new_ControlTemplateDelegate();
    public static new_ControlTemplateDelegate _new_ControlTemplate;
    public static IntPtr new_ControlTemplate()
    {
        IntPtr ret = _new_ControlTemplate();

        return ret;
    }

    public delegate void delete_ControlTemplateDelegate(HandleRef jarg1);
    public static delete_ControlTemplateDelegate _delete_ControlTemplate;
    public static void delete_ControlTemplate(HandleRef jarg1)
    {
        _delete_ControlTemplate(jarg1);
    }

    public delegate IntPtr ControlTemplate_GetTargetTypeDelegate(HandleRef jarg1);
    public static ControlTemplate_GetTargetTypeDelegate _ControlTemplate_GetTargetType;
    public static IntPtr ControlTemplate_GetTargetType(HandleRef jarg1)
    {
        IntPtr ret = _ControlTemplate_GetTargetType(jarg1);

        return ret;
    }

    public delegate void ControlTemplate_SetTargetTypeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ControlTemplate_SetTargetTypeDelegate _ControlTemplate_SetTargetType;
    public static void ControlTemplate_SetTargetType(HandleRef jarg1, HandleRef jarg2)
    {
        _ControlTemplate_SetTargetType(jarg1, jarg2);
    }

    public delegate IntPtr ControlTemplate_GetTriggersDelegate(HandleRef jarg1);
    public static ControlTemplate_GetTriggersDelegate _ControlTemplate_GetTriggers;
    public static IntPtr ControlTemplate_GetTriggers(HandleRef jarg1)
    {
        IntPtr ret = _ControlTemplate_GetTriggers(jarg1);

        return ret;
    }

    public delegate IntPtr new_ControlDelegate();
    public static new_ControlDelegate _new_Control;
    public static IntPtr new_Control()
    {
        IntPtr ret = _new_Control();

        return ret;
    }

    public delegate void delete_ControlDelegate(HandleRef jarg1);
    public static delete_ControlDelegate _delete_Control;
    public static void delete_Control(HandleRef jarg1)
    {
        _delete_Control(jarg1);
    }

    public delegate IntPtr Control_GetBackgroundDelegate(HandleRef jarg1);
    public static Control_GetBackgroundDelegate _Control_GetBackground;
    public static IntPtr Control_GetBackground(HandleRef jarg1)
    {
        IntPtr ret = _Control_GetBackground(jarg1);

        return ret;
    }

    public delegate void Control_SetBackgroundDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Control_SetBackgroundDelegate _Control_SetBackground;
    public static void Control_SetBackground(HandleRef jarg1, HandleRef jarg2)
    {
        _Control_SetBackground(jarg1, jarg2);
    }

    public delegate IntPtr Control_GetBorderBrushDelegate(HandleRef jarg1);
    public static Control_GetBorderBrushDelegate _Control_GetBorderBrush;
    public static IntPtr Control_GetBorderBrush(HandleRef jarg1)
    {
        IntPtr ret = _Control_GetBorderBrush(jarg1);

        return ret;
    }

    public delegate void Control_SetBorderBrushDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Control_SetBorderBrushDelegate _Control_SetBorderBrush;
    public static void Control_SetBorderBrush(HandleRef jarg1, HandleRef jarg2)
    {
        _Control_SetBorderBrush(jarg1, jarg2);
    }

    public delegate IntPtr Control_GetBorderThicknessDelegate(HandleRef jarg1);
    public static Control_GetBorderThicknessDelegate _Control_GetBorderThickness;
    public static IntPtr Control_GetBorderThickness(HandleRef jarg1)
    {
        IntPtr ret = _Control_GetBorderThickness(jarg1);

        return ret;
    }

    public delegate void Control_SetBorderThicknessDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Control_SetBorderThicknessDelegate _Control_SetBorderThickness;
    public static void Control_SetBorderThickness(HandleRef jarg1, HandleRef jarg2)
    {
        _Control_SetBorderThickness(jarg1, jarg2);
    }

    public delegate IntPtr Control_GetFontFamilyDelegate(HandleRef jarg1);
    public static Control_GetFontFamilyDelegate _Control_GetFontFamily;
    public static IntPtr Control_GetFontFamily(HandleRef jarg1)
    {
        IntPtr ret = _Control_GetFontFamily(jarg1);

        return ret;
    }

    public delegate void Control_SetFontFamilyDelegate(HandleRef jarg1, IntPtr jarg2);
    public static Control_SetFontFamilyDelegate _Control_SetFontFamily;
    public static void Control_SetFontFamily(HandleRef jarg1, IntPtr jarg2)
    {
        _Control_SetFontFamily(jarg1, jarg2);
    }

    public delegate float Control_GetFontSizeDelegate(HandleRef jarg1);
    public static Control_GetFontSizeDelegate _Control_GetFontSize;
    public static float Control_GetFontSize(HandleRef jarg1)
    {
        float ret = _Control_GetFontSize(jarg1);

        return ret;
    }

    public delegate void Control_SetFontSizeDelegate(HandleRef jarg1, float jarg2);
    public static Control_SetFontSizeDelegate _Control_SetFontSize;
    public static void Control_SetFontSize(HandleRef jarg1, float jarg2)
    {
        _Control_SetFontSize(jarg1, jarg2);
    }

    public delegate int Control_GetFontStretchDelegate(HandleRef jarg1);
    public static Control_GetFontStretchDelegate _Control_GetFontStretch;
    public static int Control_GetFontStretch(HandleRef jarg1)
    {
        int ret = _Control_GetFontStretch(jarg1);

        return ret;
    }

    public delegate void Control_SetFontStretchDelegate(HandleRef jarg1, int jarg2);
    public static Control_SetFontStretchDelegate _Control_SetFontStretch;
    public static void Control_SetFontStretch(HandleRef jarg1, int jarg2)
    {
        _Control_SetFontStretch(jarg1, jarg2);
    }

    public delegate int Control_GetFontStyleDelegate(HandleRef jarg1);
    public static Control_GetFontStyleDelegate _Control_GetFontStyle;
    public static int Control_GetFontStyle(HandleRef jarg1)
    {
        int ret = _Control_GetFontStyle(jarg1);

        return ret;
    }

    public delegate void Control_SetFontStyleDelegate(HandleRef jarg1, int jarg2);
    public static Control_SetFontStyleDelegate _Control_SetFontStyle;
    public static void Control_SetFontStyle(HandleRef jarg1, int jarg2)
    {
        _Control_SetFontStyle(jarg1, jarg2);
    }

    public delegate int Control_GetFontWeightDelegate(HandleRef jarg1);
    public static Control_GetFontWeightDelegate _Control_GetFontWeight;
    public static int Control_GetFontWeight(HandleRef jarg1)
    {
        int ret = _Control_GetFontWeight(jarg1);

        return ret;
    }

    public delegate void Control_SetFontWeightDelegate(HandleRef jarg1, int jarg2);
    public static Control_SetFontWeightDelegate _Control_SetFontWeight;
    public static void Control_SetFontWeight(HandleRef jarg1, int jarg2)
    {
        _Control_SetFontWeight(jarg1, jarg2);
    }

    public delegate IntPtr Control_GetForegroundDelegate(HandleRef jarg1);
    public static Control_GetForegroundDelegate _Control_GetForeground;
    public static IntPtr Control_GetForeground(HandleRef jarg1)
    {
        IntPtr ret = _Control_GetForeground(jarg1);

        return ret;
    }

    public delegate void Control_SetForegroundDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Control_SetForegroundDelegate _Control_SetForeground;
    public static void Control_SetForeground(HandleRef jarg1, HandleRef jarg2)
    {
        _Control_SetForeground(jarg1, jarg2);
    }

    public delegate int Control_GetHorizontalContentAlignmentDelegate(HandleRef jarg1);
    public static Control_GetHorizontalContentAlignmentDelegate _Control_GetHorizontalContentAlignment;
    public static int Control_GetHorizontalContentAlignment(HandleRef jarg1)
    {
        int ret = _Control_GetHorizontalContentAlignment(jarg1);

        return ret;
    }

    public delegate void Control_SetHorizontalContentAlignmentDelegate(HandleRef jarg1, int jarg2);
    public static Control_SetHorizontalContentAlignmentDelegate _Control_SetHorizontalContentAlignment;
    public static void Control_SetHorizontalContentAlignment(HandleRef jarg1, int jarg2)
    {
        _Control_SetHorizontalContentAlignment(jarg1, jarg2);
    }

    public delegate bool Control_GetIsTabStopDelegate(HandleRef jarg1);
    public static Control_GetIsTabStopDelegate _Control_GetIsTabStop;
    public static bool Control_GetIsTabStop(HandleRef jarg1)
    {
        bool ret = _Control_GetIsTabStop(jarg1);

        return ret;
    }

    public delegate void Control_SetIsTabStopDelegate(HandleRef jarg1, bool jarg2);
    public static Control_SetIsTabStopDelegate _Control_SetIsTabStop;
    public static void Control_SetIsTabStop(HandleRef jarg1, bool jarg2)
    {
        _Control_SetIsTabStop(jarg1, jarg2);
    }

    public delegate IntPtr Control_GetPaddingDelegate(HandleRef jarg1);
    public static Control_GetPaddingDelegate _Control_GetPadding;
    public static IntPtr Control_GetPadding(HandleRef jarg1)
    {
        IntPtr ret = _Control_GetPadding(jarg1);

        return ret;
    }

    public delegate void Control_SetPaddingDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Control_SetPaddingDelegate _Control_SetPadding;
    public static void Control_SetPadding(HandleRef jarg1, HandleRef jarg2)
    {
        _Control_SetPadding(jarg1, jarg2);
    }

    public delegate int Control_GetTabIndexDelegate(HandleRef jarg1);
    public static Control_GetTabIndexDelegate _Control_GetTabIndex;
    public static int Control_GetTabIndex(HandleRef jarg1)
    {
        int ret = _Control_GetTabIndex(jarg1);

        return ret;
    }

    public delegate void Control_SetTabIndexDelegate(HandleRef jarg1, int jarg2);
    public static Control_SetTabIndexDelegate _Control_SetTabIndex;
    public static void Control_SetTabIndex(HandleRef jarg1, int jarg2)
    {
        _Control_SetTabIndex(jarg1, jarg2);
    }

    public delegate IntPtr Control_GetTemplateDelegate(HandleRef jarg1);
    public static Control_GetTemplateDelegate _Control_GetTemplate;
    public static IntPtr Control_GetTemplate(HandleRef jarg1)
    {
        IntPtr ret = _Control_GetTemplate(jarg1);

        return ret;
    }

    public delegate void Control_SetTemplateDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Control_SetTemplateDelegate _Control_SetTemplate;
    public static void Control_SetTemplate(HandleRef jarg1, HandleRef jarg2)
    {
        _Control_SetTemplate(jarg1, jarg2);
    }

    public delegate int Control_GetVerticalContentAlignmentDelegate(HandleRef jarg1);
    public static Control_GetVerticalContentAlignmentDelegate _Control_GetVerticalContentAlignment;
    public static int Control_GetVerticalContentAlignment(HandleRef jarg1)
    {
        int ret = _Control_GetVerticalContentAlignment(jarg1);

        return ret;
    }

    public delegate void Control_SetVerticalContentAlignmentDelegate(HandleRef jarg1, int jarg2);
    public static Control_SetVerticalContentAlignmentDelegate _Control_SetVerticalContentAlignment;
    public static void Control_SetVerticalContentAlignment(HandleRef jarg1, int jarg2)
    {
        _Control_SetVerticalContentAlignment(jarg1, jarg2);
    }

    public delegate IntPtr new_ContentControlDelegate();
    public static new_ContentControlDelegate _new_ContentControl;
    public static IntPtr new_ContentControl()
    {
        IntPtr ret = _new_ContentControl();

        return ret;
    }

    public delegate void delete_ContentControlDelegate(HandleRef jarg1);
    public static delete_ContentControlDelegate _delete_ContentControl;
    public static void delete_ContentControl(HandleRef jarg1)
    {
        _delete_ContentControl(jarg1);
    }

    public delegate IntPtr ContentControl_GetContentDelegate(HandleRef jarg1);
    public static ContentControl_GetContentDelegate _ContentControl_GetContent;
    public static IntPtr ContentControl_GetContent(HandleRef jarg1)
    {
        IntPtr ret = _ContentControl_GetContent(jarg1);

        return ret;
    }

    public delegate void ContentControl_SetContent__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2);
    public static ContentControl_SetContent__SWIG_0Delegate _ContentControl_SetContent__SWIG_0;
    public static void ContentControl_SetContent__SWIG_0(HandleRef jarg1, HandleRef jarg2)
    {
        _ContentControl_SetContent__SWIG_0(jarg1, jarg2);
    }

    public delegate void ContentControl_SetContent__SWIG_1Delegate(HandleRef jarg1, string jarg2);
    public static ContentControl_SetContent__SWIG_1Delegate _ContentControl_SetContent__SWIG_1;
    public static void ContentControl_SetContent__SWIG_1(HandleRef jarg1, string jarg2)
    {
        _ContentControl_SetContent__SWIG_1(jarg1, jarg2);
    }

    public delegate IntPtr ContentControl_GetContentTemplateDelegate(HandleRef jarg1);
    public static ContentControl_GetContentTemplateDelegate _ContentControl_GetContentTemplate;
    public static IntPtr ContentControl_GetContentTemplate(HandleRef jarg1)
    {
        IntPtr ret = _ContentControl_GetContentTemplate(jarg1);

        return ret;
    }

    public delegate void ContentControl_SetContentTemplateDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ContentControl_SetContentTemplateDelegate _ContentControl_SetContentTemplate;
    public static void ContentControl_SetContentTemplate(HandleRef jarg1, HandleRef jarg2)
    {
        _ContentControl_SetContentTemplate(jarg1, jarg2);
    }

    public delegate IntPtr ContentControl_GetContentTemplateSelectorDelegate(HandleRef jarg1);
    public static ContentControl_GetContentTemplateSelectorDelegate _ContentControl_GetContentTemplateSelector;
    public static IntPtr ContentControl_GetContentTemplateSelector(HandleRef jarg1)
    {
        IntPtr ret = _ContentControl_GetContentTemplateSelector(jarg1);

        return ret;
    }

    public delegate void ContentControl_SetContentTemplateSelectorDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ContentControl_SetContentTemplateSelectorDelegate _ContentControl_SetContentTemplateSelector;
    public static void ContentControl_SetContentTemplateSelector(HandleRef jarg1, HandleRef jarg2)
    {
        _ContentControl_SetContentTemplateSelector(jarg1, jarg2);
    }

    public delegate bool ContentControl_GetHasContentDelegate(HandleRef jarg1);
    public static ContentControl_GetHasContentDelegate _ContentControl_GetHasContent;
    public static bool ContentControl_GetHasContent(HandleRef jarg1)
    {
        bool ret = _ContentControl_GetHasContent(jarg1);

        return ret;
    }

    public delegate void ContentControl_PrepareContainerForItemDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static ContentControl_PrepareContainerForItemDelegate _ContentControl_PrepareContainerForItem;
    public static void ContentControl_PrepareContainerForItem(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _ContentControl_PrepareContainerForItem(jarg1, jarg2, jarg3);
    }

    public delegate IntPtr new_Decorator__SWIG_0Delegate(bool jarg1);
    public static new_Decorator__SWIG_0Delegate _new_Decorator__SWIG_0;
    public static IntPtr new_Decorator__SWIG_0(bool jarg1)
    {
        IntPtr ret = _new_Decorator__SWIG_0(jarg1);

        return ret;
    }

    public delegate IntPtr new_Decorator__SWIG_1Delegate();
    public static new_Decorator__SWIG_1Delegate _new_Decorator__SWIG_1;
    public static IntPtr new_Decorator__SWIG_1()
    {
        IntPtr ret = _new_Decorator__SWIG_1();

        return ret;
    }

    public delegate void delete_DecoratorDelegate(HandleRef jarg1);
    public static delete_DecoratorDelegate _delete_Decorator;
    public static void delete_Decorator(HandleRef jarg1)
    {
        _delete_Decorator(jarg1);
    }

    public delegate IntPtr Decorator_GetChildDelegate(HandleRef jarg1);
    public static Decorator_GetChildDelegate _Decorator_GetChild;
    public static IntPtr Decorator_GetChild(HandleRef jarg1)
    {
        IntPtr ret = _Decorator_GetChild(jarg1);

        return ret;
    }

    public delegate void Decorator_SetChildDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Decorator_SetChildDelegate _Decorator_SetChild;
    public static void Decorator_SetChild(HandleRef jarg1, HandleRef jarg2)
    {
        _Decorator_SetChild(jarg1, jarg2);
    }

    public delegate void delete_PanelDelegate(HandleRef jarg1);
    public static delete_PanelDelegate _delete_Panel;
    public static void delete_Panel(HandleRef jarg1)
    {
        _delete_Panel(jarg1);
    }

    public delegate void Panel_InvalidateZOrderDelegate(HandleRef jarg1);
    public static Panel_InvalidateZOrderDelegate _Panel_InvalidateZOrder;
    public static void Panel_InvalidateZOrder(HandleRef jarg1)
    {
        _Panel_InvalidateZOrder(jarg1);
    }

    public delegate IntPtr Panel_GetBackgroundDelegate(HandleRef jarg1);
    public static Panel_GetBackgroundDelegate _Panel_GetBackground;
    public static IntPtr Panel_GetBackground(HandleRef jarg1)
    {
        IntPtr ret = _Panel_GetBackground(jarg1);

        return ret;
    }

    public delegate void Panel_SetBackgroundDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Panel_SetBackgroundDelegate _Panel_SetBackground;
    public static void Panel_SetBackground(HandleRef jarg1, HandleRef jarg2)
    {
        _Panel_SetBackground(jarg1, jarg2);
    }

    public delegate bool Panel_GetIsItemsHostDelegate(HandleRef jarg1);
    public static Panel_GetIsItemsHostDelegate _Panel_GetIsItemsHost;
    public static bool Panel_GetIsItemsHost(HandleRef jarg1)
    {
        bool ret = _Panel_GetIsItemsHost(jarg1);

        return ret;
    }

    public delegate void Panel_SetIsItemsHostDelegate(HandleRef jarg1, bool jarg2);
    public static Panel_SetIsItemsHostDelegate _Panel_SetIsItemsHost;
    public static void Panel_SetIsItemsHost(HandleRef jarg1, bool jarg2)
    {
        _Panel_SetIsItemsHost(jarg1, jarg2);
    }

    public delegate int Panel_GetZIndexDelegate(HandleRef jarg1);
    public static Panel_GetZIndexDelegate _Panel_GetZIndex;
    public static int Panel_GetZIndex(HandleRef jarg1)
    {
        int ret = _Panel_GetZIndex(jarg1);

        return ret;
    }

    public delegate void Panel_SetZIndexDelegate(HandleRef jarg1, int jarg2);
    public static Panel_SetZIndexDelegate _Panel_SetZIndex;
    public static void Panel_SetZIndex(HandleRef jarg1, int jarg2)
    {
        _Panel_SetZIndex(jarg1, jarg2);
    }

    public delegate IntPtr Panel_GetChildrenDelegate(HandleRef jarg1);
    public static Panel_GetChildrenDelegate _Panel_GetChildren;
    public static IntPtr Panel_GetChildren(HandleRef jarg1)
    {
        IntPtr ret = _Panel_GetChildren(jarg1);

        return ret;
    }

    public delegate IntPtr EventArgs_Empty_getDelegate();
    public static EventArgs_Empty_getDelegate _EventArgs_Empty_get;
    public static IntPtr EventArgs_Empty_get()
    {
        IntPtr ret = _EventArgs_Empty_get();

        return ret;
    }

    public delegate IntPtr new_EventArgsDelegate();
    public static new_EventArgsDelegate _new_EventArgs;
    public static IntPtr new_EventArgs()
    {
        IntPtr ret = _new_EventArgs();

        return ret;
    }

    public delegate void delete_EventArgsDelegate(HandleRef jarg1);
    public static delete_EventArgsDelegate _delete_EventArgs;
    public static void delete_EventArgs(HandleRef jarg1)
    {
        _delete_EventArgs(jarg1);
    }

    public delegate void Event__event_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Event__event_setDelegate _Event__event_set;
    public static void Event__event_set(HandleRef jarg1, HandleRef jarg2)
    {
        _Event__event_set(jarg1, jarg2);
    }

    public delegate IntPtr Event__event_getDelegate(HandleRef jarg1);
    public static Event__event_getDelegate _Event__event_get;
    public static IntPtr Event__event_get(HandleRef jarg1)
    {
        IntPtr ret = _Event__event_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_Event__SWIG_0Delegate(HandleRef jarg1);
    public static new_Event__SWIG_0Delegate _new_Event__SWIG_0;
    public static IntPtr new_Event__SWIG_0(HandleRef jarg1)
    {
        IntPtr ret = _new_Event__SWIG_0(jarg1);

        return ret;
    }

    public delegate IntPtr new_Event__SWIG_1Delegate();
    public static new_Event__SWIG_1Delegate _new_Event__SWIG_1;
    public static IntPtr new_Event__SWIG_1()
    {
        IntPtr ret = _new_Event__SWIG_1();

        return ret;
    }

    public delegate void delete_EventDelegate(HandleRef jarg1);
    public static delete_EventDelegate _delete_Event;
    public static void delete_Event(HandleRef jarg1)
    {
        _delete_Event(jarg1);
    }

    public delegate IntPtr new_RoutedEvent__SWIG_0Delegate(IntPtr jarg1);
    public static new_RoutedEvent__SWIG_0Delegate _new_RoutedEvent__SWIG_0;
    public static IntPtr new_RoutedEvent__SWIG_0(IntPtr jarg1)
    {
        IntPtr ret = _new_RoutedEvent__SWIG_0(jarg1);

        return ret;
    }

    public delegate IntPtr new_RoutedEvent__SWIG_1Delegate(IntPtr jarg1, HandleRef jarg2, int jarg3);
    public static new_RoutedEvent__SWIG_1Delegate _new_RoutedEvent__SWIG_1;
    public static IntPtr new_RoutedEvent__SWIG_1(IntPtr jarg1, HandleRef jarg2, int jarg3)
    {
        IntPtr ret = _new_RoutedEvent__SWIG_1(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void delete_RoutedEventDelegate(HandleRef jarg1);
    public static delete_RoutedEventDelegate _delete_RoutedEvent;
    public static void delete_RoutedEvent(HandleRef jarg1)
    {
        _delete_RoutedEvent(jarg1);
    }

    public delegate IntPtr RoutedEvent_GetNameDelegate(HandleRef jarg1);
    public static RoutedEvent_GetNameDelegate _RoutedEvent_GetName;
    public static IntPtr RoutedEvent_GetName(HandleRef jarg1)
    {
        IntPtr ret = _RoutedEvent_GetName(jarg1);

        return ret;
    }

    public delegate IntPtr RoutedEvent_GetOwnerTypeDelegate(HandleRef jarg1);
    public static RoutedEvent_GetOwnerTypeDelegate _RoutedEvent_GetOwnerType;
    public static IntPtr RoutedEvent_GetOwnerType(HandleRef jarg1)
    {
        IntPtr ret = _RoutedEvent_GetOwnerType(jarg1);

        return ret;
    }

    public delegate void RoutedEvent_SetOwnerTypeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static RoutedEvent_SetOwnerTypeDelegate _RoutedEvent_SetOwnerType;
    public static void RoutedEvent_SetOwnerType(HandleRef jarg1, HandleRef jarg2)
    {
        _RoutedEvent_SetOwnerType(jarg1, jarg2);
    }

    public delegate int RoutedEvent_GetRoutingStrategyDelegate(HandleRef jarg1);
    public static RoutedEvent_GetRoutingStrategyDelegate _RoutedEvent_GetRoutingStrategy;
    public static int RoutedEvent_GetRoutingStrategy(HandleRef jarg1)
    {
        int ret = _RoutedEvent_GetRoutingStrategy(jarg1);

        return ret;
    }

    public delegate void RoutedEvent_SetRoutingStrategyDelegate(HandleRef jarg1, int jarg2);
    public static RoutedEvent_SetRoutingStrategyDelegate _RoutedEvent_SetRoutingStrategy;
    public static void RoutedEvent_SetRoutingStrategy(HandleRef jarg1, int jarg2)
    {
        _RoutedEvent_SetRoutingStrategy(jarg1, jarg2);
    }

    public delegate IntPtr RoutedEvent_GetSerializerDelegate(HandleRef jarg1);
    public static RoutedEvent_GetSerializerDelegate _RoutedEvent_GetSerializer;
    public static IntPtr RoutedEvent_GetSerializer(HandleRef jarg1)
    {
        IntPtr ret = _RoutedEvent_GetSerializer(jarg1);

        return ret;
    }

    public delegate void RoutedEventArgs_source_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static RoutedEventArgs_source_setDelegate _RoutedEventArgs_source_set;
    public static void RoutedEventArgs_source_set(HandleRef jarg1, HandleRef jarg2)
    {
        _RoutedEventArgs_source_set(jarg1, jarg2);
    }

    public delegate IntPtr RoutedEventArgs_source_getDelegate(HandleRef jarg1);
    public static RoutedEventArgs_source_getDelegate _RoutedEventArgs_source_get;
    public static IntPtr RoutedEventArgs_source_get(HandleRef jarg1)
    {
        IntPtr ret = _RoutedEventArgs_source_get(jarg1);

        return ret;
    }

    public delegate void RoutedEventArgs_routedEvent_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static RoutedEventArgs_routedEvent_setDelegate _RoutedEventArgs_routedEvent_set;
    public static void RoutedEventArgs_routedEvent_set(HandleRef jarg1, HandleRef jarg2)
    {
        _RoutedEventArgs_routedEvent_set(jarg1, jarg2);
    }

    public delegate IntPtr RoutedEventArgs_routedEvent_getDelegate(HandleRef jarg1);
    public static RoutedEventArgs_routedEvent_getDelegate _RoutedEventArgs_routedEvent_get;
    public static IntPtr RoutedEventArgs_routedEvent_get(HandleRef jarg1)
    {
        IntPtr ret = _RoutedEventArgs_routedEvent_get(jarg1);

        return ret;
    }

    public delegate void RoutedEventArgs_handled_setDelegate(HandleRef jarg1, bool jarg2);
    public static RoutedEventArgs_handled_setDelegate _RoutedEventArgs_handled_set;
    public static void RoutedEventArgs_handled_set(HandleRef jarg1, bool jarg2)
    {
        _RoutedEventArgs_handled_set(jarg1, jarg2);
    }

    public delegate bool RoutedEventArgs_handled_getDelegate(HandleRef jarg1);
    public static RoutedEventArgs_handled_getDelegate _RoutedEventArgs_handled_get;
    public static bool RoutedEventArgs_handled_get(HandleRef jarg1)
    {
        bool ret = _RoutedEventArgs_handled_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_RoutedEventArgsDelegate(HandleRef jarg1, HandleRef jarg2);
    public static new_RoutedEventArgsDelegate _new_RoutedEventArgs;
    public static IntPtr new_RoutedEventArgs(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_RoutedEventArgs(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_RoutedEventArgsDelegate(HandleRef jarg1);
    public static delete_RoutedEventArgsDelegate _delete_RoutedEventArgs;
    public static void delete_RoutedEventArgs(HandleRef jarg1)
    {
        _delete_RoutedEventArgs(jarg1);
    }

    public delegate void SerializeRoutedEventHelper_ev_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static SerializeRoutedEventHelper_ev_setDelegate _SerializeRoutedEventHelper_ev_set;
    public static void SerializeRoutedEventHelper_ev_set(HandleRef jarg1, HandleRef jarg2)
    {
        _SerializeRoutedEventHelper_ev_set(jarg1, jarg2);
    }

    public delegate IntPtr SerializeRoutedEventHelper_ev_getDelegate(HandleRef jarg1);
    public static SerializeRoutedEventHelper_ev_getDelegate _SerializeRoutedEventHelper_ev_get;
    public static IntPtr SerializeRoutedEventHelper_ev_get(HandleRef jarg1)
    {
        IntPtr ret = _SerializeRoutedEventHelper_ev_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_SerializeRoutedEventHelper__SWIG_0Delegate(HandleRef jarg1);
    public static new_SerializeRoutedEventHelper__SWIG_0Delegate _new_SerializeRoutedEventHelper__SWIG_0;
    public static IntPtr new_SerializeRoutedEventHelper__SWIG_0(HandleRef jarg1)
    {
        IntPtr ret = _new_SerializeRoutedEventHelper__SWIG_0(jarg1);

        return ret;
    }

    public delegate IntPtr new_SerializeRoutedEventHelper__SWIG_1Delegate();
    public static new_SerializeRoutedEventHelper__SWIG_1Delegate _new_SerializeRoutedEventHelper__SWIG_1;
    public static IntPtr new_SerializeRoutedEventHelper__SWIG_1()
    {
        IntPtr ret = _new_SerializeRoutedEventHelper__SWIG_1();

        return ret;
    }

    public delegate void delete_SerializeRoutedEventHelperDelegate(HandleRef jarg1);
    public static delete_SerializeRoutedEventHelperDelegate _delete_SerializeRoutedEventHelper;
    public static void delete_SerializeRoutedEventHelper(HandleRef jarg1)
    {
        _delete_SerializeRoutedEventHelper(jarg1);
    }

    public delegate IntPtr new_ItemsControlDelegate();
    public static new_ItemsControlDelegate _new_ItemsControl;
    public static IntPtr new_ItemsControl()
    {
        IntPtr ret = _new_ItemsControl();

        return ret;
    }

    public delegate void delete_ItemsControlDelegate(HandleRef jarg1);
    public static delete_ItemsControlDelegate _delete_ItemsControl;
    public static void delete_ItemsControl(HandleRef jarg1)
    {
        _delete_ItemsControl(jarg1);
    }

    public delegate IntPtr ItemsControl_GetDisplayMemberPathDelegate(HandleRef jarg1);
    public static ItemsControl_GetDisplayMemberPathDelegate _ItemsControl_GetDisplayMemberPath;
    public static IntPtr ItemsControl_GetDisplayMemberPath(HandleRef jarg1)
    {
        IntPtr ret = _ItemsControl_GetDisplayMemberPath(jarg1);

        return ret;
    }

    public delegate void ItemsControl_SetDisplayMemberPathDelegate(HandleRef jarg1, IntPtr jarg2);
    public static ItemsControl_SetDisplayMemberPathDelegate _ItemsControl_SetDisplayMemberPath;
    public static void ItemsControl_SetDisplayMemberPath(HandleRef jarg1, IntPtr jarg2)
    {
        _ItemsControl_SetDisplayMemberPath(jarg1, jarg2);
    }

    public delegate IntPtr ItemsControl_GetGroupStyleSelectorDelegate(HandleRef jarg1);
    public static ItemsControl_GetGroupStyleSelectorDelegate _ItemsControl_GetGroupStyleSelector;
    public static IntPtr ItemsControl_GetGroupStyleSelector(HandleRef jarg1)
    {
        IntPtr ret = _ItemsControl_GetGroupStyleSelector(jarg1);

        return ret;
    }

    public delegate void ItemsControl_SetGroupStyleSelectorDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ItemsControl_SetGroupStyleSelectorDelegate _ItemsControl_SetGroupStyleSelector;
    public static void ItemsControl_SetGroupStyleSelector(HandleRef jarg1, HandleRef jarg2)
    {
        _ItemsControl_SetGroupStyleSelector(jarg1, jarg2);
    }

    public delegate bool ItemsControl_GetHasItemsDelegate(HandleRef jarg1);
    public static ItemsControl_GetHasItemsDelegate _ItemsControl_GetHasItems;
    public static bool ItemsControl_GetHasItems(HandleRef jarg1)
    {
        bool ret = _ItemsControl_GetHasItems(jarg1);

        return ret;
    }

    public delegate bool ItemsControl_GetIsGroupingDelegate(HandleRef jarg1);
    public static ItemsControl_GetIsGroupingDelegate _ItemsControl_GetIsGrouping;
    public static bool ItemsControl_GetIsGrouping(HandleRef jarg1)
    {
        bool ret = _ItemsControl_GetIsGrouping(jarg1);

        return ret;
    }

    public delegate bool ItemsControl_GetIsTextSearchEnabledDelegate(HandleRef jarg1);
    public static ItemsControl_GetIsTextSearchEnabledDelegate _ItemsControl_GetIsTextSearchEnabled;
    public static bool ItemsControl_GetIsTextSearchEnabled(HandleRef jarg1)
    {
        bool ret = _ItemsControl_GetIsTextSearchEnabled(jarg1);

        return ret;
    }

    public delegate void ItemsControl_SetIsTextSearchEnabledDelegate(HandleRef jarg1, bool jarg2);
    public static ItemsControl_SetIsTextSearchEnabledDelegate _ItemsControl_SetIsTextSearchEnabled;
    public static void ItemsControl_SetIsTextSearchEnabled(HandleRef jarg1, bool jarg2)
    {
        _ItemsControl_SetIsTextSearchEnabled(jarg1, jarg2);
    }

    public delegate IntPtr ItemsControl_GetItemContainerStyleDelegate(HandleRef jarg1);
    public static ItemsControl_GetItemContainerStyleDelegate _ItemsControl_GetItemContainerStyle;
    public static IntPtr ItemsControl_GetItemContainerStyle(HandleRef jarg1)
    {
        IntPtr ret = _ItemsControl_GetItemContainerStyle(jarg1);

        return ret;
    }

    public delegate void ItemsControl_SetItemContainerStyleDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ItemsControl_SetItemContainerStyleDelegate _ItemsControl_SetItemContainerStyle;
    public static void ItemsControl_SetItemContainerStyle(HandleRef jarg1, HandleRef jarg2)
    {
        _ItemsControl_SetItemContainerStyle(jarg1, jarg2);
    }

    public delegate IntPtr ItemsControl_GetItemContainerStyleSelectorDelegate(HandleRef jarg1);
    public static ItemsControl_GetItemContainerStyleSelectorDelegate _ItemsControl_GetItemContainerStyleSelector;
    public static IntPtr ItemsControl_GetItemContainerStyleSelector(HandleRef jarg1)
    {
        IntPtr ret = _ItemsControl_GetItemContainerStyleSelector(jarg1);

        return ret;
    }

    public delegate void ItemsControl_SetItemContainerStyleSelectorDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ItemsControl_SetItemContainerStyleSelectorDelegate _ItemsControl_SetItemContainerStyleSelector;
    public static void ItemsControl_SetItemContainerStyleSelector(HandleRef jarg1, HandleRef jarg2)
    {
        _ItemsControl_SetItemContainerStyleSelector(jarg1, jarg2);
    }

    public delegate IntPtr ItemsControl_GetItemsPanelDelegate(HandleRef jarg1);
    public static ItemsControl_GetItemsPanelDelegate _ItemsControl_GetItemsPanel;
    public static IntPtr ItemsControl_GetItemsPanel(HandleRef jarg1)
    {
        IntPtr ret = _ItemsControl_GetItemsPanel(jarg1);

        return ret;
    }

    public delegate void ItemsControl_SetItemsPanelDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ItemsControl_SetItemsPanelDelegate _ItemsControl_SetItemsPanel;
    public static void ItemsControl_SetItemsPanel(HandleRef jarg1, HandleRef jarg2)
    {
        _ItemsControl_SetItemsPanel(jarg1, jarg2);
    }

    public delegate IntPtr ItemsControl_GetDefaultItemsPanelDelegate(HandleRef jarg1);
    public static ItemsControl_GetDefaultItemsPanelDelegate _ItemsControl_GetDefaultItemsPanel;
    public static IntPtr ItemsControl_GetDefaultItemsPanel(HandleRef jarg1)
    {
        IntPtr ret = _ItemsControl_GetDefaultItemsPanel(jarg1);

        return ret;
    }

    public delegate IntPtr ItemsControl_GetItemsSourceDelegate(HandleRef jarg1);
    public static ItemsControl_GetItemsSourceDelegate _ItemsControl_GetItemsSource;
    public static IntPtr ItemsControl_GetItemsSource(HandleRef jarg1)
    {
        IntPtr ret = _ItemsControl_GetItemsSource(jarg1);

        return ret;
    }

    public delegate void ItemsControl_SetItemsSourceDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ItemsControl_SetItemsSourceDelegate _ItemsControl_SetItemsSource;
    public static void ItemsControl_SetItemsSource(HandleRef jarg1, HandleRef jarg2)
    {
        _ItemsControl_SetItemsSource(jarg1, jarg2);
    }

    public delegate IntPtr ItemsControl_GetItemTemplateDelegate(HandleRef jarg1);
    public static ItemsControl_GetItemTemplateDelegate _ItemsControl_GetItemTemplate;
    public static IntPtr ItemsControl_GetItemTemplate(HandleRef jarg1)
    {
        IntPtr ret = _ItemsControl_GetItemTemplate(jarg1);

        return ret;
    }

    public delegate void ItemsControl_SetItemTemplateDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ItemsControl_SetItemTemplateDelegate _ItemsControl_SetItemTemplate;
    public static void ItemsControl_SetItemTemplate(HandleRef jarg1, HandleRef jarg2)
    {
        _ItemsControl_SetItemTemplate(jarg1, jarg2);
    }

    public delegate IntPtr ItemsControl_GetItemTemplateSelectorDelegate(HandleRef jarg1);
    public static ItemsControl_GetItemTemplateSelectorDelegate _ItemsControl_GetItemTemplateSelector;
    public static IntPtr ItemsControl_GetItemTemplateSelector(HandleRef jarg1)
    {
        IntPtr ret = _ItemsControl_GetItemTemplateSelector(jarg1);

        return ret;
    }

    public delegate void ItemsControl_SetItemTemplateSelectorDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ItemsControl_SetItemTemplateSelectorDelegate _ItemsControl_SetItemTemplateSelector;
    public static void ItemsControl_SetItemTemplateSelector(HandleRef jarg1, HandleRef jarg2)
    {
        _ItemsControl_SetItemTemplateSelector(jarg1, jarg2);
    }

    public delegate IntPtr ItemsControl_GetItemsDelegate(HandleRef jarg1);
    public static ItemsControl_GetItemsDelegate _ItemsControl_GetItems;
    public static IntPtr ItemsControl_GetItems(HandleRef jarg1)
    {
        IntPtr ret = _ItemsControl_GetItems(jarg1);

        return ret;
    }

    public delegate IntPtr ItemsControl_ItemsControlFromItemContainerDelegate(HandleRef jarg1);
    public static ItemsControl_ItemsControlFromItemContainerDelegate _ItemsControl_ItemsControlFromItemContainer;
    public static IntPtr ItemsControl_ItemsControlFromItemContainer(HandleRef jarg1)
    {
        IntPtr ret = _ItemsControl_ItemsControlFromItemContainer(jarg1);

        return ret;
    }

    public delegate IntPtr ItemsControl_GetItemsOwnerDelegate(HandleRef jarg1);
    public static ItemsControl_GetItemsOwnerDelegate _ItemsControl_GetItemsOwner;
    public static IntPtr ItemsControl_GetItemsOwner(HandleRef jarg1)
    {
        IntPtr ret = _ItemsControl_GetItemsOwner(jarg1);

        return ret;
    }

    public delegate void SelectionChangedEventArgs_addedItems_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static SelectionChangedEventArgs_addedItems_setDelegate _SelectionChangedEventArgs_addedItems_set;
    public static void SelectionChangedEventArgs_addedItems_set(HandleRef jarg1, HandleRef jarg2)
    {
        _SelectionChangedEventArgs_addedItems_set(jarg1, jarg2);
    }

    public delegate IntPtr SelectionChangedEventArgs_addedItems_getDelegate(HandleRef jarg1);
    public static SelectionChangedEventArgs_addedItems_getDelegate _SelectionChangedEventArgs_addedItems_get;
    public static IntPtr SelectionChangedEventArgs_addedItems_get(HandleRef jarg1)
    {
        IntPtr ret = _SelectionChangedEventArgs_addedItems_get(jarg1);

        return ret;
    }

    public delegate void SelectionChangedEventArgs_removedItems_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static SelectionChangedEventArgs_removedItems_setDelegate _SelectionChangedEventArgs_removedItems_set;
    public static void SelectionChangedEventArgs_removedItems_set(HandleRef jarg1, HandleRef jarg2)
    {
        _SelectionChangedEventArgs_removedItems_set(jarg1, jarg2);
    }

    public delegate IntPtr SelectionChangedEventArgs_removedItems_getDelegate(HandleRef jarg1);
    public static SelectionChangedEventArgs_removedItems_getDelegate _SelectionChangedEventArgs_removedItems_get;
    public static IntPtr SelectionChangedEventArgs_removedItems_get(HandleRef jarg1)
    {
        IntPtr ret = _SelectionChangedEventArgs_removedItems_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_SelectionChangedEventArgsDelegate(HandleRef jarg1);
    public static new_SelectionChangedEventArgsDelegate _new_SelectionChangedEventArgs;
    public static IntPtr new_SelectionChangedEventArgs(HandleRef jarg1)
    {
        IntPtr ret = _new_SelectionChangedEventArgs(jarg1);

        return ret;
    }

    public delegate void delete_SelectionChangedEventArgsDelegate(HandleRef jarg1);
    public static delete_SelectionChangedEventArgsDelegate _delete_SelectionChangedEventArgs;
    public static void delete_SelectionChangedEventArgs(HandleRef jarg1)
    {
        _delete_SelectionChangedEventArgs(jarg1);
    }

    public delegate void delete_SelectorDelegate(HandleRef jarg1);
    public static delete_SelectorDelegate _delete_Selector;
    public static void delete_Selector(HandleRef jarg1)
    {
        _delete_Selector(jarg1);
    }

    public delegate bool Selector_GetIsSelectedDelegate(HandleRef jarg1);
    public static Selector_GetIsSelectedDelegate _Selector_GetIsSelected;
    public static bool Selector_GetIsSelected(HandleRef jarg1)
    {
        bool ret = _Selector_GetIsSelected(jarg1);

        return ret;
    }

    public delegate void Selector_SetIsSelectedDelegate(HandleRef jarg1, bool jarg2);
    public static Selector_SetIsSelectedDelegate _Selector_SetIsSelected;
    public static void Selector_SetIsSelected(HandleRef jarg1, bool jarg2)
    {
        _Selector_SetIsSelected(jarg1, jarg2);
    }

    public delegate bool Selector_GetIsSelectionActiveDelegate(HandleRef jarg1);
    public static Selector_GetIsSelectionActiveDelegate _Selector_GetIsSelectionActive;
    public static bool Selector_GetIsSelectionActive(HandleRef jarg1)
    {
        bool ret = _Selector_GetIsSelectionActive(jarg1);

        return ret;
    }

    public delegate IntPtr Selector_GetIsSynchronizedWithCurrentItemDelegate(HandleRef jarg1);
    public static Selector_GetIsSynchronizedWithCurrentItemDelegate _Selector_GetIsSynchronizedWithCurrentItem;
    public static IntPtr Selector_GetIsSynchronizedWithCurrentItem(HandleRef jarg1)
    {
        IntPtr ret = _Selector_GetIsSynchronizedWithCurrentItem(jarg1);

        return ret;
    }

    public delegate void Selector_SetIsSynchronizedWithCurrentItemDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Selector_SetIsSynchronizedWithCurrentItemDelegate _Selector_SetIsSynchronizedWithCurrentItem;
    public static void Selector_SetIsSynchronizedWithCurrentItem(HandleRef jarg1, HandleRef jarg2)
    {
        _Selector_SetIsSynchronizedWithCurrentItem(jarg1, jarg2);
    }

    public delegate int Selector_GetSelectedIndexDelegate(HandleRef jarg1);
    public static Selector_GetSelectedIndexDelegate _Selector_GetSelectedIndex;
    public static int Selector_GetSelectedIndex(HandleRef jarg1)
    {
        int ret = _Selector_GetSelectedIndex(jarg1);

        return ret;
    }

    public delegate void Selector_SetSelectedIndexDelegate(HandleRef jarg1, int jarg2);
    public static Selector_SetSelectedIndexDelegate _Selector_SetSelectedIndex;
    public static void Selector_SetSelectedIndex(HandleRef jarg1, int jarg2)
    {
        _Selector_SetSelectedIndex(jarg1, jarg2);
    }

    public delegate IntPtr Selector_GetSelectedItemDelegate(HandleRef jarg1);
    public static Selector_GetSelectedItemDelegate _Selector_GetSelectedItem;
    public static IntPtr Selector_GetSelectedItem(HandleRef jarg1)
    {
        IntPtr ret = _Selector_GetSelectedItem(jarg1);

        return ret;
    }

    public delegate void Selector_SetSelectedItemDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Selector_SetSelectedItemDelegate _Selector_SetSelectedItem;
    public static void Selector_SetSelectedItem(HandleRef jarg1, HandleRef jarg2)
    {
        _Selector_SetSelectedItem(jarg1, jarg2);
    }

    public delegate IntPtr Selector_GetSelectedValuePathDelegate(HandleRef jarg1);
    public static Selector_GetSelectedValuePathDelegate _Selector_GetSelectedValuePath;
    public static IntPtr Selector_GetSelectedValuePath(HandleRef jarg1)
    {
        IntPtr ret = _Selector_GetSelectedValuePath(jarg1);

        return ret;
    }

    public delegate void Selector_SetSelectedValuePathDelegate(HandleRef jarg1, IntPtr jarg2);
    public static Selector_SetSelectedValuePathDelegate _Selector_SetSelectedValuePath;
    public static void Selector_SetSelectedValuePath(HandleRef jarg1, IntPtr jarg2)
    {
        _Selector_SetSelectedValuePath(jarg1, jarg2);
    }

    public delegate IntPtr Selector_GetSelectedValueDelegate(HandleRef jarg1);
    public static Selector_GetSelectedValueDelegate _Selector_GetSelectedValue;
    public static IntPtr Selector_GetSelectedValue(HandleRef jarg1)
    {
        IntPtr ret = _Selector_GetSelectedValue(jarg1);

        return ret;
    }

    public delegate void Selector_SetSelectedValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Selector_SetSelectedValueDelegate _Selector_SetSelectedValue;
    public static void Selector_SetSelectedValue(HandleRef jarg1, HandleRef jarg2)
    {
        _Selector_SetSelectedValue(jarg1, jarg2);
    }

    public delegate IntPtr new_AdornerDecorator__SWIG_0Delegate(bool jarg1);
    public static new_AdornerDecorator__SWIG_0Delegate _new_AdornerDecorator__SWIG_0;
    public static IntPtr new_AdornerDecorator__SWIG_0(bool jarg1)
    {
        IntPtr ret = _new_AdornerDecorator__SWIG_0(jarg1);

        return ret;
    }

    public delegate IntPtr new_AdornerDecorator__SWIG_1Delegate();
    public static new_AdornerDecorator__SWIG_1Delegate _new_AdornerDecorator__SWIG_1;
    public static IntPtr new_AdornerDecorator__SWIG_1()
    {
        IntPtr ret = _new_AdornerDecorator__SWIG_1();

        return ret;
    }

    public delegate void delete_AdornerDecoratorDelegate(HandleRef jarg1);
    public static delete_AdornerDecoratorDelegate _delete_AdornerDecorator;
    public static void delete_AdornerDecorator(HandleRef jarg1)
    {
        _delete_AdornerDecorator(jarg1);
    }

    public delegate void AdornerDecorator_AddLayerDelegate(HandleRef jarg1, HandleRef jarg2);
    public static AdornerDecorator_AddLayerDelegate _AdornerDecorator_AddLayer;
    public static void AdornerDecorator_AddLayer(HandleRef jarg1, HandleRef jarg2)
    {
        _AdornerDecorator_AddLayer(jarg1, jarg2);
    }

    public delegate void AdornerDecorator_RemoveLayerDelegate(HandleRef jarg1, HandleRef jarg2);
    public static AdornerDecorator_RemoveLayerDelegate _AdornerDecorator_RemoveLayer;
    public static void AdornerDecorator_RemoveLayer(HandleRef jarg1, HandleRef jarg2)
    {
        _AdornerDecorator_RemoveLayer(jarg1, jarg2);
    }

    public delegate void delete_AnimatableDelegate(HandleRef jarg1);
    public static delete_AnimatableDelegate _delete_Animatable;
    public static void delete_Animatable(HandleRef jarg1)
    {
        _delete_Animatable(jarg1);
    }

    public delegate void delete_GeometryDelegate(HandleRef jarg1);
    public static delete_GeometryDelegate _delete_Geometry;
    public static void delete_Geometry(HandleRef jarg1)
    {
        _delete_Geometry(jarg1);
    }

    public delegate IntPtr Geometry_ParseDelegate(string jarg1);
    public static Geometry_ParseDelegate _Geometry_Parse;
    public static IntPtr Geometry_Parse(string jarg1)
    {
        IntPtr ret = _Geometry_Parse(jarg1);

        return ret;
    }

    public delegate bool Geometry_TryParseDelegate(string jarg1, HandleRef jarg2);
    public static Geometry_TryParseDelegate _Geometry_TryParse;
    public static bool Geometry_TryParse(string jarg1, HandleRef jarg2)
    {
        bool ret = _Geometry_TryParse(jarg1, jarg2);

        return ret;
    }

    public delegate bool Geometry_IsEmptyDelegate(HandleRef jarg1);
    public static Geometry_IsEmptyDelegate _Geometry_IsEmpty;
    public static bool Geometry_IsEmpty(HandleRef jarg1)
    {
        bool ret = _Geometry_IsEmpty(jarg1);

        return ret;
    }

    public delegate IntPtr Geometry_GetBoundsDelegate(HandleRef jarg1);
    public static Geometry_GetBoundsDelegate _Geometry_GetBounds;
    public static IntPtr Geometry_GetBounds(HandleRef jarg1)
    {
        IntPtr ret = _Geometry_GetBounds(jarg1);

        return ret;
    }

    public delegate IntPtr Geometry_GetRenderBoundsDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Geometry_GetRenderBoundsDelegate _Geometry_GetRenderBounds;
    public static IntPtr Geometry_GetRenderBounds(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _Geometry_GetRenderBounds(jarg1, jarg2);

        return ret;
    }

    public delegate bool Geometry_FillContainsDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Geometry_FillContainsDelegate _Geometry_FillContains;
    public static bool Geometry_FillContains(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _Geometry_FillContains(jarg1, jarg2);

        return ret;
    }

    public delegate bool Geometry_StrokeContainsDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static Geometry_StrokeContainsDelegate _Geometry_StrokeContains;
    public static bool Geometry_StrokeContains(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        bool ret = _Geometry_StrokeContains(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr Geometry_GetTransformDelegate(HandleRef jarg1);
    public static Geometry_GetTransformDelegate _Geometry_GetTransform;
    public static IntPtr Geometry_GetTransform(HandleRef jarg1)
    {
        IntPtr ret = _Geometry_GetTransform(jarg1);

        return ret;
    }

    public delegate void Geometry_SetTransformDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Geometry_SetTransformDelegate _Geometry_SetTransform;
    public static void Geometry_SetTransform(HandleRef jarg1, HandleRef jarg2)
    {
        _Geometry_SetTransform(jarg1, jarg2);
    }

    public delegate void Geometry_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static Geometry_UpdateRenderProxyDelegate _Geometry_UpdateRenderProxy;
    public static void Geometry_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _Geometry_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void Geometry_UnregisterRendererDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Geometry_UnregisterRendererDelegate _Geometry_UnregisterRenderer;
    public static void Geometry_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2)
    {
        _Geometry_UnregisterRenderer(jarg1, jarg2);
    }

    public delegate void delete_ImageSourceDelegate(HandleRef jarg1);
    public static delete_ImageSourceDelegate _delete_ImageSource;
    public static void delete_ImageSource(HandleRef jarg1)
    {
        _delete_ImageSource(jarg1);
    }

    public delegate void ImageSource_RegisterDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ImageSource_RegisterDelegate _ImageSource_Register;
    public static void ImageSource_Register(HandleRef jarg1, HandleRef jarg2)
    {
        _ImageSource_Register(jarg1, jarg2);
    }

    public delegate bool ImageSource_IsRegisteredDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ImageSource_IsRegisteredDelegate _ImageSource_IsRegistered;
    public static bool ImageSource_IsRegistered(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _ImageSource_IsRegistered(jarg1, jarg2);

        return ret;
    }

    public delegate void ImageSource_ClearCacheDelegate();
    public static ImageSource_ClearCacheDelegate _ImageSource_ClearCache;
    public static void ImageSource_ClearCache()
    {
        _ImageSource_ClearCache();
    }

    public delegate IntPtr ImageSource_GetSourceDelegate(HandleRef jarg1);
    public static ImageSource_GetSourceDelegate _ImageSource_GetSource;
    public static IntPtr ImageSource_GetSource(HandleRef jarg1)
    {
        IntPtr ret = _ImageSource_GetSource(jarg1);

        return ret;
    }

    public delegate float ImageSource_GetWidthDelegate(HandleRef jarg1);
    public static ImageSource_GetWidthDelegate _ImageSource_GetWidth;
    public static float ImageSource_GetWidth(HandleRef jarg1)
    {
        float ret = _ImageSource_GetWidth(jarg1);

        return ret;
    }

    public delegate float ImageSource_GetHeightDelegate(HandleRef jarg1);
    public static ImageSource_GetHeightDelegate _ImageSource_GetHeight;
    public static float ImageSource_GetHeight(HandleRef jarg1)
    {
        float ret = _ImageSource_GetHeight(jarg1);

        return ret;
    }

    public delegate IntPtr new_ApplicationDelegate();
    public static new_ApplicationDelegate _new_Application;
    public static IntPtr new_Application()
    {
        IntPtr ret = _new_Application();

        return ret;
    }

    public delegate void delete_ApplicationDelegate(HandleRef jarg1);
    public static delete_ApplicationDelegate _delete_Application;
    public static void delete_Application(HandleRef jarg1)
    {
        _delete_Application(jarg1);
    }

    public delegate IntPtr Application_CurrentDelegate();
    public static Application_CurrentDelegate _Application_Current;
    public static IntPtr Application_Current()
    {
        IntPtr ret = _Application_Current();

        return ret;
    }

    public delegate string Application_GetStartupUriDelegate(HandleRef jarg1);
    public static Application_GetStartupUriDelegate _Application_GetStartupUri;
    public static string Application_GetStartupUri(HandleRef jarg1)
    {
        string ret = _Application_GetStartupUri(jarg1);

        return ret;
    }

    public delegate void Application_SetStartupUriDelegate(HandleRef jarg1, string jarg2);
    public static Application_SetStartupUriDelegate _Application_SetStartupUri;
    public static void Application_SetStartupUri(HandleRef jarg1, string jarg2)
    {
        _Application_SetStartupUri(jarg1, jarg2);
    }

    public delegate IntPtr Application_GetResourcesDelegate(HandleRef jarg1);
    public static Application_GetResourcesDelegate _Application_GetResources;
    public static IntPtr Application_GetResources(HandleRef jarg1)
    {
        IntPtr ret = _Application_GetResources(jarg1);

        return ret;
    }

    public delegate void Application_SetResourcesDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Application_SetResourcesDelegate _Application_SetResources;
    public static void Application_SetResources(HandleRef jarg1, HandleRef jarg2)
    {
        _Application_SetResources(jarg1, jarg2);
    }

    public delegate IntPtr Application_GetMainWindowDelegate(HandleRef jarg1);
    public static Application_GetMainWindowDelegate _Application_GetMainWindow;
    public static IntPtr Application_GetMainWindow(HandleRef jarg1)
    {
        IntPtr ret = _Application_GetMainWindow(jarg1);

        return ret;
    }

    public delegate void Application_TickDelegate(HandleRef jarg1, double jarg2, float jarg3);
    public static Application_TickDelegate _Application_Tick;
    public static void Application_Tick(HandleRef jarg1, double jarg2, float jarg3)
    {
        _Application_Tick(jarg1, jarg2, jarg3);
    }

    public delegate IntPtr Application_ShowMessageBox__SWIG_0Delegate(HandleRef jarg1, string jarg2, string jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6);
    public static Application_ShowMessageBox__SWIG_0Delegate _Application_ShowMessageBox__SWIG_0;
    public static IntPtr Application_ShowMessageBox__SWIG_0(HandleRef jarg1, string jarg2, string jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6)
    {
        IntPtr ret = _Application_ShowMessageBox__SWIG_0(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6);

        return ret;
    }

    public delegate IntPtr Application_ShowMessageBox__SWIG_1Delegate(HandleRef jarg1, string jarg2, string jarg3, HandleRef jarg4, HandleRef jarg5);
    public static Application_ShowMessageBox__SWIG_1Delegate _Application_ShowMessageBox__SWIG_1;
    public static IntPtr Application_ShowMessageBox__SWIG_1(HandleRef jarg1, string jarg2, string jarg3, HandleRef jarg4, HandleRef jarg5)
    {
        IntPtr ret = _Application_ShowMessageBox__SWIG_1(jarg1, jarg2, jarg3, jarg4, jarg5);

        return ret;
    }

    public delegate IntPtr Application_ShowMessageBox__SWIG_2Delegate(HandleRef jarg1, string jarg2, string jarg3, HandleRef jarg4);
    public static Application_ShowMessageBox__SWIG_2Delegate _Application_ShowMessageBox__SWIG_2;
    public static IntPtr Application_ShowMessageBox__SWIG_2(HandleRef jarg1, string jarg2, string jarg3, HandleRef jarg4)
    {
        IntPtr ret = _Application_ShowMessageBox__SWIG_2(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr Application_ShowMessageBox__SWIG_3Delegate(HandleRef jarg1, string jarg2, string jarg3);
    public static Application_ShowMessageBox__SWIG_3Delegate _Application_ShowMessageBox__SWIG_3;
    public static IntPtr Application_ShowMessageBox__SWIG_3(HandleRef jarg1, string jarg2, string jarg3)
    {
        IntPtr ret = _Application_ShowMessageBox__SWIG_3(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr Application_ShowMessageBox__SWIG_4Delegate(HandleRef jarg1, string jarg2);
    public static Application_ShowMessageBox__SWIG_4Delegate _Application_ShowMessageBox__SWIG_4;
    public static IntPtr Application_ShowMessageBox__SWIG_4(HandleRef jarg1, string jarg2)
    {
        IntPtr ret = _Application_ShowMessageBox__SWIG_4(jarg1, jarg2);

        return ret;
    }

    public delegate bool Application_IsInitializedDelegate(HandleRef jarg1);
    public static Application_IsInitializedDelegate _Application_IsInitialized;
    public static bool Application_IsInitialized(HandleRef jarg1)
    {
        bool ret = _Application_IsInitialized(jarg1);

        return ret;
    }

    public delegate void Application_InitDelegate(HandleRef jarg1);
    public static Application_InitDelegate _Application_Init;
    public static void Application_Init(HandleRef jarg1)
    {
        _Application_Init(jarg1);
    }

    public delegate void ApplicationCommands_CancelPrintCommand_setDelegate(HandleRef jarg1);
    public static ApplicationCommands_CancelPrintCommand_setDelegate _ApplicationCommands_CancelPrintCommand_set;
    public static void ApplicationCommands_CancelPrintCommand_set(HandleRef jarg1)
    {
        _ApplicationCommands_CancelPrintCommand_set(jarg1);
    }

    public delegate IntPtr ApplicationCommands_CancelPrintCommand_getDelegate();
    public static ApplicationCommands_CancelPrintCommand_getDelegate _ApplicationCommands_CancelPrintCommand_get;
    public static IntPtr ApplicationCommands_CancelPrintCommand_get()
    {
        IntPtr ret = _ApplicationCommands_CancelPrintCommand_get();

        return ret;
    }

    public delegate void ApplicationCommands_CloseCommand_setDelegate(HandleRef jarg1);
    public static ApplicationCommands_CloseCommand_setDelegate _ApplicationCommands_CloseCommand_set;
    public static void ApplicationCommands_CloseCommand_set(HandleRef jarg1)
    {
        _ApplicationCommands_CloseCommand_set(jarg1);
    }

    public delegate IntPtr ApplicationCommands_CloseCommand_getDelegate();
    public static ApplicationCommands_CloseCommand_getDelegate _ApplicationCommands_CloseCommand_get;
    public static IntPtr ApplicationCommands_CloseCommand_get()
    {
        IntPtr ret = _ApplicationCommands_CloseCommand_get();

        return ret;
    }

    public delegate void ApplicationCommands_ContextMenuCommand_setDelegate(HandleRef jarg1);
    public static ApplicationCommands_ContextMenuCommand_setDelegate _ApplicationCommands_ContextMenuCommand_set;
    public static void ApplicationCommands_ContextMenuCommand_set(HandleRef jarg1)
    {
        _ApplicationCommands_ContextMenuCommand_set(jarg1);
    }

    public delegate IntPtr ApplicationCommands_ContextMenuCommand_getDelegate();
    public static ApplicationCommands_ContextMenuCommand_getDelegate _ApplicationCommands_ContextMenuCommand_get;
    public static IntPtr ApplicationCommands_ContextMenuCommand_get()
    {
        IntPtr ret = _ApplicationCommands_ContextMenuCommand_get();

        return ret;
    }

    public delegate void ApplicationCommands_CopyCommand_setDelegate(HandleRef jarg1);
    public static ApplicationCommands_CopyCommand_setDelegate _ApplicationCommands_CopyCommand_set;
    public static void ApplicationCommands_CopyCommand_set(HandleRef jarg1)
    {
        _ApplicationCommands_CopyCommand_set(jarg1);
    }

    public delegate IntPtr ApplicationCommands_CopyCommand_getDelegate();
    public static ApplicationCommands_CopyCommand_getDelegate _ApplicationCommands_CopyCommand_get;
    public static IntPtr ApplicationCommands_CopyCommand_get()
    {
        IntPtr ret = _ApplicationCommands_CopyCommand_get();

        return ret;
    }

    public delegate void ApplicationCommands_CorrectionListCommand_setDelegate(HandleRef jarg1);
    public static ApplicationCommands_CorrectionListCommand_setDelegate _ApplicationCommands_CorrectionListCommand_set;
    public static void ApplicationCommands_CorrectionListCommand_set(HandleRef jarg1)
    {
        _ApplicationCommands_CorrectionListCommand_set(jarg1);
    }

    public delegate IntPtr ApplicationCommands_CorrectionListCommand_getDelegate();
    public static ApplicationCommands_CorrectionListCommand_getDelegate _ApplicationCommands_CorrectionListCommand_get;
    public static IntPtr ApplicationCommands_CorrectionListCommand_get()
    {
        IntPtr ret = _ApplicationCommands_CorrectionListCommand_get();

        return ret;
    }

    public delegate void ApplicationCommands_CutCommand_setDelegate(HandleRef jarg1);
    public static ApplicationCommands_CutCommand_setDelegate _ApplicationCommands_CutCommand_set;
    public static void ApplicationCommands_CutCommand_set(HandleRef jarg1)
    {
        _ApplicationCommands_CutCommand_set(jarg1);
    }

    public delegate IntPtr ApplicationCommands_CutCommand_getDelegate();
    public static ApplicationCommands_CutCommand_getDelegate _ApplicationCommands_CutCommand_get;
    public static IntPtr ApplicationCommands_CutCommand_get()
    {
        IntPtr ret = _ApplicationCommands_CutCommand_get();

        return ret;
    }

    public delegate void ApplicationCommands_DeleteCommand_setDelegate(HandleRef jarg1);
    public static ApplicationCommands_DeleteCommand_setDelegate _ApplicationCommands_DeleteCommand_set;
    public static void ApplicationCommands_DeleteCommand_set(HandleRef jarg1)
    {
        _ApplicationCommands_DeleteCommand_set(jarg1);
    }

    public delegate IntPtr ApplicationCommands_DeleteCommand_getDelegate();
    public static ApplicationCommands_DeleteCommand_getDelegate _ApplicationCommands_DeleteCommand_get;
    public static IntPtr ApplicationCommands_DeleteCommand_get()
    {
        IntPtr ret = _ApplicationCommands_DeleteCommand_get();

        return ret;
    }

    public delegate void ApplicationCommands_FindCommand_setDelegate(HandleRef jarg1);
    public static ApplicationCommands_FindCommand_setDelegate _ApplicationCommands_FindCommand_set;
    public static void ApplicationCommands_FindCommand_set(HandleRef jarg1)
    {
        _ApplicationCommands_FindCommand_set(jarg1);
    }

    public delegate IntPtr ApplicationCommands_FindCommand_getDelegate();
    public static ApplicationCommands_FindCommand_getDelegate _ApplicationCommands_FindCommand_get;
    public static IntPtr ApplicationCommands_FindCommand_get()
    {
        IntPtr ret = _ApplicationCommands_FindCommand_get();

        return ret;
    }

    public delegate void ApplicationCommands_HelpCommand_setDelegate(HandleRef jarg1);
    public static ApplicationCommands_HelpCommand_setDelegate _ApplicationCommands_HelpCommand_set;
    public static void ApplicationCommands_HelpCommand_set(HandleRef jarg1)
    {
        _ApplicationCommands_HelpCommand_set(jarg1);
    }

    public delegate IntPtr ApplicationCommands_HelpCommand_getDelegate();
    public static ApplicationCommands_HelpCommand_getDelegate _ApplicationCommands_HelpCommand_get;
    public static IntPtr ApplicationCommands_HelpCommand_get()
    {
        IntPtr ret = _ApplicationCommands_HelpCommand_get();

        return ret;
    }

    public delegate void ApplicationCommands_NewCommand_setDelegate(HandleRef jarg1);
    public static ApplicationCommands_NewCommand_setDelegate _ApplicationCommands_NewCommand_set;
    public static void ApplicationCommands_NewCommand_set(HandleRef jarg1)
    {
        _ApplicationCommands_NewCommand_set(jarg1);
    }

    public delegate IntPtr ApplicationCommands_NewCommand_getDelegate();
    public static ApplicationCommands_NewCommand_getDelegate _ApplicationCommands_NewCommand_get;
    public static IntPtr ApplicationCommands_NewCommand_get()
    {
        IntPtr ret = _ApplicationCommands_NewCommand_get();

        return ret;
    }

    public delegate void ApplicationCommands_OpenCommand_setDelegate(HandleRef jarg1);
    public static ApplicationCommands_OpenCommand_setDelegate _ApplicationCommands_OpenCommand_set;
    public static void ApplicationCommands_OpenCommand_set(HandleRef jarg1)
    {
        _ApplicationCommands_OpenCommand_set(jarg1);
    }

    public delegate IntPtr ApplicationCommands_OpenCommand_getDelegate();
    public static ApplicationCommands_OpenCommand_getDelegate _ApplicationCommands_OpenCommand_get;
    public static IntPtr ApplicationCommands_OpenCommand_get()
    {
        IntPtr ret = _ApplicationCommands_OpenCommand_get();

        return ret;
    }

    public delegate void ApplicationCommands_PasteCommand_setDelegate(HandleRef jarg1);
    public static ApplicationCommands_PasteCommand_setDelegate _ApplicationCommands_PasteCommand_set;
    public static void ApplicationCommands_PasteCommand_set(HandleRef jarg1)
    {
        _ApplicationCommands_PasteCommand_set(jarg1);
    }

    public delegate IntPtr ApplicationCommands_PasteCommand_getDelegate();
    public static ApplicationCommands_PasteCommand_getDelegate _ApplicationCommands_PasteCommand_get;
    public static IntPtr ApplicationCommands_PasteCommand_get()
    {
        IntPtr ret = _ApplicationCommands_PasteCommand_get();

        return ret;
    }

    public delegate void ApplicationCommands_PrintCommand_setDelegate(HandleRef jarg1);
    public static ApplicationCommands_PrintCommand_setDelegate _ApplicationCommands_PrintCommand_set;
    public static void ApplicationCommands_PrintCommand_set(HandleRef jarg1)
    {
        _ApplicationCommands_PrintCommand_set(jarg1);
    }

    public delegate IntPtr ApplicationCommands_PrintCommand_getDelegate();
    public static ApplicationCommands_PrintCommand_getDelegate _ApplicationCommands_PrintCommand_get;
    public static IntPtr ApplicationCommands_PrintCommand_get()
    {
        IntPtr ret = _ApplicationCommands_PrintCommand_get();

        return ret;
    }

    public delegate void ApplicationCommands_PrintPreviewCommand_setDelegate(HandleRef jarg1);
    public static ApplicationCommands_PrintPreviewCommand_setDelegate _ApplicationCommands_PrintPreviewCommand_set;
    public static void ApplicationCommands_PrintPreviewCommand_set(HandleRef jarg1)
    {
        _ApplicationCommands_PrintPreviewCommand_set(jarg1);
    }

    public delegate IntPtr ApplicationCommands_PrintPreviewCommand_getDelegate();
    public static ApplicationCommands_PrintPreviewCommand_getDelegate _ApplicationCommands_PrintPreviewCommand_get;
    public static IntPtr ApplicationCommands_PrintPreviewCommand_get()
    {
        IntPtr ret = _ApplicationCommands_PrintPreviewCommand_get();

        return ret;
    }

    public delegate void ApplicationCommands_PropertiesCommand_setDelegate(HandleRef jarg1);
    public static ApplicationCommands_PropertiesCommand_setDelegate _ApplicationCommands_PropertiesCommand_set;
    public static void ApplicationCommands_PropertiesCommand_set(HandleRef jarg1)
    {
        _ApplicationCommands_PropertiesCommand_set(jarg1);
    }

    public delegate IntPtr ApplicationCommands_PropertiesCommand_getDelegate();
    public static ApplicationCommands_PropertiesCommand_getDelegate _ApplicationCommands_PropertiesCommand_get;
    public static IntPtr ApplicationCommands_PropertiesCommand_get()
    {
        IntPtr ret = _ApplicationCommands_PropertiesCommand_get();

        return ret;
    }

    public delegate void ApplicationCommands_RedoCommand_setDelegate(HandleRef jarg1);
    public static ApplicationCommands_RedoCommand_setDelegate _ApplicationCommands_RedoCommand_set;
    public static void ApplicationCommands_RedoCommand_set(HandleRef jarg1)
    {
        _ApplicationCommands_RedoCommand_set(jarg1);
    }

    public delegate IntPtr ApplicationCommands_RedoCommand_getDelegate();
    public static ApplicationCommands_RedoCommand_getDelegate _ApplicationCommands_RedoCommand_get;
    public static IntPtr ApplicationCommands_RedoCommand_get()
    {
        IntPtr ret = _ApplicationCommands_RedoCommand_get();

        return ret;
    }

    public delegate void ApplicationCommands_ReplaceCommand_setDelegate(HandleRef jarg1);
    public static ApplicationCommands_ReplaceCommand_setDelegate _ApplicationCommands_ReplaceCommand_set;
    public static void ApplicationCommands_ReplaceCommand_set(HandleRef jarg1)
    {
        _ApplicationCommands_ReplaceCommand_set(jarg1);
    }

    public delegate IntPtr ApplicationCommands_ReplaceCommand_getDelegate();
    public static ApplicationCommands_ReplaceCommand_getDelegate _ApplicationCommands_ReplaceCommand_get;
    public static IntPtr ApplicationCommands_ReplaceCommand_get()
    {
        IntPtr ret = _ApplicationCommands_ReplaceCommand_get();

        return ret;
    }

    public delegate void ApplicationCommands_SaveCommand_setDelegate(HandleRef jarg1);
    public static ApplicationCommands_SaveCommand_setDelegate _ApplicationCommands_SaveCommand_set;
    public static void ApplicationCommands_SaveCommand_set(HandleRef jarg1)
    {
        _ApplicationCommands_SaveCommand_set(jarg1);
    }

    public delegate IntPtr ApplicationCommands_SaveCommand_getDelegate();
    public static ApplicationCommands_SaveCommand_getDelegate _ApplicationCommands_SaveCommand_get;
    public static IntPtr ApplicationCommands_SaveCommand_get()
    {
        IntPtr ret = _ApplicationCommands_SaveCommand_get();

        return ret;
    }

    public delegate void ApplicationCommands_SaveAsCommand_setDelegate(HandleRef jarg1);
    public static ApplicationCommands_SaveAsCommand_setDelegate _ApplicationCommands_SaveAsCommand_set;
    public static void ApplicationCommands_SaveAsCommand_set(HandleRef jarg1)
    {
        _ApplicationCommands_SaveAsCommand_set(jarg1);
    }

    public delegate IntPtr ApplicationCommands_SaveAsCommand_getDelegate();
    public static ApplicationCommands_SaveAsCommand_getDelegate _ApplicationCommands_SaveAsCommand_get;
    public static IntPtr ApplicationCommands_SaveAsCommand_get()
    {
        IntPtr ret = _ApplicationCommands_SaveAsCommand_get();

        return ret;
    }

    public delegate void ApplicationCommands_SelectAllCommand_setDelegate(HandleRef jarg1);
    public static ApplicationCommands_SelectAllCommand_setDelegate _ApplicationCommands_SelectAllCommand_set;
    public static void ApplicationCommands_SelectAllCommand_set(HandleRef jarg1)
    {
        _ApplicationCommands_SelectAllCommand_set(jarg1);
    }

    public delegate IntPtr ApplicationCommands_SelectAllCommand_getDelegate();
    public static ApplicationCommands_SelectAllCommand_getDelegate _ApplicationCommands_SelectAllCommand_get;
    public static IntPtr ApplicationCommands_SelectAllCommand_get()
    {
        IntPtr ret = _ApplicationCommands_SelectAllCommand_get();

        return ret;
    }

    public delegate void ApplicationCommands_StopCommand_setDelegate(HandleRef jarg1);
    public static ApplicationCommands_StopCommand_setDelegate _ApplicationCommands_StopCommand_set;
    public static void ApplicationCommands_StopCommand_set(HandleRef jarg1)
    {
        _ApplicationCommands_StopCommand_set(jarg1);
    }

    public delegate IntPtr ApplicationCommands_StopCommand_getDelegate();
    public static ApplicationCommands_StopCommand_getDelegate _ApplicationCommands_StopCommand_get;
    public static IntPtr ApplicationCommands_StopCommand_get()
    {
        IntPtr ret = _ApplicationCommands_StopCommand_get();

        return ret;
    }

    public delegate void ApplicationCommands_UndoCommand_setDelegate(HandleRef jarg1);
    public static ApplicationCommands_UndoCommand_setDelegate _ApplicationCommands_UndoCommand_set;
    public static void ApplicationCommands_UndoCommand_set(HandleRef jarg1)
    {
        _ApplicationCommands_UndoCommand_set(jarg1);
    }

    public delegate IntPtr ApplicationCommands_UndoCommand_getDelegate();
    public static ApplicationCommands_UndoCommand_getDelegate _ApplicationCommands_UndoCommand_get;
    public static IntPtr ApplicationCommands_UndoCommand_get()
    {
        IntPtr ret = _ApplicationCommands_UndoCommand_get();

        return ret;
    }

    public delegate IntPtr new_ApplicationCommandsDelegate();
    public static new_ApplicationCommandsDelegate _new_ApplicationCommands;
    public static IntPtr new_ApplicationCommands()
    {
        IntPtr ret = _new_ApplicationCommands();

        return ret;
    }

    public delegate void delete_ApplicationCommandsDelegate(HandleRef jarg1);
    public static delete_ApplicationCommandsDelegate _delete_ApplicationCommands;
    public static void delete_ApplicationCommands(HandleRef jarg1)
    {
        _delete_ApplicationCommands(jarg1);
    }

    public delegate IntPtr new_AtlasSource__SWIG_0Delegate();
    public static new_AtlasSource__SWIG_0Delegate _new_AtlasSource__SWIG_0;
    public static IntPtr new_AtlasSource__SWIG_0()
    {
        IntPtr ret = _new_AtlasSource__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_AtlasSource__SWIG_1Delegate(HandleRef jarg1, uint jarg2, HandleRef jarg3);
    public static new_AtlasSource__SWIG_1Delegate _new_AtlasSource__SWIG_1;
    public static IntPtr new_AtlasSource__SWIG_1(HandleRef jarg1, uint jarg2, HandleRef jarg3)
    {
        IntPtr ret = _new_AtlasSource__SWIG_1(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr new_AtlasSource__SWIG_2Delegate(HandleRef jarg1, uint jarg2, HandleRef jarg3, float jarg4, float jarg5);
    public static new_AtlasSource__SWIG_2Delegate _new_AtlasSource__SWIG_2;
    public static IntPtr new_AtlasSource__SWIG_2(HandleRef jarg1, uint jarg2, HandleRef jarg3, float jarg4, float jarg5)
    {
        IntPtr ret = _new_AtlasSource__SWIG_2(jarg1, jarg2, jarg3, jarg4, jarg5);

        return ret;
    }

    public delegate void delete_AtlasSourceDelegate(HandleRef jarg1);
    public static delete_AtlasSourceDelegate _delete_AtlasSource;
    public static void delete_AtlasSource(HandleRef jarg1)
    {
        _delete_AtlasSource(jarg1);
    }

    public delegate IntPtr AtlasSource_GetAtlasListDelegate(HandleRef jarg1);
    public static AtlasSource_GetAtlasListDelegate _AtlasSource_GetAtlasList;
    public static IntPtr AtlasSource_GetAtlasList(HandleRef jarg1)
    {
        IntPtr ret = _AtlasSource_GetAtlasList(jarg1);

        return ret;
    }

    public delegate void AtlasSource_SetAtlasListDelegate(HandleRef jarg1, HandleRef jarg2);
    public static AtlasSource_SetAtlasListDelegate _AtlasSource_SetAtlasList;
    public static void AtlasSource_SetAtlasList(HandleRef jarg1, HandleRef jarg2)
    {
        _AtlasSource_SetAtlasList(jarg1, jarg2);
    }

    public delegate uint AtlasSource_GetAtlasIndexDelegate(HandleRef jarg1);
    public static AtlasSource_GetAtlasIndexDelegate _AtlasSource_GetAtlasIndex;
    public static uint AtlasSource_GetAtlasIndex(HandleRef jarg1)
    {
        uint ret = _AtlasSource_GetAtlasIndex(jarg1);

        return ret;
    }

    public delegate void AtlasSource_SetAtlasIndexDelegate(HandleRef jarg1, uint jarg2);
    public static AtlasSource_SetAtlasIndexDelegate _AtlasSource_SetAtlasIndex;
    public static void AtlasSource_SetAtlasIndex(HandleRef jarg1, uint jarg2)
    {
        _AtlasSource_SetAtlasIndex(jarg1, jarg2);
    }

    public delegate IntPtr AtlasSource_GetRectDelegate(HandleRef jarg1);
    public static AtlasSource_GetRectDelegate _AtlasSource_GetRect;
    public static IntPtr AtlasSource_GetRect(HandleRef jarg1)
    {
        IntPtr ret = _AtlasSource_GetRect(jarg1);

        return ret;
    }

    public delegate void AtlasSource_SetRectDelegate(HandleRef jarg1, HandleRef jarg2);
    public static AtlasSource_SetRectDelegate _AtlasSource_SetRect;
    public static void AtlasSource_SetRect(HandleRef jarg1, HandleRef jarg2)
    {
        _AtlasSource_SetRect(jarg1, jarg2);
    }

    public delegate float AtlasSource_GetDpiXDelegate(HandleRef jarg1);
    public static AtlasSource_GetDpiXDelegate _AtlasSource_GetDpiX;
    public static float AtlasSource_GetDpiX(HandleRef jarg1)
    {
        float ret = _AtlasSource_GetDpiX(jarg1);

        return ret;
    }

    public delegate void AtlasSource_SetDpiXDelegate(HandleRef jarg1, float jarg2);
    public static AtlasSource_SetDpiXDelegate _AtlasSource_SetDpiX;
    public static void AtlasSource_SetDpiX(HandleRef jarg1, float jarg2)
    {
        _AtlasSource_SetDpiX(jarg1, jarg2);
    }

    public delegate float AtlasSource_GetDpiYDelegate(HandleRef jarg1);
    public static AtlasSource_GetDpiYDelegate _AtlasSource_GetDpiY;
    public static float AtlasSource_GetDpiY(HandleRef jarg1)
    {
        float ret = _AtlasSource_GetDpiY(jarg1);

        return ret;
    }

    public delegate void AtlasSource_SetDpiYDelegate(HandleRef jarg1, float jarg2);
    public static AtlasSource_SetDpiYDelegate _AtlasSource_SetDpiY;
    public static void AtlasSource_SetDpiY(HandleRef jarg1, float jarg2)
    {
        _AtlasSource_SetDpiY(jarg1, jarg2);
    }

    public delegate int AtlasSource_GetPixelWidthDelegate(HandleRef jarg1);
    public static AtlasSource_GetPixelWidthDelegate _AtlasSource_GetPixelWidth;
    public static int AtlasSource_GetPixelWidth(HandleRef jarg1)
    {
        int ret = _AtlasSource_GetPixelWidth(jarg1);

        return ret;
    }

    public delegate int AtlasSource_GetPixelHeightDelegate(HandleRef jarg1);
    public static AtlasSource_GetPixelHeightDelegate _AtlasSource_GetPixelHeight;
    public static int AtlasSource_GetPixelHeight(HandleRef jarg1)
    {
        int ret = _AtlasSource_GetPixelHeight(jarg1);

        return ret;
    }

    public delegate void AtlasSource_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static AtlasSource_CreateRenderProxyDelegate _AtlasSource_CreateRenderProxy;
    public static void AtlasSource_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _AtlasSource_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void AtlasSource_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static AtlasSource_UpdateRenderProxyDelegate _AtlasSource_UpdateRenderProxy;
    public static void AtlasSource_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _AtlasSource_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void AtlasSource_UnregisterRendererDelegate(HandleRef jarg1, HandleRef jarg2);
    public static AtlasSource_UnregisterRendererDelegate _AtlasSource_UnregisterRenderer;
    public static void AtlasSource_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2)
    {
        _AtlasSource_UnregisterRenderer(jarg1, jarg2);
    }

    public delegate void delete_BaseBindingDelegate(HandleRef jarg1);
    public static delete_BaseBindingDelegate _delete_BaseBinding;
    public static void delete_BaseBinding(HandleRef jarg1)
    {
        _delete_BaseBinding(jarg1);
    }

    public delegate string BaseBinding_GetStringFormatDelegate(HandleRef jarg1);
    public static BaseBinding_GetStringFormatDelegate _BaseBinding_GetStringFormat;
    public static string BaseBinding_GetStringFormat(HandleRef jarg1)
    {
        string ret = _BaseBinding_GetStringFormat(jarg1);

        return ret;
    }

    public delegate void BaseBinding_SetStringFormatDelegate(HandleRef jarg1, string jarg2);
    public static BaseBinding_SetStringFormatDelegate _BaseBinding_SetStringFormat;
    public static void BaseBinding_SetStringFormat(HandleRef jarg1, string jarg2)
    {
        _BaseBinding_SetStringFormat(jarg1, jarg2);
    }

    public delegate void delete_BaseBindingExpressionDelegate(HandleRef jarg1);
    public static delete_BaseBindingExpressionDelegate _delete_BaseBindingExpression;
    public static void delete_BaseBindingExpression(HandleRef jarg1)
    {
        _delete_BaseBindingExpression(jarg1);
    }

    public delegate IntPtr BaseBindingExpression_GetBindingDelegate(HandleRef jarg1);
    public static BaseBindingExpression_GetBindingDelegate _BaseBindingExpression_GetBinding;
    public static IntPtr BaseBindingExpression_GetBinding(HandleRef jarg1)
    {
        IntPtr ret = _BaseBindingExpression_GetBinding(jarg1);

        return ret;
    }

    public delegate void delete_BaseButtonDelegate(HandleRef jarg1);
    public static delete_BaseButtonDelegate _delete_BaseButton;
    public static void delete_BaseButton(HandleRef jarg1)
    {
        _delete_BaseButton(jarg1);
    }

    public delegate int BaseButton_GetClickModeDelegate(HandleRef jarg1);
    public static BaseButton_GetClickModeDelegate _BaseButton_GetClickMode;
    public static int BaseButton_GetClickMode(HandleRef jarg1)
    {
        int ret = _BaseButton_GetClickMode(jarg1);

        return ret;
    }

    public delegate void BaseButton_SetClickModeDelegate(HandleRef jarg1, int jarg2);
    public static BaseButton_SetClickModeDelegate _BaseButton_SetClickMode;
    public static void BaseButton_SetClickMode(HandleRef jarg1, int jarg2)
    {
        _BaseButton_SetClickMode(jarg1, jarg2);
    }

    public delegate IntPtr BaseButton_GetCommandParameterDelegate(HandleRef jarg1);
    public static BaseButton_GetCommandParameterDelegate _BaseButton_GetCommandParameter;
    public static IntPtr BaseButton_GetCommandParameter(HandleRef jarg1)
    {
        IntPtr ret = _BaseButton_GetCommandParameter(jarg1);

        return ret;
    }

    public delegate void BaseButton_SetCommandParameterDelegate(HandleRef jarg1, HandleRef jarg2);
    public static BaseButton_SetCommandParameterDelegate _BaseButton_SetCommandParameter;
    public static void BaseButton_SetCommandParameter(HandleRef jarg1, HandleRef jarg2)
    {
        _BaseButton_SetCommandParameter(jarg1, jarg2);
    }

    public delegate IntPtr BaseButton_GetCommandTargetDelegate(HandleRef jarg1);
    public static BaseButton_GetCommandTargetDelegate _BaseButton_GetCommandTarget;
    public static IntPtr BaseButton_GetCommandTarget(HandleRef jarg1)
    {
        IntPtr ret = _BaseButton_GetCommandTarget(jarg1);

        return ret;
    }

    public delegate void BaseButton_SetCommandTargetDelegate(HandleRef jarg1, HandleRef jarg2);
    public static BaseButton_SetCommandTargetDelegate _BaseButton_SetCommandTarget;
    public static void BaseButton_SetCommandTarget(HandleRef jarg1, HandleRef jarg2)
    {
        _BaseButton_SetCommandTarget(jarg1, jarg2);
    }

    public delegate bool BaseButton_GetIsPressedDelegate(HandleRef jarg1);
    public static BaseButton_GetIsPressedDelegate _BaseButton_GetIsPressed;
    public static bool BaseButton_GetIsPressed(HandleRef jarg1)
    {
        bool ret = _BaseButton_GetIsPressed(jarg1);

        return ret;
    }

    public delegate IntPtr new_ToggleButtonDelegate();
    public static new_ToggleButtonDelegate _new_ToggleButton;
    public static IntPtr new_ToggleButton()
    {
        IntPtr ret = _new_ToggleButton();

        return ret;
    }

    public delegate IntPtr ToggleButton_GetIsCheckedDelegate(HandleRef jarg1);
    public static ToggleButton_GetIsCheckedDelegate _ToggleButton_GetIsChecked;
    public static IntPtr ToggleButton_GetIsChecked(HandleRef jarg1)
    {
        IntPtr ret = _ToggleButton_GetIsChecked(jarg1);

        return ret;
    }

    public delegate void ToggleButton_SetIsCheckedDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ToggleButton_SetIsCheckedDelegate _ToggleButton_SetIsChecked;
    public static void ToggleButton_SetIsChecked(HandleRef jarg1, HandleRef jarg2)
    {
        _ToggleButton_SetIsChecked(jarg1, jarg2);
    }

    public delegate bool ToggleButton_GetIsThreeStateDelegate(HandleRef jarg1);
    public static ToggleButton_GetIsThreeStateDelegate _ToggleButton_GetIsThreeState;
    public static bool ToggleButton_GetIsThreeState(HandleRef jarg1)
    {
        bool ret = _ToggleButton_GetIsThreeState(jarg1);

        return ret;
    }

    public delegate void ToggleButton_SetIsThreeStateDelegate(HandleRef jarg1, bool jarg2);
    public static ToggleButton_SetIsThreeStateDelegate _ToggleButton_SetIsThreeState;
    public static void ToggleButton_SetIsThreeState(HandleRef jarg1, bool jarg2)
    {
        _ToggleButton_SetIsThreeState(jarg1, jarg2);
    }

    public delegate void delete_ToggleButtonDelegate(HandleRef jarg1);
    public static delete_ToggleButtonDelegate _delete_ToggleButton;
    public static void delete_ToggleButton(HandleRef jarg1)
    {
        _delete_ToggleButton(jarg1);
    }

    public delegate void delete_BaseCommandDelegate(HandleRef jarg1);
    public static delete_BaseCommandDelegate _delete_BaseCommand;
    public static void delete_BaseCommand(HandleRef jarg1)
    {
        _delete_BaseCommand(jarg1);
    }

    public delegate IntPtr BaseCommand_GetNameDelegate(HandleRef jarg1);
    public static BaseCommand_GetNameDelegate _BaseCommand_GetName;
    public static IntPtr BaseCommand_GetName(HandleRef jarg1)
    {
        IntPtr ret = _BaseCommand_GetName(jarg1);

        return ret;
    }

    public delegate IntPtr BaseCommand_GetOwnerTypeDelegate(HandleRef jarg1);
    public static BaseCommand_GetOwnerTypeDelegate _BaseCommand_GetOwnerType;
    public static IntPtr BaseCommand_GetOwnerType(HandleRef jarg1)
    {
        IntPtr ret = _BaseCommand_GetOwnerType(jarg1);

        return ret;
    }

    public delegate IntPtr BaseCommand_CanExecuteChangedDelegate(HandleRef jarg1);
    public static BaseCommand_CanExecuteChangedDelegate _BaseCommand_CanExecuteChanged;
    public static IntPtr BaseCommand_CanExecuteChanged(HandleRef jarg1)
    {
        IntPtr ret = _BaseCommand_CanExecuteChanged(jarg1);

        return ret;
    }

    public delegate bool BaseCommand_CanExecuteDelegate(HandleRef jarg1, HandleRef jarg2);
    public static BaseCommand_CanExecuteDelegate _BaseCommand_CanExecute;
    public static bool BaseCommand_CanExecute(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _BaseCommand_CanExecute(jarg1, jarg2);

        return ret;
    }

    public delegate void BaseCommand_ExecuteDelegate(HandleRef jarg1, HandleRef jarg2);
    public static BaseCommand_ExecuteDelegate _BaseCommand_Execute;
    public static void BaseCommand_Execute(HandleRef jarg1, HandleRef jarg2)
    {
        _BaseCommand_Execute(jarg1, jarg2);
    }

    public delegate void delete_BaseDefinitionDelegate(HandleRef jarg1);
    public static delete_BaseDefinitionDelegate _delete_BaseDefinition;
    public static void delete_BaseDefinition(HandleRef jarg1)
    {
        _delete_BaseDefinition(jarg1);
    }

    public delegate IntPtr BaseDefinition_GetSharedSizeGroupDelegate(HandleRef jarg1);
    public static BaseDefinition_GetSharedSizeGroupDelegate _BaseDefinition_GetSharedSizeGroup;
    public static IntPtr BaseDefinition_GetSharedSizeGroup(HandleRef jarg1)
    {
        IntPtr ret = _BaseDefinition_GetSharedSizeGroup(jarg1);

        return ret;
    }

    public delegate void BaseDefinition_SetSharedSizeGroupDelegate(HandleRef jarg1, IntPtr jarg2);
    public static BaseDefinition_SetSharedSizeGroupDelegate _BaseDefinition_SetSharedSizeGroup;
    public static void BaseDefinition_SetSharedSizeGroup(HandleRef jarg1, IntPtr jarg2)
    {
        _BaseDefinition_SetSharedSizeGroup(jarg1, jarg2);
    }

    public delegate void delete_BaseMenuDelegate(HandleRef jarg1);
    public static delete_BaseMenuDelegate _delete_BaseMenu;
    public static void delete_BaseMenu(HandleRef jarg1)
    {
        _delete_BaseMenu(jarg1);
    }

    public delegate void delete_BaseTextBoxDelegate(HandleRef jarg1);
    public static delete_BaseTextBoxDelegate _delete_BaseTextBox;
    public static void delete_BaseTextBox(HandleRef jarg1)
    {
        _delete_BaseTextBox(jarg1);
    }

    public delegate bool BaseTextBox_GetAcceptsReturnDelegate(HandleRef jarg1);
    public static BaseTextBox_GetAcceptsReturnDelegate _BaseTextBox_GetAcceptsReturn;
    public static bool BaseTextBox_GetAcceptsReturn(HandleRef jarg1)
    {
        bool ret = _BaseTextBox_GetAcceptsReturn(jarg1);

        return ret;
    }

    public delegate void BaseTextBox_SetAcceptsReturnDelegate(HandleRef jarg1, bool jarg2);
    public static BaseTextBox_SetAcceptsReturnDelegate _BaseTextBox_SetAcceptsReturn;
    public static void BaseTextBox_SetAcceptsReturn(HandleRef jarg1, bool jarg2)
    {
        _BaseTextBox_SetAcceptsReturn(jarg1, jarg2);
    }

    public delegate bool BaseTextBox_GetAcceptsTabDelegate(HandleRef jarg1);
    public static BaseTextBox_GetAcceptsTabDelegate _BaseTextBox_GetAcceptsTab;
    public static bool BaseTextBox_GetAcceptsTab(HandleRef jarg1)
    {
        bool ret = _BaseTextBox_GetAcceptsTab(jarg1);

        return ret;
    }

    public delegate void BaseTextBox_SetAcceptsTabDelegate(HandleRef jarg1, bool jarg2);
    public static BaseTextBox_SetAcceptsTabDelegate _BaseTextBox_SetAcceptsTab;
    public static void BaseTextBox_SetAcceptsTab(HandleRef jarg1, bool jarg2)
    {
        _BaseTextBox_SetAcceptsTab(jarg1, jarg2);
    }

    public delegate bool BaseTextBox_GetAutoWordSelectionDelegate(HandleRef jarg1);
    public static BaseTextBox_GetAutoWordSelectionDelegate _BaseTextBox_GetAutoWordSelection;
    public static bool BaseTextBox_GetAutoWordSelection(HandleRef jarg1)
    {
        bool ret = _BaseTextBox_GetAutoWordSelection(jarg1);

        return ret;
    }

    public delegate void BaseTextBox_SetAutoWordSelectionDelegate(HandleRef jarg1, bool jarg2);
    public static BaseTextBox_SetAutoWordSelectionDelegate _BaseTextBox_SetAutoWordSelection;
    public static void BaseTextBox_SetAutoWordSelection(HandleRef jarg1, bool jarg2)
    {
        _BaseTextBox_SetAutoWordSelection(jarg1, jarg2);
    }

    public delegate IntPtr BaseTextBox_GetCaretBrushDelegate(HandleRef jarg1);
    public static BaseTextBox_GetCaretBrushDelegate _BaseTextBox_GetCaretBrush;
    public static IntPtr BaseTextBox_GetCaretBrush(HandleRef jarg1)
    {
        IntPtr ret = _BaseTextBox_GetCaretBrush(jarg1);

        return ret;
    }

    public delegate void BaseTextBox_SetCaretBrushDelegate(HandleRef jarg1, HandleRef jarg2);
    public static BaseTextBox_SetCaretBrushDelegate _BaseTextBox_SetCaretBrush;
    public static void BaseTextBox_SetCaretBrush(HandleRef jarg1, HandleRef jarg2)
    {
        _BaseTextBox_SetCaretBrush(jarg1, jarg2);
    }

    public delegate int BaseTextBox_GetHorizontalScrollBarVisibilityDelegate(HandleRef jarg1);
    public static BaseTextBox_GetHorizontalScrollBarVisibilityDelegate _BaseTextBox_GetHorizontalScrollBarVisibility;
    public static int BaseTextBox_GetHorizontalScrollBarVisibility(HandleRef jarg1)
    {
        int ret = _BaseTextBox_GetHorizontalScrollBarVisibility(jarg1);

        return ret;
    }

    public delegate void BaseTextBox_SetHorizontalScrollBarVisibilityDelegate(HandleRef jarg1, int jarg2);
    public static BaseTextBox_SetHorizontalScrollBarVisibilityDelegate _BaseTextBox_SetHorizontalScrollBarVisibility;
    public static void BaseTextBox_SetHorizontalScrollBarVisibility(HandleRef jarg1, int jarg2)
    {
        _BaseTextBox_SetHorizontalScrollBarVisibility(jarg1, jarg2);
    }

    public delegate bool BaseTextBox_GetIsReadOnlyDelegate(HandleRef jarg1);
    public static BaseTextBox_GetIsReadOnlyDelegate _BaseTextBox_GetIsReadOnly;
    public static bool BaseTextBox_GetIsReadOnly(HandleRef jarg1)
    {
        bool ret = _BaseTextBox_GetIsReadOnly(jarg1);

        return ret;
    }

    public delegate void BaseTextBox_SetIsReadOnlyDelegate(HandleRef jarg1, bool jarg2);
    public static BaseTextBox_SetIsReadOnlyDelegate _BaseTextBox_SetIsReadOnly;
    public static void BaseTextBox_SetIsReadOnly(HandleRef jarg1, bool jarg2)
    {
        _BaseTextBox_SetIsReadOnly(jarg1, jarg2);
    }

    public delegate bool BaseTextBox_GetIsUndoEnabledDelegate(HandleRef jarg1);
    public static BaseTextBox_GetIsUndoEnabledDelegate _BaseTextBox_GetIsUndoEnabled;
    public static bool BaseTextBox_GetIsUndoEnabled(HandleRef jarg1)
    {
        bool ret = _BaseTextBox_GetIsUndoEnabled(jarg1);

        return ret;
    }

    public delegate void BaseTextBox_SetIsUndoEnabledDelegate(HandleRef jarg1, bool jarg2);
    public static BaseTextBox_SetIsUndoEnabledDelegate _BaseTextBox_SetIsUndoEnabled;
    public static void BaseTextBox_SetIsUndoEnabled(HandleRef jarg1, bool jarg2)
    {
        _BaseTextBox_SetIsUndoEnabled(jarg1, jarg2);
    }

    public delegate IntPtr BaseTextBox_GetSelectionBrushDelegate(HandleRef jarg1);
    public static BaseTextBox_GetSelectionBrushDelegate _BaseTextBox_GetSelectionBrush;
    public static IntPtr BaseTextBox_GetSelectionBrush(HandleRef jarg1)
    {
        IntPtr ret = _BaseTextBox_GetSelectionBrush(jarg1);

        return ret;
    }

    public delegate void BaseTextBox_SetSelectionBrushDelegate(HandleRef jarg1, HandleRef jarg2);
    public static BaseTextBox_SetSelectionBrushDelegate _BaseTextBox_SetSelectionBrush;
    public static void BaseTextBox_SetSelectionBrush(HandleRef jarg1, HandleRef jarg2)
    {
        _BaseTextBox_SetSelectionBrush(jarg1, jarg2);
    }

    public delegate float BaseTextBox_GetSelectionOpacityDelegate(HandleRef jarg1);
    public static BaseTextBox_GetSelectionOpacityDelegate _BaseTextBox_GetSelectionOpacity;
    public static float BaseTextBox_GetSelectionOpacity(HandleRef jarg1)
    {
        float ret = _BaseTextBox_GetSelectionOpacity(jarg1);

        return ret;
    }

    public delegate void BaseTextBox_SetSelectionOpacityDelegate(HandleRef jarg1, float jarg2);
    public static BaseTextBox_SetSelectionOpacityDelegate _BaseTextBox_SetSelectionOpacity;
    public static void BaseTextBox_SetSelectionOpacity(HandleRef jarg1, float jarg2)
    {
        _BaseTextBox_SetSelectionOpacity(jarg1, jarg2);
    }

    public delegate int BaseTextBox_GetUndoLimitDelegate(HandleRef jarg1);
    public static BaseTextBox_GetUndoLimitDelegate _BaseTextBox_GetUndoLimit;
    public static int BaseTextBox_GetUndoLimit(HandleRef jarg1)
    {
        int ret = _BaseTextBox_GetUndoLimit(jarg1);

        return ret;
    }

    public delegate void BaseTextBox_SetUndoLimitDelegate(HandleRef jarg1, int jarg2);
    public static BaseTextBox_SetUndoLimitDelegate _BaseTextBox_SetUndoLimit;
    public static void BaseTextBox_SetUndoLimit(HandleRef jarg1, int jarg2)
    {
        _BaseTextBox_SetUndoLimit(jarg1, jarg2);
    }

    public delegate int BaseTextBox_GetVerticalScrollBarVisibilityDelegate(HandleRef jarg1);
    public static BaseTextBox_GetVerticalScrollBarVisibilityDelegate _BaseTextBox_GetVerticalScrollBarVisibility;
    public static int BaseTextBox_GetVerticalScrollBarVisibility(HandleRef jarg1)
    {
        int ret = _BaseTextBox_GetVerticalScrollBarVisibility(jarg1);

        return ret;
    }

    public delegate void BaseTextBox_SetVerticalScrollBarVisibilityDelegate(HandleRef jarg1, int jarg2);
    public static BaseTextBox_SetVerticalScrollBarVisibilityDelegate _BaseTextBox_SetVerticalScrollBarVisibility;
    public static void BaseTextBox_SetVerticalScrollBarVisibility(HandleRef jarg1, int jarg2)
    {
        _BaseTextBox_SetVerticalScrollBarVisibility(jarg1, jarg2);
    }

    public delegate void delete_BaseTriggerDelegate(HandleRef jarg1);
    public static delete_BaseTriggerDelegate _delete_BaseTrigger;
    public static void delete_BaseTrigger(HandleRef jarg1)
    {
        _delete_BaseTrigger(jarg1);
    }

    public delegate IntPtr BaseTrigger_GetEnterActionsDelegate(HandleRef jarg1);
    public static BaseTrigger_GetEnterActionsDelegate _BaseTrigger_GetEnterActions;
    public static IntPtr BaseTrigger_GetEnterActions(HandleRef jarg1)
    {
        IntPtr ret = _BaseTrigger_GetEnterActions(jarg1);

        return ret;
    }

    public delegate IntPtr BaseTrigger_GetExitActionsDelegate(HandleRef jarg1);
    public static BaseTrigger_GetExitActionsDelegate _BaseTrigger_GetExitActions;
    public static IntPtr BaseTrigger_GetExitActions(HandleRef jarg1)
    {
        IntPtr ret = _BaseTrigger_GetExitActions(jarg1);

        return ret;
    }

    public delegate void BaseTrigger_RegisterSourcesDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static BaseTrigger_RegisterSourcesDelegate _BaseTrigger_RegisterSources;
    public static void BaseTrigger_RegisterSources(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        _BaseTrigger_RegisterSources(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate void BaseTrigger_UnregisterSourcesDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static BaseTrigger_UnregisterSourcesDelegate _BaseTrigger_UnregisterSources;
    public static void BaseTrigger_UnregisterSources(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        _BaseTrigger_UnregisterSources(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate void BaseTrigger_RegisterEventsDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);
    public static BaseTrigger_RegisterEventsDelegate _BaseTrigger_RegisterEvents;
    public static void BaseTrigger_RegisterEvents(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4)
    {
        _BaseTrigger_RegisterEvents(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate void BaseTrigger_UnregisterEventsDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);
    public static BaseTrigger_UnregisterEventsDelegate _BaseTrigger_UnregisterEvents;
    public static void BaseTrigger_UnregisterEvents(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4)
    {
        _BaseTrigger_UnregisterEvents(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate bool BaseTrigger_CheckDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, bool jarg6);
    public static BaseTrigger_CheckDelegate _BaseTrigger_Check;
    public static bool BaseTrigger_Check(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, bool jarg6)
    {
        bool ret = _BaseTrigger_Check(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6);

        return ret;
    }

    public delegate IntPtr BaseTrigger_FindValueDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);
    public static BaseTrigger_FindValueDelegate _BaseTrigger_FindValue;
    public static IntPtr BaseTrigger_FindValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5)
    {
        IntPtr ret = _BaseTrigger_FindValue(jarg1, jarg2, jarg3, jarg4, jarg5);

        return ret;
    }

    public delegate void BaseTrigger_Invalidate__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4, bool jarg5, byte jarg6);
    public static BaseTrigger_Invalidate__SWIG_0Delegate _BaseTrigger_Invalidate__SWIG_0;
    public static void BaseTrigger_Invalidate__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4, bool jarg5, byte jarg6)
    {
        _BaseTrigger_Invalidate__SWIG_0(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6);
    }

    public delegate void BaseTrigger_Invalidate__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6, HandleRef jarg7, bool jarg8, bool jarg9, byte jarg10);
    public static BaseTrigger_Invalidate__SWIG_1Delegate _BaseTrigger_Invalidate__SWIG_1;
    public static void BaseTrigger_Invalidate__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6, HandleRef jarg7, bool jarg8, bool jarg9, byte jarg10)
    {
        _BaseTrigger_Invalidate__SWIG_1(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6, jarg7, jarg8, jarg9, jarg10);
    }

    public delegate void BaseTrigger_FireEnterActions__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static BaseTrigger_FireEnterActions__SWIG_0Delegate _BaseTrigger_FireEnterActions__SWIG_0;
    public static void BaseTrigger_FireEnterActions__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _BaseTrigger_FireEnterActions__SWIG_0(jarg1, jarg2, jarg3);
    }

    public delegate void BaseTrigger_FireEnterActions__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static BaseTrigger_FireEnterActions__SWIG_1Delegate _BaseTrigger_FireEnterActions__SWIG_1;
    public static void BaseTrigger_FireEnterActions__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        _BaseTrigger_FireEnterActions__SWIG_1(jarg1, jarg2);
    }

    public delegate void BaseTrigger_FireExitActions__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static BaseTrigger_FireExitActions__SWIG_0Delegate _BaseTrigger_FireExitActions__SWIG_0;
    public static void BaseTrigger_FireExitActions__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _BaseTrigger_FireExitActions__SWIG_0(jarg1, jarg2, jarg3);
    }

    public delegate void BaseTrigger_FireExitActions__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static BaseTrigger_FireExitActions__SWIG_1Delegate _BaseTrigger_FireExitActions__SWIG_1;
    public static void BaseTrigger_FireExitActions__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        _BaseTrigger_FireExitActions__SWIG_1(jarg1, jarg2);
    }

    public delegate void delete_BaseValueConverterDelegate(HandleRef jarg1);
    public static delete_BaseValueConverterDelegate _delete_BaseValueConverter;
    public static void delete_BaseValueConverter(HandleRef jarg1)
    {
        _delete_BaseValueConverter(jarg1);
    }

    public delegate IntPtr BaseValueConverter_ConvertDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static BaseValueConverter_ConvertDelegate _BaseValueConverter_Convert;
    public static IntPtr BaseValueConverter_Convert(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        IntPtr ret = _BaseValueConverter_Convert(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate bool BaseValueConverter_TryConvertDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);
    public static BaseValueConverter_TryConvertDelegate _BaseValueConverter_TryConvert;
    public static bool BaseValueConverter_TryConvert(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5)
    {
        bool ret = _BaseValueConverter_TryConvert(jarg1, jarg2, jarg3, jarg4, jarg5);

        return ret;
    }

    public delegate IntPtr BaseValueConverter_ConvertBackDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static BaseValueConverter_ConvertBackDelegate _BaseValueConverter_ConvertBack;
    public static IntPtr BaseValueConverter_ConvertBack(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        IntPtr ret = _BaseValueConverter_ConvertBack(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate bool BaseValueConverter_TryConvertBackDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);
    public static BaseValueConverter_TryConvertBackDelegate _BaseValueConverter_TryConvertBack;
    public static bool BaseValueConverter_TryConvertBack(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5)
    {
        bool ret = _BaseValueConverter_TryConvertBack(jarg1, jarg2, jarg3, jarg4, jarg5);

        return ret;
    }

    public delegate IntPtr new_Binding__SWIG_0Delegate();
    public static new_Binding__SWIG_0Delegate _new_Binding__SWIG_0;
    public static IntPtr new_Binding__SWIG_0()
    {
        IntPtr ret = _new_Binding__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_Binding__SWIG_1Delegate(string jarg1);
    public static new_Binding__SWIG_1Delegate _new_Binding__SWIG_1;
    public static IntPtr new_Binding__SWIG_1(string jarg1)
    {
        IntPtr ret = _new_Binding__SWIG_1(jarg1);

        return ret;
    }

    public delegate IntPtr new_Binding__SWIG_2Delegate(string jarg1, HandleRef jarg2);
    public static new_Binding__SWIG_2Delegate _new_Binding__SWIG_2;
    public static IntPtr new_Binding__SWIG_2(string jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_Binding__SWIG_2(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_Binding__SWIG_3Delegate(string jarg1, string jarg2);
    public static new_Binding__SWIG_3Delegate _new_Binding__SWIG_3;
    public static IntPtr new_Binding__SWIG_3(string jarg1, string jarg2)
    {
        IntPtr ret = _new_Binding__SWIG_3(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_Binding__SWIG_4Delegate(string jarg1, HandleRef jarg2);
    public static new_Binding__SWIG_4Delegate _new_Binding__SWIG_4;
    public static IntPtr new_Binding__SWIG_4(string jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_Binding__SWIG_4(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_BindingDelegate(HandleRef jarg1);
    public static delete_BindingDelegate _delete_Binding;
    public static void delete_Binding(HandleRef jarg1)
    {
        _delete_Binding(jarg1);
    }

    public delegate IntPtr Binding_GetElementNameDelegate(HandleRef jarg1);
    public static Binding_GetElementNameDelegate _Binding_GetElementName;
    public static IntPtr Binding_GetElementName(HandleRef jarg1)
    {
        IntPtr ret = _Binding_GetElementName(jarg1);

        return ret;
    }

    public delegate void Binding_SetElementNameDelegate(HandleRef jarg1, IntPtr jarg2);
    public static Binding_SetElementNameDelegate _Binding_SetElementName;
    public static void Binding_SetElementName(HandleRef jarg1, IntPtr jarg2)
    {
        _Binding_SetElementName(jarg1, jarg2);
    }

    public delegate IntPtr Binding_GetSourceDelegate(HandleRef jarg1);
    public static Binding_GetSourceDelegate _Binding_GetSource;
    public static IntPtr Binding_GetSource(HandleRef jarg1)
    {
        IntPtr ret = _Binding_GetSource(jarg1);

        return ret;
    }

    public delegate void Binding_SetSourceDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Binding_SetSourceDelegate _Binding_SetSource;
    public static void Binding_SetSource(HandleRef jarg1, HandleRef jarg2)
    {
        _Binding_SetSource(jarg1, jarg2);
    }

    public delegate IntPtr Binding_GetRelativeSourceDelegate(HandleRef jarg1);
    public static Binding_GetRelativeSourceDelegate _Binding_GetRelativeSource;
    public static IntPtr Binding_GetRelativeSource(HandleRef jarg1)
    {
        IntPtr ret = _Binding_GetRelativeSource(jarg1);

        return ret;
    }

    public delegate void Binding_SetRelativeSourceDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Binding_SetRelativeSourceDelegate _Binding_SetRelativeSource;
    public static void Binding_SetRelativeSource(HandleRef jarg1, HandleRef jarg2)
    {
        _Binding_SetRelativeSource(jarg1, jarg2);
    }

    public delegate IntPtr Binding_GetPathDelegate(HandleRef jarg1);
    public static Binding_GetPathDelegate _Binding_GetPath;
    public static IntPtr Binding_GetPath(HandleRef jarg1)
    {
        IntPtr ret = _Binding_GetPath(jarg1);

        return ret;
    }

    public delegate void Binding_SetPathDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Binding_SetPathDelegate _Binding_SetPath;
    public static void Binding_SetPath(HandleRef jarg1, HandleRef jarg2)
    {
        _Binding_SetPath(jarg1, jarg2);
    }

    public delegate int Binding_GetModeDelegate(HandleRef jarg1);
    public static Binding_GetModeDelegate _Binding_GetMode;
    public static int Binding_GetMode(HandleRef jarg1)
    {
        int ret = _Binding_GetMode(jarg1);

        return ret;
    }

    public delegate void Binding_SetModeDelegate(HandleRef jarg1, int jarg2);
    public static Binding_SetModeDelegate _Binding_SetMode;
    public static void Binding_SetMode(HandleRef jarg1, int jarg2)
    {
        _Binding_SetMode(jarg1, jarg2);
    }

    public delegate IntPtr Binding_GetConverterDelegate(HandleRef jarg1);
    public static Binding_GetConverterDelegate _Binding_GetConverter;
    public static IntPtr Binding_GetConverter(HandleRef jarg1)
    {
        IntPtr ret = _Binding_GetConverter(jarg1);

        return ret;
    }

    public delegate void Binding_SetConverterDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Binding_SetConverterDelegate _Binding_SetConverter;
    public static void Binding_SetConverter(HandleRef jarg1, HandleRef jarg2)
    {
        _Binding_SetConverter(jarg1, jarg2);
    }

    public delegate IntPtr Binding_GetConverterParameterDelegate(HandleRef jarg1);
    public static Binding_GetConverterParameterDelegate _Binding_GetConverterParameter;
    public static IntPtr Binding_GetConverterParameter(HandleRef jarg1)
    {
        IntPtr ret = _Binding_GetConverterParameter(jarg1);

        return ret;
    }

    public delegate void Binding_SetConverterParameterDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Binding_SetConverterParameterDelegate _Binding_SetConverterParameter;
    public static void Binding_SetConverterParameter(HandleRef jarg1, HandleRef jarg2)
    {
        _Binding_SetConverterParameter(jarg1, jarg2);
    }

    public delegate IntPtr Binding_GetFallbackValueDelegate(HandleRef jarg1);
    public static Binding_GetFallbackValueDelegate _Binding_GetFallbackValue;
    public static IntPtr Binding_GetFallbackValue(HandleRef jarg1)
    {
        IntPtr ret = _Binding_GetFallbackValue(jarg1);

        return ret;
    }

    public delegate void Binding_SetFallbackValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Binding_SetFallbackValueDelegate _Binding_SetFallbackValue;
    public static void Binding_SetFallbackValue(HandleRef jarg1, HandleRef jarg2)
    {
        _Binding_SetFallbackValue(jarg1, jarg2);
    }

    public delegate IntPtr Binding_GetUpdateSourceTriggerDelegate(HandleRef jarg1);
    public static Binding_GetUpdateSourceTriggerDelegate _Binding_GetUpdateSourceTrigger;
    public static IntPtr Binding_GetUpdateSourceTrigger(HandleRef jarg1)
    {
        IntPtr ret = _Binding_GetUpdateSourceTrigger(jarg1);

        return ret;
    }

    public delegate void Binding_SetUpdateSourceTriggerDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Binding_SetUpdateSourceTriggerDelegate _Binding_SetUpdateSourceTrigger;
    public static void Binding_SetUpdateSourceTrigger(HandleRef jarg1, HandleRef jarg2)
    {
        _Binding_SetUpdateSourceTrigger(jarg1, jarg2);
    }

    public delegate IntPtr Binding_GetSourceObjectDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Binding_GetSourceObjectDelegate _Binding_GetSourceObject;
    public static IntPtr Binding_GetSourceObject(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _Binding_GetSourceObject(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr Binding_ProvideValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Binding_ProvideValueDelegate _Binding_ProvideValue;
    public static IntPtr Binding_ProvideValue(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _Binding_ProvideValue(jarg1, jarg2);

        return ret;
    }

    public delegate void ClearAllBindingsDelegate(HandleRef jarg1);
    public static ClearAllBindingsDelegate _ClearAllBindings;
    public static void ClearAllBindings(HandleRef jarg1)
    {
        _ClearAllBindings(jarg1);
    }

    public delegate void ClearBindingDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ClearBindingDelegate _ClearBinding;
    public static void ClearBinding(HandleRef jarg1, HandleRef jarg2)
    {
        _ClearBinding(jarg1, jarg2);
    }

    public delegate IntPtr GetBindingBaseDelegate(HandleRef jarg1, HandleRef jarg2);
    public static GetBindingBaseDelegate _GetBindingBase;
    public static IntPtr GetBindingBase(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _GetBindingBase(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr GetBindingExpressionDelegate(HandleRef jarg1, HandleRef jarg2);
    public static GetBindingExpressionDelegate _GetBindingExpression;
    public static IntPtr GetBindingExpression(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _GetBindingExpression(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr SetBindingDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static SetBindingDelegate _SetBinding;
    public static IntPtr SetBinding(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        IntPtr ret = _SetBinding(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr new_BitmapSource__SWIG_0Delegate();
    public static new_BitmapSource__SWIG_0Delegate _new_BitmapSource__SWIG_0;
    public static IntPtr new_BitmapSource__SWIG_0()
    {
        IntPtr ret = _new_BitmapSource__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_BitmapSource__SWIG_1Delegate(HandleRef jarg1);
    public static new_BitmapSource__SWIG_1Delegate _new_BitmapSource__SWIG_1;
    public static IntPtr new_BitmapSource__SWIG_1(HandleRef jarg1)
    {
        IntPtr ret = _new_BitmapSource__SWIG_1(jarg1);

        return ret;
    }

    public delegate void delete_BitmapSourceDelegate(HandleRef jarg1);
    public static delete_BitmapSourceDelegate _delete_BitmapSource;
    public static void delete_BitmapSource(HandleRef jarg1)
    {
        _delete_BitmapSource(jarg1);
    }

    public delegate IntPtr BitmapSource_GetImageDelegate(HandleRef jarg1);
    public static BitmapSource_GetImageDelegate _BitmapSource_GetImage;
    public static IntPtr BitmapSource_GetImage(HandleRef jarg1)
    {
        IntPtr ret = _BitmapSource_GetImage(jarg1);

        return ret;
    }

    public delegate void BitmapSource_SetImageDelegate(HandleRef jarg1, HandleRef jarg2);
    public static BitmapSource_SetImageDelegate _BitmapSource_SetImage;
    public static void BitmapSource_SetImage(HandleRef jarg1, HandleRef jarg2)
    {
        _BitmapSource_SetImage(jarg1, jarg2);
    }

    public delegate float BitmapSource_GetDpiXDelegate(HandleRef jarg1);
    public static BitmapSource_GetDpiXDelegate _BitmapSource_GetDpiX;
    public static float BitmapSource_GetDpiX(HandleRef jarg1)
    {
        float ret = _BitmapSource_GetDpiX(jarg1);

        return ret;
    }

    public delegate float BitmapSource_GetDpiYDelegate(HandleRef jarg1);
    public static BitmapSource_GetDpiYDelegate _BitmapSource_GetDpiY;
    public static float BitmapSource_GetDpiY(HandleRef jarg1)
    {
        float ret = _BitmapSource_GetDpiY(jarg1);

        return ret;
    }

    public delegate int BitmapSource_GetPixelWidthDelegate(HandleRef jarg1);
    public static BitmapSource_GetPixelWidthDelegate _BitmapSource_GetPixelWidth;
    public static int BitmapSource_GetPixelWidth(HandleRef jarg1)
    {
        int ret = _BitmapSource_GetPixelWidth(jarg1);

        return ret;
    }

    public delegate int BitmapSource_GetPixelHeightDelegate(HandleRef jarg1);
    public static BitmapSource_GetPixelHeightDelegate _BitmapSource_GetPixelHeight;
    public static int BitmapSource_GetPixelHeight(HandleRef jarg1)
    {
        int ret = _BitmapSource_GetPixelHeight(jarg1);

        return ret;
    }

    public delegate void BitmapSource_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static BitmapSource_CreateRenderProxyDelegate _BitmapSource_CreateRenderProxy;
    public static void BitmapSource_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _BitmapSource_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void BitmapSource_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static BitmapSource_UpdateRenderProxyDelegate _BitmapSource_UpdateRenderProxy;
    public static void BitmapSource_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _BitmapSource_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void BitmapSource_UnregisterRendererDelegate(HandleRef jarg1, HandleRef jarg2);
    public static BitmapSource_UnregisterRendererDelegate _BitmapSource_UnregisterRenderer;
    public static void BitmapSource_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2)
    {
        _BitmapSource_UnregisterRenderer(jarg1, jarg2);
    }

    public delegate IntPtr new_Border__SWIG_0Delegate(bool jarg1);
    public static new_Border__SWIG_0Delegate _new_Border__SWIG_0;
    public static IntPtr new_Border__SWIG_0(bool jarg1)
    {
        IntPtr ret = _new_Border__SWIG_0(jarg1);

        return ret;
    }

    public delegate IntPtr new_Border__SWIG_1Delegate();
    public static new_Border__SWIG_1Delegate _new_Border__SWIG_1;
    public static IntPtr new_Border__SWIG_1()
    {
        IntPtr ret = _new_Border__SWIG_1();

        return ret;
    }

    public delegate void delete_BorderDelegate(HandleRef jarg1);
    public static delete_BorderDelegate _delete_Border;
    public static void delete_Border(HandleRef jarg1)
    {
        _delete_Border(jarg1);
    }

    public delegate IntPtr Border_GetBackgroundDelegate(HandleRef jarg1);
    public static Border_GetBackgroundDelegate _Border_GetBackground;
    public static IntPtr Border_GetBackground(HandleRef jarg1)
    {
        IntPtr ret = _Border_GetBackground(jarg1);

        return ret;
    }

    public delegate void Border_SetBackgroundDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Border_SetBackgroundDelegate _Border_SetBackground;
    public static void Border_SetBackground(HandleRef jarg1, HandleRef jarg2)
    {
        _Border_SetBackground(jarg1, jarg2);
    }

    public delegate IntPtr Border_GetBorderBrushDelegate(HandleRef jarg1);
    public static Border_GetBorderBrushDelegate _Border_GetBorderBrush;
    public static IntPtr Border_GetBorderBrush(HandleRef jarg1)
    {
        IntPtr ret = _Border_GetBorderBrush(jarg1);

        return ret;
    }

    public delegate void Border_SetBorderBrushDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Border_SetBorderBrushDelegate _Border_SetBorderBrush;
    public static void Border_SetBorderBrush(HandleRef jarg1, HandleRef jarg2)
    {
        _Border_SetBorderBrush(jarg1, jarg2);
    }

    public delegate IntPtr Border_GetBorderThicknessDelegate(HandleRef jarg1);
    public static Border_GetBorderThicknessDelegate _Border_GetBorderThickness;
    public static IntPtr Border_GetBorderThickness(HandleRef jarg1)
    {
        IntPtr ret = _Border_GetBorderThickness(jarg1);

        return ret;
    }

    public delegate void Border_SetBorderThicknessDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Border_SetBorderThicknessDelegate _Border_SetBorderThickness;
    public static void Border_SetBorderThickness(HandleRef jarg1, HandleRef jarg2)
    {
        _Border_SetBorderThickness(jarg1, jarg2);
    }

    public delegate IntPtr Border_GetCornerRadiusDelegate(HandleRef jarg1);
    public static Border_GetCornerRadiusDelegate _Border_GetCornerRadius;
    public static IntPtr Border_GetCornerRadius(HandleRef jarg1)
    {
        IntPtr ret = _Border_GetCornerRadius(jarg1);

        return ret;
    }

    public delegate void Border_SetCornerRadiusDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Border_SetCornerRadiusDelegate _Border_SetCornerRadius;
    public static void Border_SetCornerRadius(HandleRef jarg1, HandleRef jarg2)
    {
        _Border_SetCornerRadius(jarg1, jarg2);
    }

    public delegate IntPtr Border_GetPaddingDelegate(HandleRef jarg1);
    public static Border_GetPaddingDelegate _Border_GetPadding;
    public static IntPtr Border_GetPadding(HandleRef jarg1)
    {
        IntPtr ret = _Border_GetPadding(jarg1);

        return ret;
    }

    public delegate void Border_SetPaddingDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Border_SetPaddingDelegate _Border_SetPadding;
    public static void Border_SetPadding(HandleRef jarg1, HandleRef jarg2)
    {
        _Border_SetPadding(jarg1, jarg2);
    }

    public delegate void delete_BrushDelegate(HandleRef jarg1);
    public static delete_BrushDelegate _delete_Brush;
    public static void delete_Brush(HandleRef jarg1)
    {
        _delete_Brush(jarg1);
    }

    public delegate IntPtr Brush_ParseDelegate(string jarg1);
    public static Brush_ParseDelegate _Brush_Parse;
    public static IntPtr Brush_Parse(string jarg1)
    {
        IntPtr ret = _Brush_Parse(jarg1);

        return ret;
    }

    public delegate bool Brush_TryParseDelegate(string jarg1, HandleRef jarg2);
    public static Brush_TryParseDelegate _Brush_TryParse;
    public static bool Brush_TryParse(string jarg1, HandleRef jarg2)
    {
        bool ret = _Brush_TryParse(jarg1, jarg2);

        return ret;
    }

    public delegate float Brush_GetOpacityDelegate(HandleRef jarg1);
    public static Brush_GetOpacityDelegate _Brush_GetOpacity;
    public static float Brush_GetOpacity(HandleRef jarg1)
    {
        float ret = _Brush_GetOpacity(jarg1);

        return ret;
    }

    public delegate void Brush_SetOpacityDelegate(HandleRef jarg1, float jarg2);
    public static Brush_SetOpacityDelegate _Brush_SetOpacity;
    public static void Brush_SetOpacity(HandleRef jarg1, float jarg2)
    {
        _Brush_SetOpacity(jarg1, jarg2);
    }

    public delegate IntPtr Brush_GetRelativeTransformDelegate(HandleRef jarg1);
    public static Brush_GetRelativeTransformDelegate _Brush_GetRelativeTransform;
    public static IntPtr Brush_GetRelativeTransform(HandleRef jarg1)
    {
        IntPtr ret = _Brush_GetRelativeTransform(jarg1);

        return ret;
    }

    public delegate void Brush_SetRelativeTransformDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Brush_SetRelativeTransformDelegate _Brush_SetRelativeTransform;
    public static void Brush_SetRelativeTransform(HandleRef jarg1, HandleRef jarg2)
    {
        _Brush_SetRelativeTransform(jarg1, jarg2);
    }

    public delegate IntPtr Brush_GetTransformDelegate(HandleRef jarg1);
    public static Brush_GetTransformDelegate _Brush_GetTransform;
    public static IntPtr Brush_GetTransform(HandleRef jarg1)
    {
        IntPtr ret = _Brush_GetTransform(jarg1);

        return ret;
    }

    public delegate void Brush_SetTransformDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Brush_SetTransformDelegate _Brush_SetTransform;
    public static void Brush_SetTransform(HandleRef jarg1, HandleRef jarg2)
    {
        _Brush_SetTransform(jarg1, jarg2);
    }

    public delegate bool Brush_IsTransparentDelegate(HandleRef jarg1);
    public static Brush_IsTransparentDelegate _Brush_IsTransparent;
    public static bool Brush_IsTransparent(HandleRef jarg1)
    {
        bool ret = _Brush_IsTransparent(jarg1);

        return ret;
    }

    public delegate void Brush_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static Brush_UpdateRenderProxyDelegate _Brush_UpdateRenderProxy;
    public static void Brush_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _Brush_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void Brush_UnregisterRendererDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Brush_UnregisterRendererDelegate _Brush_UnregisterRenderer;
    public static void Brush_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2)
    {
        _Brush_UnregisterRenderer(jarg1, jarg2);
    }

    public delegate IntPtr Brushes_AliceBlueDelegate();
    public static Brushes_AliceBlueDelegate _Brushes_AliceBlue;
    public static IntPtr Brushes_AliceBlue()
    {
        IntPtr ret = _Brushes_AliceBlue();

        return ret;
    }

    public delegate IntPtr Brushes_AntiqueWhiteDelegate();
    public static Brushes_AntiqueWhiteDelegate _Brushes_AntiqueWhite;
    public static IntPtr Brushes_AntiqueWhite()
    {
        IntPtr ret = _Brushes_AntiqueWhite();

        return ret;
    }

    public delegate IntPtr Brushes_AquaDelegate();
    public static Brushes_AquaDelegate _Brushes_Aqua;
    public static IntPtr Brushes_Aqua()
    {
        IntPtr ret = _Brushes_Aqua();

        return ret;
    }

    public delegate IntPtr Brushes_AquamarineDelegate();
    public static Brushes_AquamarineDelegate _Brushes_Aquamarine;
    public static IntPtr Brushes_Aquamarine()
    {
        IntPtr ret = _Brushes_Aquamarine();

        return ret;
    }

    public delegate IntPtr Brushes_AzureDelegate();
    public static Brushes_AzureDelegate _Brushes_Azure;
    public static IntPtr Brushes_Azure()
    {
        IntPtr ret = _Brushes_Azure();

        return ret;
    }

    public delegate IntPtr Brushes_BeigeDelegate();
    public static Brushes_BeigeDelegate _Brushes_Beige;
    public static IntPtr Brushes_Beige()
    {
        IntPtr ret = _Brushes_Beige();

        return ret;
    }

    public delegate IntPtr Brushes_BisqueDelegate();
    public static Brushes_BisqueDelegate _Brushes_Bisque;
    public static IntPtr Brushes_Bisque()
    {
        IntPtr ret = _Brushes_Bisque();

        return ret;
    }

    public delegate IntPtr Brushes_BlackDelegate();
    public static Brushes_BlackDelegate _Brushes_Black;
    public static IntPtr Brushes_Black()
    {
        IntPtr ret = _Brushes_Black();

        return ret;
    }

    public delegate IntPtr Brushes_BlanchedAlmondDelegate();
    public static Brushes_BlanchedAlmondDelegate _Brushes_BlanchedAlmond;
    public static IntPtr Brushes_BlanchedAlmond()
    {
        IntPtr ret = _Brushes_BlanchedAlmond();

        return ret;
    }

    public delegate IntPtr Brushes_BlueDelegate();
    public static Brushes_BlueDelegate _Brushes_Blue;
    public static IntPtr Brushes_Blue()
    {
        IntPtr ret = _Brushes_Blue();

        return ret;
    }

    public delegate IntPtr Brushes_BlueVioletDelegate();
    public static Brushes_BlueVioletDelegate _Brushes_BlueViolet;
    public static IntPtr Brushes_BlueViolet()
    {
        IntPtr ret = _Brushes_BlueViolet();

        return ret;
    }

    public delegate IntPtr Brushes_BrownDelegate();
    public static Brushes_BrownDelegate _Brushes_Brown;
    public static IntPtr Brushes_Brown()
    {
        IntPtr ret = _Brushes_Brown();

        return ret;
    }

    public delegate IntPtr Brushes_BurlyWoodDelegate();
    public static Brushes_BurlyWoodDelegate _Brushes_BurlyWood;
    public static IntPtr Brushes_BurlyWood()
    {
        IntPtr ret = _Brushes_BurlyWood();

        return ret;
    }

    public delegate IntPtr Brushes_CadetBlueDelegate();
    public static Brushes_CadetBlueDelegate _Brushes_CadetBlue;
    public static IntPtr Brushes_CadetBlue()
    {
        IntPtr ret = _Brushes_CadetBlue();

        return ret;
    }

    public delegate IntPtr Brushes_ChartreuseDelegate();
    public static Brushes_ChartreuseDelegate _Brushes_Chartreuse;
    public static IntPtr Brushes_Chartreuse()
    {
        IntPtr ret = _Brushes_Chartreuse();

        return ret;
    }

    public delegate IntPtr Brushes_ChocolateDelegate();
    public static Brushes_ChocolateDelegate _Brushes_Chocolate;
    public static IntPtr Brushes_Chocolate()
    {
        IntPtr ret = _Brushes_Chocolate();

        return ret;
    }

    public delegate IntPtr Brushes_CoralDelegate();
    public static Brushes_CoralDelegate _Brushes_Coral;
    public static IntPtr Brushes_Coral()
    {
        IntPtr ret = _Brushes_Coral();

        return ret;
    }

    public delegate IntPtr Brushes_CornflowerBlueDelegate();
    public static Brushes_CornflowerBlueDelegate _Brushes_CornflowerBlue;
    public static IntPtr Brushes_CornflowerBlue()
    {
        IntPtr ret = _Brushes_CornflowerBlue();

        return ret;
    }

    public delegate IntPtr Brushes_CornsilkDelegate();
    public static Brushes_CornsilkDelegate _Brushes_Cornsilk;
    public static IntPtr Brushes_Cornsilk()
    {
        IntPtr ret = _Brushes_Cornsilk();

        return ret;
    }

    public delegate IntPtr Brushes_CrimsonDelegate();
    public static Brushes_CrimsonDelegate _Brushes_Crimson;
    public static IntPtr Brushes_Crimson()
    {
        IntPtr ret = _Brushes_Crimson();

        return ret;
    }

    public delegate IntPtr Brushes_CyanDelegate();
    public static Brushes_CyanDelegate _Brushes_Cyan;
    public static IntPtr Brushes_Cyan()
    {
        IntPtr ret = _Brushes_Cyan();

        return ret;
    }

    public delegate IntPtr Brushes_DarkBlueDelegate();
    public static Brushes_DarkBlueDelegate _Brushes_DarkBlue;
    public static IntPtr Brushes_DarkBlue()
    {
        IntPtr ret = _Brushes_DarkBlue();

        return ret;
    }

    public delegate IntPtr Brushes_DarkCyanDelegate();
    public static Brushes_DarkCyanDelegate _Brushes_DarkCyan;
    public static IntPtr Brushes_DarkCyan()
    {
        IntPtr ret = _Brushes_DarkCyan();

        return ret;
    }

    public delegate IntPtr Brushes_DarkGoldenrodDelegate();
    public static Brushes_DarkGoldenrodDelegate _Brushes_DarkGoldenrod;
    public static IntPtr Brushes_DarkGoldenrod()
    {
        IntPtr ret = _Brushes_DarkGoldenrod();

        return ret;
    }

    public delegate IntPtr Brushes_DarkGrayDelegate();
    public static Brushes_DarkGrayDelegate _Brushes_DarkGray;
    public static IntPtr Brushes_DarkGray()
    {
        IntPtr ret = _Brushes_DarkGray();

        return ret;
    }

    public delegate IntPtr Brushes_DarkGreenDelegate();
    public static Brushes_DarkGreenDelegate _Brushes_DarkGreen;
    public static IntPtr Brushes_DarkGreen()
    {
        IntPtr ret = _Brushes_DarkGreen();

        return ret;
    }

    public delegate IntPtr Brushes_DarkKhakiDelegate();
    public static Brushes_DarkKhakiDelegate _Brushes_DarkKhaki;
    public static IntPtr Brushes_DarkKhaki()
    {
        IntPtr ret = _Brushes_DarkKhaki();

        return ret;
    }

    public delegate IntPtr Brushes_DarkMagentaDelegate();
    public static Brushes_DarkMagentaDelegate _Brushes_DarkMagenta;
    public static IntPtr Brushes_DarkMagenta()
    {
        IntPtr ret = _Brushes_DarkMagenta();

        return ret;
    }

    public delegate IntPtr Brushes_DarkOliveGreenDelegate();
    public static Brushes_DarkOliveGreenDelegate _Brushes_DarkOliveGreen;
    public static IntPtr Brushes_DarkOliveGreen()
    {
        IntPtr ret = _Brushes_DarkOliveGreen();

        return ret;
    }

    public delegate IntPtr Brushes_DarkOrangeDelegate();
    public static Brushes_DarkOrangeDelegate _Brushes_DarkOrange;
    public static IntPtr Brushes_DarkOrange()
    {
        IntPtr ret = _Brushes_DarkOrange();

        return ret;
    }

    public delegate IntPtr Brushes_DarkOrchidDelegate();
    public static Brushes_DarkOrchidDelegate _Brushes_DarkOrchid;
    public static IntPtr Brushes_DarkOrchid()
    {
        IntPtr ret = _Brushes_DarkOrchid();

        return ret;
    }

    public delegate IntPtr Brushes_DarkRedDelegate();
    public static Brushes_DarkRedDelegate _Brushes_DarkRed;
    public static IntPtr Brushes_DarkRed()
    {
        IntPtr ret = _Brushes_DarkRed();

        return ret;
    }

    public delegate IntPtr Brushes_DarkSalmonDelegate();
    public static Brushes_DarkSalmonDelegate _Brushes_DarkSalmon;
    public static IntPtr Brushes_DarkSalmon()
    {
        IntPtr ret = _Brushes_DarkSalmon();

        return ret;
    }

    public delegate IntPtr Brushes_DarkSeaGreenDelegate();
    public static Brushes_DarkSeaGreenDelegate _Brushes_DarkSeaGreen;
    public static IntPtr Brushes_DarkSeaGreen()
    {
        IntPtr ret = _Brushes_DarkSeaGreen();

        return ret;
    }

    public delegate IntPtr Brushes_DarkSlateBlueDelegate();
    public static Brushes_DarkSlateBlueDelegate _Brushes_DarkSlateBlue;
    public static IntPtr Brushes_DarkSlateBlue()
    {
        IntPtr ret = _Brushes_DarkSlateBlue();

        return ret;
    }

    public delegate IntPtr Brushes_DarkSlateGrayDelegate();
    public static Brushes_DarkSlateGrayDelegate _Brushes_DarkSlateGray;
    public static IntPtr Brushes_DarkSlateGray()
    {
        IntPtr ret = _Brushes_DarkSlateGray();

        return ret;
    }

    public delegate IntPtr Brushes_DarkTurquoiseDelegate();
    public static Brushes_DarkTurquoiseDelegate _Brushes_DarkTurquoise;
    public static IntPtr Brushes_DarkTurquoise()
    {
        IntPtr ret = _Brushes_DarkTurquoise();

        return ret;
    }

    public delegate IntPtr Brushes_DarkVioletDelegate();
    public static Brushes_DarkVioletDelegate _Brushes_DarkViolet;
    public static IntPtr Brushes_DarkViolet()
    {
        IntPtr ret = _Brushes_DarkViolet();

        return ret;
    }

    public delegate IntPtr Brushes_DeepPinkDelegate();
    public static Brushes_DeepPinkDelegate _Brushes_DeepPink;
    public static IntPtr Brushes_DeepPink()
    {
        IntPtr ret = _Brushes_DeepPink();

        return ret;
    }

    public delegate IntPtr Brushes_DeepSkyBlueDelegate();
    public static Brushes_DeepSkyBlueDelegate _Brushes_DeepSkyBlue;
    public static IntPtr Brushes_DeepSkyBlue()
    {
        IntPtr ret = _Brushes_DeepSkyBlue();

        return ret;
    }

    public delegate IntPtr Brushes_DimGrayDelegate();
    public static Brushes_DimGrayDelegate _Brushes_DimGray;
    public static IntPtr Brushes_DimGray()
    {
        IntPtr ret = _Brushes_DimGray();

        return ret;
    }

    public delegate IntPtr Brushes_DodgerBlueDelegate();
    public static Brushes_DodgerBlueDelegate _Brushes_DodgerBlue;
    public static IntPtr Brushes_DodgerBlue()
    {
        IntPtr ret = _Brushes_DodgerBlue();

        return ret;
    }

    public delegate IntPtr Brushes_FirebrickDelegate();
    public static Brushes_FirebrickDelegate _Brushes_Firebrick;
    public static IntPtr Brushes_Firebrick()
    {
        IntPtr ret = _Brushes_Firebrick();

        return ret;
    }

    public delegate IntPtr Brushes_FloralWhiteDelegate();
    public static Brushes_FloralWhiteDelegate _Brushes_FloralWhite;
    public static IntPtr Brushes_FloralWhite()
    {
        IntPtr ret = _Brushes_FloralWhite();

        return ret;
    }

    public delegate IntPtr Brushes_ForestGreenDelegate();
    public static Brushes_ForestGreenDelegate _Brushes_ForestGreen;
    public static IntPtr Brushes_ForestGreen()
    {
        IntPtr ret = _Brushes_ForestGreen();

        return ret;
    }

    public delegate IntPtr Brushes_FuchsiaDelegate();
    public static Brushes_FuchsiaDelegate _Brushes_Fuchsia;
    public static IntPtr Brushes_Fuchsia()
    {
        IntPtr ret = _Brushes_Fuchsia();

        return ret;
    }

    public delegate IntPtr Brushes_GainsboroDelegate();
    public static Brushes_GainsboroDelegate _Brushes_Gainsboro;
    public static IntPtr Brushes_Gainsboro()
    {
        IntPtr ret = _Brushes_Gainsboro();

        return ret;
    }

    public delegate IntPtr Brushes_GhostWhiteDelegate();
    public static Brushes_GhostWhiteDelegate _Brushes_GhostWhite;
    public static IntPtr Brushes_GhostWhite()
    {
        IntPtr ret = _Brushes_GhostWhite();

        return ret;
    }

    public delegate IntPtr Brushes_GoldDelegate();
    public static Brushes_GoldDelegate _Brushes_Gold;
    public static IntPtr Brushes_Gold()
    {
        IntPtr ret = _Brushes_Gold();

        return ret;
    }

    public delegate IntPtr Brushes_GoldenrodDelegate();
    public static Brushes_GoldenrodDelegate _Brushes_Goldenrod;
    public static IntPtr Brushes_Goldenrod()
    {
        IntPtr ret = _Brushes_Goldenrod();

        return ret;
    }

    public delegate IntPtr Brushes_GrayDelegate();
    public static Brushes_GrayDelegate _Brushes_Gray;
    public static IntPtr Brushes_Gray()
    {
        IntPtr ret = _Brushes_Gray();

        return ret;
    }

    public delegate IntPtr Brushes_GreenDelegate();
    public static Brushes_GreenDelegate _Brushes_Green;
    public static IntPtr Brushes_Green()
    {
        IntPtr ret = _Brushes_Green();

        return ret;
    }

    public delegate IntPtr Brushes_GreenYellowDelegate();
    public static Brushes_GreenYellowDelegate _Brushes_GreenYellow;
    public static IntPtr Brushes_GreenYellow()
    {
        IntPtr ret = _Brushes_GreenYellow();

        return ret;
    }

    public delegate IntPtr Brushes_HoneydewDelegate();
    public static Brushes_HoneydewDelegate _Brushes_Honeydew;
    public static IntPtr Brushes_Honeydew()
    {
        IntPtr ret = _Brushes_Honeydew();

        return ret;
    }

    public delegate IntPtr Brushes_HotPinkDelegate();
    public static Brushes_HotPinkDelegate _Brushes_HotPink;
    public static IntPtr Brushes_HotPink()
    {
        IntPtr ret = _Brushes_HotPink();

        return ret;
    }

    public delegate IntPtr Brushes_IndianRedDelegate();
    public static Brushes_IndianRedDelegate _Brushes_IndianRed;
    public static IntPtr Brushes_IndianRed()
    {
        IntPtr ret = _Brushes_IndianRed();

        return ret;
    }

    public delegate IntPtr Brushes_IndigoDelegate();
    public static Brushes_IndigoDelegate _Brushes_Indigo;
    public static IntPtr Brushes_Indigo()
    {
        IntPtr ret = _Brushes_Indigo();

        return ret;
    }

    public delegate IntPtr Brushes_IvoryDelegate();
    public static Brushes_IvoryDelegate _Brushes_Ivory;
    public static IntPtr Brushes_Ivory()
    {
        IntPtr ret = _Brushes_Ivory();

        return ret;
    }

    public delegate IntPtr Brushes_KhakiDelegate();
    public static Brushes_KhakiDelegate _Brushes_Khaki;
    public static IntPtr Brushes_Khaki()
    {
        IntPtr ret = _Brushes_Khaki();

        return ret;
    }

    public delegate IntPtr Brushes_LavenderDelegate();
    public static Brushes_LavenderDelegate _Brushes_Lavender;
    public static IntPtr Brushes_Lavender()
    {
        IntPtr ret = _Brushes_Lavender();

        return ret;
    }

    public delegate IntPtr Brushes_LavenderBlushDelegate();
    public static Brushes_LavenderBlushDelegate _Brushes_LavenderBlush;
    public static IntPtr Brushes_LavenderBlush()
    {
        IntPtr ret = _Brushes_LavenderBlush();

        return ret;
    }

    public delegate IntPtr Brushes_LawnGreenDelegate();
    public static Brushes_LawnGreenDelegate _Brushes_LawnGreen;
    public static IntPtr Brushes_LawnGreen()
    {
        IntPtr ret = _Brushes_LawnGreen();

        return ret;
    }

    public delegate IntPtr Brushes_LemonChiffonDelegate();
    public static Brushes_LemonChiffonDelegate _Brushes_LemonChiffon;
    public static IntPtr Brushes_LemonChiffon()
    {
        IntPtr ret = _Brushes_LemonChiffon();

        return ret;
    }

    public delegate IntPtr Brushes_LightBlueDelegate();
    public static Brushes_LightBlueDelegate _Brushes_LightBlue;
    public static IntPtr Brushes_LightBlue()
    {
        IntPtr ret = _Brushes_LightBlue();

        return ret;
    }

    public delegate IntPtr Brushes_LightCoralDelegate();
    public static Brushes_LightCoralDelegate _Brushes_LightCoral;
    public static IntPtr Brushes_LightCoral()
    {
        IntPtr ret = _Brushes_LightCoral();

        return ret;
    }

    public delegate IntPtr Brushes_LightCyanDelegate();
    public static Brushes_LightCyanDelegate _Brushes_LightCyan;
    public static IntPtr Brushes_LightCyan()
    {
        IntPtr ret = _Brushes_LightCyan();

        return ret;
    }

    public delegate IntPtr Brushes_LightGoldenrodYellowDelegate();
    public static Brushes_LightGoldenrodYellowDelegate _Brushes_LightGoldenrodYellow;
    public static IntPtr Brushes_LightGoldenrodYellow()
    {
        IntPtr ret = _Brushes_LightGoldenrodYellow();

        return ret;
    }

    public delegate IntPtr Brushes_LightGrayDelegate();
    public static Brushes_LightGrayDelegate _Brushes_LightGray;
    public static IntPtr Brushes_LightGray()
    {
        IntPtr ret = _Brushes_LightGray();

        return ret;
    }

    public delegate IntPtr Brushes_LightGreenDelegate();
    public static Brushes_LightGreenDelegate _Brushes_LightGreen;
    public static IntPtr Brushes_LightGreen()
    {
        IntPtr ret = _Brushes_LightGreen();

        return ret;
    }

    public delegate IntPtr Brushes_LightPinkDelegate();
    public static Brushes_LightPinkDelegate _Brushes_LightPink;
    public static IntPtr Brushes_LightPink()
    {
        IntPtr ret = _Brushes_LightPink();

        return ret;
    }

    public delegate IntPtr Brushes_LightSalmonDelegate();
    public static Brushes_LightSalmonDelegate _Brushes_LightSalmon;
    public static IntPtr Brushes_LightSalmon()
    {
        IntPtr ret = _Brushes_LightSalmon();

        return ret;
    }

    public delegate IntPtr Brushes_LightSeaGreenDelegate();
    public static Brushes_LightSeaGreenDelegate _Brushes_LightSeaGreen;
    public static IntPtr Brushes_LightSeaGreen()
    {
        IntPtr ret = _Brushes_LightSeaGreen();

        return ret;
    }

    public delegate IntPtr Brushes_LightSkyBlueDelegate();
    public static Brushes_LightSkyBlueDelegate _Brushes_LightSkyBlue;
    public static IntPtr Brushes_LightSkyBlue()
    {
        IntPtr ret = _Brushes_LightSkyBlue();

        return ret;
    }

    public delegate IntPtr Brushes_LightSlateGrayDelegate();
    public static Brushes_LightSlateGrayDelegate _Brushes_LightSlateGray;
    public static IntPtr Brushes_LightSlateGray()
    {
        IntPtr ret = _Brushes_LightSlateGray();

        return ret;
    }

    public delegate IntPtr Brushes_LightSteelBlueDelegate();
    public static Brushes_LightSteelBlueDelegate _Brushes_LightSteelBlue;
    public static IntPtr Brushes_LightSteelBlue()
    {
        IntPtr ret = _Brushes_LightSteelBlue();

        return ret;
    }

    public delegate IntPtr Brushes_LightYellowDelegate();
    public static Brushes_LightYellowDelegate _Brushes_LightYellow;
    public static IntPtr Brushes_LightYellow()
    {
        IntPtr ret = _Brushes_LightYellow();

        return ret;
    }

    public delegate IntPtr Brushes_LimeDelegate();
    public static Brushes_LimeDelegate _Brushes_Lime;
    public static IntPtr Brushes_Lime()
    {
        IntPtr ret = _Brushes_Lime();

        return ret;
    }

    public delegate IntPtr Brushes_LimeGreenDelegate();
    public static Brushes_LimeGreenDelegate _Brushes_LimeGreen;
    public static IntPtr Brushes_LimeGreen()
    {
        IntPtr ret = _Brushes_LimeGreen();

        return ret;
    }

    public delegate IntPtr Brushes_LinenDelegate();
    public static Brushes_LinenDelegate _Brushes_Linen;
    public static IntPtr Brushes_Linen()
    {
        IntPtr ret = _Brushes_Linen();

        return ret;
    }

    public delegate IntPtr Brushes_MagentaDelegate();
    public static Brushes_MagentaDelegate _Brushes_Magenta;
    public static IntPtr Brushes_Magenta()
    {
        IntPtr ret = _Brushes_Magenta();

        return ret;
    }

    public delegate IntPtr Brushes_MaroonDelegate();
    public static Brushes_MaroonDelegate _Brushes_Maroon;
    public static IntPtr Brushes_Maroon()
    {
        IntPtr ret = _Brushes_Maroon();

        return ret;
    }

    public delegate IntPtr Brushes_MediumAquamarineDelegate();
    public static Brushes_MediumAquamarineDelegate _Brushes_MediumAquamarine;
    public static IntPtr Brushes_MediumAquamarine()
    {
        IntPtr ret = _Brushes_MediumAquamarine();

        return ret;
    }

    public delegate IntPtr Brushes_MediumBlueDelegate();
    public static Brushes_MediumBlueDelegate _Brushes_MediumBlue;
    public static IntPtr Brushes_MediumBlue()
    {
        IntPtr ret = _Brushes_MediumBlue();

        return ret;
    }

    public delegate IntPtr Brushes_MediumOrchidDelegate();
    public static Brushes_MediumOrchidDelegate _Brushes_MediumOrchid;
    public static IntPtr Brushes_MediumOrchid()
    {
        IntPtr ret = _Brushes_MediumOrchid();

        return ret;
    }

    public delegate IntPtr Brushes_MediumPurpleDelegate();
    public static Brushes_MediumPurpleDelegate _Brushes_MediumPurple;
    public static IntPtr Brushes_MediumPurple()
    {
        IntPtr ret = _Brushes_MediumPurple();

        return ret;
    }

    public delegate IntPtr Brushes_MediumSeaGreenDelegate();
    public static Brushes_MediumSeaGreenDelegate _Brushes_MediumSeaGreen;
    public static IntPtr Brushes_MediumSeaGreen()
    {
        IntPtr ret = _Brushes_MediumSeaGreen();

        return ret;
    }

    public delegate IntPtr Brushes_MediumSlateBlueDelegate();
    public static Brushes_MediumSlateBlueDelegate _Brushes_MediumSlateBlue;
    public static IntPtr Brushes_MediumSlateBlue()
    {
        IntPtr ret = _Brushes_MediumSlateBlue();

        return ret;
    }

    public delegate IntPtr Brushes_MediumSpringGreenDelegate();
    public static Brushes_MediumSpringGreenDelegate _Brushes_MediumSpringGreen;
    public static IntPtr Brushes_MediumSpringGreen()
    {
        IntPtr ret = _Brushes_MediumSpringGreen();

        return ret;
    }

    public delegate IntPtr Brushes_MediumTurquoiseDelegate();
    public static Brushes_MediumTurquoiseDelegate _Brushes_MediumTurquoise;
    public static IntPtr Brushes_MediumTurquoise()
    {
        IntPtr ret = _Brushes_MediumTurquoise();

        return ret;
    }

    public delegate IntPtr Brushes_MediumVioletRedDelegate();
    public static Brushes_MediumVioletRedDelegate _Brushes_MediumVioletRed;
    public static IntPtr Brushes_MediumVioletRed()
    {
        IntPtr ret = _Brushes_MediumVioletRed();

        return ret;
    }

    public delegate IntPtr Brushes_MidnightBlueDelegate();
    public static Brushes_MidnightBlueDelegate _Brushes_MidnightBlue;
    public static IntPtr Brushes_MidnightBlue()
    {
        IntPtr ret = _Brushes_MidnightBlue();

        return ret;
    }

    public delegate IntPtr Brushes_MintCreamDelegate();
    public static Brushes_MintCreamDelegate _Brushes_MintCream;
    public static IntPtr Brushes_MintCream()
    {
        IntPtr ret = _Brushes_MintCream();

        return ret;
    }

    public delegate IntPtr Brushes_MistyRoseDelegate();
    public static Brushes_MistyRoseDelegate _Brushes_MistyRose;
    public static IntPtr Brushes_MistyRose()
    {
        IntPtr ret = _Brushes_MistyRose();

        return ret;
    }

    public delegate IntPtr Brushes_MoccasinDelegate();
    public static Brushes_MoccasinDelegate _Brushes_Moccasin;
    public static IntPtr Brushes_Moccasin()
    {
        IntPtr ret = _Brushes_Moccasin();

        return ret;
    }

    public delegate IntPtr Brushes_NavajoWhiteDelegate();
    public static Brushes_NavajoWhiteDelegate _Brushes_NavajoWhite;
    public static IntPtr Brushes_NavajoWhite()
    {
        IntPtr ret = _Brushes_NavajoWhite();

        return ret;
    }

    public delegate IntPtr Brushes_NavyDelegate();
    public static Brushes_NavyDelegate _Brushes_Navy;
    public static IntPtr Brushes_Navy()
    {
        IntPtr ret = _Brushes_Navy();

        return ret;
    }

    public delegate IntPtr Brushes_OldLaceDelegate();
    public static Brushes_OldLaceDelegate _Brushes_OldLace;
    public static IntPtr Brushes_OldLace()
    {
        IntPtr ret = _Brushes_OldLace();

        return ret;
    }

    public delegate IntPtr Brushes_OliveDelegate();
    public static Brushes_OliveDelegate _Brushes_Olive;
    public static IntPtr Brushes_Olive()
    {
        IntPtr ret = _Brushes_Olive();

        return ret;
    }

    public delegate IntPtr Brushes_OliveDrabDelegate();
    public static Brushes_OliveDrabDelegate _Brushes_OliveDrab;
    public static IntPtr Brushes_OliveDrab()
    {
        IntPtr ret = _Brushes_OliveDrab();

        return ret;
    }

    public delegate IntPtr Brushes_OrangeDelegate();
    public static Brushes_OrangeDelegate _Brushes_Orange;
    public static IntPtr Brushes_Orange()
    {
        IntPtr ret = _Brushes_Orange();

        return ret;
    }

    public delegate IntPtr Brushes_OrangeRedDelegate();
    public static Brushes_OrangeRedDelegate _Brushes_OrangeRed;
    public static IntPtr Brushes_OrangeRed()
    {
        IntPtr ret = _Brushes_OrangeRed();

        return ret;
    }

    public delegate IntPtr Brushes_OrchidDelegate();
    public static Brushes_OrchidDelegate _Brushes_Orchid;
    public static IntPtr Brushes_Orchid()
    {
        IntPtr ret = _Brushes_Orchid();

        return ret;
    }

    public delegate IntPtr Brushes_PaleGoldenrodDelegate();
    public static Brushes_PaleGoldenrodDelegate _Brushes_PaleGoldenrod;
    public static IntPtr Brushes_PaleGoldenrod()
    {
        IntPtr ret = _Brushes_PaleGoldenrod();

        return ret;
    }

    public delegate IntPtr Brushes_PaleGreenDelegate();
    public static Brushes_PaleGreenDelegate _Brushes_PaleGreen;
    public static IntPtr Brushes_PaleGreen()
    {
        IntPtr ret = _Brushes_PaleGreen();

        return ret;
    }

    public delegate IntPtr Brushes_PaleTurquoiseDelegate();
    public static Brushes_PaleTurquoiseDelegate _Brushes_PaleTurquoise;
    public static IntPtr Brushes_PaleTurquoise()
    {
        IntPtr ret = _Brushes_PaleTurquoise();

        return ret;
    }

    public delegate IntPtr Brushes_PaleVioletRedDelegate();
    public static Brushes_PaleVioletRedDelegate _Brushes_PaleVioletRed;
    public static IntPtr Brushes_PaleVioletRed()
    {
        IntPtr ret = _Brushes_PaleVioletRed();

        return ret;
    }

    public delegate IntPtr Brushes_PapayaWhipDelegate();
    public static Brushes_PapayaWhipDelegate _Brushes_PapayaWhip;
    public static IntPtr Brushes_PapayaWhip()
    {
        IntPtr ret = _Brushes_PapayaWhip();

        return ret;
    }

    public delegate IntPtr Brushes_PeachPuffDelegate();
    public static Brushes_PeachPuffDelegate _Brushes_PeachPuff;
    public static IntPtr Brushes_PeachPuff()
    {
        IntPtr ret = _Brushes_PeachPuff();

        return ret;
    }

    public delegate IntPtr Brushes_PeruDelegate();
    public static Brushes_PeruDelegate _Brushes_Peru;
    public static IntPtr Brushes_Peru()
    {
        IntPtr ret = _Brushes_Peru();

        return ret;
    }

    public delegate IntPtr Brushes_PinkDelegate();
    public static Brushes_PinkDelegate _Brushes_Pink;
    public static IntPtr Brushes_Pink()
    {
        IntPtr ret = _Brushes_Pink();

        return ret;
    }

    public delegate IntPtr Brushes_PlumDelegate();
    public static Brushes_PlumDelegate _Brushes_Plum;
    public static IntPtr Brushes_Plum()
    {
        IntPtr ret = _Brushes_Plum();

        return ret;
    }

    public delegate IntPtr Brushes_PowderBlueDelegate();
    public static Brushes_PowderBlueDelegate _Brushes_PowderBlue;
    public static IntPtr Brushes_PowderBlue()
    {
        IntPtr ret = _Brushes_PowderBlue();

        return ret;
    }

    public delegate IntPtr Brushes_PurpleDelegate();
    public static Brushes_PurpleDelegate _Brushes_Purple;
    public static IntPtr Brushes_Purple()
    {
        IntPtr ret = _Brushes_Purple();

        return ret;
    }

    public delegate IntPtr Brushes_RedDelegate();
    public static Brushes_RedDelegate _Brushes_Red;
    public static IntPtr Brushes_Red()
    {
        IntPtr ret = _Brushes_Red();

        return ret;
    }

    public delegate IntPtr Brushes_RosyBrownDelegate();
    public static Brushes_RosyBrownDelegate _Brushes_RosyBrown;
    public static IntPtr Brushes_RosyBrown()
    {
        IntPtr ret = _Brushes_RosyBrown();

        return ret;
    }

    public delegate IntPtr Brushes_RoyalBlueDelegate();
    public static Brushes_RoyalBlueDelegate _Brushes_RoyalBlue;
    public static IntPtr Brushes_RoyalBlue()
    {
        IntPtr ret = _Brushes_RoyalBlue();

        return ret;
    }

    public delegate IntPtr Brushes_SaddleBrownDelegate();
    public static Brushes_SaddleBrownDelegate _Brushes_SaddleBrown;
    public static IntPtr Brushes_SaddleBrown()
    {
        IntPtr ret = _Brushes_SaddleBrown();

        return ret;
    }

    public delegate IntPtr Brushes_SalmonDelegate();
    public static Brushes_SalmonDelegate _Brushes_Salmon;
    public static IntPtr Brushes_Salmon()
    {
        IntPtr ret = _Brushes_Salmon();

        return ret;
    }

    public delegate IntPtr Brushes_SandyBrownDelegate();
    public static Brushes_SandyBrownDelegate _Brushes_SandyBrown;
    public static IntPtr Brushes_SandyBrown()
    {
        IntPtr ret = _Brushes_SandyBrown();

        return ret;
    }

    public delegate IntPtr Brushes_SeaGreenDelegate();
    public static Brushes_SeaGreenDelegate _Brushes_SeaGreen;
    public static IntPtr Brushes_SeaGreen()
    {
        IntPtr ret = _Brushes_SeaGreen();

        return ret;
    }

    public delegate IntPtr Brushes_SeaShellDelegate();
    public static Brushes_SeaShellDelegate _Brushes_SeaShell;
    public static IntPtr Brushes_SeaShell()
    {
        IntPtr ret = _Brushes_SeaShell();

        return ret;
    }

    public delegate IntPtr Brushes_SiennaDelegate();
    public static Brushes_SiennaDelegate _Brushes_Sienna;
    public static IntPtr Brushes_Sienna()
    {
        IntPtr ret = _Brushes_Sienna();

        return ret;
    }

    public delegate IntPtr Brushes_SilverDelegate();
    public static Brushes_SilverDelegate _Brushes_Silver;
    public static IntPtr Brushes_Silver()
    {
        IntPtr ret = _Brushes_Silver();

        return ret;
    }

    public delegate IntPtr Brushes_SkyBlueDelegate();
    public static Brushes_SkyBlueDelegate _Brushes_SkyBlue;
    public static IntPtr Brushes_SkyBlue()
    {
        IntPtr ret = _Brushes_SkyBlue();

        return ret;
    }

    public delegate IntPtr Brushes_SlateBlueDelegate();
    public static Brushes_SlateBlueDelegate _Brushes_SlateBlue;
    public static IntPtr Brushes_SlateBlue()
    {
        IntPtr ret = _Brushes_SlateBlue();

        return ret;
    }

    public delegate IntPtr Brushes_SlateGrayDelegate();
    public static Brushes_SlateGrayDelegate _Brushes_SlateGray;
    public static IntPtr Brushes_SlateGray()
    {
        IntPtr ret = _Brushes_SlateGray();

        return ret;
    }

    public delegate IntPtr Brushes_SnowDelegate();
    public static Brushes_SnowDelegate _Brushes_Snow;
    public static IntPtr Brushes_Snow()
    {
        IntPtr ret = _Brushes_Snow();

        return ret;
    }

    public delegate IntPtr Brushes_SpringGreenDelegate();
    public static Brushes_SpringGreenDelegate _Brushes_SpringGreen;
    public static IntPtr Brushes_SpringGreen()
    {
        IntPtr ret = _Brushes_SpringGreen();

        return ret;
    }

    public delegate IntPtr Brushes_SteelBlueDelegate();
    public static Brushes_SteelBlueDelegate _Brushes_SteelBlue;
    public static IntPtr Brushes_SteelBlue()
    {
        IntPtr ret = _Brushes_SteelBlue();

        return ret;
    }

    public delegate IntPtr Brushes_TanDelegate();
    public static Brushes_TanDelegate _Brushes_Tan;
    public static IntPtr Brushes_Tan()
    {
        IntPtr ret = _Brushes_Tan();

        return ret;
    }

    public delegate IntPtr Brushes_TealDelegate();
    public static Brushes_TealDelegate _Brushes_Teal;
    public static IntPtr Brushes_Teal()
    {
        IntPtr ret = _Brushes_Teal();

        return ret;
    }

    public delegate IntPtr Brushes_ThistleDelegate();
    public static Brushes_ThistleDelegate _Brushes_Thistle;
    public static IntPtr Brushes_Thistle()
    {
        IntPtr ret = _Brushes_Thistle();

        return ret;
    }

    public delegate IntPtr Brushes_TomatoDelegate();
    public static Brushes_TomatoDelegate _Brushes_Tomato;
    public static IntPtr Brushes_Tomato()
    {
        IntPtr ret = _Brushes_Tomato();

        return ret;
    }

    public delegate IntPtr Brushes_TransparentDelegate();
    public static Brushes_TransparentDelegate _Brushes_Transparent;
    public static IntPtr Brushes_Transparent()
    {
        IntPtr ret = _Brushes_Transparent();

        return ret;
    }

    public delegate IntPtr Brushes_TurquoiseDelegate();
    public static Brushes_TurquoiseDelegate _Brushes_Turquoise;
    public static IntPtr Brushes_Turquoise()
    {
        IntPtr ret = _Brushes_Turquoise();

        return ret;
    }

    public delegate IntPtr Brushes_VioletDelegate();
    public static Brushes_VioletDelegate _Brushes_Violet;
    public static IntPtr Brushes_Violet()
    {
        IntPtr ret = _Brushes_Violet();

        return ret;
    }

    public delegate IntPtr Brushes_WheatDelegate();
    public static Brushes_WheatDelegate _Brushes_Wheat;
    public static IntPtr Brushes_Wheat()
    {
        IntPtr ret = _Brushes_Wheat();

        return ret;
    }

    public delegate IntPtr Brushes_WhiteDelegate();
    public static Brushes_WhiteDelegate _Brushes_White;
    public static IntPtr Brushes_White()
    {
        IntPtr ret = _Brushes_White();

        return ret;
    }

    public delegate IntPtr Brushes_WhiteSmokeDelegate();
    public static Brushes_WhiteSmokeDelegate _Brushes_WhiteSmoke;
    public static IntPtr Brushes_WhiteSmoke()
    {
        IntPtr ret = _Brushes_WhiteSmoke();

        return ret;
    }

    public delegate IntPtr Brushes_YellowDelegate();
    public static Brushes_YellowDelegate _Brushes_Yellow;
    public static IntPtr Brushes_Yellow()
    {
        IntPtr ret = _Brushes_Yellow();

        return ret;
    }

    public delegate IntPtr Brushes_YellowGreenDelegate();
    public static Brushes_YellowGreenDelegate _Brushes_YellowGreen;
    public static IntPtr Brushes_YellowGreen()
    {
        IntPtr ret = _Brushes_YellowGreen();

        return ret;
    }

    public delegate IntPtr Brushes_FromColorDelegate(uint jarg1);
    public static Brushes_FromColorDelegate _Brushes_FromColor;
    public static IntPtr Brushes_FromColor(uint jarg1)
    {
        IntPtr ret = _Brushes_FromColor(jarg1);

        return ret;
    }

    public delegate IntPtr new_BrushesDelegate();
    public static new_BrushesDelegate _new_Brushes;
    public static IntPtr new_Brushes()
    {
        IntPtr ret = _new_Brushes();

        return ret;
    }

    public delegate void delete_BrushesDelegate(HandleRef jarg1);
    public static delete_BrushesDelegate _delete_Brushes;
    public static void delete_Brushes(HandleRef jarg1)
    {
        _delete_Brushes(jarg1);
    }

    public delegate IntPtr new_BulletDecoratorDelegate();
    public static new_BulletDecoratorDelegate _new_BulletDecorator;
    public static IntPtr new_BulletDecorator()
    {
        IntPtr ret = _new_BulletDecorator();

        return ret;
    }

    public delegate void delete_BulletDecoratorDelegate(HandleRef jarg1);
    public static delete_BulletDecoratorDelegate _delete_BulletDecorator;
    public static void delete_BulletDecorator(HandleRef jarg1)
    {
        _delete_BulletDecorator(jarg1);
    }

    public delegate IntPtr BulletDecorator_GetBackgroundDelegate(HandleRef jarg1);
    public static BulletDecorator_GetBackgroundDelegate _BulletDecorator_GetBackground;
    public static IntPtr BulletDecorator_GetBackground(HandleRef jarg1)
    {
        IntPtr ret = _BulletDecorator_GetBackground(jarg1);

        return ret;
    }

    public delegate void BulletDecorator_SetBackgroundDelegate(HandleRef jarg1, HandleRef jarg2);
    public static BulletDecorator_SetBackgroundDelegate _BulletDecorator_SetBackground;
    public static void BulletDecorator_SetBackground(HandleRef jarg1, HandleRef jarg2)
    {
        _BulletDecorator_SetBackground(jarg1, jarg2);
    }

    public delegate IntPtr BulletDecorator_GetBulletDelegate(HandleRef jarg1);
    public static BulletDecorator_GetBulletDelegate _BulletDecorator_GetBullet;
    public static IntPtr BulletDecorator_GetBullet(HandleRef jarg1)
    {
        IntPtr ret = _BulletDecorator_GetBullet(jarg1);

        return ret;
    }

    public delegate void BulletDecorator_SetBulletDelegate(HandleRef jarg1, HandleRef jarg2);
    public static BulletDecorator_SetBulletDelegate _BulletDecorator_SetBullet;
    public static void BulletDecorator_SetBullet(HandleRef jarg1, HandleRef jarg2)
    {
        _BulletDecorator_SetBullet(jarg1, jarg2);
    }

    public delegate IntPtr new_ButtonDelegate();
    public static new_ButtonDelegate _new_Button;
    public static IntPtr new_Button()
    {
        IntPtr ret = _new_Button();

        return ret;
    }

    public delegate void delete_ButtonDelegate(HandleRef jarg1);
    public static delete_ButtonDelegate _delete_Button;
    public static void delete_Button(HandleRef jarg1)
    {
        _delete_Button(jarg1);
    }

    public delegate bool Button_GetIsCancelDelegate(HandleRef jarg1);
    public static Button_GetIsCancelDelegate _Button_GetIsCancel;
    public static bool Button_GetIsCancel(HandleRef jarg1)
    {
        bool ret = _Button_GetIsCancel(jarg1);

        return ret;
    }

    public delegate void Button_SetIsCancelDelegate(HandleRef jarg1, bool jarg2);
    public static Button_SetIsCancelDelegate _Button_SetIsCancel;
    public static void Button_SetIsCancel(HandleRef jarg1, bool jarg2)
    {
        _Button_SetIsCancel(jarg1, jarg2);
    }

    public delegate bool Button_GetIsDefaultDelegate(HandleRef jarg1);
    public static Button_GetIsDefaultDelegate _Button_GetIsDefault;
    public static bool Button_GetIsDefault(HandleRef jarg1)
    {
        bool ret = _Button_GetIsDefault(jarg1);

        return ret;
    }

    public delegate void Button_SetIsDefaultDelegate(HandleRef jarg1, bool jarg2);
    public static Button_SetIsDefaultDelegate _Button_SetIsDefault;
    public static void Button_SetIsDefault(HandleRef jarg1, bool jarg2)
    {
        _Button_SetIsDefault(jarg1, jarg2);
    }

    public delegate bool Button_GetIsDefaultedDelegate(HandleRef jarg1);
    public static Button_GetIsDefaultedDelegate _Button_GetIsDefaulted;
    public static bool Button_GetIsDefaulted(HandleRef jarg1)
    {
        bool ret = _Button_GetIsDefaulted(jarg1);

        return ret;
    }

    public delegate IntPtr new_CanvasDelegate();
    public static new_CanvasDelegate _new_Canvas;
    public static IntPtr new_Canvas()
    {
        IntPtr ret = _new_Canvas();

        return ret;
    }

    public delegate float Canvas_GetLeftDelegate(HandleRef jarg1);
    public static Canvas_GetLeftDelegate _Canvas_GetLeft;
    public static float Canvas_GetLeft(HandleRef jarg1)
    {
        float ret = _Canvas_GetLeft(jarg1);

        return ret;
    }

    public delegate void Canvas_SetLeftDelegate(HandleRef jarg1, float jarg2);
    public static Canvas_SetLeftDelegate _Canvas_SetLeft;
    public static void Canvas_SetLeft(HandleRef jarg1, float jarg2)
    {
        _Canvas_SetLeft(jarg1, jarg2);
    }

    public delegate float Canvas_GetTopDelegate(HandleRef jarg1);
    public static Canvas_GetTopDelegate _Canvas_GetTop;
    public static float Canvas_GetTop(HandleRef jarg1)
    {
        float ret = _Canvas_GetTop(jarg1);

        return ret;
    }

    public delegate void Canvas_SetTopDelegate(HandleRef jarg1, float jarg2);
    public static Canvas_SetTopDelegate _Canvas_SetTop;
    public static void Canvas_SetTop(HandleRef jarg1, float jarg2)
    {
        _Canvas_SetTop(jarg1, jarg2);
    }

    public delegate float Canvas_GetRightDelegate(HandleRef jarg1);
    public static Canvas_GetRightDelegate _Canvas_GetRight;
    public static float Canvas_GetRight(HandleRef jarg1)
    {
        float ret = _Canvas_GetRight(jarg1);

        return ret;
    }

    public delegate void Canvas_SetRightDelegate(HandleRef jarg1, float jarg2);
    public static Canvas_SetRightDelegate _Canvas_SetRight;
    public static void Canvas_SetRight(HandleRef jarg1, float jarg2)
    {
        _Canvas_SetRight(jarg1, jarg2);
    }

    public delegate float Canvas_GetBottomDelegate(HandleRef jarg1);
    public static Canvas_GetBottomDelegate _Canvas_GetBottom;
    public static float Canvas_GetBottom(HandleRef jarg1)
    {
        float ret = _Canvas_GetBottom(jarg1);

        return ret;
    }

    public delegate void Canvas_SetBottomDelegate(HandleRef jarg1, float jarg2);
    public static Canvas_SetBottomDelegate _Canvas_SetBottom;
    public static void Canvas_SetBottom(HandleRef jarg1, float jarg2)
    {
        _Canvas_SetBottom(jarg1, jarg2);
    }

    public delegate void delete_CanvasDelegate(HandleRef jarg1);
    public static delete_CanvasDelegate _delete_Canvas;
    public static void delete_Canvas(HandleRef jarg1)
    {
        _delete_Canvas(jarg1);
    }

    public delegate IntPtr new_CheckBoxDelegate();
    public static new_CheckBoxDelegate _new_CheckBox;
    public static IntPtr new_CheckBox()
    {
        IntPtr ret = _new_CheckBox();

        return ret;
    }

    public delegate void delete_CheckBoxDelegate(HandleRef jarg1);
    public static delete_CheckBoxDelegate _delete_CheckBox;
    public static void delete_CheckBox(HandleRef jarg1)
    {
        _delete_CheckBox(jarg1);
    }

    public delegate IntPtr new_CollectionView__SWIG_0Delegate();
    public static new_CollectionView__SWIG_0Delegate _new_CollectionView__SWIG_0;
    public static IntPtr new_CollectionView__SWIG_0()
    {
        IntPtr ret = _new_CollectionView__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_CollectionView__SWIG_1Delegate(HandleRef jarg1);
    public static new_CollectionView__SWIG_1Delegate _new_CollectionView__SWIG_1;
    public static IntPtr new_CollectionView__SWIG_1(HandleRef jarg1)
    {
        IntPtr ret = _new_CollectionView__SWIG_1(jarg1);

        return ret;
    }

    public delegate void delete_CollectionViewDelegate(HandleRef jarg1);
    public static delete_CollectionViewDelegate _delete_CollectionView;
    public static void delete_CollectionView(HandleRef jarg1)
    {
        _delete_CollectionView(jarg1);
    }

    public delegate IntPtr CollectionView_GetCollectionDelegate(HandleRef jarg1);
    public static CollectionView_GetCollectionDelegate _CollectionView_GetCollection;
    public static IntPtr CollectionView_GetCollection(HandleRef jarg1)
    {
        IntPtr ret = _CollectionView_GetCollection(jarg1);

        return ret;
    }

    public delegate bool CollectionView_CanFilterDelegate(HandleRef jarg1);
    public static CollectionView_CanFilterDelegate _CollectionView_CanFilter;
    public static bool CollectionView_CanFilter(HandleRef jarg1)
    {
        bool ret = _CollectionView_CanFilter(jarg1);

        return ret;
    }

    public delegate bool CollectionView_CanGroupDelegate(HandleRef jarg1);
    public static CollectionView_CanGroupDelegate _CollectionView_CanGroup;
    public static bool CollectionView_CanGroup(HandleRef jarg1)
    {
        bool ret = _CollectionView_CanGroup(jarg1);

        return ret;
    }

    public delegate bool CollectionView_CanSortDelegate(HandleRef jarg1);
    public static CollectionView_CanSortDelegate _CollectionView_CanSort;
    public static bool CollectionView_CanSort(HandleRef jarg1)
    {
        bool ret = _CollectionView_CanSort(jarg1);

        return ret;
    }

    public delegate bool CollectionView_ContainsDelegate(HandleRef jarg1, HandleRef jarg2);
    public static CollectionView_ContainsDelegate _CollectionView_Contains;
    public static bool CollectionView_Contains(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _CollectionView_Contains(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr CollectionView_CurrentItemDelegate(HandleRef jarg1);
    public static CollectionView_CurrentItemDelegate _CollectionView_CurrentItem;
    public static IntPtr CollectionView_CurrentItem(HandleRef jarg1)
    {
        IntPtr ret = _CollectionView_CurrentItem(jarg1);

        return ret;
    }

    public delegate int CollectionView_CurrentPositionDelegate(HandleRef jarg1);
    public static CollectionView_CurrentPositionDelegate _CollectionView_CurrentPosition;
    public static int CollectionView_CurrentPosition(HandleRef jarg1)
    {
        int ret = _CollectionView_CurrentPosition(jarg1);

        return ret;
    }

    public delegate bool CollectionView_IsCurrentAfterLastDelegate(HandleRef jarg1);
    public static CollectionView_IsCurrentAfterLastDelegate _CollectionView_IsCurrentAfterLast;
    public static bool CollectionView_IsCurrentAfterLast(HandleRef jarg1)
    {
        bool ret = _CollectionView_IsCurrentAfterLast(jarg1);

        return ret;
    }

    public delegate bool CollectionView_IsCurrentBeforeFirstDelegate(HandleRef jarg1);
    public static CollectionView_IsCurrentBeforeFirstDelegate _CollectionView_IsCurrentBeforeFirst;
    public static bool CollectionView_IsCurrentBeforeFirst(HandleRef jarg1)
    {
        bool ret = _CollectionView_IsCurrentBeforeFirst(jarg1);

        return ret;
    }

    public delegate bool CollectionView_IsEmptyDelegate(HandleRef jarg1);
    public static CollectionView_IsEmptyDelegate _CollectionView_IsEmpty;
    public static bool CollectionView_IsEmpty(HandleRef jarg1)
    {
        bool ret = _CollectionView_IsEmpty(jarg1);

        return ret;
    }

    public delegate bool CollectionView_MoveCurrentToDelegate(HandleRef jarg1, HandleRef jarg2);
    public static CollectionView_MoveCurrentToDelegate _CollectionView_MoveCurrentTo;
    public static bool CollectionView_MoveCurrentTo(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _CollectionView_MoveCurrentTo(jarg1, jarg2);

        return ret;
    }

    public delegate bool CollectionView_MoveCurrentToFirstDelegate(HandleRef jarg1);
    public static CollectionView_MoveCurrentToFirstDelegate _CollectionView_MoveCurrentToFirst;
    public static bool CollectionView_MoveCurrentToFirst(HandleRef jarg1)
    {
        bool ret = _CollectionView_MoveCurrentToFirst(jarg1);

        return ret;
    }

    public delegate bool CollectionView_MoveCurrentToLastDelegate(HandleRef jarg1);
    public static CollectionView_MoveCurrentToLastDelegate _CollectionView_MoveCurrentToLast;
    public static bool CollectionView_MoveCurrentToLast(HandleRef jarg1)
    {
        bool ret = _CollectionView_MoveCurrentToLast(jarg1);

        return ret;
    }

    public delegate bool CollectionView_MoveCurrentToNextDelegate(HandleRef jarg1);
    public static CollectionView_MoveCurrentToNextDelegate _CollectionView_MoveCurrentToNext;
    public static bool CollectionView_MoveCurrentToNext(HandleRef jarg1)
    {
        bool ret = _CollectionView_MoveCurrentToNext(jarg1);

        return ret;
    }

    public delegate bool CollectionView_MoveCurrentToPositionDelegate(HandleRef jarg1, int jarg2);
    public static CollectionView_MoveCurrentToPositionDelegate _CollectionView_MoveCurrentToPosition;
    public static bool CollectionView_MoveCurrentToPosition(HandleRef jarg1, int jarg2)
    {
        bool ret = _CollectionView_MoveCurrentToPosition(jarg1, jarg2);

        return ret;
    }

    public delegate bool CollectionView_MoveCurrentToPreviousDelegate(HandleRef jarg1);
    public static CollectionView_MoveCurrentToPreviousDelegate _CollectionView_MoveCurrentToPrevious;
    public static bool CollectionView_MoveCurrentToPrevious(HandleRef jarg1)
    {
        bool ret = _CollectionView_MoveCurrentToPrevious(jarg1);

        return ret;
    }

    public delegate void CollectionView_RefreshDelegate(HandleRef jarg1);
    public static CollectionView_RefreshDelegate _CollectionView_Refresh;
    public static void CollectionView_Refresh(HandleRef jarg1)
    {
        _CollectionView_Refresh(jarg1);
    }

    public delegate IntPtr CollectionView_CurrentChangedDelegate(HandleRef jarg1);
    public static CollectionView_CurrentChangedDelegate _CollectionView_CurrentChanged;
    public static IntPtr CollectionView_CurrentChanged(HandleRef jarg1)
    {
        IntPtr ret = _CollectionView_CurrentChanged(jarg1);

        return ret;
    }

    public delegate IntPtr CollectionView_GetIteratorDelegate(HandleRef jarg1);
    public static CollectionView_GetIteratorDelegate _CollectionView_GetIterator;
    public static IntPtr CollectionView_GetIterator(HandleRef jarg1)
    {
        IntPtr ret = _CollectionView_GetIterator(jarg1);

        return ret;
    }

    public delegate IntPtr CollectionView_CollectionChangedDelegate(HandleRef jarg1);
    public static CollectionView_CollectionChangedDelegate _CollectionView_CollectionChanged;
    public static IntPtr CollectionView_CollectionChanged(HandleRef jarg1)
    {
        IntPtr ret = _CollectionView_CollectionChanged(jarg1);

        return ret;
    }

    public delegate bool CollectionView_IsInitializedDelegate(HandleRef jarg1);
    public static CollectionView_IsInitializedDelegate _CollectionView_IsInitialized;
    public static bool CollectionView_IsInitialized(HandleRef jarg1)
    {
        bool ret = _CollectionView_IsInitialized(jarg1);

        return ret;
    }

    public delegate void CollectionView_InitDelegate(HandleRef jarg1);
    public static CollectionView_InitDelegate _CollectionView_Init;
    public static void CollectionView_Init(HandleRef jarg1)
    {
        _CollectionView_Init(jarg1);
    }

    public delegate IntPtr new_CollectionViewSourceDelegate();
    public static new_CollectionViewSourceDelegate _new_CollectionViewSource;
    public static IntPtr new_CollectionViewSource()
    {
        IntPtr ret = _new_CollectionViewSource();

        return ret;
    }

    public delegate void delete_CollectionViewSourceDelegate(HandleRef jarg1);
    public static delete_CollectionViewSourceDelegate _delete_CollectionViewSource;
    public static void delete_CollectionViewSource(HandleRef jarg1)
    {
        _delete_CollectionViewSource(jarg1);
    }

    public delegate IntPtr CollectionViewSource_GetCollectionViewTypeDelegate(HandleRef jarg1);
    public static CollectionViewSource_GetCollectionViewTypeDelegate _CollectionViewSource_GetCollectionViewType;
    public static IntPtr CollectionViewSource_GetCollectionViewType(HandleRef jarg1)
    {
        IntPtr ret = _CollectionViewSource_GetCollectionViewType(jarg1);

        return ret;
    }

    public delegate void CollectionViewSource_SetCollectionViewTypeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static CollectionViewSource_SetCollectionViewTypeDelegate _CollectionViewSource_SetCollectionViewType;
    public static void CollectionViewSource_SetCollectionViewType(HandleRef jarg1, HandleRef jarg2)
    {
        _CollectionViewSource_SetCollectionViewType(jarg1, jarg2);
    }

    public delegate IntPtr CollectionViewSource_GetSourceDelegate(HandleRef jarg1);
    public static CollectionViewSource_GetSourceDelegate _CollectionViewSource_GetSource;
    public static IntPtr CollectionViewSource_GetSource(HandleRef jarg1)
    {
        IntPtr ret = _CollectionViewSource_GetSource(jarg1);

        return ret;
    }

    public delegate void CollectionViewSource_SetSourceDelegate(HandleRef jarg1, HandleRef jarg2);
    public static CollectionViewSource_SetSourceDelegate _CollectionViewSource_SetSource;
    public static void CollectionViewSource_SetSource(HandleRef jarg1, HandleRef jarg2)
    {
        _CollectionViewSource_SetSource(jarg1, jarg2);
    }

    public delegate IntPtr CollectionViewSource_GetViewDelegate(HandleRef jarg1);
    public static CollectionViewSource_GetViewDelegate _CollectionViewSource_GetView;
    public static IntPtr CollectionViewSource_GetView(HandleRef jarg1)
    {
        IntPtr ret = _CollectionViewSource_GetView(jarg1);

        return ret;
    }

    public delegate void CollectionViewSource_SetViewDelegate(HandleRef jarg1, HandleRef jarg2);
    public static CollectionViewSource_SetViewDelegate _CollectionViewSource_SetView;
    public static void CollectionViewSource_SetView(HandleRef jarg1, HandleRef jarg2)
    {
        _CollectionViewSource_SetView(jarg1, jarg2);
    }

    public delegate IntPtr CollectionViewSource_GetGroupDescriptionsDelegate(HandleRef jarg1);
    public static CollectionViewSource_GetGroupDescriptionsDelegate _CollectionViewSource_GetGroupDescriptions;
    public static IntPtr CollectionViewSource_GetGroupDescriptions(HandleRef jarg1)
    {
        IntPtr ret = _CollectionViewSource_GetGroupDescriptions(jarg1);

        return ret;
    }

    public delegate void CollectionViewSource_SetGroupDescriptionsDelegate(HandleRef jarg1, HandleRef jarg2);
    public static CollectionViewSource_SetGroupDescriptionsDelegate _CollectionViewSource_SetGroupDescriptions;
    public static void CollectionViewSource_SetGroupDescriptions(HandleRef jarg1, HandleRef jarg2)
    {
        _CollectionViewSource_SetGroupDescriptions(jarg1, jarg2);
    }

    public delegate IntPtr CollectionViewSource_GetSortDescriptionsDelegate(HandleRef jarg1);
    public static CollectionViewSource_GetSortDescriptionsDelegate _CollectionViewSource_GetSortDescriptions;
    public static IntPtr CollectionViewSource_GetSortDescriptions(HandleRef jarg1)
    {
        IntPtr ret = _CollectionViewSource_GetSortDescriptions(jarg1);

        return ret;
    }

    public delegate void CollectionViewSource_SetSortDescriptionsDelegate(HandleRef jarg1, HandleRef jarg2);
    public static CollectionViewSource_SetSortDescriptionsDelegate _CollectionViewSource_SetSortDescriptions;
    public static void CollectionViewSource_SetSortDescriptions(HandleRef jarg1, HandleRef jarg2)
    {
        _CollectionViewSource_SetSortDescriptions(jarg1, jarg2);
    }

    public delegate IntPtr Colors_AliceBlueDelegate();
    public static Colors_AliceBlueDelegate _Colors_AliceBlue;
    public static IntPtr Colors_AliceBlue()
    {
        IntPtr ret = _Colors_AliceBlue();

        return ret;
    }

    public delegate IntPtr Colors_AntiqueWhiteDelegate();
    public static Colors_AntiqueWhiteDelegate _Colors_AntiqueWhite;
    public static IntPtr Colors_AntiqueWhite()
    {
        IntPtr ret = _Colors_AntiqueWhite();

        return ret;
    }

    public delegate IntPtr Colors_AquaDelegate();
    public static Colors_AquaDelegate _Colors_Aqua;
    public static IntPtr Colors_Aqua()
    {
        IntPtr ret = _Colors_Aqua();

        return ret;
    }

    public delegate IntPtr Colors_AquamarineDelegate();
    public static Colors_AquamarineDelegate _Colors_Aquamarine;
    public static IntPtr Colors_Aquamarine()
    {
        IntPtr ret = _Colors_Aquamarine();

        return ret;
    }

    public delegate IntPtr Colors_AzureDelegate();
    public static Colors_AzureDelegate _Colors_Azure;
    public static IntPtr Colors_Azure()
    {
        IntPtr ret = _Colors_Azure();

        return ret;
    }

    public delegate IntPtr Colors_BeigeDelegate();
    public static Colors_BeigeDelegate _Colors_Beige;
    public static IntPtr Colors_Beige()
    {
        IntPtr ret = _Colors_Beige();

        return ret;
    }

    public delegate IntPtr Colors_BisqueDelegate();
    public static Colors_BisqueDelegate _Colors_Bisque;
    public static IntPtr Colors_Bisque()
    {
        IntPtr ret = _Colors_Bisque();

        return ret;
    }

    public delegate IntPtr Colors_BlackDelegate();
    public static Colors_BlackDelegate _Colors_Black;
    public static IntPtr Colors_Black()
    {
        IntPtr ret = _Colors_Black();

        return ret;
    }

    public delegate IntPtr Colors_BlanchedAlmondDelegate();
    public static Colors_BlanchedAlmondDelegate _Colors_BlanchedAlmond;
    public static IntPtr Colors_BlanchedAlmond()
    {
        IntPtr ret = _Colors_BlanchedAlmond();

        return ret;
    }

    public delegate IntPtr Colors_BlueDelegate();
    public static Colors_BlueDelegate _Colors_Blue;
    public static IntPtr Colors_Blue()
    {
        IntPtr ret = _Colors_Blue();

        return ret;
    }

    public delegate IntPtr Colors_BlueVioletDelegate();
    public static Colors_BlueVioletDelegate _Colors_BlueViolet;
    public static IntPtr Colors_BlueViolet()
    {
        IntPtr ret = _Colors_BlueViolet();

        return ret;
    }

    public delegate IntPtr Colors_BrownDelegate();
    public static Colors_BrownDelegate _Colors_Brown;
    public static IntPtr Colors_Brown()
    {
        IntPtr ret = _Colors_Brown();

        return ret;
    }

    public delegate IntPtr Colors_BurlyWoodDelegate();
    public static Colors_BurlyWoodDelegate _Colors_BurlyWood;
    public static IntPtr Colors_BurlyWood()
    {
        IntPtr ret = _Colors_BurlyWood();

        return ret;
    }

    public delegate IntPtr Colors_CadetBlueDelegate();
    public static Colors_CadetBlueDelegate _Colors_CadetBlue;
    public static IntPtr Colors_CadetBlue()
    {
        IntPtr ret = _Colors_CadetBlue();

        return ret;
    }

    public delegate IntPtr Colors_ChartreuseDelegate();
    public static Colors_ChartreuseDelegate _Colors_Chartreuse;
    public static IntPtr Colors_Chartreuse()
    {
        IntPtr ret = _Colors_Chartreuse();

        return ret;
    }

    public delegate IntPtr Colors_ChocolateDelegate();
    public static Colors_ChocolateDelegate _Colors_Chocolate;
    public static IntPtr Colors_Chocolate()
    {
        IntPtr ret = _Colors_Chocolate();

        return ret;
    }

    public delegate IntPtr Colors_CoralDelegate();
    public static Colors_CoralDelegate _Colors_Coral;
    public static IntPtr Colors_Coral()
    {
        IntPtr ret = _Colors_Coral();

        return ret;
    }

    public delegate IntPtr Colors_CornflowerBlueDelegate();
    public static Colors_CornflowerBlueDelegate _Colors_CornflowerBlue;
    public static IntPtr Colors_CornflowerBlue()
    {
        IntPtr ret = _Colors_CornflowerBlue();

        return ret;
    }

    public delegate IntPtr Colors_CornsilkDelegate();
    public static Colors_CornsilkDelegate _Colors_Cornsilk;
    public static IntPtr Colors_Cornsilk()
    {
        IntPtr ret = _Colors_Cornsilk();

        return ret;
    }

    public delegate IntPtr Colors_CrimsonDelegate();
    public static Colors_CrimsonDelegate _Colors_Crimson;
    public static IntPtr Colors_Crimson()
    {
        IntPtr ret = _Colors_Crimson();

        return ret;
    }

    public delegate IntPtr Colors_CyanDelegate();
    public static Colors_CyanDelegate _Colors_Cyan;
    public static IntPtr Colors_Cyan()
    {
        IntPtr ret = _Colors_Cyan();

        return ret;
    }

    public delegate IntPtr Colors_DarkBlueDelegate();
    public static Colors_DarkBlueDelegate _Colors_DarkBlue;
    public static IntPtr Colors_DarkBlue()
    {
        IntPtr ret = _Colors_DarkBlue();

        return ret;
    }

    public delegate IntPtr Colors_DarkCyanDelegate();
    public static Colors_DarkCyanDelegate _Colors_DarkCyan;
    public static IntPtr Colors_DarkCyan()
    {
        IntPtr ret = _Colors_DarkCyan();

        return ret;
    }

    public delegate IntPtr Colors_DarkGoldenrodDelegate();
    public static Colors_DarkGoldenrodDelegate _Colors_DarkGoldenrod;
    public static IntPtr Colors_DarkGoldenrod()
    {
        IntPtr ret = _Colors_DarkGoldenrod();

        return ret;
    }

    public delegate IntPtr Colors_DarkGrayDelegate();
    public static Colors_DarkGrayDelegate _Colors_DarkGray;
    public static IntPtr Colors_DarkGray()
    {
        IntPtr ret = _Colors_DarkGray();

        return ret;
    }

    public delegate IntPtr Colors_DarkGreenDelegate();
    public static Colors_DarkGreenDelegate _Colors_DarkGreen;
    public static IntPtr Colors_DarkGreen()
    {
        IntPtr ret = _Colors_DarkGreen();

        return ret;
    }

    public delegate IntPtr Colors_DarkKhakiDelegate();
    public static Colors_DarkKhakiDelegate _Colors_DarkKhaki;
    public static IntPtr Colors_DarkKhaki()
    {
        IntPtr ret = _Colors_DarkKhaki();

        return ret;
    }

    public delegate IntPtr Colors_DarkMagentaDelegate();
    public static Colors_DarkMagentaDelegate _Colors_DarkMagenta;
    public static IntPtr Colors_DarkMagenta()
    {
        IntPtr ret = _Colors_DarkMagenta();

        return ret;
    }

    public delegate IntPtr Colors_DarkOliveGreenDelegate();
    public static Colors_DarkOliveGreenDelegate _Colors_DarkOliveGreen;
    public static IntPtr Colors_DarkOliveGreen()
    {
        IntPtr ret = _Colors_DarkOliveGreen();

        return ret;
    }

    public delegate IntPtr Colors_DarkOrangeDelegate();
    public static Colors_DarkOrangeDelegate _Colors_DarkOrange;
    public static IntPtr Colors_DarkOrange()
    {
        IntPtr ret = _Colors_DarkOrange();

        return ret;
    }

    public delegate IntPtr Colors_DarkOrchidDelegate();
    public static Colors_DarkOrchidDelegate _Colors_DarkOrchid;
    public static IntPtr Colors_DarkOrchid()
    {
        IntPtr ret = _Colors_DarkOrchid();

        return ret;
    }

    public delegate IntPtr Colors_DarkRedDelegate();
    public static Colors_DarkRedDelegate _Colors_DarkRed;
    public static IntPtr Colors_DarkRed()
    {
        IntPtr ret = _Colors_DarkRed();

        return ret;
    }

    public delegate IntPtr Colors_DarkSalmonDelegate();
    public static Colors_DarkSalmonDelegate _Colors_DarkSalmon;
    public static IntPtr Colors_DarkSalmon()
    {
        IntPtr ret = _Colors_DarkSalmon();

        return ret;
    }

    public delegate IntPtr Colors_DarkSeaGreenDelegate();
    public static Colors_DarkSeaGreenDelegate _Colors_DarkSeaGreen;
    public static IntPtr Colors_DarkSeaGreen()
    {
        IntPtr ret = _Colors_DarkSeaGreen();

        return ret;
    }

    public delegate IntPtr Colors_DarkSlateBlueDelegate();
    public static Colors_DarkSlateBlueDelegate _Colors_DarkSlateBlue;
    public static IntPtr Colors_DarkSlateBlue()
    {
        IntPtr ret = _Colors_DarkSlateBlue();

        return ret;
    }

    public delegate IntPtr Colors_DarkSlateGrayDelegate();
    public static Colors_DarkSlateGrayDelegate _Colors_DarkSlateGray;
    public static IntPtr Colors_DarkSlateGray()
    {
        IntPtr ret = _Colors_DarkSlateGray();

        return ret;
    }

    public delegate IntPtr Colors_DarkTurquoiseDelegate();
    public static Colors_DarkTurquoiseDelegate _Colors_DarkTurquoise;
    public static IntPtr Colors_DarkTurquoise()
    {
        IntPtr ret = _Colors_DarkTurquoise();

        return ret;
    }

    public delegate IntPtr Colors_DarkVioletDelegate();
    public static Colors_DarkVioletDelegate _Colors_DarkViolet;
    public static IntPtr Colors_DarkViolet()
    {
        IntPtr ret = _Colors_DarkViolet();

        return ret;
    }

    public delegate IntPtr Colors_DeepPinkDelegate();
    public static Colors_DeepPinkDelegate _Colors_DeepPink;
    public static IntPtr Colors_DeepPink()
    {
        IntPtr ret = _Colors_DeepPink();

        return ret;
    }

    public delegate IntPtr Colors_DeepSkyBlueDelegate();
    public static Colors_DeepSkyBlueDelegate _Colors_DeepSkyBlue;
    public static IntPtr Colors_DeepSkyBlue()
    {
        IntPtr ret = _Colors_DeepSkyBlue();

        return ret;
    }

    public delegate IntPtr Colors_DimGrayDelegate();
    public static Colors_DimGrayDelegate _Colors_DimGray;
    public static IntPtr Colors_DimGray()
    {
        IntPtr ret = _Colors_DimGray();

        return ret;
    }

    public delegate IntPtr Colors_DodgerBlueDelegate();
    public static Colors_DodgerBlueDelegate _Colors_DodgerBlue;
    public static IntPtr Colors_DodgerBlue()
    {
        IntPtr ret = _Colors_DodgerBlue();

        return ret;
    }

    public delegate IntPtr Colors_FirebrickDelegate();
    public static Colors_FirebrickDelegate _Colors_Firebrick;
    public static IntPtr Colors_Firebrick()
    {
        IntPtr ret = _Colors_Firebrick();

        return ret;
    }

    public delegate IntPtr Colors_FloralWhiteDelegate();
    public static Colors_FloralWhiteDelegate _Colors_FloralWhite;
    public static IntPtr Colors_FloralWhite()
    {
        IntPtr ret = _Colors_FloralWhite();

        return ret;
    }

    public delegate IntPtr Colors_ForestGreenDelegate();
    public static Colors_ForestGreenDelegate _Colors_ForestGreen;
    public static IntPtr Colors_ForestGreen()
    {
        IntPtr ret = _Colors_ForestGreen();

        return ret;
    }

    public delegate IntPtr Colors_FuchsiaDelegate();
    public static Colors_FuchsiaDelegate _Colors_Fuchsia;
    public static IntPtr Colors_Fuchsia()
    {
        IntPtr ret = _Colors_Fuchsia();

        return ret;
    }

    public delegate IntPtr Colors_GainsboroDelegate();
    public static Colors_GainsboroDelegate _Colors_Gainsboro;
    public static IntPtr Colors_Gainsboro()
    {
        IntPtr ret = _Colors_Gainsboro();

        return ret;
    }

    public delegate IntPtr Colors_GhostWhiteDelegate();
    public static Colors_GhostWhiteDelegate _Colors_GhostWhite;
    public static IntPtr Colors_GhostWhite()
    {
        IntPtr ret = _Colors_GhostWhite();

        return ret;
    }

    public delegate IntPtr Colors_GoldDelegate();
    public static Colors_GoldDelegate _Colors_Gold;
    public static IntPtr Colors_Gold()
    {
        IntPtr ret = _Colors_Gold();

        return ret;
    }

    public delegate IntPtr Colors_GoldenrodDelegate();
    public static Colors_GoldenrodDelegate _Colors_Goldenrod;
    public static IntPtr Colors_Goldenrod()
    {
        IntPtr ret = _Colors_Goldenrod();

        return ret;
    }

    public delegate IntPtr Colors_GrayDelegate();
    public static Colors_GrayDelegate _Colors_Gray;
    public static IntPtr Colors_Gray()
    {
        IntPtr ret = _Colors_Gray();

        return ret;
    }

    public delegate IntPtr Colors_GreenDelegate();
    public static Colors_GreenDelegate _Colors_Green;
    public static IntPtr Colors_Green()
    {
        IntPtr ret = _Colors_Green();

        return ret;
    }

    public delegate IntPtr Colors_GreenYellowDelegate();
    public static Colors_GreenYellowDelegate _Colors_GreenYellow;
    public static IntPtr Colors_GreenYellow()
    {
        IntPtr ret = _Colors_GreenYellow();

        return ret;
    }

    public delegate IntPtr Colors_HoneydewDelegate();
    public static Colors_HoneydewDelegate _Colors_Honeydew;
    public static IntPtr Colors_Honeydew()
    {
        IntPtr ret = _Colors_Honeydew();

        return ret;
    }

    public delegate IntPtr Colors_HotPinkDelegate();
    public static Colors_HotPinkDelegate _Colors_HotPink;
    public static IntPtr Colors_HotPink()
    {
        IntPtr ret = _Colors_HotPink();

        return ret;
    }

    public delegate IntPtr Colors_IndianRedDelegate();
    public static Colors_IndianRedDelegate _Colors_IndianRed;
    public static IntPtr Colors_IndianRed()
    {
        IntPtr ret = _Colors_IndianRed();

        return ret;
    }

    public delegate IntPtr Colors_IndigoDelegate();
    public static Colors_IndigoDelegate _Colors_Indigo;
    public static IntPtr Colors_Indigo()
    {
        IntPtr ret = _Colors_Indigo();

        return ret;
    }

    public delegate IntPtr Colors_IvoryDelegate();
    public static Colors_IvoryDelegate _Colors_Ivory;
    public static IntPtr Colors_Ivory()
    {
        IntPtr ret = _Colors_Ivory();

        return ret;
    }

    public delegate IntPtr Colors_KhakiDelegate();
    public static Colors_KhakiDelegate _Colors_Khaki;
    public static IntPtr Colors_Khaki()
    {
        IntPtr ret = _Colors_Khaki();

        return ret;
    }

    public delegate IntPtr Colors_LavenderDelegate();
    public static Colors_LavenderDelegate _Colors_Lavender;
    public static IntPtr Colors_Lavender()
    {
        IntPtr ret = _Colors_Lavender();

        return ret;
    }

    public delegate IntPtr Colors_LavenderBlushDelegate();
    public static Colors_LavenderBlushDelegate _Colors_LavenderBlush;
    public static IntPtr Colors_LavenderBlush()
    {
        IntPtr ret = _Colors_LavenderBlush();

        return ret;
    }

    public delegate IntPtr Colors_LawnGreenDelegate();
    public static Colors_LawnGreenDelegate _Colors_LawnGreen;
    public static IntPtr Colors_LawnGreen()
    {
        IntPtr ret = _Colors_LawnGreen();

        return ret;
    }

    public delegate IntPtr Colors_LemonChiffonDelegate();
    public static Colors_LemonChiffonDelegate _Colors_LemonChiffon;
    public static IntPtr Colors_LemonChiffon()
    {
        IntPtr ret = _Colors_LemonChiffon();

        return ret;
    }

    public delegate IntPtr Colors_LightBlueDelegate();
    public static Colors_LightBlueDelegate _Colors_LightBlue;
    public static IntPtr Colors_LightBlue()
    {
        IntPtr ret = _Colors_LightBlue();

        return ret;
    }

    public delegate IntPtr Colors_LightCoralDelegate();
    public static Colors_LightCoralDelegate _Colors_LightCoral;
    public static IntPtr Colors_LightCoral()
    {
        IntPtr ret = _Colors_LightCoral();

        return ret;
    }

    public delegate IntPtr Colors_LightCyanDelegate();
    public static Colors_LightCyanDelegate _Colors_LightCyan;
    public static IntPtr Colors_LightCyan()
    {
        IntPtr ret = _Colors_LightCyan();

        return ret;
    }

    public delegate IntPtr Colors_LightGoldenrodYellowDelegate();
    public static Colors_LightGoldenrodYellowDelegate _Colors_LightGoldenrodYellow;
    public static IntPtr Colors_LightGoldenrodYellow()
    {
        IntPtr ret = _Colors_LightGoldenrodYellow();

        return ret;
    }

    public delegate IntPtr Colors_LightGrayDelegate();
    public static Colors_LightGrayDelegate _Colors_LightGray;
    public static IntPtr Colors_LightGray()
    {
        IntPtr ret = _Colors_LightGray();

        return ret;
    }

    public delegate IntPtr Colors_LightGreenDelegate();
    public static Colors_LightGreenDelegate _Colors_LightGreen;
    public static IntPtr Colors_LightGreen()
    {
        IntPtr ret = _Colors_LightGreen();

        return ret;
    }

    public delegate IntPtr Colors_LightPinkDelegate();
    public static Colors_LightPinkDelegate _Colors_LightPink;
    public static IntPtr Colors_LightPink()
    {
        IntPtr ret = _Colors_LightPink();

        return ret;
    }

    public delegate IntPtr Colors_LightSalmonDelegate();
    public static Colors_LightSalmonDelegate _Colors_LightSalmon;
    public static IntPtr Colors_LightSalmon()
    {
        IntPtr ret = _Colors_LightSalmon();

        return ret;
    }

    public delegate IntPtr Colors_LightSeaGreenDelegate();
    public static Colors_LightSeaGreenDelegate _Colors_LightSeaGreen;
    public static IntPtr Colors_LightSeaGreen()
    {
        IntPtr ret = _Colors_LightSeaGreen();

        return ret;
    }

    public delegate IntPtr Colors_LightSkyBlueDelegate();
    public static Colors_LightSkyBlueDelegate _Colors_LightSkyBlue;
    public static IntPtr Colors_LightSkyBlue()
    {
        IntPtr ret = _Colors_LightSkyBlue();

        return ret;
    }

    public delegate IntPtr Colors_LightSlateGrayDelegate();
    public static Colors_LightSlateGrayDelegate _Colors_LightSlateGray;
    public static IntPtr Colors_LightSlateGray()
    {
        IntPtr ret = _Colors_LightSlateGray();

        return ret;
    }

    public delegate IntPtr Colors_LightSteelBlueDelegate();
    public static Colors_LightSteelBlueDelegate _Colors_LightSteelBlue;
    public static IntPtr Colors_LightSteelBlue()
    {
        IntPtr ret = _Colors_LightSteelBlue();

        return ret;
    }

    public delegate IntPtr Colors_LightYellowDelegate();
    public static Colors_LightYellowDelegate _Colors_LightYellow;
    public static IntPtr Colors_LightYellow()
    {
        IntPtr ret = _Colors_LightYellow();

        return ret;
    }

    public delegate IntPtr Colors_LimeDelegate();
    public static Colors_LimeDelegate _Colors_Lime;
    public static IntPtr Colors_Lime()
    {
        IntPtr ret = _Colors_Lime();

        return ret;
    }

    public delegate IntPtr Colors_LimeGreenDelegate();
    public static Colors_LimeGreenDelegate _Colors_LimeGreen;
    public static IntPtr Colors_LimeGreen()
    {
        IntPtr ret = _Colors_LimeGreen();

        return ret;
    }

    public delegate IntPtr Colors_LinenDelegate();
    public static Colors_LinenDelegate _Colors_Linen;
    public static IntPtr Colors_Linen()
    {
        IntPtr ret = _Colors_Linen();

        return ret;
    }

    public delegate IntPtr Colors_MagentaDelegate();
    public static Colors_MagentaDelegate _Colors_Magenta;
    public static IntPtr Colors_Magenta()
    {
        IntPtr ret = _Colors_Magenta();

        return ret;
    }

    public delegate IntPtr Colors_MaroonDelegate();
    public static Colors_MaroonDelegate _Colors_Maroon;
    public static IntPtr Colors_Maroon()
    {
        IntPtr ret = _Colors_Maroon();

        return ret;
    }

    public delegate IntPtr Colors_MediumAquamarineDelegate();
    public static Colors_MediumAquamarineDelegate _Colors_MediumAquamarine;
    public static IntPtr Colors_MediumAquamarine()
    {
        IntPtr ret = _Colors_MediumAquamarine();

        return ret;
    }

    public delegate IntPtr Colors_MediumBlueDelegate();
    public static Colors_MediumBlueDelegate _Colors_MediumBlue;
    public static IntPtr Colors_MediumBlue()
    {
        IntPtr ret = _Colors_MediumBlue();

        return ret;
    }

    public delegate IntPtr Colors_MediumOrchidDelegate();
    public static Colors_MediumOrchidDelegate _Colors_MediumOrchid;
    public static IntPtr Colors_MediumOrchid()
    {
        IntPtr ret = _Colors_MediumOrchid();

        return ret;
    }

    public delegate IntPtr Colors_MediumPurpleDelegate();
    public static Colors_MediumPurpleDelegate _Colors_MediumPurple;
    public static IntPtr Colors_MediumPurple()
    {
        IntPtr ret = _Colors_MediumPurple();

        return ret;
    }

    public delegate IntPtr Colors_MediumSeaGreenDelegate();
    public static Colors_MediumSeaGreenDelegate _Colors_MediumSeaGreen;
    public static IntPtr Colors_MediumSeaGreen()
    {
        IntPtr ret = _Colors_MediumSeaGreen();

        return ret;
    }

    public delegate IntPtr Colors_MediumSlateBlueDelegate();
    public static Colors_MediumSlateBlueDelegate _Colors_MediumSlateBlue;
    public static IntPtr Colors_MediumSlateBlue()
    {
        IntPtr ret = _Colors_MediumSlateBlue();

        return ret;
    }

    public delegate IntPtr Colors_MediumSpringGreenDelegate();
    public static Colors_MediumSpringGreenDelegate _Colors_MediumSpringGreen;
    public static IntPtr Colors_MediumSpringGreen()
    {
        IntPtr ret = _Colors_MediumSpringGreen();

        return ret;
    }

    public delegate IntPtr Colors_MediumTurquoiseDelegate();
    public static Colors_MediumTurquoiseDelegate _Colors_MediumTurquoise;
    public static IntPtr Colors_MediumTurquoise()
    {
        IntPtr ret = _Colors_MediumTurquoise();

        return ret;
    }

    public delegate IntPtr Colors_MediumVioletRedDelegate();
    public static Colors_MediumVioletRedDelegate _Colors_MediumVioletRed;
    public static IntPtr Colors_MediumVioletRed()
    {
        IntPtr ret = _Colors_MediumVioletRed();

        return ret;
    }

    public delegate IntPtr Colors_MidnightBlueDelegate();
    public static Colors_MidnightBlueDelegate _Colors_MidnightBlue;
    public static IntPtr Colors_MidnightBlue()
    {
        IntPtr ret = _Colors_MidnightBlue();

        return ret;
    }

    public delegate IntPtr Colors_MintCreamDelegate();
    public static Colors_MintCreamDelegate _Colors_MintCream;
    public static IntPtr Colors_MintCream()
    {
        IntPtr ret = _Colors_MintCream();

        return ret;
    }

    public delegate IntPtr Colors_MistyRoseDelegate();
    public static Colors_MistyRoseDelegate _Colors_MistyRose;
    public static IntPtr Colors_MistyRose()
    {
        IntPtr ret = _Colors_MistyRose();

        return ret;
    }

    public delegate IntPtr Colors_MoccasinDelegate();
    public static Colors_MoccasinDelegate _Colors_Moccasin;
    public static IntPtr Colors_Moccasin()
    {
        IntPtr ret = _Colors_Moccasin();

        return ret;
    }

    public delegate IntPtr Colors_NavajoWhiteDelegate();
    public static Colors_NavajoWhiteDelegate _Colors_NavajoWhite;
    public static IntPtr Colors_NavajoWhite()
    {
        IntPtr ret = _Colors_NavajoWhite();

        return ret;
    }

    public delegate IntPtr Colors_NavyDelegate();
    public static Colors_NavyDelegate _Colors_Navy;
    public static IntPtr Colors_Navy()
    {
        IntPtr ret = _Colors_Navy();

        return ret;
    }

    public delegate IntPtr Colors_OldLaceDelegate();
    public static Colors_OldLaceDelegate _Colors_OldLace;
    public static IntPtr Colors_OldLace()
    {
        IntPtr ret = _Colors_OldLace();

        return ret;
    }

    public delegate IntPtr Colors_OliveDelegate();
    public static Colors_OliveDelegate _Colors_Olive;
    public static IntPtr Colors_Olive()
    {
        IntPtr ret = _Colors_Olive();

        return ret;
    }

    public delegate IntPtr Colors_OliveDrabDelegate();
    public static Colors_OliveDrabDelegate _Colors_OliveDrab;
    public static IntPtr Colors_OliveDrab()
    {
        IntPtr ret = _Colors_OliveDrab();

        return ret;
    }

    public delegate IntPtr Colors_OrangeDelegate();
    public static Colors_OrangeDelegate _Colors_Orange;
    public static IntPtr Colors_Orange()
    {
        IntPtr ret = _Colors_Orange();

        return ret;
    }

    public delegate IntPtr Colors_OrangeRedDelegate();
    public static Colors_OrangeRedDelegate _Colors_OrangeRed;
    public static IntPtr Colors_OrangeRed()
    {
        IntPtr ret = _Colors_OrangeRed();

        return ret;
    }

    public delegate IntPtr Colors_OrchidDelegate();
    public static Colors_OrchidDelegate _Colors_Orchid;
    public static IntPtr Colors_Orchid()
    {
        IntPtr ret = _Colors_Orchid();

        return ret;
    }

    public delegate IntPtr Colors_PaleGoldenrodDelegate();
    public static Colors_PaleGoldenrodDelegate _Colors_PaleGoldenrod;
    public static IntPtr Colors_PaleGoldenrod()
    {
        IntPtr ret = _Colors_PaleGoldenrod();

        return ret;
    }

    public delegate IntPtr Colors_PaleGreenDelegate();
    public static Colors_PaleGreenDelegate _Colors_PaleGreen;
    public static IntPtr Colors_PaleGreen()
    {
        IntPtr ret = _Colors_PaleGreen();

        return ret;
    }

    public delegate IntPtr Colors_PaleTurquoiseDelegate();
    public static Colors_PaleTurquoiseDelegate _Colors_PaleTurquoise;
    public static IntPtr Colors_PaleTurquoise()
    {
        IntPtr ret = _Colors_PaleTurquoise();

        return ret;
    }

    public delegate IntPtr Colors_PaleVioletRedDelegate();
    public static Colors_PaleVioletRedDelegate _Colors_PaleVioletRed;
    public static IntPtr Colors_PaleVioletRed()
    {
        IntPtr ret = _Colors_PaleVioletRed();

        return ret;
    }

    public delegate IntPtr Colors_PapayaWhipDelegate();
    public static Colors_PapayaWhipDelegate _Colors_PapayaWhip;
    public static IntPtr Colors_PapayaWhip()
    {
        IntPtr ret = _Colors_PapayaWhip();

        return ret;
    }

    public delegate IntPtr Colors_PeachPuffDelegate();
    public static Colors_PeachPuffDelegate _Colors_PeachPuff;
    public static IntPtr Colors_PeachPuff()
    {
        IntPtr ret = _Colors_PeachPuff();

        return ret;
    }

    public delegate IntPtr Colors_PeruDelegate();
    public static Colors_PeruDelegate _Colors_Peru;
    public static IntPtr Colors_Peru()
    {
        IntPtr ret = _Colors_Peru();

        return ret;
    }

    public delegate IntPtr Colors_PinkDelegate();
    public static Colors_PinkDelegate _Colors_Pink;
    public static IntPtr Colors_Pink()
    {
        IntPtr ret = _Colors_Pink();

        return ret;
    }

    public delegate IntPtr Colors_PlumDelegate();
    public static Colors_PlumDelegate _Colors_Plum;
    public static IntPtr Colors_Plum()
    {
        IntPtr ret = _Colors_Plum();

        return ret;
    }

    public delegate IntPtr Colors_PowderBlueDelegate();
    public static Colors_PowderBlueDelegate _Colors_PowderBlue;
    public static IntPtr Colors_PowderBlue()
    {
        IntPtr ret = _Colors_PowderBlue();

        return ret;
    }

    public delegate IntPtr Colors_PurpleDelegate();
    public static Colors_PurpleDelegate _Colors_Purple;
    public static IntPtr Colors_Purple()
    {
        IntPtr ret = _Colors_Purple();

        return ret;
    }

    public delegate IntPtr Colors_RedDelegate();
    public static Colors_RedDelegate _Colors_Red;
    public static IntPtr Colors_Red()
    {
        IntPtr ret = _Colors_Red();

        return ret;
    }

    public delegate IntPtr Colors_RosyBrownDelegate();
    public static Colors_RosyBrownDelegate _Colors_RosyBrown;
    public static IntPtr Colors_RosyBrown()
    {
        IntPtr ret = _Colors_RosyBrown();

        return ret;
    }

    public delegate IntPtr Colors_RoyalBlueDelegate();
    public static Colors_RoyalBlueDelegate _Colors_RoyalBlue;
    public static IntPtr Colors_RoyalBlue()
    {
        IntPtr ret = _Colors_RoyalBlue();

        return ret;
    }

    public delegate IntPtr Colors_SaddleBrownDelegate();
    public static Colors_SaddleBrownDelegate _Colors_SaddleBrown;
    public static IntPtr Colors_SaddleBrown()
    {
        IntPtr ret = _Colors_SaddleBrown();

        return ret;
    }

    public delegate IntPtr Colors_SalmonDelegate();
    public static Colors_SalmonDelegate _Colors_Salmon;
    public static IntPtr Colors_Salmon()
    {
        IntPtr ret = _Colors_Salmon();

        return ret;
    }

    public delegate IntPtr Colors_SandyBrownDelegate();
    public static Colors_SandyBrownDelegate _Colors_SandyBrown;
    public static IntPtr Colors_SandyBrown()
    {
        IntPtr ret = _Colors_SandyBrown();

        return ret;
    }

    public delegate IntPtr Colors_SeaGreenDelegate();
    public static Colors_SeaGreenDelegate _Colors_SeaGreen;
    public static IntPtr Colors_SeaGreen()
    {
        IntPtr ret = _Colors_SeaGreen();

        return ret;
    }

    public delegate IntPtr Colors_SeaShellDelegate();
    public static Colors_SeaShellDelegate _Colors_SeaShell;
    public static IntPtr Colors_SeaShell()
    {
        IntPtr ret = _Colors_SeaShell();

        return ret;
    }

    public delegate IntPtr Colors_SiennaDelegate();
    public static Colors_SiennaDelegate _Colors_Sienna;
    public static IntPtr Colors_Sienna()
    {
        IntPtr ret = _Colors_Sienna();

        return ret;
    }

    public delegate IntPtr Colors_SilverDelegate();
    public static Colors_SilverDelegate _Colors_Silver;
    public static IntPtr Colors_Silver()
    {
        IntPtr ret = _Colors_Silver();

        return ret;
    }

    public delegate IntPtr Colors_SkyBlueDelegate();
    public static Colors_SkyBlueDelegate _Colors_SkyBlue;
    public static IntPtr Colors_SkyBlue()
    {
        IntPtr ret = _Colors_SkyBlue();

        return ret;
    }

    public delegate IntPtr Colors_SlateBlueDelegate();
    public static Colors_SlateBlueDelegate _Colors_SlateBlue;
    public static IntPtr Colors_SlateBlue()
    {
        IntPtr ret = _Colors_SlateBlue();

        return ret;
    }

    public delegate IntPtr Colors_SlateGrayDelegate();
    public static Colors_SlateGrayDelegate _Colors_SlateGray;
    public static IntPtr Colors_SlateGray()
    {
        IntPtr ret = _Colors_SlateGray();

        return ret;
    }

    public delegate IntPtr Colors_SnowDelegate();
    public static Colors_SnowDelegate _Colors_Snow;
    public static IntPtr Colors_Snow()
    {
        IntPtr ret = _Colors_Snow();

        return ret;
    }

    public delegate IntPtr Colors_SpringGreenDelegate();
    public static Colors_SpringGreenDelegate _Colors_SpringGreen;
    public static IntPtr Colors_SpringGreen()
    {
        IntPtr ret = _Colors_SpringGreen();

        return ret;
    }

    public delegate IntPtr Colors_SteelBlueDelegate();
    public static Colors_SteelBlueDelegate _Colors_SteelBlue;
    public static IntPtr Colors_SteelBlue()
    {
        IntPtr ret = _Colors_SteelBlue();

        return ret;
    }

    public delegate IntPtr Colors_TanDelegate();
    public static Colors_TanDelegate _Colors_Tan;
    public static IntPtr Colors_Tan()
    {
        IntPtr ret = _Colors_Tan();

        return ret;
    }

    public delegate IntPtr Colors_TealDelegate();
    public static Colors_TealDelegate _Colors_Teal;
    public static IntPtr Colors_Teal()
    {
        IntPtr ret = _Colors_Teal();

        return ret;
    }

    public delegate IntPtr Colors_ThistleDelegate();
    public static Colors_ThistleDelegate _Colors_Thistle;
    public static IntPtr Colors_Thistle()
    {
        IntPtr ret = _Colors_Thistle();

        return ret;
    }

    public delegate IntPtr Colors_TomatoDelegate();
    public static Colors_TomatoDelegate _Colors_Tomato;
    public static IntPtr Colors_Tomato()
    {
        IntPtr ret = _Colors_Tomato();

        return ret;
    }

    public delegate IntPtr Colors_TransparentDelegate();
    public static Colors_TransparentDelegate _Colors_Transparent;
    public static IntPtr Colors_Transparent()
    {
        IntPtr ret = _Colors_Transparent();

        return ret;
    }

    public delegate IntPtr Colors_TurquoiseDelegate();
    public static Colors_TurquoiseDelegate _Colors_Turquoise;
    public static IntPtr Colors_Turquoise()
    {
        IntPtr ret = _Colors_Turquoise();

        return ret;
    }

    public delegate IntPtr Colors_VioletDelegate();
    public static Colors_VioletDelegate _Colors_Violet;
    public static IntPtr Colors_Violet()
    {
        IntPtr ret = _Colors_Violet();

        return ret;
    }

    public delegate IntPtr Colors_WheatDelegate();
    public static Colors_WheatDelegate _Colors_Wheat;
    public static IntPtr Colors_Wheat()
    {
        IntPtr ret = _Colors_Wheat();

        return ret;
    }

    public delegate IntPtr Colors_WhiteDelegate();
    public static Colors_WhiteDelegate _Colors_White;
    public static IntPtr Colors_White()
    {
        IntPtr ret = _Colors_White();

        return ret;
    }

    public delegate IntPtr Colors_WhiteSmokeDelegate();
    public static Colors_WhiteSmokeDelegate _Colors_WhiteSmoke;
    public static IntPtr Colors_WhiteSmoke()
    {
        IntPtr ret = _Colors_WhiteSmoke();

        return ret;
    }

    public delegate IntPtr Colors_YellowDelegate();
    public static Colors_YellowDelegate _Colors_Yellow;
    public static IntPtr Colors_Yellow()
    {
        IntPtr ret = _Colors_Yellow();

        return ret;
    }

    public delegate IntPtr Colors_YellowGreenDelegate();
    public static Colors_YellowGreenDelegate _Colors_YellowGreen;
    public static IntPtr Colors_YellowGreen()
    {
        IntPtr ret = _Colors_YellowGreen();

        return ret;
    }

    public delegate IntPtr new_ColorsDelegate();
    public static new_ColorsDelegate _new_Colors;
    public static IntPtr new_Colors()
    {
        IntPtr ret = _new_Colors();

        return ret;
    }

    public delegate void delete_ColorsDelegate(HandleRef jarg1);
    public static delete_ColorsDelegate _delete_Colors;
    public static void delete_Colors(HandleRef jarg1)
    {
        _delete_Colors(jarg1);
    }

    public delegate IntPtr new_ColumnDefinitionDelegate();
    public static new_ColumnDefinitionDelegate _new_ColumnDefinition;
    public static IntPtr new_ColumnDefinition()
    {
        IntPtr ret = _new_ColumnDefinition();

        return ret;
    }

    public delegate IntPtr ColumnDefinition_GetWidthDelegate(HandleRef jarg1);
    public static ColumnDefinition_GetWidthDelegate _ColumnDefinition_GetWidth;
    public static IntPtr ColumnDefinition_GetWidth(HandleRef jarg1)
    {
        IntPtr ret = _ColumnDefinition_GetWidth(jarg1);

        return ret;
    }

    public delegate void ColumnDefinition_SetWidthDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ColumnDefinition_SetWidthDelegate _ColumnDefinition_SetWidth;
    public static void ColumnDefinition_SetWidth(HandleRef jarg1, HandleRef jarg2)
    {
        _ColumnDefinition_SetWidth(jarg1, jarg2);
    }

    public delegate float ColumnDefinition_GetMinWidthDelegate(HandleRef jarg1);
    public static ColumnDefinition_GetMinWidthDelegate _ColumnDefinition_GetMinWidth;
    public static float ColumnDefinition_GetMinWidth(HandleRef jarg1)
    {
        float ret = _ColumnDefinition_GetMinWidth(jarg1);

        return ret;
    }

    public delegate void ColumnDefinition_SetMinWidthDelegate(HandleRef jarg1, float jarg2);
    public static ColumnDefinition_SetMinWidthDelegate _ColumnDefinition_SetMinWidth;
    public static void ColumnDefinition_SetMinWidth(HandleRef jarg1, float jarg2)
    {
        _ColumnDefinition_SetMinWidth(jarg1, jarg2);
    }

    public delegate float ColumnDefinition_GetMaxWidthDelegate(HandleRef jarg1);
    public static ColumnDefinition_GetMaxWidthDelegate _ColumnDefinition_GetMaxWidth;
    public static float ColumnDefinition_GetMaxWidth(HandleRef jarg1)
    {
        float ret = _ColumnDefinition_GetMaxWidth(jarg1);

        return ret;
    }

    public delegate void ColumnDefinition_SetMaxWidthDelegate(HandleRef jarg1, float jarg2);
    public static ColumnDefinition_SetMaxWidthDelegate _ColumnDefinition_SetMaxWidth;
    public static void ColumnDefinition_SetMaxWidth(HandleRef jarg1, float jarg2)
    {
        _ColumnDefinition_SetMaxWidth(jarg1, jarg2);
    }

    public delegate void delete_ColumnDefinitionDelegate(HandleRef jarg1);
    public static delete_ColumnDefinitionDelegate _delete_ColumnDefinition;
    public static void delete_ColumnDefinition(HandleRef jarg1)
    {
        _delete_ColumnDefinition(jarg1);
    }

    public delegate IntPtr new_CombinedGeometry__SWIG_0Delegate();
    public static new_CombinedGeometry__SWIG_0Delegate _new_CombinedGeometry__SWIG_0;
    public static IntPtr new_CombinedGeometry__SWIG_0()
    {
        IntPtr ret = _new_CombinedGeometry__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_CombinedGeometry__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2, int jarg3);
    public static new_CombinedGeometry__SWIG_1Delegate _new_CombinedGeometry__SWIG_1;
    public static IntPtr new_CombinedGeometry__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3)
    {
        IntPtr ret = _new_CombinedGeometry__SWIG_1(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr CombinedGeometry_GetGeometry1Delegate(HandleRef jarg1);
    public static CombinedGeometry_GetGeometry1Delegate _CombinedGeometry_GetGeometry1;
    public static IntPtr CombinedGeometry_GetGeometry1(HandleRef jarg1)
    {
        IntPtr ret = _CombinedGeometry_GetGeometry1(jarg1);

        return ret;
    }

    public delegate void CombinedGeometry_SetGeometry1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static CombinedGeometry_SetGeometry1Delegate _CombinedGeometry_SetGeometry1;
    public static void CombinedGeometry_SetGeometry1(HandleRef jarg1, HandleRef jarg2)
    {
        _CombinedGeometry_SetGeometry1(jarg1, jarg2);
    }

    public delegate IntPtr CombinedGeometry_GetGeometry2Delegate(HandleRef jarg1);
    public static CombinedGeometry_GetGeometry2Delegate _CombinedGeometry_GetGeometry2;
    public static IntPtr CombinedGeometry_GetGeometry2(HandleRef jarg1)
    {
        IntPtr ret = _CombinedGeometry_GetGeometry2(jarg1);

        return ret;
    }

    public delegate void CombinedGeometry_SetGeometry2Delegate(HandleRef jarg1, HandleRef jarg2);
    public static CombinedGeometry_SetGeometry2Delegate _CombinedGeometry_SetGeometry2;
    public static void CombinedGeometry_SetGeometry2(HandleRef jarg1, HandleRef jarg2)
    {
        _CombinedGeometry_SetGeometry2(jarg1, jarg2);
    }

    public delegate int CombinedGeometry_GetGeometryCombineModeDelegate(HandleRef jarg1);
    public static CombinedGeometry_GetGeometryCombineModeDelegate _CombinedGeometry_GetGeometryCombineMode;
    public static int CombinedGeometry_GetGeometryCombineMode(HandleRef jarg1)
    {
        int ret = _CombinedGeometry_GetGeometryCombineMode(jarg1);

        return ret;
    }

    public delegate void CombinedGeometry_SetGeometryCombineModeDelegate(HandleRef jarg1, int jarg2);
    public static CombinedGeometry_SetGeometryCombineModeDelegate _CombinedGeometry_SetGeometryCombineMode;
    public static void CombinedGeometry_SetGeometryCombineMode(HandleRef jarg1, int jarg2)
    {
        _CombinedGeometry_SetGeometryCombineMode(jarg1, jarg2);
    }

    public delegate void CombinedGeometry_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static CombinedGeometry_CreateRenderProxyDelegate _CombinedGeometry_CreateRenderProxy;
    public static void CombinedGeometry_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _CombinedGeometry_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void CombinedGeometry_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static CombinedGeometry_UpdateRenderProxyDelegate _CombinedGeometry_UpdateRenderProxy;
    public static void CombinedGeometry_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _CombinedGeometry_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void delete_CombinedGeometryDelegate(HandleRef jarg1);
    public static delete_CombinedGeometryDelegate _delete_CombinedGeometry;
    public static void delete_CombinedGeometry(HandleRef jarg1)
    {
        _delete_CombinedGeometry(jarg1);
    }

    public delegate IntPtr new_ComboBoxDelegate();
    public static new_ComboBoxDelegate _new_ComboBox;
    public static IntPtr new_ComboBox()
    {
        IntPtr ret = _new_ComboBox();

        return ret;
    }

    public delegate void delete_ComboBoxDelegate(HandleRef jarg1);
    public static delete_ComboBoxDelegate _delete_ComboBox;
    public static void delete_ComboBox(HandleRef jarg1)
    {
        _delete_ComboBox(jarg1);
    }

    public delegate bool ComboBox_GetIsDropDownOpenDelegate(HandleRef jarg1);
    public static ComboBox_GetIsDropDownOpenDelegate _ComboBox_GetIsDropDownOpen;
    public static bool ComboBox_GetIsDropDownOpen(HandleRef jarg1)
    {
        bool ret = _ComboBox_GetIsDropDownOpen(jarg1);

        return ret;
    }

    public delegate void ComboBox_SetIsDropDownOpenDelegate(HandleRef jarg1, bool jarg2);
    public static ComboBox_SetIsDropDownOpenDelegate _ComboBox_SetIsDropDownOpen;
    public static void ComboBox_SetIsDropDownOpen(HandleRef jarg1, bool jarg2)
    {
        _ComboBox_SetIsDropDownOpen(jarg1, jarg2);
    }

    public delegate bool ComboBox_GetIsEditableDelegate(HandleRef jarg1);
    public static ComboBox_GetIsEditableDelegate _ComboBox_GetIsEditable;
    public static bool ComboBox_GetIsEditable(HandleRef jarg1)
    {
        bool ret = _ComboBox_GetIsEditable(jarg1);

        return ret;
    }

    public delegate void ComboBox_SetIsEditableDelegate(HandleRef jarg1, bool jarg2);
    public static ComboBox_SetIsEditableDelegate _ComboBox_SetIsEditable;
    public static void ComboBox_SetIsEditable(HandleRef jarg1, bool jarg2)
    {
        _ComboBox_SetIsEditable(jarg1, jarg2);
    }

    public delegate bool ComboBox_GetIsReadOnlyDelegate(HandleRef jarg1);
    public static ComboBox_GetIsReadOnlyDelegate _ComboBox_GetIsReadOnly;
    public static bool ComboBox_GetIsReadOnly(HandleRef jarg1)
    {
        bool ret = _ComboBox_GetIsReadOnly(jarg1);

        return ret;
    }

    public delegate void ComboBox_SetIsReadOnlyDelegate(HandleRef jarg1, bool jarg2);
    public static ComboBox_SetIsReadOnlyDelegate _ComboBox_SetIsReadOnly;
    public static void ComboBox_SetIsReadOnly(HandleRef jarg1, bool jarg2)
    {
        _ComboBox_SetIsReadOnly(jarg1, jarg2);
    }

    public delegate float ComboBox_GetMaxDropDownHeightDelegate(HandleRef jarg1);
    public static ComboBox_GetMaxDropDownHeightDelegate _ComboBox_GetMaxDropDownHeight;
    public static float ComboBox_GetMaxDropDownHeight(HandleRef jarg1)
    {
        float ret = _ComboBox_GetMaxDropDownHeight(jarg1);

        return ret;
    }

    public delegate void ComboBox_SetMaxDropDownHeightDelegate(HandleRef jarg1, float jarg2);
    public static ComboBox_SetMaxDropDownHeightDelegate _ComboBox_SetMaxDropDownHeight;
    public static void ComboBox_SetMaxDropDownHeight(HandleRef jarg1, float jarg2)
    {
        _ComboBox_SetMaxDropDownHeight(jarg1, jarg2);
    }

    public delegate IntPtr ComboBox_GetSelectionBoxItemDelegate(HandleRef jarg1);
    public static ComboBox_GetSelectionBoxItemDelegate _ComboBox_GetSelectionBoxItem;
    public static IntPtr ComboBox_GetSelectionBoxItem(HandleRef jarg1)
    {
        IntPtr ret = _ComboBox_GetSelectionBoxItem(jarg1);

        return ret;
    }

    public delegate IntPtr ComboBox_GetSelectionBoxItemTemplateDelegate(HandleRef jarg1);
    public static ComboBox_GetSelectionBoxItemTemplateDelegate _ComboBox_GetSelectionBoxItemTemplate;
    public static IntPtr ComboBox_GetSelectionBoxItemTemplate(HandleRef jarg1)
    {
        IntPtr ret = _ComboBox_GetSelectionBoxItemTemplate(jarg1);

        return ret;
    }

    public delegate bool ComboBox_GetStaysOpenOnEditDelegate(HandleRef jarg1);
    public static ComboBox_GetStaysOpenOnEditDelegate _ComboBox_GetStaysOpenOnEdit;
    public static bool ComboBox_GetStaysOpenOnEdit(HandleRef jarg1)
    {
        bool ret = _ComboBox_GetStaysOpenOnEdit(jarg1);

        return ret;
    }

    public delegate void ComboBox_SetStaysOpenOnEditDelegate(HandleRef jarg1, bool jarg2);
    public static ComboBox_SetStaysOpenOnEditDelegate _ComboBox_SetStaysOpenOnEdit;
    public static void ComboBox_SetStaysOpenOnEdit(HandleRef jarg1, bool jarg2)
    {
        _ComboBox_SetStaysOpenOnEdit(jarg1, jarg2);
    }

    public delegate IntPtr ComboBox_GetTextDelegate(HandleRef jarg1);
    public static ComboBox_GetTextDelegate _ComboBox_GetText;
    public static IntPtr ComboBox_GetText(HandleRef jarg1)
    {
        IntPtr ret = _ComboBox_GetText(jarg1);

        return ret;
    }

    public delegate void ComboBox_SetTextDelegate(HandleRef jarg1, IntPtr jarg2);
    public static ComboBox_SetTextDelegate _ComboBox_SetText;
    public static void ComboBox_SetText(HandleRef jarg1, IntPtr jarg2)
    {
        _ComboBox_SetText(jarg1, jarg2);
    }

    public delegate void ComboBox_ItemClickedDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ComboBox_ItemClickedDelegate _ComboBox_ItemClicked;
    public static void ComboBox_ItemClicked(HandleRef jarg1, HandleRef jarg2)
    {
        _ComboBox_ItemClicked(jarg1, jarg2);
    }

    public delegate void ComboBox_ItemEnteredDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ComboBox_ItemEnteredDelegate _ComboBox_ItemEntered;
    public static void ComboBox_ItemEntered(HandleRef jarg1, HandleRef jarg2)
    {
        _ComboBox_ItemEntered(jarg1, jarg2);
    }

    public delegate IntPtr new_ListBoxItemDelegate();
    public static new_ListBoxItemDelegate _new_ListBoxItem;
    public static IntPtr new_ListBoxItem()
    {
        IntPtr ret = _new_ListBoxItem();

        return ret;
    }

    public delegate bool ListBoxItem_GetIsSelectedDelegate(HandleRef jarg1);
    public static ListBoxItem_GetIsSelectedDelegate _ListBoxItem_GetIsSelected;
    public static bool ListBoxItem_GetIsSelected(HandleRef jarg1)
    {
        bool ret = _ListBoxItem_GetIsSelected(jarg1);

        return ret;
    }

    public delegate void ListBoxItem_SetIsSelectedDelegate(HandleRef jarg1, bool jarg2);
    public static ListBoxItem_SetIsSelectedDelegate _ListBoxItem_SetIsSelected;
    public static void ListBoxItem_SetIsSelected(HandleRef jarg1, bool jarg2)
    {
        _ListBoxItem_SetIsSelected(jarg1, jarg2);
    }

    public delegate void delete_ListBoxItemDelegate(HandleRef jarg1);
    public static delete_ListBoxItemDelegate _delete_ListBoxItem;
    public static void delete_ListBoxItem(HandleRef jarg1)
    {
        _delete_ListBoxItem(jarg1);
    }

    public delegate IntPtr new_ComboBoxItemDelegate();
    public static new_ComboBoxItemDelegate _new_ComboBoxItem;
    public static IntPtr new_ComboBoxItem()
    {
        IntPtr ret = _new_ComboBoxItem();

        return ret;
    }

    public delegate bool ComboBoxItem_GetIsHighlightedDelegate(HandleRef jarg1);
    public static ComboBoxItem_GetIsHighlightedDelegate _ComboBoxItem_GetIsHighlighted;
    public static bool ComboBoxItem_GetIsHighlighted(HandleRef jarg1)
    {
        bool ret = _ComboBoxItem_GetIsHighlighted(jarg1);

        return ret;
    }

    public delegate void ComboBoxItem_SetHighlightedDelegate(HandleRef jarg1, bool jarg2);
    public static ComboBoxItem_SetHighlightedDelegate _ComboBoxItem_SetHighlighted;
    public static void ComboBoxItem_SetHighlighted(HandleRef jarg1, bool jarg2)
    {
        _ComboBoxItem_SetHighlighted(jarg1, jarg2);
    }

    public delegate void delete_ComboBoxItemDelegate(HandleRef jarg1);
    public static delete_ComboBoxItemDelegate _delete_ComboBoxItem;
    public static void delete_ComboBoxItem(HandleRef jarg1)
    {
        _delete_ComboBoxItem(jarg1);
    }

    public delegate void CanExecuteRoutedEventArgs_command_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static CanExecuteRoutedEventArgs_command_setDelegate _CanExecuteRoutedEventArgs_command_set;
    public static void CanExecuteRoutedEventArgs_command_set(HandleRef jarg1, HandleRef jarg2)
    {
        _CanExecuteRoutedEventArgs_command_set(jarg1, jarg2);
    }

    public delegate IntPtr CanExecuteRoutedEventArgs_command_getDelegate(HandleRef jarg1);
    public static CanExecuteRoutedEventArgs_command_getDelegate _CanExecuteRoutedEventArgs_command_get;
    public static IntPtr CanExecuteRoutedEventArgs_command_get(HandleRef jarg1)
    {
        IntPtr ret = _CanExecuteRoutedEventArgs_command_get(jarg1);

        return ret;
    }

    public delegate void CanExecuteRoutedEventArgs_parameter_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static CanExecuteRoutedEventArgs_parameter_setDelegate _CanExecuteRoutedEventArgs_parameter_set;
    public static void CanExecuteRoutedEventArgs_parameter_set(HandleRef jarg1, HandleRef jarg2)
    {
        _CanExecuteRoutedEventArgs_parameter_set(jarg1, jarg2);
    }

    public delegate IntPtr CanExecuteRoutedEventArgs_parameter_getDelegate(HandleRef jarg1);
    public static CanExecuteRoutedEventArgs_parameter_getDelegate _CanExecuteRoutedEventArgs_parameter_get;
    public static IntPtr CanExecuteRoutedEventArgs_parameter_get(HandleRef jarg1)
    {
        IntPtr ret = _CanExecuteRoutedEventArgs_parameter_get(jarg1);

        return ret;
    }

    public delegate void CanExecuteRoutedEventArgs_canExecute_setDelegate(HandleRef jarg1, bool jarg2);
    public static CanExecuteRoutedEventArgs_canExecute_setDelegate _CanExecuteRoutedEventArgs_canExecute_set;
    public static void CanExecuteRoutedEventArgs_canExecute_set(HandleRef jarg1, bool jarg2)
    {
        _CanExecuteRoutedEventArgs_canExecute_set(jarg1, jarg2);
    }

    public delegate bool CanExecuteRoutedEventArgs_canExecute_getDelegate(HandleRef jarg1);
    public static CanExecuteRoutedEventArgs_canExecute_getDelegate _CanExecuteRoutedEventArgs_canExecute_get;
    public static bool CanExecuteRoutedEventArgs_canExecute_get(HandleRef jarg1)
    {
        bool ret = _CanExecuteRoutedEventArgs_canExecute_get(jarg1);

        return ret;
    }

    public delegate void CanExecuteRoutedEventArgs_continueRouting_setDelegate(HandleRef jarg1, bool jarg2);
    public static CanExecuteRoutedEventArgs_continueRouting_setDelegate _CanExecuteRoutedEventArgs_continueRouting_set;
    public static void CanExecuteRoutedEventArgs_continueRouting_set(HandleRef jarg1, bool jarg2)
    {
        _CanExecuteRoutedEventArgs_continueRouting_set(jarg1, jarg2);
    }

    public delegate bool CanExecuteRoutedEventArgs_continueRouting_getDelegate(HandleRef jarg1);
    public static CanExecuteRoutedEventArgs_continueRouting_getDelegate _CanExecuteRoutedEventArgs_continueRouting_get;
    public static bool CanExecuteRoutedEventArgs_continueRouting_get(HandleRef jarg1)
    {
        bool ret = _CanExecuteRoutedEventArgs_continueRouting_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_CanExecuteRoutedEventArgsDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static new_CanExecuteRoutedEventArgsDelegate _new_CanExecuteRoutedEventArgs;
    public static IntPtr new_CanExecuteRoutedEventArgs(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        IntPtr ret = _new_CanExecuteRoutedEventArgs(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate void delete_CanExecuteRoutedEventArgsDelegate(HandleRef jarg1);
    public static delete_CanExecuteRoutedEventArgsDelegate _delete_CanExecuteRoutedEventArgs;
    public static void delete_CanExecuteRoutedEventArgs(HandleRef jarg1)
    {
        _delete_CanExecuteRoutedEventArgs(jarg1);
    }

    public delegate void ExecutedRoutedEventArgs_command_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ExecutedRoutedEventArgs_command_setDelegate _ExecutedRoutedEventArgs_command_set;
    public static void ExecutedRoutedEventArgs_command_set(HandleRef jarg1, HandleRef jarg2)
    {
        _ExecutedRoutedEventArgs_command_set(jarg1, jarg2);
    }

    public delegate IntPtr ExecutedRoutedEventArgs_command_getDelegate(HandleRef jarg1);
    public static ExecutedRoutedEventArgs_command_getDelegate _ExecutedRoutedEventArgs_command_get;
    public static IntPtr ExecutedRoutedEventArgs_command_get(HandleRef jarg1)
    {
        IntPtr ret = _ExecutedRoutedEventArgs_command_get(jarg1);

        return ret;
    }

    public delegate void ExecutedRoutedEventArgs_parameter_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ExecutedRoutedEventArgs_parameter_setDelegate _ExecutedRoutedEventArgs_parameter_set;
    public static void ExecutedRoutedEventArgs_parameter_set(HandleRef jarg1, HandleRef jarg2)
    {
        _ExecutedRoutedEventArgs_parameter_set(jarg1, jarg2);
    }

    public delegate IntPtr ExecutedRoutedEventArgs_parameter_getDelegate(HandleRef jarg1);
    public static ExecutedRoutedEventArgs_parameter_getDelegate _ExecutedRoutedEventArgs_parameter_get;
    public static IntPtr ExecutedRoutedEventArgs_parameter_get(HandleRef jarg1)
    {
        IntPtr ret = _ExecutedRoutedEventArgs_parameter_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_ExecutedRoutedEventArgsDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static new_ExecutedRoutedEventArgsDelegate _new_ExecutedRoutedEventArgs;
    public static IntPtr new_ExecutedRoutedEventArgs(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        IntPtr ret = _new_ExecutedRoutedEventArgs(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate void delete_ExecutedRoutedEventArgsDelegate(HandleRef jarg1);
    public static delete_ExecutedRoutedEventArgsDelegate _delete_ExecutedRoutedEventArgs;
    public static void delete_ExecutedRoutedEventArgs(HandleRef jarg1)
    {
        _delete_ExecutedRoutedEventArgs(jarg1);
    }

    public delegate void CommandManager_PreviewCanExecuteEvent_setDelegate(HandleRef jarg1);
    public static CommandManager_PreviewCanExecuteEvent_setDelegate _CommandManager_PreviewCanExecuteEvent_set;
    public static void CommandManager_PreviewCanExecuteEvent_set(HandleRef jarg1)
    {
        _CommandManager_PreviewCanExecuteEvent_set(jarg1);
    }

    public delegate IntPtr CommandManager_PreviewCanExecuteEvent_getDelegate();
    public static CommandManager_PreviewCanExecuteEvent_getDelegate _CommandManager_PreviewCanExecuteEvent_get;
    public static IntPtr CommandManager_PreviewCanExecuteEvent_get()
    {
        IntPtr ret = _CommandManager_PreviewCanExecuteEvent_get();

        return ret;
    }

    public delegate void CommandManager_CanExecuteEvent_setDelegate(HandleRef jarg1);
    public static CommandManager_CanExecuteEvent_setDelegate _CommandManager_CanExecuteEvent_set;
    public static void CommandManager_CanExecuteEvent_set(HandleRef jarg1)
    {
        _CommandManager_CanExecuteEvent_set(jarg1);
    }

    public delegate IntPtr CommandManager_CanExecuteEvent_getDelegate();
    public static CommandManager_CanExecuteEvent_getDelegate _CommandManager_CanExecuteEvent_get;
    public static IntPtr CommandManager_CanExecuteEvent_get()
    {
        IntPtr ret = _CommandManager_CanExecuteEvent_get();

        return ret;
    }

    public delegate void CommandManager_PreviewExecutedEvent_setDelegate(HandleRef jarg1);
    public static CommandManager_PreviewExecutedEvent_setDelegate _CommandManager_PreviewExecutedEvent_set;
    public static void CommandManager_PreviewExecutedEvent_set(HandleRef jarg1)
    {
        _CommandManager_PreviewExecutedEvent_set(jarg1);
    }

    public delegate IntPtr CommandManager_PreviewExecutedEvent_getDelegate();
    public static CommandManager_PreviewExecutedEvent_getDelegate _CommandManager_PreviewExecutedEvent_get;
    public static IntPtr CommandManager_PreviewExecutedEvent_get()
    {
        IntPtr ret = _CommandManager_PreviewExecutedEvent_get();

        return ret;
    }

    public delegate void CommandManager_ExecutedEvent_setDelegate(HandleRef jarg1);
    public static CommandManager_ExecutedEvent_setDelegate _CommandManager_ExecutedEvent_set;
    public static void CommandManager_ExecutedEvent_set(HandleRef jarg1)
    {
        _CommandManager_ExecutedEvent_set(jarg1);
    }

    public delegate IntPtr CommandManager_ExecutedEvent_getDelegate();
    public static CommandManager_ExecutedEvent_getDelegate _CommandManager_ExecutedEvent_get;
    public static IntPtr CommandManager_ExecutedEvent_get()
    {
        IntPtr ret = _CommandManager_ExecutedEvent_get();

        return ret;
    }

    public delegate void CommandManager_ProcessKeyboardInputDelegate(HandleRef jarg1, HandleRef jarg2);
    public static CommandManager_ProcessKeyboardInputDelegate _CommandManager_ProcessKeyboardInput;
    public static void CommandManager_ProcessKeyboardInput(HandleRef jarg1, HandleRef jarg2)
    {
        _CommandManager_ProcessKeyboardInput(jarg1, jarg2);
    }

    public delegate IntPtr new_CommandManagerDelegate();
    public static new_CommandManagerDelegate _new_CommandManager;
    public static IntPtr new_CommandManager()
    {
        IntPtr ret = _new_CommandManager();

        return ret;
    }

    public delegate void delete_CommandManagerDelegate(HandleRef jarg1);
    public static delete_CommandManagerDelegate _delete_CommandManager;
    public static void delete_CommandManager(HandleRef jarg1)
    {
        _delete_CommandManager(jarg1);
    }

    public delegate IntPtr new_CommandBinding__SWIG_0Delegate();
    public static new_CommandBinding__SWIG_0Delegate _new_CommandBinding__SWIG_0;
    public static IntPtr new_CommandBinding__SWIG_0()
    {
        IntPtr ret = _new_CommandBinding__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_CommandBinding__SWIG_1Delegate(HandleRef jarg1);
    public static new_CommandBinding__SWIG_1Delegate _new_CommandBinding__SWIG_1;
    public static IntPtr new_CommandBinding__SWIG_1(HandleRef jarg1)
    {
        IntPtr ret = _new_CommandBinding__SWIG_1(jarg1);

        return ret;
    }

    public delegate IntPtr new_CommandBinding__SWIG_2Delegate(HandleRef jarg1, HandleRef jarg2);
    public static new_CommandBinding__SWIG_2Delegate _new_CommandBinding__SWIG_2;
    public static IntPtr new_CommandBinding__SWIG_2(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_CommandBinding__SWIG_2(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_CommandBinding__SWIG_3Delegate(HandleRef jarg1, HandleRef jarg2);
    public static new_CommandBinding__SWIG_3Delegate _new_CommandBinding__SWIG_3;
    public static IntPtr new_CommandBinding__SWIG_3(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_CommandBinding__SWIG_3(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_CommandBinding__SWIG_4Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static new_CommandBinding__SWIG_4Delegate _new_CommandBinding__SWIG_4;
    public static IntPtr new_CommandBinding__SWIG_4(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        IntPtr ret = _new_CommandBinding__SWIG_4(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void delete_CommandBindingDelegate(HandleRef jarg1);
    public static delete_CommandBindingDelegate _delete_CommandBinding;
    public static void delete_CommandBinding(HandleRef jarg1)
    {
        _delete_CommandBinding(jarg1);
    }

    public delegate IntPtr CommandBinding_GetCommandDelegate(HandleRef jarg1);
    public static CommandBinding_GetCommandDelegate _CommandBinding_GetCommand;
    public static IntPtr CommandBinding_GetCommand(HandleRef jarg1)
    {
        IntPtr ret = _CommandBinding_GetCommand(jarg1);

        return ret;
    }

    public delegate void CommandBinding_SetCommandDelegate(HandleRef jarg1, HandleRef jarg2);
    public static CommandBinding_SetCommandDelegate _CommandBinding_SetCommand;
    public static void CommandBinding_SetCommand(HandleRef jarg1, HandleRef jarg2)
    {
        _CommandBinding_SetCommand(jarg1, jarg2);
    }

    public delegate IntPtr CommandBinding_PreviewCanExecuteDelegate(HandleRef jarg1);
    public static CommandBinding_PreviewCanExecuteDelegate _CommandBinding_PreviewCanExecute;
    public static IntPtr CommandBinding_PreviewCanExecute(HandleRef jarg1)
    {
        IntPtr ret = _CommandBinding_PreviewCanExecute(jarg1);

        return ret;
    }

    public delegate IntPtr CommandBinding_CanExecuteDelegate(HandleRef jarg1);
    public static CommandBinding_CanExecuteDelegate _CommandBinding_CanExecute;
    public static IntPtr CommandBinding_CanExecute(HandleRef jarg1)
    {
        IntPtr ret = _CommandBinding_CanExecute(jarg1);

        return ret;
    }

    public delegate IntPtr CommandBinding_PreviewExecutedDelegate(HandleRef jarg1);
    public static CommandBinding_PreviewExecutedDelegate _CommandBinding_PreviewExecuted;
    public static IntPtr CommandBinding_PreviewExecuted(HandleRef jarg1)
    {
        IntPtr ret = _CommandBinding_PreviewExecuted(jarg1);

        return ret;
    }

    public delegate IntPtr CommandBinding_ExecutedDelegate(HandleRef jarg1);
    public static CommandBinding_ExecutedDelegate _CommandBinding_Executed;
    public static IntPtr CommandBinding_Executed(HandleRef jarg1)
    {
        IntPtr ret = _CommandBinding_Executed(jarg1);

        return ret;
    }

    public delegate void CommandBinding_RaisePreviewCanExecuteDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static CommandBinding_RaisePreviewCanExecuteDelegate _CommandBinding_RaisePreviewCanExecute;
    public static void CommandBinding_RaisePreviewCanExecute(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _CommandBinding_RaisePreviewCanExecute(jarg1, jarg2, jarg3);
    }

    public delegate void CommandBinding_RaiseCanExecuteDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static CommandBinding_RaiseCanExecuteDelegate _CommandBinding_RaiseCanExecute;
    public static void CommandBinding_RaiseCanExecute(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _CommandBinding_RaiseCanExecute(jarg1, jarg2, jarg3);
    }

    public delegate void CommandBinding_RaisePreviewExecutedDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static CommandBinding_RaisePreviewExecutedDelegate _CommandBinding_RaisePreviewExecuted;
    public static void CommandBinding_RaisePreviewExecuted(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _CommandBinding_RaisePreviewExecuted(jarg1, jarg2, jarg3);
    }

    public delegate void CommandBinding_RaiseExecutedDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static CommandBinding_RaiseExecutedDelegate _CommandBinding_RaiseExecuted;
    public static void CommandBinding_RaiseExecuted(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _CommandBinding_RaiseExecuted(jarg1, jarg2, jarg3);
    }

    public delegate IntPtr new_CommandDataDelegate(HandleRef jarg1);
    public static new_CommandDataDelegate _new_CommandData;
    public static IntPtr new_CommandData(HandleRef jarg1)
    {
        IntPtr ret = _new_CommandData(jarg1);

        return ret;
    }

    public delegate void delete_CommandDataDelegate(HandleRef jarg1);
    public static delete_CommandDataDelegate _delete_CommandData;
    public static void delete_CommandData(HandleRef jarg1)
    {
        _delete_CommandData(jarg1);
    }

    public delegate IntPtr CommandData_FindCommandDelegate(HandleRef jarg1, IntPtr jarg2);
    public static CommandData_FindCommandDelegate _CommandData_FindCommand;
    public static IntPtr CommandData_FindCommand(HandleRef jarg1, IntPtr jarg2)
    {
        IntPtr ret = _CommandData_FindCommand(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr CommandData_EnumCommandsDelegate(HandleRef jarg1);
    public static CommandData_EnumCommandsDelegate _CommandData_EnumCommands;
    public static IntPtr CommandData_EnumCommands(HandleRef jarg1)
    {
        IntPtr ret = _CommandData_EnumCommands(jarg1);

        return ret;
    }

    public delegate void CommandData_RegisterCommandHandler__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static CommandData_RegisterCommandHandler__SWIG_0Delegate _CommandData_RegisterCommandHandler__SWIG_0;
    public static void CommandData_RegisterCommandHandler__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _CommandData_RegisterCommandHandler__SWIG_0(jarg1, jarg2, jarg3);
    }

    public delegate void CommandData_RegisterCommandHandler__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static CommandData_RegisterCommandHandler__SWIG_1Delegate _CommandData_RegisterCommandHandler__SWIG_1;
    public static void CommandData_RegisterCommandHandler__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        _CommandData_RegisterCommandHandler__SWIG_1(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate void CommandData_RegisterCommandHandler__SWIG_2Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);
    public static CommandData_RegisterCommandHandler__SWIG_2Delegate _CommandData_RegisterCommandHandler__SWIG_2;
    public static void CommandData_RegisterCommandHandler__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5)
    {
        _CommandData_RegisterCommandHandler__SWIG_2(jarg1, jarg2, jarg3, jarg4, jarg5);
    }

    public delegate void CommandData_RegisterCommandHandler__SWIG_3Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static CommandData_RegisterCommandHandler__SWIG_3Delegate _CommandData_RegisterCommandHandler__SWIG_3;
    public static void CommandData_RegisterCommandHandler__SWIG_3(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        _CommandData_RegisterCommandHandler__SWIG_3(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate void CommandData_RegisterCommandHandler__SWIG_4Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);
    public static CommandData_RegisterCommandHandler__SWIG_4Delegate _CommandData_RegisterCommandHandler__SWIG_4;
    public static void CommandData_RegisterCommandHandler__SWIG_4(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5)
    {
        _CommandData_RegisterCommandHandler__SWIG_4(jarg1, jarg2, jarg3, jarg4, jarg5);
    }

    public delegate void CommandData_RegisterCommandHandler__SWIG_5Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6);
    public static CommandData_RegisterCommandHandler__SWIG_5Delegate _CommandData_RegisterCommandHandler__SWIG_5;
    public static void CommandData_RegisterCommandHandler__SWIG_5(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6)
    {
        _CommandData_RegisterCommandHandler__SWIG_5(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6);
    }

    public delegate IntPtr CommandData_GetCommandBindingsDelegate(HandleRef jarg1);
    public static CommandData_GetCommandBindingsDelegate _CommandData_GetCommandBindings;
    public static IntPtr CommandData_GetCommandBindings(HandleRef jarg1)
    {
        IntPtr ret = _CommandData_GetCommandBindings(jarg1);

        return ret;
    }

    public delegate IntPtr CommandData_GetInputBindingsDelegate(HandleRef jarg1);
    public static CommandData_GetInputBindingsDelegate _CommandData_GetInputBindings;
    public static IntPtr CommandData_GetInputBindings(HandleRef jarg1)
    {
        IntPtr ret = _CommandData_GetInputBindings(jarg1);

        return ret;
    }

    public delegate void delete_UITransformDelegate(HandleRef jarg1);
    public static delete_UITransformDelegate _delete_UITransform;
    public static void delete_UITransform(HandleRef jarg1)
    {
        _delete_UITransform(jarg1);
    }

    public delegate IntPtr UITransform_GetIdentityDelegate();
    public static UITransform_GetIdentityDelegate _UITransform_GetIdentity;
    public static IntPtr UITransform_GetIdentity()
    {
        IntPtr ret = _UITransform_GetIdentity();

        return ret;
    }

    public delegate IntPtr UITransform_GetTransformDelegate(HandleRef jarg1);
    public static UITransform_GetTransformDelegate _UITransform_GetTransform;
    public static IntPtr UITransform_GetTransform(HandleRef jarg1)
    {
        IntPtr ret = _UITransform_GetTransform(jarg1);

        return ret;
    }

    public delegate IntPtr new_CompositeTransformDelegate();
    public static new_CompositeTransformDelegate _new_CompositeTransform;
    public static IntPtr new_CompositeTransform()
    {
        IntPtr ret = _new_CompositeTransform();

        return ret;
    }

    public delegate float CompositeTransform_GetCenterXDelegate(HandleRef jarg1);
    public static CompositeTransform_GetCenterXDelegate _CompositeTransform_GetCenterX;
    public static float CompositeTransform_GetCenterX(HandleRef jarg1)
    {
        float ret = _CompositeTransform_GetCenterX(jarg1);

        return ret;
    }

    public delegate void CompositeTransform_SetCenterXDelegate(HandleRef jarg1, float jarg2);
    public static CompositeTransform_SetCenterXDelegate _CompositeTransform_SetCenterX;
    public static void CompositeTransform_SetCenterX(HandleRef jarg1, float jarg2)
    {
        _CompositeTransform_SetCenterX(jarg1, jarg2);
    }

    public delegate float CompositeTransform_GetCenterYDelegate(HandleRef jarg1);
    public static CompositeTransform_GetCenterYDelegate _CompositeTransform_GetCenterY;
    public static float CompositeTransform_GetCenterY(HandleRef jarg1)
    {
        float ret = _CompositeTransform_GetCenterY(jarg1);

        return ret;
    }

    public delegate void CompositeTransform_SetCenterYDelegate(HandleRef jarg1, float jarg2);
    public static CompositeTransform_SetCenterYDelegate _CompositeTransform_SetCenterY;
    public static void CompositeTransform_SetCenterY(HandleRef jarg1, float jarg2)
    {
        _CompositeTransform_SetCenterY(jarg1, jarg2);
    }

    public delegate float CompositeTransform_GetRotationDelegate(HandleRef jarg1);
    public static CompositeTransform_GetRotationDelegate _CompositeTransform_GetRotation;
    public static float CompositeTransform_GetRotation(HandleRef jarg1)
    {
        float ret = _CompositeTransform_GetRotation(jarg1);

        return ret;
    }

    public delegate void CompositeTransform_SetRotationDelegate(HandleRef jarg1, float jarg2);
    public static CompositeTransform_SetRotationDelegate _CompositeTransform_SetRotation;
    public static void CompositeTransform_SetRotation(HandleRef jarg1, float jarg2)
    {
        _CompositeTransform_SetRotation(jarg1, jarg2);
    }

    public delegate float CompositeTransform_GetScaleXDelegate(HandleRef jarg1);
    public static CompositeTransform_GetScaleXDelegate _CompositeTransform_GetScaleX;
    public static float CompositeTransform_GetScaleX(HandleRef jarg1)
    {
        float ret = _CompositeTransform_GetScaleX(jarg1);

        return ret;
    }

    public delegate void CompositeTransform_SetScaleXDelegate(HandleRef jarg1, float jarg2);
    public static CompositeTransform_SetScaleXDelegate _CompositeTransform_SetScaleX;
    public static void CompositeTransform_SetScaleX(HandleRef jarg1, float jarg2)
    {
        _CompositeTransform_SetScaleX(jarg1, jarg2);
    }

    public delegate float CompositeTransform_GetScaleYDelegate(HandleRef jarg1);
    public static CompositeTransform_GetScaleYDelegate _CompositeTransform_GetScaleY;
    public static float CompositeTransform_GetScaleY(HandleRef jarg1)
    {
        float ret = _CompositeTransform_GetScaleY(jarg1);

        return ret;
    }

    public delegate void CompositeTransform_SetScaleYDelegate(HandleRef jarg1, float jarg2);
    public static CompositeTransform_SetScaleYDelegate _CompositeTransform_SetScaleY;
    public static void CompositeTransform_SetScaleY(HandleRef jarg1, float jarg2)
    {
        _CompositeTransform_SetScaleY(jarg1, jarg2);
    }

    public delegate float CompositeTransform_GetSkewXDelegate(HandleRef jarg1);
    public static CompositeTransform_GetSkewXDelegate _CompositeTransform_GetSkewX;
    public static float CompositeTransform_GetSkewX(HandleRef jarg1)
    {
        float ret = _CompositeTransform_GetSkewX(jarg1);

        return ret;
    }

    public delegate void CompositeTransform_SetSkewXDelegate(HandleRef jarg1, float jarg2);
    public static CompositeTransform_SetSkewXDelegate _CompositeTransform_SetSkewX;
    public static void CompositeTransform_SetSkewX(HandleRef jarg1, float jarg2)
    {
        _CompositeTransform_SetSkewX(jarg1, jarg2);
    }

    public delegate float CompositeTransform_GetSkewYDelegate(HandleRef jarg1);
    public static CompositeTransform_GetSkewYDelegate _CompositeTransform_GetSkewY;
    public static float CompositeTransform_GetSkewY(HandleRef jarg1)
    {
        float ret = _CompositeTransform_GetSkewY(jarg1);

        return ret;
    }

    public delegate void CompositeTransform_SetSkewYDelegate(HandleRef jarg1, float jarg2);
    public static CompositeTransform_SetSkewYDelegate _CompositeTransform_SetSkewY;
    public static void CompositeTransform_SetSkewY(HandleRef jarg1, float jarg2)
    {
        _CompositeTransform_SetSkewY(jarg1, jarg2);
    }

    public delegate float CompositeTransform_GetTranslateXDelegate(HandleRef jarg1);
    public static CompositeTransform_GetTranslateXDelegate _CompositeTransform_GetTranslateX;
    public static float CompositeTransform_GetTranslateX(HandleRef jarg1)
    {
        float ret = _CompositeTransform_GetTranslateX(jarg1);

        return ret;
    }

    public delegate void CompositeTransform_SetTranslateXDelegate(HandleRef jarg1, float jarg2);
    public static CompositeTransform_SetTranslateXDelegate _CompositeTransform_SetTranslateX;
    public static void CompositeTransform_SetTranslateX(HandleRef jarg1, float jarg2)
    {
        _CompositeTransform_SetTranslateX(jarg1, jarg2);
    }

    public delegate float CompositeTransform_GetTranslateYDelegate(HandleRef jarg1);
    public static CompositeTransform_GetTranslateYDelegate _CompositeTransform_GetTranslateY;
    public static float CompositeTransform_GetTranslateY(HandleRef jarg1)
    {
        float ret = _CompositeTransform_GetTranslateY(jarg1);

        return ret;
    }

    public delegate void CompositeTransform_SetTranslateYDelegate(HandleRef jarg1, float jarg2);
    public static CompositeTransform_SetTranslateYDelegate _CompositeTransform_SetTranslateY;
    public static void CompositeTransform_SetTranslateY(HandleRef jarg1, float jarg2)
    {
        _CompositeTransform_SetTranslateY(jarg1, jarg2);
    }

    public delegate IntPtr CompositeTransform_GetTransformDelegate(HandleRef jarg1);
    public static CompositeTransform_GetTransformDelegate _CompositeTransform_GetTransform;
    public static IntPtr CompositeTransform_GetTransform(HandleRef jarg1)
    {
        IntPtr ret = _CompositeTransform_GetTransform(jarg1);

        return ret;
    }

    public delegate void CompositeTransform_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static CompositeTransform_CreateRenderProxyDelegate _CompositeTransform_CreateRenderProxy;
    public static void CompositeTransform_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _CompositeTransform_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void CompositeTransform_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static CompositeTransform_UpdateRenderProxyDelegate _CompositeTransform_UpdateRenderProxy;
    public static void CompositeTransform_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _CompositeTransform_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void CompositeTransform_UnregisterRendererDelegate(HandleRef jarg1, HandleRef jarg2);
    public static CompositeTransform_UnregisterRendererDelegate _CompositeTransform_UnregisterRenderer;
    public static void CompositeTransform_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2)
    {
        _CompositeTransform_UnregisterRenderer(jarg1, jarg2);
    }

    public delegate void delete_CompositeTransformDelegate(HandleRef jarg1);
    public static delete_CompositeTransformDelegate _delete_CompositeTransform;
    public static void delete_CompositeTransform(HandleRef jarg1)
    {
        _delete_CompositeTransform(jarg1);
    }

    public delegate IntPtr new_ConditionDelegate();
    public static new_ConditionDelegate _new_Condition;
    public static IntPtr new_Condition()
    {
        IntPtr ret = _new_Condition();

        return ret;
    }

    public delegate IntPtr Condition_GetPropertyDelegate(HandleRef jarg1);
    public static Condition_GetPropertyDelegate _Condition_GetProperty;
    public static IntPtr Condition_GetProperty(HandleRef jarg1)
    {
        IntPtr ret = _Condition_GetProperty(jarg1);

        return ret;
    }

    public delegate void Condition_SetPropertyDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Condition_SetPropertyDelegate _Condition_SetProperty;
    public static void Condition_SetProperty(HandleRef jarg1, HandleRef jarg2)
    {
        _Condition_SetProperty(jarg1, jarg2);
    }

    public delegate IntPtr Condition_GetSourceNameDelegate(HandleRef jarg1);
    public static Condition_GetSourceNameDelegate _Condition_GetSourceName;
    public static IntPtr Condition_GetSourceName(HandleRef jarg1)
    {
        IntPtr ret = _Condition_GetSourceName(jarg1);

        return ret;
    }

    public delegate void Condition_SetSourceNameDelegate(HandleRef jarg1, IntPtr jarg2);
    public static Condition_SetSourceNameDelegate _Condition_SetSourceName;
    public static void Condition_SetSourceName(HandleRef jarg1, IntPtr jarg2)
    {
        _Condition_SetSourceName(jarg1, jarg2);
    }

    public delegate IntPtr Condition_GetValueDelegate(HandleRef jarg1);
    public static Condition_GetValueDelegate _Condition_GetValue;
    public static IntPtr Condition_GetValue(HandleRef jarg1)
    {
        IntPtr ret = _Condition_GetValue(jarg1);

        return ret;
    }

    public delegate void Condition_SetValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Condition_SetValueDelegate _Condition_SetValue;
    public static void Condition_SetValue(HandleRef jarg1, HandleRef jarg2)
    {
        _Condition_SetValue(jarg1, jarg2);
    }

    public delegate bool Condition_IsInitializedDelegate(HandleRef jarg1);
    public static Condition_IsInitializedDelegate _Condition_IsInitialized;
    public static bool Condition_IsInitialized(HandleRef jarg1)
    {
        bool ret = _Condition_IsInitialized(jarg1);

        return ret;
    }

    public delegate void Condition_InitDelegate(HandleRef jarg1);
    public static Condition_InitDelegate _Condition_Init;
    public static void Condition_Init(HandleRef jarg1)
    {
        _Condition_Init(jarg1);
    }

    public delegate void delete_ConditionDelegate(HandleRef jarg1);
    public static delete_ConditionDelegate _delete_Condition;
    public static void delete_Condition(HandleRef jarg1)
    {
        _delete_Condition(jarg1);
    }

    public delegate IntPtr new_ContentPresenterDelegate();
    public static new_ContentPresenterDelegate _new_ContentPresenter;
    public static IntPtr new_ContentPresenter()
    {
        IntPtr ret = _new_ContentPresenter();

        return ret;
    }

    public delegate void delete_ContentPresenterDelegate(HandleRef jarg1);
    public static delete_ContentPresenterDelegate _delete_ContentPresenter;
    public static void delete_ContentPresenter(HandleRef jarg1)
    {
        _delete_ContentPresenter(jarg1);
    }

    public delegate IntPtr ContentPresenter_GetContentDelegate(HandleRef jarg1);
    public static ContentPresenter_GetContentDelegate _ContentPresenter_GetContent;
    public static IntPtr ContentPresenter_GetContent(HandleRef jarg1)
    {
        IntPtr ret = _ContentPresenter_GetContent(jarg1);

        return ret;
    }

    public delegate void ContentPresenter_SetContent__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2);
    public static ContentPresenter_SetContent__SWIG_0Delegate _ContentPresenter_SetContent__SWIG_0;
    public static void ContentPresenter_SetContent__SWIG_0(HandleRef jarg1, HandleRef jarg2)
    {
        _ContentPresenter_SetContent__SWIG_0(jarg1, jarg2);
    }

    public delegate void ContentPresenter_SetContent__SWIG_1Delegate(HandleRef jarg1, string jarg2);
    public static ContentPresenter_SetContent__SWIG_1Delegate _ContentPresenter_SetContent__SWIG_1;
    public static void ContentPresenter_SetContent__SWIG_1(HandleRef jarg1, string jarg2)
    {
        _ContentPresenter_SetContent__SWIG_1(jarg1, jarg2);
    }

    public delegate IntPtr ContentPresenter_GetContentSourceDelegate(HandleRef jarg1);
    public static ContentPresenter_GetContentSourceDelegate _ContentPresenter_GetContentSource;
    public static IntPtr ContentPresenter_GetContentSource(HandleRef jarg1)
    {
        IntPtr ret = _ContentPresenter_GetContentSource(jarg1);

        return ret;
    }

    public delegate void ContentPresenter_SetContentSourceDelegate(HandleRef jarg1, IntPtr jarg2);
    public static ContentPresenter_SetContentSourceDelegate _ContentPresenter_SetContentSource;
    public static void ContentPresenter_SetContentSource(HandleRef jarg1, IntPtr jarg2)
    {
        _ContentPresenter_SetContentSource(jarg1, jarg2);
    }

    public delegate IntPtr ContentPresenter_GetContentTemplateDelegate(HandleRef jarg1);
    public static ContentPresenter_GetContentTemplateDelegate _ContentPresenter_GetContentTemplate;
    public static IntPtr ContentPresenter_GetContentTemplate(HandleRef jarg1)
    {
        IntPtr ret = _ContentPresenter_GetContentTemplate(jarg1);

        return ret;
    }

    public delegate void ContentPresenter_SetContentTemplateDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ContentPresenter_SetContentTemplateDelegate _ContentPresenter_SetContentTemplate;
    public static void ContentPresenter_SetContentTemplate(HandleRef jarg1, HandleRef jarg2)
    {
        _ContentPresenter_SetContentTemplate(jarg1, jarg2);
    }

    public delegate IntPtr ContentPresenter_GetContentTemplateSelectorDelegate(HandleRef jarg1);
    public static ContentPresenter_GetContentTemplateSelectorDelegate _ContentPresenter_GetContentTemplateSelector;
    public static IntPtr ContentPresenter_GetContentTemplateSelector(HandleRef jarg1)
    {
        IntPtr ret = _ContentPresenter_GetContentTemplateSelector(jarg1);

        return ret;
    }

    public delegate void ContentPresenter_SetContentTemplateSelectorDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ContentPresenter_SetContentTemplateSelectorDelegate _ContentPresenter_SetContentTemplateSelector;
    public static void ContentPresenter_SetContentTemplateSelector(HandleRef jarg1, HandleRef jarg2)
    {
        _ContentPresenter_SetContentTemplateSelector(jarg1, jarg2);
    }

    public delegate bool ContentPresenter_GetRecognizesAccessKeyDelegate(HandleRef jarg1);
    public static ContentPresenter_GetRecognizesAccessKeyDelegate _ContentPresenter_GetRecognizesAccessKey;
    public static bool ContentPresenter_GetRecognizesAccessKey(HandleRef jarg1)
    {
        bool ret = _ContentPresenter_GetRecognizesAccessKey(jarg1);

        return ret;
    }

    public delegate void ContentPresenter_SetRecognizesAccessKeyDelegate(HandleRef jarg1, bool jarg2);
    public static ContentPresenter_SetRecognizesAccessKeyDelegate _ContentPresenter_SetRecognizesAccessKey;
    public static void ContentPresenter_SetRecognizesAccessKey(HandleRef jarg1, bool jarg2)
    {
        _ContentPresenter_SetRecognizesAccessKey(jarg1, jarg2);
    }

    public delegate IntPtr new_ContextMenuDelegate();
    public static new_ContextMenuDelegate _new_ContextMenu;
    public static IntPtr new_ContextMenu()
    {
        IntPtr ret = _new_ContextMenu();

        return ret;
    }

    public delegate IntPtr ContextMenu_GetCustomPopupPlacementCallbackDelegate(HandleRef jarg1);
    public static ContextMenu_GetCustomPopupPlacementCallbackDelegate _ContextMenu_GetCustomPopupPlacementCallback;
    public static IntPtr ContextMenu_GetCustomPopupPlacementCallback(HandleRef jarg1)
    {
        IntPtr ret = _ContextMenu_GetCustomPopupPlacementCallback(jarg1);

        return ret;
    }

    public delegate void ContextMenu_SetCustomPopupPlacementCallbackDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ContextMenu_SetCustomPopupPlacementCallbackDelegate _ContextMenu_SetCustomPopupPlacementCallback;
    public static void ContextMenu_SetCustomPopupPlacementCallback(HandleRef jarg1, HandleRef jarg2)
    {
        _ContextMenu_SetCustomPopupPlacementCallback(jarg1, jarg2);
    }

    public delegate bool ContextMenu_GetHasDropShadowDelegate(HandleRef jarg1);
    public static ContextMenu_GetHasDropShadowDelegate _ContextMenu_GetHasDropShadow;
    public static bool ContextMenu_GetHasDropShadow(HandleRef jarg1)
    {
        bool ret = _ContextMenu_GetHasDropShadow(jarg1);

        return ret;
    }

    public delegate void ContextMenu_SetHasDropShadowDelegate(HandleRef jarg1, bool jarg2);
    public static ContextMenu_SetHasDropShadowDelegate _ContextMenu_SetHasDropShadow;
    public static void ContextMenu_SetHasDropShadow(HandleRef jarg1, bool jarg2)
    {
        _ContextMenu_SetHasDropShadow(jarg1, jarg2);
    }

    public delegate float ContextMenu_GetHorizontalOffsetDelegate(HandleRef jarg1);
    public static ContextMenu_GetHorizontalOffsetDelegate _ContextMenu_GetHorizontalOffset;
    public static float ContextMenu_GetHorizontalOffset(HandleRef jarg1)
    {
        float ret = _ContextMenu_GetHorizontalOffset(jarg1);

        return ret;
    }

    public delegate void ContextMenu_SetHorizontalOffsetDelegate(HandleRef jarg1, float jarg2);
    public static ContextMenu_SetHorizontalOffsetDelegate _ContextMenu_SetHorizontalOffset;
    public static void ContextMenu_SetHorizontalOffset(HandleRef jarg1, float jarg2)
    {
        _ContextMenu_SetHorizontalOffset(jarg1, jarg2);
    }

    public delegate bool ContextMenu_GetIsOpenDelegate(HandleRef jarg1);
    public static ContextMenu_GetIsOpenDelegate _ContextMenu_GetIsOpen;
    public static bool ContextMenu_GetIsOpen(HandleRef jarg1)
    {
        bool ret = _ContextMenu_GetIsOpen(jarg1);

        return ret;
    }

    public delegate void ContextMenu_SetIsOpenDelegate(HandleRef jarg1, bool jarg2);
    public static ContextMenu_SetIsOpenDelegate _ContextMenu_SetIsOpen;
    public static void ContextMenu_SetIsOpen(HandleRef jarg1, bool jarg2)
    {
        _ContextMenu_SetIsOpen(jarg1, jarg2);
    }

    public delegate int ContextMenu_GetPlacementDelegate(HandleRef jarg1);
    public static ContextMenu_GetPlacementDelegate _ContextMenu_GetPlacement;
    public static int ContextMenu_GetPlacement(HandleRef jarg1)
    {
        int ret = _ContextMenu_GetPlacement(jarg1);

        return ret;
    }

    public delegate void ContextMenu_SetPlacementDelegate(HandleRef jarg1, int jarg2);
    public static ContextMenu_SetPlacementDelegate _ContextMenu_SetPlacement;
    public static void ContextMenu_SetPlacement(HandleRef jarg1, int jarg2)
    {
        _ContextMenu_SetPlacement(jarg1, jarg2);
    }

    public delegate IntPtr ContextMenu_GetPlacementRectangleDelegate(HandleRef jarg1);
    public static ContextMenu_GetPlacementRectangleDelegate _ContextMenu_GetPlacementRectangle;
    public static IntPtr ContextMenu_GetPlacementRectangle(HandleRef jarg1)
    {
        IntPtr ret = _ContextMenu_GetPlacementRectangle(jarg1);

        return ret;
    }

    public delegate void ContextMenu_SetPlacementRectangleDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ContextMenu_SetPlacementRectangleDelegate _ContextMenu_SetPlacementRectangle;
    public static void ContextMenu_SetPlacementRectangle(HandleRef jarg1, HandleRef jarg2)
    {
        _ContextMenu_SetPlacementRectangle(jarg1, jarg2);
    }

    public delegate IntPtr ContextMenu_GetPlacementTargetDelegate(HandleRef jarg1);
    public static ContextMenu_GetPlacementTargetDelegate _ContextMenu_GetPlacementTarget;
    public static IntPtr ContextMenu_GetPlacementTarget(HandleRef jarg1)
    {
        IntPtr ret = _ContextMenu_GetPlacementTarget(jarg1);

        return ret;
    }

    public delegate void ContextMenu_SetPlacementTargetDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ContextMenu_SetPlacementTargetDelegate _ContextMenu_SetPlacementTarget;
    public static void ContextMenu_SetPlacementTarget(HandleRef jarg1, HandleRef jarg2)
    {
        _ContextMenu_SetPlacementTarget(jarg1, jarg2);
    }

    public delegate bool ContextMenu_GetStaysOpenDelegate(HandleRef jarg1);
    public static ContextMenu_GetStaysOpenDelegate _ContextMenu_GetStaysOpen;
    public static bool ContextMenu_GetStaysOpen(HandleRef jarg1)
    {
        bool ret = _ContextMenu_GetStaysOpen(jarg1);

        return ret;
    }

    public delegate void ContextMenu_SetStaysOpenDelegate(HandleRef jarg1, bool jarg2);
    public static ContextMenu_SetStaysOpenDelegate _ContextMenu_SetStaysOpen;
    public static void ContextMenu_SetStaysOpen(HandleRef jarg1, bool jarg2)
    {
        _ContextMenu_SetStaysOpen(jarg1, jarg2);
    }

    public delegate float ContextMenu_GetVerticalOffsetDelegate(HandleRef jarg1);
    public static ContextMenu_GetVerticalOffsetDelegate _ContextMenu_GetVerticalOffset;
    public static float ContextMenu_GetVerticalOffset(HandleRef jarg1)
    {
        float ret = _ContextMenu_GetVerticalOffset(jarg1);

        return ret;
    }

    public delegate void ContextMenu_SetVerticalOffsetDelegate(HandleRef jarg1, float jarg2);
    public static ContextMenu_SetVerticalOffsetDelegate _ContextMenu_SetVerticalOffset;
    public static void ContextMenu_SetVerticalOffset(HandleRef jarg1, float jarg2)
    {
        _ContextMenu_SetVerticalOffset(jarg1, jarg2);
    }

    public delegate IntPtr ContextMenu_GetPopupDelegate(HandleRef jarg1);
    public static ContextMenu_GetPopupDelegate _ContextMenu_GetPopup;
    public static IntPtr ContextMenu_GetPopup(HandleRef jarg1)
    {
        IntPtr ret = _ContextMenu_GetPopup(jarg1);

        return ret;
    }

    public delegate void delete_ContextMenuDelegate(HandleRef jarg1);
    public static delete_ContextMenuDelegate _delete_ContextMenu;
    public static void delete_ContextMenu(HandleRef jarg1)
    {
        _delete_ContextMenu(jarg1);
    }

    public delegate void ContextMenuService_ContextMenuClosingEvent_setDelegate(HandleRef jarg1);
    public static ContextMenuService_ContextMenuClosingEvent_setDelegate _ContextMenuService_ContextMenuClosingEvent_set;
    public static void ContextMenuService_ContextMenuClosingEvent_set(HandleRef jarg1)
    {
        _ContextMenuService_ContextMenuClosingEvent_set(jarg1);
    }

    public delegate IntPtr ContextMenuService_ContextMenuClosingEvent_getDelegate();
    public static ContextMenuService_ContextMenuClosingEvent_getDelegate _ContextMenuService_ContextMenuClosingEvent_get;
    public static IntPtr ContextMenuService_ContextMenuClosingEvent_get()
    {
        IntPtr ret = _ContextMenuService_ContextMenuClosingEvent_get();

        return ret;
    }

    public delegate void ContextMenuService_ContextMenuOpeningEvent_setDelegate(HandleRef jarg1);
    public static ContextMenuService_ContextMenuOpeningEvent_setDelegate _ContextMenuService_ContextMenuOpeningEvent_set;
    public static void ContextMenuService_ContextMenuOpeningEvent_set(HandleRef jarg1)
    {
        _ContextMenuService_ContextMenuOpeningEvent_set(jarg1);
    }

    public delegate IntPtr ContextMenuService_ContextMenuOpeningEvent_getDelegate();
    public static ContextMenuService_ContextMenuOpeningEvent_getDelegate _ContextMenuService_ContextMenuOpeningEvent_get;
    public static IntPtr ContextMenuService_ContextMenuOpeningEvent_get()
    {
        IntPtr ret = _ContextMenuService_ContextMenuOpeningEvent_get();

        return ret;
    }

    public delegate IntPtr ContextMenuService_GetContextMenuDelegate(HandleRef jarg1);
    public static ContextMenuService_GetContextMenuDelegate _ContextMenuService_GetContextMenu;
    public static IntPtr ContextMenuService_GetContextMenu(HandleRef jarg1)
    {
        IntPtr ret = _ContextMenuService_GetContextMenu(jarg1);

        return ret;
    }

    public delegate void ContextMenuService_SetContextMenuDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ContextMenuService_SetContextMenuDelegate _ContextMenuService_SetContextMenu;
    public static void ContextMenuService_SetContextMenu(HandleRef jarg1, HandleRef jarg2)
    {
        _ContextMenuService_SetContextMenu(jarg1, jarg2);
    }

    public delegate bool ContextMenuService_GetHasDropShadowDelegate(HandleRef jarg1);
    public static ContextMenuService_GetHasDropShadowDelegate _ContextMenuService_GetHasDropShadow;
    public static bool ContextMenuService_GetHasDropShadow(HandleRef jarg1)
    {
        bool ret = _ContextMenuService_GetHasDropShadow(jarg1);

        return ret;
    }

    public delegate void ContextMenuService_SetHasDropShadowDelegate(HandleRef jarg1, bool jarg2);
    public static ContextMenuService_SetHasDropShadowDelegate _ContextMenuService_SetHasDropShadow;
    public static void ContextMenuService_SetHasDropShadow(HandleRef jarg1, bool jarg2)
    {
        _ContextMenuService_SetHasDropShadow(jarg1, jarg2);
    }

    public delegate float ContextMenuService_GetHorizontalOffsetDelegate(HandleRef jarg1);
    public static ContextMenuService_GetHorizontalOffsetDelegate _ContextMenuService_GetHorizontalOffset;
    public static float ContextMenuService_GetHorizontalOffset(HandleRef jarg1)
    {
        float ret = _ContextMenuService_GetHorizontalOffset(jarg1);

        return ret;
    }

    public delegate void ContextMenuService_SetHorizontalOffsetDelegate(HandleRef jarg1, float jarg2);
    public static ContextMenuService_SetHorizontalOffsetDelegate _ContextMenuService_SetHorizontalOffset;
    public static void ContextMenuService_SetHorizontalOffset(HandleRef jarg1, float jarg2)
    {
        _ContextMenuService_SetHorizontalOffset(jarg1, jarg2);
    }

    public delegate bool ContextMenuService_GetIsEnabledDelegate(HandleRef jarg1);
    public static ContextMenuService_GetIsEnabledDelegate _ContextMenuService_GetIsEnabled;
    public static bool ContextMenuService_GetIsEnabled(HandleRef jarg1)
    {
        bool ret = _ContextMenuService_GetIsEnabled(jarg1);

        return ret;
    }

    public delegate void ContextMenuService_SetIsEnabledDelegate(HandleRef jarg1, bool jarg2);
    public static ContextMenuService_SetIsEnabledDelegate _ContextMenuService_SetIsEnabled;
    public static void ContextMenuService_SetIsEnabled(HandleRef jarg1, bool jarg2)
    {
        _ContextMenuService_SetIsEnabled(jarg1, jarg2);
    }

    public delegate int ContextMenuService_GetPlacementDelegate(HandleRef jarg1);
    public static ContextMenuService_GetPlacementDelegate _ContextMenuService_GetPlacement;
    public static int ContextMenuService_GetPlacement(HandleRef jarg1)
    {
        int ret = _ContextMenuService_GetPlacement(jarg1);

        return ret;
    }

    public delegate void ContextMenuService_SetPlacementDelegate(HandleRef jarg1, int jarg2);
    public static ContextMenuService_SetPlacementDelegate _ContextMenuService_SetPlacement;
    public static void ContextMenuService_SetPlacement(HandleRef jarg1, int jarg2)
    {
        _ContextMenuService_SetPlacement(jarg1, jarg2);
    }

    public delegate IntPtr ContextMenuService_GetPlacementRectangleDelegate(HandleRef jarg1);
    public static ContextMenuService_GetPlacementRectangleDelegate _ContextMenuService_GetPlacementRectangle;
    public static IntPtr ContextMenuService_GetPlacementRectangle(HandleRef jarg1)
    {
        IntPtr ret = _ContextMenuService_GetPlacementRectangle(jarg1);

        return ret;
    }

    public delegate void ContextMenuService_SetPlacementRectangleDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ContextMenuService_SetPlacementRectangleDelegate _ContextMenuService_SetPlacementRectangle;
    public static void ContextMenuService_SetPlacementRectangle(HandleRef jarg1, HandleRef jarg2)
    {
        _ContextMenuService_SetPlacementRectangle(jarg1, jarg2);
    }

    public delegate IntPtr ContextMenuService_GetPlacementTargetDelegate(HandleRef jarg1);
    public static ContextMenuService_GetPlacementTargetDelegate _ContextMenuService_GetPlacementTarget;
    public static IntPtr ContextMenuService_GetPlacementTarget(HandleRef jarg1)
    {
        IntPtr ret = _ContextMenuService_GetPlacementTarget(jarg1);

        return ret;
    }

    public delegate void ContextMenuService_SetPlacementTargetDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ContextMenuService_SetPlacementTargetDelegate _ContextMenuService_SetPlacementTarget;
    public static void ContextMenuService_SetPlacementTarget(HandleRef jarg1, HandleRef jarg2)
    {
        _ContextMenuService_SetPlacementTarget(jarg1, jarg2);
    }

    public delegate bool ContextMenuService_GetShowOnDisabledDelegate(HandleRef jarg1);
    public static ContextMenuService_GetShowOnDisabledDelegate _ContextMenuService_GetShowOnDisabled;
    public static bool ContextMenuService_GetShowOnDisabled(HandleRef jarg1)
    {
        bool ret = _ContextMenuService_GetShowOnDisabled(jarg1);

        return ret;
    }

    public delegate void ContextMenuService_SetShowOnDisabledDelegate(HandleRef jarg1, bool jarg2);
    public static ContextMenuService_SetShowOnDisabledDelegate _ContextMenuService_SetShowOnDisabled;
    public static void ContextMenuService_SetShowOnDisabled(HandleRef jarg1, bool jarg2)
    {
        _ContextMenuService_SetShowOnDisabled(jarg1, jarg2);
    }

    public delegate float ContextMenuService_GetVerticalOffsetDelegate(HandleRef jarg1);
    public static ContextMenuService_GetVerticalOffsetDelegate _ContextMenuService_GetVerticalOffset;
    public static float ContextMenuService_GetVerticalOffset(HandleRef jarg1)
    {
        float ret = _ContextMenuService_GetVerticalOffset(jarg1);

        return ret;
    }

    public delegate void ContextMenuService_SetVerticalOffsetDelegate(HandleRef jarg1, float jarg2);
    public static ContextMenuService_SetVerticalOffsetDelegate _ContextMenuService_SetVerticalOffset;
    public static void ContextMenuService_SetVerticalOffset(HandleRef jarg1, float jarg2)
    {
        _ContextMenuService_SetVerticalOffset(jarg1, jarg2);
    }

    public delegate IntPtr new_ContextMenuServiceDelegate();
    public static new_ContextMenuServiceDelegate _new_ContextMenuService;
    public static IntPtr new_ContextMenuService()
    {
        IntPtr ret = _new_ContextMenuService();

        return ret;
    }

    public delegate void delete_ContextMenuServiceDelegate(HandleRef jarg1);
    public static delete_ContextMenuServiceDelegate _delete_ContextMenuService;
    public static void delete_ContextMenuService(HandleRef jarg1)
    {
        _delete_ContextMenuService(jarg1);
    }

    public delegate IntPtr new_DashStyleDelegate();
    public static new_DashStyleDelegate _new_DashStyle;
    public static IntPtr new_DashStyle()
    {
        IntPtr ret = _new_DashStyle();

        return ret;
    }

    public delegate IntPtr DashStyle_GetDashesDelegate(HandleRef jarg1);
    public static DashStyle_GetDashesDelegate _DashStyle_GetDashes;
    public static IntPtr DashStyle_GetDashes(HandleRef jarg1)
    {
        IntPtr ret = _DashStyle_GetDashes(jarg1);

        return ret;
    }

    public delegate void DashStyle_SetDashesDelegate(HandleRef jarg1, IntPtr jarg2);
    public static DashStyle_SetDashesDelegate _DashStyle_SetDashes;
    public static void DashStyle_SetDashes(HandleRef jarg1, IntPtr jarg2)
    {
        _DashStyle_SetDashes(jarg1, jarg2);
    }

    public delegate float DashStyle_GetOffsetDelegate(HandleRef jarg1);
    public static DashStyle_GetOffsetDelegate _DashStyle_GetOffset;
    public static float DashStyle_GetOffset(HandleRef jarg1)
    {
        float ret = _DashStyle_GetOffset(jarg1);

        return ret;
    }

    public delegate void DashStyle_SetOffsetDelegate(HandleRef jarg1, float jarg2);
    public static DashStyle_SetOffsetDelegate _DashStyle_SetOffset;
    public static void DashStyle_SetOffset(HandleRef jarg1, float jarg2)
    {
        _DashStyle_SetOffset(jarg1, jarg2);
    }

    public delegate void DashStyle_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static DashStyle_CreateRenderProxyDelegate _DashStyle_CreateRenderProxy;
    public static void DashStyle_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _DashStyle_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void DashStyle_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static DashStyle_UpdateRenderProxyDelegate _DashStyle_UpdateRenderProxy;
    public static void DashStyle_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _DashStyle_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void DashStyle_UnregisterRendererDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DashStyle_UnregisterRendererDelegate _DashStyle_UnregisterRenderer;
    public static void DashStyle_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2)
    {
        _DashStyle_UnregisterRenderer(jarg1, jarg2);
    }

    public delegate void delete_DashStyleDelegate(HandleRef jarg1);
    public static delete_DashStyleDelegate _delete_DashStyle;
    public static void delete_DashStyle(HandleRef jarg1)
    {
        _delete_DashStyle(jarg1);
    }

    public delegate IntPtr new_DataTemplateDelegate();
    public static new_DataTemplateDelegate _new_DataTemplate;
    public static IntPtr new_DataTemplate()
    {
        IntPtr ret = _new_DataTemplate();

        return ret;
    }

    public delegate void delete_DataTemplateDelegate(HandleRef jarg1);
    public static delete_DataTemplateDelegate _delete_DataTemplate;
    public static void delete_DataTemplate(HandleRef jarg1)
    {
        _delete_DataTemplate(jarg1);
    }

    public delegate IntPtr DataTemplate_GetDataTypeDelegate(HandleRef jarg1);
    public static DataTemplate_GetDataTypeDelegate _DataTemplate_GetDataType;
    public static IntPtr DataTemplate_GetDataType(HandleRef jarg1)
    {
        IntPtr ret = _DataTemplate_GetDataType(jarg1);

        return ret;
    }

    public delegate void DataTemplate_SetDataTypeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DataTemplate_SetDataTypeDelegate _DataTemplate_SetDataType;
    public static void DataTemplate_SetDataType(HandleRef jarg1, HandleRef jarg2)
    {
        _DataTemplate_SetDataType(jarg1, jarg2);
    }

    public delegate IntPtr DataTemplate_GetTriggersDelegate(HandleRef jarg1);
    public static DataTemplate_GetTriggersDelegate _DataTemplate_GetTriggers;
    public static IntPtr DataTemplate_GetTriggers(HandleRef jarg1)
    {
        IntPtr ret = _DataTemplate_GetTriggers(jarg1);

        return ret;
    }

    public delegate void delete_DataTemplateSelectorDelegate(HandleRef jarg1);
    public static delete_DataTemplateSelectorDelegate _delete_DataTemplateSelector;
    public static void delete_DataTemplateSelector(HandleRef jarg1)
    {
        _delete_DataTemplateSelector(jarg1);
    }

    public delegate IntPtr DataTemplateSelector_SelectTemplateDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static DataTemplateSelector_SelectTemplateDelegate _DataTemplateSelector_SelectTemplate;
    public static IntPtr DataTemplateSelector_SelectTemplate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        IntPtr ret = _DataTemplateSelector_SelectTemplate(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr new_DialogDelegate();
    public static new_DialogDelegate _new_Dialog;
    public static IntPtr new_Dialog()
    {
        IntPtr ret = _new_Dialog();

        return ret;
    }

    public delegate void delete_DialogDelegate(HandleRef jarg1);
    public static delete_DialogDelegate _delete_Dialog;
    public static void delete_Dialog(HandleRef jarg1)
    {
        _delete_Dialog(jarg1);
    }

    public delegate IntPtr Dialog_GetChildDelegate(HandleRef jarg1);
    public static Dialog_GetChildDelegate _Dialog_GetChild;
    public static IntPtr Dialog_GetChild(HandleRef jarg1)
    {
        IntPtr ret = _Dialog_GetChild(jarg1);

        return ret;
    }

    public delegate void Dialog_SetChildDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Dialog_SetChildDelegate _Dialog_SetChild;
    public static void Dialog_SetChild(HandleRef jarg1, HandleRef jarg2)
    {
        _Dialog_SetChild(jarg1, jarg2);
    }

    public delegate bool Dialog_GetDialogResultDelegate(HandleRef jarg1);
    public static Dialog_GetDialogResultDelegate _Dialog_GetDialogResult;
    public static bool Dialog_GetDialogResult(HandleRef jarg1)
    {
        bool ret = _Dialog_GetDialogResult(jarg1);

        return ret;
    }

    public delegate void Dialog_SetDialogResultDelegate(HandleRef jarg1, bool jarg2);
    public static Dialog_SetDialogResultDelegate _Dialog_SetDialogResult;
    public static void Dialog_SetDialogResult(HandleRef jarg1, bool jarg2)
    {
        _Dialog_SetDialogResult(jarg1, jarg2);
    }

    public delegate bool Dialog_ShowDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Dialog_ShowDelegate _Dialog_Show;
    public static bool Dialog_Show(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _Dialog_Show(jarg1, jarg2);

        return ret;
    }

    public delegate void Dialog_CloseDelegate(HandleRef jarg1);
    public static Dialog_CloseDelegate _Dialog_Close;
    public static void Dialog_Close(HandleRef jarg1)
    {
        _Dialog_Close(jarg1);
    }

    public delegate IntPtr new_DictionaryMapLessDelegate();
    public static new_DictionaryMapLessDelegate _new_DictionaryMapLess;
    public static IntPtr new_DictionaryMapLess()
    {
        IntPtr ret = _new_DictionaryMapLess();

        return ret;
    }

    public delegate void delete_DictionaryMapLessDelegate(HandleRef jarg1);
    public static delete_DictionaryMapLessDelegate _delete_DictionaryMapLess;
    public static void delete_DictionaryMapLess(HandleRef jarg1)
    {
        _delete_DictionaryMapLess(jarg1);
    }

    public delegate IntPtr new_DockPanelDelegate();
    public static new_DockPanelDelegate _new_DockPanel;
    public static IntPtr new_DockPanel()
    {
        IntPtr ret = _new_DockPanel();

        return ret;
    }

    public delegate int DockPanel_GetDockDelegate(HandleRef jarg1);
    public static DockPanel_GetDockDelegate _DockPanel_GetDock;
    public static int DockPanel_GetDock(HandleRef jarg1)
    {
        int ret = _DockPanel_GetDock(jarg1);

        return ret;
    }

    public delegate void DockPanel_SetDockDelegate(HandleRef jarg1, int jarg2);
    public static DockPanel_SetDockDelegate _DockPanel_SetDock;
    public static void DockPanel_SetDock(HandleRef jarg1, int jarg2)
    {
        _DockPanel_SetDock(jarg1, jarg2);
    }

    public delegate bool DockPanel_GetLastChildFillDelegate(HandleRef jarg1);
    public static DockPanel_GetLastChildFillDelegate _DockPanel_GetLastChildFill;
    public static bool DockPanel_GetLastChildFill(HandleRef jarg1)
    {
        bool ret = _DockPanel_GetLastChildFill(jarg1);

        return ret;
    }

    public delegate void DockPanel_SetLastChildFillDelegate(HandleRef jarg1, bool jarg2);
    public static DockPanel_SetLastChildFillDelegate _DockPanel_SetLastChildFill;
    public static void DockPanel_SetLastChildFill(HandleRef jarg1, bool jarg2)
    {
        _DockPanel_SetLastChildFill(jarg1, jarg2);
    }

    public delegate void delete_DockPanelDelegate(HandleRef jarg1);
    public static delete_DockPanelDelegate _delete_DockPanel;
    public static void delete_DockPanel(HandleRef jarg1)
    {
        _delete_DockPanel(jarg1);
    }

    public delegate IntPtr new_DrawingContextDelegate();
    public static new_DrawingContextDelegate _new_DrawingContext;
    public static IntPtr new_DrawingContext()
    {
        IntPtr ret = _new_DrawingContext();

        return ret;
    }

    public delegate void delete_DrawingContextDelegate(HandleRef jarg1);
    public static delete_DrawingContextDelegate _delete_DrawingContext;
    public static void delete_DrawingContext(HandleRef jarg1)
    {
        _delete_DrawingContext(jarg1);
    }

    public delegate IntPtr DrawingContext_GetDrawingCommandsDelegate(HandleRef jarg1);
    public static DrawingContext_GetDrawingCommandsDelegate _DrawingContext_GetDrawingCommands;
    public static IntPtr DrawingContext_GetDrawingCommands(HandleRef jarg1)
    {
        IntPtr ret = _DrawingContext_GetDrawingCommands(jarg1);

        return ret;
    }

    public delegate void DrawingContext_ResetDelegate(HandleRef jarg1);
    public static DrawingContext_ResetDelegate _DrawingContext_Reset;
    public static void DrawingContext_Reset(HandleRef jarg1)
    {
        _DrawingContext_Reset(jarg1);
    }

    public delegate void DrawingContext_DrawDelegateDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static DrawingContext_DrawDelegateDelegate _DrawingContext_DrawDelegate;
    public static void DrawingContext_DrawDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _DrawingContext_DrawDelegate(jarg1, jarg2, jarg3);
    }

    public delegate void DrawingContext_DrawEllipseDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, float jarg5, float jarg6);
    public static DrawingContext_DrawEllipseDelegate _DrawingContext_DrawEllipse;
    public static void DrawingContext_DrawEllipse(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, float jarg5, float jarg6)
    {
        _DrawingContext_DrawEllipse(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6);
    }

    public delegate void DrawingContext_DrawGeometryDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static DrawingContext_DrawGeometryDelegate _DrawingContext_DrawGeometry;
    public static void DrawingContext_DrawGeometry(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        _DrawingContext_DrawGeometry(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate void DrawingContext_DrawImageDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static DrawingContext_DrawImageDelegate _DrawingContext_DrawImage;
    public static void DrawingContext_DrawImage(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _DrawingContext_DrawImage(jarg1, jarg2, jarg3);
    }

    public delegate void DrawingContext_DrawLineDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static DrawingContext_DrawLineDelegate _DrawingContext_DrawLine;
    public static void DrawingContext_DrawLine(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        _DrawingContext_DrawLine(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate void DrawingContext_DrawRectangleDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static DrawingContext_DrawRectangleDelegate _DrawingContext_DrawRectangle;
    public static void DrawingContext_DrawRectangle(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        _DrawingContext_DrawRectangle(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate void DrawingContext_DrawRoundedRectangleDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, float jarg5, float jarg6);
    public static DrawingContext_DrawRoundedRectangleDelegate _DrawingContext_DrawRoundedRectangle;
    public static void DrawingContext_DrawRoundedRectangle(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, float jarg5, float jarg6)
    {
        _DrawingContext_DrawRoundedRectangle(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6);
    }

    public delegate void DrawingContext_DrawTextDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static DrawingContext_DrawTextDelegate _DrawingContext_DrawText;
    public static void DrawingContext_DrawText(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _DrawingContext_DrawText(jarg1, jarg2, jarg3);
    }

    public delegate void DrawingContext_PopDelegate(HandleRef jarg1);
    public static DrawingContext_PopDelegate _DrawingContext_Pop;
    public static void DrawingContext_Pop(HandleRef jarg1)
    {
        _DrawingContext_Pop(jarg1);
    }

    public delegate void DrawingContext_PushClipDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DrawingContext_PushClipDelegate _DrawingContext_PushClip;
    public static void DrawingContext_PushClip(HandleRef jarg1, HandleRef jarg2)
    {
        _DrawingContext_PushClip(jarg1, jarg2);
    }

    public delegate void DrawingContext_PushOpacityDelegate(HandleRef jarg1, float jarg2);
    public static DrawingContext_PushOpacityDelegate _DrawingContext_PushOpacity;
    public static void DrawingContext_PushOpacity(HandleRef jarg1, float jarg2)
    {
        _DrawingContext_PushOpacity(jarg1, jarg2);
    }

    public delegate void DrawingContext_PushOpacityMaskDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DrawingContext_PushOpacityMaskDelegate _DrawingContext_PushOpacityMask;
    public static void DrawingContext_PushOpacityMask(HandleRef jarg1, HandleRef jarg2)
    {
        _DrawingContext_PushOpacityMask(jarg1, jarg2);
    }

    public delegate void DrawingContext_PushTransformDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DrawingContext_PushTransformDelegate _DrawingContext_PushTransform;
    public static void DrawingContext_PushTransform(HandleRef jarg1, HandleRef jarg2)
    {
        _DrawingContext_PushTransform(jarg1, jarg2);
    }

    public delegate void delete_EffectDelegate(HandleRef jarg1);
    public static delete_EffectDelegate _delete_Effect;
    public static void delete_Effect(HandleRef jarg1)
    {
        _delete_Effect(jarg1);
    }

    public delegate IntPtr new_DropShadowEffectDelegate();
    public static new_DropShadowEffectDelegate _new_DropShadowEffect;
    public static IntPtr new_DropShadowEffect()
    {
        IntPtr ret = _new_DropShadowEffect();

        return ret;
    }

    public delegate void delete_DropShadowEffectDelegate(HandleRef jarg1);
    public static delete_DropShadowEffectDelegate _delete_DropShadowEffect;
    public static void delete_DropShadowEffect(HandleRef jarg1)
    {
        _delete_DropShadowEffect(jarg1);
    }

    public delegate float DropShadowEffect_GetBlurRadiusDelegate(HandleRef jarg1);
    public static DropShadowEffect_GetBlurRadiusDelegate _DropShadowEffect_GetBlurRadius;
    public static float DropShadowEffect_GetBlurRadius(HandleRef jarg1)
    {
        float ret = _DropShadowEffect_GetBlurRadius(jarg1);

        return ret;
    }

    public delegate void DropShadowEffect_SetBlurRadiusDelegate(HandleRef jarg1, float jarg2);
    public static DropShadowEffect_SetBlurRadiusDelegate _DropShadowEffect_SetBlurRadius;
    public static void DropShadowEffect_SetBlurRadius(HandleRef jarg1, float jarg2)
    {
        _DropShadowEffect_SetBlurRadius(jarg1, jarg2);
    }

    public delegate IntPtr DropShadowEffect_GetColorDelegate(HandleRef jarg1);
    public static DropShadowEffect_GetColorDelegate _DropShadowEffect_GetColor;
    public static IntPtr DropShadowEffect_GetColor(HandleRef jarg1)
    {
        IntPtr ret = _DropShadowEffect_GetColor(jarg1);

        return ret;
    }

    public delegate void DropShadowEffect_SetColorDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DropShadowEffect_SetColorDelegate _DropShadowEffect_SetColor;
    public static void DropShadowEffect_SetColor(HandleRef jarg1, HandleRef jarg2)
    {
        _DropShadowEffect_SetColor(jarg1, jarg2);
    }

    public delegate float DropShadowEffect_GetDirectionDelegate(HandleRef jarg1);
    public static DropShadowEffect_GetDirectionDelegate _DropShadowEffect_GetDirection;
    public static float DropShadowEffect_GetDirection(HandleRef jarg1)
    {
        float ret = _DropShadowEffect_GetDirection(jarg1);

        return ret;
    }

    public delegate void DropShadowEffect_SetDirectionDelegate(HandleRef jarg1, float jarg2);
    public static DropShadowEffect_SetDirectionDelegate _DropShadowEffect_SetDirection;
    public static void DropShadowEffect_SetDirection(HandleRef jarg1, float jarg2)
    {
        _DropShadowEffect_SetDirection(jarg1, jarg2);
    }

    public delegate float DropShadowEffect_GetOpacityDelegate(HandleRef jarg1);
    public static DropShadowEffect_GetOpacityDelegate _DropShadowEffect_GetOpacity;
    public static float DropShadowEffect_GetOpacity(HandleRef jarg1)
    {
        float ret = _DropShadowEffect_GetOpacity(jarg1);

        return ret;
    }

    public delegate void DropShadowEffect_SetOpacityDelegate(HandleRef jarg1, float jarg2);
    public static DropShadowEffect_SetOpacityDelegate _DropShadowEffect_SetOpacity;
    public static void DropShadowEffect_SetOpacity(HandleRef jarg1, float jarg2)
    {
        _DropShadowEffect_SetOpacity(jarg1, jarg2);
    }

    public delegate int DropShadowEffect_GetRenderingBiasDelegate(HandleRef jarg1);
    public static DropShadowEffect_GetRenderingBiasDelegate _DropShadowEffect_GetRenderingBias;
    public static int DropShadowEffect_GetRenderingBias(HandleRef jarg1)
    {
        int ret = _DropShadowEffect_GetRenderingBias(jarg1);

        return ret;
    }

    public delegate void DropShadowEffect_SetRenderingBiasDelegate(HandleRef jarg1, int jarg2);
    public static DropShadowEffect_SetRenderingBiasDelegate _DropShadowEffect_SetRenderingBias;
    public static void DropShadowEffect_SetRenderingBias(HandleRef jarg1, int jarg2)
    {
        _DropShadowEffect_SetRenderingBias(jarg1, jarg2);
    }

    public delegate float DropShadowEffect_GetShadowDepthDelegate(HandleRef jarg1);
    public static DropShadowEffect_GetShadowDepthDelegate _DropShadowEffect_GetShadowDepth;
    public static float DropShadowEffect_GetShadowDepth(HandleRef jarg1)
    {
        float ret = _DropShadowEffect_GetShadowDepth(jarg1);

        return ret;
    }

    public delegate void DropShadowEffect_SetShadowDepthDelegate(HandleRef jarg1, float jarg2);
    public static DropShadowEffect_SetShadowDepthDelegate _DropShadowEffect_SetShadowDepth;
    public static void DropShadowEffect_SetShadowDepth(HandleRef jarg1, float jarg2)
    {
        _DropShadowEffect_SetShadowDepth(jarg1, jarg2);
    }

    public delegate void delete_ShapeDelegate(HandleRef jarg1);
    public static delete_ShapeDelegate _delete_Shape;
    public static void delete_Shape(HandleRef jarg1)
    {
        _delete_Shape(jarg1);
    }

    public delegate IntPtr Shape_GetFillDelegate(HandleRef jarg1);
    public static Shape_GetFillDelegate _Shape_GetFill;
    public static IntPtr Shape_GetFill(HandleRef jarg1)
    {
        IntPtr ret = _Shape_GetFill(jarg1);

        return ret;
    }

    public delegate void Shape_SetFillDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Shape_SetFillDelegate _Shape_SetFill;
    public static void Shape_SetFill(HandleRef jarg1, HandleRef jarg2)
    {
        _Shape_SetFill(jarg1, jarg2);
    }

    public delegate int Shape_GetStretchDelegate(HandleRef jarg1);
    public static Shape_GetStretchDelegate _Shape_GetStretch;
    public static int Shape_GetStretch(HandleRef jarg1)
    {
        int ret = _Shape_GetStretch(jarg1);

        return ret;
    }

    public delegate void Shape_SetStretchDelegate(HandleRef jarg1, int jarg2);
    public static Shape_SetStretchDelegate _Shape_SetStretch;
    public static void Shape_SetStretch(HandleRef jarg1, int jarg2)
    {
        _Shape_SetStretch(jarg1, jarg2);
    }

    public delegate IntPtr Shape_GetStrokeDelegate(HandleRef jarg1);
    public static Shape_GetStrokeDelegate _Shape_GetStroke;
    public static IntPtr Shape_GetStroke(HandleRef jarg1)
    {
        IntPtr ret = _Shape_GetStroke(jarg1);

        return ret;
    }

    public delegate void Shape_SetStrokeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Shape_SetStrokeDelegate _Shape_SetStroke;
    public static void Shape_SetStroke(HandleRef jarg1, HandleRef jarg2)
    {
        _Shape_SetStroke(jarg1, jarg2);
    }

    public delegate IntPtr Shape_GetStrokeDashArrayDelegate(HandleRef jarg1);
    public static Shape_GetStrokeDashArrayDelegate _Shape_GetStrokeDashArray;
    public static IntPtr Shape_GetStrokeDashArray(HandleRef jarg1)
    {
        IntPtr ret = _Shape_GetStrokeDashArray(jarg1);

        return ret;
    }

    public delegate void Shape_SetStrokeDashArrayDelegate(HandleRef jarg1, IntPtr jarg2);
    public static Shape_SetStrokeDashArrayDelegate _Shape_SetStrokeDashArray;
    public static void Shape_SetStrokeDashArray(HandleRef jarg1, IntPtr jarg2)
    {
        _Shape_SetStrokeDashArray(jarg1, jarg2);
    }

    public delegate int Shape_GetStrokeDashCapDelegate(HandleRef jarg1);
    public static Shape_GetStrokeDashCapDelegate _Shape_GetStrokeDashCap;
    public static int Shape_GetStrokeDashCap(HandleRef jarg1)
    {
        int ret = _Shape_GetStrokeDashCap(jarg1);

        return ret;
    }

    public delegate void Shape_SetStrokeDashCapDelegate(HandleRef jarg1, int jarg2);
    public static Shape_SetStrokeDashCapDelegate _Shape_SetStrokeDashCap;
    public static void Shape_SetStrokeDashCap(HandleRef jarg1, int jarg2)
    {
        _Shape_SetStrokeDashCap(jarg1, jarg2);
    }

    public delegate float Shape_GetStrokeDashOffsetDelegate(HandleRef jarg1);
    public static Shape_GetStrokeDashOffsetDelegate _Shape_GetStrokeDashOffset;
    public static float Shape_GetStrokeDashOffset(HandleRef jarg1)
    {
        float ret = _Shape_GetStrokeDashOffset(jarg1);

        return ret;
    }

    public delegate void Shape_SetStrokeDashOffsetDelegate(HandleRef jarg1, float jarg2);
    public static Shape_SetStrokeDashOffsetDelegate _Shape_SetStrokeDashOffset;
    public static void Shape_SetStrokeDashOffset(HandleRef jarg1, float jarg2)
    {
        _Shape_SetStrokeDashOffset(jarg1, jarg2);
    }

    public delegate int Shape_GetStrokeEndLineCapDelegate(HandleRef jarg1);
    public static Shape_GetStrokeEndLineCapDelegate _Shape_GetStrokeEndLineCap;
    public static int Shape_GetStrokeEndLineCap(HandleRef jarg1)
    {
        int ret = _Shape_GetStrokeEndLineCap(jarg1);

        return ret;
    }

    public delegate void Shape_SetStrokeEndLineCapDelegate(HandleRef jarg1, int jarg2);
    public static Shape_SetStrokeEndLineCapDelegate _Shape_SetStrokeEndLineCap;
    public static void Shape_SetStrokeEndLineCap(HandleRef jarg1, int jarg2)
    {
        _Shape_SetStrokeEndLineCap(jarg1, jarg2);
    }

    public delegate int Shape_GetStrokeLineJoinDelegate(HandleRef jarg1);
    public static Shape_GetStrokeLineJoinDelegate _Shape_GetStrokeLineJoin;
    public static int Shape_GetStrokeLineJoin(HandleRef jarg1)
    {
        int ret = _Shape_GetStrokeLineJoin(jarg1);

        return ret;
    }

    public delegate void Shape_SetStrokeLineJoinDelegate(HandleRef jarg1, int jarg2);
    public static Shape_SetStrokeLineJoinDelegate _Shape_SetStrokeLineJoin;
    public static void Shape_SetStrokeLineJoin(HandleRef jarg1, int jarg2)
    {
        _Shape_SetStrokeLineJoin(jarg1, jarg2);
    }

    public delegate float Shape_GetStrokeMiterLimitDelegate(HandleRef jarg1);
    public static Shape_GetStrokeMiterLimitDelegate _Shape_GetStrokeMiterLimit;
    public static float Shape_GetStrokeMiterLimit(HandleRef jarg1)
    {
        float ret = _Shape_GetStrokeMiterLimit(jarg1);

        return ret;
    }

    public delegate void Shape_SetStrokeMiterLimitDelegate(HandleRef jarg1, float jarg2);
    public static Shape_SetStrokeMiterLimitDelegate _Shape_SetStrokeMiterLimit;
    public static void Shape_SetStrokeMiterLimit(HandleRef jarg1, float jarg2)
    {
        _Shape_SetStrokeMiterLimit(jarg1, jarg2);
    }

    public delegate int Shape_GetStrokeStartLineCapDelegate(HandleRef jarg1);
    public static Shape_GetStrokeStartLineCapDelegate _Shape_GetStrokeStartLineCap;
    public static int Shape_GetStrokeStartLineCap(HandleRef jarg1)
    {
        int ret = _Shape_GetStrokeStartLineCap(jarg1);

        return ret;
    }

    public delegate void Shape_SetStrokeStartLineCapDelegate(HandleRef jarg1, int jarg2);
    public static Shape_SetStrokeStartLineCapDelegate _Shape_SetStrokeStartLineCap;
    public static void Shape_SetStrokeStartLineCap(HandleRef jarg1, int jarg2)
    {
        _Shape_SetStrokeStartLineCap(jarg1, jarg2);
    }

    public delegate float Shape_GetStrokeThicknessDelegate(HandleRef jarg1);
    public static Shape_GetStrokeThicknessDelegate _Shape_GetStrokeThickness;
    public static float Shape_GetStrokeThickness(HandleRef jarg1)
    {
        float ret = _Shape_GetStrokeThickness(jarg1);

        return ret;
    }

    public delegate void Shape_SetStrokeThicknessDelegate(HandleRef jarg1, float jarg2);
    public static Shape_SetStrokeThicknessDelegate _Shape_SetStrokeThickness;
    public static void Shape_SetStrokeThickness(HandleRef jarg1, float jarg2)
    {
        _Shape_SetStrokeThickness(jarg1, jarg2);
    }

    public delegate IntPtr new_EllipseDelegate();
    public static new_EllipseDelegate _new_Ellipse;
    public static IntPtr new_Ellipse()
    {
        IntPtr ret = _new_Ellipse();

        return ret;
    }

    public delegate void delete_EllipseDelegate(HandleRef jarg1);
    public static delete_EllipseDelegate _delete_Ellipse;
    public static void delete_Ellipse(HandleRef jarg1)
    {
        _delete_Ellipse(jarg1);
    }

    public delegate IntPtr new_EllipseGeometry__SWIG_0Delegate();
    public static new_EllipseGeometry__SWIG_0Delegate _new_EllipseGeometry__SWIG_0;
    public static IntPtr new_EllipseGeometry__SWIG_0()
    {
        IntPtr ret = _new_EllipseGeometry__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_EllipseGeometry__SWIG_1Delegate(HandleRef jarg1, float jarg2, float jarg3);
    public static new_EllipseGeometry__SWIG_1Delegate _new_EllipseGeometry__SWIG_1;
    public static IntPtr new_EllipseGeometry__SWIG_1(HandleRef jarg1, float jarg2, float jarg3)
    {
        IntPtr ret = _new_EllipseGeometry__SWIG_1(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr EllipseGeometry_GetCenterDelegate(HandleRef jarg1);
    public static EllipseGeometry_GetCenterDelegate _EllipseGeometry_GetCenter;
    public static IntPtr EllipseGeometry_GetCenter(HandleRef jarg1)
    {
        IntPtr ret = _EllipseGeometry_GetCenter(jarg1);

        return ret;
    }

    public delegate void EllipseGeometry_SetCenterDelegate(HandleRef jarg1, HandleRef jarg2);
    public static EllipseGeometry_SetCenterDelegate _EllipseGeometry_SetCenter;
    public static void EllipseGeometry_SetCenter(HandleRef jarg1, HandleRef jarg2)
    {
        _EllipseGeometry_SetCenter(jarg1, jarg2);
    }

    public delegate float EllipseGeometry_GetRadiusXDelegate(HandleRef jarg1);
    public static EllipseGeometry_GetRadiusXDelegate _EllipseGeometry_GetRadiusX;
    public static float EllipseGeometry_GetRadiusX(HandleRef jarg1)
    {
        float ret = _EllipseGeometry_GetRadiusX(jarg1);

        return ret;
    }

    public delegate void EllipseGeometry_SetRadiusXDelegate(HandleRef jarg1, float jarg2);
    public static EllipseGeometry_SetRadiusXDelegate _EllipseGeometry_SetRadiusX;
    public static void EllipseGeometry_SetRadiusX(HandleRef jarg1, float jarg2)
    {
        _EllipseGeometry_SetRadiusX(jarg1, jarg2);
    }

    public delegate float EllipseGeometry_GetRadiusYDelegate(HandleRef jarg1);
    public static EllipseGeometry_GetRadiusYDelegate _EllipseGeometry_GetRadiusY;
    public static float EllipseGeometry_GetRadiusY(HandleRef jarg1)
    {
        float ret = _EllipseGeometry_GetRadiusY(jarg1);

        return ret;
    }

    public delegate void EllipseGeometry_SetRadiusYDelegate(HandleRef jarg1, float jarg2);
    public static EllipseGeometry_SetRadiusYDelegate _EllipseGeometry_SetRadiusY;
    public static void EllipseGeometry_SetRadiusY(HandleRef jarg1, float jarg2)
    {
        _EllipseGeometry_SetRadiusY(jarg1, jarg2);
    }

    public delegate bool EllipseGeometry_IsEmptyDelegate(HandleRef jarg1);
    public static EllipseGeometry_IsEmptyDelegate _EllipseGeometry_IsEmpty;
    public static bool EllipseGeometry_IsEmpty(HandleRef jarg1)
    {
        bool ret = _EllipseGeometry_IsEmpty(jarg1);

        return ret;
    }

    public delegate void EllipseGeometry_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static EllipseGeometry_CreateRenderProxyDelegate _EllipseGeometry_CreateRenderProxy;
    public static void EllipseGeometry_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _EllipseGeometry_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void EllipseGeometry_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static EllipseGeometry_UpdateRenderProxyDelegate _EllipseGeometry_UpdateRenderProxy;
    public static void EllipseGeometry_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _EllipseGeometry_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void delete_EllipseGeometryDelegate(HandleRef jarg1);
    public static delete_EllipseGeometryDelegate _delete_EllipseGeometry;
    public static void delete_EllipseGeometry(HandleRef jarg1)
    {
        _delete_EllipseGeometry(jarg1);
    }

    public delegate IntPtr new_EventTriggerDelegate();
    public static new_EventTriggerDelegate _new_EventTrigger;
    public static IntPtr new_EventTrigger()
    {
        IntPtr ret = _new_EventTrigger();

        return ret;
    }

    public delegate void delete_EventTriggerDelegate(HandleRef jarg1);
    public static delete_EventTriggerDelegate _delete_EventTrigger;
    public static void delete_EventTrigger(HandleRef jarg1)
    {
        _delete_EventTrigger(jarg1);
    }

    public delegate IntPtr EventTrigger_GetActionsDelegate(HandleRef jarg1);
    public static EventTrigger_GetActionsDelegate _EventTrigger_GetActions;
    public static IntPtr EventTrigger_GetActions(HandleRef jarg1)
    {
        IntPtr ret = _EventTrigger_GetActions(jarg1);

        return ret;
    }

    public delegate IntPtr EventTrigger_GetRoutedEventDelegate(HandleRef jarg1);
    public static EventTrigger_GetRoutedEventDelegate _EventTrigger_GetRoutedEvent;
    public static IntPtr EventTrigger_GetRoutedEvent(HandleRef jarg1)
    {
        IntPtr ret = _EventTrigger_GetRoutedEvent(jarg1);

        return ret;
    }

    public delegate void EventTrigger_SetRoutedEventDelegate(HandleRef jarg1, HandleRef jarg2);
    public static EventTrigger_SetRoutedEventDelegate _EventTrigger_SetRoutedEvent;
    public static void EventTrigger_SetRoutedEvent(HandleRef jarg1, HandleRef jarg2)
    {
        _EventTrigger_SetRoutedEvent(jarg1, jarg2);
    }

    public delegate string EventTrigger_GetSourceNameDelegate(HandleRef jarg1);
    public static EventTrigger_GetSourceNameDelegate _EventTrigger_GetSourceName;
    public static string EventTrigger_GetSourceName(HandleRef jarg1)
    {
        string ret = _EventTrigger_GetSourceName(jarg1);

        return ret;
    }

    public delegate void EventTrigger_SetSourceNameDelegate(HandleRef jarg1, string jarg2);
    public static EventTrigger_SetSourceNameDelegate _EventTrigger_SetSourceName;
    public static void EventTrigger_SetSourceName(HandleRef jarg1, string jarg2)
    {
        _EventTrigger_SetSourceName(jarg1, jarg2);
    }

    public delegate void EventTrigger_AddToLocalTriggersDelegate(HandleRef jarg1, HandleRef jarg2);
    public static EventTrigger_AddToLocalTriggersDelegate _EventTrigger_AddToLocalTriggers;
    public static void EventTrigger_AddToLocalTriggers(HandleRef jarg1, HandleRef jarg2)
    {
        _EventTrigger_AddToLocalTriggers(jarg1, jarg2);
    }

    public delegate void EventTrigger_RegisterSourcesDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static EventTrigger_RegisterSourcesDelegate _EventTrigger_RegisterSources;
    public static void EventTrigger_RegisterSources(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        _EventTrigger_RegisterSources(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate void EventTrigger_UnregisterSourcesDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static EventTrigger_UnregisterSourcesDelegate _EventTrigger_UnregisterSources;
    public static void EventTrigger_UnregisterSources(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        _EventTrigger_UnregisterSources(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate void EventTrigger_RegisterEventsDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);
    public static EventTrigger_RegisterEventsDelegate _EventTrigger_RegisterEvents;
    public static void EventTrigger_RegisterEvents(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4)
    {
        _EventTrigger_RegisterEvents(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate void EventTrigger_UnregisterEventsDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);
    public static EventTrigger_UnregisterEventsDelegate _EventTrigger_UnregisterEvents;
    public static void EventTrigger_UnregisterEvents(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4)
    {
        _EventTrigger_UnregisterEvents(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate bool EventTrigger_CheckDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, bool jarg6);
    public static EventTrigger_CheckDelegate _EventTrigger_Check;
    public static bool EventTrigger_Check(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, bool jarg6)
    {
        bool ret = _EventTrigger_Check(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6);

        return ret;
    }

    public delegate IntPtr EventTrigger_FindValueDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);
    public static EventTrigger_FindValueDelegate _EventTrigger_FindValue;
    public static IntPtr EventTrigger_FindValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5)
    {
        IntPtr ret = _EventTrigger_FindValue(jarg1, jarg2, jarg3, jarg4, jarg5);

        return ret;
    }

    public delegate void EventTrigger_Invalidate__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4, bool jarg5, byte jarg6);
    public static EventTrigger_Invalidate__SWIG_0Delegate _EventTrigger_Invalidate__SWIG_0;
    public static void EventTrigger_Invalidate__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4, bool jarg5, byte jarg6)
    {
        _EventTrigger_Invalidate__SWIG_0(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6);
    }

    public delegate void EventTrigger_Invalidate__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6, HandleRef jarg7, bool jarg8, bool jarg9, byte jarg10);
    public static EventTrigger_Invalidate__SWIG_1Delegate _EventTrigger_Invalidate__SWIG_1;
    public static void EventTrigger_Invalidate__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6, HandleRef jarg7, bool jarg8, bool jarg9, byte jarg10)
    {
        _EventTrigger_Invalidate__SWIG_1(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6, jarg7, jarg8, jarg9, jarg10);
    }

    public delegate IntPtr new_HeaderedContentControlDelegate();
    public static new_HeaderedContentControlDelegate _new_HeaderedContentControl;
    public static IntPtr new_HeaderedContentControl()
    {
        IntPtr ret = _new_HeaderedContentControl();

        return ret;
    }

    public delegate void delete_HeaderedContentControlDelegate(HandleRef jarg1);
    public static delete_HeaderedContentControlDelegate _delete_HeaderedContentControl;
    public static void delete_HeaderedContentControl(HandleRef jarg1)
    {
        _delete_HeaderedContentControl(jarg1);
    }

    public delegate bool HeaderedContentControl_GetHasHeaderDelegate(HandleRef jarg1);
    public static HeaderedContentControl_GetHasHeaderDelegate _HeaderedContentControl_GetHasHeader;
    public static bool HeaderedContentControl_GetHasHeader(HandleRef jarg1)
    {
        bool ret = _HeaderedContentControl_GetHasHeader(jarg1);

        return ret;
    }

    public delegate IntPtr HeaderedContentControl_GetHeaderDelegate(HandleRef jarg1);
    public static HeaderedContentControl_GetHeaderDelegate _HeaderedContentControl_GetHeader;
    public static IntPtr HeaderedContentControl_GetHeader(HandleRef jarg1)
    {
        IntPtr ret = _HeaderedContentControl_GetHeader(jarg1);

        return ret;
    }

    public delegate void HeaderedContentControl_SetHeaderDelegate(HandleRef jarg1, HandleRef jarg2);
    public static HeaderedContentControl_SetHeaderDelegate _HeaderedContentControl_SetHeader;
    public static void HeaderedContentControl_SetHeader(HandleRef jarg1, HandleRef jarg2)
    {
        _HeaderedContentControl_SetHeader(jarg1, jarg2);
    }

    public delegate IntPtr HeaderedContentControl_GetHeaderTemplateDelegate(HandleRef jarg1);
    public static HeaderedContentControl_GetHeaderTemplateDelegate _HeaderedContentControl_GetHeaderTemplate;
    public static IntPtr HeaderedContentControl_GetHeaderTemplate(HandleRef jarg1)
    {
        IntPtr ret = _HeaderedContentControl_GetHeaderTemplate(jarg1);

        return ret;
    }

    public delegate void HeaderedContentControl_SetHeaderTemplateDelegate(HandleRef jarg1, HandleRef jarg2);
    public static HeaderedContentControl_SetHeaderTemplateDelegate _HeaderedContentControl_SetHeaderTemplate;
    public static void HeaderedContentControl_SetHeaderTemplate(HandleRef jarg1, HandleRef jarg2)
    {
        _HeaderedContentControl_SetHeaderTemplate(jarg1, jarg2);
    }

    public delegate IntPtr HeaderedContentControl_GetHeaderTemplateSelectorDelegate(HandleRef jarg1);
    public static HeaderedContentControl_GetHeaderTemplateSelectorDelegate _HeaderedContentControl_GetHeaderTemplateSelector;
    public static IntPtr HeaderedContentControl_GetHeaderTemplateSelector(HandleRef jarg1)
    {
        IntPtr ret = _HeaderedContentControl_GetHeaderTemplateSelector(jarg1);

        return ret;
    }

    public delegate void HeaderedContentControl_SetHeaderTemplateSelectorDelegate(HandleRef jarg1, HandleRef jarg2);
    public static HeaderedContentControl_SetHeaderTemplateSelectorDelegate _HeaderedContentControl_SetHeaderTemplateSelector;
    public static void HeaderedContentControl_SetHeaderTemplateSelector(HandleRef jarg1, HandleRef jarg2)
    {
        _HeaderedContentControl_SetHeaderTemplateSelector(jarg1, jarg2);
    }

    public delegate IntPtr new_ExpanderDelegate();
    public static new_ExpanderDelegate _new_Expander;
    public static IntPtr new_Expander()
    {
        IntPtr ret = _new_Expander();

        return ret;
    }

    public delegate int Expander_GetExpandDirectionDelegate(HandleRef jarg1);
    public static Expander_GetExpandDirectionDelegate _Expander_GetExpandDirection;
    public static int Expander_GetExpandDirection(HandleRef jarg1)
    {
        int ret = _Expander_GetExpandDirection(jarg1);

        return ret;
    }

    public delegate void Expander_SetExpandDirectionDelegate(HandleRef jarg1, int jarg2);
    public static Expander_SetExpandDirectionDelegate _Expander_SetExpandDirection;
    public static void Expander_SetExpandDirection(HandleRef jarg1, int jarg2)
    {
        _Expander_SetExpandDirection(jarg1, jarg2);
    }

    public delegate bool Expander_GetIsExpandedDelegate(HandleRef jarg1);
    public static Expander_GetIsExpandedDelegate _Expander_GetIsExpanded;
    public static bool Expander_GetIsExpanded(HandleRef jarg1)
    {
        bool ret = _Expander_GetIsExpanded(jarg1);

        return ret;
    }

    public delegate void Expander_SetIsExpandedDelegate(HandleRef jarg1, bool jarg2);
    public static Expander_SetIsExpandedDelegate _Expander_SetIsExpanded;
    public static void Expander_SetIsExpanded(HandleRef jarg1, bool jarg2)
    {
        _Expander_SetIsExpanded(jarg1, jarg2);
    }

    public delegate void delete_ExpanderDelegate(HandleRef jarg1);
    public static delete_ExpanderDelegate _delete_Expander;
    public static void delete_Expander(HandleRef jarg1)
    {
        _delete_Expander(jarg1);
    }

    public delegate IntPtr FocusManager_GetFocusedElementDelegate(HandleRef jarg1);
    public static FocusManager_GetFocusedElementDelegate _FocusManager_GetFocusedElement;
    public static IntPtr FocusManager_GetFocusedElement(HandleRef jarg1)
    {
        IntPtr ret = _FocusManager_GetFocusedElement(jarg1);

        return ret;
    }

    public delegate void FocusManager_SetFocusedElementDelegate(HandleRef jarg1, HandleRef jarg2);
    public static FocusManager_SetFocusedElementDelegate _FocusManager_SetFocusedElement;
    public static void FocusManager_SetFocusedElement(HandleRef jarg1, HandleRef jarg2)
    {
        _FocusManager_SetFocusedElement(jarg1, jarg2);
    }

    public delegate IntPtr FocusManager_GetFocusScopeDelegate(HandleRef jarg1);
    public static FocusManager_GetFocusScopeDelegate _FocusManager_GetFocusScope;
    public static IntPtr FocusManager_GetFocusScope(HandleRef jarg1)
    {
        IntPtr ret = _FocusManager_GetFocusScope(jarg1);

        return ret;
    }

    public delegate bool FocusManager_GetIsFocusScopeDelegate(HandleRef jarg1);
    public static FocusManager_GetIsFocusScopeDelegate _FocusManager_GetIsFocusScope;
    public static bool FocusManager_GetIsFocusScope(HandleRef jarg1)
    {
        bool ret = _FocusManager_GetIsFocusScope(jarg1);

        return ret;
    }

    public delegate void FocusManager_SetIsFocusScopeDelegate(HandleRef jarg1, bool jarg2);
    public static FocusManager_SetIsFocusScopeDelegate _FocusManager_SetIsFocusScope;
    public static void FocusManager_SetIsFocusScope(HandleRef jarg1, bool jarg2)
    {
        _FocusManager_SetIsFocusScope(jarg1, jarg2);
    }

    public delegate void delete_FocusManagerDelegate(HandleRef jarg1);
    public static delete_FocusManagerDelegate _delete_FocusManager;
    public static void delete_FocusManager(HandleRef jarg1)
    {
        _delete_FocusManager(jarg1);
    }

    public delegate IntPtr new_FormattedTextDelegate();
    public static new_FormattedTextDelegate _new_FormattedText;
    public static IntPtr new_FormattedText()
    {
        IntPtr ret = _new_FormattedText();

        return ret;
    }

    public delegate void delete_FormattedTextDelegate(HandleRef jarg1);
    public static delete_FormattedTextDelegate _delete_FormattedText;
    public static void delete_FormattedText(HandleRef jarg1)
    {
        _delete_FormattedText(jarg1);
    }

    public delegate IntPtr FormattedText_GetTextDelegate(HandleRef jarg1);
    public static FormattedText_GetTextDelegate _FormattedText_GetText;
    public static IntPtr FormattedText_GetText(HandleRef jarg1)
    {
        IntPtr ret = _FormattedText_GetText(jarg1);

        return ret;
    }

    public delegate void FormattedText_SetTextDelegate(HandleRef jarg1, IntPtr jarg2);
    public static FormattedText_SetTextDelegate _FormattedText_SetText;
    public static void FormattedText_SetText(HandleRef jarg1, IntPtr jarg2)
    {
        _FormattedText_SetText(jarg1, jarg2);
    }

    public delegate int FormattedText_GetTextAlignmentDelegate(HandleRef jarg1);
    public static FormattedText_GetTextAlignmentDelegate _FormattedText_GetTextAlignment;
    public static int FormattedText_GetTextAlignment(HandleRef jarg1)
    {
        int ret = _FormattedText_GetTextAlignment(jarg1);

        return ret;
    }

    public delegate void FormattedText_SetTextAlignmentDelegate(HandleRef jarg1, int jarg2);
    public static FormattedText_SetTextAlignmentDelegate _FormattedText_SetTextAlignment;
    public static void FormattedText_SetTextAlignment(HandleRef jarg1, int jarg2)
    {
        _FormattedText_SetTextAlignment(jarg1, jarg2);
    }

    public delegate IntPtr FormattedText_GetFontFamilyDelegate(HandleRef jarg1);
    public static FormattedText_GetFontFamilyDelegate _FormattedText_GetFontFamily;
    public static IntPtr FormattedText_GetFontFamily(HandleRef jarg1)
    {
        IntPtr ret = _FormattedText_GetFontFamily(jarg1);

        return ret;
    }

    public delegate void FormattedText_SetFontFamilyDelegate(HandleRef jarg1, IntPtr jarg2);
    public static FormattedText_SetFontFamilyDelegate _FormattedText_SetFontFamily;
    public static void FormattedText_SetFontFamily(HandleRef jarg1, IntPtr jarg2)
    {
        _FormattedText_SetFontFamily(jarg1, jarg2);
    }

    public delegate float FormattedText_GetFontSizeDelegate(HandleRef jarg1);
    public static FormattedText_GetFontSizeDelegate _FormattedText_GetFontSize;
    public static float FormattedText_GetFontSize(HandleRef jarg1)
    {
        float ret = _FormattedText_GetFontSize(jarg1);

        return ret;
    }

    public delegate void FormattedText_SetFontSizeDelegate(HandleRef jarg1, float jarg2);
    public static FormattedText_SetFontSizeDelegate _FormattedText_SetFontSize;
    public static void FormattedText_SetFontSize(HandleRef jarg1, float jarg2)
    {
        _FormattedText_SetFontSize(jarg1, jarg2);
    }

    public delegate int FormattedText_GetFontStretchDelegate(HandleRef jarg1);
    public static FormattedText_GetFontStretchDelegate _FormattedText_GetFontStretch;
    public static int FormattedText_GetFontStretch(HandleRef jarg1)
    {
        int ret = _FormattedText_GetFontStretch(jarg1);

        return ret;
    }

    public delegate void FormattedText_SetFontStretchDelegate(HandleRef jarg1, int jarg2);
    public static FormattedText_SetFontStretchDelegate _FormattedText_SetFontStretch;
    public static void FormattedText_SetFontStretch(HandleRef jarg1, int jarg2)
    {
        _FormattedText_SetFontStretch(jarg1, jarg2);
    }

    public delegate int FormattedText_GetFontStyleDelegate(HandleRef jarg1);
    public static FormattedText_GetFontStyleDelegate _FormattedText_GetFontStyle;
    public static int FormattedText_GetFontStyle(HandleRef jarg1)
    {
        int ret = _FormattedText_GetFontStyle(jarg1);

        return ret;
    }

    public delegate void FormattedText_SetFontStyleDelegate(HandleRef jarg1, int jarg2);
    public static FormattedText_SetFontStyleDelegate _FormattedText_SetFontStyle;
    public static void FormattedText_SetFontStyle(HandleRef jarg1, int jarg2)
    {
        _FormattedText_SetFontStyle(jarg1, jarg2);
    }

    public delegate int FormattedText_GetFontWeightDelegate(HandleRef jarg1);
    public static FormattedText_GetFontWeightDelegate _FormattedText_GetFontWeight;
    public static int FormattedText_GetFontWeight(HandleRef jarg1)
    {
        int ret = _FormattedText_GetFontWeight(jarg1);

        return ret;
    }

    public delegate void FormattedText_SetFontWeightDelegate(HandleRef jarg1, int jarg2);
    public static FormattedText_SetFontWeightDelegate _FormattedText_SetFontWeight;
    public static void FormattedText_SetFontWeight(HandleRef jarg1, int jarg2)
    {
        _FormattedText_SetFontWeight(jarg1, jarg2);
    }

    public delegate IntPtr FormattedText_GetForegroundDelegate(HandleRef jarg1);
    public static FormattedText_GetForegroundDelegate _FormattedText_GetForeground;
    public static IntPtr FormattedText_GetForeground(HandleRef jarg1)
    {
        IntPtr ret = _FormattedText_GetForeground(jarg1);

        return ret;
    }

    public delegate void FormattedText_SetForegroundDelegate(HandleRef jarg1, HandleRef jarg2);
    public static FormattedText_SetForegroundDelegate _FormattedText_SetForeground;
    public static void FormattedText_SetForeground(HandleRef jarg1, HandleRef jarg2)
    {
        _FormattedText_SetForeground(jarg1, jarg2);
    }

    public delegate IntPtr FormattedText_GetStrokeDelegate(HandleRef jarg1);
    public static FormattedText_GetStrokeDelegate _FormattedText_GetStroke;
    public static IntPtr FormattedText_GetStroke(HandleRef jarg1)
    {
        IntPtr ret = _FormattedText_GetStroke(jarg1);

        return ret;
    }

    public delegate void FormattedText_SetStrokeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static FormattedText_SetStrokeDelegate _FormattedText_SetStroke;
    public static void FormattedText_SetStroke(HandleRef jarg1, HandleRef jarg2)
    {
        _FormattedText_SetStroke(jarg1, jarg2);
    }

    public delegate float FormattedText_GetStrokeThicknessDelegate(HandleRef jarg1);
    public static FormattedText_GetStrokeThicknessDelegate _FormattedText_GetStrokeThickness;
    public static float FormattedText_GetStrokeThickness(HandleRef jarg1)
    {
        float ret = _FormattedText_GetStrokeThickness(jarg1);

        return ret;
    }

    public delegate void FormattedText_SetStrokeThicknessDelegate(HandleRef jarg1, float jarg2);
    public static FormattedText_SetStrokeThicknessDelegate _FormattedText_SetStrokeThickness;
    public static void FormattedText_SetStrokeThickness(HandleRef jarg1, float jarg2)
    {
        _FormattedText_SetStrokeThickness(jarg1, jarg2);
    }

    public delegate IntPtr FormattedText_GetFontDelegate(HandleRef jarg1);
    public static FormattedText_GetFontDelegate _FormattedText_GetFont;
    public static IntPtr FormattedText_GetFont(HandleRef jarg1)
    {
        IntPtr ret = _FormattedText_GetFont(jarg1);

        return ret;
    }

    public delegate void FormattedText_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static FormattedText_CreateRenderProxyDelegate _FormattedText_CreateRenderProxy;
    public static void FormattedText_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _FormattedText_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void FormattedText_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static FormattedText_UpdateRenderProxyDelegate _FormattedText_UpdateRenderProxy;
    public static void FormattedText_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _FormattedText_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void FormattedText_UnregisterRendererDelegate(HandleRef jarg1, HandleRef jarg2);
    public static FormattedText_UnregisterRendererDelegate _FormattedText_UnregisterRenderer;
    public static void FormattedText_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2)
    {
        _FormattedText_UnregisterRenderer(jarg1, jarg2);
    }

    public delegate void ContextMenuEventArgs_owner_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ContextMenuEventArgs_owner_setDelegate _ContextMenuEventArgs_owner_set;
    public static void ContextMenuEventArgs_owner_set(HandleRef jarg1, HandleRef jarg2)
    {
        _ContextMenuEventArgs_owner_set(jarg1, jarg2);
    }

    public delegate IntPtr ContextMenuEventArgs_owner_getDelegate(HandleRef jarg1);
    public static ContextMenuEventArgs_owner_getDelegate _ContextMenuEventArgs_owner_get;
    public static IntPtr ContextMenuEventArgs_owner_get(HandleRef jarg1)
    {
        IntPtr ret = _ContextMenuEventArgs_owner_get(jarg1);

        return ret;
    }

    public delegate void ContextMenuEventArgs_cursorLeft_setDelegate(HandleRef jarg1, float jarg2);
    public static ContextMenuEventArgs_cursorLeft_setDelegate _ContextMenuEventArgs_cursorLeft_set;
    public static void ContextMenuEventArgs_cursorLeft_set(HandleRef jarg1, float jarg2)
    {
        _ContextMenuEventArgs_cursorLeft_set(jarg1, jarg2);
    }

    public delegate float ContextMenuEventArgs_cursorLeft_getDelegate(HandleRef jarg1);
    public static ContextMenuEventArgs_cursorLeft_getDelegate _ContextMenuEventArgs_cursorLeft_get;
    public static float ContextMenuEventArgs_cursorLeft_get(HandleRef jarg1)
    {
        float ret = _ContextMenuEventArgs_cursorLeft_get(jarg1);

        return ret;
    }

    public delegate void ContextMenuEventArgs_cursorTop_setDelegate(HandleRef jarg1, float jarg2);
    public static ContextMenuEventArgs_cursorTop_setDelegate _ContextMenuEventArgs_cursorTop_set;
    public static void ContextMenuEventArgs_cursorTop_set(HandleRef jarg1, float jarg2)
    {
        _ContextMenuEventArgs_cursorTop_set(jarg1, jarg2);
    }

    public delegate float ContextMenuEventArgs_cursorTop_getDelegate(HandleRef jarg1);
    public static ContextMenuEventArgs_cursorTop_getDelegate _ContextMenuEventArgs_cursorTop_get;
    public static float ContextMenuEventArgs_cursorTop_get(HandleRef jarg1)
    {
        float ret = _ContextMenuEventArgs_cursorTop_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_ContextMenuEventArgs__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, float jarg3, float jarg4);
    public static new_ContextMenuEventArgs__SWIG_0Delegate _new_ContextMenuEventArgs__SWIG_0;
    public static IntPtr new_ContextMenuEventArgs__SWIG_0(HandleRef jarg1, HandleRef jarg2, float jarg3, float jarg4)
    {
        IntPtr ret = _new_ContextMenuEventArgs__SWIG_0(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr new_ContextMenuEventArgs__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2, float jarg3);
    public static new_ContextMenuEventArgs__SWIG_1Delegate _new_ContextMenuEventArgs__SWIG_1;
    public static IntPtr new_ContextMenuEventArgs__SWIG_1(HandleRef jarg1, HandleRef jarg2, float jarg3)
    {
        IntPtr ret = _new_ContextMenuEventArgs__SWIG_1(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr new_ContextMenuEventArgs__SWIG_2Delegate(HandleRef jarg1, HandleRef jarg2);
    public static new_ContextMenuEventArgs__SWIG_2Delegate _new_ContextMenuEventArgs__SWIG_2;
    public static IntPtr new_ContextMenuEventArgs__SWIG_2(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_ContextMenuEventArgs__SWIG_2(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_ContextMenuEventArgsDelegate(HandleRef jarg1);
    public static delete_ContextMenuEventArgsDelegate _delete_ContextMenuEventArgs;
    public static void delete_ContextMenuEventArgs(HandleRef jarg1)
    {
        _delete_ContextMenuEventArgs(jarg1);
    }

    public delegate IntPtr new_ToolTipEventArgsDelegate(HandleRef jarg1, HandleRef jarg2);
    public static new_ToolTipEventArgsDelegate _new_ToolTipEventArgs;
    public static IntPtr new_ToolTipEventArgs(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_ToolTipEventArgs(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_ToolTipEventArgsDelegate(HandleRef jarg1);
    public static delete_ToolTipEventArgsDelegate _delete_ToolTipEventArgs;
    public static void delete_ToolTipEventArgs(HandleRef jarg1)
    {
        _delete_ToolTipEventArgs(jarg1);
    }

    public delegate void RequestBringIntoViewEventArgs_targetObject_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static RequestBringIntoViewEventArgs_targetObject_setDelegate _RequestBringIntoViewEventArgs_targetObject_set;
    public static void RequestBringIntoViewEventArgs_targetObject_set(HandleRef jarg1, HandleRef jarg2)
    {
        _RequestBringIntoViewEventArgs_targetObject_set(jarg1, jarg2);
    }

    public delegate IntPtr RequestBringIntoViewEventArgs_targetObject_getDelegate(HandleRef jarg1);
    public static RequestBringIntoViewEventArgs_targetObject_getDelegate _RequestBringIntoViewEventArgs_targetObject_get;
    public static IntPtr RequestBringIntoViewEventArgs_targetObject_get(HandleRef jarg1)
    {
        IntPtr ret = _RequestBringIntoViewEventArgs_targetObject_get(jarg1);

        return ret;
    }

    public delegate void RequestBringIntoViewEventArgs_targetRect_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static RequestBringIntoViewEventArgs_targetRect_setDelegate _RequestBringIntoViewEventArgs_targetRect_set;
    public static void RequestBringIntoViewEventArgs_targetRect_set(HandleRef jarg1, HandleRef jarg2)
    {
        _RequestBringIntoViewEventArgs_targetRect_set(jarg1, jarg2);
    }

    public delegate IntPtr RequestBringIntoViewEventArgs_targetRect_getDelegate(HandleRef jarg1);
    public static RequestBringIntoViewEventArgs_targetRect_getDelegate _RequestBringIntoViewEventArgs_targetRect_get;
    public static IntPtr RequestBringIntoViewEventArgs_targetRect_get(HandleRef jarg1)
    {
        IntPtr ret = _RequestBringIntoViewEventArgs_targetRect_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_RequestBringIntoViewEventArgsDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static new_RequestBringIntoViewEventArgsDelegate _new_RequestBringIntoViewEventArgs;
    public static IntPtr new_RequestBringIntoViewEventArgs(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        IntPtr ret = _new_RequestBringIntoViewEventArgs(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void delete_RequestBringIntoViewEventArgsDelegate(HandleRef jarg1);
    public static delete_RequestBringIntoViewEventArgsDelegate _delete_RequestBringIntoViewEventArgs;
    public static void delete_RequestBringIntoViewEventArgs(HandleRef jarg1)
    {
        _delete_RequestBringIntoViewEventArgs(jarg1);
    }

    public delegate IntPtr new_FreezableCollection__SWIG_0Delegate();
    public static new_FreezableCollection__SWIG_0Delegate _new_FreezableCollection__SWIG_0;
    public static IntPtr new_FreezableCollection__SWIG_0()
    {
        IntPtr ret = _new_FreezableCollection__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_FreezableCollection__SWIG_1Delegate(HandleRef jarg1);
    public static new_FreezableCollection__SWIG_1Delegate _new_FreezableCollection__SWIG_1;
    public static IntPtr new_FreezableCollection__SWIG_1(HandleRef jarg1)
    {
        IntPtr ret = _new_FreezableCollection__SWIG_1(jarg1);

        return ret;
    }

    public delegate void delete_FreezableCollectionDelegate(HandleRef jarg1);
    public static delete_FreezableCollectionDelegate _delete_FreezableCollection;
    public static void delete_FreezableCollection(HandleRef jarg1)
    {
        _delete_FreezableCollection(jarg1);
    }

    public delegate uint FreezableCollection_CountDelegate(HandleRef jarg1);
    public static FreezableCollection_CountDelegate _FreezableCollection_Count;
    public static uint FreezableCollection_Count(HandleRef jarg1)
    {
        uint ret = _FreezableCollection_Count(jarg1);

        return ret;
    }

    public delegate IntPtr FreezableCollection_GetDelegate(HandleRef jarg1, uint jarg2);
    public static FreezableCollection_GetDelegate _FreezableCollection_Get;
    public static IntPtr FreezableCollection_Get(HandleRef jarg1, uint jarg2)
    {
        IntPtr ret = _FreezableCollection_Get(jarg1, jarg2);

        return ret;
    }

    public delegate void FreezableCollection_Set__SWIG_0Delegate(HandleRef jarg1, uint jarg2, HandleRef jarg3);
    public static FreezableCollection_Set__SWIG_0Delegate _FreezableCollection_Set__SWIG_0;
    public static void FreezableCollection_Set__SWIG_0(HandleRef jarg1, uint jarg2, HandleRef jarg3)
    {
        _FreezableCollection_Set__SWIG_0(jarg1, jarg2, jarg3);
    }

    public delegate void FreezableCollection_Set__SWIG_1Delegate(HandleRef jarg1, uint jarg2, string jarg3);
    public static FreezableCollection_Set__SWIG_1Delegate _FreezableCollection_Set__SWIG_1;
    public static void FreezableCollection_Set__SWIG_1(HandleRef jarg1, uint jarg2, string jarg3)
    {
        _FreezableCollection_Set__SWIG_1(jarg1, jarg2, jarg3);
    }

    public delegate uint FreezableCollection_Add__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2);
    public static FreezableCollection_Add__SWIG_0Delegate _FreezableCollection_Add__SWIG_0;
    public static uint FreezableCollection_Add__SWIG_0(HandleRef jarg1, HandleRef jarg2)
    {
        uint ret = _FreezableCollection_Add__SWIG_0(jarg1, jarg2);

        return ret;
    }

    public delegate uint FreezableCollection_Add__SWIG_1Delegate(HandleRef jarg1, string jarg2);
    public static FreezableCollection_Add__SWIG_1Delegate _FreezableCollection_Add__SWIG_1;
    public static uint FreezableCollection_Add__SWIG_1(HandleRef jarg1, string jarg2)
    {
        uint ret = _FreezableCollection_Add__SWIG_1(jarg1, jarg2);

        return ret;
    }

    public delegate void FreezableCollection_ClearDelegate(HandleRef jarg1);
    public static FreezableCollection_ClearDelegate _FreezableCollection_Clear;
    public static void FreezableCollection_Clear(HandleRef jarg1)
    {
        _FreezableCollection_Clear(jarg1);
    }

    public delegate bool FreezableCollection_ContainsDelegate(HandleRef jarg1, HandleRef jarg2);
    public static FreezableCollection_ContainsDelegate _FreezableCollection_Contains;
    public static bool FreezableCollection_Contains(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _FreezableCollection_Contains(jarg1, jarg2);

        return ret;
    }

    public delegate int FreezableCollection_IndexOfDelegate(HandleRef jarg1, HandleRef jarg2);
    public static FreezableCollection_IndexOfDelegate _FreezableCollection_IndexOf;
    public static int FreezableCollection_IndexOf(HandleRef jarg1, HandleRef jarg2)
    {
        int ret = _FreezableCollection_IndexOf(jarg1, jarg2);

        return ret;
    }

    public delegate void FreezableCollection_Insert__SWIG_0Delegate(HandleRef jarg1, uint jarg2, HandleRef jarg3);
    public static FreezableCollection_Insert__SWIG_0Delegate _FreezableCollection_Insert__SWIG_0;
    public static void FreezableCollection_Insert__SWIG_0(HandleRef jarg1, uint jarg2, HandleRef jarg3)
    {
        _FreezableCollection_Insert__SWIG_0(jarg1, jarg2, jarg3);
    }

    public delegate void FreezableCollection_Insert__SWIG_1Delegate(HandleRef jarg1, uint jarg2, string jarg3);
    public static FreezableCollection_Insert__SWIG_1Delegate _FreezableCollection_Insert__SWIG_1;
    public static void FreezableCollection_Insert__SWIG_1(HandleRef jarg1, uint jarg2, string jarg3)
    {
        _FreezableCollection_Insert__SWIG_1(jarg1, jarg2, jarg3);
    }

    public delegate void FreezableCollection_RemoveDelegate(HandleRef jarg1, HandleRef jarg2);
    public static FreezableCollection_RemoveDelegate _FreezableCollection_Remove;
    public static void FreezableCollection_Remove(HandleRef jarg1, HandleRef jarg2)
    {
        _FreezableCollection_Remove(jarg1, jarg2);
    }

    public delegate void FreezableCollection_RemoveAtDelegate(HandleRef jarg1, uint jarg2);
    public static FreezableCollection_RemoveAtDelegate _FreezableCollection_RemoveAt;
    public static void FreezableCollection_RemoveAt(HandleRef jarg1, uint jarg2)
    {
        _FreezableCollection_RemoveAt(jarg1, jarg2);
    }

    public delegate IntPtr FreezableCollection_GetIteratorDelegate(HandleRef jarg1);
    public static FreezableCollection_GetIteratorDelegate _FreezableCollection_GetIterator;
    public static IntPtr FreezableCollection_GetIterator(HandleRef jarg1)
    {
        IntPtr ret = _FreezableCollection_GetIterator(jarg1);

        return ret;
    }

    public delegate IntPtr FreezableCollection_CollectionChangedDelegate(HandleRef jarg1);
    public static FreezableCollection_CollectionChangedDelegate _FreezableCollection_CollectionChanged;
    public static IntPtr FreezableCollection_CollectionChanged(HandleRef jarg1)
    {
        IntPtr ret = _FreezableCollection_CollectionChanged(jarg1);

        return ret;
    }

    public delegate IntPtr IdOfTypedFreezableCollectionDelegate(HandleRef jarg1);
    public static IdOfTypedFreezableCollectionDelegate _IdOfTypedFreezableCollection;
    public static IntPtr IdOfTypedFreezableCollection(HandleRef jarg1)
    {
        IntPtr ret = _IdOfTypedFreezableCollection(jarg1);

        return ret;
    }

    public delegate IntPtr new_GeometryGroupDelegate();
    public static new_GeometryGroupDelegate _new_GeometryGroup;
    public static IntPtr new_GeometryGroup()
    {
        IntPtr ret = _new_GeometryGroup();

        return ret;
    }

    public delegate void delete_GeometryGroupDelegate(HandleRef jarg1);
    public static delete_GeometryGroupDelegate _delete_GeometryGroup;
    public static void delete_GeometryGroup(HandleRef jarg1)
    {
        _delete_GeometryGroup(jarg1);
    }

    public delegate IntPtr GeometryGroup_GetChildrenDelegate(HandleRef jarg1);
    public static GeometryGroup_GetChildrenDelegate _GeometryGroup_GetChildren;
    public static IntPtr GeometryGroup_GetChildren(HandleRef jarg1)
    {
        IntPtr ret = _GeometryGroup_GetChildren(jarg1);

        return ret;
    }

    public delegate void GeometryGroup_SetChildrenDelegate(HandleRef jarg1, HandleRef jarg2);
    public static GeometryGroup_SetChildrenDelegate _GeometryGroup_SetChildren;
    public static void GeometryGroup_SetChildren(HandleRef jarg1, HandleRef jarg2)
    {
        _GeometryGroup_SetChildren(jarg1, jarg2);
    }

    public delegate int GeometryGroup_GetFillRuleDelegate(HandleRef jarg1);
    public static GeometryGroup_GetFillRuleDelegate _GeometryGroup_GetFillRule;
    public static int GeometryGroup_GetFillRule(HandleRef jarg1)
    {
        int ret = _GeometryGroup_GetFillRule(jarg1);

        return ret;
    }

    public delegate void GeometryGroup_SetFillRuleDelegate(HandleRef jarg1, int jarg2);
    public static GeometryGroup_SetFillRuleDelegate _GeometryGroup_SetFillRule;
    public static void GeometryGroup_SetFillRule(HandleRef jarg1, int jarg2)
    {
        _GeometryGroup_SetFillRule(jarg1, jarg2);
    }

    public delegate void GeometryGroup_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static GeometryGroup_CreateRenderProxyDelegate _GeometryGroup_CreateRenderProxy;
    public static void GeometryGroup_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _GeometryGroup_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void GeometryGroup_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static GeometryGroup_UpdateRenderProxyDelegate _GeometryGroup_UpdateRenderProxy;
    public static void GeometryGroup_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _GeometryGroup_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void delete_GradientBrushDelegate(HandleRef jarg1);
    public static delete_GradientBrushDelegate _delete_GradientBrush;
    public static void delete_GradientBrush(HandleRef jarg1)
    {
        _delete_GradientBrush(jarg1);
    }

    public delegate int GradientBrush_GetColorInterpolationModeDelegate(HandleRef jarg1);
    public static GradientBrush_GetColorInterpolationModeDelegate _GradientBrush_GetColorInterpolationMode;
    public static int GradientBrush_GetColorInterpolationMode(HandleRef jarg1)
    {
        int ret = _GradientBrush_GetColorInterpolationMode(jarg1);

        return ret;
    }

    public delegate void GradientBrush_SetColorInterpolationModeDelegate(HandleRef jarg1, int jarg2);
    public static GradientBrush_SetColorInterpolationModeDelegate _GradientBrush_SetColorInterpolationMode;
    public static void GradientBrush_SetColorInterpolationMode(HandleRef jarg1, int jarg2)
    {
        _GradientBrush_SetColorInterpolationMode(jarg1, jarg2);
    }

    public delegate IntPtr GradientBrush_GetGradientStopsDelegate(HandleRef jarg1);
    public static GradientBrush_GetGradientStopsDelegate _GradientBrush_GetGradientStops;
    public static IntPtr GradientBrush_GetGradientStops(HandleRef jarg1)
    {
        IntPtr ret = _GradientBrush_GetGradientStops(jarg1);

        return ret;
    }

    public delegate void GradientBrush_SetGradientStopsDelegate(HandleRef jarg1, HandleRef jarg2);
    public static GradientBrush_SetGradientStopsDelegate _GradientBrush_SetGradientStops;
    public static void GradientBrush_SetGradientStops(HandleRef jarg1, HandleRef jarg2)
    {
        _GradientBrush_SetGradientStops(jarg1, jarg2);
    }

    public delegate int GradientBrush_GetMappingModeDelegate(HandleRef jarg1);
    public static GradientBrush_GetMappingModeDelegate _GradientBrush_GetMappingMode;
    public static int GradientBrush_GetMappingMode(HandleRef jarg1)
    {
        int ret = _GradientBrush_GetMappingMode(jarg1);

        return ret;
    }

    public delegate void GradientBrush_SetMappingModeDelegate(HandleRef jarg1, int jarg2);
    public static GradientBrush_SetMappingModeDelegate _GradientBrush_SetMappingMode;
    public static void GradientBrush_SetMappingMode(HandleRef jarg1, int jarg2)
    {
        _GradientBrush_SetMappingMode(jarg1, jarg2);
    }

    public delegate int GradientBrush_GetSpreadMethodDelegate(HandleRef jarg1);
    public static GradientBrush_GetSpreadMethodDelegate _GradientBrush_GetSpreadMethod;
    public static int GradientBrush_GetSpreadMethod(HandleRef jarg1)
    {
        int ret = _GradientBrush_GetSpreadMethod(jarg1);

        return ret;
    }

    public delegate void GradientBrush_SetSpreadMethodDelegate(HandleRef jarg1, int jarg2);
    public static GradientBrush_SetSpreadMethodDelegate _GradientBrush_SetSpreadMethod;
    public static void GradientBrush_SetSpreadMethod(HandleRef jarg1, int jarg2)
    {
        _GradientBrush_SetSpreadMethod(jarg1, jarg2);
    }

    public delegate void GradientBrush_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static GradientBrush_UpdateRenderProxyDelegate _GradientBrush_UpdateRenderProxy;
    public static void GradientBrush_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _GradientBrush_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate IntPtr new_GradientStopDelegate();
    public static new_GradientStopDelegate _new_GradientStop;
    public static IntPtr new_GradientStop()
    {
        IntPtr ret = _new_GradientStop();

        return ret;
    }

    public delegate IntPtr GradientStop_GetColorDelegate(HandleRef jarg1);
    public static GradientStop_GetColorDelegate _GradientStop_GetColor;
    public static IntPtr GradientStop_GetColor(HandleRef jarg1)
    {
        IntPtr ret = _GradientStop_GetColor(jarg1);

        return ret;
    }

    public delegate void GradientStop_SetColorDelegate(HandleRef jarg1, HandleRef jarg2);
    public static GradientStop_SetColorDelegate _GradientStop_SetColor;
    public static void GradientStop_SetColor(HandleRef jarg1, HandleRef jarg2)
    {
        _GradientStop_SetColor(jarg1, jarg2);
    }

    public delegate float GradientStop_GetOffsetDelegate(HandleRef jarg1);
    public static GradientStop_GetOffsetDelegate _GradientStop_GetOffset;
    public static float GradientStop_GetOffset(HandleRef jarg1)
    {
        float ret = _GradientStop_GetOffset(jarg1);

        return ret;
    }

    public delegate void GradientStop_SetOffsetDelegate(HandleRef jarg1, float jarg2);
    public static GradientStop_SetOffsetDelegate _GradientStop_SetOffset;
    public static void GradientStop_SetOffset(HandleRef jarg1, float jarg2)
    {
        _GradientStop_SetOffset(jarg1, jarg2);
    }

    public delegate void delete_GradientStopDelegate(HandleRef jarg1);
    public static delete_GradientStopDelegate _delete_GradientStop;
    public static void delete_GradientStop(HandleRef jarg1)
    {
        _delete_GradientStop(jarg1);
    }

    public delegate IntPtr new_GradientStopCollectionDelegate();
    public static new_GradientStopCollectionDelegate _new_GradientStopCollection;
    public static IntPtr new_GradientStopCollection()
    {
        IntPtr ret = _new_GradientStopCollection();

        return ret;
    }

    public delegate void delete_GradientStopCollectionDelegate(HandleRef jarg1);
    public static delete_GradientStopCollectionDelegate _delete_GradientStopCollection;
    public static void delete_GradientStopCollection(HandleRef jarg1)
    {
        _delete_GradientStopCollection(jarg1);
    }

    public delegate void GradientStopCollection_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static GradientStopCollection_CreateRenderProxyDelegate _GradientStopCollection_CreateRenderProxy;
    public static void GradientStopCollection_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _GradientStopCollection_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void GradientStopCollection_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static GradientStopCollection_UpdateRenderProxyDelegate _GradientStopCollection_UpdateRenderProxy;
    public static void GradientStopCollection_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _GradientStopCollection_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void GradientStopCollection_UnregisterRendererDelegate(HandleRef jarg1, HandleRef jarg2);
    public static GradientStopCollection_UnregisterRendererDelegate _GradientStopCollection_UnregisterRenderer;
    public static void GradientStopCollection_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2)
    {
        _GradientStopCollection_UnregisterRenderer(jarg1, jarg2);
    }

    public delegate IntPtr new_GridDelegate();
    public static new_GridDelegate _new_Grid;
    public static IntPtr new_Grid()
    {
        IntPtr ret = _new_Grid();

        return ret;
    }

    public delegate void delete_GridDelegate(HandleRef jarg1);
    public static delete_GridDelegate _delete_Grid;
    public static void delete_Grid(HandleRef jarg1)
    {
        _delete_Grid(jarg1);
    }

    public delegate IntPtr Grid_GetColumnDefinitionsDelegate(HandleRef jarg1);
    public static Grid_GetColumnDefinitionsDelegate _Grid_GetColumnDefinitions;
    public static IntPtr Grid_GetColumnDefinitions(HandleRef jarg1)
    {
        IntPtr ret = _Grid_GetColumnDefinitions(jarg1);

        return ret;
    }

    public delegate uint Grid_GetColumnDelegate(HandleRef jarg1);
    public static Grid_GetColumnDelegate _Grid_GetColumn;
    public static uint Grid_GetColumn(HandleRef jarg1)
    {
        uint ret = _Grid_GetColumn(jarg1);

        return ret;
    }

    public delegate void Grid_SetColumnDelegate(HandleRef jarg1, uint jarg2);
    public static Grid_SetColumnDelegate _Grid_SetColumn;
    public static void Grid_SetColumn(HandleRef jarg1, uint jarg2)
    {
        _Grid_SetColumn(jarg1, jarg2);
    }

    public delegate uint Grid_GetColumnSpanDelegate(HandleRef jarg1);
    public static Grid_GetColumnSpanDelegate _Grid_GetColumnSpan;
    public static uint Grid_GetColumnSpan(HandleRef jarg1)
    {
        uint ret = _Grid_GetColumnSpan(jarg1);

        return ret;
    }

    public delegate void Grid_SetColumnSpanDelegate(HandleRef jarg1, uint jarg2);
    public static Grid_SetColumnSpanDelegate _Grid_SetColumnSpan;
    public static void Grid_SetColumnSpan(HandleRef jarg1, uint jarg2)
    {
        _Grid_SetColumnSpan(jarg1, jarg2);
    }

    public delegate bool Grid_GetIsSharedSizeScopeDelegate(HandleRef jarg1);
    public static Grid_GetIsSharedSizeScopeDelegate _Grid_GetIsSharedSizeScope;
    public static bool Grid_GetIsSharedSizeScope(HandleRef jarg1)
    {
        bool ret = _Grid_GetIsSharedSizeScope(jarg1);

        return ret;
    }

    public delegate void Grid_SetIsSharedSizeScopeDelegate(HandleRef jarg1, bool jarg2);
    public static Grid_SetIsSharedSizeScopeDelegate _Grid_SetIsSharedSizeScope;
    public static void Grid_SetIsSharedSizeScope(HandleRef jarg1, bool jarg2)
    {
        _Grid_SetIsSharedSizeScope(jarg1, jarg2);
    }

    public delegate IntPtr Grid_GetRowDefinitionsDelegate(HandleRef jarg1);
    public static Grid_GetRowDefinitionsDelegate _Grid_GetRowDefinitions;
    public static IntPtr Grid_GetRowDefinitions(HandleRef jarg1)
    {
        IntPtr ret = _Grid_GetRowDefinitions(jarg1);

        return ret;
    }

    public delegate uint Grid_GetRowDelegate(HandleRef jarg1);
    public static Grid_GetRowDelegate _Grid_GetRow;
    public static uint Grid_GetRow(HandleRef jarg1)
    {
        uint ret = _Grid_GetRow(jarg1);

        return ret;
    }

    public delegate void Grid_SetRowDelegate(HandleRef jarg1, uint jarg2);
    public static Grid_SetRowDelegate _Grid_SetRow;
    public static void Grid_SetRow(HandleRef jarg1, uint jarg2)
    {
        _Grid_SetRow(jarg1, jarg2);
    }

    public delegate uint Grid_GetRowSpanDelegate(HandleRef jarg1);
    public static Grid_GetRowSpanDelegate _Grid_GetRowSpan;
    public static uint Grid_GetRowSpan(HandleRef jarg1)
    {
        uint ret = _Grid_GetRowSpan(jarg1);

        return ret;
    }

    public delegate void Grid_SetRowSpanDelegate(HandleRef jarg1, uint jarg2);
    public static Grid_SetRowSpanDelegate _Grid_SetRowSpan;
    public static void Grid_SetRowSpan(HandleRef jarg1, uint jarg2)
    {
        _Grid_SetRowSpan(jarg1, jarg2);
    }

    public delegate bool Grid_GetShowGridLinesDelegate(HandleRef jarg1);
    public static Grid_GetShowGridLinesDelegate _Grid_GetShowGridLines;
    public static bool Grid_GetShowGridLines(HandleRef jarg1)
    {
        bool ret = _Grid_GetShowGridLines(jarg1);

        return ret;
    }

    public delegate void Grid_SetShowGridLinesDelegate(HandleRef jarg1, bool jarg2);
    public static Grid_SetShowGridLinesDelegate _Grid_SetShowGridLines;
    public static void Grid_SetShowGridLines(HandleRef jarg1, bool jarg2)
    {
        _Grid_SetShowGridLines(jarg1, jarg2);
    }

    public delegate IntPtr new_GridLength__SWIG_0Delegate();
    public static new_GridLength__SWIG_0Delegate _new_GridLength__SWIG_0;
    public static IntPtr new_GridLength__SWIG_0()
    {
        IntPtr ret = _new_GridLength__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_GridLength__SWIG_1Delegate(float jarg1);
    public static new_GridLength__SWIG_1Delegate _new_GridLength__SWIG_1;
    public static IntPtr new_GridLength__SWIG_1(float jarg1)
    {
        IntPtr ret = _new_GridLength__SWIG_1(jarg1);

        return ret;
    }

    public delegate IntPtr new_GridLength__SWIG_2Delegate(float jarg1, int jarg2);
    public static new_GridLength__SWIG_2Delegate _new_GridLength__SWIG_2;
    public static IntPtr new_GridLength__SWIG_2(float jarg1, int jarg2)
    {
        IntPtr ret = _new_GridLength__SWIG_2(jarg1, jarg2);

        return ret;
    }

    public delegate int GridLength_GetGridUnitTypeDelegate(HandleRef jarg1);
    public static GridLength_GetGridUnitTypeDelegate _GridLength_GetGridUnitType;
    public static int GridLength_GetGridUnitType(HandleRef jarg1)
    {
        int ret = _GridLength_GetGridUnitType(jarg1);

        return ret;
    }

    public delegate bool GridLength_IsAbsoluteDelegate(HandleRef jarg1);
    public static GridLength_IsAbsoluteDelegate _GridLength_IsAbsolute;
    public static bool GridLength_IsAbsolute(HandleRef jarg1)
    {
        bool ret = _GridLength_IsAbsolute(jarg1);

        return ret;
    }

    public delegate bool GridLength_IsAutoDelegate(HandleRef jarg1);
    public static GridLength_IsAutoDelegate _GridLength_IsAuto;
    public static bool GridLength_IsAuto(HandleRef jarg1)
    {
        bool ret = _GridLength_IsAuto(jarg1);

        return ret;
    }

    public delegate bool GridLength_IsStarDelegate(HandleRef jarg1);
    public static GridLength_IsStarDelegate _GridLength_IsStar;
    public static bool GridLength_IsStar(HandleRef jarg1)
    {
        bool ret = _GridLength_IsStar(jarg1);

        return ret;
    }

    public delegate float GridLength_GetValueDelegate(HandleRef jarg1);
    public static GridLength_GetValueDelegate _GridLength_GetValue;
    public static float GridLength_GetValue(HandleRef jarg1)
    {
        float ret = _GridLength_GetValue(jarg1);

        return ret;
    }

    public delegate IntPtr new_GridLength__SWIG_3Delegate(HandleRef jarg1);
    public static new_GridLength__SWIG_3Delegate _new_GridLength__SWIG_3;
    public static IntPtr new_GridLength__SWIG_3(HandleRef jarg1)
    {
        IntPtr ret = _new_GridLength__SWIG_3(jarg1);

        return ret;
    }

    public delegate IntPtr GridLength_ParseDelegate(string jarg1);
    public static GridLength_ParseDelegate _GridLength_Parse;
    public static IntPtr GridLength_Parse(string jarg1)
    {
        IntPtr ret = _GridLength_Parse(jarg1);

        return ret;
    }

    public delegate bool GridLength_TryParseDelegate(string jarg1, HandleRef jarg2);
    public static GridLength_TryParseDelegate _GridLength_TryParse;
    public static bool GridLength_TryParse(string jarg1, HandleRef jarg2)
    {
        bool ret = _GridLength_TryParse(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_GridLengthDelegate(HandleRef jarg1);
    public static delete_GridLengthDelegate _delete_GridLength;
    public static void delete_GridLength(HandleRef jarg1)
    {
        _delete_GridLength(jarg1);
    }

    public delegate IntPtr new_GroupBoxDelegate();
    public static new_GroupBoxDelegate _new_GroupBox;
    public static IntPtr new_GroupBox()
    {
        IntPtr ret = _new_GroupBox();

        return ret;
    }

    public delegate void delete_GroupBoxDelegate(HandleRef jarg1);
    public static delete_GroupBoxDelegate _delete_GroupBox;
    public static void delete_GroupBox(HandleRef jarg1)
    {
        _delete_GroupBox(jarg1);
    }

    public delegate IntPtr new_GroupDescriptionDelegate();
    public static new_GroupDescriptionDelegate _new_GroupDescription;
    public static IntPtr new_GroupDescription()
    {
        IntPtr ret = _new_GroupDescription();

        return ret;
    }

    public delegate void delete_GroupDescriptionDelegate(HandleRef jarg1);
    public static delete_GroupDescriptionDelegate _delete_GroupDescription;
    public static void delete_GroupDescription(HandleRef jarg1)
    {
        _delete_GroupDescription(jarg1);
    }

    public delegate IntPtr new_HeaderedItemsControlDelegate();
    public static new_HeaderedItemsControlDelegate _new_HeaderedItemsControl;
    public static IntPtr new_HeaderedItemsControl()
    {
        IntPtr ret = _new_HeaderedItemsControl();

        return ret;
    }

    public delegate void delete_HeaderedItemsControlDelegate(HandleRef jarg1);
    public static delete_HeaderedItemsControlDelegate _delete_HeaderedItemsControl;
    public static void delete_HeaderedItemsControl(HandleRef jarg1)
    {
        _delete_HeaderedItemsControl(jarg1);
    }

    public delegate bool HeaderedItemsControl_GetHasHeaderDelegate(HandleRef jarg1);
    public static HeaderedItemsControl_GetHasHeaderDelegate _HeaderedItemsControl_GetHasHeader;
    public static bool HeaderedItemsControl_GetHasHeader(HandleRef jarg1)
    {
        bool ret = _HeaderedItemsControl_GetHasHeader(jarg1);

        return ret;
    }

    public delegate IntPtr HeaderedItemsControl_GetHeaderDelegate(HandleRef jarg1);
    public static HeaderedItemsControl_GetHeaderDelegate _HeaderedItemsControl_GetHeader;
    public static IntPtr HeaderedItemsControl_GetHeader(HandleRef jarg1)
    {
        IntPtr ret = _HeaderedItemsControl_GetHeader(jarg1);

        return ret;
    }

    public delegate void HeaderedItemsControl_SetHeaderDelegate(HandleRef jarg1, HandleRef jarg2);
    public static HeaderedItemsControl_SetHeaderDelegate _HeaderedItemsControl_SetHeader;
    public static void HeaderedItemsControl_SetHeader(HandleRef jarg1, HandleRef jarg2)
    {
        _HeaderedItemsControl_SetHeader(jarg1, jarg2);
    }

    public delegate IntPtr HeaderedItemsControl_GetHeaderStringFormatDelegate(HandleRef jarg1);
    public static HeaderedItemsControl_GetHeaderStringFormatDelegate _HeaderedItemsControl_GetHeaderStringFormat;
    public static IntPtr HeaderedItemsControl_GetHeaderStringFormat(HandleRef jarg1)
    {
        IntPtr ret = _HeaderedItemsControl_GetHeaderStringFormat(jarg1);

        return ret;
    }

    public delegate void HeaderedItemsControl_SetHeaderStringFormatDelegate(HandleRef jarg1, IntPtr jarg2);
    public static HeaderedItemsControl_SetHeaderStringFormatDelegate _HeaderedItemsControl_SetHeaderStringFormat;
    public static void HeaderedItemsControl_SetHeaderStringFormat(HandleRef jarg1, IntPtr jarg2)
    {
        _HeaderedItemsControl_SetHeaderStringFormat(jarg1, jarg2);
    }

    public delegate IntPtr HeaderedItemsControl_GetHeaderTemplateDelegate(HandleRef jarg1);
    public static HeaderedItemsControl_GetHeaderTemplateDelegate _HeaderedItemsControl_GetHeaderTemplate;
    public static IntPtr HeaderedItemsControl_GetHeaderTemplate(HandleRef jarg1)
    {
        IntPtr ret = _HeaderedItemsControl_GetHeaderTemplate(jarg1);

        return ret;
    }

    public delegate void HeaderedItemsControl_SetHeaderTemplateDelegate(HandleRef jarg1, HandleRef jarg2);
    public static HeaderedItemsControl_SetHeaderTemplateDelegate _HeaderedItemsControl_SetHeaderTemplate;
    public static void HeaderedItemsControl_SetHeaderTemplate(HandleRef jarg1, HandleRef jarg2)
    {
        _HeaderedItemsControl_SetHeaderTemplate(jarg1, jarg2);
    }

    public delegate IntPtr HeaderedItemsControl_GetHeaderTemplateSelectorDelegate(HandleRef jarg1);
    public static HeaderedItemsControl_GetHeaderTemplateSelectorDelegate _HeaderedItemsControl_GetHeaderTemplateSelector;
    public static IntPtr HeaderedItemsControl_GetHeaderTemplateSelector(HandleRef jarg1)
    {
        IntPtr ret = _HeaderedItemsControl_GetHeaderTemplateSelector(jarg1);

        return ret;
    }

    public delegate void HeaderedItemsControl_SetHeaderTemplateSelectorDelegate(HandleRef jarg1, HandleRef jarg2);
    public static HeaderedItemsControl_SetHeaderTemplateSelectorDelegate _HeaderedItemsControl_SetHeaderTemplateSelector;
    public static void HeaderedItemsControl_SetHeaderTemplateSelector(HandleRef jarg1, HandleRef jarg2)
    {
        _HeaderedItemsControl_SetHeaderTemplateSelector(jarg1, jarg2);
    }

    public delegate void HeaderedItemsControl_PrepareContainerForItemDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static HeaderedItemsControl_PrepareContainerForItemDelegate _HeaderedItemsControl_PrepareContainerForItem;
    public static void HeaderedItemsControl_PrepareContainerForItem(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _HeaderedItemsControl_PrepareContainerForItem(jarg1, jarg2, jarg3);
    }

    public delegate IntPtr new_IconSource__SWIG_0Delegate();
    public static new_IconSource__SWIG_0Delegate _new_IconSource__SWIG_0;
    public static IntPtr new_IconSource__SWIG_0()
    {
        IntPtr ret = _new_IconSource__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_IconSource__SWIG_1Delegate(HandleRef jarg1);
    public static new_IconSource__SWIG_1Delegate _new_IconSource__SWIG_1;
    public static IntPtr new_IconSource__SWIG_1(HandleRef jarg1)
    {
        IntPtr ret = _new_IconSource__SWIG_1(jarg1);

        return ret;
    }

    public delegate void delete_IconSourceDelegate(HandleRef jarg1);
    public static delete_IconSourceDelegate _delete_IconSource;
    public static void delete_IconSource(HandleRef jarg1)
    {
        _delete_IconSource(jarg1);
    }

    public delegate void IconSource_RegisterDelegate(HandleRef jarg1, HandleRef jarg2);
    public static IconSource_RegisterDelegate _IconSource_Register;
    public static void IconSource_Register(HandleRef jarg1, HandleRef jarg2)
    {
        _IconSource_Register(jarg1, jarg2);
    }

    public delegate bool IconSource_IsRegisteredDelegate(HandleRef jarg1, HandleRef jarg2);
    public static IconSource_IsRegisteredDelegate _IconSource_IsRegistered;
    public static bool IconSource_IsRegistered(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _IconSource_IsRegistered(jarg1, jarg2);

        return ret;
    }

    public delegate void IconSource_ClearCacheDelegate();
    public static IconSource_ClearCacheDelegate _IconSource_ClearCache;
    public static void IconSource_ClearCache()
    {
        _IconSource_ClearCache();
    }

    public delegate IntPtr IconSource_GetSourceDelegate(HandleRef jarg1);
    public static IconSource_GetSourceDelegate _IconSource_GetSource;
    public static IntPtr IconSource_GetSource(HandleRef jarg1)
    {
        IntPtr ret = _IconSource_GetSource(jarg1);

        return ret;
    }

    public delegate IntPtr IconSource_GetImageSetDelegate(HandleRef jarg1);
    public static IconSource_GetImageSetDelegate _IconSource_GetImageSet;
    public static IntPtr IconSource_GetImageSet(HandleRef jarg1)
    {
        IntPtr ret = _IconSource_GetImageSet(jarg1);

        return ret;
    }

    public delegate void IconSource_SetImageSetDelegate(HandleRef jarg1, HandleRef jarg2);
    public static IconSource_SetImageSetDelegate _IconSource_SetImageSet;
    public static void IconSource_SetImageSet(HandleRef jarg1, HandleRef jarg2)
    {
        _IconSource_SetImageSet(jarg1, jarg2);
    }

    public delegate IntPtr new_ImageDelegate();
    public static new_ImageDelegate _new_Image;
    public static IntPtr new_Image()
    {
        IntPtr ret = _new_Image();

        return ret;
    }

    public delegate void delete_ImageDelegate(HandleRef jarg1);
    public static delete_ImageDelegate _delete_Image;
    public static void delete_Image(HandleRef jarg1)
    {
        _delete_Image(jarg1);
    }

    public delegate IntPtr Image_GetSourceDelegate(HandleRef jarg1);
    public static Image_GetSourceDelegate _Image_GetSource;
    public static IntPtr Image_GetSource(HandleRef jarg1)
    {
        IntPtr ret = _Image_GetSource(jarg1);

        return ret;
    }

    public delegate void Image_SetSourceDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Image_SetSourceDelegate _Image_SetSource;
    public static void Image_SetSource(HandleRef jarg1, HandleRef jarg2)
    {
        _Image_SetSource(jarg1, jarg2);
    }

    public delegate int Image_GetStretchDelegate(HandleRef jarg1);
    public static Image_GetStretchDelegate _Image_GetStretch;
    public static int Image_GetStretch(HandleRef jarg1)
    {
        int ret = _Image_GetStretch(jarg1);

        return ret;
    }

    public delegate void Image_SetStretchDelegate(HandleRef jarg1, int jarg2);
    public static Image_SetStretchDelegate _Image_SetStretch;
    public static void Image_SetStretch(HandleRef jarg1, int jarg2)
    {
        _Image_SetStretch(jarg1, jarg2);
    }

    public delegate int Image_GetStretchDirectionDelegate(HandleRef jarg1);
    public static Image_GetStretchDirectionDelegate _Image_GetStretchDirection;
    public static int Image_GetStretchDirection(HandleRef jarg1)
    {
        int ret = _Image_GetStretchDirection(jarg1);

        return ret;
    }

    public delegate void Image_SetStretchDirectionDelegate(HandleRef jarg1, int jarg2);
    public static Image_SetStretchDirectionDelegate _Image_SetStretchDirection;
    public static void Image_SetStretchDirection(HandleRef jarg1, int jarg2)
    {
        _Image_SetStretchDirection(jarg1, jarg2);
    }

    public delegate void Image_InvalidateImageDelegate(HandleRef jarg1);
    public static Image_InvalidateImageDelegate _Image_InvalidateImage;
    public static void Image_InvalidateImage(HandleRef jarg1)
    {
        _Image_InvalidateImage(jarg1);
    }

    public delegate IntPtr new_ImageAtlasListDelegate();
    public static new_ImageAtlasListDelegate _new_ImageAtlasList;
    public static IntPtr new_ImageAtlasList()
    {
        IntPtr ret = _new_ImageAtlasList();

        return ret;
    }

    public delegate void delete_ImageAtlasListDelegate(HandleRef jarg1);
    public static delete_ImageAtlasListDelegate _delete_ImageAtlasList;
    public static void delete_ImageAtlasList(HandleRef jarg1)
    {
        _delete_ImageAtlasList(jarg1);
    }

    public delegate void ImageAtlasList_AddDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ImageAtlasList_AddDelegate _ImageAtlasList_Add;
    public static void ImageAtlasList_Add(HandleRef jarg1, HandleRef jarg2)
    {
        _ImageAtlasList_Add(jarg1, jarg2);
    }

    public delegate uint ImageAtlasList_CountDelegate(HandleRef jarg1);
    public static ImageAtlasList_CountDelegate _ImageAtlasList_Count;
    public static uint ImageAtlasList_Count(HandleRef jarg1)
    {
        uint ret = _ImageAtlasList_Count(jarg1);

        return ret;
    }

    public delegate IntPtr ImageAtlasList_GetDelegate(HandleRef jarg1, uint jarg2);
    public static ImageAtlasList_GetDelegate _ImageAtlasList_Get;
    public static IntPtr ImageAtlasList_Get(HandleRef jarg1, uint jarg2)
    {
        IntPtr ret = _ImageAtlasList_Get(jarg1, jarg2);

        return ret;
    }

    public delegate void ImageAtlasList_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static ImageAtlasList_CreateRenderProxyDelegate _ImageAtlasList_CreateRenderProxy;
    public static void ImageAtlasList_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _ImageAtlasList_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void ImageAtlasList_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static ImageAtlasList_UpdateRenderProxyDelegate _ImageAtlasList_UpdateRenderProxy;
    public static void ImageAtlasList_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _ImageAtlasList_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void ImageAtlasList_UnregisterRendererDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ImageAtlasList_UnregisterRendererDelegate _ImageAtlasList_UnregisterRenderer;
    public static void ImageAtlasList_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2)
    {
        _ImageAtlasList_UnregisterRenderer(jarg1, jarg2);
    }

    public delegate void delete_TileBrushDelegate(HandleRef jarg1);
    public static delete_TileBrushDelegate _delete_TileBrush;
    public static void delete_TileBrush(HandleRef jarg1)
    {
        _delete_TileBrush(jarg1);
    }

    public delegate int TileBrush_GetAlignmentXDelegate(HandleRef jarg1);
    public static TileBrush_GetAlignmentXDelegate _TileBrush_GetAlignmentX;
    public static int TileBrush_GetAlignmentX(HandleRef jarg1)
    {
        int ret = _TileBrush_GetAlignmentX(jarg1);

        return ret;
    }

    public delegate void TileBrush_SetAlignmentXDelegate(HandleRef jarg1, int jarg2);
    public static TileBrush_SetAlignmentXDelegate _TileBrush_SetAlignmentX;
    public static void TileBrush_SetAlignmentX(HandleRef jarg1, int jarg2)
    {
        _TileBrush_SetAlignmentX(jarg1, jarg2);
    }

    public delegate int TileBrush_GetAlignmentYDelegate(HandleRef jarg1);
    public static TileBrush_GetAlignmentYDelegate _TileBrush_GetAlignmentY;
    public static int TileBrush_GetAlignmentY(HandleRef jarg1)
    {
        int ret = _TileBrush_GetAlignmentY(jarg1);

        return ret;
    }

    public delegate void TileBrush_SetAlignmentYDelegate(HandleRef jarg1, int jarg2);
    public static TileBrush_SetAlignmentYDelegate _TileBrush_SetAlignmentY;
    public static void TileBrush_SetAlignmentY(HandleRef jarg1, int jarg2)
    {
        _TileBrush_SetAlignmentY(jarg1, jarg2);
    }

    public delegate int TileBrush_GetStretchDelegate(HandleRef jarg1);
    public static TileBrush_GetStretchDelegate _TileBrush_GetStretch;
    public static int TileBrush_GetStretch(HandleRef jarg1)
    {
        int ret = _TileBrush_GetStretch(jarg1);

        return ret;
    }

    public delegate void TileBrush_SetStretchDelegate(HandleRef jarg1, int jarg2);
    public static TileBrush_SetStretchDelegate _TileBrush_SetStretch;
    public static void TileBrush_SetStretch(HandleRef jarg1, int jarg2)
    {
        _TileBrush_SetStretch(jarg1, jarg2);
    }

    public delegate int TileBrush_GetTileModeDelegate(HandleRef jarg1);
    public static TileBrush_GetTileModeDelegate _TileBrush_GetTileMode;
    public static int TileBrush_GetTileMode(HandleRef jarg1)
    {
        int ret = _TileBrush_GetTileMode(jarg1);

        return ret;
    }

    public delegate void TileBrush_SetTileModeDelegate(HandleRef jarg1, int jarg2);
    public static TileBrush_SetTileModeDelegate _TileBrush_SetTileMode;
    public static void TileBrush_SetTileMode(HandleRef jarg1, int jarg2)
    {
        _TileBrush_SetTileMode(jarg1, jarg2);
    }

    public delegate IntPtr TileBrush_GetViewboxDelegate(HandleRef jarg1);
    public static TileBrush_GetViewboxDelegate _TileBrush_GetViewbox;
    public static IntPtr TileBrush_GetViewbox(HandleRef jarg1)
    {
        IntPtr ret = _TileBrush_GetViewbox(jarg1);

        return ret;
    }

    public delegate void TileBrush_SetViewboxDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TileBrush_SetViewboxDelegate _TileBrush_SetViewbox;
    public static void TileBrush_SetViewbox(HandleRef jarg1, HandleRef jarg2)
    {
        _TileBrush_SetViewbox(jarg1, jarg2);
    }

    public delegate int TileBrush_GetViewboxUnitsDelegate(HandleRef jarg1);
    public static TileBrush_GetViewboxUnitsDelegate _TileBrush_GetViewboxUnits;
    public static int TileBrush_GetViewboxUnits(HandleRef jarg1)
    {
        int ret = _TileBrush_GetViewboxUnits(jarg1);

        return ret;
    }

    public delegate void TileBrush_SetViewboxUnitsDelegate(HandleRef jarg1, int jarg2);
    public static TileBrush_SetViewboxUnitsDelegate _TileBrush_SetViewboxUnits;
    public static void TileBrush_SetViewboxUnits(HandleRef jarg1, int jarg2)
    {
        _TileBrush_SetViewboxUnits(jarg1, jarg2);
    }

    public delegate IntPtr TileBrush_GetViewportDelegate(HandleRef jarg1);
    public static TileBrush_GetViewportDelegate _TileBrush_GetViewport;
    public static IntPtr TileBrush_GetViewport(HandleRef jarg1)
    {
        IntPtr ret = _TileBrush_GetViewport(jarg1);

        return ret;
    }

    public delegate void TileBrush_SetViewportDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TileBrush_SetViewportDelegate _TileBrush_SetViewport;
    public static void TileBrush_SetViewport(HandleRef jarg1, HandleRef jarg2)
    {
        _TileBrush_SetViewport(jarg1, jarg2);
    }

    public delegate int TileBrush_GetViewportUnitsDelegate(HandleRef jarg1);
    public static TileBrush_GetViewportUnitsDelegate _TileBrush_GetViewportUnits;
    public static int TileBrush_GetViewportUnits(HandleRef jarg1)
    {
        int ret = _TileBrush_GetViewportUnits(jarg1);

        return ret;
    }

    public delegate void TileBrush_SetViewportUnitsDelegate(HandleRef jarg1, int jarg2);
    public static TileBrush_SetViewportUnitsDelegate _TileBrush_SetViewportUnits;
    public static void TileBrush_SetViewportUnits(HandleRef jarg1, int jarg2)
    {
        _TileBrush_SetViewportUnits(jarg1, jarg2);
    }

    public delegate void TileBrush_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static TileBrush_UpdateRenderProxyDelegate _TileBrush_UpdateRenderProxy;
    public static void TileBrush_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _TileBrush_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate IntPtr new_ImageBrushDelegate();
    public static new_ImageBrushDelegate _new_ImageBrush;
    public static IntPtr new_ImageBrush()
    {
        IntPtr ret = _new_ImageBrush();

        return ret;
    }

    public delegate void delete_ImageBrushDelegate(HandleRef jarg1);
    public static delete_ImageBrushDelegate _delete_ImageBrush;
    public static void delete_ImageBrush(HandleRef jarg1)
    {
        _delete_ImageBrush(jarg1);
    }

    public delegate IntPtr ImageBrush_GetImageSourceDelegate(HandleRef jarg1);
    public static ImageBrush_GetImageSourceDelegate _ImageBrush_GetImageSource;
    public static IntPtr ImageBrush_GetImageSource(HandleRef jarg1)
    {
        IntPtr ret = _ImageBrush_GetImageSource(jarg1);

        return ret;
    }

    public delegate void ImageBrush_SetImageSourceDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ImageBrush_SetImageSourceDelegate _ImageBrush_SetImageSource;
    public static void ImageBrush_SetImageSource(HandleRef jarg1, HandleRef jarg2)
    {
        _ImageBrush_SetImageSource(jarg1, jarg2);
    }

    public delegate void ImageBrush_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static ImageBrush_CreateRenderProxyDelegate _ImageBrush_CreateRenderProxy;
    public static void ImageBrush_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _ImageBrush_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void ImageBrush_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static ImageBrush_UpdateRenderProxyDelegate _ImageBrush_UpdateRenderProxy;
    public static void ImageBrush_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _ImageBrush_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate IntPtr new_InputBinding__SWIG_0Delegate();
    public static new_InputBinding__SWIG_0Delegate _new_InputBinding__SWIG_0;
    public static IntPtr new_InputBinding__SWIG_0()
    {
        IntPtr ret = _new_InputBinding__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_InputBinding__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static new_InputBinding__SWIG_1Delegate _new_InputBinding__SWIG_1;
    public static IntPtr new_InputBinding__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_InputBinding__SWIG_1(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_InputBindingDelegate(HandleRef jarg1);
    public static delete_InputBindingDelegate _delete_InputBinding;
    public static void delete_InputBinding(HandleRef jarg1)
    {
        _delete_InputBinding(jarg1);
    }

    public delegate IntPtr InputBinding_GetCommandDelegate(HandleRef jarg1);
    public static InputBinding_GetCommandDelegate _InputBinding_GetCommand;
    public static IntPtr InputBinding_GetCommand(HandleRef jarg1)
    {
        IntPtr ret = _InputBinding_GetCommand(jarg1);

        return ret;
    }

    public delegate void InputBinding_SetCommandDelegate(HandleRef jarg1, HandleRef jarg2);
    public static InputBinding_SetCommandDelegate _InputBinding_SetCommand;
    public static void InputBinding_SetCommand(HandleRef jarg1, HandleRef jarg2)
    {
        _InputBinding_SetCommand(jarg1, jarg2);
    }

    public delegate IntPtr InputBinding_GetCommandParameterDelegate(HandleRef jarg1);
    public static InputBinding_GetCommandParameterDelegate _InputBinding_GetCommandParameter;
    public static IntPtr InputBinding_GetCommandParameter(HandleRef jarg1)
    {
        IntPtr ret = _InputBinding_GetCommandParameter(jarg1);

        return ret;
    }

    public delegate void InputBinding_SetCommandParameterDelegate(HandleRef jarg1, HandleRef jarg2);
    public static InputBinding_SetCommandParameterDelegate _InputBinding_SetCommandParameter;
    public static void InputBinding_SetCommandParameter(HandleRef jarg1, HandleRef jarg2)
    {
        _InputBinding_SetCommandParameter(jarg1, jarg2);
    }

    public delegate IntPtr InputBinding_GetCommandTargetDelegate(HandleRef jarg1);
    public static InputBinding_GetCommandTargetDelegate _InputBinding_GetCommandTarget;
    public static IntPtr InputBinding_GetCommandTarget(HandleRef jarg1)
    {
        IntPtr ret = _InputBinding_GetCommandTarget(jarg1);

        return ret;
    }

    public delegate void InputBinding_SetCommandTargetDelegate(HandleRef jarg1, HandleRef jarg2);
    public static InputBinding_SetCommandTargetDelegate _InputBinding_SetCommandTarget;
    public static void InputBinding_SetCommandTarget(HandleRef jarg1, HandleRef jarg2)
    {
        _InputBinding_SetCommandTarget(jarg1, jarg2);
    }

    public delegate IntPtr InputBinding_GetGestureDelegate(HandleRef jarg1);
    public static InputBinding_GetGestureDelegate _InputBinding_GetGesture;
    public static IntPtr InputBinding_GetGesture(HandleRef jarg1)
    {
        IntPtr ret = _InputBinding_GetGesture(jarg1);

        return ret;
    }

    public delegate void InputBinding_SetGestureDelegate(HandleRef jarg1, HandleRef jarg2);
    public static InputBinding_SetGestureDelegate _InputBinding_SetGesture;
    public static void InputBinding_SetGesture(HandleRef jarg1, HandleRef jarg2)
    {
        _InputBinding_SetGesture(jarg1, jarg2);
    }

    public delegate void delete_InputGestureDelegate(HandleRef jarg1);
    public static delete_InputGestureDelegate _delete_InputGesture;
    public static void delete_InputGesture(HandleRef jarg1)
    {
        _delete_InputGesture(jarg1);
    }

    public delegate bool InputGesture_MatchesDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static InputGesture_MatchesDelegate _InputGesture_Matches;
    public static bool InputGesture_Matches(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        bool ret = _InputGesture_Matches(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr new_ItemCollection__SWIG_0Delegate();
    public static new_ItemCollection__SWIG_0Delegate _new_ItemCollection__SWIG_0;
    public static IntPtr new_ItemCollection__SWIG_0()
    {
        IntPtr ret = _new_ItemCollection__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_ItemCollection__SWIG_1Delegate(HandleRef jarg1);
    public static new_ItemCollection__SWIG_1Delegate _new_ItemCollection__SWIG_1;
    public static IntPtr new_ItemCollection__SWIG_1(HandleRef jarg1)
    {
        IntPtr ret = _new_ItemCollection__SWIG_1(jarg1);

        return ret;
    }

    public delegate void delete_ItemCollectionDelegate(HandleRef jarg1);
    public static delete_ItemCollectionDelegate _delete_ItemCollection;
    public static void delete_ItemCollection(HandleRef jarg1)
    {
        _delete_ItemCollection(jarg1);
    }

    public delegate void ItemCollection_SetItemsControlOwnerDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ItemCollection_SetItemsControlOwnerDelegate _ItemCollection_SetItemsControlOwner;
    public static void ItemCollection_SetItemsControlOwner(HandleRef jarg1, HandleRef jarg2)
    {
        _ItemCollection_SetItemsControlOwner(jarg1, jarg2);
    }

    public delegate void ItemCollection_SetViewDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ItemCollection_SetViewDelegate _ItemCollection_SetView;
    public static void ItemCollection_SetView(HandleRef jarg1, HandleRef jarg2)
    {
        _ItemCollection_SetView(jarg1, jarg2);
    }

    public delegate bool ItemCollection_IsReadOnlyDelegate(HandleRef jarg1);
    public static ItemCollection_IsReadOnlyDelegate _ItemCollection_IsReadOnly;
    public static bool ItemCollection_IsReadOnly(HandleRef jarg1)
    {
        bool ret = _ItemCollection_IsReadOnly(jarg1);

        return ret;
    }

    public delegate bool ItemCollection_CanFilterDelegate(HandleRef jarg1);
    public static ItemCollection_CanFilterDelegate _ItemCollection_CanFilter;
    public static bool ItemCollection_CanFilter(HandleRef jarg1)
    {
        bool ret = _ItemCollection_CanFilter(jarg1);

        return ret;
    }

    public delegate bool ItemCollection_CanGroupDelegate(HandleRef jarg1);
    public static ItemCollection_CanGroupDelegate _ItemCollection_CanGroup;
    public static bool ItemCollection_CanGroup(HandleRef jarg1)
    {
        bool ret = _ItemCollection_CanGroup(jarg1);

        return ret;
    }

    public delegate bool ItemCollection_CanSortDelegate(HandleRef jarg1);
    public static ItemCollection_CanSortDelegate _ItemCollection_CanSort;
    public static bool ItemCollection_CanSort(HandleRef jarg1)
    {
        bool ret = _ItemCollection_CanSort(jarg1);

        return ret;
    }

    public delegate bool ItemCollection_ContainsDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ItemCollection_ContainsDelegate _ItemCollection_Contains;
    public static bool ItemCollection_Contains(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _ItemCollection_Contains(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr ItemCollection_CurrentItemDelegate(HandleRef jarg1);
    public static ItemCollection_CurrentItemDelegate _ItemCollection_CurrentItem;
    public static IntPtr ItemCollection_CurrentItem(HandleRef jarg1)
    {
        IntPtr ret = _ItemCollection_CurrentItem(jarg1);

        return ret;
    }

    public delegate int ItemCollection_CurrentPositionDelegate(HandleRef jarg1);
    public static ItemCollection_CurrentPositionDelegate _ItemCollection_CurrentPosition;
    public static int ItemCollection_CurrentPosition(HandleRef jarg1)
    {
        int ret = _ItemCollection_CurrentPosition(jarg1);

        return ret;
    }

    public delegate bool ItemCollection_IsCurrentAfterLastDelegate(HandleRef jarg1);
    public static ItemCollection_IsCurrentAfterLastDelegate _ItemCollection_IsCurrentAfterLast;
    public static bool ItemCollection_IsCurrentAfterLast(HandleRef jarg1)
    {
        bool ret = _ItemCollection_IsCurrentAfterLast(jarg1);

        return ret;
    }

    public delegate bool ItemCollection_IsCurrentBeforeFirstDelegate(HandleRef jarg1);
    public static ItemCollection_IsCurrentBeforeFirstDelegate _ItemCollection_IsCurrentBeforeFirst;
    public static bool ItemCollection_IsCurrentBeforeFirst(HandleRef jarg1)
    {
        bool ret = _ItemCollection_IsCurrentBeforeFirst(jarg1);

        return ret;
    }

    public delegate bool ItemCollection_IsEmptyDelegate(HandleRef jarg1);
    public static ItemCollection_IsEmptyDelegate _ItemCollection_IsEmpty;
    public static bool ItemCollection_IsEmpty(HandleRef jarg1)
    {
        bool ret = _ItemCollection_IsEmpty(jarg1);

        return ret;
    }

    public delegate bool ItemCollection_MoveCurrentToDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ItemCollection_MoveCurrentToDelegate _ItemCollection_MoveCurrentTo;
    public static bool ItemCollection_MoveCurrentTo(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _ItemCollection_MoveCurrentTo(jarg1, jarg2);

        return ret;
    }

    public delegate bool ItemCollection_MoveCurrentToFirstDelegate(HandleRef jarg1);
    public static ItemCollection_MoveCurrentToFirstDelegate _ItemCollection_MoveCurrentToFirst;
    public static bool ItemCollection_MoveCurrentToFirst(HandleRef jarg1)
    {
        bool ret = _ItemCollection_MoveCurrentToFirst(jarg1);

        return ret;
    }

    public delegate bool ItemCollection_MoveCurrentToLastDelegate(HandleRef jarg1);
    public static ItemCollection_MoveCurrentToLastDelegate _ItemCollection_MoveCurrentToLast;
    public static bool ItemCollection_MoveCurrentToLast(HandleRef jarg1)
    {
        bool ret = _ItemCollection_MoveCurrentToLast(jarg1);

        return ret;
    }

    public delegate bool ItemCollection_MoveCurrentToNextDelegate(HandleRef jarg1);
    public static ItemCollection_MoveCurrentToNextDelegate _ItemCollection_MoveCurrentToNext;
    public static bool ItemCollection_MoveCurrentToNext(HandleRef jarg1)
    {
        bool ret = _ItemCollection_MoveCurrentToNext(jarg1);

        return ret;
    }

    public delegate bool ItemCollection_MoveCurrentToPositionDelegate(HandleRef jarg1, int jarg2);
    public static ItemCollection_MoveCurrentToPositionDelegate _ItemCollection_MoveCurrentToPosition;
    public static bool ItemCollection_MoveCurrentToPosition(HandleRef jarg1, int jarg2)
    {
        bool ret = _ItemCollection_MoveCurrentToPosition(jarg1, jarg2);

        return ret;
    }

    public delegate bool ItemCollection_MoveCurrentToPreviousDelegate(HandleRef jarg1);
    public static ItemCollection_MoveCurrentToPreviousDelegate _ItemCollection_MoveCurrentToPrevious;
    public static bool ItemCollection_MoveCurrentToPrevious(HandleRef jarg1)
    {
        bool ret = _ItemCollection_MoveCurrentToPrevious(jarg1);

        return ret;
    }

    public delegate void ItemCollection_RefreshDelegate(HandleRef jarg1);
    public static ItemCollection_RefreshDelegate _ItemCollection_Refresh;
    public static void ItemCollection_Refresh(HandleRef jarg1)
    {
        _ItemCollection_Refresh(jarg1);
    }

    public delegate IntPtr ItemCollection_CurrentChangedDelegate(HandleRef jarg1);
    public static ItemCollection_CurrentChangedDelegate _ItemCollection_CurrentChanged;
    public static IntPtr ItemCollection_CurrentChanged(HandleRef jarg1)
    {
        IntPtr ret = _ItemCollection_CurrentChanged(jarg1);

        return ret;
    }

    public delegate uint ItemCollection_CountDelegate(HandleRef jarg1);
    public static ItemCollection_CountDelegate _ItemCollection_Count;
    public static uint ItemCollection_Count(HandleRef jarg1)
    {
        uint ret = _ItemCollection_Count(jarg1);

        return ret;
    }

    public delegate IntPtr ItemCollection_GetDelegate(HandleRef jarg1, uint jarg2);
    public static ItemCollection_GetDelegate _ItemCollection_Get;
    public static IntPtr ItemCollection_Get(HandleRef jarg1, uint jarg2)
    {
        IntPtr ret = _ItemCollection_Get(jarg1, jarg2);

        return ret;
    }

    public delegate void ItemCollection_Set__SWIG_0Delegate(HandleRef jarg1, uint jarg2, HandleRef jarg3);
    public static ItemCollection_Set__SWIG_0Delegate _ItemCollection_Set__SWIG_0;
    public static void ItemCollection_Set__SWIG_0(HandleRef jarg1, uint jarg2, HandleRef jarg3)
    {
        _ItemCollection_Set__SWIG_0(jarg1, jarg2, jarg3);
    }

    public delegate void ItemCollection_Set__SWIG_1Delegate(HandleRef jarg1, uint jarg2, string jarg3);
    public static ItemCollection_Set__SWIG_1Delegate _ItemCollection_Set__SWIG_1;
    public static void ItemCollection_Set__SWIG_1(HandleRef jarg1, uint jarg2, string jarg3)
    {
        _ItemCollection_Set__SWIG_1(jarg1, jarg2, jarg3);
    }

    public delegate uint ItemCollection_Add__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2);
    public static ItemCollection_Add__SWIG_0Delegate _ItemCollection_Add__SWIG_0;
    public static uint ItemCollection_Add__SWIG_0(HandleRef jarg1, HandleRef jarg2)
    {
        uint ret = _ItemCollection_Add__SWIG_0(jarg1, jarg2);

        return ret;
    }

    public delegate uint ItemCollection_Add__SWIG_1Delegate(HandleRef jarg1, string jarg2);
    public static ItemCollection_Add__SWIG_1Delegate _ItemCollection_Add__SWIG_1;
    public static uint ItemCollection_Add__SWIG_1(HandleRef jarg1, string jarg2)
    {
        uint ret = _ItemCollection_Add__SWIG_1(jarg1, jarg2);

        return ret;
    }

    public delegate void ItemCollection_ClearDelegate(HandleRef jarg1);
    public static ItemCollection_ClearDelegate _ItemCollection_Clear;
    public static void ItemCollection_Clear(HandleRef jarg1)
    {
        _ItemCollection_Clear(jarg1);
    }

    public delegate int ItemCollection_IndexOfDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ItemCollection_IndexOfDelegate _ItemCollection_IndexOf;
    public static int ItemCollection_IndexOf(HandleRef jarg1, HandleRef jarg2)
    {
        int ret = _ItemCollection_IndexOf(jarg1, jarg2);

        return ret;
    }

    public delegate void ItemCollection_Insert__SWIG_0Delegate(HandleRef jarg1, uint jarg2, HandleRef jarg3);
    public static ItemCollection_Insert__SWIG_0Delegate _ItemCollection_Insert__SWIG_0;
    public static void ItemCollection_Insert__SWIG_0(HandleRef jarg1, uint jarg2, HandleRef jarg3)
    {
        _ItemCollection_Insert__SWIG_0(jarg1, jarg2, jarg3);
    }

    public delegate void ItemCollection_Insert__SWIG_1Delegate(HandleRef jarg1, uint jarg2, string jarg3);
    public static ItemCollection_Insert__SWIG_1Delegate _ItemCollection_Insert__SWIG_1;
    public static void ItemCollection_Insert__SWIG_1(HandleRef jarg1, uint jarg2, string jarg3)
    {
        _ItemCollection_Insert__SWIG_1(jarg1, jarg2, jarg3);
    }

    public delegate void ItemCollection_RemoveDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ItemCollection_RemoveDelegate _ItemCollection_Remove;
    public static void ItemCollection_Remove(HandleRef jarg1, HandleRef jarg2)
    {
        _ItemCollection_Remove(jarg1, jarg2);
    }

    public delegate void ItemCollection_RemoveAtDelegate(HandleRef jarg1, uint jarg2);
    public static ItemCollection_RemoveAtDelegate _ItemCollection_RemoveAt;
    public static void ItemCollection_RemoveAt(HandleRef jarg1, uint jarg2)
    {
        _ItemCollection_RemoveAt(jarg1, jarg2);
    }

    public delegate IntPtr ItemCollection_CollectionChangedDelegate(HandleRef jarg1);
    public static ItemCollection_CollectionChangedDelegate _ItemCollection_CollectionChanged;
    public static IntPtr ItemCollection_CollectionChanged(HandleRef jarg1)
    {
        IntPtr ret = _ItemCollection_CollectionChanged(jarg1);

        return ret;
    }

    public delegate bool ItemCollection_IsInitializedDelegate(HandleRef jarg1);
    public static ItemCollection_IsInitializedDelegate _ItemCollection_IsInitialized;
    public static bool ItemCollection_IsInitialized(HandleRef jarg1)
    {
        bool ret = _ItemCollection_IsInitialized(jarg1);

        return ret;
    }

    public delegate void ItemCollection_InitDelegate(HandleRef jarg1);
    public static ItemCollection_InitDelegate _ItemCollection_Init;
    public static void ItemCollection_Init(HandleRef jarg1)
    {
        _ItemCollection_Init(jarg1);
    }

    public delegate IntPtr new_ItemsPanelTemplateDelegate();
    public static new_ItemsPanelTemplateDelegate _new_ItemsPanelTemplate;
    public static IntPtr new_ItemsPanelTemplate()
    {
        IntPtr ret = _new_ItemsPanelTemplate();

        return ret;
    }

    public delegate void delete_ItemsPanelTemplateDelegate(HandleRef jarg1);
    public static delete_ItemsPanelTemplateDelegate _delete_ItemsPanelTemplate;
    public static void delete_ItemsPanelTemplate(HandleRef jarg1)
    {
        _delete_ItemsPanelTemplate(jarg1);
    }

    public delegate IntPtr new_ItemsPresenterDelegate();
    public static new_ItemsPresenterDelegate _new_ItemsPresenter;
    public static IntPtr new_ItemsPresenter()
    {
        IntPtr ret = _new_ItemsPresenter();

        return ret;
    }

    public delegate void delete_ItemsPresenterDelegate(HandleRef jarg1);
    public static delete_ItemsPresenterDelegate _delete_ItemsPresenter;
    public static void delete_ItemsPresenter(HandleRef jarg1)
    {
        _delete_ItemsPresenter(jarg1);
    }

    public delegate IntPtr new_KeyBinding__SWIG_0Delegate();
    public static new_KeyBinding__SWIG_0Delegate _new_KeyBinding__SWIG_0;
    public static IntPtr new_KeyBinding__SWIG_0()
    {
        IntPtr ret = _new_KeyBinding__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_KeyBinding__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static new_KeyBinding__SWIG_1Delegate _new_KeyBinding__SWIG_1;
    public static IntPtr new_KeyBinding__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_KeyBinding__SWIG_1(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_KeyBindingDelegate(HandleRef jarg1);
    public static delete_KeyBindingDelegate _delete_KeyBinding;
    public static void delete_KeyBinding(HandleRef jarg1)
    {
        _delete_KeyBinding(jarg1);
    }

    public delegate uint KeyBinding_GetKeyDelegate(HandleRef jarg1);
    public static KeyBinding_GetKeyDelegate _KeyBinding_GetKey;
    public static uint KeyBinding_GetKey(HandleRef jarg1)
    {
        uint ret = _KeyBinding_GetKey(jarg1);

        return ret;
    }

    public delegate uint KeyBinding_GetModifiersDelegate(HandleRef jarg1);
    public static KeyBinding_GetModifiersDelegate _KeyBinding_GetModifiers;
    public static uint KeyBinding_GetModifiers(HandleRef jarg1)
    {
        uint ret = _KeyBinding_GetModifiers(jarg1);

        return ret;
    }

    public delegate IntPtr new_KeyboardDelegate(HandleRef jarg1);
    public static new_KeyboardDelegate _new_Keyboard;
    public static IntPtr new_Keyboard(HandleRef jarg1)
    {
        IntPtr ret = _new_Keyboard(jarg1);

        return ret;
    }

    public delegate void delete_KeyboardDelegate(HandleRef jarg1);
    public static delete_KeyboardDelegate _delete_Keyboard;
    public static void delete_Keyboard(HandleRef jarg1)
    {
        _delete_Keyboard(jarg1);
    }

    public delegate void Keyboard_ResetStateDelegate(HandleRef jarg1);
    public static Keyboard_ResetStateDelegate _Keyboard_ResetState;
    public static void Keyboard_ResetState(HandleRef jarg1)
    {
        _Keyboard_ResetState(jarg1);
    }

    public delegate uint Keyboard_GetModifiersDelegate(HandleRef jarg1);
    public static Keyboard_GetModifiersDelegate _Keyboard_GetModifiers;
    public static uint Keyboard_GetModifiers(HandleRef jarg1)
    {
        uint ret = _Keyboard_GetModifiers(jarg1);

        return ret;
    }

    public delegate uint Keyboard_GetKeyStatesDelegate(HandleRef jarg1, int jarg2);
    public static Keyboard_GetKeyStatesDelegate _Keyboard_GetKeyStates;
    public static uint Keyboard_GetKeyStates(HandleRef jarg1, int jarg2)
    {
        uint ret = _Keyboard_GetKeyStates(jarg1, jarg2);

        return ret;
    }

    public delegate bool Keyboard_IsKeyDownDelegate(HandleRef jarg1, int jarg2);
    public static Keyboard_IsKeyDownDelegate _Keyboard_IsKeyDown;
    public static bool Keyboard_IsKeyDown(HandleRef jarg1, int jarg2)
    {
        bool ret = _Keyboard_IsKeyDown(jarg1, jarg2);

        return ret;
    }

    public delegate bool Keyboard_IsKeyUpDelegate(HandleRef jarg1, int jarg2);
    public static Keyboard_IsKeyUpDelegate _Keyboard_IsKeyUp;
    public static bool Keyboard_IsKeyUp(HandleRef jarg1, int jarg2)
    {
        bool ret = _Keyboard_IsKeyUp(jarg1, jarg2);

        return ret;
    }

    public delegate bool Keyboard_IsKeyToggledDelegate(HandleRef jarg1, int jarg2);
    public static Keyboard_IsKeyToggledDelegate _Keyboard_IsKeyToggled;
    public static bool Keyboard_IsKeyToggled(HandleRef jarg1, int jarg2)
    {
        bool ret = _Keyboard_IsKeyToggled(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr Keyboard_GetFocusedDelegate(HandleRef jarg1);
    public static Keyboard_GetFocusedDelegate _Keyboard_GetFocused;
    public static IntPtr Keyboard_GetFocused(HandleRef jarg1)
    {
        IntPtr ret = _Keyboard_GetFocused(jarg1);

        return ret;
    }

    public delegate IntPtr Keyboard_FocusDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Keyboard_FocusDelegate _Keyboard_Focus;
    public static IntPtr Keyboard_Focus(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _Keyboard_Focus(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_KeyboardNavigation__SWIG_0Delegate();
    public static new_KeyboardNavigation__SWIG_0Delegate _new_KeyboardNavigation__SWIG_0;
    public static IntPtr new_KeyboardNavigation__SWIG_0()
    {
        IntPtr ret = _new_KeyboardNavigation__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_KeyboardNavigation__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static new_KeyboardNavigation__SWIG_1Delegate _new_KeyboardNavigation__SWIG_1;
    public static IntPtr new_KeyboardNavigation__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_KeyboardNavigation__SWIG_1(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_KeyboardNavigationDelegate(HandleRef jarg1);
    public static delete_KeyboardNavigationDelegate _delete_KeyboardNavigation;
    public static void delete_KeyboardNavigation(HandleRef jarg1)
    {
        _delete_KeyboardNavigation(jarg1);
    }

    public delegate int KeyboardNavigation_GetTabNavigationDelegate(HandleRef jarg1);
    public static KeyboardNavigation_GetTabNavigationDelegate _KeyboardNavigation_GetTabNavigation;
    public static int KeyboardNavigation_GetTabNavigation(HandleRef jarg1)
    {
        int ret = _KeyboardNavigation_GetTabNavigation(jarg1);

        return ret;
    }

    public delegate void KeyboardNavigation_SetTabNavigationDelegate(HandleRef jarg1, int jarg2);
    public static KeyboardNavigation_SetTabNavigationDelegate _KeyboardNavigation_SetTabNavigation;
    public static void KeyboardNavigation_SetTabNavigation(HandleRef jarg1, int jarg2)
    {
        _KeyboardNavigation_SetTabNavigation(jarg1, jarg2);
    }

    public delegate int KeyboardNavigation_GetControlTabNavigationDelegate(HandleRef jarg1);
    public static KeyboardNavigation_GetControlTabNavigationDelegate _KeyboardNavigation_GetControlTabNavigation;
    public static int KeyboardNavigation_GetControlTabNavigation(HandleRef jarg1)
    {
        int ret = _KeyboardNavigation_GetControlTabNavigation(jarg1);

        return ret;
    }

    public delegate void KeyboardNavigation_SetControlTabNavigationDelegate(HandleRef jarg1, int jarg2);
    public static KeyboardNavigation_SetControlTabNavigationDelegate _KeyboardNavigation_SetControlTabNavigation;
    public static void KeyboardNavigation_SetControlTabNavigation(HandleRef jarg1, int jarg2)
    {
        _KeyboardNavigation_SetControlTabNavigation(jarg1, jarg2);
    }

    public delegate int KeyboardNavigation_GetDirectionalNavigationDelegate(HandleRef jarg1);
    public static KeyboardNavigation_GetDirectionalNavigationDelegate _KeyboardNavigation_GetDirectionalNavigation;
    public static int KeyboardNavigation_GetDirectionalNavigation(HandleRef jarg1)
    {
        int ret = _KeyboardNavigation_GetDirectionalNavigation(jarg1);

        return ret;
    }

    public delegate void KeyboardNavigation_SetDirectionalNavigationDelegate(HandleRef jarg1, int jarg2);
    public static KeyboardNavigation_SetDirectionalNavigationDelegate _KeyboardNavigation_SetDirectionalNavigation;
    public static void KeyboardNavigation_SetDirectionalNavigation(HandleRef jarg1, int jarg2)
    {
        _KeyboardNavigation_SetDirectionalNavigation(jarg1, jarg2);
    }

    public delegate bool KeyboardNavigation_GetAcceptsReturnDelegate(HandleRef jarg1);
    public static KeyboardNavigation_GetAcceptsReturnDelegate _KeyboardNavigation_GetAcceptsReturn;
    public static bool KeyboardNavigation_GetAcceptsReturn(HandleRef jarg1)
    {
        bool ret = _KeyboardNavigation_GetAcceptsReturn(jarg1);

        return ret;
    }

    public delegate void KeyboardNavigation_SetAcceptsReturnDelegate(HandleRef jarg1, bool jarg2);
    public static KeyboardNavigation_SetAcceptsReturnDelegate _KeyboardNavigation_SetAcceptsReturn;
    public static void KeyboardNavigation_SetAcceptsReturn(HandleRef jarg1, bool jarg2)
    {
        _KeyboardNavigation_SetAcceptsReturn(jarg1, jarg2);
    }

    public delegate bool KeyboardNavigation_GetIsTabStopDelegate(HandleRef jarg1);
    public static KeyboardNavigation_GetIsTabStopDelegate _KeyboardNavigation_GetIsTabStop;
    public static bool KeyboardNavigation_GetIsTabStop(HandleRef jarg1)
    {
        bool ret = _KeyboardNavigation_GetIsTabStop(jarg1);

        return ret;
    }

    public delegate void KeyboardNavigation_SetIsTabStopDelegate(HandleRef jarg1, bool jarg2);
    public static KeyboardNavigation_SetIsTabStopDelegate _KeyboardNavigation_SetIsTabStop;
    public static void KeyboardNavigation_SetIsTabStop(HandleRef jarg1, bool jarg2)
    {
        _KeyboardNavigation_SetIsTabStop(jarg1, jarg2);
    }

    public delegate int KeyboardNavigation_GetTabIndexDelegate(HandleRef jarg1);
    public static KeyboardNavigation_GetTabIndexDelegate _KeyboardNavigation_GetTabIndex;
    public static int KeyboardNavigation_GetTabIndex(HandleRef jarg1)
    {
        int ret = _KeyboardNavigation_GetTabIndex(jarg1);

        return ret;
    }

    public delegate void KeyboardNavigation_SetTabIndexDelegate(HandleRef jarg1, int jarg2);
    public static KeyboardNavigation_SetTabIndexDelegate _KeyboardNavigation_SetTabIndex;
    public static void KeyboardNavigation_SetTabIndex(HandleRef jarg1, int jarg2)
    {
        _KeyboardNavigation_SetTabIndex(jarg1, jarg2);
    }

    public delegate void KeyboardNavigation_OnVirtualEventDelegate(HandleRef jarg1, int jarg2);
    public static KeyboardNavigation_OnVirtualEventDelegate _KeyboardNavigation_OnVirtualEvent;
    public static void KeyboardNavigation_OnVirtualEvent(HandleRef jarg1, int jarg2)
    {
        _KeyboardNavigation_OnVirtualEvent(jarg1, jarg2);
    }

    public delegate void KeyboardNavigation_OnFocusedDelegate(HandleRef jarg1, HandleRef jarg2);
    public static KeyboardNavigation_OnFocusedDelegate _KeyboardNavigation_OnFocused;
    public static void KeyboardNavigation_OnFocused(HandleRef jarg1, HandleRef jarg2)
    {
        _KeyboardNavigation_OnFocused(jarg1, jarg2);
    }

    public delegate IntPtr KeyboardNavigation_PredictFocusDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static KeyboardNavigation_PredictFocusDelegate _KeyboardNavigation_PredictFocus;
    public static IntPtr KeyboardNavigation_PredictFocus(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        IntPtr ret = _KeyboardNavigation_PredictFocus(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr new_KeyGesture__SWIG_0Delegate();
    public static new_KeyGesture__SWIG_0Delegate _new_KeyGesture__SWIG_0;
    public static IntPtr new_KeyGesture__SWIG_0()
    {
        IntPtr ret = _new_KeyGesture__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_KeyGesture__SWIG_1Delegate(uint jarg1, uint jarg2);
    public static new_KeyGesture__SWIG_1Delegate _new_KeyGesture__SWIG_1;
    public static IntPtr new_KeyGesture__SWIG_1(uint jarg1, uint jarg2)
    {
        IntPtr ret = _new_KeyGesture__SWIG_1(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_KeyGesture__SWIG_2Delegate(uint jarg1);
    public static new_KeyGesture__SWIG_2Delegate _new_KeyGesture__SWIG_2;
    public static IntPtr new_KeyGesture__SWIG_2(uint jarg1)
    {
        IntPtr ret = _new_KeyGesture__SWIG_2(jarg1);

        return ret;
    }

    public delegate void delete_KeyGestureDelegate(HandleRef jarg1);
    public static delete_KeyGestureDelegate _delete_KeyGesture;
    public static void delete_KeyGesture(HandleRef jarg1)
    {
        _delete_KeyGesture(jarg1);
    }

    public delegate uint KeyGesture_GetKeyDelegate(HandleRef jarg1);
    public static KeyGesture_GetKeyDelegate _KeyGesture_GetKey;
    public static uint KeyGesture_GetKey(HandleRef jarg1)
    {
        uint ret = _KeyGesture_GetKey(jarg1);

        return ret;
    }

    public delegate uint KeyGesture_GetModifiersDelegate(HandleRef jarg1);
    public static KeyGesture_GetModifiersDelegate _KeyGesture_GetModifiers;
    public static uint KeyGesture_GetModifiers(HandleRef jarg1)
    {
        uint ret = _KeyGesture_GetModifiers(jarg1);

        return ret;
    }

    public delegate IntPtr KeyGesture_GetDisplayStringDelegate(HandleRef jarg1);
    public static KeyGesture_GetDisplayStringDelegate _KeyGesture_GetDisplayString;
    public static IntPtr KeyGesture_GetDisplayString(HandleRef jarg1)
    {
        IntPtr ret = _KeyGesture_GetDisplayString(jarg1);

        return ret;
    }

    public delegate bool KeyGesture_MatchesDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static KeyGesture_MatchesDelegate _KeyGesture_Matches;
    public static bool KeyGesture_Matches(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        bool ret = _KeyGesture_Matches(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr new_LabelDelegate();
    public static new_LabelDelegate _new_Label;
    public static IntPtr new_Label()
    {
        IntPtr ret = _new_Label();

        return ret;
    }

    public delegate IntPtr Label_GetTargetDelegate(HandleRef jarg1);
    public static Label_GetTargetDelegate _Label_GetTarget;
    public static IntPtr Label_GetTarget(HandleRef jarg1)
    {
        IntPtr ret = _Label_GetTarget(jarg1);

        return ret;
    }

    public delegate void Label_SetTargetDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Label_SetTargetDelegate _Label_SetTarget;
    public static void Label_SetTarget(HandleRef jarg1, HandleRef jarg2)
    {
        _Label_SetTarget(jarg1, jarg2);
    }

    public delegate void delete_LabelDelegate(HandleRef jarg1);
    public static delete_LabelDelegate _delete_Label;
    public static void delete_Label(HandleRef jarg1)
    {
        _delete_Label(jarg1);
    }

    public delegate IntPtr FindLayerDelegate(HandleRef jarg1);
    public static FindLayerDelegate _FindLayer;
    public static IntPtr FindLayer(HandleRef jarg1)
    {
        IntPtr ret = _FindLayer(jarg1);

        return ret;
    }

    public delegate IntPtr FindRootLayerDelegate(HandleRef jarg1);
    public static FindRootLayerDelegate _FindRootLayer;
    public static IntPtr FindRootLayer(HandleRef jarg1)
    {
        IntPtr ret = _FindRootLayer(jarg1);

        return ret;
    }

    public delegate IntPtr new_LineDelegate();
    public static new_LineDelegate _new_Line;
    public static IntPtr new_Line()
    {
        IntPtr ret = _new_Line();

        return ret;
    }

    public delegate void delete_LineDelegate(HandleRef jarg1);
    public static delete_LineDelegate _delete_Line;
    public static void delete_Line(HandleRef jarg1)
    {
        _delete_Line(jarg1);
    }

    public delegate float Line_GetX1Delegate(HandleRef jarg1);
    public static Line_GetX1Delegate _Line_GetX1;
    public static float Line_GetX1(HandleRef jarg1)
    {
        float ret = _Line_GetX1(jarg1);

        return ret;
    }

    public delegate void Line_SetX1Delegate(HandleRef jarg1, float jarg2);
    public static Line_SetX1Delegate _Line_SetX1;
    public static void Line_SetX1(HandleRef jarg1, float jarg2)
    {
        _Line_SetX1(jarg1, jarg2);
    }

    public delegate float Line_GetY1Delegate(HandleRef jarg1);
    public static Line_GetY1Delegate _Line_GetY1;
    public static float Line_GetY1(HandleRef jarg1)
    {
        float ret = _Line_GetY1(jarg1);

        return ret;
    }

    public delegate void Line_SetY1Delegate(HandleRef jarg1, float jarg2);
    public static Line_SetY1Delegate _Line_SetY1;
    public static void Line_SetY1(HandleRef jarg1, float jarg2)
    {
        _Line_SetY1(jarg1, jarg2);
    }

    public delegate float Line_GetX2Delegate(HandleRef jarg1);
    public static Line_GetX2Delegate _Line_GetX2;
    public static float Line_GetX2(HandleRef jarg1)
    {
        float ret = _Line_GetX2(jarg1);

        return ret;
    }

    public delegate void Line_SetX2Delegate(HandleRef jarg1, float jarg2);
    public static Line_SetX2Delegate _Line_SetX2;
    public static void Line_SetX2(HandleRef jarg1, float jarg2)
    {
        _Line_SetX2(jarg1, jarg2);
    }

    public delegate float Line_GetY2Delegate(HandleRef jarg1);
    public static Line_GetY2Delegate _Line_GetY2;
    public static float Line_GetY2(HandleRef jarg1)
    {
        float ret = _Line_GetY2(jarg1);

        return ret;
    }

    public delegate void Line_SetY2Delegate(HandleRef jarg1, float jarg2);
    public static Line_SetY2Delegate _Line_SetY2;
    public static void Line_SetY2(HandleRef jarg1, float jarg2)
    {
        _Line_SetY2(jarg1, jarg2);
    }

    public delegate IntPtr new_LinearGradientBrushDelegate();
    public static new_LinearGradientBrushDelegate _new_LinearGradientBrush;
    public static IntPtr new_LinearGradientBrush()
    {
        IntPtr ret = _new_LinearGradientBrush();

        return ret;
    }

    public delegate IntPtr LinearGradientBrush_GetStartPointDelegate(HandleRef jarg1);
    public static LinearGradientBrush_GetStartPointDelegate _LinearGradientBrush_GetStartPoint;
    public static IntPtr LinearGradientBrush_GetStartPoint(HandleRef jarg1)
    {
        IntPtr ret = _LinearGradientBrush_GetStartPoint(jarg1);

        return ret;
    }

    public delegate void LinearGradientBrush_SetStartPointDelegate(HandleRef jarg1, HandleRef jarg2);
    public static LinearGradientBrush_SetStartPointDelegate _LinearGradientBrush_SetStartPoint;
    public static void LinearGradientBrush_SetStartPoint(HandleRef jarg1, HandleRef jarg2)
    {
        _LinearGradientBrush_SetStartPoint(jarg1, jarg2);
    }

    public delegate IntPtr LinearGradientBrush_GetEndPointDelegate(HandleRef jarg1);
    public static LinearGradientBrush_GetEndPointDelegate _LinearGradientBrush_GetEndPoint;
    public static IntPtr LinearGradientBrush_GetEndPoint(HandleRef jarg1)
    {
        IntPtr ret = _LinearGradientBrush_GetEndPoint(jarg1);

        return ret;
    }

    public delegate void LinearGradientBrush_SetEndPointDelegate(HandleRef jarg1, HandleRef jarg2);
    public static LinearGradientBrush_SetEndPointDelegate _LinearGradientBrush_SetEndPoint;
    public static void LinearGradientBrush_SetEndPoint(HandleRef jarg1, HandleRef jarg2)
    {
        _LinearGradientBrush_SetEndPoint(jarg1, jarg2);
    }

    public delegate void LinearGradientBrush_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static LinearGradientBrush_CreateRenderProxyDelegate _LinearGradientBrush_CreateRenderProxy;
    public static void LinearGradientBrush_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _LinearGradientBrush_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void LinearGradientBrush_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static LinearGradientBrush_UpdateRenderProxyDelegate _LinearGradientBrush_UpdateRenderProxy;
    public static void LinearGradientBrush_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _LinearGradientBrush_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void delete_LinearGradientBrushDelegate(HandleRef jarg1);
    public static delete_LinearGradientBrushDelegate _delete_LinearGradientBrush;
    public static void delete_LinearGradientBrush(HandleRef jarg1)
    {
        _delete_LinearGradientBrush(jarg1);
    }

    public delegate IntPtr new_LineGeometry__SWIG_0Delegate();
    public static new_LineGeometry__SWIG_0Delegate _new_LineGeometry__SWIG_0;
    public static IntPtr new_LineGeometry__SWIG_0()
    {
        IntPtr ret = _new_LineGeometry__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_LineGeometry__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static new_LineGeometry__SWIG_1Delegate _new_LineGeometry__SWIG_1;
    public static IntPtr new_LineGeometry__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_LineGeometry__SWIG_1(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr LineGeometry_GetEndPointDelegate(HandleRef jarg1);
    public static LineGeometry_GetEndPointDelegate _LineGeometry_GetEndPoint;
    public static IntPtr LineGeometry_GetEndPoint(HandleRef jarg1)
    {
        IntPtr ret = _LineGeometry_GetEndPoint(jarg1);

        return ret;
    }

    public delegate void LineGeometry_SetEndPointDelegate(HandleRef jarg1, HandleRef jarg2);
    public static LineGeometry_SetEndPointDelegate _LineGeometry_SetEndPoint;
    public static void LineGeometry_SetEndPoint(HandleRef jarg1, HandleRef jarg2)
    {
        _LineGeometry_SetEndPoint(jarg1, jarg2);
    }

    public delegate IntPtr LineGeometry_GetStartPointDelegate(HandleRef jarg1);
    public static LineGeometry_GetStartPointDelegate _LineGeometry_GetStartPoint;
    public static IntPtr LineGeometry_GetStartPoint(HandleRef jarg1)
    {
        IntPtr ret = _LineGeometry_GetStartPoint(jarg1);

        return ret;
    }

    public delegate void LineGeometry_SetStartPointDelegate(HandleRef jarg1, HandleRef jarg2);
    public static LineGeometry_SetStartPointDelegate _LineGeometry_SetStartPoint;
    public static void LineGeometry_SetStartPoint(HandleRef jarg1, HandleRef jarg2)
    {
        _LineGeometry_SetStartPoint(jarg1, jarg2);
    }

    public delegate bool LineGeometry_IsEmptyDelegate(HandleRef jarg1);
    public static LineGeometry_IsEmptyDelegate _LineGeometry_IsEmpty;
    public static bool LineGeometry_IsEmpty(HandleRef jarg1)
    {
        bool ret = _LineGeometry_IsEmpty(jarg1);

        return ret;
    }

    public delegate void LineGeometry_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static LineGeometry_CreateRenderProxyDelegate _LineGeometry_CreateRenderProxy;
    public static void LineGeometry_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _LineGeometry_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void LineGeometry_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static LineGeometry_UpdateRenderProxyDelegate _LineGeometry_UpdateRenderProxy;
    public static void LineGeometry_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _LineGeometry_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void delete_LineGeometryDelegate(HandleRef jarg1);
    public static delete_LineGeometryDelegate _delete_LineGeometry;
    public static void delete_LineGeometry(HandleRef jarg1)
    {
        _delete_LineGeometry(jarg1);
    }

    public delegate IntPtr new_ListBoxDelegate();
    public static new_ListBoxDelegate _new_ListBox;
    public static IntPtr new_ListBox()
    {
        IntPtr ret = _new_ListBox();

        return ret;
    }

    public delegate IntPtr ListBox_GetSelectedItemsDelegate(HandleRef jarg1);
    public static ListBox_GetSelectedItemsDelegate _ListBox_GetSelectedItems;
    public static IntPtr ListBox_GetSelectedItems(HandleRef jarg1)
    {
        IntPtr ret = _ListBox_GetSelectedItems(jarg1);

        return ret;
    }

    public delegate int ListBox_GetSelectionModeDelegate(HandleRef jarg1);
    public static ListBox_GetSelectionModeDelegate _ListBox_GetSelectionMode;
    public static int ListBox_GetSelectionMode(HandleRef jarg1)
    {
        int ret = _ListBox_GetSelectionMode(jarg1);

        return ret;
    }

    public delegate void ListBox_SetSelectionModeDelegate(HandleRef jarg1, int jarg2);
    public static ListBox_SetSelectionModeDelegate _ListBox_SetSelectionMode;
    public static void ListBox_SetSelectionMode(HandleRef jarg1, int jarg2)
    {
        _ListBox_SetSelectionMode(jarg1, jarg2);
    }

    public delegate void ListBox_ScrollIntoViewDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ListBox_ScrollIntoViewDelegate _ListBox_ScrollIntoView;
    public static void ListBox_ScrollIntoView(HandleRef jarg1, HandleRef jarg2)
    {
        _ListBox_ScrollIntoView(jarg1, jarg2);
    }

    public delegate void ListBox_UnselectAllDelegate(HandleRef jarg1);
    public static ListBox_UnselectAllDelegate _ListBox_UnselectAll;
    public static void ListBox_UnselectAll(HandleRef jarg1)
    {
        _ListBox_UnselectAll(jarg1);
    }

    public delegate void ListBox_ItemClickedDelegate(HandleRef jarg1, HandleRef jarg2, bool jarg3);
    public static ListBox_ItemClickedDelegate _ListBox_ItemClicked;
    public static void ListBox_ItemClicked(HandleRef jarg1, HandleRef jarg2, bool jarg3)
    {
        _ListBox_ItemClicked(jarg1, jarg2, jarg3);
    }

    public delegate void ListBox_ItemEnteredDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ListBox_ItemEnteredDelegate _ListBox_ItemEntered;
    public static void ListBox_ItemEntered(HandleRef jarg1, HandleRef jarg2)
    {
        _ListBox_ItemEntered(jarg1, jarg2);
    }

    public delegate void delete_ListBoxDelegate(HandleRef jarg1);
    public static delete_ListBoxDelegate _delete_ListBox;
    public static void delete_ListBox(HandleRef jarg1)
    {
        _delete_ListBox(jarg1);
    }

    public delegate IntPtr LogicalTreeHelper_GetParentDelegate(HandleRef jarg1);
    public static LogicalTreeHelper_GetParentDelegate _LogicalTreeHelper_GetParent;
    public static IntPtr LogicalTreeHelper_GetParent(HandleRef jarg1)
    {
        IntPtr ret = _LogicalTreeHelper_GetParent(jarg1);

        return ret;
    }

    public delegate uint LogicalTreeHelper_GetChildrenCountDelegate(HandleRef jarg1);
    public static LogicalTreeHelper_GetChildrenCountDelegate _LogicalTreeHelper_GetChildrenCount;
    public static uint LogicalTreeHelper_GetChildrenCount(HandleRef jarg1)
    {
        uint ret = _LogicalTreeHelper_GetChildrenCount(jarg1);

        return ret;
    }

    public delegate IntPtr LogicalTreeHelper_GetChildDelegate(HandleRef jarg1, uint jarg2);
    public static LogicalTreeHelper_GetChildDelegate _LogicalTreeHelper_GetChild;
    public static IntPtr LogicalTreeHelper_GetChild(HandleRef jarg1, uint jarg2)
    {
        IntPtr ret = _LogicalTreeHelper_GetChild(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr LogicalTreeHelper_FindNameDelegate(HandleRef jarg1, string jarg2);
    public static LogicalTreeHelper_FindNameDelegate _LogicalTreeHelper_FindName;
    public static IntPtr LogicalTreeHelper_FindName(HandleRef jarg1, string jarg2)
    {
        IntPtr ret = _LogicalTreeHelper_FindName(jarg1, jarg2);

        return ret;
    }

    public delegate void LogicalTreeHelper_PrintTreeDelegate(HandleRef jarg1);
    public static LogicalTreeHelper_PrintTreeDelegate _LogicalTreeHelper_PrintTree;
    public static void LogicalTreeHelper_PrintTree(HandleRef jarg1)
    {
        _LogicalTreeHelper_PrintTree(jarg1);
    }

    public delegate IntPtr new_LogicalTreeHelperDelegate();
    public static new_LogicalTreeHelperDelegate _new_LogicalTreeHelper;
    public static IntPtr new_LogicalTreeHelper()
    {
        IntPtr ret = _new_LogicalTreeHelper();

        return ret;
    }

    public delegate void delete_LogicalTreeHelperDelegate(HandleRef jarg1);
    public static delete_LogicalTreeHelperDelegate _delete_LogicalTreeHelper;
    public static void delete_LogicalTreeHelper(HandleRef jarg1)
    {
        _delete_LogicalTreeHelper(jarg1);
    }

    public delegate void delete_ProjectionDelegate(HandleRef jarg1);
    public static delete_ProjectionDelegate _delete_Projection;
    public static void delete_Projection(HandleRef jarg1)
    {
        _delete_Projection(jarg1);
    }

    public delegate IntPtr Projection_GetIdentityDelegate();
    public static Projection_GetIdentityDelegate _Projection_GetIdentity;
    public static IntPtr Projection_GetIdentity()
    {
        IntPtr ret = _Projection_GetIdentity();

        return ret;
    }

    public delegate bool Projection_IsIdentityDelegate(HandleRef jarg1);
    public static Projection_IsIdentityDelegate _Projection_IsIdentity;
    public static bool Projection_IsIdentity(HandleRef jarg1)
    {
        bool ret = _Projection_IsIdentity(jarg1);

        return ret;
    }

    public delegate IntPtr Projection_GetProjectionDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static Projection_GetProjectionDelegate _Projection_GetProjection;
    public static IntPtr Projection_GetProjection(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        IntPtr ret = _Projection_GetProjection(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr new_Matrix3DProjectionDelegate();
    public static new_Matrix3DProjectionDelegate _new_Matrix3DProjection;
    public static IntPtr new_Matrix3DProjection()
    {
        IntPtr ret = _new_Matrix3DProjection();

        return ret;
    }

    public delegate void delete_Matrix3DProjectionDelegate(HandleRef jarg1);
    public static delete_Matrix3DProjectionDelegate _delete_Matrix3DProjection;
    public static void delete_Matrix3DProjection(HandleRef jarg1)
    {
        _delete_Matrix3DProjection(jarg1);
    }

    public delegate IntPtr Matrix3DProjection_GetProjectionMatrixDelegate(HandleRef jarg1);
    public static Matrix3DProjection_GetProjectionMatrixDelegate _Matrix3DProjection_GetProjectionMatrix;
    public static IntPtr Matrix3DProjection_GetProjectionMatrix(HandleRef jarg1)
    {
        IntPtr ret = _Matrix3DProjection_GetProjectionMatrix(jarg1);

        return ret;
    }

    public delegate void Matrix3DProjection_SetProjectionMatrixDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Matrix3DProjection_SetProjectionMatrixDelegate _Matrix3DProjection_SetProjectionMatrix;
    public static void Matrix3DProjection_SetProjectionMatrix(HandleRef jarg1, HandleRef jarg2)
    {
        _Matrix3DProjection_SetProjectionMatrix(jarg1, jarg2);
    }

    public delegate bool Matrix3DProjection_IsIdentityDelegate(HandleRef jarg1);
    public static Matrix3DProjection_IsIdentityDelegate _Matrix3DProjection_IsIdentity;
    public static bool Matrix3DProjection_IsIdentity(HandleRef jarg1)
    {
        bool ret = _Matrix3DProjection_IsIdentity(jarg1);

        return ret;
    }

    public delegate IntPtr Matrix3DProjection_GetProjectionDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static Matrix3DProjection_GetProjectionDelegate _Matrix3DProjection_GetProjection;
    public static IntPtr Matrix3DProjection_GetProjection(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        IntPtr ret = _Matrix3DProjection_GetProjection(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void Matrix3DProjection_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static Matrix3DProjection_CreateRenderProxyDelegate _Matrix3DProjection_CreateRenderProxy;
    public static void Matrix3DProjection_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _Matrix3DProjection_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void Matrix3DProjection_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static Matrix3DProjection_UpdateRenderProxyDelegate _Matrix3DProjection_UpdateRenderProxy;
    public static void Matrix3DProjection_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _Matrix3DProjection_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void Matrix3DProjection_UnregisterRendererDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Matrix3DProjection_UnregisterRendererDelegate _Matrix3DProjection_UnregisterRenderer;
    public static void Matrix3DProjection_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2)
    {
        _Matrix3DProjection_UnregisterRenderer(jarg1, jarg2);
    }

    public delegate IntPtr new_MatrixTransform__SWIG_0Delegate();
    public static new_MatrixTransform__SWIG_0Delegate _new_MatrixTransform__SWIG_0;
    public static IntPtr new_MatrixTransform__SWIG_0()
    {
        IntPtr ret = _new_MatrixTransform__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_MatrixTransform__SWIG_1Delegate(HandleRef jarg1);
    public static new_MatrixTransform__SWIG_1Delegate _new_MatrixTransform__SWIG_1;
    public static IntPtr new_MatrixTransform__SWIG_1(HandleRef jarg1)
    {
        IntPtr ret = _new_MatrixTransform__SWIG_1(jarg1);

        return ret;
    }

    public delegate IntPtr MatrixTransform_GetMatrixDelegate(HandleRef jarg1);
    public static MatrixTransform_GetMatrixDelegate _MatrixTransform_GetMatrix;
    public static IntPtr MatrixTransform_GetMatrix(HandleRef jarg1)
    {
        IntPtr ret = _MatrixTransform_GetMatrix(jarg1);

        return ret;
    }

    public delegate void MatrixTransform_SetMatrixDelegate(HandleRef jarg1, HandleRef jarg2);
    public static MatrixTransform_SetMatrixDelegate _MatrixTransform_SetMatrix;
    public static void MatrixTransform_SetMatrix(HandleRef jarg1, HandleRef jarg2)
    {
        _MatrixTransform_SetMatrix(jarg1, jarg2);
    }

    public delegate IntPtr MatrixTransform_GetTransformDelegate(HandleRef jarg1);
    public static MatrixTransform_GetTransformDelegate _MatrixTransform_GetTransform;
    public static IntPtr MatrixTransform_GetTransform(HandleRef jarg1)
    {
        IntPtr ret = _MatrixTransform_GetTransform(jarg1);

        return ret;
    }

    public delegate void MatrixTransform_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static MatrixTransform_CreateRenderProxyDelegate _MatrixTransform_CreateRenderProxy;
    public static void MatrixTransform_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _MatrixTransform_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void MatrixTransform_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static MatrixTransform_UpdateRenderProxyDelegate _MatrixTransform_UpdateRenderProxy;
    public static void MatrixTransform_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _MatrixTransform_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void MatrixTransform_UnregisterRendererDelegate(HandleRef jarg1, HandleRef jarg2);
    public static MatrixTransform_UnregisterRendererDelegate _MatrixTransform_UnregisterRenderer;
    public static void MatrixTransform_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2)
    {
        _MatrixTransform_UnregisterRenderer(jarg1, jarg2);
    }

    public delegate void delete_MatrixTransformDelegate(HandleRef jarg1);
    public static delete_MatrixTransformDelegate _delete_MatrixTransform;
    public static void delete_MatrixTransform(HandleRef jarg1)
    {
        _delete_MatrixTransform(jarg1);
    }

    public delegate IntPtr new_MenuDelegate();
    public static new_MenuDelegate _new_Menu;
    public static IntPtr new_Menu()
    {
        IntPtr ret = _new_Menu();

        return ret;
    }

    public delegate bool Menu_GetIsMainMenuDelegate(HandleRef jarg1);
    public static Menu_GetIsMainMenuDelegate _Menu_GetIsMainMenu;
    public static bool Menu_GetIsMainMenu(HandleRef jarg1)
    {
        bool ret = _Menu_GetIsMainMenu(jarg1);

        return ret;
    }

    public delegate void Menu_SetIsMainMenuDelegate(HandleRef jarg1, bool jarg2);
    public static Menu_SetIsMainMenuDelegate _Menu_SetIsMainMenu;
    public static void Menu_SetIsMainMenu(HandleRef jarg1, bool jarg2)
    {
        _Menu_SetIsMainMenu(jarg1, jarg2);
    }

    public delegate bool Menu_GetActivatedDelegate(HandleRef jarg1);
    public static Menu_GetActivatedDelegate _Menu_GetActivated;
    public static bool Menu_GetActivated(HandleRef jarg1)
    {
        bool ret = _Menu_GetActivated(jarg1);

        return ret;
    }

    public delegate void Menu_SetActivatedDelegate(HandleRef jarg1, bool jarg2);
    public static Menu_SetActivatedDelegate _Menu_SetActivated;
    public static void Menu_SetActivated(HandleRef jarg1, bool jarg2)
    {
        _Menu_SetActivated(jarg1, jarg2);
    }

    public delegate void delete_MenuDelegate(HandleRef jarg1);
    public static delete_MenuDelegate _delete_Menu;
    public static void delete_Menu(HandleRef jarg1)
    {
        _delete_Menu(jarg1);
    }

    public delegate IntPtr new_MenuItemDelegate();
    public static new_MenuItemDelegate _new_MenuItem;
    public static IntPtr new_MenuItem()
    {
        IntPtr ret = _new_MenuItem();

        return ret;
    }

    public delegate IntPtr MenuItem_GetCommandParameterDelegate(HandleRef jarg1);
    public static MenuItem_GetCommandParameterDelegate _MenuItem_GetCommandParameter;
    public static IntPtr MenuItem_GetCommandParameter(HandleRef jarg1)
    {
        IntPtr ret = _MenuItem_GetCommandParameter(jarg1);

        return ret;
    }

    public delegate void MenuItem_SetCommandParameterDelegate(HandleRef jarg1, HandleRef jarg2);
    public static MenuItem_SetCommandParameterDelegate _MenuItem_SetCommandParameter;
    public static void MenuItem_SetCommandParameter(HandleRef jarg1, HandleRef jarg2)
    {
        _MenuItem_SetCommandParameter(jarg1, jarg2);
    }

    public delegate IntPtr MenuItem_GetCommandDelegate(HandleRef jarg1);
    public static MenuItem_GetCommandDelegate _MenuItem_GetCommand;
    public static IntPtr MenuItem_GetCommand(HandleRef jarg1)
    {
        IntPtr ret = _MenuItem_GetCommand(jarg1);

        return ret;
    }

    public delegate void MenuItem_SetCommandDelegate(HandleRef jarg1, HandleRef jarg2);
    public static MenuItem_SetCommandDelegate _MenuItem_SetCommand;
    public static void MenuItem_SetCommand(HandleRef jarg1, HandleRef jarg2)
    {
        _MenuItem_SetCommand(jarg1, jarg2);
    }

    public delegate IntPtr MenuItem_GetCommandTargetDelegate(HandleRef jarg1);
    public static MenuItem_GetCommandTargetDelegate _MenuItem_GetCommandTarget;
    public static IntPtr MenuItem_GetCommandTarget(HandleRef jarg1)
    {
        IntPtr ret = _MenuItem_GetCommandTarget(jarg1);

        return ret;
    }

    public delegate void MenuItem_SetCommandTargetDelegate(HandleRef jarg1, HandleRef jarg2);
    public static MenuItem_SetCommandTargetDelegate _MenuItem_SetCommandTarget;
    public static void MenuItem_SetCommandTarget(HandleRef jarg1, HandleRef jarg2)
    {
        _MenuItem_SetCommandTarget(jarg1, jarg2);
    }

    public delegate IntPtr MenuItem_GetIconDelegate(HandleRef jarg1);
    public static MenuItem_GetIconDelegate _MenuItem_GetIcon;
    public static IntPtr MenuItem_GetIcon(HandleRef jarg1)
    {
        IntPtr ret = _MenuItem_GetIcon(jarg1);

        return ret;
    }

    public delegate void MenuItem_SetIconDelegate(HandleRef jarg1, HandleRef jarg2);
    public static MenuItem_SetIconDelegate _MenuItem_SetIcon;
    public static void MenuItem_SetIcon(HandleRef jarg1, HandleRef jarg2)
    {
        _MenuItem_SetIcon(jarg1, jarg2);
    }

    public delegate IntPtr MenuItem_GetInputGestureTextDelegate(HandleRef jarg1);
    public static MenuItem_GetInputGestureTextDelegate _MenuItem_GetInputGestureText;
    public static IntPtr MenuItem_GetInputGestureText(HandleRef jarg1)
    {
        IntPtr ret = _MenuItem_GetInputGestureText(jarg1);

        return ret;
    }

    public delegate void MenuItem_SetInputGestureTextDelegate(HandleRef jarg1, IntPtr jarg2);
    public static MenuItem_SetInputGestureTextDelegate _MenuItem_SetInputGestureText;
    public static void MenuItem_SetInputGestureText(HandleRef jarg1, IntPtr jarg2)
    {
        _MenuItem_SetInputGestureText(jarg1, jarg2);
    }

    public delegate bool MenuItem_GetIsCheckableDelegate(HandleRef jarg1);
    public static MenuItem_GetIsCheckableDelegate _MenuItem_GetIsCheckable;
    public static bool MenuItem_GetIsCheckable(HandleRef jarg1)
    {
        bool ret = _MenuItem_GetIsCheckable(jarg1);

        return ret;
    }

    public delegate void MenuItem_SetIsCheckableDelegate(HandleRef jarg1, bool jarg2);
    public static MenuItem_SetIsCheckableDelegate _MenuItem_SetIsCheckable;
    public static void MenuItem_SetIsCheckable(HandleRef jarg1, bool jarg2)
    {
        _MenuItem_SetIsCheckable(jarg1, jarg2);
    }

    public delegate bool MenuItem_GetIsCheckedDelegate(HandleRef jarg1);
    public static MenuItem_GetIsCheckedDelegate _MenuItem_GetIsChecked;
    public static bool MenuItem_GetIsChecked(HandleRef jarg1)
    {
        bool ret = _MenuItem_GetIsChecked(jarg1);

        return ret;
    }

    public delegate void MenuItem_SetIsCheckedDelegate(HandleRef jarg1, bool jarg2);
    public static MenuItem_SetIsCheckedDelegate _MenuItem_SetIsChecked;
    public static void MenuItem_SetIsChecked(HandleRef jarg1, bool jarg2)
    {
        _MenuItem_SetIsChecked(jarg1, jarg2);
    }

    public delegate bool MenuItem_GetIsHighlightedDelegate(HandleRef jarg1);
    public static MenuItem_GetIsHighlightedDelegate _MenuItem_GetIsHighlighted;
    public static bool MenuItem_GetIsHighlighted(HandleRef jarg1)
    {
        bool ret = _MenuItem_GetIsHighlighted(jarg1);

        return ret;
    }

    public delegate bool MenuItem_GetIsPressedDelegate(HandleRef jarg1);
    public static MenuItem_GetIsPressedDelegate _MenuItem_GetIsPressed;
    public static bool MenuItem_GetIsPressed(HandleRef jarg1)
    {
        bool ret = _MenuItem_GetIsPressed(jarg1);

        return ret;
    }

    public delegate bool MenuItem_GetIsSubmenuOpenDelegate(HandleRef jarg1);
    public static MenuItem_GetIsSubmenuOpenDelegate _MenuItem_GetIsSubmenuOpen;
    public static bool MenuItem_GetIsSubmenuOpen(HandleRef jarg1)
    {
        bool ret = _MenuItem_GetIsSubmenuOpen(jarg1);

        return ret;
    }

    public delegate void MenuItem_SetIsSubmenuOpenDelegate(HandleRef jarg1, bool jarg2);
    public static MenuItem_SetIsSubmenuOpenDelegate _MenuItem_SetIsSubmenuOpen;
    public static void MenuItem_SetIsSubmenuOpen(HandleRef jarg1, bool jarg2)
    {
        _MenuItem_SetIsSubmenuOpen(jarg1, jarg2);
    }

    public delegate bool MenuItem_GetIsSuspendingPopupAnimationDelegate(HandleRef jarg1);
    public static MenuItem_GetIsSuspendingPopupAnimationDelegate _MenuItem_GetIsSuspendingPopupAnimation;
    public static bool MenuItem_GetIsSuspendingPopupAnimation(HandleRef jarg1)
    {
        bool ret = _MenuItem_GetIsSuspendingPopupAnimation(jarg1);

        return ret;
    }

    public delegate int MenuItem_GetRoleDelegate(HandleRef jarg1);
    public static MenuItem_GetRoleDelegate _MenuItem_GetRole;
    public static int MenuItem_GetRole(HandleRef jarg1)
    {
        int ret = _MenuItem_GetRole(jarg1);

        return ret;
    }

    public delegate bool MenuItem_GetStaysOpenOnClickDelegate(HandleRef jarg1);
    public static MenuItem_GetStaysOpenOnClickDelegate _MenuItem_GetStaysOpenOnClick;
    public static bool MenuItem_GetStaysOpenOnClick(HandleRef jarg1)
    {
        bool ret = _MenuItem_GetStaysOpenOnClick(jarg1);

        return ret;
    }

    public delegate void MenuItem_SetStaysOpenOnClickDelegate(HandleRef jarg1, bool jarg2);
    public static MenuItem_SetStaysOpenOnClickDelegate _MenuItem_SetStaysOpenOnClick;
    public static void MenuItem_SetStaysOpenOnClick(HandleRef jarg1, bool jarg2)
    {
        _MenuItem_SetStaysOpenOnClick(jarg1, jarg2);
    }

    public delegate void MenuItem_SeparatorStyleKey_setDelegate(HandleRef jarg1);
    public static MenuItem_SeparatorStyleKey_setDelegate _MenuItem_SeparatorStyleKey_set;
    public static void MenuItem_SeparatorStyleKey_set(HandleRef jarg1)
    {
        _MenuItem_SeparatorStyleKey_set(jarg1);
    }

    public delegate IntPtr MenuItem_SeparatorStyleKey_getDelegate();
    public static MenuItem_SeparatorStyleKey_getDelegate _MenuItem_SeparatorStyleKey_get;
    public static IntPtr MenuItem_SeparatorStyleKey_get()
    {
        IntPtr ret = _MenuItem_SeparatorStyleKey_get();

        return ret;
    }

    public delegate void delete_MenuItemDelegate(HandleRef jarg1);
    public static delete_MenuItemDelegate _delete_MenuItem;
    public static void delete_MenuItem(HandleRef jarg1)
    {
        _delete_MenuItem(jarg1);
    }

    public delegate IntPtr UserControl_GetSourceDelegate(HandleRef jarg1);
    public static UserControl_GetSourceDelegate _UserControl_GetSource;
    public static IntPtr UserControl_GetSource(HandleRef jarg1)
    {
        IntPtr ret = _UserControl_GetSource(jarg1);

        return ret;
    }

    public delegate IntPtr new_UserControlDelegate();
    public static new_UserControlDelegate _new_UserControl;
    public static IntPtr new_UserControl()
    {
        IntPtr ret = _new_UserControl();

        return ret;
    }

    public delegate void delete_UserControlDelegate(HandleRef jarg1);
    public static delete_UserControlDelegate _delete_UserControl;
    public static void delete_UserControl(HandleRef jarg1)
    {
        _delete_UserControl(jarg1);
    }

    public delegate IntPtr new_MessageDialogDelegate();
    public static new_MessageDialogDelegate _new_MessageDialog;
    public static IntPtr new_MessageDialog()
    {
        IntPtr ret = _new_MessageDialog();

        return ret;
    }

    public delegate void delete_MessageDialogDelegate(HandleRef jarg1);
    public static delete_MessageDialogDelegate _delete_MessageDialog;
    public static void delete_MessageDialog(HandleRef jarg1)
    {
        _delete_MessageDialog(jarg1);
    }

    public delegate IntPtr MessageDialog_GetMessageDelegate(HandleRef jarg1);
    public static MessageDialog_GetMessageDelegate _MessageDialog_GetMessage;
    public static IntPtr MessageDialog_GetMessage(HandleRef jarg1)
    {
        IntPtr ret = _MessageDialog_GetMessage(jarg1);

        return ret;
    }

    public delegate void MessageDialog_SetMessageDelegate(HandleRef jarg1, IntPtr jarg2);
    public static MessageDialog_SetMessageDelegate _MessageDialog_SetMessage;
    public static void MessageDialog_SetMessage(HandleRef jarg1, IntPtr jarg2)
    {
        _MessageDialog_SetMessage(jarg1, jarg2);
    }

    public delegate IntPtr MessageDialog_GetCaptionDelegate(HandleRef jarg1);
    public static MessageDialog_GetCaptionDelegate _MessageDialog_GetCaption;
    public static IntPtr MessageDialog_GetCaption(HandleRef jarg1)
    {
        IntPtr ret = _MessageDialog_GetCaption(jarg1);

        return ret;
    }

    public delegate void MessageDialog_SetCaptionDelegate(HandleRef jarg1, IntPtr jarg2);
    public static MessageDialog_SetCaptionDelegate _MessageDialog_SetCaption;
    public static void MessageDialog_SetCaption(HandleRef jarg1, IntPtr jarg2)
    {
        _MessageDialog_SetCaption(jarg1, jarg2);
    }

    public delegate IntPtr MessageDialog_GetButtonsDelegate(HandleRef jarg1);
    public static MessageDialog_GetButtonsDelegate _MessageDialog_GetButtons;
    public static IntPtr MessageDialog_GetButtons(HandleRef jarg1)
    {
        IntPtr ret = _MessageDialog_GetButtons(jarg1);

        return ret;
    }

    public delegate void MessageDialog_SetButtonsDelegate(HandleRef jarg1, HandleRef jarg2);
    public static MessageDialog_SetButtonsDelegate _MessageDialog_SetButtons;
    public static void MessageDialog_SetButtons(HandleRef jarg1, HandleRef jarg2)
    {
        _MessageDialog_SetButtons(jarg1, jarg2);
    }

    public delegate IntPtr MessageDialog_GetImageDelegate(HandleRef jarg1);
    public static MessageDialog_GetImageDelegate _MessageDialog_GetImage;
    public static IntPtr MessageDialog_GetImage(HandleRef jarg1)
    {
        IntPtr ret = _MessageDialog_GetImage(jarg1);

        return ret;
    }

    public delegate void MessageDialog_SetImageDelegate(HandleRef jarg1, HandleRef jarg2);
    public static MessageDialog_SetImageDelegate _MessageDialog_SetImage;
    public static void MessageDialog_SetImage(HandleRef jarg1, HandleRef jarg2)
    {
        _MessageDialog_SetImage(jarg1, jarg2);
    }

    public delegate IntPtr MessageDialog_Show__SWIG_0Delegate(HandleRef jarg1, string jarg2, string jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6);
    public static MessageDialog_Show__SWIG_0Delegate _MessageDialog_Show__SWIG_0;
    public static IntPtr MessageDialog_Show__SWIG_0(HandleRef jarg1, string jarg2, string jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6)
    {
        IntPtr ret = _MessageDialog_Show__SWIG_0(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6);

        return ret;
    }

    public delegate IntPtr MessageDialog_Show__SWIG_1Delegate(HandleRef jarg1, string jarg2, string jarg3, HandleRef jarg4, HandleRef jarg5);
    public static MessageDialog_Show__SWIG_1Delegate _MessageDialog_Show__SWIG_1;
    public static IntPtr MessageDialog_Show__SWIG_1(HandleRef jarg1, string jarg2, string jarg3, HandleRef jarg4, HandleRef jarg5)
    {
        IntPtr ret = _MessageDialog_Show__SWIG_1(jarg1, jarg2, jarg3, jarg4, jarg5);

        return ret;
    }

    public delegate IntPtr MessageDialog_Show__SWIG_2Delegate(HandleRef jarg1, string jarg2, string jarg3, HandleRef jarg4);
    public static MessageDialog_Show__SWIG_2Delegate _MessageDialog_Show__SWIG_2;
    public static IntPtr MessageDialog_Show__SWIG_2(HandleRef jarg1, string jarg2, string jarg3, HandleRef jarg4)
    {
        IntPtr ret = _MessageDialog_Show__SWIG_2(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr MessageDialog_Show__SWIG_3Delegate(HandleRef jarg1, string jarg2, string jarg3);
    public static MessageDialog_Show__SWIG_3Delegate _MessageDialog_Show__SWIG_3;
    public static IntPtr MessageDialog_Show__SWIG_3(HandleRef jarg1, string jarg2, string jarg3)
    {
        IntPtr ret = _MessageDialog_Show__SWIG_3(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr MessageDialog_Show__SWIG_4Delegate(HandleRef jarg1, string jarg2);
    public static MessageDialog_Show__SWIG_4Delegate _MessageDialog_Show__SWIG_4;
    public static IntPtr MessageDialog_Show__SWIG_4(HandleRef jarg1, string jarg2)
    {
        IntPtr ret = _MessageDialog_Show__SWIG_4(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_MouseDelegate(HandleRef jarg1);
    public static new_MouseDelegate _new_Mouse;
    public static IntPtr new_Mouse(HandleRef jarg1)
    {
        IntPtr ret = _new_Mouse(jarg1);

        return ret;
    }

    public delegate void delete_MouseDelegate(HandleRef jarg1);
    public static delete_MouseDelegate _delete_Mouse;
    public static void delete_Mouse(HandleRef jarg1)
    {
        _delete_Mouse(jarg1);
    }

    public delegate void Mouse_ResetStateDelegate(HandleRef jarg1);
    public static Mouse_ResetStateDelegate _Mouse_ResetState;
    public static void Mouse_ResetState(HandleRef jarg1)
    {
        _Mouse_ResetState(jarg1);
    }

    public delegate IntPtr Mouse_GetPositionDelegate(HandleRef jarg1);
    public static Mouse_GetPositionDelegate _Mouse_GetPosition;
    public static IntPtr Mouse_GetPosition(HandleRef jarg1)
    {
        IntPtr ret = _Mouse_GetPosition(jarg1);

        return ret;
    }

    public delegate int Mouse_GetButtonStateDelegate(HandleRef jarg1, int jarg2);
    public static Mouse_GetButtonStateDelegate _Mouse_GetButtonState;
    public static int Mouse_GetButtonState(HandleRef jarg1, int jarg2)
    {
        int ret = _Mouse_GetButtonState(jarg1, jarg2);

        return ret;
    }

    public delegate bool Mouse_Capture__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, int jarg3);
    public static Mouse_Capture__SWIG_0Delegate _Mouse_Capture__SWIG_0;
    public static bool Mouse_Capture__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3)
    {
        bool ret = _Mouse_Capture__SWIG_0(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate bool Mouse_Capture__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static Mouse_Capture__SWIG_1Delegate _Mouse_Capture__SWIG_1;
    public static bool Mouse_Capture__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _Mouse_Capture__SWIG_1(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr Mouse_GetCapturedDelegate(HandleRef jarg1);
    public static Mouse_GetCapturedDelegate _Mouse_GetCaptured;
    public static IntPtr Mouse_GetCaptured(HandleRef jarg1)
    {
        IntPtr ret = _Mouse_GetCaptured(jarg1);

        return ret;
    }

    public delegate IntPtr Mouse_DirectlyOverChangedDelegate(HandleRef jarg1);
    public static Mouse_DirectlyOverChangedDelegate _Mouse_DirectlyOverChanged;
    public static IntPtr Mouse_DirectlyOverChanged(HandleRef jarg1)
    {
        IntPtr ret = _Mouse_DirectlyOverChanged(jarg1);

        return ret;
    }

    public delegate IntPtr new_MultiTriggerDelegate();
    public static new_MultiTriggerDelegate _new_MultiTrigger;
    public static IntPtr new_MultiTrigger()
    {
        IntPtr ret = _new_MultiTrigger();

        return ret;
    }

    public delegate void delete_MultiTriggerDelegate(HandleRef jarg1);
    public static delete_MultiTriggerDelegate _delete_MultiTrigger;
    public static void delete_MultiTrigger(HandleRef jarg1)
    {
        _delete_MultiTrigger(jarg1);
    }

    public delegate IntPtr MultiTrigger_GetConditionsDelegate(HandleRef jarg1);
    public static MultiTrigger_GetConditionsDelegate _MultiTrigger_GetConditions;
    public static IntPtr MultiTrigger_GetConditions(HandleRef jarg1)
    {
        IntPtr ret = _MultiTrigger_GetConditions(jarg1);

        return ret;
    }

    public delegate IntPtr MultiTrigger_GetSettersDelegate(HandleRef jarg1);
    public static MultiTrigger_GetSettersDelegate _MultiTrigger_GetSetters;
    public static IntPtr MultiTrigger_GetSetters(HandleRef jarg1)
    {
        IntPtr ret = _MultiTrigger_GetSetters(jarg1);

        return ret;
    }

    public delegate IntPtr MultiTrigger_FindSetterDelegate(HandleRef jarg1, HandleRef jarg2);
    public static MultiTrigger_FindSetterDelegate _MultiTrigger_FindSetter;
    public static IntPtr MultiTrigger_FindSetter(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _MultiTrigger_FindSetter(jarg1, jarg2);

        return ret;
    }

    public delegate bool MultiTrigger_HasConditionDelegate(HandleRef jarg1, HandleRef jarg2);
    public static MultiTrigger_HasConditionDelegate _MultiTrigger_HasCondition;
    public static bool MultiTrigger_HasCondition(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _MultiTrigger_HasCondition(jarg1, jarg2);

        return ret;
    }

    public delegate void MultiTrigger_RegisterSourcesDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static MultiTrigger_RegisterSourcesDelegate _MultiTrigger_RegisterSources;
    public static void MultiTrigger_RegisterSources(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        _MultiTrigger_RegisterSources(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate void MultiTrigger_UnregisterSourcesDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static MultiTrigger_UnregisterSourcesDelegate _MultiTrigger_UnregisterSources;
    public static void MultiTrigger_UnregisterSources(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        _MultiTrigger_UnregisterSources(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate void MultiTrigger_RegisterEventsDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);
    public static MultiTrigger_RegisterEventsDelegate _MultiTrigger_RegisterEvents;
    public static void MultiTrigger_RegisterEvents(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4)
    {
        _MultiTrigger_RegisterEvents(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate void MultiTrigger_UnregisterEventsDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);
    public static MultiTrigger_UnregisterEventsDelegate _MultiTrigger_UnregisterEvents;
    public static void MultiTrigger_UnregisterEvents(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4)
    {
        _MultiTrigger_UnregisterEvents(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate bool MultiTrigger_CheckDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, bool jarg6);
    public static MultiTrigger_CheckDelegate _MultiTrigger_Check;
    public static bool MultiTrigger_Check(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, bool jarg6)
    {
        bool ret = _MultiTrigger_Check(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6);

        return ret;
    }

    public delegate IntPtr MultiTrigger_FindValueDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);
    public static MultiTrigger_FindValueDelegate _MultiTrigger_FindValue;
    public static IntPtr MultiTrigger_FindValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5)
    {
        IntPtr ret = _MultiTrigger_FindValue(jarg1, jarg2, jarg3, jarg4, jarg5);

        return ret;
    }

    public delegate void MultiTrigger_Invalidate__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4, bool jarg5, byte jarg6);
    public static MultiTrigger_Invalidate__SWIG_0Delegate _MultiTrigger_Invalidate__SWIG_0;
    public static void MultiTrigger_Invalidate__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4, bool jarg5, byte jarg6)
    {
        _MultiTrigger_Invalidate__SWIG_0(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6);
    }

    public delegate void MultiTrigger_Invalidate__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6, HandleRef jarg7, bool jarg8, bool jarg9, byte jarg10);
    public static MultiTrigger_Invalidate__SWIG_1Delegate _MultiTrigger_Invalidate__SWIG_1;
    public static void MultiTrigger_Invalidate__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6, HandleRef jarg7, bool jarg8, bool jarg9, byte jarg10)
    {
        _MultiTrigger_Invalidate__SWIG_1(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6, jarg7, jarg8, jarg9, jarg10);
    }

    public delegate IntPtr new_NameScopeDelegate();
    public static new_NameScopeDelegate _new_NameScope;
    public static IntPtr new_NameScope()
    {
        IntPtr ret = _new_NameScope();

        return ret;
    }

    public delegate void delete_NameScopeDelegate(HandleRef jarg1);
    public static delete_NameScopeDelegate _delete_NameScope;
    public static void delete_NameScope(HandleRef jarg1)
    {
        _delete_NameScope(jarg1);
    }

    public delegate IntPtr NameScope_GetNameScopeDelegate(HandleRef jarg1);
    public static NameScope_GetNameScopeDelegate _NameScope_GetNameScope;
    public static IntPtr NameScope_GetNameScope(HandleRef jarg1)
    {
        IntPtr ret = _NameScope_GetNameScope(jarg1);

        return ret;
    }

    public delegate void NameScope_SetNameScopeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static NameScope_SetNameScopeDelegate _NameScope_SetNameScope;
    public static void NameScope_SetNameScope(HandleRef jarg1, HandleRef jarg2)
    {
        _NameScope_SetNameScope(jarg1, jarg2);
    }

    public delegate string NameScope_FindObjectDelegate(HandleRef jarg1, HandleRef jarg2);
    public static NameScope_FindObjectDelegate _NameScope_FindObject;
    public static string NameScope_FindObject(HandleRef jarg1, HandleRef jarg2)
    {
        string ret = _NameScope_FindObject(jarg1, jarg2);

        return ret;
    }

    public delegate void NameScope_EnumNamedObjects__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static NameScope_EnumNamedObjects__SWIG_0Delegate _NameScope_EnumNamedObjects__SWIG_0;
    public static void NameScope_EnumNamedObjects__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _NameScope_EnumNamedObjects__SWIG_0(jarg1, jarg2, jarg3);
    }

    public delegate void NameScope_EnumNamedObjects__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static NameScope_EnumNamedObjects__SWIG_1Delegate _NameScope_EnumNamedObjects__SWIG_1;
    public static void NameScope_EnumNamedObjects__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        _NameScope_EnumNamedObjects__SWIG_1(jarg1, jarg2);
    }

    public delegate IntPtr NameScope_FindNameDelegate(HandleRef jarg1, string jarg2);
    public static NameScope_FindNameDelegate _NameScope_FindName;
    public static IntPtr NameScope_FindName(HandleRef jarg1, string jarg2)
    {
        IntPtr ret = _NameScope_FindName(jarg1, jarg2);

        return ret;
    }

    public delegate void NameScope_RegisterNameDelegate(HandleRef jarg1, string jarg2, HandleRef jarg3);
    public static NameScope_RegisterNameDelegate _NameScope_RegisterName;
    public static void NameScope_RegisterName(HandleRef jarg1, string jarg2, HandleRef jarg3)
    {
        _NameScope_RegisterName(jarg1, jarg2, jarg3);
    }

    public delegate void NameScope_UnregisterNameDelegate(HandleRef jarg1, string jarg2);
    public static NameScope_UnregisterNameDelegate _NameScope_UnregisterName;
    public static void NameScope_UnregisterName(HandleRef jarg1, string jarg2)
    {
        _NameScope_UnregisterName(jarg1, jarg2);
    }

    public delegate void NameScope_UpdateNameDelegate(HandleRef jarg1, string jarg2, HandleRef jarg3);
    public static NameScope_UpdateNameDelegate _NameScope_UpdateName;
    public static void NameScope_UpdateName(HandleRef jarg1, string jarg2, HandleRef jarg3)
    {
        _NameScope_UpdateName(jarg1, jarg2, jarg3);
    }

    public delegate IntPtr NameScope_NameScopeChangedDelegate(HandleRef jarg1);
    public static NameScope_NameScopeChangedDelegate _NameScope_NameScopeChanged;
    public static IntPtr NameScope_NameScopeChanged(HandleRef jarg1)
    {
        IntPtr ret = _NameScope_NameScopeChanged(jarg1);

        return ret;
    }

    public delegate IntPtr NameScope_NameScopeDestroyedDelegate(HandleRef jarg1);
    public static NameScope_NameScopeDestroyedDelegate _NameScope_NameScopeDestroyed;
    public static IntPtr NameScope_NameScopeDestroyed(HandleRef jarg1)
    {
        IntPtr ret = _NameScope_NameScopeDestroyed(jarg1);

        return ret;
    }

    public delegate IntPtr NameScope_EnumObjectsDelegate(HandleRef jarg1);
    public static NameScope_EnumObjectsDelegate _NameScope_EnumObjects;
    public static IntPtr NameScope_EnumObjects(HandleRef jarg1)
    {
        IntPtr ret = _NameScope_EnumObjects(jarg1);

        return ret;
    }

    public delegate IntPtr new_PageDelegate();
    public static new_PageDelegate _new_Page;
    public static IntPtr new_Page()
    {
        IntPtr ret = _new_Page();

        return ret;
    }

    public delegate void delete_PageDelegate(HandleRef jarg1);
    public static delete_PageDelegate _delete_Page;
    public static void delete_Page(HandleRef jarg1)
    {
        _delete_Page(jarg1);
    }

    public delegate IntPtr Page_GetIconDelegate(HandleRef jarg1);
    public static Page_GetIconDelegate _Page_GetIcon;
    public static IntPtr Page_GetIcon(HandleRef jarg1)
    {
        IntPtr ret = _Page_GetIcon(jarg1);

        return ret;
    }

    public delegate void Page_SetIconDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Page_SetIconDelegate _Page_SetIcon;
    public static void Page_SetIcon(HandleRef jarg1, HandleRef jarg2)
    {
        _Page_SetIcon(jarg1, jarg2);
    }

    public delegate IntPtr Page_GetTitleDelegate(HandleRef jarg1);
    public static Page_GetTitleDelegate _Page_GetTitle;
    public static IntPtr Page_GetTitle(HandleRef jarg1)
    {
        IntPtr ret = _Page_GetTitle(jarg1);

        return ret;
    }

    public delegate void Page_SetTitleDelegate(HandleRef jarg1, IntPtr jarg2);
    public static Page_SetTitleDelegate _Page_SetTitle;
    public static void Page_SetTitle(HandleRef jarg1, IntPtr jarg2)
    {
        _Page_SetTitle(jarg1, jarg2);
    }

    public delegate IntPtr new_PasswordBoxDelegate();
    public static new_PasswordBoxDelegate _new_PasswordBox;
    public static IntPtr new_PasswordBox()
    {
        IntPtr ret = _new_PasswordBox();

        return ret;
    }

    public delegate int PasswordBox_GetMaxLengthDelegate(HandleRef jarg1);
    public static PasswordBox_GetMaxLengthDelegate _PasswordBox_GetMaxLength;
    public static int PasswordBox_GetMaxLength(HandleRef jarg1)
    {
        int ret = _PasswordBox_GetMaxLength(jarg1);

        return ret;
    }

    public delegate void PasswordBox_SetMaxLengthDelegate(HandleRef jarg1, int jarg2);
    public static PasswordBox_SetMaxLengthDelegate _PasswordBox_SetMaxLength;
    public static void PasswordBox_SetMaxLength(HandleRef jarg1, int jarg2)
    {
        _PasswordBox_SetMaxLength(jarg1, jarg2);
    }

    public delegate char PasswordBox_GetPasswordCharDelegate(HandleRef jarg1);
    public static PasswordBox_GetPasswordCharDelegate _PasswordBox_GetPasswordChar;
    public static char PasswordBox_GetPasswordChar(HandleRef jarg1)
    {
        char ret = _PasswordBox_GetPasswordChar(jarg1);

        return ret;
    }

    public delegate void PasswordBox_SetPasswordCharDelegate(HandleRef jarg1, char jarg2);
    public static PasswordBox_SetPasswordCharDelegate _PasswordBox_SetPasswordChar;
    public static void PasswordBox_SetPasswordChar(HandleRef jarg1, char jarg2)
    {
        _PasswordBox_SetPasswordChar(jarg1, jarg2);
    }

    public delegate IntPtr PasswordBox_GetPasswordDelegate(HandleRef jarg1);
    public static PasswordBox_GetPasswordDelegate _PasswordBox_GetPassword;
    public static IntPtr PasswordBox_GetPassword(HandleRef jarg1)
    {
        IntPtr ret = _PasswordBox_GetPassword(jarg1);

        return ret;
    }

    public delegate void PasswordBox_SetPasswordDelegate(HandleRef jarg1, IntPtr jarg2);
    public static PasswordBox_SetPasswordDelegate _PasswordBox_SetPassword;
    public static void PasswordBox_SetPassword(HandleRef jarg1, IntPtr jarg2)
    {
        _PasswordBox_SetPassword(jarg1, jarg2);
    }

    public delegate void delete_PasswordBoxDelegate(HandleRef jarg1);
    public static delete_PasswordBoxDelegate _delete_PasswordBox;
    public static void delete_PasswordBox(HandleRef jarg1)
    {
        _delete_PasswordBox(jarg1);
    }

    public delegate IntPtr new_PathDelegate();
    public static new_PathDelegate _new_Path;
    public static IntPtr new_Path()
    {
        IntPtr ret = _new_Path();

        return ret;
    }

    public delegate void delete_PathDelegate(HandleRef jarg1);
    public static delete_PathDelegate _delete_Path;
    public static void delete_Path(HandleRef jarg1)
    {
        _delete_Path(jarg1);
    }

    public delegate IntPtr Path_GetDataDelegate(HandleRef jarg1);
    public static Path_GetDataDelegate _Path_GetData;
    public static IntPtr Path_GetData(HandleRef jarg1)
    {
        IntPtr ret = _Path_GetData(jarg1);

        return ret;
    }

    public delegate void Path_SetDataDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Path_SetDataDelegate _Path_SetData;
    public static void Path_SetData(HandleRef jarg1, HandleRef jarg2)
    {
        _Path_SetData(jarg1, jarg2);
    }

    public delegate IntPtr new_PenDelegate();
    public static new_PenDelegate _new_Pen;
    public static IntPtr new_Pen()
    {
        IntPtr ret = _new_Pen();

        return ret;
    }

    public delegate void delete_PenDelegate(HandleRef jarg1);
    public static delete_PenDelegate _delete_Pen;
    public static void delete_Pen(HandleRef jarg1)
    {
        _delete_Pen(jarg1);
    }

    public delegate IntPtr Pen_GetBrushDelegate(HandleRef jarg1);
    public static Pen_GetBrushDelegate _Pen_GetBrush;
    public static IntPtr Pen_GetBrush(HandleRef jarg1)
    {
        IntPtr ret = _Pen_GetBrush(jarg1);

        return ret;
    }

    public delegate void Pen_SetBrushDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Pen_SetBrushDelegate _Pen_SetBrush;
    public static void Pen_SetBrush(HandleRef jarg1, HandleRef jarg2)
    {
        _Pen_SetBrush(jarg1, jarg2);
    }

    public delegate int Pen_GetDashCapDelegate(HandleRef jarg1);
    public static Pen_GetDashCapDelegate _Pen_GetDashCap;
    public static int Pen_GetDashCap(HandleRef jarg1)
    {
        int ret = _Pen_GetDashCap(jarg1);

        return ret;
    }

    public delegate void Pen_SetDashCapDelegate(HandleRef jarg1, int jarg2);
    public static Pen_SetDashCapDelegate _Pen_SetDashCap;
    public static void Pen_SetDashCap(HandleRef jarg1, int jarg2)
    {
        _Pen_SetDashCap(jarg1, jarg2);
    }

    public delegate IntPtr Pen_GetDashStyleDelegate(HandleRef jarg1);
    public static Pen_GetDashStyleDelegate _Pen_GetDashStyle;
    public static IntPtr Pen_GetDashStyle(HandleRef jarg1)
    {
        IntPtr ret = _Pen_GetDashStyle(jarg1);

        return ret;
    }

    public delegate void Pen_SetDashStyleDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Pen_SetDashStyleDelegate _Pen_SetDashStyle;
    public static void Pen_SetDashStyle(HandleRef jarg1, HandleRef jarg2)
    {
        _Pen_SetDashStyle(jarg1, jarg2);
    }

    public delegate int Pen_GetEndLineCapDelegate(HandleRef jarg1);
    public static Pen_GetEndLineCapDelegate _Pen_GetEndLineCap;
    public static int Pen_GetEndLineCap(HandleRef jarg1)
    {
        int ret = _Pen_GetEndLineCap(jarg1);

        return ret;
    }

    public delegate void Pen_SetEndLineCapDelegate(HandleRef jarg1, int jarg2);
    public static Pen_SetEndLineCapDelegate _Pen_SetEndLineCap;
    public static void Pen_SetEndLineCap(HandleRef jarg1, int jarg2)
    {
        _Pen_SetEndLineCap(jarg1, jarg2);
    }

    public delegate int Pen_GetLineJoinDelegate(HandleRef jarg1);
    public static Pen_GetLineJoinDelegate _Pen_GetLineJoin;
    public static int Pen_GetLineJoin(HandleRef jarg1)
    {
        int ret = _Pen_GetLineJoin(jarg1);

        return ret;
    }

    public delegate void Pen_SetLineJoinDelegate(HandleRef jarg1, int jarg2);
    public static Pen_SetLineJoinDelegate _Pen_SetLineJoin;
    public static void Pen_SetLineJoin(HandleRef jarg1, int jarg2)
    {
        _Pen_SetLineJoin(jarg1, jarg2);
    }

    public delegate float Pen_GetMiterLimitDelegate(HandleRef jarg1);
    public static Pen_GetMiterLimitDelegate _Pen_GetMiterLimit;
    public static float Pen_GetMiterLimit(HandleRef jarg1)
    {
        float ret = _Pen_GetMiterLimit(jarg1);

        return ret;
    }

    public delegate void Pen_SetMiterLimitDelegate(HandleRef jarg1, float jarg2);
    public static Pen_SetMiterLimitDelegate _Pen_SetMiterLimit;
    public static void Pen_SetMiterLimit(HandleRef jarg1, float jarg2)
    {
        _Pen_SetMiterLimit(jarg1, jarg2);
    }

    public delegate int Pen_GetStartLineCapDelegate(HandleRef jarg1);
    public static Pen_GetStartLineCapDelegate _Pen_GetStartLineCap;
    public static int Pen_GetStartLineCap(HandleRef jarg1)
    {
        int ret = _Pen_GetStartLineCap(jarg1);

        return ret;
    }

    public delegate void Pen_SetStartLineCapDelegate(HandleRef jarg1, int jarg2);
    public static Pen_SetStartLineCapDelegate _Pen_SetStartLineCap;
    public static void Pen_SetStartLineCap(HandleRef jarg1, int jarg2)
    {
        _Pen_SetStartLineCap(jarg1, jarg2);
    }

    public delegate float Pen_GetThicknessDelegate(HandleRef jarg1);
    public static Pen_GetThicknessDelegate _Pen_GetThickness;
    public static float Pen_GetThickness(HandleRef jarg1)
    {
        float ret = _Pen_GetThickness(jarg1);

        return ret;
    }

    public delegate void Pen_SetThicknessDelegate(HandleRef jarg1, float jarg2);
    public static Pen_SetThicknessDelegate _Pen_SetThickness;
    public static void Pen_SetThickness(HandleRef jarg1, float jarg2)
    {
        _Pen_SetThickness(jarg1, jarg2);
    }

    public delegate bool Pen_IsRenderableDelegate(HandleRef jarg1);
    public static Pen_IsRenderableDelegate _Pen_IsRenderable;
    public static bool Pen_IsRenderable(HandleRef jarg1)
    {
        bool ret = _Pen_IsRenderable(jarg1);

        return ret;
    }

    public delegate void Pen_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static Pen_CreateRenderProxyDelegate _Pen_CreateRenderProxy;
    public static void Pen_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _Pen_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void Pen_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static Pen_UpdateRenderProxyDelegate _Pen_UpdateRenderProxy;
    public static void Pen_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _Pen_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void Pen_UnregisterRendererDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Pen_UnregisterRendererDelegate _Pen_UnregisterRenderer;
    public static void Pen_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2)
    {
        _Pen_UnregisterRenderer(jarg1, jarg2);
    }

    public delegate IntPtr new_PlaneProjectionDelegate();
    public static new_PlaneProjectionDelegate _new_PlaneProjection;
    public static IntPtr new_PlaneProjection()
    {
        IntPtr ret = _new_PlaneProjection();

        return ret;
    }

    public delegate void delete_PlaneProjectionDelegate(HandleRef jarg1);
    public static delete_PlaneProjectionDelegate _delete_PlaneProjection;
    public static void delete_PlaneProjection(HandleRef jarg1)
    {
        _delete_PlaneProjection(jarg1);
    }

    public delegate IntPtr PlaneProjection_ConstructProjectionMatrixDelegate(HandleRef jarg1, HandleRef jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10, float jarg11, float jarg12, float jarg13, float jarg14);
    public static PlaneProjection_ConstructProjectionMatrixDelegate _PlaneProjection_ConstructProjectionMatrix;
    public static IntPtr PlaneProjection_ConstructProjectionMatrix(HandleRef jarg1, HandleRef jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10, float jarg11, float jarg12, float jarg13, float jarg14)
    {
        IntPtr ret = _PlaneProjection_ConstructProjectionMatrix(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6, jarg7, jarg8, jarg9, jarg10, jarg11, jarg12, jarg13, jarg14);

        return ret;
    }

    public delegate float PlaneProjection_GetCenterOfRotationXDelegate(HandleRef jarg1);
    public static PlaneProjection_GetCenterOfRotationXDelegate _PlaneProjection_GetCenterOfRotationX;
    public static float PlaneProjection_GetCenterOfRotationX(HandleRef jarg1)
    {
        float ret = _PlaneProjection_GetCenterOfRotationX(jarg1);

        return ret;
    }

    public delegate void PlaneProjection_SetCenterOfRotationXDelegate(HandleRef jarg1, float jarg2);
    public static PlaneProjection_SetCenterOfRotationXDelegate _PlaneProjection_SetCenterOfRotationX;
    public static void PlaneProjection_SetCenterOfRotationX(HandleRef jarg1, float jarg2)
    {
        _PlaneProjection_SetCenterOfRotationX(jarg1, jarg2);
    }

    public delegate float PlaneProjection_GetCenterOfRotationYDelegate(HandleRef jarg1);
    public static PlaneProjection_GetCenterOfRotationYDelegate _PlaneProjection_GetCenterOfRotationY;
    public static float PlaneProjection_GetCenterOfRotationY(HandleRef jarg1)
    {
        float ret = _PlaneProjection_GetCenterOfRotationY(jarg1);

        return ret;
    }

    public delegate void PlaneProjection_SetCenterOfRotationYDelegate(HandleRef jarg1, float jarg2);
    public static PlaneProjection_SetCenterOfRotationYDelegate _PlaneProjection_SetCenterOfRotationY;
    public static void PlaneProjection_SetCenterOfRotationY(HandleRef jarg1, float jarg2)
    {
        _PlaneProjection_SetCenterOfRotationY(jarg1, jarg2);
    }

    public delegate float PlaneProjection_GetCenterOfRotationZDelegate(HandleRef jarg1);
    public static PlaneProjection_GetCenterOfRotationZDelegate _PlaneProjection_GetCenterOfRotationZ;
    public static float PlaneProjection_GetCenterOfRotationZ(HandleRef jarg1)
    {
        float ret = _PlaneProjection_GetCenterOfRotationZ(jarg1);

        return ret;
    }

    public delegate void PlaneProjection_SetCenterOfRotationZDelegate(HandleRef jarg1, float jarg2);
    public static PlaneProjection_SetCenterOfRotationZDelegate _PlaneProjection_SetCenterOfRotationZ;
    public static void PlaneProjection_SetCenterOfRotationZ(HandleRef jarg1, float jarg2)
    {
        _PlaneProjection_SetCenterOfRotationZ(jarg1, jarg2);
    }

    public delegate float PlaneProjection_GetGlobalOffsetXDelegate(HandleRef jarg1);
    public static PlaneProjection_GetGlobalOffsetXDelegate _PlaneProjection_GetGlobalOffsetX;
    public static float PlaneProjection_GetGlobalOffsetX(HandleRef jarg1)
    {
        float ret = _PlaneProjection_GetGlobalOffsetX(jarg1);

        return ret;
    }

    public delegate void PlaneProjection_SetGlobalOffsetXDelegate(HandleRef jarg1, float jarg2);
    public static PlaneProjection_SetGlobalOffsetXDelegate _PlaneProjection_SetGlobalOffsetX;
    public static void PlaneProjection_SetGlobalOffsetX(HandleRef jarg1, float jarg2)
    {
        _PlaneProjection_SetGlobalOffsetX(jarg1, jarg2);
    }

    public delegate float PlaneProjection_GetGlobalOffsetYDelegate(HandleRef jarg1);
    public static PlaneProjection_GetGlobalOffsetYDelegate _PlaneProjection_GetGlobalOffsetY;
    public static float PlaneProjection_GetGlobalOffsetY(HandleRef jarg1)
    {
        float ret = _PlaneProjection_GetGlobalOffsetY(jarg1);

        return ret;
    }

    public delegate void PlaneProjection_SetGlobalOffsetYDelegate(HandleRef jarg1, float jarg2);
    public static PlaneProjection_SetGlobalOffsetYDelegate _PlaneProjection_SetGlobalOffsetY;
    public static void PlaneProjection_SetGlobalOffsetY(HandleRef jarg1, float jarg2)
    {
        _PlaneProjection_SetGlobalOffsetY(jarg1, jarg2);
    }

    public delegate float PlaneProjection_GetGlobalOffsetZDelegate(HandleRef jarg1);
    public static PlaneProjection_GetGlobalOffsetZDelegate _PlaneProjection_GetGlobalOffsetZ;
    public static float PlaneProjection_GetGlobalOffsetZ(HandleRef jarg1)
    {
        float ret = _PlaneProjection_GetGlobalOffsetZ(jarg1);

        return ret;
    }

    public delegate void PlaneProjection_SetGlobalOffsetZDelegate(HandleRef jarg1, float jarg2);
    public static PlaneProjection_SetGlobalOffsetZDelegate _PlaneProjection_SetGlobalOffsetZ;
    public static void PlaneProjection_SetGlobalOffsetZ(HandleRef jarg1, float jarg2)
    {
        _PlaneProjection_SetGlobalOffsetZ(jarg1, jarg2);
    }

    public delegate float PlaneProjection_GetLocalOffsetXDelegate(HandleRef jarg1);
    public static PlaneProjection_GetLocalOffsetXDelegate _PlaneProjection_GetLocalOffsetX;
    public static float PlaneProjection_GetLocalOffsetX(HandleRef jarg1)
    {
        float ret = _PlaneProjection_GetLocalOffsetX(jarg1);

        return ret;
    }

    public delegate void PlaneProjection_SetLocalOffsetXDelegate(HandleRef jarg1, float jarg2);
    public static PlaneProjection_SetLocalOffsetXDelegate _PlaneProjection_SetLocalOffsetX;
    public static void PlaneProjection_SetLocalOffsetX(HandleRef jarg1, float jarg2)
    {
        _PlaneProjection_SetLocalOffsetX(jarg1, jarg2);
    }

    public delegate float PlaneProjection_GetLocalOffsetYDelegate(HandleRef jarg1);
    public static PlaneProjection_GetLocalOffsetYDelegate _PlaneProjection_GetLocalOffsetY;
    public static float PlaneProjection_GetLocalOffsetY(HandleRef jarg1)
    {
        float ret = _PlaneProjection_GetLocalOffsetY(jarg1);

        return ret;
    }

    public delegate void PlaneProjection_SetLocalOffsetYDelegate(HandleRef jarg1, float jarg2);
    public static PlaneProjection_SetLocalOffsetYDelegate _PlaneProjection_SetLocalOffsetY;
    public static void PlaneProjection_SetLocalOffsetY(HandleRef jarg1, float jarg2)
    {
        _PlaneProjection_SetLocalOffsetY(jarg1, jarg2);
    }

    public delegate float PlaneProjection_GetLocalOffsetZDelegate(HandleRef jarg1);
    public static PlaneProjection_GetLocalOffsetZDelegate _PlaneProjection_GetLocalOffsetZ;
    public static float PlaneProjection_GetLocalOffsetZ(HandleRef jarg1)
    {
        float ret = _PlaneProjection_GetLocalOffsetZ(jarg1);

        return ret;
    }

    public delegate void PlaneProjection_SetLocalOffsetZDelegate(HandleRef jarg1, float jarg2);
    public static PlaneProjection_SetLocalOffsetZDelegate _PlaneProjection_SetLocalOffsetZ;
    public static void PlaneProjection_SetLocalOffsetZ(HandleRef jarg1, float jarg2)
    {
        _PlaneProjection_SetLocalOffsetZ(jarg1, jarg2);
    }

    public delegate IntPtr PlaneProjection_GetProjectionMatrixDelegate(HandleRef jarg1);
    public static PlaneProjection_GetProjectionMatrixDelegate _PlaneProjection_GetProjectionMatrix;
    public static IntPtr PlaneProjection_GetProjectionMatrix(HandleRef jarg1)
    {
        IntPtr ret = _PlaneProjection_GetProjectionMatrix(jarg1);

        return ret;
    }

    public delegate float PlaneProjection_GetRotationXDelegate(HandleRef jarg1);
    public static PlaneProjection_GetRotationXDelegate _PlaneProjection_GetRotationX;
    public static float PlaneProjection_GetRotationX(HandleRef jarg1)
    {
        float ret = _PlaneProjection_GetRotationX(jarg1);

        return ret;
    }

    public delegate void PlaneProjection_SetRotationXDelegate(HandleRef jarg1, float jarg2);
    public static PlaneProjection_SetRotationXDelegate _PlaneProjection_SetRotationX;
    public static void PlaneProjection_SetRotationX(HandleRef jarg1, float jarg2)
    {
        _PlaneProjection_SetRotationX(jarg1, jarg2);
    }

    public delegate float PlaneProjection_GetRotationYDelegate(HandleRef jarg1);
    public static PlaneProjection_GetRotationYDelegate _PlaneProjection_GetRotationY;
    public static float PlaneProjection_GetRotationY(HandleRef jarg1)
    {
        float ret = _PlaneProjection_GetRotationY(jarg1);

        return ret;
    }

    public delegate void PlaneProjection_SetRotationYDelegate(HandleRef jarg1, float jarg2);
    public static PlaneProjection_SetRotationYDelegate _PlaneProjection_SetRotationY;
    public static void PlaneProjection_SetRotationY(HandleRef jarg1, float jarg2)
    {
        _PlaneProjection_SetRotationY(jarg1, jarg2);
    }

    public delegate float PlaneProjection_GetRotationZDelegate(HandleRef jarg1);
    public static PlaneProjection_GetRotationZDelegate _PlaneProjection_GetRotationZ;
    public static float PlaneProjection_GetRotationZ(HandleRef jarg1)
    {
        float ret = _PlaneProjection_GetRotationZ(jarg1);

        return ret;
    }

    public delegate void PlaneProjection_SetRotationZDelegate(HandleRef jarg1, float jarg2);
    public static PlaneProjection_SetRotationZDelegate _PlaneProjection_SetRotationZ;
    public static void PlaneProjection_SetRotationZ(HandleRef jarg1, float jarg2)
    {
        _PlaneProjection_SetRotationZ(jarg1, jarg2);
    }

    public delegate bool PlaneProjection_IsIdentityDelegate(HandleRef jarg1);
    public static PlaneProjection_IsIdentityDelegate _PlaneProjection_IsIdentity;
    public static bool PlaneProjection_IsIdentity(HandleRef jarg1)
    {
        bool ret = _PlaneProjection_IsIdentity(jarg1);

        return ret;
    }

    public delegate IntPtr PlaneProjection_GetProjectionDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static PlaneProjection_GetProjectionDelegate _PlaneProjection_GetProjection;
    public static IntPtr PlaneProjection_GetProjection(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        IntPtr ret = _PlaneProjection_GetProjection(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void PlaneProjection_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static PlaneProjection_CreateRenderProxyDelegate _PlaneProjection_CreateRenderProxy;
    public static void PlaneProjection_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _PlaneProjection_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void PlaneProjection_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static PlaneProjection_UpdateRenderProxyDelegate _PlaneProjection_UpdateRenderProxy;
    public static void PlaneProjection_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _PlaneProjection_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void PlaneProjection_UnregisterRendererDelegate(HandleRef jarg1, HandleRef jarg2);
    public static PlaneProjection_UnregisterRendererDelegate _PlaneProjection_UnregisterRenderer;
    public static void PlaneProjection_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2)
    {
        _PlaneProjection_UnregisterRenderer(jarg1, jarg2);
    }

    public delegate IntPtr new_CustomPopupPlacementCallbackDelegate();
    public static new_CustomPopupPlacementCallbackDelegate _new_CustomPopupPlacementCallback;
    public static IntPtr new_CustomPopupPlacementCallback()
    {
        IntPtr ret = _new_CustomPopupPlacementCallback();

        return ret;
    }

    public delegate void delete_CustomPopupPlacementCallbackDelegate(HandleRef jarg1);
    public static delete_CustomPopupPlacementCallbackDelegate _delete_CustomPopupPlacementCallback;
    public static void delete_CustomPopupPlacementCallback(HandleRef jarg1)
    {
        _delete_CustomPopupPlacementCallback(jarg1);
    }

    public delegate IntPtr new_PopupDelegate();
    public static new_PopupDelegate _new_Popup;
    public static IntPtr new_Popup()
    {
        IntPtr ret = _new_Popup();

        return ret;
    }

    public delegate void delete_PopupDelegate(HandleRef jarg1);
    public static delete_PopupDelegate _delete_Popup;
    public static void delete_Popup(HandleRef jarg1)
    {
        _delete_Popup(jarg1);
    }

    public delegate bool Popup_GetAllowsTransparencyDelegate(HandleRef jarg1);
    public static Popup_GetAllowsTransparencyDelegate _Popup_GetAllowsTransparency;
    public static bool Popup_GetAllowsTransparency(HandleRef jarg1)
    {
        bool ret = _Popup_GetAllowsTransparency(jarg1);

        return ret;
    }

    public delegate void Popup_SetAllowsTransparencyDelegate(HandleRef jarg1, bool jarg2);
    public static Popup_SetAllowsTransparencyDelegate _Popup_SetAllowsTransparency;
    public static void Popup_SetAllowsTransparency(HandleRef jarg1, bool jarg2)
    {
        _Popup_SetAllowsTransparency(jarg1, jarg2);
    }

    public delegate IntPtr Popup_GetChildDelegate(HandleRef jarg1);
    public static Popup_GetChildDelegate _Popup_GetChild;
    public static IntPtr Popup_GetChild(HandleRef jarg1)
    {
        IntPtr ret = _Popup_GetChild(jarg1);

        return ret;
    }

    public delegate void Popup_SetChildDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Popup_SetChildDelegate _Popup_SetChild;
    public static void Popup_SetChild(HandleRef jarg1, HandleRef jarg2)
    {
        _Popup_SetChild(jarg1, jarg2);
    }

    public delegate bool Popup_GetHasDropShadowDelegate(HandleRef jarg1);
    public static Popup_GetHasDropShadowDelegate _Popup_GetHasDropShadow;
    public static bool Popup_GetHasDropShadow(HandleRef jarg1)
    {
        bool ret = _Popup_GetHasDropShadow(jarg1);

        return ret;
    }

    public delegate void Popup_SetHasDropShadowDelegate(HandleRef jarg1, bool jarg2);
    public static Popup_SetHasDropShadowDelegate _Popup_SetHasDropShadow;
    public static void Popup_SetHasDropShadow(HandleRef jarg1, bool jarg2)
    {
        _Popup_SetHasDropShadow(jarg1, jarg2);
    }

    public delegate float Popup_GetHorizontalOffsetDelegate(HandleRef jarg1);
    public static Popup_GetHorizontalOffsetDelegate _Popup_GetHorizontalOffset;
    public static float Popup_GetHorizontalOffset(HandleRef jarg1)
    {
        float ret = _Popup_GetHorizontalOffset(jarg1);

        return ret;
    }

    public delegate void Popup_SetHorizontalOffsetDelegate(HandleRef jarg1, float jarg2);
    public static Popup_SetHorizontalOffsetDelegate _Popup_SetHorizontalOffset;
    public static void Popup_SetHorizontalOffset(HandleRef jarg1, float jarg2)
    {
        _Popup_SetHorizontalOffset(jarg1, jarg2);
    }

    public delegate bool Popup_GetIsOpenDelegate(HandleRef jarg1);
    public static Popup_GetIsOpenDelegate _Popup_GetIsOpen;
    public static bool Popup_GetIsOpen(HandleRef jarg1)
    {
        bool ret = _Popup_GetIsOpen(jarg1);

        return ret;
    }

    public delegate void Popup_SetIsOpenDelegate(HandleRef jarg1, bool jarg2);
    public static Popup_SetIsOpenDelegate _Popup_SetIsOpen;
    public static void Popup_SetIsOpen(HandleRef jarg1, bool jarg2)
    {
        _Popup_SetIsOpen(jarg1, jarg2);
    }

    public delegate int Popup_GetPlacementDelegate(HandleRef jarg1);
    public static Popup_GetPlacementDelegate _Popup_GetPlacement;
    public static int Popup_GetPlacement(HandleRef jarg1)
    {
        int ret = _Popup_GetPlacement(jarg1);

        return ret;
    }

    public delegate void Popup_SetPlacementDelegate(HandleRef jarg1, int jarg2);
    public static Popup_SetPlacementDelegate _Popup_SetPlacement;
    public static void Popup_SetPlacement(HandleRef jarg1, int jarg2)
    {
        _Popup_SetPlacement(jarg1, jarg2);
    }

    public delegate IntPtr Popup_GetPlacementRectangleDelegate(HandleRef jarg1);
    public static Popup_GetPlacementRectangleDelegate _Popup_GetPlacementRectangle;
    public static IntPtr Popup_GetPlacementRectangle(HandleRef jarg1)
    {
        IntPtr ret = _Popup_GetPlacementRectangle(jarg1);

        return ret;
    }

    public delegate void Popup_SetPlacementRectangleDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Popup_SetPlacementRectangleDelegate _Popup_SetPlacementRectangle;
    public static void Popup_SetPlacementRectangle(HandleRef jarg1, HandleRef jarg2)
    {
        _Popup_SetPlacementRectangle(jarg1, jarg2);
    }

    public delegate IntPtr Popup_GetPlacementTargetDelegate(HandleRef jarg1);
    public static Popup_GetPlacementTargetDelegate _Popup_GetPlacementTarget;
    public static IntPtr Popup_GetPlacementTarget(HandleRef jarg1)
    {
        IntPtr ret = _Popup_GetPlacementTarget(jarg1);

        return ret;
    }

    public delegate void Popup_SetPlacementTargetDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Popup_SetPlacementTargetDelegate _Popup_SetPlacementTarget;
    public static void Popup_SetPlacementTarget(HandleRef jarg1, HandleRef jarg2)
    {
        _Popup_SetPlacementTarget(jarg1, jarg2);
    }

    public delegate int Popup_GetPopupAnimationDelegate(HandleRef jarg1);
    public static Popup_GetPopupAnimationDelegate _Popup_GetPopupAnimation;
    public static int Popup_GetPopupAnimation(HandleRef jarg1)
    {
        int ret = _Popup_GetPopupAnimation(jarg1);

        return ret;
    }

    public delegate void Popup_SetPopupAnimationDelegate(HandleRef jarg1, int jarg2);
    public static Popup_SetPopupAnimationDelegate _Popup_SetPopupAnimation;
    public static void Popup_SetPopupAnimation(HandleRef jarg1, int jarg2)
    {
        _Popup_SetPopupAnimation(jarg1, jarg2);
    }

    public delegate bool Popup_GetStaysOpenDelegate(HandleRef jarg1);
    public static Popup_GetStaysOpenDelegate _Popup_GetStaysOpen;
    public static bool Popup_GetStaysOpen(HandleRef jarg1)
    {
        bool ret = _Popup_GetStaysOpen(jarg1);

        return ret;
    }

    public delegate void Popup_SetStaysOpenDelegate(HandleRef jarg1, bool jarg2);
    public static Popup_SetStaysOpenDelegate _Popup_SetStaysOpen;
    public static void Popup_SetStaysOpen(HandleRef jarg1, bool jarg2)
    {
        _Popup_SetStaysOpen(jarg1, jarg2);
    }

    public delegate float Popup_GetVerticalOffsetDelegate(HandleRef jarg1);
    public static Popup_GetVerticalOffsetDelegate _Popup_GetVerticalOffset;
    public static float Popup_GetVerticalOffset(HandleRef jarg1)
    {
        float ret = _Popup_GetVerticalOffset(jarg1);

        return ret;
    }

    public delegate void Popup_SetVerticalOffsetDelegate(HandleRef jarg1, float jarg2);
    public static Popup_SetVerticalOffsetDelegate _Popup_SetVerticalOffset;
    public static void Popup_SetVerticalOffset(HandleRef jarg1, float jarg2)
    {
        _Popup_SetVerticalOffset(jarg1, jarg2);
    }

    public delegate bool Popup_IsDescendantOfDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Popup_IsDescendantOfDelegate _Popup_IsDescendantOf;
    public static bool Popup_IsDescendantOf(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _Popup_IsDescendantOf(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr Popup_ClosedDelegate(HandleRef jarg1);
    public static Popup_ClosedDelegate _Popup_Closed;
    public static IntPtr Popup_Closed(HandleRef jarg1)
    {
        IntPtr ret = _Popup_Closed(jarg1);

        return ret;
    }

    public delegate IntPtr Popup_OpenedDelegate(HandleRef jarg1);
    public static Popup_OpenedDelegate _Popup_Opened;
    public static IntPtr Popup_Opened(HandleRef jarg1)
    {
        IntPtr ret = _Popup_Opened(jarg1);

        return ret;
    }

    public delegate void delete_RangeBaseDelegate(HandleRef jarg1);
    public static delete_RangeBaseDelegate _delete_RangeBase;
    public static void delete_RangeBase(HandleRef jarg1)
    {
        _delete_RangeBase(jarg1);
    }

    public delegate float RangeBase_GetLargeChangeDelegate(HandleRef jarg1);
    public static RangeBase_GetLargeChangeDelegate _RangeBase_GetLargeChange;
    public static float RangeBase_GetLargeChange(HandleRef jarg1)
    {
        float ret = _RangeBase_GetLargeChange(jarg1);

        return ret;
    }

    public delegate void RangeBase_SetLargeChangeDelegate(HandleRef jarg1, float jarg2);
    public static RangeBase_SetLargeChangeDelegate _RangeBase_SetLargeChange;
    public static void RangeBase_SetLargeChange(HandleRef jarg1, float jarg2)
    {
        _RangeBase_SetLargeChange(jarg1, jarg2);
    }

    public delegate float RangeBase_GetMaximumDelegate(HandleRef jarg1);
    public static RangeBase_GetMaximumDelegate _RangeBase_GetMaximum;
    public static float RangeBase_GetMaximum(HandleRef jarg1)
    {
        float ret = _RangeBase_GetMaximum(jarg1);

        return ret;
    }

    public delegate void RangeBase_SetMaximumDelegate(HandleRef jarg1, float jarg2);
    public static RangeBase_SetMaximumDelegate _RangeBase_SetMaximum;
    public static void RangeBase_SetMaximum(HandleRef jarg1, float jarg2)
    {
        _RangeBase_SetMaximum(jarg1, jarg2);
    }

    public delegate float RangeBase_GetMinimumDelegate(HandleRef jarg1);
    public static RangeBase_GetMinimumDelegate _RangeBase_GetMinimum;
    public static float RangeBase_GetMinimum(HandleRef jarg1)
    {
        float ret = _RangeBase_GetMinimum(jarg1);

        return ret;
    }

    public delegate void RangeBase_SetMinimumDelegate(HandleRef jarg1, float jarg2);
    public static RangeBase_SetMinimumDelegate _RangeBase_SetMinimum;
    public static void RangeBase_SetMinimum(HandleRef jarg1, float jarg2)
    {
        _RangeBase_SetMinimum(jarg1, jarg2);
    }

    public delegate float RangeBase_GetSmallChangeDelegate(HandleRef jarg1);
    public static RangeBase_GetSmallChangeDelegate _RangeBase_GetSmallChange;
    public static float RangeBase_GetSmallChange(HandleRef jarg1)
    {
        float ret = _RangeBase_GetSmallChange(jarg1);

        return ret;
    }

    public delegate void RangeBase_SetSmallChangeDelegate(HandleRef jarg1, float jarg2);
    public static RangeBase_SetSmallChangeDelegate _RangeBase_SetSmallChange;
    public static void RangeBase_SetSmallChange(HandleRef jarg1, float jarg2)
    {
        _RangeBase_SetSmallChange(jarg1, jarg2);
    }

    public delegate float RangeBase_GetValueDelegate(HandleRef jarg1);
    public static RangeBase_GetValueDelegate _RangeBase_GetValue;
    public static float RangeBase_GetValue(HandleRef jarg1)
    {
        float ret = _RangeBase_GetValue(jarg1);

        return ret;
    }

    public delegate void RangeBase_SetValueDelegate(HandleRef jarg1, float jarg2);
    public static RangeBase_SetValueDelegate _RangeBase_SetValue;
    public static void RangeBase_SetValue(HandleRef jarg1, float jarg2)
    {
        _RangeBase_SetValue(jarg1, jarg2);
    }

    public delegate IntPtr new_ProgressBarDelegate();
    public static new_ProgressBarDelegate _new_ProgressBar;
    public static IntPtr new_ProgressBar()
    {
        IntPtr ret = _new_ProgressBar();

        return ret;
    }

    public delegate bool ProgressBar_GetIsIndeterminateDelegate(HandleRef jarg1);
    public static ProgressBar_GetIsIndeterminateDelegate _ProgressBar_GetIsIndeterminate;
    public static bool ProgressBar_GetIsIndeterminate(HandleRef jarg1)
    {
        bool ret = _ProgressBar_GetIsIndeterminate(jarg1);

        return ret;
    }

    public delegate void ProgressBar_SetIsIndeterminateDelegate(HandleRef jarg1, bool jarg2);
    public static ProgressBar_SetIsIndeterminateDelegate _ProgressBar_SetIsIndeterminate;
    public static void ProgressBar_SetIsIndeterminate(HandleRef jarg1, bool jarg2)
    {
        _ProgressBar_SetIsIndeterminate(jarg1, jarg2);
    }

    public delegate int ProgressBar_GetOrientationDelegate(HandleRef jarg1);
    public static ProgressBar_GetOrientationDelegate _ProgressBar_GetOrientation;
    public static int ProgressBar_GetOrientation(HandleRef jarg1)
    {
        int ret = _ProgressBar_GetOrientation(jarg1);

        return ret;
    }

    public delegate void ProgressBar_SetOrientationDelegate(HandleRef jarg1, int jarg2);
    public static ProgressBar_SetOrientationDelegate _ProgressBar_SetOrientation;
    public static void ProgressBar_SetOrientation(HandleRef jarg1, int jarg2)
    {
        _ProgressBar_SetOrientation(jarg1, jarg2);
    }

    public delegate void delete_ProgressBarDelegate(HandleRef jarg1);
    public static delete_ProgressBarDelegate _delete_ProgressBar;
    public static void delete_ProgressBar(HandleRef jarg1)
    {
        _delete_ProgressBar(jarg1);
    }

    public delegate IntPtr new_PathElement__SWIG_0Delegate();
    public static new_PathElement__SWIG_0Delegate _new_PathElement__SWIG_0;
    public static IntPtr new_PathElement__SWIG_0()
    {
        IntPtr ret = _new_PathElement__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_PathElement__SWIG_1Delegate(HandleRef jarg1);
    public static new_PathElement__SWIG_1Delegate _new_PathElement__SWIG_1;
    public static IntPtr new_PathElement__SWIG_1(HandleRef jarg1)
    {
        IntPtr ret = _new_PathElement__SWIG_1(jarg1);

        return ret;
    }

    public delegate void delete_PathElementDelegate(HandleRef jarg1);
    public static delete_PathElementDelegate _delete_PathElement;
    public static void delete_PathElement(HandleRef jarg1)
    {
        _delete_PathElement(jarg1);
    }

    public delegate void PathElement_source_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static PathElement_source_setDelegate _PathElement_source_set;
    public static void PathElement_source_set(HandleRef jarg1, HandleRef jarg2)
    {
        _PathElement_source_set(jarg1, jarg2);
    }

    public delegate IntPtr PathElement_source_getDelegate(HandleRef jarg1);
    public static PathElement_source_getDelegate _PathElement_source_get;
    public static IntPtr PathElement_source_get(HandleRef jarg1)
    {
        IntPtr ret = _PathElement_source_get(jarg1);

        return ret;
    }

    public delegate void PathElement_collection_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static PathElement_collection_setDelegate _PathElement_collection_set;
    public static void PathElement_collection_set(HandleRef jarg1, HandleRef jarg2)
    {
        _PathElement_collection_set(jarg1, jarg2);
    }

    public delegate IntPtr PathElement_collection_getDelegate(HandleRef jarg1);
    public static PathElement_collection_getDelegate _PathElement_collection_get;
    public static IntPtr PathElement_collection_get(HandleRef jarg1)
    {
        IntPtr ret = _PathElement_collection_get(jarg1);

        return ret;
    }

    public delegate void PathElement_property_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static PathElement_property_setDelegate _PathElement_property_set;
    public static void PathElement_property_set(HandleRef jarg1, HandleRef jarg2)
    {
        _PathElement_property_set(jarg1, jarg2);
    }

    public delegate IntPtr PathElement_property_getDelegate(HandleRef jarg1);
    public static PathElement_property_getDelegate _PathElement_property_get;
    public static IntPtr PathElement_property_get(HandleRef jarg1)
    {
        IntPtr ret = _PathElement_property_get(jarg1);

        return ret;
    }

    public delegate void PathElement_dp_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static PathElement_dp_setDelegate _PathElement_dp_set;
    public static void PathElement_dp_set(HandleRef jarg1, HandleRef jarg2)
    {
        _PathElement_dp_set(jarg1, jarg2);
    }

    public delegate IntPtr PathElement_dp_getDelegate(HandleRef jarg1);
    public static PathElement_dp_getDelegate _PathElement_dp_get;
    public static IntPtr PathElement_dp_get(HandleRef jarg1)
    {
        IntPtr ret = _PathElement_dp_get(jarg1);

        return ret;
    }

    public delegate void PathElement_index_setDelegate(HandleRef jarg1, uint jarg2);
    public static PathElement_index_setDelegate _PathElement_index_set;
    public static void PathElement_index_set(HandleRef jarg1, uint jarg2)
    {
        _PathElement_index_set(jarg1, jarg2);
    }

    public delegate uint PathElement_index_getDelegate(HandleRef jarg1);
    public static PathElement_index_getDelegate _PathElement_index_get;
    public static uint PathElement_index_get(HandleRef jarg1)
    {
        uint ret = _PathElement_index_get(jarg1);

        return ret;
    }

    public delegate void PathElement_key_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static PathElement_key_setDelegate _PathElement_key_set;
    public static void PathElement_key_set(HandleRef jarg1, HandleRef jarg2)
    {
        _PathElement_key_set(jarg1, jarg2);
    }

    public delegate IntPtr PathElement_key_getDelegate(HandleRef jarg1);
    public static PathElement_key_getDelegate _PathElement_key_get;
    public static IntPtr PathElement_key_get(HandleRef jarg1)
    {
        IntPtr ret = _PathElement_key_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_PropertyPath__SWIG_0Delegate();
    public static new_PropertyPath__SWIG_0Delegate _new_PropertyPath__SWIG_0;
    public static IntPtr new_PropertyPath__SWIG_0()
    {
        IntPtr ret = _new_PropertyPath__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_PropertyPath__SWIG_1Delegate(string jarg1);
    public static new_PropertyPath__SWIG_1Delegate _new_PropertyPath__SWIG_1;
    public static IntPtr new_PropertyPath__SWIG_1(string jarg1)
    {
        IntPtr ret = _new_PropertyPath__SWIG_1(jarg1);

        return ret;
    }

    public delegate void delete_PropertyPathDelegate(HandleRef jarg1);
    public static delete_PropertyPathDelegate _delete_PropertyPath;
    public static void delete_PropertyPath(HandleRef jarg1)
    {
        _delete_PropertyPath(jarg1);
    }

    public delegate IntPtr PropertyPath_ParseDelegate(string jarg1);
    public static PropertyPath_ParseDelegate _PropertyPath_Parse;
    public static IntPtr PropertyPath_Parse(string jarg1)
    {
        IntPtr ret = _PropertyPath_Parse(jarg1);

        return ret;
    }

    public delegate IntPtr PropertyPath_CreateDelegate(string jarg1);
    public static PropertyPath_CreateDelegate _PropertyPath_Create;
    public static IntPtr PropertyPath_Create(string jarg1)
    {
        IntPtr ret = _PropertyPath_Create(jarg1);

        return ret;
    }

    public delegate IntPtr PropertyPath_GetPathDelegate(HandleRef jarg1);
    public static PropertyPath_GetPathDelegate _PropertyPath_GetPath;
    public static IntPtr PropertyPath_GetPath(HandleRef jarg1)
    {
        IntPtr ret = _PropertyPath_GetPath(jarg1);

        return ret;
    }

    public delegate void PropertyPath_SetPathDelegate(HandleRef jarg1, IntPtr jarg2);
    public static PropertyPath_SetPathDelegate _PropertyPath_SetPath;
    public static void PropertyPath_SetPath(HandleRef jarg1, IntPtr jarg2)
    {
        _PropertyPath_SetPath(jarg1, jarg2);
    }

    public delegate bool PropertyPath_GetPathElementsDelegate(HandleRef jarg1, HandleRef jarg2, bool jarg3, HandleRef jarg4);
    public static PropertyPath_GetPathElementsDelegate _PropertyPath_GetPathElements;
    public static bool PropertyPath_GetPathElements(HandleRef jarg1, HandleRef jarg2, bool jarg3, HandleRef jarg4)
    {
        bool ret = _PropertyPath_GetPathElements(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate bool PropertyPath_EnumPathElements__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, bool jarg3, HandleRef jarg4, HandleRef jarg5);
    public static PropertyPath_EnumPathElements__SWIG_0Delegate _PropertyPath_EnumPathElements__SWIG_0;
    public static bool PropertyPath_EnumPathElements__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3, HandleRef jarg4, HandleRef jarg5)
    {
        bool ret = _PropertyPath_EnumPathElements__SWIG_0(jarg1, jarg2, jarg3, jarg4, jarg5);

        return ret;
    }

    public delegate bool PropertyPath_EnumPathElements__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2, bool jarg3, HandleRef jarg4);
    public static PropertyPath_EnumPathElements__SWIG_1Delegate _PropertyPath_EnumPathElements__SWIG_1;
    public static bool PropertyPath_EnumPathElements__SWIG_1(HandleRef jarg1, HandleRef jarg2, bool jarg3, HandleRef jarg4)
    {
        bool ret = _PropertyPath_EnumPathElements__SWIG_1(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr new_RadialGradientBrushDelegate();
    public static new_RadialGradientBrushDelegate _new_RadialGradientBrush;
    public static IntPtr new_RadialGradientBrush()
    {
        IntPtr ret = _new_RadialGradientBrush();

        return ret;
    }

    public delegate IntPtr RadialGradientBrush_GetCenterDelegate(HandleRef jarg1);
    public static RadialGradientBrush_GetCenterDelegate _RadialGradientBrush_GetCenter;
    public static IntPtr RadialGradientBrush_GetCenter(HandleRef jarg1)
    {
        IntPtr ret = _RadialGradientBrush_GetCenter(jarg1);

        return ret;
    }

    public delegate void RadialGradientBrush_SetCenterDelegate(HandleRef jarg1, HandleRef jarg2);
    public static RadialGradientBrush_SetCenterDelegate _RadialGradientBrush_SetCenter;
    public static void RadialGradientBrush_SetCenter(HandleRef jarg1, HandleRef jarg2)
    {
        _RadialGradientBrush_SetCenter(jarg1, jarg2);
    }

    public delegate IntPtr RadialGradientBrush_GetGradientOriginDelegate(HandleRef jarg1);
    public static RadialGradientBrush_GetGradientOriginDelegate _RadialGradientBrush_GetGradientOrigin;
    public static IntPtr RadialGradientBrush_GetGradientOrigin(HandleRef jarg1)
    {
        IntPtr ret = _RadialGradientBrush_GetGradientOrigin(jarg1);

        return ret;
    }

    public delegate void RadialGradientBrush_SetGradientOriginDelegate(HandleRef jarg1, HandleRef jarg2);
    public static RadialGradientBrush_SetGradientOriginDelegate _RadialGradientBrush_SetGradientOrigin;
    public static void RadialGradientBrush_SetGradientOrigin(HandleRef jarg1, HandleRef jarg2)
    {
        _RadialGradientBrush_SetGradientOrigin(jarg1, jarg2);
    }

    public delegate float RadialGradientBrush_GetRadiusXDelegate(HandleRef jarg1);
    public static RadialGradientBrush_GetRadiusXDelegate _RadialGradientBrush_GetRadiusX;
    public static float RadialGradientBrush_GetRadiusX(HandleRef jarg1)
    {
        float ret = _RadialGradientBrush_GetRadiusX(jarg1);

        return ret;
    }

    public delegate void RadialGradientBrush_SetRadiusXDelegate(HandleRef jarg1, float jarg2);
    public static RadialGradientBrush_SetRadiusXDelegate _RadialGradientBrush_SetRadiusX;
    public static void RadialGradientBrush_SetRadiusX(HandleRef jarg1, float jarg2)
    {
        _RadialGradientBrush_SetRadiusX(jarg1, jarg2);
    }

    public delegate float RadialGradientBrush_GetRadiusYDelegate(HandleRef jarg1);
    public static RadialGradientBrush_GetRadiusYDelegate _RadialGradientBrush_GetRadiusY;
    public static float RadialGradientBrush_GetRadiusY(HandleRef jarg1)
    {
        float ret = _RadialGradientBrush_GetRadiusY(jarg1);

        return ret;
    }

    public delegate void RadialGradientBrush_SetRadiusYDelegate(HandleRef jarg1, float jarg2);
    public static RadialGradientBrush_SetRadiusYDelegate _RadialGradientBrush_SetRadiusY;
    public static void RadialGradientBrush_SetRadiusY(HandleRef jarg1, float jarg2)
    {
        _RadialGradientBrush_SetRadiusY(jarg1, jarg2);
    }

    public delegate void RadialGradientBrush_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static RadialGradientBrush_CreateRenderProxyDelegate _RadialGradientBrush_CreateRenderProxy;
    public static void RadialGradientBrush_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _RadialGradientBrush_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void RadialGradientBrush_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static RadialGradientBrush_UpdateRenderProxyDelegate _RadialGradientBrush_UpdateRenderProxy;
    public static void RadialGradientBrush_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _RadialGradientBrush_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void delete_RadialGradientBrushDelegate(HandleRef jarg1);
    public static delete_RadialGradientBrushDelegate _delete_RadialGradientBrush;
    public static void delete_RadialGradientBrush(HandleRef jarg1)
    {
        _delete_RadialGradientBrush(jarg1);
    }

    public delegate IntPtr new_RadioButtonDelegate();
    public static new_RadioButtonDelegate _new_RadioButton;
    public static IntPtr new_RadioButton()
    {
        IntPtr ret = _new_RadioButton();

        return ret;
    }

    public delegate void delete_RadioButtonDelegate(HandleRef jarg1);
    public static delete_RadioButtonDelegate _delete_RadioButton;
    public static void delete_RadioButton(HandleRef jarg1)
    {
        _delete_RadioButton(jarg1);
    }

    public delegate IntPtr RadioButton_GetGroupNameDelegate(HandleRef jarg1);
    public static RadioButton_GetGroupNameDelegate _RadioButton_GetGroupName;
    public static IntPtr RadioButton_GetGroupName(HandleRef jarg1)
    {
        IntPtr ret = _RadioButton_GetGroupName(jarg1);

        return ret;
    }

    public delegate void RadioButton_SetGroupNameDelegate(HandleRef jarg1, IntPtr jarg2);
    public static RadioButton_SetGroupNameDelegate _RadioButton_SetGroupName;
    public static void RadioButton_SetGroupName(HandleRef jarg1, IntPtr jarg2)
    {
        _RadioButton_SetGroupName(jarg1, jarg2);
    }

    public delegate IntPtr new_RectangleDelegate();
    public static new_RectangleDelegate _new_Rectangle;
    public static IntPtr new_Rectangle()
    {
        IntPtr ret = _new_Rectangle();

        return ret;
    }

    public delegate void delete_RectangleDelegate(HandleRef jarg1);
    public static delete_RectangleDelegate _delete_Rectangle;
    public static void delete_Rectangle(HandleRef jarg1)
    {
        _delete_Rectangle(jarg1);
    }

    public delegate float Rectangle_GetRadiusXDelegate(HandleRef jarg1);
    public static Rectangle_GetRadiusXDelegate _Rectangle_GetRadiusX;
    public static float Rectangle_GetRadiusX(HandleRef jarg1)
    {
        float ret = _Rectangle_GetRadiusX(jarg1);

        return ret;
    }

    public delegate void Rectangle_SetRadiusXDelegate(HandleRef jarg1, float jarg2);
    public static Rectangle_SetRadiusXDelegate _Rectangle_SetRadiusX;
    public static void Rectangle_SetRadiusX(HandleRef jarg1, float jarg2)
    {
        _Rectangle_SetRadiusX(jarg1, jarg2);
    }

    public delegate float Rectangle_GetRadiusYDelegate(HandleRef jarg1);
    public static Rectangle_GetRadiusYDelegate _Rectangle_GetRadiusY;
    public static float Rectangle_GetRadiusY(HandleRef jarg1)
    {
        float ret = _Rectangle_GetRadiusY(jarg1);

        return ret;
    }

    public delegate void Rectangle_SetRadiusYDelegate(HandleRef jarg1, float jarg2);
    public static Rectangle_SetRadiusYDelegate _Rectangle_SetRadiusY;
    public static void Rectangle_SetRadiusY(HandleRef jarg1, float jarg2)
    {
        _Rectangle_SetRadiusY(jarg1, jarg2);
    }

    public delegate IntPtr new_RectangleGeometry__SWIG_0Delegate();
    public static new_RectangleGeometry__SWIG_0Delegate _new_RectangleGeometry__SWIG_0;
    public static IntPtr new_RectangleGeometry__SWIG_0()
    {
        IntPtr ret = _new_RectangleGeometry__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_RectangleGeometry__SWIG_1Delegate(HandleRef jarg1, float jarg2, float jarg3);
    public static new_RectangleGeometry__SWIG_1Delegate _new_RectangleGeometry__SWIG_1;
    public static IntPtr new_RectangleGeometry__SWIG_1(HandleRef jarg1, float jarg2, float jarg3)
    {
        IntPtr ret = _new_RectangleGeometry__SWIG_1(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr new_RectangleGeometry__SWIG_2Delegate(HandleRef jarg1, float jarg2);
    public static new_RectangleGeometry__SWIG_2Delegate _new_RectangleGeometry__SWIG_2;
    public static IntPtr new_RectangleGeometry__SWIG_2(HandleRef jarg1, float jarg2)
    {
        IntPtr ret = _new_RectangleGeometry__SWIG_2(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_RectangleGeometry__SWIG_3Delegate(HandleRef jarg1);
    public static new_RectangleGeometry__SWIG_3Delegate _new_RectangleGeometry__SWIG_3;
    public static IntPtr new_RectangleGeometry__SWIG_3(HandleRef jarg1)
    {
        IntPtr ret = _new_RectangleGeometry__SWIG_3(jarg1);

        return ret;
    }

    public delegate float RectangleGeometry_GetRadiusXDelegate(HandleRef jarg1);
    public static RectangleGeometry_GetRadiusXDelegate _RectangleGeometry_GetRadiusX;
    public static float RectangleGeometry_GetRadiusX(HandleRef jarg1)
    {
        float ret = _RectangleGeometry_GetRadiusX(jarg1);

        return ret;
    }

    public delegate void RectangleGeometry_SetRadiusXDelegate(HandleRef jarg1, float jarg2);
    public static RectangleGeometry_SetRadiusXDelegate _RectangleGeometry_SetRadiusX;
    public static void RectangleGeometry_SetRadiusX(HandleRef jarg1, float jarg2)
    {
        _RectangleGeometry_SetRadiusX(jarg1, jarg2);
    }

    public delegate float RectangleGeometry_GetRadiusYDelegate(HandleRef jarg1);
    public static RectangleGeometry_GetRadiusYDelegate _RectangleGeometry_GetRadiusY;
    public static float RectangleGeometry_GetRadiusY(HandleRef jarg1)
    {
        float ret = _RectangleGeometry_GetRadiusY(jarg1);

        return ret;
    }

    public delegate void RectangleGeometry_SetRadiusYDelegate(HandleRef jarg1, float jarg2);
    public static RectangleGeometry_SetRadiusYDelegate _RectangleGeometry_SetRadiusY;
    public static void RectangleGeometry_SetRadiusY(HandleRef jarg1, float jarg2)
    {
        _RectangleGeometry_SetRadiusY(jarg1, jarg2);
    }

    public delegate IntPtr RectangleGeometry_GetRectDelegate(HandleRef jarg1);
    public static RectangleGeometry_GetRectDelegate _RectangleGeometry_GetRect;
    public static IntPtr RectangleGeometry_GetRect(HandleRef jarg1)
    {
        IntPtr ret = _RectangleGeometry_GetRect(jarg1);

        return ret;
    }

    public delegate void RectangleGeometry_SetRectDelegate(HandleRef jarg1, HandleRef jarg2);
    public static RectangleGeometry_SetRectDelegate _RectangleGeometry_SetRect;
    public static void RectangleGeometry_SetRect(HandleRef jarg1, HandleRef jarg2)
    {
        _RectangleGeometry_SetRect(jarg1, jarg2);
    }

    public delegate bool RectangleGeometry_IsEmptyDelegate(HandleRef jarg1);
    public static RectangleGeometry_IsEmptyDelegate _RectangleGeometry_IsEmpty;
    public static bool RectangleGeometry_IsEmpty(HandleRef jarg1)
    {
        bool ret = _RectangleGeometry_IsEmpty(jarg1);

        return ret;
    }

    public delegate void RectangleGeometry_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static RectangleGeometry_CreateRenderProxyDelegate _RectangleGeometry_CreateRenderProxy;
    public static void RectangleGeometry_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _RectangleGeometry_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void RectangleGeometry_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static RectangleGeometry_UpdateRenderProxyDelegate _RectangleGeometry_UpdateRenderProxy;
    public static void RectangleGeometry_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _RectangleGeometry_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void delete_RectangleGeometryDelegate(HandleRef jarg1);
    public static delete_RectangleGeometryDelegate _delete_RectangleGeometry;
    public static void delete_RectangleGeometry(HandleRef jarg1)
    {
        _delete_RectangleGeometry(jarg1);
    }

    public delegate IntPtr new_RelativeSource__SWIG_0Delegate();
    public static new_RelativeSource__SWIG_0Delegate _new_RelativeSource__SWIG_0;
    public static IntPtr new_RelativeSource__SWIG_0()
    {
        IntPtr ret = _new_RelativeSource__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_RelativeSource__SWIG_1Delegate(int jarg1);
    public static new_RelativeSource__SWIG_1Delegate _new_RelativeSource__SWIG_1;
    public static IntPtr new_RelativeSource__SWIG_1(int jarg1)
    {
        IntPtr ret = _new_RelativeSource__SWIG_1(jarg1);

        return ret;
    }

    public delegate IntPtr new_RelativeSource__SWIG_2Delegate(int jarg1, HandleRef jarg2, int jarg3);
    public static new_RelativeSource__SWIG_2Delegate _new_RelativeSource__SWIG_2;
    public static IntPtr new_RelativeSource__SWIG_2(int jarg1, HandleRef jarg2, int jarg3)
    {
        IntPtr ret = _new_RelativeSource__SWIG_2(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr new_RelativeSource__SWIG_3Delegate(HandleRef jarg1);
    public static new_RelativeSource__SWIG_3Delegate _new_RelativeSource__SWIG_3;
    public static IntPtr new_RelativeSource__SWIG_3(HandleRef jarg1)
    {
        IntPtr ret = _new_RelativeSource__SWIG_3(jarg1);

        return ret;
    }

    public delegate void delete_RelativeSourceDelegate(HandleRef jarg1);
    public static delete_RelativeSourceDelegate _delete_RelativeSource;
    public static void delete_RelativeSource(HandleRef jarg1)
    {
        _delete_RelativeSource(jarg1);
    }

    public delegate IntPtr RelativeSource_GetPreviousDataDelegate();
    public static RelativeSource_GetPreviousDataDelegate _RelativeSource_GetPreviousData;
    public static IntPtr RelativeSource_GetPreviousData()
    {
        IntPtr ret = _RelativeSource_GetPreviousData();

        return ret;
    }

    public delegate IntPtr RelativeSource_GetSelfDelegate();
    public static RelativeSource_GetSelfDelegate _RelativeSource_GetSelf;
    public static IntPtr RelativeSource_GetSelf()
    {
        IntPtr ret = _RelativeSource_GetSelf();

        return ret;
    }

    public delegate IntPtr RelativeSource_GetTemplatedParentDelegate();
    public static RelativeSource_GetTemplatedParentDelegate _RelativeSource_GetTemplatedParent;
    public static IntPtr RelativeSource_GetTemplatedParent()
    {
        IntPtr ret = _RelativeSource_GetTemplatedParent();

        return ret;
    }

    public delegate int RelativeSource_GetModeDelegate(HandleRef jarg1);
    public static RelativeSource_GetModeDelegate _RelativeSource_GetMode;
    public static int RelativeSource_GetMode(HandleRef jarg1)
    {
        int ret = _RelativeSource_GetMode(jarg1);

        return ret;
    }

    public delegate void RelativeSource_SetModeDelegate(HandleRef jarg1, int jarg2);
    public static RelativeSource_SetModeDelegate _RelativeSource_SetMode;
    public static void RelativeSource_SetMode(HandleRef jarg1, int jarg2)
    {
        _RelativeSource_SetMode(jarg1, jarg2);
    }

    public delegate IntPtr RelativeSource_GetAncestorTypeDelegate(HandleRef jarg1);
    public static RelativeSource_GetAncestorTypeDelegate _RelativeSource_GetAncestorType;
    public static IntPtr RelativeSource_GetAncestorType(HandleRef jarg1)
    {
        IntPtr ret = _RelativeSource_GetAncestorType(jarg1);

        return ret;
    }

    public delegate void RelativeSource_SetAncestorTypeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static RelativeSource_SetAncestorTypeDelegate _RelativeSource_SetAncestorType;
    public static void RelativeSource_SetAncestorType(HandleRef jarg1, HandleRef jarg2)
    {
        _RelativeSource_SetAncestorType(jarg1, jarg2);
    }

    public delegate int RelativeSource_GetAncestorLevelDelegate(HandleRef jarg1);
    public static RelativeSource_GetAncestorLevelDelegate _RelativeSource_GetAncestorLevel;
    public static int RelativeSource_GetAncestorLevel(HandleRef jarg1)
    {
        int ret = _RelativeSource_GetAncestorLevel(jarg1);

        return ret;
    }

    public delegate void RelativeSource_SetAncestorLevelDelegate(HandleRef jarg1, int jarg2);
    public static RelativeSource_SetAncestorLevelDelegate _RelativeSource_SetAncestorLevel;
    public static void RelativeSource_SetAncestorLevel(HandleRef jarg1, int jarg2)
    {
        _RelativeSource_SetAncestorLevel(jarg1, jarg2);
    }

    public delegate IntPtr RelativeSource_ProvideValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static RelativeSource_ProvideValueDelegate _RelativeSource_ProvideValue;
    public static IntPtr RelativeSource_ProvideValue(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _RelativeSource_ProvideValue(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_RepeatButtonDelegate();
    public static new_RepeatButtonDelegate _new_RepeatButton;
    public static IntPtr new_RepeatButton()
    {
        IntPtr ret = _new_RepeatButton();

        return ret;
    }

    public delegate void delete_RepeatButtonDelegate(HandleRef jarg1);
    public static delete_RepeatButtonDelegate _delete_RepeatButton;
    public static void delete_RepeatButton(HandleRef jarg1)
    {
        _delete_RepeatButton(jarg1);
    }

    public delegate int RepeatButton_GetDelayDelegate(HandleRef jarg1);
    public static RepeatButton_GetDelayDelegate _RepeatButton_GetDelay;
    public static int RepeatButton_GetDelay(HandleRef jarg1)
    {
        int ret = _RepeatButton_GetDelay(jarg1);

        return ret;
    }

    public delegate void RepeatButton_SetDelayDelegate(HandleRef jarg1, int jarg2);
    public static RepeatButton_SetDelayDelegate _RepeatButton_SetDelay;
    public static void RepeatButton_SetDelay(HandleRef jarg1, int jarg2)
    {
        _RepeatButton_SetDelay(jarg1, jarg2);
    }

    public delegate int RepeatButton_GetIntervalDelegate(HandleRef jarg1);
    public static RepeatButton_GetIntervalDelegate _RepeatButton_GetInterval;
    public static int RepeatButton_GetInterval(HandleRef jarg1)
    {
        int ret = _RepeatButton_GetInterval(jarg1);

        return ret;
    }

    public delegate void RepeatButton_SetIntervalDelegate(HandleRef jarg1, int jarg2);
    public static RepeatButton_SetIntervalDelegate _RepeatButton_SetInterval;
    public static void RepeatButton_SetInterval(HandleRef jarg1, int jarg2)
    {
        _RepeatButton_SetInterval(jarg1, jarg2);
    }

    public delegate IntPtr new_RotateTransformDelegate();
    public static new_RotateTransformDelegate _new_RotateTransform;
    public static IntPtr new_RotateTransform()
    {
        IntPtr ret = _new_RotateTransform();

        return ret;
    }

    public delegate float RotateTransform_GetAngleDelegate(HandleRef jarg1);
    public static RotateTransform_GetAngleDelegate _RotateTransform_GetAngle;
    public static float RotateTransform_GetAngle(HandleRef jarg1)
    {
        float ret = _RotateTransform_GetAngle(jarg1);

        return ret;
    }

    public delegate void RotateTransform_SetAngleDelegate(HandleRef jarg1, float jarg2);
    public static RotateTransform_SetAngleDelegate _RotateTransform_SetAngle;
    public static void RotateTransform_SetAngle(HandleRef jarg1, float jarg2)
    {
        _RotateTransform_SetAngle(jarg1, jarg2);
    }

    public delegate float RotateTransform_GetCenterXDelegate(HandleRef jarg1);
    public static RotateTransform_GetCenterXDelegate _RotateTransform_GetCenterX;
    public static float RotateTransform_GetCenterX(HandleRef jarg1)
    {
        float ret = _RotateTransform_GetCenterX(jarg1);

        return ret;
    }

    public delegate void RotateTransform_SetCenterXDelegate(HandleRef jarg1, float jarg2);
    public static RotateTransform_SetCenterXDelegate _RotateTransform_SetCenterX;
    public static void RotateTransform_SetCenterX(HandleRef jarg1, float jarg2)
    {
        _RotateTransform_SetCenterX(jarg1, jarg2);
    }

    public delegate float RotateTransform_GetCenterYDelegate(HandleRef jarg1);
    public static RotateTransform_GetCenterYDelegate _RotateTransform_GetCenterY;
    public static float RotateTransform_GetCenterY(HandleRef jarg1)
    {
        float ret = _RotateTransform_GetCenterY(jarg1);

        return ret;
    }

    public delegate void RotateTransform_SetCenterYDelegate(HandleRef jarg1, float jarg2);
    public static RotateTransform_SetCenterYDelegate _RotateTransform_SetCenterY;
    public static void RotateTransform_SetCenterY(HandleRef jarg1, float jarg2)
    {
        _RotateTransform_SetCenterY(jarg1, jarg2);
    }

    public delegate IntPtr RotateTransform_GetTransformDelegate(HandleRef jarg1);
    public static RotateTransform_GetTransformDelegate _RotateTransform_GetTransform;
    public static IntPtr RotateTransform_GetTransform(HandleRef jarg1)
    {
        IntPtr ret = _RotateTransform_GetTransform(jarg1);

        return ret;
    }

    public delegate void RotateTransform_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static RotateTransform_CreateRenderProxyDelegate _RotateTransform_CreateRenderProxy;
    public static void RotateTransform_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _RotateTransform_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void RotateTransform_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static RotateTransform_UpdateRenderProxyDelegate _RotateTransform_UpdateRenderProxy;
    public static void RotateTransform_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _RotateTransform_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void RotateTransform_UnregisterRendererDelegate(HandleRef jarg1, HandleRef jarg2);
    public static RotateTransform_UnregisterRendererDelegate _RotateTransform_UnregisterRenderer;
    public static void RotateTransform_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2)
    {
        _RotateTransform_UnregisterRenderer(jarg1, jarg2);
    }

    public delegate void delete_RotateTransformDelegate(HandleRef jarg1);
    public static delete_RotateTransformDelegate _delete_RotateTransform;
    public static void delete_RotateTransform(HandleRef jarg1)
    {
        _delete_RotateTransform(jarg1);
    }

    public delegate IntPtr new_RoutedCommandDelegate(IntPtr jarg1, HandleRef jarg2, HandleRef jarg3);
    public static new_RoutedCommandDelegate _new_RoutedCommand;
    public static IntPtr new_RoutedCommand(IntPtr jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        IntPtr ret = _new_RoutedCommand(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void delete_RoutedCommandDelegate(HandleRef jarg1);
    public static delete_RoutedCommandDelegate _delete_RoutedCommand;
    public static void delete_RoutedCommand(HandleRef jarg1)
    {
        _delete_RoutedCommand(jarg1);
    }

    public delegate IntPtr RoutedCommand_Create__SWIG_0Delegate(string jarg1, HandleRef jarg2);
    public static RoutedCommand_Create__SWIG_0Delegate _RoutedCommand_Create__SWIG_0;
    public static IntPtr RoutedCommand_Create__SWIG_0(string jarg1, HandleRef jarg2)
    {
        IntPtr ret = _RoutedCommand_Create__SWIG_0(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr RoutedCommand_Create__SWIG_1Delegate(string jarg1, HandleRef jarg2, HandleRef jarg3);
    public static RoutedCommand_Create__SWIG_1Delegate _RoutedCommand_Create__SWIG_1;
    public static IntPtr RoutedCommand_Create__SWIG_1(string jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        IntPtr ret = _RoutedCommand_Create__SWIG_1(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr RoutedCommand_Create__SWIG_2Delegate(string jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static RoutedCommand_Create__SWIG_2Delegate _RoutedCommand_Create__SWIG_2;
    public static IntPtr RoutedCommand_Create__SWIG_2(string jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        IntPtr ret = _RoutedCommand_Create__SWIG_2(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr RoutedCommand_GetInputGesturesDelegate(HandleRef jarg1);
    public static RoutedCommand_GetInputGesturesDelegate _RoutedCommand_GetInputGestures;
    public static IntPtr RoutedCommand_GetInputGestures(HandleRef jarg1)
    {
        IntPtr ret = _RoutedCommand_GetInputGestures(jarg1);

        return ret;
    }

    public delegate bool RoutedCommand_CanExecute__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static RoutedCommand_CanExecute__SWIG_0Delegate _RoutedCommand_CanExecute__SWIG_0;
    public static bool RoutedCommand_CanExecute__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        bool ret = _RoutedCommand_CanExecute__SWIG_0(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void RoutedCommand_Execute__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static RoutedCommand_Execute__SWIG_0Delegate _RoutedCommand_Execute__SWIG_0;
    public static void RoutedCommand_Execute__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _RoutedCommand_Execute__SWIG_0(jarg1, jarg2, jarg3);
    }

    public delegate bool RoutedCommand_CanExecute__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static RoutedCommand_CanExecute__SWIG_1Delegate _RoutedCommand_CanExecute__SWIG_1;
    public static bool RoutedCommand_CanExecute__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _RoutedCommand_CanExecute__SWIG_1(jarg1, jarg2);

        return ret;
    }

    public delegate void RoutedCommand_Execute__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static RoutedCommand_Execute__SWIG_1Delegate _RoutedCommand_Execute__SWIG_1;
    public static void RoutedCommand_Execute__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        _RoutedCommand_Execute__SWIG_1(jarg1, jarg2);
    }

    public delegate IntPtr new_RoutedUICommandDelegate(string jarg1, IntPtr jarg2, HandleRef jarg3, HandleRef jarg4);
    public static new_RoutedUICommandDelegate _new_RoutedUICommand;
    public static IntPtr new_RoutedUICommand(string jarg1, IntPtr jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        IntPtr ret = _new_RoutedUICommand(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate void delete_RoutedUICommandDelegate(HandleRef jarg1);
    public static delete_RoutedUICommandDelegate _delete_RoutedUICommand;
    public static void delete_RoutedUICommand(HandleRef jarg1)
    {
        _delete_RoutedUICommand(jarg1);
    }

    public delegate IntPtr RoutedUICommand_Create__SWIG_0Delegate(string jarg1, string jarg2, HandleRef jarg3);
    public static RoutedUICommand_Create__SWIG_0Delegate _RoutedUICommand_Create__SWIG_0;
    public static IntPtr RoutedUICommand_Create__SWIG_0(string jarg1, string jarg2, HandleRef jarg3)
    {
        IntPtr ret = _RoutedUICommand_Create__SWIG_0(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr RoutedUICommand_Create__SWIG_1Delegate(string jarg1, string jarg2, HandleRef jarg3, HandleRef jarg4);
    public static RoutedUICommand_Create__SWIG_1Delegate _RoutedUICommand_Create__SWIG_1;
    public static IntPtr RoutedUICommand_Create__SWIG_1(string jarg1, string jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        IntPtr ret = _RoutedUICommand_Create__SWIG_1(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr RoutedUICommand_Create__SWIG_2Delegate(string jarg1, string jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);
    public static RoutedUICommand_Create__SWIG_2Delegate _RoutedUICommand_Create__SWIG_2;
    public static IntPtr RoutedUICommand_Create__SWIG_2(string jarg1, string jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5)
    {
        IntPtr ret = _RoutedUICommand_Create__SWIG_2(jarg1, jarg2, jarg3, jarg4, jarg5);

        return ret;
    }

    public delegate string RoutedUICommand_GetTextDelegate(HandleRef jarg1);
    public static RoutedUICommand_GetTextDelegate _RoutedUICommand_GetText;
    public static string RoutedUICommand_GetText(HandleRef jarg1)
    {
        string ret = _RoutedUICommand_GetText(jarg1);

        return ret;
    }

    public delegate void RoutedUICommand_SetTextDelegate(HandleRef jarg1, string jarg2);
    public static RoutedUICommand_SetTextDelegate _RoutedUICommand_SetText;
    public static void RoutedUICommand_SetText(HandleRef jarg1, string jarg2)
    {
        _RoutedUICommand_SetText(jarg1, jarg2);
    }

    public delegate IntPtr new_RowDefinitionDelegate();
    public static new_RowDefinitionDelegate _new_RowDefinition;
    public static IntPtr new_RowDefinition()
    {
        IntPtr ret = _new_RowDefinition();

        return ret;
    }

    public delegate IntPtr RowDefinition_GetHeightDelegate(HandleRef jarg1);
    public static RowDefinition_GetHeightDelegate _RowDefinition_GetHeight;
    public static IntPtr RowDefinition_GetHeight(HandleRef jarg1)
    {
        IntPtr ret = _RowDefinition_GetHeight(jarg1);

        return ret;
    }

    public delegate void RowDefinition_SetHeightDelegate(HandleRef jarg1, HandleRef jarg2);
    public static RowDefinition_SetHeightDelegate _RowDefinition_SetHeight;
    public static void RowDefinition_SetHeight(HandleRef jarg1, HandleRef jarg2)
    {
        _RowDefinition_SetHeight(jarg1, jarg2);
    }

    public delegate float RowDefinition_GetMinHeightDelegate(HandleRef jarg1);
    public static RowDefinition_GetMinHeightDelegate _RowDefinition_GetMinHeight;
    public static float RowDefinition_GetMinHeight(HandleRef jarg1)
    {
        float ret = _RowDefinition_GetMinHeight(jarg1);

        return ret;
    }

    public delegate void RowDefinition_SetMinHeightDelegate(HandleRef jarg1, float jarg2);
    public static RowDefinition_SetMinHeightDelegate _RowDefinition_SetMinHeight;
    public static void RowDefinition_SetMinHeight(HandleRef jarg1, float jarg2)
    {
        _RowDefinition_SetMinHeight(jarg1, jarg2);
    }

    public delegate float RowDefinition_GetMaxHeightDelegate(HandleRef jarg1);
    public static RowDefinition_GetMaxHeightDelegate _RowDefinition_GetMaxHeight;
    public static float RowDefinition_GetMaxHeight(HandleRef jarg1)
    {
        float ret = _RowDefinition_GetMaxHeight(jarg1);

        return ret;
    }

    public delegate void RowDefinition_SetMaxHeightDelegate(HandleRef jarg1, float jarg2);
    public static RowDefinition_SetMaxHeightDelegate _RowDefinition_SetMaxHeight;
    public static void RowDefinition_SetMaxHeight(HandleRef jarg1, float jarg2)
    {
        _RowDefinition_SetMaxHeight(jarg1, jarg2);
    }

    public delegate void delete_RowDefinitionDelegate(HandleRef jarg1);
    public static delete_RowDefinitionDelegate _delete_RowDefinition;
    public static void delete_RowDefinition(HandleRef jarg1)
    {
        _delete_RowDefinition(jarg1);
    }

    public delegate IntPtr new_ScaleTransform__SWIG_0Delegate();
    public static new_ScaleTransform__SWIG_0Delegate _new_ScaleTransform__SWIG_0;
    public static IntPtr new_ScaleTransform__SWIG_0()
    {
        IntPtr ret = _new_ScaleTransform__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_ScaleTransform__SWIG_1Delegate(float jarg1, float jarg2);
    public static new_ScaleTransform__SWIG_1Delegate _new_ScaleTransform__SWIG_1;
    public static IntPtr new_ScaleTransform__SWIG_1(float jarg1, float jarg2)
    {
        IntPtr ret = _new_ScaleTransform__SWIG_1(jarg1, jarg2);

        return ret;
    }

    public delegate float ScaleTransform_GetScaleXDelegate(HandleRef jarg1);
    public static ScaleTransform_GetScaleXDelegate _ScaleTransform_GetScaleX;
    public static float ScaleTransform_GetScaleX(HandleRef jarg1)
    {
        float ret = _ScaleTransform_GetScaleX(jarg1);

        return ret;
    }

    public delegate void ScaleTransform_SetScaleXDelegate(HandleRef jarg1, float jarg2);
    public static ScaleTransform_SetScaleXDelegate _ScaleTransform_SetScaleX;
    public static void ScaleTransform_SetScaleX(HandleRef jarg1, float jarg2)
    {
        _ScaleTransform_SetScaleX(jarg1, jarg2);
    }

    public delegate float ScaleTransform_GetScaleYDelegate(HandleRef jarg1);
    public static ScaleTransform_GetScaleYDelegate _ScaleTransform_GetScaleY;
    public static float ScaleTransform_GetScaleY(HandleRef jarg1)
    {
        float ret = _ScaleTransform_GetScaleY(jarg1);

        return ret;
    }

    public delegate void ScaleTransform_SetScaleYDelegate(HandleRef jarg1, float jarg2);
    public static ScaleTransform_SetScaleYDelegate _ScaleTransform_SetScaleY;
    public static void ScaleTransform_SetScaleY(HandleRef jarg1, float jarg2)
    {
        _ScaleTransform_SetScaleY(jarg1, jarg2);
    }

    public delegate float ScaleTransform_GetCenterXDelegate(HandleRef jarg1);
    public static ScaleTransform_GetCenterXDelegate _ScaleTransform_GetCenterX;
    public static float ScaleTransform_GetCenterX(HandleRef jarg1)
    {
        float ret = _ScaleTransform_GetCenterX(jarg1);

        return ret;
    }

    public delegate void ScaleTransform_SetCenterXDelegate(HandleRef jarg1, float jarg2);
    public static ScaleTransform_SetCenterXDelegate _ScaleTransform_SetCenterX;
    public static void ScaleTransform_SetCenterX(HandleRef jarg1, float jarg2)
    {
        _ScaleTransform_SetCenterX(jarg1, jarg2);
    }

    public delegate float ScaleTransform_GetCenterYDelegate(HandleRef jarg1);
    public static ScaleTransform_GetCenterYDelegate _ScaleTransform_GetCenterY;
    public static float ScaleTransform_GetCenterY(HandleRef jarg1)
    {
        float ret = _ScaleTransform_GetCenterY(jarg1);

        return ret;
    }

    public delegate void ScaleTransform_SetCenterYDelegate(HandleRef jarg1, float jarg2);
    public static ScaleTransform_SetCenterYDelegate _ScaleTransform_SetCenterY;
    public static void ScaleTransform_SetCenterY(HandleRef jarg1, float jarg2)
    {
        _ScaleTransform_SetCenterY(jarg1, jarg2);
    }

    public delegate IntPtr ScaleTransform_GetTransformDelegate(HandleRef jarg1);
    public static ScaleTransform_GetTransformDelegate _ScaleTransform_GetTransform;
    public static IntPtr ScaleTransform_GetTransform(HandleRef jarg1)
    {
        IntPtr ret = _ScaleTransform_GetTransform(jarg1);

        return ret;
    }

    public delegate void ScaleTransform_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static ScaleTransform_CreateRenderProxyDelegate _ScaleTransform_CreateRenderProxy;
    public static void ScaleTransform_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _ScaleTransform_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void ScaleTransform_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static ScaleTransform_UpdateRenderProxyDelegate _ScaleTransform_UpdateRenderProxy;
    public static void ScaleTransform_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _ScaleTransform_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void ScaleTransform_UnregisterRendererDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ScaleTransform_UnregisterRendererDelegate _ScaleTransform_UnregisterRenderer;
    public static void ScaleTransform_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2)
    {
        _ScaleTransform_UnregisterRenderer(jarg1, jarg2);
    }

    public delegate void delete_ScaleTransformDelegate(HandleRef jarg1);
    public static delete_ScaleTransformDelegate _delete_ScaleTransform;
    public static void delete_ScaleTransform(HandleRef jarg1)
    {
        _delete_ScaleTransform(jarg1);
    }

    public delegate void ScrollEventArgs_newValue_setDelegate(HandleRef jarg1, float jarg2);
    public static ScrollEventArgs_newValue_setDelegate _ScrollEventArgs_newValue_set;
    public static void ScrollEventArgs_newValue_set(HandleRef jarg1, float jarg2)
    {
        _ScrollEventArgs_newValue_set(jarg1, jarg2);
    }

    public delegate float ScrollEventArgs_newValue_getDelegate(HandleRef jarg1);
    public static ScrollEventArgs_newValue_getDelegate _ScrollEventArgs_newValue_get;
    public static float ScrollEventArgs_newValue_get(HandleRef jarg1)
    {
        float ret = _ScrollEventArgs_newValue_get(jarg1);

        return ret;
    }

    public delegate void ScrollEventArgs_scrollEventType_setDelegate(HandleRef jarg1, int jarg2);
    public static ScrollEventArgs_scrollEventType_setDelegate _ScrollEventArgs_scrollEventType_set;
    public static void ScrollEventArgs_scrollEventType_set(HandleRef jarg1, int jarg2)
    {
        _ScrollEventArgs_scrollEventType_set(jarg1, jarg2);
    }

    public delegate int ScrollEventArgs_scrollEventType_getDelegate(HandleRef jarg1);
    public static ScrollEventArgs_scrollEventType_getDelegate _ScrollEventArgs_scrollEventType_get;
    public static int ScrollEventArgs_scrollEventType_get(HandleRef jarg1)
    {
        int ret = _ScrollEventArgs_scrollEventType_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_ScrollEventArgsDelegate(HandleRef jarg1, float jarg2, int jarg3);
    public static new_ScrollEventArgsDelegate _new_ScrollEventArgs;
    public static IntPtr new_ScrollEventArgs(HandleRef jarg1, float jarg2, int jarg3)
    {
        IntPtr ret = _new_ScrollEventArgs(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void delete_ScrollEventArgsDelegate(HandleRef jarg1);
    public static delete_ScrollEventArgsDelegate _delete_ScrollEventArgs;
    public static void delete_ScrollEventArgs(HandleRef jarg1)
    {
        _delete_ScrollEventArgs(jarg1);
    }

    public delegate IntPtr new_ScrollBarDelegate();
    public static new_ScrollBarDelegate _new_ScrollBar;
    public static IntPtr new_ScrollBar()
    {
        IntPtr ret = _new_ScrollBar();

        return ret;
    }

    public delegate void delete_ScrollBarDelegate(HandleRef jarg1);
    public static delete_ScrollBarDelegate _delete_ScrollBar;
    public static void delete_ScrollBar(HandleRef jarg1)
    {
        _delete_ScrollBar(jarg1);
    }

    public delegate int ScrollBar_GetOrientationDelegate(HandleRef jarg1);
    public static ScrollBar_GetOrientationDelegate _ScrollBar_GetOrientation;
    public static int ScrollBar_GetOrientation(HandleRef jarg1)
    {
        int ret = _ScrollBar_GetOrientation(jarg1);

        return ret;
    }

    public delegate void ScrollBar_SetOrientationDelegate(HandleRef jarg1, int jarg2);
    public static ScrollBar_SetOrientationDelegate _ScrollBar_SetOrientation;
    public static void ScrollBar_SetOrientation(HandleRef jarg1, int jarg2)
    {
        _ScrollBar_SetOrientation(jarg1, jarg2);
    }

    public delegate float ScrollBar_GetViewportSizeDelegate(HandleRef jarg1);
    public static ScrollBar_GetViewportSizeDelegate _ScrollBar_GetViewportSize;
    public static float ScrollBar_GetViewportSize(HandleRef jarg1)
    {
        float ret = _ScrollBar_GetViewportSize(jarg1);

        return ret;
    }

    public delegate void ScrollBar_SetViewportSizeDelegate(HandleRef jarg1, float jarg2);
    public static ScrollBar_SetViewportSizeDelegate _ScrollBar_SetViewportSize;
    public static void ScrollBar_SetViewportSize(HandleRef jarg1, float jarg2)
    {
        _ScrollBar_SetViewportSize(jarg1, jarg2);
    }

    public delegate IntPtr ScrollBar_GetTrackDelegate(HandleRef jarg1);
    public static ScrollBar_GetTrackDelegate _ScrollBar_GetTrack;
    public static IntPtr ScrollBar_GetTrack(HandleRef jarg1)
    {
        IntPtr ret = _ScrollBar_GetTrack(jarg1);

        return ret;
    }

    public delegate void ScrollBar_DeferScrollToHorizontalOffsetCommand_setDelegate(HandleRef jarg1);
    public static ScrollBar_DeferScrollToHorizontalOffsetCommand_setDelegate _ScrollBar_DeferScrollToHorizontalOffsetCommand_set;
    public static void ScrollBar_DeferScrollToHorizontalOffsetCommand_set(HandleRef jarg1)
    {
        _ScrollBar_DeferScrollToHorizontalOffsetCommand_set(jarg1);
    }

    public delegate IntPtr ScrollBar_DeferScrollToHorizontalOffsetCommand_getDelegate();
    public static ScrollBar_DeferScrollToHorizontalOffsetCommand_getDelegate _ScrollBar_DeferScrollToHorizontalOffsetCommand_get;
    public static IntPtr ScrollBar_DeferScrollToHorizontalOffsetCommand_get()
    {
        IntPtr ret = _ScrollBar_DeferScrollToHorizontalOffsetCommand_get();

        return ret;
    }

    public delegate void ScrollBar_DeferScrollToVerticalOffsetCommand_setDelegate(HandleRef jarg1);
    public static ScrollBar_DeferScrollToVerticalOffsetCommand_setDelegate _ScrollBar_DeferScrollToVerticalOffsetCommand_set;
    public static void ScrollBar_DeferScrollToVerticalOffsetCommand_set(HandleRef jarg1)
    {
        _ScrollBar_DeferScrollToVerticalOffsetCommand_set(jarg1);
    }

    public delegate IntPtr ScrollBar_DeferScrollToVerticalOffsetCommand_getDelegate();
    public static ScrollBar_DeferScrollToVerticalOffsetCommand_getDelegate _ScrollBar_DeferScrollToVerticalOffsetCommand_get;
    public static IntPtr ScrollBar_DeferScrollToVerticalOffsetCommand_get()
    {
        IntPtr ret = _ScrollBar_DeferScrollToVerticalOffsetCommand_get();

        return ret;
    }

    public delegate void ScrollBar_LineDownCommand_setDelegate(HandleRef jarg1);
    public static ScrollBar_LineDownCommand_setDelegate _ScrollBar_LineDownCommand_set;
    public static void ScrollBar_LineDownCommand_set(HandleRef jarg1)
    {
        _ScrollBar_LineDownCommand_set(jarg1);
    }

    public delegate IntPtr ScrollBar_LineDownCommand_getDelegate();
    public static ScrollBar_LineDownCommand_getDelegate _ScrollBar_LineDownCommand_get;
    public static IntPtr ScrollBar_LineDownCommand_get()
    {
        IntPtr ret = _ScrollBar_LineDownCommand_get();

        return ret;
    }

    public delegate void ScrollBar_LineLeftCommand_setDelegate(HandleRef jarg1);
    public static ScrollBar_LineLeftCommand_setDelegate _ScrollBar_LineLeftCommand_set;
    public static void ScrollBar_LineLeftCommand_set(HandleRef jarg1)
    {
        _ScrollBar_LineLeftCommand_set(jarg1);
    }

    public delegate IntPtr ScrollBar_LineLeftCommand_getDelegate();
    public static ScrollBar_LineLeftCommand_getDelegate _ScrollBar_LineLeftCommand_get;
    public static IntPtr ScrollBar_LineLeftCommand_get()
    {
        IntPtr ret = _ScrollBar_LineLeftCommand_get();

        return ret;
    }

    public delegate void ScrollBar_LineRightCommand_setDelegate(HandleRef jarg1);
    public static ScrollBar_LineRightCommand_setDelegate _ScrollBar_LineRightCommand_set;
    public static void ScrollBar_LineRightCommand_set(HandleRef jarg1)
    {
        _ScrollBar_LineRightCommand_set(jarg1);
    }

    public delegate IntPtr ScrollBar_LineRightCommand_getDelegate();
    public static ScrollBar_LineRightCommand_getDelegate _ScrollBar_LineRightCommand_get;
    public static IntPtr ScrollBar_LineRightCommand_get()
    {
        IntPtr ret = _ScrollBar_LineRightCommand_get();

        return ret;
    }

    public delegate void ScrollBar_LineUpCommand_setDelegate(HandleRef jarg1);
    public static ScrollBar_LineUpCommand_setDelegate _ScrollBar_LineUpCommand_set;
    public static void ScrollBar_LineUpCommand_set(HandleRef jarg1)
    {
        _ScrollBar_LineUpCommand_set(jarg1);
    }

    public delegate IntPtr ScrollBar_LineUpCommand_getDelegate();
    public static ScrollBar_LineUpCommand_getDelegate _ScrollBar_LineUpCommand_get;
    public static IntPtr ScrollBar_LineUpCommand_get()
    {
        IntPtr ret = _ScrollBar_LineUpCommand_get();

        return ret;
    }

    public delegate void ScrollBar_PageDownCommand_setDelegate(HandleRef jarg1);
    public static ScrollBar_PageDownCommand_setDelegate _ScrollBar_PageDownCommand_set;
    public static void ScrollBar_PageDownCommand_set(HandleRef jarg1)
    {
        _ScrollBar_PageDownCommand_set(jarg1);
    }

    public delegate IntPtr ScrollBar_PageDownCommand_getDelegate();
    public static ScrollBar_PageDownCommand_getDelegate _ScrollBar_PageDownCommand_get;
    public static IntPtr ScrollBar_PageDownCommand_get()
    {
        IntPtr ret = _ScrollBar_PageDownCommand_get();

        return ret;
    }

    public delegate void ScrollBar_PageLeftCommand_setDelegate(HandleRef jarg1);
    public static ScrollBar_PageLeftCommand_setDelegate _ScrollBar_PageLeftCommand_set;
    public static void ScrollBar_PageLeftCommand_set(HandleRef jarg1)
    {
        _ScrollBar_PageLeftCommand_set(jarg1);
    }

    public delegate IntPtr ScrollBar_PageLeftCommand_getDelegate();
    public static ScrollBar_PageLeftCommand_getDelegate _ScrollBar_PageLeftCommand_get;
    public static IntPtr ScrollBar_PageLeftCommand_get()
    {
        IntPtr ret = _ScrollBar_PageLeftCommand_get();

        return ret;
    }

    public delegate void ScrollBar_PageRightCommand_setDelegate(HandleRef jarg1);
    public static ScrollBar_PageRightCommand_setDelegate _ScrollBar_PageRightCommand_set;
    public static void ScrollBar_PageRightCommand_set(HandleRef jarg1)
    {
        _ScrollBar_PageRightCommand_set(jarg1);
    }

    public delegate IntPtr ScrollBar_PageRightCommand_getDelegate();
    public static ScrollBar_PageRightCommand_getDelegate _ScrollBar_PageRightCommand_get;
    public static IntPtr ScrollBar_PageRightCommand_get()
    {
        IntPtr ret = _ScrollBar_PageRightCommand_get();

        return ret;
    }

    public delegate void ScrollBar_PageUpCommand_setDelegate(HandleRef jarg1);
    public static ScrollBar_PageUpCommand_setDelegate _ScrollBar_PageUpCommand_set;
    public static void ScrollBar_PageUpCommand_set(HandleRef jarg1)
    {
        _ScrollBar_PageUpCommand_set(jarg1);
    }

    public delegate IntPtr ScrollBar_PageUpCommand_getDelegate();
    public static ScrollBar_PageUpCommand_getDelegate _ScrollBar_PageUpCommand_get;
    public static IntPtr ScrollBar_PageUpCommand_get()
    {
        IntPtr ret = _ScrollBar_PageUpCommand_get();

        return ret;
    }

    public delegate void ScrollBar_ScrollHereCommand_setDelegate(HandleRef jarg1);
    public static ScrollBar_ScrollHereCommand_setDelegate _ScrollBar_ScrollHereCommand_set;
    public static void ScrollBar_ScrollHereCommand_set(HandleRef jarg1)
    {
        _ScrollBar_ScrollHereCommand_set(jarg1);
    }

    public delegate IntPtr ScrollBar_ScrollHereCommand_getDelegate();
    public static ScrollBar_ScrollHereCommand_getDelegate _ScrollBar_ScrollHereCommand_get;
    public static IntPtr ScrollBar_ScrollHereCommand_get()
    {
        IntPtr ret = _ScrollBar_ScrollHereCommand_get();

        return ret;
    }

    public delegate void ScrollBar_ScrollToBottomCommand_setDelegate(HandleRef jarg1);
    public static ScrollBar_ScrollToBottomCommand_setDelegate _ScrollBar_ScrollToBottomCommand_set;
    public static void ScrollBar_ScrollToBottomCommand_set(HandleRef jarg1)
    {
        _ScrollBar_ScrollToBottomCommand_set(jarg1);
    }

    public delegate IntPtr ScrollBar_ScrollToBottomCommand_getDelegate();
    public static ScrollBar_ScrollToBottomCommand_getDelegate _ScrollBar_ScrollToBottomCommand_get;
    public static IntPtr ScrollBar_ScrollToBottomCommand_get()
    {
        IntPtr ret = _ScrollBar_ScrollToBottomCommand_get();

        return ret;
    }

    public delegate void ScrollBar_ScrollToEndCommand_setDelegate(HandleRef jarg1);
    public static ScrollBar_ScrollToEndCommand_setDelegate _ScrollBar_ScrollToEndCommand_set;
    public static void ScrollBar_ScrollToEndCommand_set(HandleRef jarg1)
    {
        _ScrollBar_ScrollToEndCommand_set(jarg1);
    }

    public delegate IntPtr ScrollBar_ScrollToEndCommand_getDelegate();
    public static ScrollBar_ScrollToEndCommand_getDelegate _ScrollBar_ScrollToEndCommand_get;
    public static IntPtr ScrollBar_ScrollToEndCommand_get()
    {
        IntPtr ret = _ScrollBar_ScrollToEndCommand_get();

        return ret;
    }

    public delegate void ScrollBar_ScrollToHomeCommand_setDelegate(HandleRef jarg1);
    public static ScrollBar_ScrollToHomeCommand_setDelegate _ScrollBar_ScrollToHomeCommand_set;
    public static void ScrollBar_ScrollToHomeCommand_set(HandleRef jarg1)
    {
        _ScrollBar_ScrollToHomeCommand_set(jarg1);
    }

    public delegate IntPtr ScrollBar_ScrollToHomeCommand_getDelegate();
    public static ScrollBar_ScrollToHomeCommand_getDelegate _ScrollBar_ScrollToHomeCommand_get;
    public static IntPtr ScrollBar_ScrollToHomeCommand_get()
    {
        IntPtr ret = _ScrollBar_ScrollToHomeCommand_get();

        return ret;
    }

    public delegate void ScrollBar_ScrollToHorizontalOffsetCommand_setDelegate(HandleRef jarg1);
    public static ScrollBar_ScrollToHorizontalOffsetCommand_setDelegate _ScrollBar_ScrollToHorizontalOffsetCommand_set;
    public static void ScrollBar_ScrollToHorizontalOffsetCommand_set(HandleRef jarg1)
    {
        _ScrollBar_ScrollToHorizontalOffsetCommand_set(jarg1);
    }

    public delegate IntPtr ScrollBar_ScrollToHorizontalOffsetCommand_getDelegate();
    public static ScrollBar_ScrollToHorizontalOffsetCommand_getDelegate _ScrollBar_ScrollToHorizontalOffsetCommand_get;
    public static IntPtr ScrollBar_ScrollToHorizontalOffsetCommand_get()
    {
        IntPtr ret = _ScrollBar_ScrollToHorizontalOffsetCommand_get();

        return ret;
    }

    public delegate void ScrollBar_ScrollToLeftEndCommand_setDelegate(HandleRef jarg1);
    public static ScrollBar_ScrollToLeftEndCommand_setDelegate _ScrollBar_ScrollToLeftEndCommand_set;
    public static void ScrollBar_ScrollToLeftEndCommand_set(HandleRef jarg1)
    {
        _ScrollBar_ScrollToLeftEndCommand_set(jarg1);
    }

    public delegate IntPtr ScrollBar_ScrollToLeftEndCommand_getDelegate();
    public static ScrollBar_ScrollToLeftEndCommand_getDelegate _ScrollBar_ScrollToLeftEndCommand_get;
    public static IntPtr ScrollBar_ScrollToLeftEndCommand_get()
    {
        IntPtr ret = _ScrollBar_ScrollToLeftEndCommand_get();

        return ret;
    }

    public delegate void ScrollBar_ScrollToRightEndCommand_setDelegate(HandleRef jarg1);
    public static ScrollBar_ScrollToRightEndCommand_setDelegate _ScrollBar_ScrollToRightEndCommand_set;
    public static void ScrollBar_ScrollToRightEndCommand_set(HandleRef jarg1)
    {
        _ScrollBar_ScrollToRightEndCommand_set(jarg1);
    }

    public delegate IntPtr ScrollBar_ScrollToRightEndCommand_getDelegate();
    public static ScrollBar_ScrollToRightEndCommand_getDelegate _ScrollBar_ScrollToRightEndCommand_get;
    public static IntPtr ScrollBar_ScrollToRightEndCommand_get()
    {
        IntPtr ret = _ScrollBar_ScrollToRightEndCommand_get();

        return ret;
    }

    public delegate void ScrollBar_ScrollToTopCommand_setDelegate(HandleRef jarg1);
    public static ScrollBar_ScrollToTopCommand_setDelegate _ScrollBar_ScrollToTopCommand_set;
    public static void ScrollBar_ScrollToTopCommand_set(HandleRef jarg1)
    {
        _ScrollBar_ScrollToTopCommand_set(jarg1);
    }

    public delegate IntPtr ScrollBar_ScrollToTopCommand_getDelegate();
    public static ScrollBar_ScrollToTopCommand_getDelegate _ScrollBar_ScrollToTopCommand_get;
    public static IntPtr ScrollBar_ScrollToTopCommand_get()
    {
        IntPtr ret = _ScrollBar_ScrollToTopCommand_get();

        return ret;
    }

    public delegate void ScrollBar_ScrollToVerticalOffsetCommand_setDelegate(HandleRef jarg1);
    public static ScrollBar_ScrollToVerticalOffsetCommand_setDelegate _ScrollBar_ScrollToVerticalOffsetCommand_set;
    public static void ScrollBar_ScrollToVerticalOffsetCommand_set(HandleRef jarg1)
    {
        _ScrollBar_ScrollToVerticalOffsetCommand_set(jarg1);
    }

    public delegate IntPtr ScrollBar_ScrollToVerticalOffsetCommand_getDelegate();
    public static ScrollBar_ScrollToVerticalOffsetCommand_getDelegate _ScrollBar_ScrollToVerticalOffsetCommand_get;
    public static IntPtr ScrollBar_ScrollToVerticalOffsetCommand_get()
    {
        IntPtr ret = _ScrollBar_ScrollToVerticalOffsetCommand_get();

        return ret;
    }

    public delegate IntPtr new_ScrollContentPresenterDelegate();
    public static new_ScrollContentPresenterDelegate _new_ScrollContentPresenter;
    public static IntPtr new_ScrollContentPresenter()
    {
        IntPtr ret = _new_ScrollContentPresenter();

        return ret;
    }

    public delegate void delete_ScrollContentPresenterDelegate(HandleRef jarg1);
    public static delete_ScrollContentPresenterDelegate _delete_ScrollContentPresenter;
    public static void delete_ScrollContentPresenter(HandleRef jarg1)
    {
        _delete_ScrollContentPresenter(jarg1);
    }

    public delegate bool ScrollContentPresenter_GetCanContentScrollDelegate(HandleRef jarg1);
    public static ScrollContentPresenter_GetCanContentScrollDelegate _ScrollContentPresenter_GetCanContentScroll;
    public static bool ScrollContentPresenter_GetCanContentScroll(HandleRef jarg1)
    {
        bool ret = _ScrollContentPresenter_GetCanContentScroll(jarg1);

        return ret;
    }

    public delegate void ScrollContentPresenter_SetCanContentScrollDelegate(HandleRef jarg1, bool jarg2);
    public static ScrollContentPresenter_SetCanContentScrollDelegate _ScrollContentPresenter_SetCanContentScroll;
    public static void ScrollContentPresenter_SetCanContentScroll(HandleRef jarg1, bool jarg2)
    {
        _ScrollContentPresenter_SetCanContentScroll(jarg1, jarg2);
    }

    public delegate bool ScrollContentPresenter_GetCanHorizontallyScrollDelegate(HandleRef jarg1);
    public static ScrollContentPresenter_GetCanHorizontallyScrollDelegate _ScrollContentPresenter_GetCanHorizontallyScroll;
    public static bool ScrollContentPresenter_GetCanHorizontallyScroll(HandleRef jarg1)
    {
        bool ret = _ScrollContentPresenter_GetCanHorizontallyScroll(jarg1);

        return ret;
    }

    public delegate void ScrollContentPresenter_SetCanHorizontallyScrollDelegate(HandleRef jarg1, bool jarg2);
    public static ScrollContentPresenter_SetCanHorizontallyScrollDelegate _ScrollContentPresenter_SetCanHorizontallyScroll;
    public static void ScrollContentPresenter_SetCanHorizontallyScroll(HandleRef jarg1, bool jarg2)
    {
        _ScrollContentPresenter_SetCanHorizontallyScroll(jarg1, jarg2);
    }

    public delegate bool ScrollContentPresenter_GetCanVerticallyScrollDelegate(HandleRef jarg1);
    public static ScrollContentPresenter_GetCanVerticallyScrollDelegate _ScrollContentPresenter_GetCanVerticallyScroll;
    public static bool ScrollContentPresenter_GetCanVerticallyScroll(HandleRef jarg1)
    {
        bool ret = _ScrollContentPresenter_GetCanVerticallyScroll(jarg1);

        return ret;
    }

    public delegate void ScrollContentPresenter_SetCanVerticallyScrollDelegate(HandleRef jarg1, bool jarg2);
    public static ScrollContentPresenter_SetCanVerticallyScrollDelegate _ScrollContentPresenter_SetCanVerticallyScroll;
    public static void ScrollContentPresenter_SetCanVerticallyScroll(HandleRef jarg1, bool jarg2)
    {
        _ScrollContentPresenter_SetCanVerticallyScroll(jarg1, jarg2);
    }

    public delegate float ScrollContentPresenter_GetExtentWidthDelegate(HandleRef jarg1);
    public static ScrollContentPresenter_GetExtentWidthDelegate _ScrollContentPresenter_GetExtentWidth;
    public static float ScrollContentPresenter_GetExtentWidth(HandleRef jarg1)
    {
        float ret = _ScrollContentPresenter_GetExtentWidth(jarg1);

        return ret;
    }

    public delegate float ScrollContentPresenter_GetExtentHeightDelegate(HandleRef jarg1);
    public static ScrollContentPresenter_GetExtentHeightDelegate _ScrollContentPresenter_GetExtentHeight;
    public static float ScrollContentPresenter_GetExtentHeight(HandleRef jarg1)
    {
        float ret = _ScrollContentPresenter_GetExtentHeight(jarg1);

        return ret;
    }

    public delegate float ScrollContentPresenter_GetViewportWidthDelegate(HandleRef jarg1);
    public static ScrollContentPresenter_GetViewportWidthDelegate _ScrollContentPresenter_GetViewportWidth;
    public static float ScrollContentPresenter_GetViewportWidth(HandleRef jarg1)
    {
        float ret = _ScrollContentPresenter_GetViewportWidth(jarg1);

        return ret;
    }

    public delegate float ScrollContentPresenter_GetViewportHeightDelegate(HandleRef jarg1);
    public static ScrollContentPresenter_GetViewportHeightDelegate _ScrollContentPresenter_GetViewportHeight;
    public static float ScrollContentPresenter_GetViewportHeight(HandleRef jarg1)
    {
        float ret = _ScrollContentPresenter_GetViewportHeight(jarg1);

        return ret;
    }

    public delegate float ScrollContentPresenter_GetHorizontalOffsetDelegate(HandleRef jarg1);
    public static ScrollContentPresenter_GetHorizontalOffsetDelegate _ScrollContentPresenter_GetHorizontalOffset;
    public static float ScrollContentPresenter_GetHorizontalOffset(HandleRef jarg1)
    {
        float ret = _ScrollContentPresenter_GetHorizontalOffset(jarg1);

        return ret;
    }

    public delegate void ScrollContentPresenter_SetHorizontalOffsetDelegate(HandleRef jarg1, float jarg2);
    public static ScrollContentPresenter_SetHorizontalOffsetDelegate _ScrollContentPresenter_SetHorizontalOffset;
    public static void ScrollContentPresenter_SetHorizontalOffset(HandleRef jarg1, float jarg2)
    {
        _ScrollContentPresenter_SetHorizontalOffset(jarg1, jarg2);
    }

    public delegate float ScrollContentPresenter_GetVerticalOffsetDelegate(HandleRef jarg1);
    public static ScrollContentPresenter_GetVerticalOffsetDelegate _ScrollContentPresenter_GetVerticalOffset;
    public static float ScrollContentPresenter_GetVerticalOffset(HandleRef jarg1)
    {
        float ret = _ScrollContentPresenter_GetVerticalOffset(jarg1);

        return ret;
    }

    public delegate void ScrollContentPresenter_SetVerticalOffsetDelegate(HandleRef jarg1, float jarg2);
    public static ScrollContentPresenter_SetVerticalOffsetDelegate _ScrollContentPresenter_SetVerticalOffset;
    public static void ScrollContentPresenter_SetVerticalOffset(HandleRef jarg1, float jarg2)
    {
        _ScrollContentPresenter_SetVerticalOffset(jarg1, jarg2);
    }

    public delegate IntPtr ScrollContentPresenter_GetScrollOwnerDelegate(HandleRef jarg1);
    public static ScrollContentPresenter_GetScrollOwnerDelegate _ScrollContentPresenter_GetScrollOwner;
    public static IntPtr ScrollContentPresenter_GetScrollOwner(HandleRef jarg1)
    {
        IntPtr ret = _ScrollContentPresenter_GetScrollOwner(jarg1);

        return ret;
    }

    public delegate void ScrollContentPresenter_LineDownDelegate(HandleRef jarg1);
    public static ScrollContentPresenter_LineDownDelegate _ScrollContentPresenter_LineDown;
    public static void ScrollContentPresenter_LineDown(HandleRef jarg1)
    {
        _ScrollContentPresenter_LineDown(jarg1);
    }

    public delegate void ScrollContentPresenter_LineLeftDelegate(HandleRef jarg1);
    public static ScrollContentPresenter_LineLeftDelegate _ScrollContentPresenter_LineLeft;
    public static void ScrollContentPresenter_LineLeft(HandleRef jarg1)
    {
        _ScrollContentPresenter_LineLeft(jarg1);
    }

    public delegate void ScrollContentPresenter_LineRightDelegate(HandleRef jarg1);
    public static ScrollContentPresenter_LineRightDelegate _ScrollContentPresenter_LineRight;
    public static void ScrollContentPresenter_LineRight(HandleRef jarg1)
    {
        _ScrollContentPresenter_LineRight(jarg1);
    }

    public delegate void ScrollContentPresenter_LineUpDelegate(HandleRef jarg1);
    public static ScrollContentPresenter_LineUpDelegate _ScrollContentPresenter_LineUp;
    public static void ScrollContentPresenter_LineUp(HandleRef jarg1)
    {
        _ScrollContentPresenter_LineUp(jarg1);
    }

    public delegate IntPtr ScrollContentPresenter_MakeVisibleDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static ScrollContentPresenter_MakeVisibleDelegate _ScrollContentPresenter_MakeVisible;
    public static IntPtr ScrollContentPresenter_MakeVisible(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        IntPtr ret = _ScrollContentPresenter_MakeVisible(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void ScrollContentPresenter_MouseWheelDownDelegate(HandleRef jarg1);
    public static ScrollContentPresenter_MouseWheelDownDelegate _ScrollContentPresenter_MouseWheelDown;
    public static void ScrollContentPresenter_MouseWheelDown(HandleRef jarg1)
    {
        _ScrollContentPresenter_MouseWheelDown(jarg1);
    }

    public delegate void ScrollContentPresenter_MouseWheelLeftDelegate(HandleRef jarg1);
    public static ScrollContentPresenter_MouseWheelLeftDelegate _ScrollContentPresenter_MouseWheelLeft;
    public static void ScrollContentPresenter_MouseWheelLeft(HandleRef jarg1)
    {
        _ScrollContentPresenter_MouseWheelLeft(jarg1);
    }

    public delegate void ScrollContentPresenter_MouseWheelRightDelegate(HandleRef jarg1);
    public static ScrollContentPresenter_MouseWheelRightDelegate _ScrollContentPresenter_MouseWheelRight;
    public static void ScrollContentPresenter_MouseWheelRight(HandleRef jarg1)
    {
        _ScrollContentPresenter_MouseWheelRight(jarg1);
    }

    public delegate void ScrollContentPresenter_MouseWheelUpDelegate(HandleRef jarg1);
    public static ScrollContentPresenter_MouseWheelUpDelegate _ScrollContentPresenter_MouseWheelUp;
    public static void ScrollContentPresenter_MouseWheelUp(HandleRef jarg1)
    {
        _ScrollContentPresenter_MouseWheelUp(jarg1);
    }

    public delegate void ScrollContentPresenter_PageDownDelegate(HandleRef jarg1);
    public static ScrollContentPresenter_PageDownDelegate _ScrollContentPresenter_PageDown;
    public static void ScrollContentPresenter_PageDown(HandleRef jarg1)
    {
        _ScrollContentPresenter_PageDown(jarg1);
    }

    public delegate void ScrollContentPresenter_PageLeftDelegate(HandleRef jarg1);
    public static ScrollContentPresenter_PageLeftDelegate _ScrollContentPresenter_PageLeft;
    public static void ScrollContentPresenter_PageLeft(HandleRef jarg1)
    {
        _ScrollContentPresenter_PageLeft(jarg1);
    }

    public delegate void ScrollContentPresenter_PageRightDelegate(HandleRef jarg1);
    public static ScrollContentPresenter_PageRightDelegate _ScrollContentPresenter_PageRight;
    public static void ScrollContentPresenter_PageRight(HandleRef jarg1)
    {
        _ScrollContentPresenter_PageRight(jarg1);
    }

    public delegate void ScrollContentPresenter_PageUpDelegate(HandleRef jarg1);
    public static ScrollContentPresenter_PageUpDelegate _ScrollContentPresenter_PageUp;
    public static void ScrollContentPresenter_PageUp(HandleRef jarg1)
    {
        _ScrollContentPresenter_PageUp(jarg1);
    }

    public delegate void ScrollContentPresenter_AddLayerDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ScrollContentPresenter_AddLayerDelegate _ScrollContentPresenter_AddLayer;
    public static void ScrollContentPresenter_AddLayer(HandleRef jarg1, HandleRef jarg2)
    {
        _ScrollContentPresenter_AddLayer(jarg1, jarg2);
    }

    public delegate void ScrollContentPresenter_RemoveLayerDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ScrollContentPresenter_RemoveLayerDelegate _ScrollContentPresenter_RemoveLayer;
    public static void ScrollContentPresenter_RemoveLayer(HandleRef jarg1, HandleRef jarg2)
    {
        _ScrollContentPresenter_RemoveLayer(jarg1, jarg2);
    }

    public delegate void ScrollChangedEventArgs_extentHeight_setDelegate(HandleRef jarg1, float jarg2);
    public static ScrollChangedEventArgs_extentHeight_setDelegate _ScrollChangedEventArgs_extentHeight_set;
    public static void ScrollChangedEventArgs_extentHeight_set(HandleRef jarg1, float jarg2)
    {
        _ScrollChangedEventArgs_extentHeight_set(jarg1, jarg2);
    }

    public delegate float ScrollChangedEventArgs_extentHeight_getDelegate(HandleRef jarg1);
    public static ScrollChangedEventArgs_extentHeight_getDelegate _ScrollChangedEventArgs_extentHeight_get;
    public static float ScrollChangedEventArgs_extentHeight_get(HandleRef jarg1)
    {
        float ret = _ScrollChangedEventArgs_extentHeight_get(jarg1);

        return ret;
    }

    public delegate void ScrollChangedEventArgs_extentHeightChange_setDelegate(HandleRef jarg1, float jarg2);
    public static ScrollChangedEventArgs_extentHeightChange_setDelegate _ScrollChangedEventArgs_extentHeightChange_set;
    public static void ScrollChangedEventArgs_extentHeightChange_set(HandleRef jarg1, float jarg2)
    {
        _ScrollChangedEventArgs_extentHeightChange_set(jarg1, jarg2);
    }

    public delegate float ScrollChangedEventArgs_extentHeightChange_getDelegate(HandleRef jarg1);
    public static ScrollChangedEventArgs_extentHeightChange_getDelegate _ScrollChangedEventArgs_extentHeightChange_get;
    public static float ScrollChangedEventArgs_extentHeightChange_get(HandleRef jarg1)
    {
        float ret = _ScrollChangedEventArgs_extentHeightChange_get(jarg1);

        return ret;
    }

    public delegate void ScrollChangedEventArgs_extentWidth_setDelegate(HandleRef jarg1, float jarg2);
    public static ScrollChangedEventArgs_extentWidth_setDelegate _ScrollChangedEventArgs_extentWidth_set;
    public static void ScrollChangedEventArgs_extentWidth_set(HandleRef jarg1, float jarg2)
    {
        _ScrollChangedEventArgs_extentWidth_set(jarg1, jarg2);
    }

    public delegate float ScrollChangedEventArgs_extentWidth_getDelegate(HandleRef jarg1);
    public static ScrollChangedEventArgs_extentWidth_getDelegate _ScrollChangedEventArgs_extentWidth_get;
    public static float ScrollChangedEventArgs_extentWidth_get(HandleRef jarg1)
    {
        float ret = _ScrollChangedEventArgs_extentWidth_get(jarg1);

        return ret;
    }

    public delegate void ScrollChangedEventArgs_extentWidthChange_setDelegate(HandleRef jarg1, float jarg2);
    public static ScrollChangedEventArgs_extentWidthChange_setDelegate _ScrollChangedEventArgs_extentWidthChange_set;
    public static void ScrollChangedEventArgs_extentWidthChange_set(HandleRef jarg1, float jarg2)
    {
        _ScrollChangedEventArgs_extentWidthChange_set(jarg1, jarg2);
    }

    public delegate float ScrollChangedEventArgs_extentWidthChange_getDelegate(HandleRef jarg1);
    public static ScrollChangedEventArgs_extentWidthChange_getDelegate _ScrollChangedEventArgs_extentWidthChange_get;
    public static float ScrollChangedEventArgs_extentWidthChange_get(HandleRef jarg1)
    {
        float ret = _ScrollChangedEventArgs_extentWidthChange_get(jarg1);

        return ret;
    }

    public delegate void ScrollChangedEventArgs_horizontalChange_setDelegate(HandleRef jarg1, float jarg2);
    public static ScrollChangedEventArgs_horizontalChange_setDelegate _ScrollChangedEventArgs_horizontalChange_set;
    public static void ScrollChangedEventArgs_horizontalChange_set(HandleRef jarg1, float jarg2)
    {
        _ScrollChangedEventArgs_horizontalChange_set(jarg1, jarg2);
    }

    public delegate float ScrollChangedEventArgs_horizontalChange_getDelegate(HandleRef jarg1);
    public static ScrollChangedEventArgs_horizontalChange_getDelegate _ScrollChangedEventArgs_horizontalChange_get;
    public static float ScrollChangedEventArgs_horizontalChange_get(HandleRef jarg1)
    {
        float ret = _ScrollChangedEventArgs_horizontalChange_get(jarg1);

        return ret;
    }

    public delegate void ScrollChangedEventArgs_horizontalOffset_setDelegate(HandleRef jarg1, float jarg2);
    public static ScrollChangedEventArgs_horizontalOffset_setDelegate _ScrollChangedEventArgs_horizontalOffset_set;
    public static void ScrollChangedEventArgs_horizontalOffset_set(HandleRef jarg1, float jarg2)
    {
        _ScrollChangedEventArgs_horizontalOffset_set(jarg1, jarg2);
    }

    public delegate float ScrollChangedEventArgs_horizontalOffset_getDelegate(HandleRef jarg1);
    public static ScrollChangedEventArgs_horizontalOffset_getDelegate _ScrollChangedEventArgs_horizontalOffset_get;
    public static float ScrollChangedEventArgs_horizontalOffset_get(HandleRef jarg1)
    {
        float ret = _ScrollChangedEventArgs_horizontalOffset_get(jarg1);

        return ret;
    }

    public delegate void ScrollChangedEventArgs_verticalChange_setDelegate(HandleRef jarg1, float jarg2);
    public static ScrollChangedEventArgs_verticalChange_setDelegate _ScrollChangedEventArgs_verticalChange_set;
    public static void ScrollChangedEventArgs_verticalChange_set(HandleRef jarg1, float jarg2)
    {
        _ScrollChangedEventArgs_verticalChange_set(jarg1, jarg2);
    }

    public delegate float ScrollChangedEventArgs_verticalChange_getDelegate(HandleRef jarg1);
    public static ScrollChangedEventArgs_verticalChange_getDelegate _ScrollChangedEventArgs_verticalChange_get;
    public static float ScrollChangedEventArgs_verticalChange_get(HandleRef jarg1)
    {
        float ret = _ScrollChangedEventArgs_verticalChange_get(jarg1);

        return ret;
    }

    public delegate void ScrollChangedEventArgs_verticalOffset_setDelegate(HandleRef jarg1, float jarg2);
    public static ScrollChangedEventArgs_verticalOffset_setDelegate _ScrollChangedEventArgs_verticalOffset_set;
    public static void ScrollChangedEventArgs_verticalOffset_set(HandleRef jarg1, float jarg2)
    {
        _ScrollChangedEventArgs_verticalOffset_set(jarg1, jarg2);
    }

    public delegate float ScrollChangedEventArgs_verticalOffset_getDelegate(HandleRef jarg1);
    public static ScrollChangedEventArgs_verticalOffset_getDelegate _ScrollChangedEventArgs_verticalOffset_get;
    public static float ScrollChangedEventArgs_verticalOffset_get(HandleRef jarg1)
    {
        float ret = _ScrollChangedEventArgs_verticalOffset_get(jarg1);

        return ret;
    }

    public delegate void ScrollChangedEventArgs_viewportHeight_setDelegate(HandleRef jarg1, float jarg2);
    public static ScrollChangedEventArgs_viewportHeight_setDelegate _ScrollChangedEventArgs_viewportHeight_set;
    public static void ScrollChangedEventArgs_viewportHeight_set(HandleRef jarg1, float jarg2)
    {
        _ScrollChangedEventArgs_viewportHeight_set(jarg1, jarg2);
    }

    public delegate float ScrollChangedEventArgs_viewportHeight_getDelegate(HandleRef jarg1);
    public static ScrollChangedEventArgs_viewportHeight_getDelegate _ScrollChangedEventArgs_viewportHeight_get;
    public static float ScrollChangedEventArgs_viewportHeight_get(HandleRef jarg1)
    {
        float ret = _ScrollChangedEventArgs_viewportHeight_get(jarg1);

        return ret;
    }

    public delegate void ScrollChangedEventArgs_viewportHeightChange_setDelegate(HandleRef jarg1, float jarg2);
    public static ScrollChangedEventArgs_viewportHeightChange_setDelegate _ScrollChangedEventArgs_viewportHeightChange_set;
    public static void ScrollChangedEventArgs_viewportHeightChange_set(HandleRef jarg1, float jarg2)
    {
        _ScrollChangedEventArgs_viewportHeightChange_set(jarg1, jarg2);
    }

    public delegate float ScrollChangedEventArgs_viewportHeightChange_getDelegate(HandleRef jarg1);
    public static ScrollChangedEventArgs_viewportHeightChange_getDelegate _ScrollChangedEventArgs_viewportHeightChange_get;
    public static float ScrollChangedEventArgs_viewportHeightChange_get(HandleRef jarg1)
    {
        float ret = _ScrollChangedEventArgs_viewportHeightChange_get(jarg1);

        return ret;
    }

    public delegate void ScrollChangedEventArgs_viewportWidth_setDelegate(HandleRef jarg1, float jarg2);
    public static ScrollChangedEventArgs_viewportWidth_setDelegate _ScrollChangedEventArgs_viewportWidth_set;
    public static void ScrollChangedEventArgs_viewportWidth_set(HandleRef jarg1, float jarg2)
    {
        _ScrollChangedEventArgs_viewportWidth_set(jarg1, jarg2);
    }

    public delegate float ScrollChangedEventArgs_viewportWidth_getDelegate(HandleRef jarg1);
    public static ScrollChangedEventArgs_viewportWidth_getDelegate _ScrollChangedEventArgs_viewportWidth_get;
    public static float ScrollChangedEventArgs_viewportWidth_get(HandleRef jarg1)
    {
        float ret = _ScrollChangedEventArgs_viewportWidth_get(jarg1);

        return ret;
    }

    public delegate void ScrollChangedEventArgs_viewportWidthChange_setDelegate(HandleRef jarg1, float jarg2);
    public static ScrollChangedEventArgs_viewportWidthChange_setDelegate _ScrollChangedEventArgs_viewportWidthChange_set;
    public static void ScrollChangedEventArgs_viewportWidthChange_set(HandleRef jarg1, float jarg2)
    {
        _ScrollChangedEventArgs_viewportWidthChange_set(jarg1, jarg2);
    }

    public delegate float ScrollChangedEventArgs_viewportWidthChange_getDelegate(HandleRef jarg1);
    public static ScrollChangedEventArgs_viewportWidthChange_getDelegate _ScrollChangedEventArgs_viewportWidthChange_get;
    public static float ScrollChangedEventArgs_viewportWidthChange_get(HandleRef jarg1)
    {
        float ret = _ScrollChangedEventArgs_viewportWidthChange_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_ScrollChangedEventArgsDelegate(HandleRef jarg1);
    public static new_ScrollChangedEventArgsDelegate _new_ScrollChangedEventArgs;
    public static IntPtr new_ScrollChangedEventArgs(HandleRef jarg1)
    {
        IntPtr ret = _new_ScrollChangedEventArgs(jarg1);

        return ret;
    }

    public delegate void delete_ScrollChangedEventArgsDelegate(HandleRef jarg1);
    public static delete_ScrollChangedEventArgsDelegate _delete_ScrollChangedEventArgs;
    public static void delete_ScrollChangedEventArgs(HandleRef jarg1)
    {
        _delete_ScrollChangedEventArgs(jarg1);
    }

    public delegate IntPtr new_ScrollViewerDelegate();
    public static new_ScrollViewerDelegate _new_ScrollViewer;
    public static IntPtr new_ScrollViewer()
    {
        IntPtr ret = _new_ScrollViewer();

        return ret;
    }

    public delegate void delete_ScrollViewerDelegate(HandleRef jarg1);
    public static delete_ScrollViewerDelegate _delete_ScrollViewer;
    public static void delete_ScrollViewer(HandleRef jarg1)
    {
        _delete_ScrollViewer(jarg1);
    }

    public delegate int ScrollViewer_GetHorizontalScrollBarVisibilityDelegate(HandleRef jarg1);
    public static ScrollViewer_GetHorizontalScrollBarVisibilityDelegate _ScrollViewer_GetHorizontalScrollBarVisibility;
    public static int ScrollViewer_GetHorizontalScrollBarVisibility(HandleRef jarg1)
    {
        int ret = _ScrollViewer_GetHorizontalScrollBarVisibility(jarg1);

        return ret;
    }

    public delegate void ScrollViewer_SetHorizontalScrollBarVisibilityDelegate(HandleRef jarg1, int jarg2);
    public static ScrollViewer_SetHorizontalScrollBarVisibilityDelegate _ScrollViewer_SetHorizontalScrollBarVisibility;
    public static void ScrollViewer_SetHorizontalScrollBarVisibility(HandleRef jarg1, int jarg2)
    {
        _ScrollViewer_SetHorizontalScrollBarVisibility(jarg1, jarg2);
    }

    public delegate int ScrollViewer_GetVerticalScrollBarVisibilityDelegate(HandleRef jarg1);
    public static ScrollViewer_GetVerticalScrollBarVisibilityDelegate _ScrollViewer_GetVerticalScrollBarVisibility;
    public static int ScrollViewer_GetVerticalScrollBarVisibility(HandleRef jarg1)
    {
        int ret = _ScrollViewer_GetVerticalScrollBarVisibility(jarg1);

        return ret;
    }

    public delegate void ScrollViewer_SetVerticalScrollBarVisibilityDelegate(HandleRef jarg1, int jarg2);
    public static ScrollViewer_SetVerticalScrollBarVisibilityDelegate _ScrollViewer_SetVerticalScrollBarVisibility;
    public static void ScrollViewer_SetVerticalScrollBarVisibility(HandleRef jarg1, int jarg2)
    {
        _ScrollViewer_SetVerticalScrollBarVisibility(jarg1, jarg2);
    }

    public delegate bool ScrollViewer_GetCanContentScrollDelegate(HandleRef jarg1);
    public static ScrollViewer_GetCanContentScrollDelegate _ScrollViewer_GetCanContentScroll;
    public static bool ScrollViewer_GetCanContentScroll(HandleRef jarg1)
    {
        bool ret = _ScrollViewer_GetCanContentScroll(jarg1);

        return ret;
    }

    public delegate void ScrollViewer_SetCanContentScrollDelegate(HandleRef jarg1, bool jarg2);
    public static ScrollViewer_SetCanContentScrollDelegate _ScrollViewer_SetCanContentScroll;
    public static void ScrollViewer_SetCanContentScroll(HandleRef jarg1, bool jarg2)
    {
        _ScrollViewer_SetCanContentScroll(jarg1, jarg2);
    }

    public delegate int ScrollViewer_GetComputedHorizontalScrollBarVisibilityDelegate(HandleRef jarg1);
    public static ScrollViewer_GetComputedHorizontalScrollBarVisibilityDelegate _ScrollViewer_GetComputedHorizontalScrollBarVisibility;
    public static int ScrollViewer_GetComputedHorizontalScrollBarVisibility(HandleRef jarg1)
    {
        int ret = _ScrollViewer_GetComputedHorizontalScrollBarVisibility(jarg1);

        return ret;
    }

    public delegate int ScrollViewer_GetComputedVerticalScrollBarVisibilityDelegate(HandleRef jarg1);
    public static ScrollViewer_GetComputedVerticalScrollBarVisibilityDelegate _ScrollViewer_GetComputedVerticalScrollBarVisibility;
    public static int ScrollViewer_GetComputedVerticalScrollBarVisibility(HandleRef jarg1)
    {
        int ret = _ScrollViewer_GetComputedVerticalScrollBarVisibility(jarg1);

        return ret;
    }

    public delegate float ScrollViewer_GetExtentHeightDelegate(HandleRef jarg1);
    public static ScrollViewer_GetExtentHeightDelegate _ScrollViewer_GetExtentHeight;
    public static float ScrollViewer_GetExtentHeight(HandleRef jarg1)
    {
        float ret = _ScrollViewer_GetExtentHeight(jarg1);

        return ret;
    }

    public delegate float ScrollViewer_GetExtentWidthDelegate(HandleRef jarg1);
    public static ScrollViewer_GetExtentWidthDelegate _ScrollViewer_GetExtentWidth;
    public static float ScrollViewer_GetExtentWidth(HandleRef jarg1)
    {
        float ret = _ScrollViewer_GetExtentWidth(jarg1);

        return ret;
    }

    public delegate float ScrollViewer_GetHorizontalOffsetDelegate(HandleRef jarg1);
    public static ScrollViewer_GetHorizontalOffsetDelegate _ScrollViewer_GetHorizontalOffset;
    public static float ScrollViewer_GetHorizontalOffset(HandleRef jarg1)
    {
        float ret = _ScrollViewer_GetHorizontalOffset(jarg1);

        return ret;
    }

    public delegate float ScrollViewer_GetScrollableHeightDelegate(HandleRef jarg1);
    public static ScrollViewer_GetScrollableHeightDelegate _ScrollViewer_GetScrollableHeight;
    public static float ScrollViewer_GetScrollableHeight(HandleRef jarg1)
    {
        float ret = _ScrollViewer_GetScrollableHeight(jarg1);

        return ret;
    }

    public delegate float ScrollViewer_GetScrollableWidthDelegate(HandleRef jarg1);
    public static ScrollViewer_GetScrollableWidthDelegate _ScrollViewer_GetScrollableWidth;
    public static float ScrollViewer_GetScrollableWidth(HandleRef jarg1)
    {
        float ret = _ScrollViewer_GetScrollableWidth(jarg1);

        return ret;
    }

    public delegate float ScrollViewer_GetVerticalOffsetDelegate(HandleRef jarg1);
    public static ScrollViewer_GetVerticalOffsetDelegate _ScrollViewer_GetVerticalOffset;
    public static float ScrollViewer_GetVerticalOffset(HandleRef jarg1)
    {
        float ret = _ScrollViewer_GetVerticalOffset(jarg1);

        return ret;
    }

    public delegate float ScrollViewer_GetViewportHeightDelegate(HandleRef jarg1);
    public static ScrollViewer_GetViewportHeightDelegate _ScrollViewer_GetViewportHeight;
    public static float ScrollViewer_GetViewportHeight(HandleRef jarg1)
    {
        float ret = _ScrollViewer_GetViewportHeight(jarg1);

        return ret;
    }

    public delegate float ScrollViewer_GetViewportWidthDelegate(HandleRef jarg1);
    public static ScrollViewer_GetViewportWidthDelegate _ScrollViewer_GetViewportWidth;
    public static float ScrollViewer_GetViewportWidth(HandleRef jarg1)
    {
        float ret = _ScrollViewer_GetViewportWidth(jarg1);

        return ret;
    }

    public delegate IntPtr ScrollViewer_GetScrollInfoDelegate(HandleRef jarg1);
    public static ScrollViewer_GetScrollInfoDelegate _ScrollViewer_GetScrollInfo;
    public static IntPtr ScrollViewer_GetScrollInfo(HandleRef jarg1)
    {
        IntPtr ret = _ScrollViewer_GetScrollInfo(jarg1);

        return ret;
    }

    public delegate void ScrollViewer_SetScrollInfoDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ScrollViewer_SetScrollInfoDelegate _ScrollViewer_SetScrollInfo;
    public static void ScrollViewer_SetScrollInfo(HandleRef jarg1, HandleRef jarg2)
    {
        _ScrollViewer_SetScrollInfo(jarg1, jarg2);
    }

    public delegate void ScrollViewer_InvalidateScrollInfoDelegate(HandleRef jarg1);
    public static ScrollViewer_InvalidateScrollInfoDelegate _ScrollViewer_InvalidateScrollInfo;
    public static void ScrollViewer_InvalidateScrollInfo(HandleRef jarg1)
    {
        _ScrollViewer_InvalidateScrollInfo(jarg1);
    }

    public delegate void ScrollViewer_ScrollToHorizontalOffsetDelegate(HandleRef jarg1, float jarg2);
    public static ScrollViewer_ScrollToHorizontalOffsetDelegate _ScrollViewer_ScrollToHorizontalOffset;
    public static void ScrollViewer_ScrollToHorizontalOffset(HandleRef jarg1, float jarg2)
    {
        _ScrollViewer_ScrollToHorizontalOffset(jarg1, jarg2);
    }

    public delegate void ScrollViewer_ScrollToVerticalOffsetDelegate(HandleRef jarg1, float jarg2);
    public static ScrollViewer_ScrollToVerticalOffsetDelegate _ScrollViewer_ScrollToVerticalOffset;
    public static void ScrollViewer_ScrollToVerticalOffset(HandleRef jarg1, float jarg2)
    {
        _ScrollViewer_ScrollToVerticalOffset(jarg1, jarg2);
    }

    public delegate IntPtr new_SeparatorDelegate();
    public static new_SeparatorDelegate _new_Separator;
    public static IntPtr new_Separator()
    {
        IntPtr ret = _new_Separator();

        return ret;
    }

    public delegate void delete_SeparatorDelegate(HandleRef jarg1);
    public static delete_SeparatorDelegate _delete_Separator;
    public static void delete_Separator(HandleRef jarg1)
    {
        _delete_Separator(jarg1);
    }

    public delegate IntPtr new_SetterDelegate();
    public static new_SetterDelegate _new_Setter;
    public static IntPtr new_Setter()
    {
        IntPtr ret = _new_Setter();

        return ret;
    }

    public delegate IntPtr Setter_GetTargetNameDelegate(HandleRef jarg1);
    public static Setter_GetTargetNameDelegate _Setter_GetTargetName;
    public static IntPtr Setter_GetTargetName(HandleRef jarg1)
    {
        IntPtr ret = _Setter_GetTargetName(jarg1);

        return ret;
    }

    public delegate void Setter_SetTargetNameDelegate(HandleRef jarg1, IntPtr jarg2);
    public static Setter_SetTargetNameDelegate _Setter_SetTargetName;
    public static void Setter_SetTargetName(HandleRef jarg1, IntPtr jarg2)
    {
        _Setter_SetTargetName(jarg1, jarg2);
    }

    public delegate IntPtr Setter_GetPropertyDelegate(HandleRef jarg1);
    public static Setter_GetPropertyDelegate _Setter_GetProperty;
    public static IntPtr Setter_GetProperty(HandleRef jarg1)
    {
        IntPtr ret = _Setter_GetProperty(jarg1);

        return ret;
    }

    public delegate void Setter_SetPropertyDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Setter_SetPropertyDelegate _Setter_SetProperty;
    public static void Setter_SetProperty(HandleRef jarg1, HandleRef jarg2)
    {
        _Setter_SetProperty(jarg1, jarg2);
    }

    public delegate IntPtr Setter_GetValueDelegate(HandleRef jarg1);
    public static Setter_GetValueDelegate _Setter_GetValue;
    public static IntPtr Setter_GetValue(HandleRef jarg1)
    {
        IntPtr ret = _Setter_GetValue(jarg1);

        return ret;
    }

    public delegate void Setter_SetValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Setter_SetValueDelegate _Setter_SetValue;
    public static void Setter_SetValue(HandleRef jarg1, HandleRef jarg2)
    {
        _Setter_SetValue(jarg1, jarg2);
    }

    public delegate void delete_SetterDelegate(HandleRef jarg1);
    public static delete_SetterDelegate _delete_Setter;
    public static void delete_Setter(HandleRef jarg1)
    {
        _delete_Setter(jarg1);
    }

    public delegate void SizeChangedInfo_newSize_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static SizeChangedInfo_newSize_setDelegate _SizeChangedInfo_newSize_set;
    public static void SizeChangedInfo_newSize_set(HandleRef jarg1, HandleRef jarg2)
    {
        _SizeChangedInfo_newSize_set(jarg1, jarg2);
    }

    public delegate IntPtr SizeChangedInfo_newSize_getDelegate(HandleRef jarg1);
    public static SizeChangedInfo_newSize_getDelegate _SizeChangedInfo_newSize_get;
    public static IntPtr SizeChangedInfo_newSize_get(HandleRef jarg1)
    {
        IntPtr ret = _SizeChangedInfo_newSize_get(jarg1);

        return ret;
    }

    public delegate void SizeChangedInfo_previousSize_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static SizeChangedInfo_previousSize_setDelegate _SizeChangedInfo_previousSize_set;
    public static void SizeChangedInfo_previousSize_set(HandleRef jarg1, HandleRef jarg2)
    {
        _SizeChangedInfo_previousSize_set(jarg1, jarg2);
    }

    public delegate IntPtr SizeChangedInfo_previousSize_getDelegate(HandleRef jarg1);
    public static SizeChangedInfo_previousSize_getDelegate _SizeChangedInfo_previousSize_get;
    public static IntPtr SizeChangedInfo_previousSize_get(HandleRef jarg1)
    {
        IntPtr ret = _SizeChangedInfo_previousSize_get(jarg1);

        return ret;
    }

    public delegate void SizeChangedInfo_widthChanged_setDelegate(HandleRef jarg1, bool jarg2);
    public static SizeChangedInfo_widthChanged_setDelegate _SizeChangedInfo_widthChanged_set;
    public static void SizeChangedInfo_widthChanged_set(HandleRef jarg1, bool jarg2)
    {
        _SizeChangedInfo_widthChanged_set(jarg1, jarg2);
    }

    public delegate bool SizeChangedInfo_widthChanged_getDelegate(HandleRef jarg1);
    public static SizeChangedInfo_widthChanged_getDelegate _SizeChangedInfo_widthChanged_get;
    public static bool SizeChangedInfo_widthChanged_get(HandleRef jarg1)
    {
        bool ret = _SizeChangedInfo_widthChanged_get(jarg1);

        return ret;
    }

    public delegate void SizeChangedInfo_heightChanged_setDelegate(HandleRef jarg1, bool jarg2);
    public static SizeChangedInfo_heightChanged_setDelegate _SizeChangedInfo_heightChanged_set;
    public static void SizeChangedInfo_heightChanged_set(HandleRef jarg1, bool jarg2)
    {
        _SizeChangedInfo_heightChanged_set(jarg1, jarg2);
    }

    public delegate bool SizeChangedInfo_heightChanged_getDelegate(HandleRef jarg1);
    public static SizeChangedInfo_heightChanged_getDelegate _SizeChangedInfo_heightChanged_get;
    public static bool SizeChangedInfo_heightChanged_get(HandleRef jarg1)
    {
        bool ret = _SizeChangedInfo_heightChanged_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_SizeChangedInfoDelegate();
    public static new_SizeChangedInfoDelegate _new_SizeChangedInfo;
    public static IntPtr new_SizeChangedInfo()
    {
        IntPtr ret = _new_SizeChangedInfo();

        return ret;
    }

    public delegate void delete_SizeChangedInfoDelegate(HandleRef jarg1);
    public static delete_SizeChangedInfoDelegate _delete_SizeChangedInfo;
    public static void delete_SizeChangedInfo(HandleRef jarg1)
    {
        _delete_SizeChangedInfo(jarg1);
    }

    public delegate void SizeChangedEventArgs_sizeChangedInfo_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static SizeChangedEventArgs_sizeChangedInfo_setDelegate _SizeChangedEventArgs_sizeChangedInfo_set;
    public static void SizeChangedEventArgs_sizeChangedInfo_set(HandleRef jarg1, HandleRef jarg2)
    {
        _SizeChangedEventArgs_sizeChangedInfo_set(jarg1, jarg2);
    }

    public delegate IntPtr SizeChangedEventArgs_sizeChangedInfo_getDelegate(HandleRef jarg1);
    public static SizeChangedEventArgs_sizeChangedInfo_getDelegate _SizeChangedEventArgs_sizeChangedInfo_get;
    public static IntPtr SizeChangedEventArgs_sizeChangedInfo_get(HandleRef jarg1)
    {
        IntPtr ret = _SizeChangedEventArgs_sizeChangedInfo_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_SizeChangedEventArgsDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static new_SizeChangedEventArgsDelegate _new_SizeChangedEventArgs;
    public static IntPtr new_SizeChangedEventArgs(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        IntPtr ret = _new_SizeChangedEventArgs(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void delete_SizeChangedEventArgsDelegate(HandleRef jarg1);
    public static delete_SizeChangedEventArgsDelegate _delete_SizeChangedEventArgs;
    public static void delete_SizeChangedEventArgs(HandleRef jarg1)
    {
        _delete_SizeChangedEventArgs(jarg1);
    }

    public delegate IntPtr new_SkewTransformDelegate();
    public static new_SkewTransformDelegate _new_SkewTransform;
    public static IntPtr new_SkewTransform()
    {
        IntPtr ret = _new_SkewTransform();

        return ret;
    }

    public delegate float SkewTransform_GetAngleXDelegate(HandleRef jarg1);
    public static SkewTransform_GetAngleXDelegate _SkewTransform_GetAngleX;
    public static float SkewTransform_GetAngleX(HandleRef jarg1)
    {
        float ret = _SkewTransform_GetAngleX(jarg1);

        return ret;
    }

    public delegate void SkewTransform_SetAngleXDelegate(HandleRef jarg1, float jarg2);
    public static SkewTransform_SetAngleXDelegate _SkewTransform_SetAngleX;
    public static void SkewTransform_SetAngleX(HandleRef jarg1, float jarg2)
    {
        _SkewTransform_SetAngleX(jarg1, jarg2);
    }

    public delegate float SkewTransform_GetAngleYDelegate(HandleRef jarg1);
    public static SkewTransform_GetAngleYDelegate _SkewTransform_GetAngleY;
    public static float SkewTransform_GetAngleY(HandleRef jarg1)
    {
        float ret = _SkewTransform_GetAngleY(jarg1);

        return ret;
    }

    public delegate void SkewTransform_SetAngleYDelegate(HandleRef jarg1, float jarg2);
    public static SkewTransform_SetAngleYDelegate _SkewTransform_SetAngleY;
    public static void SkewTransform_SetAngleY(HandleRef jarg1, float jarg2)
    {
        _SkewTransform_SetAngleY(jarg1, jarg2);
    }

    public delegate float SkewTransform_GetCenterXDelegate(HandleRef jarg1);
    public static SkewTransform_GetCenterXDelegate _SkewTransform_GetCenterX;
    public static float SkewTransform_GetCenterX(HandleRef jarg1)
    {
        float ret = _SkewTransform_GetCenterX(jarg1);

        return ret;
    }

    public delegate void SkewTransform_SetCenterXDelegate(HandleRef jarg1, float jarg2);
    public static SkewTransform_SetCenterXDelegate _SkewTransform_SetCenterX;
    public static void SkewTransform_SetCenterX(HandleRef jarg1, float jarg2)
    {
        _SkewTransform_SetCenterX(jarg1, jarg2);
    }

    public delegate float SkewTransform_GetCenterYDelegate(HandleRef jarg1);
    public static SkewTransform_GetCenterYDelegate _SkewTransform_GetCenterY;
    public static float SkewTransform_GetCenterY(HandleRef jarg1)
    {
        float ret = _SkewTransform_GetCenterY(jarg1);

        return ret;
    }

    public delegate void SkewTransform_SetCenterYDelegate(HandleRef jarg1, float jarg2);
    public static SkewTransform_SetCenterYDelegate _SkewTransform_SetCenterY;
    public static void SkewTransform_SetCenterY(HandleRef jarg1, float jarg2)
    {
        _SkewTransform_SetCenterY(jarg1, jarg2);
    }

    public delegate IntPtr SkewTransform_GetTransformDelegate(HandleRef jarg1);
    public static SkewTransform_GetTransformDelegate _SkewTransform_GetTransform;
    public static IntPtr SkewTransform_GetTransform(HandleRef jarg1)
    {
        IntPtr ret = _SkewTransform_GetTransform(jarg1);

        return ret;
    }

    public delegate void SkewTransform_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static SkewTransform_CreateRenderProxyDelegate _SkewTransform_CreateRenderProxy;
    public static void SkewTransform_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _SkewTransform_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void SkewTransform_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static SkewTransform_UpdateRenderProxyDelegate _SkewTransform_UpdateRenderProxy;
    public static void SkewTransform_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _SkewTransform_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void SkewTransform_UnregisterRendererDelegate(HandleRef jarg1, HandleRef jarg2);
    public static SkewTransform_UnregisterRendererDelegate _SkewTransform_UnregisterRenderer;
    public static void SkewTransform_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2)
    {
        _SkewTransform_UnregisterRenderer(jarg1, jarg2);
    }

    public delegate void delete_SkewTransformDelegate(HandleRef jarg1);
    public static delete_SkewTransformDelegate _delete_SkewTransform;
    public static void delete_SkewTransform(HandleRef jarg1)
    {
        _delete_SkewTransform(jarg1);
    }

    public delegate IntPtr new_SliderDelegate();
    public static new_SliderDelegate _new_Slider;
    public static IntPtr new_Slider()
    {
        IntPtr ret = _new_Slider();

        return ret;
    }

    public delegate void delete_SliderDelegate(HandleRef jarg1);
    public static delete_SliderDelegate _delete_Slider;
    public static void delete_Slider(HandleRef jarg1)
    {
        _delete_Slider(jarg1);
    }

    public delegate int Slider_GetAutoToolTipPlacementDelegate(HandleRef jarg1);
    public static Slider_GetAutoToolTipPlacementDelegate _Slider_GetAutoToolTipPlacement;
    public static int Slider_GetAutoToolTipPlacement(HandleRef jarg1)
    {
        int ret = _Slider_GetAutoToolTipPlacement(jarg1);

        return ret;
    }

    public delegate void Slider_SetAutoToolTipPlacementDelegate(HandleRef jarg1, int jarg2);
    public static Slider_SetAutoToolTipPlacementDelegate _Slider_SetAutoToolTipPlacement;
    public static void Slider_SetAutoToolTipPlacement(HandleRef jarg1, int jarg2)
    {
        _Slider_SetAutoToolTipPlacement(jarg1, jarg2);
    }

    public delegate int Slider_GetAutoToolTipPrecisionDelegate(HandleRef jarg1);
    public static Slider_GetAutoToolTipPrecisionDelegate _Slider_GetAutoToolTipPrecision;
    public static int Slider_GetAutoToolTipPrecision(HandleRef jarg1)
    {
        int ret = _Slider_GetAutoToolTipPrecision(jarg1);

        return ret;
    }

    public delegate void Slider_SetAutoToolTipPrecisionDelegate(HandleRef jarg1, int jarg2);
    public static Slider_SetAutoToolTipPrecisionDelegate _Slider_SetAutoToolTipPrecision;
    public static void Slider_SetAutoToolTipPrecision(HandleRef jarg1, int jarg2)
    {
        _Slider_SetAutoToolTipPrecision(jarg1, jarg2);
    }

    public delegate int Slider_GetDelayDelegate(HandleRef jarg1);
    public static Slider_GetDelayDelegate _Slider_GetDelay;
    public static int Slider_GetDelay(HandleRef jarg1)
    {
        int ret = _Slider_GetDelay(jarg1);

        return ret;
    }

    public delegate void Slider_SetDelayDelegate(HandleRef jarg1, int jarg2);
    public static Slider_SetDelayDelegate _Slider_SetDelay;
    public static void Slider_SetDelay(HandleRef jarg1, int jarg2)
    {
        _Slider_SetDelay(jarg1, jarg2);
    }

    public delegate int Slider_GetIntervalDelegate(HandleRef jarg1);
    public static Slider_GetIntervalDelegate _Slider_GetInterval;
    public static int Slider_GetInterval(HandleRef jarg1)
    {
        int ret = _Slider_GetInterval(jarg1);

        return ret;
    }

    public delegate void Slider_SetIntervalDelegate(HandleRef jarg1, int jarg2);
    public static Slider_SetIntervalDelegate _Slider_SetInterval;
    public static void Slider_SetInterval(HandleRef jarg1, int jarg2)
    {
        _Slider_SetInterval(jarg1, jarg2);
    }

    public delegate bool Slider_GetIsDirectionReversedDelegate(HandleRef jarg1);
    public static Slider_GetIsDirectionReversedDelegate _Slider_GetIsDirectionReversed;
    public static bool Slider_GetIsDirectionReversed(HandleRef jarg1)
    {
        bool ret = _Slider_GetIsDirectionReversed(jarg1);

        return ret;
    }

    public delegate void Slider_SetIsDirectionReversedDelegate(HandleRef jarg1, bool jarg2);
    public static Slider_SetIsDirectionReversedDelegate _Slider_SetIsDirectionReversed;
    public static void Slider_SetIsDirectionReversed(HandleRef jarg1, bool jarg2)
    {
        _Slider_SetIsDirectionReversed(jarg1, jarg2);
    }

    public delegate bool Slider_GetIsMoveToPointEnabledDelegate(HandleRef jarg1);
    public static Slider_GetIsMoveToPointEnabledDelegate _Slider_GetIsMoveToPointEnabled;
    public static bool Slider_GetIsMoveToPointEnabled(HandleRef jarg1)
    {
        bool ret = _Slider_GetIsMoveToPointEnabled(jarg1);

        return ret;
    }

    public delegate void Slider_SetIsMoveToPointEnabledDelegate(HandleRef jarg1, bool jarg2);
    public static Slider_SetIsMoveToPointEnabledDelegate _Slider_SetIsMoveToPointEnabled;
    public static void Slider_SetIsMoveToPointEnabled(HandleRef jarg1, bool jarg2)
    {
        _Slider_SetIsMoveToPointEnabled(jarg1, jarg2);
    }

    public delegate bool Slider_GetIsSelectionRangeEnabledDelegate(HandleRef jarg1);
    public static Slider_GetIsSelectionRangeEnabledDelegate _Slider_GetIsSelectionRangeEnabled;
    public static bool Slider_GetIsSelectionRangeEnabled(HandleRef jarg1)
    {
        bool ret = _Slider_GetIsSelectionRangeEnabled(jarg1);

        return ret;
    }

    public delegate void Slider_SetIsSelectionRangeEnabledDelegate(HandleRef jarg1, bool jarg2);
    public static Slider_SetIsSelectionRangeEnabledDelegate _Slider_SetIsSelectionRangeEnabled;
    public static void Slider_SetIsSelectionRangeEnabled(HandleRef jarg1, bool jarg2)
    {
        _Slider_SetIsSelectionRangeEnabled(jarg1, jarg2);
    }

    public delegate bool Slider_GetIsSnapToTickEnabledDelegate(HandleRef jarg1);
    public static Slider_GetIsSnapToTickEnabledDelegate _Slider_GetIsSnapToTickEnabled;
    public static bool Slider_GetIsSnapToTickEnabled(HandleRef jarg1)
    {
        bool ret = _Slider_GetIsSnapToTickEnabled(jarg1);

        return ret;
    }

    public delegate void Slider_SetIsSnapToTickEnabledDelegate(HandleRef jarg1, bool jarg2);
    public static Slider_SetIsSnapToTickEnabledDelegate _Slider_SetIsSnapToTickEnabled;
    public static void Slider_SetIsSnapToTickEnabled(HandleRef jarg1, bool jarg2)
    {
        _Slider_SetIsSnapToTickEnabled(jarg1, jarg2);
    }

    public delegate int Slider_GetOrientationDelegate(HandleRef jarg1);
    public static Slider_GetOrientationDelegate _Slider_GetOrientation;
    public static int Slider_GetOrientation(HandleRef jarg1)
    {
        int ret = _Slider_GetOrientation(jarg1);

        return ret;
    }

    public delegate void Slider_SetOrientationDelegate(HandleRef jarg1, int jarg2);
    public static Slider_SetOrientationDelegate _Slider_SetOrientation;
    public static void Slider_SetOrientation(HandleRef jarg1, int jarg2)
    {
        _Slider_SetOrientation(jarg1, jarg2);
    }

    public delegate float Slider_GetSelectionEndDelegate(HandleRef jarg1);
    public static Slider_GetSelectionEndDelegate _Slider_GetSelectionEnd;
    public static float Slider_GetSelectionEnd(HandleRef jarg1)
    {
        float ret = _Slider_GetSelectionEnd(jarg1);

        return ret;
    }

    public delegate void Slider_SetSelectionEndDelegate(HandleRef jarg1, float jarg2);
    public static Slider_SetSelectionEndDelegate _Slider_SetSelectionEnd;
    public static void Slider_SetSelectionEnd(HandleRef jarg1, float jarg2)
    {
        _Slider_SetSelectionEnd(jarg1, jarg2);
    }

    public delegate float Slider_GetSelectionStartDelegate(HandleRef jarg1);
    public static Slider_GetSelectionStartDelegate _Slider_GetSelectionStart;
    public static float Slider_GetSelectionStart(HandleRef jarg1)
    {
        float ret = _Slider_GetSelectionStart(jarg1);

        return ret;
    }

    public delegate void Slider_SetSelectionStartDelegate(HandleRef jarg1, float jarg2);
    public static Slider_SetSelectionStartDelegate _Slider_SetSelectionStart;
    public static void Slider_SetSelectionStart(HandleRef jarg1, float jarg2)
    {
        _Slider_SetSelectionStart(jarg1, jarg2);
    }

    public delegate float Slider_GetTickFrequencyDelegate(HandleRef jarg1);
    public static Slider_GetTickFrequencyDelegate _Slider_GetTickFrequency;
    public static float Slider_GetTickFrequency(HandleRef jarg1)
    {
        float ret = _Slider_GetTickFrequency(jarg1);

        return ret;
    }

    public delegate void Slider_SetTickFrequencyDelegate(HandleRef jarg1, float jarg2);
    public static Slider_SetTickFrequencyDelegate _Slider_SetTickFrequency;
    public static void Slider_SetTickFrequency(HandleRef jarg1, float jarg2)
    {
        _Slider_SetTickFrequency(jarg1, jarg2);
    }

    public delegate int Slider_GetTickPlacementDelegate(HandleRef jarg1);
    public static Slider_GetTickPlacementDelegate _Slider_GetTickPlacement;
    public static int Slider_GetTickPlacement(HandleRef jarg1)
    {
        int ret = _Slider_GetTickPlacement(jarg1);

        return ret;
    }

    public delegate void Slider_SetTickPlacementDelegate(HandleRef jarg1, int jarg2);
    public static Slider_SetTickPlacementDelegate _Slider_SetTickPlacement;
    public static void Slider_SetTickPlacement(HandleRef jarg1, int jarg2)
    {
        _Slider_SetTickPlacement(jarg1, jarg2);
    }

    public delegate IntPtr Slider_GetTicksDelegate(HandleRef jarg1);
    public static Slider_GetTicksDelegate _Slider_GetTicks;
    public static IntPtr Slider_GetTicks(HandleRef jarg1)
    {
        IntPtr ret = _Slider_GetTicks(jarg1);

        return ret;
    }

    public delegate void Slider_SetTicksDelegate(HandleRef jarg1, IntPtr jarg2);
    public static Slider_SetTicksDelegate _Slider_SetTicks;
    public static void Slider_SetTicks(HandleRef jarg1, IntPtr jarg2)
    {
        _Slider_SetTicks(jarg1, jarg2);
    }

    public delegate IntPtr Slider_GetTrackDelegate(HandleRef jarg1);
    public static Slider_GetTrackDelegate _Slider_GetTrack;
    public static IntPtr Slider_GetTrack(HandleRef jarg1)
    {
        IntPtr ret = _Slider_GetTrack(jarg1);

        return ret;
    }

    public delegate void Slider_DecreaseLargeCommand_setDelegate(HandleRef jarg1);
    public static Slider_DecreaseLargeCommand_setDelegate _Slider_DecreaseLargeCommand_set;
    public static void Slider_DecreaseLargeCommand_set(HandleRef jarg1)
    {
        _Slider_DecreaseLargeCommand_set(jarg1);
    }

    public delegate IntPtr Slider_DecreaseLargeCommand_getDelegate();
    public static Slider_DecreaseLargeCommand_getDelegate _Slider_DecreaseLargeCommand_get;
    public static IntPtr Slider_DecreaseLargeCommand_get()
    {
        IntPtr ret = _Slider_DecreaseLargeCommand_get();

        return ret;
    }

    public delegate void Slider_DecreaseSmallCommand_setDelegate(HandleRef jarg1);
    public static Slider_DecreaseSmallCommand_setDelegate _Slider_DecreaseSmallCommand_set;
    public static void Slider_DecreaseSmallCommand_set(HandleRef jarg1)
    {
        _Slider_DecreaseSmallCommand_set(jarg1);
    }

    public delegate IntPtr Slider_DecreaseSmallCommand_getDelegate();
    public static Slider_DecreaseSmallCommand_getDelegate _Slider_DecreaseSmallCommand_get;
    public static IntPtr Slider_DecreaseSmallCommand_get()
    {
        IntPtr ret = _Slider_DecreaseSmallCommand_get();

        return ret;
    }

    public delegate void Slider_IncreaseLargeCommand_setDelegate(HandleRef jarg1);
    public static Slider_IncreaseLargeCommand_setDelegate _Slider_IncreaseLargeCommand_set;
    public static void Slider_IncreaseLargeCommand_set(HandleRef jarg1)
    {
        _Slider_IncreaseLargeCommand_set(jarg1);
    }

    public delegate IntPtr Slider_IncreaseLargeCommand_getDelegate();
    public static Slider_IncreaseLargeCommand_getDelegate _Slider_IncreaseLargeCommand_get;
    public static IntPtr Slider_IncreaseLargeCommand_get()
    {
        IntPtr ret = _Slider_IncreaseLargeCommand_get();

        return ret;
    }

    public delegate void Slider_IncreaseSmallCommand_setDelegate(HandleRef jarg1);
    public static Slider_IncreaseSmallCommand_setDelegate _Slider_IncreaseSmallCommand_set;
    public static void Slider_IncreaseSmallCommand_set(HandleRef jarg1)
    {
        _Slider_IncreaseSmallCommand_set(jarg1);
    }

    public delegate IntPtr Slider_IncreaseSmallCommand_getDelegate();
    public static Slider_IncreaseSmallCommand_getDelegate _Slider_IncreaseSmallCommand_get;
    public static IntPtr Slider_IncreaseSmallCommand_get()
    {
        IntPtr ret = _Slider_IncreaseSmallCommand_get();

        return ret;
    }

    public delegate void Slider_MaximizeValueCommand_setDelegate(HandleRef jarg1);
    public static Slider_MaximizeValueCommand_setDelegate _Slider_MaximizeValueCommand_set;
    public static void Slider_MaximizeValueCommand_set(HandleRef jarg1)
    {
        _Slider_MaximizeValueCommand_set(jarg1);
    }

    public delegate IntPtr Slider_MaximizeValueCommand_getDelegate();
    public static Slider_MaximizeValueCommand_getDelegate _Slider_MaximizeValueCommand_get;
    public static IntPtr Slider_MaximizeValueCommand_get()
    {
        IntPtr ret = _Slider_MaximizeValueCommand_get();

        return ret;
    }

    public delegate void Slider_MinimizeValueCommand_setDelegate(HandleRef jarg1);
    public static Slider_MinimizeValueCommand_setDelegate _Slider_MinimizeValueCommand_set;
    public static void Slider_MinimizeValueCommand_set(HandleRef jarg1)
    {
        _Slider_MinimizeValueCommand_set(jarg1);
    }

    public delegate IntPtr Slider_MinimizeValueCommand_getDelegate();
    public static Slider_MinimizeValueCommand_getDelegate _Slider_MinimizeValueCommand_get;
    public static IntPtr Slider_MinimizeValueCommand_get()
    {
        IntPtr ret = _Slider_MinimizeValueCommand_get();

        return ret;
    }

    public delegate IntPtr new_SolidColorBrush__SWIG_0Delegate();
    public static new_SolidColorBrush__SWIG_0Delegate _new_SolidColorBrush__SWIG_0;
    public static IntPtr new_SolidColorBrush__SWIG_0()
    {
        IntPtr ret = _new_SolidColorBrush__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_SolidColorBrush__SWIG_1Delegate(HandleRef jarg1);
    public static new_SolidColorBrush__SWIG_1Delegate _new_SolidColorBrush__SWIG_1;
    public static IntPtr new_SolidColorBrush__SWIG_1(HandleRef jarg1)
    {
        IntPtr ret = _new_SolidColorBrush__SWIG_1(jarg1);

        return ret;
    }

    public delegate IntPtr SolidColorBrush_GetColorDelegate(HandleRef jarg1);
    public static SolidColorBrush_GetColorDelegate _SolidColorBrush_GetColor;
    public static IntPtr SolidColorBrush_GetColor(HandleRef jarg1)
    {
        IntPtr ret = _SolidColorBrush_GetColor(jarg1);

        return ret;
    }

    public delegate void SolidColorBrush_SetColorDelegate(HandleRef jarg1, HandleRef jarg2);
    public static SolidColorBrush_SetColorDelegate _SolidColorBrush_SetColor;
    public static void SolidColorBrush_SetColor(HandleRef jarg1, HandleRef jarg2)
    {
        _SolidColorBrush_SetColor(jarg1, jarg2);
    }

    public delegate bool SolidColorBrush_TryParseDelegate(string jarg1, HandleRef jarg2);
    public static SolidColorBrush_TryParseDelegate _SolidColorBrush_TryParse;
    public static bool SolidColorBrush_TryParse(string jarg1, HandleRef jarg2)
    {
        bool ret = _SolidColorBrush_TryParse(jarg1, jarg2);

        return ret;
    }

    public delegate void SolidColorBrush_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static SolidColorBrush_CreateRenderProxyDelegate _SolidColorBrush_CreateRenderProxy;
    public static void SolidColorBrush_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _SolidColorBrush_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void SolidColorBrush_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static SolidColorBrush_UpdateRenderProxyDelegate _SolidColorBrush_UpdateRenderProxy;
    public static void SolidColorBrush_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _SolidColorBrush_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void delete_SolidColorBrushDelegate(HandleRef jarg1);
    public static delete_SolidColorBrushDelegate _delete_SolidColorBrush;
    public static void delete_SolidColorBrush(HandleRef jarg1)
    {
        _delete_SolidColorBrush(jarg1);
    }

    public delegate void SortDescription_direction_setDelegate(HandleRef jarg1, int jarg2);
    public static SortDescription_direction_setDelegate _SortDescription_direction_set;
    public static void SortDescription_direction_set(HandleRef jarg1, int jarg2)
    {
        _SortDescription_direction_set(jarg1, jarg2);
    }

    public delegate int SortDescription_direction_getDelegate(HandleRef jarg1);
    public static SortDescription_direction_getDelegate _SortDescription_direction_get;
    public static int SortDescription_direction_get(HandleRef jarg1)
    {
        int ret = _SortDescription_direction_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_SortDescriptionDelegate();
    public static new_SortDescriptionDelegate _new_SortDescription;
    public static IntPtr new_SortDescription()
    {
        IntPtr ret = _new_SortDescription();

        return ret;
    }

    public delegate void delete_SortDescriptionDelegate(HandleRef jarg1);
    public static delete_SortDescriptionDelegate _delete_SortDescription;
    public static void delete_SortDescription(HandleRef jarg1)
    {
        _delete_SortDescription(jarg1);
    }

    public delegate IntPtr new_StackPanelDelegate();
    public static new_StackPanelDelegate _new_StackPanel;
    public static IntPtr new_StackPanel()
    {
        IntPtr ret = _new_StackPanel();

        return ret;
    }

    public delegate int StackPanel_GetOrientationDelegate(HandleRef jarg1);
    public static StackPanel_GetOrientationDelegate _StackPanel_GetOrientation;
    public static int StackPanel_GetOrientation(HandleRef jarg1)
    {
        int ret = _StackPanel_GetOrientation(jarg1);

        return ret;
    }

    public delegate void StackPanel_SetOrientationDelegate(HandleRef jarg1, int jarg2);
    public static StackPanel_SetOrientationDelegate _StackPanel_SetOrientation;
    public static void StackPanel_SetOrientation(HandleRef jarg1, int jarg2)
    {
        _StackPanel_SetOrientation(jarg1, jarg2);
    }

    public delegate void delete_StackPanelDelegate(HandleRef jarg1);
    public static delete_StackPanelDelegate _delete_StackPanel;
    public static void delete_StackPanel(HandleRef jarg1)
    {
        _delete_StackPanel(jarg1);
    }

    public delegate IntPtr new_StatusBarDelegate();
    public static new_StatusBarDelegate _new_StatusBar;
    public static IntPtr new_StatusBar()
    {
        IntPtr ret = _new_StatusBar();

        return ret;
    }

    public delegate void delete_StatusBarDelegate(HandleRef jarg1);
    public static delete_StatusBarDelegate _delete_StatusBar;
    public static void delete_StatusBar(HandleRef jarg1)
    {
        _delete_StatusBar(jarg1);
    }

    public delegate void StatusBar_SeparatorStyleKey_setDelegate(HandleRef jarg1);
    public static StatusBar_SeparatorStyleKey_setDelegate _StatusBar_SeparatorStyleKey_set;
    public static void StatusBar_SeparatorStyleKey_set(HandleRef jarg1)
    {
        _StatusBar_SeparatorStyleKey_set(jarg1);
    }

    public delegate IntPtr StatusBar_SeparatorStyleKey_getDelegate();
    public static StatusBar_SeparatorStyleKey_getDelegate _StatusBar_SeparatorStyleKey_get;
    public static IntPtr StatusBar_SeparatorStyleKey_get()
    {
        IntPtr ret = _StatusBar_SeparatorStyleKey_get();

        return ret;
    }

    public delegate IntPtr new_StatusBarItemDelegate();
    public static new_StatusBarItemDelegate _new_StatusBarItem;
    public static IntPtr new_StatusBarItem()
    {
        IntPtr ret = _new_StatusBarItem();

        return ret;
    }

    public delegate void delete_StatusBarItemDelegate(HandleRef jarg1);
    public static delete_StatusBarItemDelegate _delete_StatusBarItem;
    public static void delete_StatusBarItem(HandleRef jarg1)
    {
        _delete_StatusBarItem(jarg1);
    }

    public delegate IntPtr new_StreamGeometry__SWIG_0Delegate(string jarg1);
    public static new_StreamGeometry__SWIG_0Delegate _new_StreamGeometry__SWIG_0;
    public static IntPtr new_StreamGeometry__SWIG_0(string jarg1)
    {
        IntPtr ret = _new_StreamGeometry__SWIG_0(jarg1);

        return ret;
    }

    public delegate IntPtr new_StreamGeometry__SWIG_1Delegate();
    public static new_StreamGeometry__SWIG_1Delegate _new_StreamGeometry__SWIG_1;
    public static IntPtr new_StreamGeometry__SWIG_1()
    {
        IntPtr ret = _new_StreamGeometry__SWIG_1();

        return ret;
    }

    public delegate void StreamGeometry_SetDataDelegate(HandleRef jarg1, string jarg2);
    public static StreamGeometry_SetDataDelegate _StreamGeometry_SetData;
    public static void StreamGeometry_SetData(HandleRef jarg1, string jarg2)
    {
        _StreamGeometry_SetData(jarg1, jarg2);
    }

    public delegate bool StreamGeometry_TrySetDataDelegate(HandleRef jarg1, string jarg2);
    public static StreamGeometry_TrySetDataDelegate _StreamGeometry_TrySetData;
    public static bool StreamGeometry_TrySetData(HandleRef jarg1, string jarg2)
    {
        bool ret = _StreamGeometry_TrySetData(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr StreamGeometry_GetDataDelegate(HandleRef jarg1);
    public static StreamGeometry_GetDataDelegate _StreamGeometry_GetData;
    public static IntPtr StreamGeometry_GetData(HandleRef jarg1)
    {
        IntPtr ret = _StreamGeometry_GetData(jarg1);

        return ret;
    }

    public delegate IntPtr StreamGeometry_Open__SWIG_0Delegate(HandleRef jarg1, int jarg2);
    public static StreamGeometry_Open__SWIG_0Delegate _StreamGeometry_Open__SWIG_0;
    public static IntPtr StreamGeometry_Open__SWIG_0(HandleRef jarg1, int jarg2)
    {
        IntPtr ret = _StreamGeometry_Open__SWIG_0(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr StreamGeometry_Open__SWIG_1Delegate(HandleRef jarg1);
    public static StreamGeometry_Open__SWIG_1Delegate _StreamGeometry_Open__SWIG_1;
    public static IntPtr StreamGeometry_Open__SWIG_1(HandleRef jarg1)
    {
        IntPtr ret = _StreamGeometry_Open__SWIG_1(jarg1);

        return ret;
    }

    public delegate void StreamGeometry_CloseDelegate(HandleRef jarg1);
    public static StreamGeometry_CloseDelegate _StreamGeometry_Close;
    public static void StreamGeometry_Close(HandleRef jarg1)
    {
        _StreamGeometry_Close(jarg1);
    }

    public delegate int StreamGeometry_GetFillRuleDelegate(HandleRef jarg1);
    public static StreamGeometry_GetFillRuleDelegate _StreamGeometry_GetFillRule;
    public static int StreamGeometry_GetFillRule(HandleRef jarg1)
    {
        int ret = _StreamGeometry_GetFillRule(jarg1);

        return ret;
    }

    public delegate void StreamGeometry_SetFillRuleDelegate(HandleRef jarg1, int jarg2);
    public static StreamGeometry_SetFillRuleDelegate _StreamGeometry_SetFillRule;
    public static void StreamGeometry_SetFillRule(HandleRef jarg1, int jarg2)
    {
        _StreamGeometry_SetFillRule(jarg1, jarg2);
    }

    public delegate bool StreamGeometry_IsEmptyDelegate(HandleRef jarg1);
    public static StreamGeometry_IsEmptyDelegate _StreamGeometry_IsEmpty;
    public static bool StreamGeometry_IsEmpty(HandleRef jarg1)
    {
        bool ret = _StreamGeometry_IsEmpty(jarg1);

        return ret;
    }

    public delegate void StreamGeometry_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static StreamGeometry_CreateRenderProxyDelegate _StreamGeometry_CreateRenderProxy;
    public static void StreamGeometry_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _StreamGeometry_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void StreamGeometry_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static StreamGeometry_UpdateRenderProxyDelegate _StreamGeometry_UpdateRenderProxy;
    public static void StreamGeometry_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _StreamGeometry_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void delete_StreamGeometryDelegate(HandleRef jarg1);
    public static delete_StreamGeometryDelegate _delete_StreamGeometry;
    public static void delete_StreamGeometry(HandleRef jarg1)
    {
        _delete_StreamGeometry(jarg1);
    }

    public delegate IntPtr new_StreamGeometryContextDelegate(HandleRef jarg1, int jarg2);
    public static new_StreamGeometryContextDelegate _new_StreamGeometryContext;
    public static IntPtr new_StreamGeometryContext(HandleRef jarg1, int jarg2)
    {
        IntPtr ret = _new_StreamGeometryContext(jarg1, jarg2);

        return ret;
    }

    public delegate void StreamGeometryContext_BeginFigureDelegate(HandleRef jarg1, HandleRef jarg2, bool jarg3);
    public static StreamGeometryContext_BeginFigureDelegate _StreamGeometryContext_BeginFigure;
    public static void StreamGeometryContext_BeginFigure(HandleRef jarg1, HandleRef jarg2, bool jarg3)
    {
        _StreamGeometryContext_BeginFigure(jarg1, jarg2, jarg3);
    }

    public delegate void StreamGeometryContext_LineToDelegate(HandleRef jarg1, HandleRef jarg2);
    public static StreamGeometryContext_LineToDelegate _StreamGeometryContext_LineTo;
    public static void StreamGeometryContext_LineTo(HandleRef jarg1, HandleRef jarg2)
    {
        _StreamGeometryContext_LineTo(jarg1, jarg2);
    }

    public delegate void StreamGeometryContext_CubicToDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static StreamGeometryContext_CubicToDelegate _StreamGeometryContext_CubicTo;
    public static void StreamGeometryContext_CubicTo(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        _StreamGeometryContext_CubicTo(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate void StreamGeometryContext_QuadraticToDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static StreamGeometryContext_QuadraticToDelegate _StreamGeometryContext_QuadraticTo;
    public static void StreamGeometryContext_QuadraticTo(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _StreamGeometryContext_QuadraticTo(jarg1, jarg2, jarg3);
    }

    public delegate void StreamGeometryContext_SmoothCubicToDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static StreamGeometryContext_SmoothCubicToDelegate _StreamGeometryContext_SmoothCubicTo;
    public static void StreamGeometryContext_SmoothCubicTo(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _StreamGeometryContext_SmoothCubicTo(jarg1, jarg2, jarg3);
    }

    public delegate void StreamGeometryContext_SmoothQuadraticToDelegate(HandleRef jarg1, HandleRef jarg2);
    public static StreamGeometryContext_SmoothQuadraticToDelegate _StreamGeometryContext_SmoothQuadraticTo;
    public static void StreamGeometryContext_SmoothQuadraticTo(HandleRef jarg1, HandleRef jarg2)
    {
        _StreamGeometryContext_SmoothQuadraticTo(jarg1, jarg2);
    }

    public delegate void StreamGeometryContext_ArcToDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4, bool jarg5, bool jarg6);
    public static StreamGeometryContext_ArcToDelegate _StreamGeometryContext_ArcTo;
    public static void StreamGeometryContext_ArcTo(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, float jarg4, bool jarg5, bool jarg6)
    {
        _StreamGeometryContext_ArcTo(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6);
    }

    public delegate void delete_StreamGeometryContextDelegate(HandleRef jarg1);
    public static delete_StreamGeometryContextDelegate _delete_StreamGeometryContext;
    public static void delete_StreamGeometryContext(HandleRef jarg1)
    {
        _delete_StreamGeometryContext(jarg1);
    }

    public delegate IntPtr new_TabControlDelegate();
    public static new_TabControlDelegate _new_TabControl;
    public static IntPtr new_TabControl()
    {
        IntPtr ret = _new_TabControl();

        return ret;
    }

    public delegate void delete_TabControlDelegate(HandleRef jarg1);
    public static delete_TabControlDelegate _delete_TabControl;
    public static void delete_TabControl(HandleRef jarg1)
    {
        _delete_TabControl(jarg1);
    }

    public delegate IntPtr TabControl_GetContentTemplateDelegate(HandleRef jarg1);
    public static TabControl_GetContentTemplateDelegate _TabControl_GetContentTemplate;
    public static IntPtr TabControl_GetContentTemplate(HandleRef jarg1)
    {
        IntPtr ret = _TabControl_GetContentTemplate(jarg1);

        return ret;
    }

    public delegate void TabControl_SetContentTemplateDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TabControl_SetContentTemplateDelegate _TabControl_SetContentTemplate;
    public static void TabControl_SetContentTemplate(HandleRef jarg1, HandleRef jarg2)
    {
        _TabControl_SetContentTemplate(jarg1, jarg2);
    }

    public delegate IntPtr TabControl_GetContentTemplateSelectorDelegate(HandleRef jarg1);
    public static TabControl_GetContentTemplateSelectorDelegate _TabControl_GetContentTemplateSelector;
    public static IntPtr TabControl_GetContentTemplateSelector(HandleRef jarg1)
    {
        IntPtr ret = _TabControl_GetContentTemplateSelector(jarg1);

        return ret;
    }

    public delegate void TabControl_SetContentTemplateSelectorDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TabControl_SetContentTemplateSelectorDelegate _TabControl_SetContentTemplateSelector;
    public static void TabControl_SetContentTemplateSelector(HandleRef jarg1, HandleRef jarg2)
    {
        _TabControl_SetContentTemplateSelector(jarg1, jarg2);
    }

    public delegate IntPtr TabControl_GetSelectedContentDelegate(HandleRef jarg1);
    public static TabControl_GetSelectedContentDelegate _TabControl_GetSelectedContent;
    public static IntPtr TabControl_GetSelectedContent(HandleRef jarg1)
    {
        IntPtr ret = _TabControl_GetSelectedContent(jarg1);

        return ret;
    }

    public delegate IntPtr TabControl_GetSelectedContentTemplateDelegate(HandleRef jarg1);
    public static TabControl_GetSelectedContentTemplateDelegate _TabControl_GetSelectedContentTemplate;
    public static IntPtr TabControl_GetSelectedContentTemplate(HandleRef jarg1)
    {
        IntPtr ret = _TabControl_GetSelectedContentTemplate(jarg1);

        return ret;
    }

    public delegate IntPtr TabControl_GetSelectedContentTemplateSelectorDelegate(HandleRef jarg1);
    public static TabControl_GetSelectedContentTemplateSelectorDelegate _TabControl_GetSelectedContentTemplateSelector;
    public static IntPtr TabControl_GetSelectedContentTemplateSelector(HandleRef jarg1)
    {
        IntPtr ret = _TabControl_GetSelectedContentTemplateSelector(jarg1);

        return ret;
    }

    public delegate int TabControl_GetTabStripPlacementDelegate(HandleRef jarg1);
    public static TabControl_GetTabStripPlacementDelegate _TabControl_GetTabStripPlacement;
    public static int TabControl_GetTabStripPlacement(HandleRef jarg1)
    {
        int ret = _TabControl_GetTabStripPlacement(jarg1);

        return ret;
    }

    public delegate void TabControl_SetTabStripPlacementDelegate(HandleRef jarg1, int jarg2);
    public static TabControl_SetTabStripPlacementDelegate _TabControl_SetTabStripPlacement;
    public static void TabControl_SetTabStripPlacement(HandleRef jarg1, int jarg2)
    {
        _TabControl_SetTabStripPlacement(jarg1, jarg2);
    }

    public delegate IntPtr new_TabItemDelegate();
    public static new_TabItemDelegate _new_TabItem;
    public static IntPtr new_TabItem()
    {
        IntPtr ret = _new_TabItem();

        return ret;
    }

    public delegate bool TabItem_GetIsSelectedDelegate(HandleRef jarg1);
    public static TabItem_GetIsSelectedDelegate _TabItem_GetIsSelected;
    public static bool TabItem_GetIsSelected(HandleRef jarg1)
    {
        bool ret = _TabItem_GetIsSelected(jarg1);

        return ret;
    }

    public delegate void TabItem_SetIsSelectedDelegate(HandleRef jarg1, bool jarg2);
    public static TabItem_SetIsSelectedDelegate _TabItem_SetIsSelected;
    public static void TabItem_SetIsSelected(HandleRef jarg1, bool jarg2)
    {
        _TabItem_SetIsSelected(jarg1, jarg2);
    }

    public delegate int TabItem_GetTabStripPlacementDelegate(HandleRef jarg1);
    public static TabItem_GetTabStripPlacementDelegate _TabItem_GetTabStripPlacement;
    public static int TabItem_GetTabStripPlacement(HandleRef jarg1)
    {
        int ret = _TabItem_GetTabStripPlacement(jarg1);

        return ret;
    }

    public delegate void delete_TabItemDelegate(HandleRef jarg1);
    public static delete_TabItemDelegate _delete_TabItem;
    public static void delete_TabItem(HandleRef jarg1)
    {
        _delete_TabItem(jarg1);
    }

    public delegate IntPtr new_TabPanelDelegate();
    public static new_TabPanelDelegate _new_TabPanel;
    public static IntPtr new_TabPanel()
    {
        IntPtr ret = _new_TabPanel();

        return ret;
    }

    public delegate void delete_TabPanelDelegate(HandleRef jarg1);
    public static delete_TabPanelDelegate _delete_TabPanel;
    public static void delete_TabPanel(HandleRef jarg1)
    {
        _delete_TabPanel(jarg1);
    }

    public delegate IntPtr new_TemplateBinding__SWIG_0Delegate();
    public static new_TemplateBinding__SWIG_0Delegate _new_TemplateBinding__SWIG_0;
    public static IntPtr new_TemplateBinding__SWIG_0()
    {
        IntPtr ret = _new_TemplateBinding__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_TemplateBinding__SWIG_1Delegate(HandleRef jarg1);
    public static new_TemplateBinding__SWIG_1Delegate _new_TemplateBinding__SWIG_1;
    public static IntPtr new_TemplateBinding__SWIG_1(HandleRef jarg1)
    {
        IntPtr ret = _new_TemplateBinding__SWIG_1(jarg1);

        return ret;
    }

    public delegate IntPtr TemplateBinding_GetPropertyDelegate(HandleRef jarg1);
    public static TemplateBinding_GetPropertyDelegate _TemplateBinding_GetProperty;
    public static IntPtr TemplateBinding_GetProperty(HandleRef jarg1)
    {
        IntPtr ret = _TemplateBinding_GetProperty(jarg1);

        return ret;
    }

    public delegate void TemplateBinding_SetPropertyDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TemplateBinding_SetPropertyDelegate _TemplateBinding_SetProperty;
    public static void TemplateBinding_SetProperty(HandleRef jarg1, HandleRef jarg2)
    {
        _TemplateBinding_SetProperty(jarg1, jarg2);
    }

    public delegate IntPtr TemplateBinding_ProvideValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TemplateBinding_ProvideValueDelegate _TemplateBinding_ProvideValue;
    public static IntPtr TemplateBinding_ProvideValue(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _TemplateBinding_ProvideValue(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_TemplateBindingDelegate(HandleRef jarg1);
    public static delete_TemplateBindingDelegate _delete_TemplateBinding;
    public static void delete_TemplateBinding(HandleRef jarg1)
    {
        _delete_TemplateBinding(jarg1);
    }

    public delegate IntPtr new_TextBlock__SWIG_0Delegate();
    public static new_TextBlock__SWIG_0Delegate _new_TextBlock__SWIG_0;
    public static IntPtr new_TextBlock__SWIG_0()
    {
        IntPtr ret = _new_TextBlock__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_TextBlock__SWIG_1Delegate(string jarg1);
    public static new_TextBlock__SWIG_1Delegate _new_TextBlock__SWIG_1;
    public static IntPtr new_TextBlock__SWIG_1(string jarg1)
    {
        IntPtr ret = _new_TextBlock__SWIG_1(jarg1);

        return ret;
    }

    public delegate void delete_TextBlockDelegate(HandleRef jarg1);
    public static delete_TextBlockDelegate _delete_TextBlock;
    public static void delete_TextBlock(HandleRef jarg1)
    {
        _delete_TextBlock(jarg1);
    }

    public delegate IntPtr TextBlock_GetBackgroundDelegate(HandleRef jarg1);
    public static TextBlock_GetBackgroundDelegate _TextBlock_GetBackground;
    public static IntPtr TextBlock_GetBackground(HandleRef jarg1)
    {
        IntPtr ret = _TextBlock_GetBackground(jarg1);

        return ret;
    }

    public delegate void TextBlock_SetBackgroundDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TextBlock_SetBackgroundDelegate _TextBlock_SetBackground;
    public static void TextBlock_SetBackground(HandleRef jarg1, HandleRef jarg2)
    {
        _TextBlock_SetBackground(jarg1, jarg2);
    }

    public delegate float TextBlock_GetBaselineOffsetDelegate(HandleRef jarg1);
    public static TextBlock_GetBaselineOffsetDelegate _TextBlock_GetBaselineOffset;
    public static float TextBlock_GetBaselineOffset(HandleRef jarg1)
    {
        float ret = _TextBlock_GetBaselineOffset(jarg1);

        return ret;
    }

    public delegate void TextBlock_SetBaselineOffsetDelegate(HandleRef jarg1, float jarg2);
    public static TextBlock_SetBaselineOffsetDelegate _TextBlock_SetBaselineOffset;
    public static void TextBlock_SetBaselineOffset(HandleRef jarg1, float jarg2)
    {
        _TextBlock_SetBaselineOffset(jarg1, jarg2);
    }

    public delegate IntPtr TextBlock_GetFontFamilyDelegate(HandleRef jarg1);
    public static TextBlock_GetFontFamilyDelegate _TextBlock_GetFontFamily;
    public static IntPtr TextBlock_GetFontFamily(HandleRef jarg1)
    {
        IntPtr ret = _TextBlock_GetFontFamily(jarg1);

        return ret;
    }

    public delegate void TextBlock_SetFontFamilyDelegate(HandleRef jarg1, IntPtr jarg2);
    public static TextBlock_SetFontFamilyDelegate _TextBlock_SetFontFamily;
    public static void TextBlock_SetFontFamily(HandleRef jarg1, IntPtr jarg2)
    {
        _TextBlock_SetFontFamily(jarg1, jarg2);
    }

    public delegate float TextBlock_GetFontSizeDelegate(HandleRef jarg1);
    public static TextBlock_GetFontSizeDelegate _TextBlock_GetFontSize;
    public static float TextBlock_GetFontSize(HandleRef jarg1)
    {
        float ret = _TextBlock_GetFontSize(jarg1);

        return ret;
    }

    public delegate void TextBlock_SetFontSizeDelegate(HandleRef jarg1, float jarg2);
    public static TextBlock_SetFontSizeDelegate _TextBlock_SetFontSize;
    public static void TextBlock_SetFontSize(HandleRef jarg1, float jarg2)
    {
        _TextBlock_SetFontSize(jarg1, jarg2);
    }

    public delegate int TextBlock_GetFontStretchDelegate(HandleRef jarg1);
    public static TextBlock_GetFontStretchDelegate _TextBlock_GetFontStretch;
    public static int TextBlock_GetFontStretch(HandleRef jarg1)
    {
        int ret = _TextBlock_GetFontStretch(jarg1);

        return ret;
    }

    public delegate void TextBlock_SetFontStretchDelegate(HandleRef jarg1, int jarg2);
    public static TextBlock_SetFontStretchDelegate _TextBlock_SetFontStretch;
    public static void TextBlock_SetFontStretch(HandleRef jarg1, int jarg2)
    {
        _TextBlock_SetFontStretch(jarg1, jarg2);
    }

    public delegate int TextBlock_GetFontStyleDelegate(HandleRef jarg1);
    public static TextBlock_GetFontStyleDelegate _TextBlock_GetFontStyle;
    public static int TextBlock_GetFontStyle(HandleRef jarg1)
    {
        int ret = _TextBlock_GetFontStyle(jarg1);

        return ret;
    }

    public delegate void TextBlock_SetFontStyleDelegate(HandleRef jarg1, int jarg2);
    public static TextBlock_SetFontStyleDelegate _TextBlock_SetFontStyle;
    public static void TextBlock_SetFontStyle(HandleRef jarg1, int jarg2)
    {
        _TextBlock_SetFontStyle(jarg1, jarg2);
    }

    public delegate int TextBlock_GetFontWeightDelegate(HandleRef jarg1);
    public static TextBlock_GetFontWeightDelegate _TextBlock_GetFontWeight;
    public static int TextBlock_GetFontWeight(HandleRef jarg1)
    {
        int ret = _TextBlock_GetFontWeight(jarg1);

        return ret;
    }

    public delegate void TextBlock_SetFontWeightDelegate(HandleRef jarg1, int jarg2);
    public static TextBlock_SetFontWeightDelegate _TextBlock_SetFontWeight;
    public static void TextBlock_SetFontWeight(HandleRef jarg1, int jarg2)
    {
        _TextBlock_SetFontWeight(jarg1, jarg2);
    }

    public delegate IntPtr TextBlock_GetForegroundDelegate(HandleRef jarg1);
    public static TextBlock_GetForegroundDelegate _TextBlock_GetForeground;
    public static IntPtr TextBlock_GetForeground(HandleRef jarg1)
    {
        IntPtr ret = _TextBlock_GetForeground(jarg1);

        return ret;
    }

    public delegate void TextBlock_SetForegroundDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TextBlock_SetForegroundDelegate _TextBlock_SetForeground;
    public static void TextBlock_SetForeground(HandleRef jarg1, HandleRef jarg2)
    {
        _TextBlock_SetForeground(jarg1, jarg2);
    }

    public delegate bool TextBlock_GetIsHyphenationEnabledDelegate(HandleRef jarg1);
    public static TextBlock_GetIsHyphenationEnabledDelegate _TextBlock_GetIsHyphenationEnabled;
    public static bool TextBlock_GetIsHyphenationEnabled(HandleRef jarg1)
    {
        bool ret = _TextBlock_GetIsHyphenationEnabled(jarg1);

        return ret;
    }

    public delegate void TextBlock_SetIsHyphenationEnabledDelegate(HandleRef jarg1, bool jarg2);
    public static TextBlock_SetIsHyphenationEnabledDelegate _TextBlock_SetIsHyphenationEnabled;
    public static void TextBlock_SetIsHyphenationEnabled(HandleRef jarg1, bool jarg2)
    {
        _TextBlock_SetIsHyphenationEnabled(jarg1, jarg2);
    }

    public delegate float TextBlock_GetLineHeightDelegate(HandleRef jarg1);
    public static TextBlock_GetLineHeightDelegate _TextBlock_GetLineHeight;
    public static float TextBlock_GetLineHeight(HandleRef jarg1)
    {
        float ret = _TextBlock_GetLineHeight(jarg1);

        return ret;
    }

    public delegate void TextBlock_SetLineHeightDelegate(HandleRef jarg1, float jarg2);
    public static TextBlock_SetLineHeightDelegate _TextBlock_SetLineHeight;
    public static void TextBlock_SetLineHeight(HandleRef jarg1, float jarg2)
    {
        _TextBlock_SetLineHeight(jarg1, jarg2);
    }

    public delegate int TextBlock_GetLineStackingStrategyDelegate(HandleRef jarg1);
    public static TextBlock_GetLineStackingStrategyDelegate _TextBlock_GetLineStackingStrategy;
    public static int TextBlock_GetLineStackingStrategy(HandleRef jarg1)
    {
        int ret = _TextBlock_GetLineStackingStrategy(jarg1);

        return ret;
    }

    public delegate void TextBlock_SetLineStackingStrategyDelegate(HandleRef jarg1, int jarg2);
    public static TextBlock_SetLineStackingStrategyDelegate _TextBlock_SetLineStackingStrategy;
    public static void TextBlock_SetLineStackingStrategy(HandleRef jarg1, int jarg2)
    {
        _TextBlock_SetLineStackingStrategy(jarg1, jarg2);
    }

    public delegate IntPtr TextBlock_GetPaddingDelegate(HandleRef jarg1);
    public static TextBlock_GetPaddingDelegate _TextBlock_GetPadding;
    public static IntPtr TextBlock_GetPadding(HandleRef jarg1)
    {
        IntPtr ret = _TextBlock_GetPadding(jarg1);

        return ret;
    }

    public delegate void TextBlock_SetPaddingDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TextBlock_SetPaddingDelegate _TextBlock_SetPadding;
    public static void TextBlock_SetPadding(HandleRef jarg1, HandleRef jarg2)
    {
        _TextBlock_SetPadding(jarg1, jarg2);
    }

    public delegate IntPtr TextBlock_GetStrokeDelegate(HandleRef jarg1);
    public static TextBlock_GetStrokeDelegate _TextBlock_GetStroke;
    public static IntPtr TextBlock_GetStroke(HandleRef jarg1)
    {
        IntPtr ret = _TextBlock_GetStroke(jarg1);

        return ret;
    }

    public delegate void TextBlock_SetStrokeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TextBlock_SetStrokeDelegate _TextBlock_SetStroke;
    public static void TextBlock_SetStroke(HandleRef jarg1, HandleRef jarg2)
    {
        _TextBlock_SetStroke(jarg1, jarg2);
    }

    public delegate float TextBlock_GetStrokeThicknessDelegate(HandleRef jarg1);
    public static TextBlock_GetStrokeThicknessDelegate _TextBlock_GetStrokeThickness;
    public static float TextBlock_GetStrokeThickness(HandleRef jarg1)
    {
        float ret = _TextBlock_GetStrokeThickness(jarg1);

        return ret;
    }

    public delegate void TextBlock_SetStrokeThicknessDelegate(HandleRef jarg1, float jarg2);
    public static TextBlock_SetStrokeThicknessDelegate _TextBlock_SetStrokeThickness;
    public static void TextBlock_SetStrokeThickness(HandleRef jarg1, float jarg2)
    {
        _TextBlock_SetStrokeThickness(jarg1, jarg2);
    }

    public delegate int TextBlock_GetTextAlignmentDelegate(HandleRef jarg1);
    public static TextBlock_GetTextAlignmentDelegate _TextBlock_GetTextAlignment;
    public static int TextBlock_GetTextAlignment(HandleRef jarg1)
    {
        int ret = _TextBlock_GetTextAlignment(jarg1);

        return ret;
    }

    public delegate void TextBlock_SetTextAlignmentDelegate(HandleRef jarg1, int jarg2);
    public static TextBlock_SetTextAlignmentDelegate _TextBlock_SetTextAlignment;
    public static void TextBlock_SetTextAlignment(HandleRef jarg1, int jarg2)
    {
        _TextBlock_SetTextAlignment(jarg1, jarg2);
    }

    public delegate IntPtr TextBlock_GetTextDecorationCollectionDelegate(HandleRef jarg1);
    public static TextBlock_GetTextDecorationCollectionDelegate _TextBlock_GetTextDecorationCollection;
    public static IntPtr TextBlock_GetTextDecorationCollection(HandleRef jarg1)
    {
        IntPtr ret = _TextBlock_GetTextDecorationCollection(jarg1);

        return ret;
    }

    public delegate void TextBlock_SetTextDecorationCollectionDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TextBlock_SetTextDecorationCollectionDelegate _TextBlock_SetTextDecorationCollection;
    public static void TextBlock_SetTextDecorationCollection(HandleRef jarg1, HandleRef jarg2)
    {
        _TextBlock_SetTextDecorationCollection(jarg1, jarg2);
    }

    public delegate IntPtr TextBlock_GetTextEffectsDelegate(HandleRef jarg1);
    public static TextBlock_GetTextEffectsDelegate _TextBlock_GetTextEffects;
    public static IntPtr TextBlock_GetTextEffects(HandleRef jarg1)
    {
        IntPtr ret = _TextBlock_GetTextEffects(jarg1);

        return ret;
    }

    public delegate void TextBlock_SetTextEffectsDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TextBlock_SetTextEffectsDelegate _TextBlock_SetTextEffects;
    public static void TextBlock_SetTextEffects(HandleRef jarg1, HandleRef jarg2)
    {
        _TextBlock_SetTextEffects(jarg1, jarg2);
    }

    public delegate IntPtr TextBlock_GetTextDelegate(HandleRef jarg1);
    public static TextBlock_GetTextDelegate _TextBlock_GetText;
    public static IntPtr TextBlock_GetText(HandleRef jarg1)
    {
        IntPtr ret = _TextBlock_GetText(jarg1);

        return ret;
    }

    public delegate void TextBlock_SetTextDelegate(HandleRef jarg1, IntPtr jarg2);
    public static TextBlock_SetTextDelegate _TextBlock_SetText;
    public static void TextBlock_SetText(HandleRef jarg1, IntPtr jarg2)
    {
        _TextBlock_SetText(jarg1, jarg2);
    }

    public delegate int TextBlock_GetTextTrimmingDelegate(HandleRef jarg1);
    public static TextBlock_GetTextTrimmingDelegate _TextBlock_GetTextTrimming;
    public static int TextBlock_GetTextTrimming(HandleRef jarg1)
    {
        int ret = _TextBlock_GetTextTrimming(jarg1);

        return ret;
    }

    public delegate void TextBlock_SetTextTrimmingDelegate(HandleRef jarg1, int jarg2);
    public static TextBlock_SetTextTrimmingDelegate _TextBlock_SetTextTrimming;
    public static void TextBlock_SetTextTrimming(HandleRef jarg1, int jarg2)
    {
        _TextBlock_SetTextTrimming(jarg1, jarg2);
    }

    public delegate int TextBlock_GetTextWrappingDelegate(HandleRef jarg1);
    public static TextBlock_GetTextWrappingDelegate _TextBlock_GetTextWrapping;
    public static int TextBlock_GetTextWrapping(HandleRef jarg1)
    {
        int ret = _TextBlock_GetTextWrapping(jarg1);

        return ret;
    }

    public delegate void TextBlock_SetTextWrappingDelegate(HandleRef jarg1, int jarg2);
    public static TextBlock_SetTextWrappingDelegate _TextBlock_SetTextWrapping;
    public static void TextBlock_SetTextWrapping(HandleRef jarg1, int jarg2)
    {
        _TextBlock_SetTextWrapping(jarg1, jarg2);
    }

    public delegate IntPtr new_TextBoxDelegate();
    public static new_TextBoxDelegate _new_TextBox;
    public static IntPtr new_TextBox()
    {
        IntPtr ret = _new_TextBox();

        return ret;
    }

    public delegate void delete_TextBoxDelegate(HandleRef jarg1);
    public static delete_TextBoxDelegate _delete_TextBox;
    public static void delete_TextBox(HandleRef jarg1)
    {
        _delete_TextBox(jarg1);
    }

    public delegate int TextBox_GetCharacterCasingDelegate(HandleRef jarg1);
    public static TextBox_GetCharacterCasingDelegate _TextBox_GetCharacterCasing;
    public static int TextBox_GetCharacterCasing(HandleRef jarg1)
    {
        int ret = _TextBox_GetCharacterCasing(jarg1);

        return ret;
    }

    public delegate void TextBox_SetCharacterCasingDelegate(HandleRef jarg1, int jarg2);
    public static TextBox_SetCharacterCasingDelegate _TextBox_SetCharacterCasing;
    public static void TextBox_SetCharacterCasing(HandleRef jarg1, int jarg2)
    {
        _TextBox_SetCharacterCasing(jarg1, jarg2);
    }

    public delegate int TextBox_GetMaxLengthDelegate(HandleRef jarg1);
    public static TextBox_GetMaxLengthDelegate _TextBox_GetMaxLength;
    public static int TextBox_GetMaxLength(HandleRef jarg1)
    {
        int ret = _TextBox_GetMaxLength(jarg1);

        return ret;
    }

    public delegate void TextBox_SetMaxLengthDelegate(HandleRef jarg1, int jarg2);
    public static TextBox_SetMaxLengthDelegate _TextBox_SetMaxLength;
    public static void TextBox_SetMaxLength(HandleRef jarg1, int jarg2)
    {
        _TextBox_SetMaxLength(jarg1, jarg2);
    }

    public delegate int TextBox_GetMaxLinesDelegate(HandleRef jarg1);
    public static TextBox_GetMaxLinesDelegate _TextBox_GetMaxLines;
    public static int TextBox_GetMaxLines(HandleRef jarg1)
    {
        int ret = _TextBox_GetMaxLines(jarg1);

        return ret;
    }

    public delegate void TextBox_SetMaxLinesDelegate(HandleRef jarg1, int jarg2);
    public static TextBox_SetMaxLinesDelegate _TextBox_SetMaxLines;
    public static void TextBox_SetMaxLines(HandleRef jarg1, int jarg2)
    {
        _TextBox_SetMaxLines(jarg1, jarg2);
    }

    public delegate int TextBox_GetMinLinesDelegate(HandleRef jarg1);
    public static TextBox_GetMinLinesDelegate _TextBox_GetMinLines;
    public static int TextBox_GetMinLines(HandleRef jarg1)
    {
        int ret = _TextBox_GetMinLines(jarg1);

        return ret;
    }

    public delegate void TextBox_SetMinLinesDelegate(HandleRef jarg1, int jarg2);
    public static TextBox_SetMinLinesDelegate _TextBox_SetMinLines;
    public static void TextBox_SetMinLines(HandleRef jarg1, int jarg2)
    {
        _TextBox_SetMinLines(jarg1, jarg2);
    }

    public delegate int TextBox_GetTextAlignmentDelegate(HandleRef jarg1);
    public static TextBox_GetTextAlignmentDelegate _TextBox_GetTextAlignment;
    public static int TextBox_GetTextAlignment(HandleRef jarg1)
    {
        int ret = _TextBox_GetTextAlignment(jarg1);

        return ret;
    }

    public delegate void TextBox_SetTextAlignmentDelegate(HandleRef jarg1, int jarg2);
    public static TextBox_SetTextAlignmentDelegate _TextBox_SetTextAlignment;
    public static void TextBox_SetTextAlignment(HandleRef jarg1, int jarg2)
    {
        _TextBox_SetTextAlignment(jarg1, jarg2);
    }

    public delegate IntPtr TextBox_GetTextDecorationsDelegate(HandleRef jarg1);
    public static TextBox_GetTextDecorationsDelegate _TextBox_GetTextDecorations;
    public static IntPtr TextBox_GetTextDecorations(HandleRef jarg1)
    {
        IntPtr ret = _TextBox_GetTextDecorations(jarg1);

        return ret;
    }

    public delegate IntPtr TextBox_GetTextDelegate(HandleRef jarg1);
    public static TextBox_GetTextDelegate _TextBox_GetText;
    public static IntPtr TextBox_GetText(HandleRef jarg1)
    {
        IntPtr ret = _TextBox_GetText(jarg1);

        return ret;
    }

    public delegate void TextBox_SetTextDelegate(HandleRef jarg1, IntPtr jarg2);
    public static TextBox_SetTextDelegate _TextBox_SetText;
    public static void TextBox_SetText(HandleRef jarg1, IntPtr jarg2)
    {
        _TextBox_SetText(jarg1, jarg2);
    }

    public delegate int TextBox_GetTextWrappingDelegate(HandleRef jarg1);
    public static TextBox_GetTextWrappingDelegate _TextBox_GetTextWrapping;
    public static int TextBox_GetTextWrapping(HandleRef jarg1)
    {
        int ret = _TextBox_GetTextWrapping(jarg1);

        return ret;
    }

    public delegate void TextBox_SetTextWrappingDelegate(HandleRef jarg1, int jarg2);
    public static TextBox_SetTextWrappingDelegate _TextBox_SetTextWrapping;
    public static void TextBox_SetTextWrapping(HandleRef jarg1, int jarg2)
    {
        _TextBox_SetTextWrapping(jarg1, jarg2);
    }

    public delegate IntPtr TextBox_GetViewportSizeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TextBox_GetViewportSizeDelegate _TextBox_GetViewportSize;
    public static IntPtr TextBox_GetViewportSize(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _TextBox_GetViewportSize(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr TextBox_GetScrollOffsetDelegate(HandleRef jarg1);
    public static TextBox_GetScrollOffsetDelegate _TextBox_GetScrollOffset;
    public static IntPtr TextBox_GetScrollOffset(HandleRef jarg1)
    {
        IntPtr ret = _TextBox_GetScrollOffset(jarg1);

        return ret;
    }

    public delegate void TextBox_SelectAllDelegate(HandleRef jarg1);
    public static TextBox_SelectAllDelegate _TextBox_SelectAll;
    public static void TextBox_SelectAll(HandleRef jarg1)
    {
        _TextBox_SelectAll(jarg1);
    }

    public delegate IntPtr TextElement_GetBackgroundDelegate(HandleRef jarg1);
    public static TextElement_GetBackgroundDelegate _TextElement_GetBackground;
    public static IntPtr TextElement_GetBackground(HandleRef jarg1)
    {
        IntPtr ret = _TextElement_GetBackground(jarg1);

        return ret;
    }

    public delegate void TextElement_SetBackgroundDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TextElement_SetBackgroundDelegate _TextElement_SetBackground;
    public static void TextElement_SetBackground(HandleRef jarg1, HandleRef jarg2)
    {
        _TextElement_SetBackground(jarg1, jarg2);
    }

    public delegate IntPtr TextElement_GetFontFamilyDelegate(HandleRef jarg1);
    public static TextElement_GetFontFamilyDelegate _TextElement_GetFontFamily;
    public static IntPtr TextElement_GetFontFamily(HandleRef jarg1)
    {
        IntPtr ret = _TextElement_GetFontFamily(jarg1);

        return ret;
    }

    public delegate void TextElement_SetFontFamilyDelegate(HandleRef jarg1, IntPtr jarg2);
    public static TextElement_SetFontFamilyDelegate _TextElement_SetFontFamily;
    public static void TextElement_SetFontFamily(HandleRef jarg1, IntPtr jarg2)
    {
        _TextElement_SetFontFamily(jarg1, jarg2);
    }

    public delegate float TextElement_GetFontSizeDelegate(HandleRef jarg1);
    public static TextElement_GetFontSizeDelegate _TextElement_GetFontSize;
    public static float TextElement_GetFontSize(HandleRef jarg1)
    {
        float ret = _TextElement_GetFontSize(jarg1);

        return ret;
    }

    public delegate void TextElement_SetFontSizeDelegate(HandleRef jarg1, float jarg2);
    public static TextElement_SetFontSizeDelegate _TextElement_SetFontSize;
    public static void TextElement_SetFontSize(HandleRef jarg1, float jarg2)
    {
        _TextElement_SetFontSize(jarg1, jarg2);
    }

    public delegate int TextElement_GetFontStretchDelegate(HandleRef jarg1);
    public static TextElement_GetFontStretchDelegate _TextElement_GetFontStretch;
    public static int TextElement_GetFontStretch(HandleRef jarg1)
    {
        int ret = _TextElement_GetFontStretch(jarg1);

        return ret;
    }

    public delegate void TextElement_SetFontStretchDelegate(HandleRef jarg1, int jarg2);
    public static TextElement_SetFontStretchDelegate _TextElement_SetFontStretch;
    public static void TextElement_SetFontStretch(HandleRef jarg1, int jarg2)
    {
        _TextElement_SetFontStretch(jarg1, jarg2);
    }

    public delegate int TextElement_GetFontStyleDelegate(HandleRef jarg1);
    public static TextElement_GetFontStyleDelegate _TextElement_GetFontStyle;
    public static int TextElement_GetFontStyle(HandleRef jarg1)
    {
        int ret = _TextElement_GetFontStyle(jarg1);

        return ret;
    }

    public delegate void TextElement_SetFontStyleDelegate(HandleRef jarg1, int jarg2);
    public static TextElement_SetFontStyleDelegate _TextElement_SetFontStyle;
    public static void TextElement_SetFontStyle(HandleRef jarg1, int jarg2)
    {
        _TextElement_SetFontStyle(jarg1, jarg2);
    }

    public delegate int TextElement_GetFontWeightDelegate(HandleRef jarg1);
    public static TextElement_GetFontWeightDelegate _TextElement_GetFontWeight;
    public static int TextElement_GetFontWeight(HandleRef jarg1)
    {
        int ret = _TextElement_GetFontWeight(jarg1);

        return ret;
    }

    public delegate void TextElement_SetFontWeightDelegate(HandleRef jarg1, int jarg2);
    public static TextElement_SetFontWeightDelegate _TextElement_SetFontWeight;
    public static void TextElement_SetFontWeight(HandleRef jarg1, int jarg2)
    {
        _TextElement_SetFontWeight(jarg1, jarg2);
    }

    public delegate IntPtr TextElement_GetForegroundDelegate(HandleRef jarg1);
    public static TextElement_GetForegroundDelegate _TextElement_GetForeground;
    public static IntPtr TextElement_GetForeground(HandleRef jarg1)
    {
        IntPtr ret = _TextElement_GetForeground(jarg1);

        return ret;
    }

    public delegate void TextElement_SetForegroundDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TextElement_SetForegroundDelegate _TextElement_SetForeground;
    public static void TextElement_SetForeground(HandleRef jarg1, HandleRef jarg2)
    {
        _TextElement_SetForeground(jarg1, jarg2);
    }

    public delegate IntPtr TextElement_GetStrokeDelegate(HandleRef jarg1);
    public static TextElement_GetStrokeDelegate _TextElement_GetStroke;
    public static IntPtr TextElement_GetStroke(HandleRef jarg1)
    {
        IntPtr ret = _TextElement_GetStroke(jarg1);

        return ret;
    }

    public delegate void TextElement_SetStrokeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TextElement_SetStrokeDelegate _TextElement_SetStroke;
    public static void TextElement_SetStroke(HandleRef jarg1, HandleRef jarg2)
    {
        _TextElement_SetStroke(jarg1, jarg2);
    }

    public delegate float TextElement_GetStrokeThicknessDelegate(HandleRef jarg1);
    public static TextElement_GetStrokeThicknessDelegate _TextElement_GetStrokeThickness;
    public static float TextElement_GetStrokeThickness(HandleRef jarg1)
    {
        float ret = _TextElement_GetStrokeThickness(jarg1);

        return ret;
    }

    public delegate void TextElement_SetStrokeThicknessDelegate(HandleRef jarg1, float jarg2);
    public static TextElement_SetStrokeThicknessDelegate _TextElement_SetStrokeThickness;
    public static void TextElement_SetStrokeThickness(HandleRef jarg1, float jarg2)
    {
        _TextElement_SetStrokeThickness(jarg1, jarg2);
    }

    public delegate IntPtr TextElement_GetTextEffectsDelegate(HandleRef jarg1);
    public static TextElement_GetTextEffectsDelegate _TextElement_GetTextEffects;
    public static IntPtr TextElement_GetTextEffects(HandleRef jarg1)
    {
        IntPtr ret = _TextElement_GetTextEffects(jarg1);

        return ret;
    }

    public delegate void TextElement_SetTextEffectsDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TextElement_SetTextEffectsDelegate _TextElement_SetTextEffects;
    public static void TextElement_SetTextEffects(HandleRef jarg1, HandleRef jarg2)
    {
        _TextElement_SetTextEffects(jarg1, jarg2);
    }

    public delegate IntPtr new_TextElementDelegate();
    public static new_TextElementDelegate _new_TextElement;
    public static IntPtr new_TextElement()
    {
        IntPtr ret = _new_TextElement();

        return ret;
    }

    public delegate void delete_TextElementDelegate(HandleRef jarg1);
    public static delete_TextElementDelegate _delete_TextElement;
    public static void delete_TextElement(HandleRef jarg1)
    {
        _delete_TextElement(jarg1);
    }

    public delegate IntPtr new_TextureSource__SWIG_0Delegate();
    public static new_TextureSource__SWIG_0Delegate _new_TextureSource__SWIG_0;
    public static IntPtr new_TextureSource__SWIG_0()
    {
        IntPtr ret = _new_TextureSource__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_TextureSource__SWIG_1Delegate(HandleRef jarg1, uint jarg2, uint jarg3);
    public static new_TextureSource__SWIG_1Delegate _new_TextureSource__SWIG_1;
    public static IntPtr new_TextureSource__SWIG_1(HandleRef jarg1, uint jarg2, uint jarg3)
    {
        IntPtr ret = _new_TextureSource__SWIG_1(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr new_TextureSource__SWIG_2Delegate(HandleRef jarg1, uint jarg2, uint jarg3, float jarg4, float jarg5);
    public static new_TextureSource__SWIG_2Delegate _new_TextureSource__SWIG_2;
    public static IntPtr new_TextureSource__SWIG_2(HandleRef jarg1, uint jarg2, uint jarg3, float jarg4, float jarg5)
    {
        IntPtr ret = _new_TextureSource__SWIG_2(jarg1, jarg2, jarg3, jarg4, jarg5);

        return ret;
    }

    public delegate void delete_TextureSourceDelegate(HandleRef jarg1);
    public static delete_TextureSourceDelegate _delete_TextureSource;
    public static void delete_TextureSource(HandleRef jarg1)
    {
        _delete_TextureSource(jarg1);
    }

    public delegate IntPtr TextureSource_GetTextureDelegate(HandleRef jarg1);
    public static TextureSource_GetTextureDelegate _TextureSource_GetTexture;
    public static IntPtr TextureSource_GetTexture(HandleRef jarg1)
    {
        IntPtr ret = _TextureSource_GetTexture(jarg1);

        return ret;
    }

    public delegate void TextureSource_SetTextureDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3, uint jarg4);
    public static TextureSource_SetTextureDelegate _TextureSource_SetTexture;
    public static void TextureSource_SetTexture(HandleRef jarg1, HandleRef jarg2, uint jarg3, uint jarg4)
    {
        _TextureSource_SetTexture(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate float TextureSource_GetDpiXDelegate(HandleRef jarg1);
    public static TextureSource_GetDpiXDelegate _TextureSource_GetDpiX;
    public static float TextureSource_GetDpiX(HandleRef jarg1)
    {
        float ret = _TextureSource_GetDpiX(jarg1);

        return ret;
    }

    public delegate void TextureSource_SetDpiXDelegate(HandleRef jarg1, float jarg2);
    public static TextureSource_SetDpiXDelegate _TextureSource_SetDpiX;
    public static void TextureSource_SetDpiX(HandleRef jarg1, float jarg2)
    {
        _TextureSource_SetDpiX(jarg1, jarg2);
    }

    public delegate float TextureSource_GetDpiYDelegate(HandleRef jarg1);
    public static TextureSource_GetDpiYDelegate _TextureSource_GetDpiY;
    public static float TextureSource_GetDpiY(HandleRef jarg1)
    {
        float ret = _TextureSource_GetDpiY(jarg1);

        return ret;
    }

    public delegate void TextureSource_SetDpiYDelegate(HandleRef jarg1, float jarg2);
    public static TextureSource_SetDpiYDelegate _TextureSource_SetDpiY;
    public static void TextureSource_SetDpiY(HandleRef jarg1, float jarg2)
    {
        _TextureSource_SetDpiY(jarg1, jarg2);
    }

    public delegate int TextureSource_GetPixelWidthDelegate(HandleRef jarg1);
    public static TextureSource_GetPixelWidthDelegate _TextureSource_GetPixelWidth;
    public static int TextureSource_GetPixelWidth(HandleRef jarg1)
    {
        int ret = _TextureSource_GetPixelWidth(jarg1);

        return ret;
    }

    public delegate int TextureSource_GetPixelHeightDelegate(HandleRef jarg1);
    public static TextureSource_GetPixelHeightDelegate _TextureSource_GetPixelHeight;
    public static int TextureSource_GetPixelHeight(HandleRef jarg1)
    {
        int ret = _TextureSource_GetPixelHeight(jarg1);

        return ret;
    }

    public delegate void TextureSource_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static TextureSource_CreateRenderProxyDelegate _TextureSource_CreateRenderProxy;
    public static void TextureSource_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _TextureSource_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void TextureSource_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static TextureSource_UpdateRenderProxyDelegate _TextureSource_UpdateRenderProxy;
    public static void TextureSource_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _TextureSource_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void TextureSource_UnregisterRendererDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TextureSource_UnregisterRendererDelegate _TextureSource_UnregisterRenderer;
    public static void TextureSource_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2)
    {
        _TextureSource_UnregisterRenderer(jarg1, jarg2);
    }

    public delegate void DragCompletedEventArgs_canceled_setDelegate(HandleRef jarg1, bool jarg2);
    public static DragCompletedEventArgs_canceled_setDelegate _DragCompletedEventArgs_canceled_set;
    public static void DragCompletedEventArgs_canceled_set(HandleRef jarg1, bool jarg2)
    {
        _DragCompletedEventArgs_canceled_set(jarg1, jarg2);
    }

    public delegate bool DragCompletedEventArgs_canceled_getDelegate(HandleRef jarg1);
    public static DragCompletedEventArgs_canceled_getDelegate _DragCompletedEventArgs_canceled_get;
    public static bool DragCompletedEventArgs_canceled_get(HandleRef jarg1)
    {
        bool ret = _DragCompletedEventArgs_canceled_get(jarg1);

        return ret;
    }

    public delegate void DragCompletedEventArgs_horizontalChange_setDelegate(HandleRef jarg1, float jarg2);
    public static DragCompletedEventArgs_horizontalChange_setDelegate _DragCompletedEventArgs_horizontalChange_set;
    public static void DragCompletedEventArgs_horizontalChange_set(HandleRef jarg1, float jarg2)
    {
        _DragCompletedEventArgs_horizontalChange_set(jarg1, jarg2);
    }

    public delegate float DragCompletedEventArgs_horizontalChange_getDelegate(HandleRef jarg1);
    public static DragCompletedEventArgs_horizontalChange_getDelegate _DragCompletedEventArgs_horizontalChange_get;
    public static float DragCompletedEventArgs_horizontalChange_get(HandleRef jarg1)
    {
        float ret = _DragCompletedEventArgs_horizontalChange_get(jarg1);

        return ret;
    }

    public delegate void DragCompletedEventArgs_verticalChange_setDelegate(HandleRef jarg1, float jarg2);
    public static DragCompletedEventArgs_verticalChange_setDelegate _DragCompletedEventArgs_verticalChange_set;
    public static void DragCompletedEventArgs_verticalChange_set(HandleRef jarg1, float jarg2)
    {
        _DragCompletedEventArgs_verticalChange_set(jarg1, jarg2);
    }

    public delegate float DragCompletedEventArgs_verticalChange_getDelegate(HandleRef jarg1);
    public static DragCompletedEventArgs_verticalChange_getDelegate _DragCompletedEventArgs_verticalChange_get;
    public static float DragCompletedEventArgs_verticalChange_get(HandleRef jarg1)
    {
        float ret = _DragCompletedEventArgs_verticalChange_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_DragCompletedEventArgsDelegate(HandleRef jarg1, bool jarg2, float jarg3, float jarg4);
    public static new_DragCompletedEventArgsDelegate _new_DragCompletedEventArgs;
    public static IntPtr new_DragCompletedEventArgs(HandleRef jarg1, bool jarg2, float jarg3, float jarg4)
    {
        IntPtr ret = _new_DragCompletedEventArgs(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate void delete_DragCompletedEventArgsDelegate(HandleRef jarg1);
    public static delete_DragCompletedEventArgsDelegate _delete_DragCompletedEventArgs;
    public static void delete_DragCompletedEventArgs(HandleRef jarg1)
    {
        _delete_DragCompletedEventArgs(jarg1);
    }

    public delegate void DragStartedEventArgs_horizontalOffset_setDelegate(HandleRef jarg1, float jarg2);
    public static DragStartedEventArgs_horizontalOffset_setDelegate _DragStartedEventArgs_horizontalOffset_set;
    public static void DragStartedEventArgs_horizontalOffset_set(HandleRef jarg1, float jarg2)
    {
        _DragStartedEventArgs_horizontalOffset_set(jarg1, jarg2);
    }

    public delegate float DragStartedEventArgs_horizontalOffset_getDelegate(HandleRef jarg1);
    public static DragStartedEventArgs_horizontalOffset_getDelegate _DragStartedEventArgs_horizontalOffset_get;
    public static float DragStartedEventArgs_horizontalOffset_get(HandleRef jarg1)
    {
        float ret = _DragStartedEventArgs_horizontalOffset_get(jarg1);

        return ret;
    }

    public delegate void DragStartedEventArgs_verticalOffset_setDelegate(HandleRef jarg1, float jarg2);
    public static DragStartedEventArgs_verticalOffset_setDelegate _DragStartedEventArgs_verticalOffset_set;
    public static void DragStartedEventArgs_verticalOffset_set(HandleRef jarg1, float jarg2)
    {
        _DragStartedEventArgs_verticalOffset_set(jarg1, jarg2);
    }

    public delegate float DragStartedEventArgs_verticalOffset_getDelegate(HandleRef jarg1);
    public static DragStartedEventArgs_verticalOffset_getDelegate _DragStartedEventArgs_verticalOffset_get;
    public static float DragStartedEventArgs_verticalOffset_get(HandleRef jarg1)
    {
        float ret = _DragStartedEventArgs_verticalOffset_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_DragStartedEventArgsDelegate(HandleRef jarg1, float jarg2, float jarg3);
    public static new_DragStartedEventArgsDelegate _new_DragStartedEventArgs;
    public static IntPtr new_DragStartedEventArgs(HandleRef jarg1, float jarg2, float jarg3)
    {
        IntPtr ret = _new_DragStartedEventArgs(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void delete_DragStartedEventArgsDelegate(HandleRef jarg1);
    public static delete_DragStartedEventArgsDelegate _delete_DragStartedEventArgs;
    public static void delete_DragStartedEventArgs(HandleRef jarg1)
    {
        _delete_DragStartedEventArgs(jarg1);
    }

    public delegate void DragDeltaEventArgs_horizontalChange_setDelegate(HandleRef jarg1, float jarg2);
    public static DragDeltaEventArgs_horizontalChange_setDelegate _DragDeltaEventArgs_horizontalChange_set;
    public static void DragDeltaEventArgs_horizontalChange_set(HandleRef jarg1, float jarg2)
    {
        _DragDeltaEventArgs_horizontalChange_set(jarg1, jarg2);
    }

    public delegate float DragDeltaEventArgs_horizontalChange_getDelegate(HandleRef jarg1);
    public static DragDeltaEventArgs_horizontalChange_getDelegate _DragDeltaEventArgs_horizontalChange_get;
    public static float DragDeltaEventArgs_horizontalChange_get(HandleRef jarg1)
    {
        float ret = _DragDeltaEventArgs_horizontalChange_get(jarg1);

        return ret;
    }

    public delegate void DragDeltaEventArgs_verticalChange_setDelegate(HandleRef jarg1, float jarg2);
    public static DragDeltaEventArgs_verticalChange_setDelegate _DragDeltaEventArgs_verticalChange_set;
    public static void DragDeltaEventArgs_verticalChange_set(HandleRef jarg1, float jarg2)
    {
        _DragDeltaEventArgs_verticalChange_set(jarg1, jarg2);
    }

    public delegate float DragDeltaEventArgs_verticalChange_getDelegate(HandleRef jarg1);
    public static DragDeltaEventArgs_verticalChange_getDelegate _DragDeltaEventArgs_verticalChange_get;
    public static float DragDeltaEventArgs_verticalChange_get(HandleRef jarg1)
    {
        float ret = _DragDeltaEventArgs_verticalChange_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_DragDeltaEventArgsDelegate(HandleRef jarg1, float jarg2, float jarg3);
    public static new_DragDeltaEventArgsDelegate _new_DragDeltaEventArgs;
    public static IntPtr new_DragDeltaEventArgs(HandleRef jarg1, float jarg2, float jarg3)
    {
        IntPtr ret = _new_DragDeltaEventArgs(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void delete_DragDeltaEventArgsDelegate(HandleRef jarg1);
    public static delete_DragDeltaEventArgsDelegate _delete_DragDeltaEventArgs;
    public static void delete_DragDeltaEventArgs(HandleRef jarg1)
    {
        _delete_DragDeltaEventArgs(jarg1);
    }

    public delegate IntPtr new_ThumbDelegate();
    public static new_ThumbDelegate _new_Thumb;
    public static IntPtr new_Thumb()
    {
        IntPtr ret = _new_Thumb();

        return ret;
    }

    public delegate bool Thumb_GetIsDraggingDelegate(HandleRef jarg1);
    public static Thumb_GetIsDraggingDelegate _Thumb_GetIsDragging;
    public static bool Thumb_GetIsDragging(HandleRef jarg1)
    {
        bool ret = _Thumb_GetIsDragging(jarg1);

        return ret;
    }

    public delegate void Thumb_CancelDragDelegate(HandleRef jarg1);
    public static Thumb_CancelDragDelegate _Thumb_CancelDrag;
    public static void Thumb_CancelDrag(HandleRef jarg1)
    {
        _Thumb_CancelDrag(jarg1);
    }

    public delegate void delete_ThumbDelegate(HandleRef jarg1);
    public static delete_ThumbDelegate _delete_Thumb;
    public static void delete_Thumb(HandleRef jarg1)
    {
        _delete_Thumb(jarg1);
    }

    public delegate IntPtr new_TickBarDelegate();
    public static new_TickBarDelegate _new_TickBar;
    public static IntPtr new_TickBar()
    {
        IntPtr ret = _new_TickBar();

        return ret;
    }

    public delegate void delete_TickBarDelegate(HandleRef jarg1);
    public static delete_TickBarDelegate _delete_TickBar;
    public static void delete_TickBar(HandleRef jarg1)
    {
        _delete_TickBar(jarg1);
    }

    public delegate IntPtr TickBar_GetFillDelegate(HandleRef jarg1);
    public static TickBar_GetFillDelegate _TickBar_GetFill;
    public static IntPtr TickBar_GetFill(HandleRef jarg1)
    {
        IntPtr ret = _TickBar_GetFill(jarg1);

        return ret;
    }

    public delegate void TickBar_SetFillDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TickBar_SetFillDelegate _TickBar_SetFill;
    public static void TickBar_SetFill(HandleRef jarg1, HandleRef jarg2)
    {
        _TickBar_SetFill(jarg1, jarg2);
    }

    public delegate bool TickBar_GetIsDirectionReversedDelegate(HandleRef jarg1);
    public static TickBar_GetIsDirectionReversedDelegate _TickBar_GetIsDirectionReversed;
    public static bool TickBar_GetIsDirectionReversed(HandleRef jarg1)
    {
        bool ret = _TickBar_GetIsDirectionReversed(jarg1);

        return ret;
    }

    public delegate void TickBar_SetIsDirectionReversedDelegate(HandleRef jarg1, bool jarg2);
    public static TickBar_SetIsDirectionReversedDelegate _TickBar_SetIsDirectionReversed;
    public static void TickBar_SetIsDirectionReversed(HandleRef jarg1, bool jarg2)
    {
        _TickBar_SetIsDirectionReversed(jarg1, jarg2);
    }

    public delegate bool TickBar_GetIsSelectionRangeEnabledDelegate(HandleRef jarg1);
    public static TickBar_GetIsSelectionRangeEnabledDelegate _TickBar_GetIsSelectionRangeEnabled;
    public static bool TickBar_GetIsSelectionRangeEnabled(HandleRef jarg1)
    {
        bool ret = _TickBar_GetIsSelectionRangeEnabled(jarg1);

        return ret;
    }

    public delegate void TickBar_SetIsSelectionRangeEnabledDelegate(HandleRef jarg1, bool jarg2);
    public static TickBar_SetIsSelectionRangeEnabledDelegate _TickBar_SetIsSelectionRangeEnabled;
    public static void TickBar_SetIsSelectionRangeEnabled(HandleRef jarg1, bool jarg2)
    {
        _TickBar_SetIsSelectionRangeEnabled(jarg1, jarg2);
    }

    public delegate float TickBar_GetMaximumDelegate(HandleRef jarg1);
    public static TickBar_GetMaximumDelegate _TickBar_GetMaximum;
    public static float TickBar_GetMaximum(HandleRef jarg1)
    {
        float ret = _TickBar_GetMaximum(jarg1);

        return ret;
    }

    public delegate void TickBar_SetMaximumDelegate(HandleRef jarg1, float jarg2);
    public static TickBar_SetMaximumDelegate _TickBar_SetMaximum;
    public static void TickBar_SetMaximum(HandleRef jarg1, float jarg2)
    {
        _TickBar_SetMaximum(jarg1, jarg2);
    }

    public delegate float TickBar_GetMinimumDelegate(HandleRef jarg1);
    public static TickBar_GetMinimumDelegate _TickBar_GetMinimum;
    public static float TickBar_GetMinimum(HandleRef jarg1)
    {
        float ret = _TickBar_GetMinimum(jarg1);

        return ret;
    }

    public delegate void TickBar_SetMinimumDelegate(HandleRef jarg1, float jarg2);
    public static TickBar_SetMinimumDelegate _TickBar_SetMinimum;
    public static void TickBar_SetMinimum(HandleRef jarg1, float jarg2)
    {
        _TickBar_SetMinimum(jarg1, jarg2);
    }

    public delegate int TickBar_GetPlacementDelegate(HandleRef jarg1);
    public static TickBar_GetPlacementDelegate _TickBar_GetPlacement;
    public static int TickBar_GetPlacement(HandleRef jarg1)
    {
        int ret = _TickBar_GetPlacement(jarg1);

        return ret;
    }

    public delegate void TickBar_SetPlacementDelegate(HandleRef jarg1, int jarg2);
    public static TickBar_SetPlacementDelegate _TickBar_SetPlacement;
    public static void TickBar_SetPlacement(HandleRef jarg1, int jarg2)
    {
        _TickBar_SetPlacement(jarg1, jarg2);
    }

    public delegate float TickBar_GetReservedSpaceDelegate(HandleRef jarg1);
    public static TickBar_GetReservedSpaceDelegate _TickBar_GetReservedSpace;
    public static float TickBar_GetReservedSpace(HandleRef jarg1)
    {
        float ret = _TickBar_GetReservedSpace(jarg1);

        return ret;
    }

    public delegate void TickBar_SetReservedSpaceDelegate(HandleRef jarg1, float jarg2);
    public static TickBar_SetReservedSpaceDelegate _TickBar_SetReservedSpace;
    public static void TickBar_SetReservedSpace(HandleRef jarg1, float jarg2)
    {
        _TickBar_SetReservedSpace(jarg1, jarg2);
    }

    public delegate float TickBar_GetSelectionEndDelegate(HandleRef jarg1);
    public static TickBar_GetSelectionEndDelegate _TickBar_GetSelectionEnd;
    public static float TickBar_GetSelectionEnd(HandleRef jarg1)
    {
        float ret = _TickBar_GetSelectionEnd(jarg1);

        return ret;
    }

    public delegate void TickBar_SetSelectionEndDelegate(HandleRef jarg1, float jarg2);
    public static TickBar_SetSelectionEndDelegate _TickBar_SetSelectionEnd;
    public static void TickBar_SetSelectionEnd(HandleRef jarg1, float jarg2)
    {
        _TickBar_SetSelectionEnd(jarg1, jarg2);
    }

    public delegate float TickBar_GetSelectionStartDelegate(HandleRef jarg1);
    public static TickBar_GetSelectionStartDelegate _TickBar_GetSelectionStart;
    public static float TickBar_GetSelectionStart(HandleRef jarg1)
    {
        float ret = _TickBar_GetSelectionStart(jarg1);

        return ret;
    }

    public delegate void TickBar_SetSelectionStartDelegate(HandleRef jarg1, float jarg2);
    public static TickBar_SetSelectionStartDelegate _TickBar_SetSelectionStart;
    public static void TickBar_SetSelectionStart(HandleRef jarg1, float jarg2)
    {
        _TickBar_SetSelectionStart(jarg1, jarg2);
    }

    public delegate float TickBar_GetTickFrequencyDelegate(HandleRef jarg1);
    public static TickBar_GetTickFrequencyDelegate _TickBar_GetTickFrequency;
    public static float TickBar_GetTickFrequency(HandleRef jarg1)
    {
        float ret = _TickBar_GetTickFrequency(jarg1);

        return ret;
    }

    public delegate void TickBar_SetTickFrequencyDelegate(HandleRef jarg1, float jarg2);
    public static TickBar_SetTickFrequencyDelegate _TickBar_SetTickFrequency;
    public static void TickBar_SetTickFrequency(HandleRef jarg1, float jarg2)
    {
        _TickBar_SetTickFrequency(jarg1, jarg2);
    }

    public delegate IntPtr TickBar_GetTicksDelegate(HandleRef jarg1);
    public static TickBar_GetTicksDelegate _TickBar_GetTicks;
    public static IntPtr TickBar_GetTicks(HandleRef jarg1)
    {
        IntPtr ret = _TickBar_GetTicks(jarg1);

        return ret;
    }

    public delegate void TickBar_SetTicksDelegate(HandleRef jarg1, IntPtr jarg2);
    public static TickBar_SetTicksDelegate _TickBar_SetTicks;
    public static void TickBar_SetTicks(HandleRef jarg1, IntPtr jarg2)
    {
        _TickBar_SetTicks(jarg1, jarg2);
    }

    public delegate IntPtr new_ToolBarDelegate();
    public static new_ToolBarDelegate _new_ToolBar;
    public static IntPtr new_ToolBar()
    {
        IntPtr ret = _new_ToolBar();

        return ret;
    }

    public delegate void delete_ToolBarDelegate(HandleRef jarg1);
    public static delete_ToolBarDelegate _delete_ToolBar;
    public static void delete_ToolBar(HandleRef jarg1)
    {
        _delete_ToolBar(jarg1);
    }

    public delegate int ToolBar_GetOverflowModeDelegate(HandleRef jarg1);
    public static ToolBar_GetOverflowModeDelegate _ToolBar_GetOverflowMode;
    public static int ToolBar_GetOverflowMode(HandleRef jarg1)
    {
        int ret = _ToolBar_GetOverflowMode(jarg1);

        return ret;
    }

    public delegate void ToolBar_SetOverflowModeDelegate(HandleRef jarg1, int jarg2);
    public static ToolBar_SetOverflowModeDelegate _ToolBar_SetOverflowMode;
    public static void ToolBar_SetOverflowMode(HandleRef jarg1, int jarg2)
    {
        _ToolBar_SetOverflowMode(jarg1, jarg2);
    }

    public delegate bool ToolBar_GetIsOverflowItemDelegate(HandleRef jarg1);
    public static ToolBar_GetIsOverflowItemDelegate _ToolBar_GetIsOverflowItem;
    public static bool ToolBar_GetIsOverflowItem(HandleRef jarg1)
    {
        bool ret = _ToolBar_GetIsOverflowItem(jarg1);

        return ret;
    }

    public delegate void ToolBar_SetIsOverflowItemDelegate(HandleRef jarg1, bool jarg2);
    public static ToolBar_SetIsOverflowItemDelegate _ToolBar_SetIsOverflowItem;
    public static void ToolBar_SetIsOverflowItem(HandleRef jarg1, bool jarg2)
    {
        _ToolBar_SetIsOverflowItem(jarg1, jarg2);
    }

    public delegate int ToolBar_GetBandIndexDelegate(HandleRef jarg1);
    public static ToolBar_GetBandIndexDelegate _ToolBar_GetBandIndex;
    public static int ToolBar_GetBandIndex(HandleRef jarg1)
    {
        int ret = _ToolBar_GetBandIndex(jarg1);

        return ret;
    }

    public delegate void ToolBar_SetBandIndexDelegate(HandleRef jarg1, int jarg2);
    public static ToolBar_SetBandIndexDelegate _ToolBar_SetBandIndex;
    public static void ToolBar_SetBandIndex(HandleRef jarg1, int jarg2)
    {
        _ToolBar_SetBandIndex(jarg1, jarg2);
    }

    public delegate int ToolBar_GetBandDelegate(HandleRef jarg1);
    public static ToolBar_GetBandDelegate _ToolBar_GetBand;
    public static int ToolBar_GetBand(HandleRef jarg1)
    {
        int ret = _ToolBar_GetBand(jarg1);

        return ret;
    }

    public delegate void ToolBar_SetBandDelegate(HandleRef jarg1, int jarg2);
    public static ToolBar_SetBandDelegate _ToolBar_SetBand;
    public static void ToolBar_SetBand(HandleRef jarg1, int jarg2)
    {
        _ToolBar_SetBand(jarg1, jarg2);
    }

    public delegate bool ToolBar_GetHasOverflowItemsDelegate(HandleRef jarg1);
    public static ToolBar_GetHasOverflowItemsDelegate _ToolBar_GetHasOverflowItems;
    public static bool ToolBar_GetHasOverflowItems(HandleRef jarg1)
    {
        bool ret = _ToolBar_GetHasOverflowItems(jarg1);

        return ret;
    }

    public delegate bool ToolBar_GetIsOverflowOpenDelegate(HandleRef jarg1);
    public static ToolBar_GetIsOverflowOpenDelegate _ToolBar_GetIsOverflowOpen;
    public static bool ToolBar_GetIsOverflowOpen(HandleRef jarg1)
    {
        bool ret = _ToolBar_GetIsOverflowOpen(jarg1);

        return ret;
    }

    public delegate int ToolBar_GetOrientationDelegate(HandleRef jarg1);
    public static ToolBar_GetOrientationDelegate _ToolBar_GetOrientation;
    public static int ToolBar_GetOrientation(HandleRef jarg1)
    {
        int ret = _ToolBar_GetOrientation(jarg1);

        return ret;
    }

    public delegate IntPtr ToolBar_GetPanelDelegate(HandleRef jarg1);
    public static ToolBar_GetPanelDelegate _ToolBar_GetPanel;
    public static IntPtr ToolBar_GetPanel(HandleRef jarg1)
    {
        IntPtr ret = _ToolBar_GetPanel(jarg1);

        return ret;
    }

    public delegate IntPtr ToolBar_GetOverflowPanelDelegate(HandleRef jarg1);
    public static ToolBar_GetOverflowPanelDelegate _ToolBar_GetOverflowPanel;
    public static IntPtr ToolBar_GetOverflowPanel(HandleRef jarg1)
    {
        IntPtr ret = _ToolBar_GetOverflowPanel(jarg1);

        return ret;
    }

    public delegate void ToolBar_UpdateHasOverflowItemsDelegate(HandleRef jarg1, bool jarg2);
    public static ToolBar_UpdateHasOverflowItemsDelegate _ToolBar_UpdateHasOverflowItems;
    public static void ToolBar_UpdateHasOverflowItems(HandleRef jarg1, bool jarg2)
    {
        _ToolBar_UpdateHasOverflowItems(jarg1, jarg2);
    }

    public delegate void ToolBar_ButtonStyleKey_setDelegate(HandleRef jarg1);
    public static ToolBar_ButtonStyleKey_setDelegate _ToolBar_ButtonStyleKey_set;
    public static void ToolBar_ButtonStyleKey_set(HandleRef jarg1)
    {
        _ToolBar_ButtonStyleKey_set(jarg1);
    }

    public delegate IntPtr ToolBar_ButtonStyleKey_getDelegate();
    public static ToolBar_ButtonStyleKey_getDelegate _ToolBar_ButtonStyleKey_get;
    public static IntPtr ToolBar_ButtonStyleKey_get()
    {
        IntPtr ret = _ToolBar_ButtonStyleKey_get();

        return ret;
    }

    public delegate void ToolBar_ToggleButtonStyleKey_setDelegate(HandleRef jarg1);
    public static ToolBar_ToggleButtonStyleKey_setDelegate _ToolBar_ToggleButtonStyleKey_set;
    public static void ToolBar_ToggleButtonStyleKey_set(HandleRef jarg1)
    {
        _ToolBar_ToggleButtonStyleKey_set(jarg1);
    }

    public delegate IntPtr ToolBar_ToggleButtonStyleKey_getDelegate();
    public static ToolBar_ToggleButtonStyleKey_getDelegate _ToolBar_ToggleButtonStyleKey_get;
    public static IntPtr ToolBar_ToggleButtonStyleKey_get()
    {
        IntPtr ret = _ToolBar_ToggleButtonStyleKey_get();

        return ret;
    }

    public delegate void ToolBar_CheckBoxStyleKey_setDelegate(HandleRef jarg1);
    public static ToolBar_CheckBoxStyleKey_setDelegate _ToolBar_CheckBoxStyleKey_set;
    public static void ToolBar_CheckBoxStyleKey_set(HandleRef jarg1)
    {
        _ToolBar_CheckBoxStyleKey_set(jarg1);
    }

    public delegate IntPtr ToolBar_CheckBoxStyleKey_getDelegate();
    public static ToolBar_CheckBoxStyleKey_getDelegate _ToolBar_CheckBoxStyleKey_get;
    public static IntPtr ToolBar_CheckBoxStyleKey_get()
    {
        IntPtr ret = _ToolBar_CheckBoxStyleKey_get();

        return ret;
    }

    public delegate void ToolBar_RadioButtonStyleKey_setDelegate(HandleRef jarg1);
    public static ToolBar_RadioButtonStyleKey_setDelegate _ToolBar_RadioButtonStyleKey_set;
    public static void ToolBar_RadioButtonStyleKey_set(HandleRef jarg1)
    {
        _ToolBar_RadioButtonStyleKey_set(jarg1);
    }

    public delegate IntPtr ToolBar_RadioButtonStyleKey_getDelegate();
    public static ToolBar_RadioButtonStyleKey_getDelegate _ToolBar_RadioButtonStyleKey_get;
    public static IntPtr ToolBar_RadioButtonStyleKey_get()
    {
        IntPtr ret = _ToolBar_RadioButtonStyleKey_get();

        return ret;
    }

    public delegate void ToolBar_TextBoxStyleKey_setDelegate(HandleRef jarg1);
    public static ToolBar_TextBoxStyleKey_setDelegate _ToolBar_TextBoxStyleKey_set;
    public static void ToolBar_TextBoxStyleKey_set(HandleRef jarg1)
    {
        _ToolBar_TextBoxStyleKey_set(jarg1);
    }

    public delegate IntPtr ToolBar_TextBoxStyleKey_getDelegate();
    public static ToolBar_TextBoxStyleKey_getDelegate _ToolBar_TextBoxStyleKey_get;
    public static IntPtr ToolBar_TextBoxStyleKey_get()
    {
        IntPtr ret = _ToolBar_TextBoxStyleKey_get();

        return ret;
    }

    public delegate void ToolBar_ComboBoxStyleKey_setDelegate(HandleRef jarg1);
    public static ToolBar_ComboBoxStyleKey_setDelegate _ToolBar_ComboBoxStyleKey_set;
    public static void ToolBar_ComboBoxStyleKey_set(HandleRef jarg1)
    {
        _ToolBar_ComboBoxStyleKey_set(jarg1);
    }

    public delegate IntPtr ToolBar_ComboBoxStyleKey_getDelegate();
    public static ToolBar_ComboBoxStyleKey_getDelegate _ToolBar_ComboBoxStyleKey_get;
    public static IntPtr ToolBar_ComboBoxStyleKey_get()
    {
        IntPtr ret = _ToolBar_ComboBoxStyleKey_get();

        return ret;
    }

    public delegate void ToolBar_SeparatorStyleKey_setDelegate(HandleRef jarg1);
    public static ToolBar_SeparatorStyleKey_setDelegate _ToolBar_SeparatorStyleKey_set;
    public static void ToolBar_SeparatorStyleKey_set(HandleRef jarg1)
    {
        _ToolBar_SeparatorStyleKey_set(jarg1);
    }

    public delegate IntPtr ToolBar_SeparatorStyleKey_getDelegate();
    public static ToolBar_SeparatorStyleKey_getDelegate _ToolBar_SeparatorStyleKey_get;
    public static IntPtr ToolBar_SeparatorStyleKey_get()
    {
        IntPtr ret = _ToolBar_SeparatorStyleKey_get();

        return ret;
    }

    public delegate void ToolBar_MenuStyleKey_setDelegate(HandleRef jarg1);
    public static ToolBar_MenuStyleKey_setDelegate _ToolBar_MenuStyleKey_set;
    public static void ToolBar_MenuStyleKey_set(HandleRef jarg1)
    {
        _ToolBar_MenuStyleKey_set(jarg1);
    }

    public delegate IntPtr ToolBar_MenuStyleKey_getDelegate();
    public static ToolBar_MenuStyleKey_getDelegate _ToolBar_MenuStyleKey_get;
    public static IntPtr ToolBar_MenuStyleKey_get()
    {
        IntPtr ret = _ToolBar_MenuStyleKey_get();

        return ret;
    }

    public delegate IntPtr new_ToolBarOverflowPanelDelegate();
    public static new_ToolBarOverflowPanelDelegate _new_ToolBarOverflowPanel;
    public static IntPtr new_ToolBarOverflowPanel()
    {
        IntPtr ret = _new_ToolBarOverflowPanel();

        return ret;
    }

    public delegate float ToolBarOverflowPanel_GetWrapWidthDelegate(HandleRef jarg1);
    public static ToolBarOverflowPanel_GetWrapWidthDelegate _ToolBarOverflowPanel_GetWrapWidth;
    public static float ToolBarOverflowPanel_GetWrapWidth(HandleRef jarg1)
    {
        float ret = _ToolBarOverflowPanel_GetWrapWidth(jarg1);

        return ret;
    }

    public delegate void ToolBarOverflowPanel_SetWrapWidthDelegate(HandleRef jarg1, float jarg2);
    public static ToolBarOverflowPanel_SetWrapWidthDelegate _ToolBarOverflowPanel_SetWrapWidth;
    public static void ToolBarOverflowPanel_SetWrapWidth(HandleRef jarg1, float jarg2)
    {
        _ToolBarOverflowPanel_SetWrapWidth(jarg1, jarg2);
    }

    public delegate void delete_ToolBarOverflowPanelDelegate(HandleRef jarg1);
    public static delete_ToolBarOverflowPanelDelegate _delete_ToolBarOverflowPanel;
    public static void delete_ToolBarOverflowPanel(HandleRef jarg1)
    {
        _delete_ToolBarOverflowPanel(jarg1);
    }

    public delegate IntPtr new_ToolBarPanelDelegate();
    public static new_ToolBarPanelDelegate _new_ToolBarPanel;
    public static IntPtr new_ToolBarPanel()
    {
        IntPtr ret = _new_ToolBarPanel();

        return ret;
    }

    public delegate void delete_ToolBarPanelDelegate(HandleRef jarg1);
    public static delete_ToolBarPanelDelegate _delete_ToolBarPanel;
    public static void delete_ToolBarPanel(HandleRef jarg1)
    {
        _delete_ToolBarPanel(jarg1);
    }

    public delegate IntPtr new_ToolBarTrayDelegate();
    public static new_ToolBarTrayDelegate _new_ToolBarTray;
    public static IntPtr new_ToolBarTray()
    {
        IntPtr ret = _new_ToolBarTray();

        return ret;
    }

    public delegate void delete_ToolBarTrayDelegate(HandleRef jarg1);
    public static delete_ToolBarTrayDelegate _delete_ToolBarTray;
    public static void delete_ToolBarTray(HandleRef jarg1)
    {
        _delete_ToolBarTray(jarg1);
    }

    public delegate bool ToolBarTray_GetIsLockedDelegate(HandleRef jarg1);
    public static ToolBarTray_GetIsLockedDelegate _ToolBarTray_GetIsLocked;
    public static bool ToolBarTray_GetIsLocked(HandleRef jarg1)
    {
        bool ret = _ToolBarTray_GetIsLocked(jarg1);

        return ret;
    }

    public delegate void ToolBarTray_SetIsLockedDelegate(HandleRef jarg1, bool jarg2);
    public static ToolBarTray_SetIsLockedDelegate _ToolBarTray_SetIsLocked;
    public static void ToolBarTray_SetIsLocked(HandleRef jarg1, bool jarg2)
    {
        _ToolBarTray_SetIsLocked(jarg1, jarg2);
    }

    public delegate IntPtr ToolBarTray_GetBackgroundDelegate(HandleRef jarg1);
    public static ToolBarTray_GetBackgroundDelegate _ToolBarTray_GetBackground;
    public static IntPtr ToolBarTray_GetBackground(HandleRef jarg1)
    {
        IntPtr ret = _ToolBarTray_GetBackground(jarg1);

        return ret;
    }

    public delegate void ToolBarTray_SetBackgroundDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ToolBarTray_SetBackgroundDelegate _ToolBarTray_SetBackground;
    public static void ToolBarTray_SetBackground(HandleRef jarg1, HandleRef jarg2)
    {
        _ToolBarTray_SetBackground(jarg1, jarg2);
    }

    public delegate int ToolBarTray_GetOrientationDelegate(HandleRef jarg1);
    public static ToolBarTray_GetOrientationDelegate _ToolBarTray_GetOrientation;
    public static int ToolBarTray_GetOrientation(HandleRef jarg1)
    {
        int ret = _ToolBarTray_GetOrientation(jarg1);

        return ret;
    }

    public delegate void ToolBarTray_SetOrientationDelegate(HandleRef jarg1, int jarg2);
    public static ToolBarTray_SetOrientationDelegate _ToolBarTray_SetOrientation;
    public static void ToolBarTray_SetOrientation(HandleRef jarg1, int jarg2)
    {
        _ToolBarTray_SetOrientation(jarg1, jarg2);
    }

    public delegate IntPtr new_ToolTipDelegate();
    public static new_ToolTipDelegate _new_ToolTip;
    public static IntPtr new_ToolTip()
    {
        IntPtr ret = _new_ToolTip();

        return ret;
    }

    public delegate IntPtr ToolTip_GetCustomPopupPlacementCallbackDelegate(HandleRef jarg1);
    public static ToolTip_GetCustomPopupPlacementCallbackDelegate _ToolTip_GetCustomPopupPlacementCallback;
    public static IntPtr ToolTip_GetCustomPopupPlacementCallback(HandleRef jarg1)
    {
        IntPtr ret = _ToolTip_GetCustomPopupPlacementCallback(jarg1);

        return ret;
    }

    public delegate void ToolTip_SetCustomPopupPlacementCallbackDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ToolTip_SetCustomPopupPlacementCallbackDelegate _ToolTip_SetCustomPopupPlacementCallback;
    public static void ToolTip_SetCustomPopupPlacementCallback(HandleRef jarg1, HandleRef jarg2)
    {
        _ToolTip_SetCustomPopupPlacementCallback(jarg1, jarg2);
    }

    public delegate bool ToolTip_GetHasDropShadowDelegate(HandleRef jarg1);
    public static ToolTip_GetHasDropShadowDelegate _ToolTip_GetHasDropShadow;
    public static bool ToolTip_GetHasDropShadow(HandleRef jarg1)
    {
        bool ret = _ToolTip_GetHasDropShadow(jarg1);

        return ret;
    }

    public delegate void ToolTip_SetHasDropShadowDelegate(HandleRef jarg1, bool jarg2);
    public static ToolTip_SetHasDropShadowDelegate _ToolTip_SetHasDropShadow;
    public static void ToolTip_SetHasDropShadow(HandleRef jarg1, bool jarg2)
    {
        _ToolTip_SetHasDropShadow(jarg1, jarg2);
    }

    public delegate float ToolTip_GetHorizontalOffsetDelegate(HandleRef jarg1);
    public static ToolTip_GetHorizontalOffsetDelegate _ToolTip_GetHorizontalOffset;
    public static float ToolTip_GetHorizontalOffset(HandleRef jarg1)
    {
        float ret = _ToolTip_GetHorizontalOffset(jarg1);

        return ret;
    }

    public delegate void ToolTip_SetHorizontalOffsetDelegate(HandleRef jarg1, float jarg2);
    public static ToolTip_SetHorizontalOffsetDelegate _ToolTip_SetHorizontalOffset;
    public static void ToolTip_SetHorizontalOffset(HandleRef jarg1, float jarg2)
    {
        _ToolTip_SetHorizontalOffset(jarg1, jarg2);
    }

    public delegate bool ToolTip_GetIsOpenDelegate(HandleRef jarg1);
    public static ToolTip_GetIsOpenDelegate _ToolTip_GetIsOpen;
    public static bool ToolTip_GetIsOpen(HandleRef jarg1)
    {
        bool ret = _ToolTip_GetIsOpen(jarg1);

        return ret;
    }

    public delegate void ToolTip_SetIsOpenDelegate(HandleRef jarg1, bool jarg2);
    public static ToolTip_SetIsOpenDelegate _ToolTip_SetIsOpen;
    public static void ToolTip_SetIsOpen(HandleRef jarg1, bool jarg2)
    {
        _ToolTip_SetIsOpen(jarg1, jarg2);
    }

    public delegate int ToolTip_GetPlacementDelegate(HandleRef jarg1);
    public static ToolTip_GetPlacementDelegate _ToolTip_GetPlacement;
    public static int ToolTip_GetPlacement(HandleRef jarg1)
    {
        int ret = _ToolTip_GetPlacement(jarg1);

        return ret;
    }

    public delegate void ToolTip_SetPlacementDelegate(HandleRef jarg1, int jarg2);
    public static ToolTip_SetPlacementDelegate _ToolTip_SetPlacement;
    public static void ToolTip_SetPlacement(HandleRef jarg1, int jarg2)
    {
        _ToolTip_SetPlacement(jarg1, jarg2);
    }

    public delegate IntPtr ToolTip_GetPlacementRectangleDelegate(HandleRef jarg1);
    public static ToolTip_GetPlacementRectangleDelegate _ToolTip_GetPlacementRectangle;
    public static IntPtr ToolTip_GetPlacementRectangle(HandleRef jarg1)
    {
        IntPtr ret = _ToolTip_GetPlacementRectangle(jarg1);

        return ret;
    }

    public delegate void ToolTip_SetPlacementRectangleDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ToolTip_SetPlacementRectangleDelegate _ToolTip_SetPlacementRectangle;
    public static void ToolTip_SetPlacementRectangle(HandleRef jarg1, HandleRef jarg2)
    {
        _ToolTip_SetPlacementRectangle(jarg1, jarg2);
    }

    public delegate IntPtr ToolTip_GetPlacementTargetDelegate(HandleRef jarg1);
    public static ToolTip_GetPlacementTargetDelegate _ToolTip_GetPlacementTarget;
    public static IntPtr ToolTip_GetPlacementTarget(HandleRef jarg1)
    {
        IntPtr ret = _ToolTip_GetPlacementTarget(jarg1);

        return ret;
    }

    public delegate void ToolTip_SetPlacementTargetDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ToolTip_SetPlacementTargetDelegate _ToolTip_SetPlacementTarget;
    public static void ToolTip_SetPlacementTarget(HandleRef jarg1, HandleRef jarg2)
    {
        _ToolTip_SetPlacementTarget(jarg1, jarg2);
    }

    public delegate bool ToolTip_GetStaysOpenDelegate(HandleRef jarg1);
    public static ToolTip_GetStaysOpenDelegate _ToolTip_GetStaysOpen;
    public static bool ToolTip_GetStaysOpen(HandleRef jarg1)
    {
        bool ret = _ToolTip_GetStaysOpen(jarg1);

        return ret;
    }

    public delegate void ToolTip_SetStaysOpenDelegate(HandleRef jarg1, bool jarg2);
    public static ToolTip_SetStaysOpenDelegate _ToolTip_SetStaysOpen;
    public static void ToolTip_SetStaysOpen(HandleRef jarg1, bool jarg2)
    {
        _ToolTip_SetStaysOpen(jarg1, jarg2);
    }

    public delegate float ToolTip_GetVerticalOffsetDelegate(HandleRef jarg1);
    public static ToolTip_GetVerticalOffsetDelegate _ToolTip_GetVerticalOffset;
    public static float ToolTip_GetVerticalOffset(HandleRef jarg1)
    {
        float ret = _ToolTip_GetVerticalOffset(jarg1);

        return ret;
    }

    public delegate void ToolTip_SetVerticalOffsetDelegate(HandleRef jarg1, float jarg2);
    public static ToolTip_SetVerticalOffsetDelegate _ToolTip_SetVerticalOffset;
    public static void ToolTip_SetVerticalOffset(HandleRef jarg1, float jarg2)
    {
        _ToolTip_SetVerticalOffset(jarg1, jarg2);
    }

    public delegate IntPtr ToolTip_GetPopupDelegate(HandleRef jarg1);
    public static ToolTip_GetPopupDelegate _ToolTip_GetPopup;
    public static IntPtr ToolTip_GetPopup(HandleRef jarg1)
    {
        IntPtr ret = _ToolTip_GetPopup(jarg1);

        return ret;
    }

    public delegate void delete_ToolTipDelegate(HandleRef jarg1);
    public static delete_ToolTipDelegate _delete_ToolTip;
    public static void delete_ToolTip(HandleRef jarg1)
    {
        _delete_ToolTip(jarg1);
    }

    public delegate void ToolTipService_ToolTipClosingEvent_setDelegate(HandleRef jarg1);
    public static ToolTipService_ToolTipClosingEvent_setDelegate _ToolTipService_ToolTipClosingEvent_set;
    public static void ToolTipService_ToolTipClosingEvent_set(HandleRef jarg1)
    {
        _ToolTipService_ToolTipClosingEvent_set(jarg1);
    }

    public delegate IntPtr ToolTipService_ToolTipClosingEvent_getDelegate();
    public static ToolTipService_ToolTipClosingEvent_getDelegate _ToolTipService_ToolTipClosingEvent_get;
    public static IntPtr ToolTipService_ToolTipClosingEvent_get()
    {
        IntPtr ret = _ToolTipService_ToolTipClosingEvent_get();

        return ret;
    }

    public delegate void ToolTipService_ToolTipOpeningEvent_setDelegate(HandleRef jarg1);
    public static ToolTipService_ToolTipOpeningEvent_setDelegate _ToolTipService_ToolTipOpeningEvent_set;
    public static void ToolTipService_ToolTipOpeningEvent_set(HandleRef jarg1)
    {
        _ToolTipService_ToolTipOpeningEvent_set(jarg1);
    }

    public delegate IntPtr ToolTipService_ToolTipOpeningEvent_getDelegate();
    public static ToolTipService_ToolTipOpeningEvent_getDelegate _ToolTipService_ToolTipOpeningEvent_get;
    public static IntPtr ToolTipService_ToolTipOpeningEvent_get()
    {
        IntPtr ret = _ToolTipService_ToolTipOpeningEvent_get();

        return ret;
    }

    public delegate int ToolTipService_GetBetweenShowDelayDelegate(HandleRef jarg1);
    public static ToolTipService_GetBetweenShowDelayDelegate _ToolTipService_GetBetweenShowDelay;
    public static int ToolTipService_GetBetweenShowDelay(HandleRef jarg1)
    {
        int ret = _ToolTipService_GetBetweenShowDelay(jarg1);

        return ret;
    }

    public delegate void ToolTipService_SetBetweenShowDelayDelegate(HandleRef jarg1, int jarg2);
    public static ToolTipService_SetBetweenShowDelayDelegate _ToolTipService_SetBetweenShowDelay;
    public static void ToolTipService_SetBetweenShowDelay(HandleRef jarg1, int jarg2)
    {
        _ToolTipService_SetBetweenShowDelay(jarg1, jarg2);
    }

    public delegate bool ToolTipService_GetHasDropShadowDelegate(HandleRef jarg1);
    public static ToolTipService_GetHasDropShadowDelegate _ToolTipService_GetHasDropShadow;
    public static bool ToolTipService_GetHasDropShadow(HandleRef jarg1)
    {
        bool ret = _ToolTipService_GetHasDropShadow(jarg1);

        return ret;
    }

    public delegate void ToolTipService_SetHasDropShadowDelegate(HandleRef jarg1, bool jarg2);
    public static ToolTipService_SetHasDropShadowDelegate _ToolTipService_SetHasDropShadow;
    public static void ToolTipService_SetHasDropShadow(HandleRef jarg1, bool jarg2)
    {
        _ToolTipService_SetHasDropShadow(jarg1, jarg2);
    }

    public delegate float ToolTipService_GetHorizontalOffsetDelegate(HandleRef jarg1);
    public static ToolTipService_GetHorizontalOffsetDelegate _ToolTipService_GetHorizontalOffset;
    public static float ToolTipService_GetHorizontalOffset(HandleRef jarg1)
    {
        float ret = _ToolTipService_GetHorizontalOffset(jarg1);

        return ret;
    }

    public delegate void ToolTipService_SetHorizontalOffsetDelegate(HandleRef jarg1, float jarg2);
    public static ToolTipService_SetHorizontalOffsetDelegate _ToolTipService_SetHorizontalOffset;
    public static void ToolTipService_SetHorizontalOffset(HandleRef jarg1, float jarg2)
    {
        _ToolTipService_SetHorizontalOffset(jarg1, jarg2);
    }

    public delegate int ToolTipService_GetInitialShowDelayDelegate(HandleRef jarg1);
    public static ToolTipService_GetInitialShowDelayDelegate _ToolTipService_GetInitialShowDelay;
    public static int ToolTipService_GetInitialShowDelay(HandleRef jarg1)
    {
        int ret = _ToolTipService_GetInitialShowDelay(jarg1);

        return ret;
    }

    public delegate void ToolTipService_SetInitialShowDelayDelegate(HandleRef jarg1, int jarg2);
    public static ToolTipService_SetInitialShowDelayDelegate _ToolTipService_SetInitialShowDelay;
    public static void ToolTipService_SetInitialShowDelay(HandleRef jarg1, int jarg2)
    {
        _ToolTipService_SetInitialShowDelay(jarg1, jarg2);
    }

    public delegate bool ToolTipService_GetIsEnabledDelegate(HandleRef jarg1);
    public static ToolTipService_GetIsEnabledDelegate _ToolTipService_GetIsEnabled;
    public static bool ToolTipService_GetIsEnabled(HandleRef jarg1)
    {
        bool ret = _ToolTipService_GetIsEnabled(jarg1);

        return ret;
    }

    public delegate void ToolTipService_SetIsEnabledDelegate(HandleRef jarg1, bool jarg2);
    public static ToolTipService_SetIsEnabledDelegate _ToolTipService_SetIsEnabled;
    public static void ToolTipService_SetIsEnabled(HandleRef jarg1, bool jarg2)
    {
        _ToolTipService_SetIsEnabled(jarg1, jarg2);
    }

    public delegate bool ToolTipService_GetIsOpenDelegate(HandleRef jarg1);
    public static ToolTipService_GetIsOpenDelegate _ToolTipService_GetIsOpen;
    public static bool ToolTipService_GetIsOpen(HandleRef jarg1)
    {
        bool ret = _ToolTipService_GetIsOpen(jarg1);

        return ret;
    }

    public delegate void ToolTipService_SetIsOpenDelegate(HandleRef jarg1, bool jarg2);
    public static ToolTipService_SetIsOpenDelegate _ToolTipService_SetIsOpen;
    public static void ToolTipService_SetIsOpen(HandleRef jarg1, bool jarg2)
    {
        _ToolTipService_SetIsOpen(jarg1, jarg2);
    }

    public delegate int ToolTipService_GetPlacementDelegate(HandleRef jarg1);
    public static ToolTipService_GetPlacementDelegate _ToolTipService_GetPlacement;
    public static int ToolTipService_GetPlacement(HandleRef jarg1)
    {
        int ret = _ToolTipService_GetPlacement(jarg1);

        return ret;
    }

    public delegate void ToolTipService_SetPlacementDelegate(HandleRef jarg1, int jarg2);
    public static ToolTipService_SetPlacementDelegate _ToolTipService_SetPlacement;
    public static void ToolTipService_SetPlacement(HandleRef jarg1, int jarg2)
    {
        _ToolTipService_SetPlacement(jarg1, jarg2);
    }

    public delegate IntPtr ToolTipService_GetPlacementRectangleDelegate(HandleRef jarg1);
    public static ToolTipService_GetPlacementRectangleDelegate _ToolTipService_GetPlacementRectangle;
    public static IntPtr ToolTipService_GetPlacementRectangle(HandleRef jarg1)
    {
        IntPtr ret = _ToolTipService_GetPlacementRectangle(jarg1);

        return ret;
    }

    public delegate void ToolTipService_SetPlacementRectangleDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ToolTipService_SetPlacementRectangleDelegate _ToolTipService_SetPlacementRectangle;
    public static void ToolTipService_SetPlacementRectangle(HandleRef jarg1, HandleRef jarg2)
    {
        _ToolTipService_SetPlacementRectangle(jarg1, jarg2);
    }

    public delegate IntPtr ToolTipService_GetPlacementTargetDelegate(HandleRef jarg1);
    public static ToolTipService_GetPlacementTargetDelegate _ToolTipService_GetPlacementTarget;
    public static IntPtr ToolTipService_GetPlacementTarget(HandleRef jarg1)
    {
        IntPtr ret = _ToolTipService_GetPlacementTarget(jarg1);

        return ret;
    }

    public delegate void ToolTipService_SetPlacementTargetDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ToolTipService_SetPlacementTargetDelegate _ToolTipService_SetPlacementTarget;
    public static void ToolTipService_SetPlacementTarget(HandleRef jarg1, HandleRef jarg2)
    {
        _ToolTipService_SetPlacementTarget(jarg1, jarg2);
    }

    public delegate int ToolTipService_GetShowDurationDelegate(HandleRef jarg1);
    public static ToolTipService_GetShowDurationDelegate _ToolTipService_GetShowDuration;
    public static int ToolTipService_GetShowDuration(HandleRef jarg1)
    {
        int ret = _ToolTipService_GetShowDuration(jarg1);

        return ret;
    }

    public delegate void ToolTipService_SetShowDurationDelegate(HandleRef jarg1, int jarg2);
    public static ToolTipService_SetShowDurationDelegate _ToolTipService_SetShowDuration;
    public static void ToolTipService_SetShowDuration(HandleRef jarg1, int jarg2)
    {
        _ToolTipService_SetShowDuration(jarg1, jarg2);
    }

    public delegate bool ToolTipService_GetShowOnDisabledDelegate(HandleRef jarg1);
    public static ToolTipService_GetShowOnDisabledDelegate _ToolTipService_GetShowOnDisabled;
    public static bool ToolTipService_GetShowOnDisabled(HandleRef jarg1)
    {
        bool ret = _ToolTipService_GetShowOnDisabled(jarg1);

        return ret;
    }

    public delegate void ToolTipService_SetShowOnDisabledDelegate(HandleRef jarg1, bool jarg2);
    public static ToolTipService_SetShowOnDisabledDelegate _ToolTipService_SetShowOnDisabled;
    public static void ToolTipService_SetShowOnDisabled(HandleRef jarg1, bool jarg2)
    {
        _ToolTipService_SetShowOnDisabled(jarg1, jarg2);
    }

    public delegate IntPtr ToolTipService_GetToolTipDelegate(HandleRef jarg1);
    public static ToolTipService_GetToolTipDelegate _ToolTipService_GetToolTip;
    public static IntPtr ToolTipService_GetToolTip(HandleRef jarg1)
    {
        IntPtr ret = _ToolTipService_GetToolTip(jarg1);

        return ret;
    }

    public delegate void ToolTipService_SetToolTipDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ToolTipService_SetToolTipDelegate _ToolTipService_SetToolTip;
    public static void ToolTipService_SetToolTip(HandleRef jarg1, HandleRef jarg2)
    {
        _ToolTipService_SetToolTip(jarg1, jarg2);
    }

    public delegate float ToolTipService_GetVerticalOffsetDelegate(HandleRef jarg1);
    public static ToolTipService_GetVerticalOffsetDelegate _ToolTipService_GetVerticalOffset;
    public static float ToolTipService_GetVerticalOffset(HandleRef jarg1)
    {
        float ret = _ToolTipService_GetVerticalOffset(jarg1);

        return ret;
    }

    public delegate void ToolTipService_SetVerticalOffsetDelegate(HandleRef jarg1, float jarg2);
    public static ToolTipService_SetVerticalOffsetDelegate _ToolTipService_SetVerticalOffset;
    public static void ToolTipService_SetVerticalOffset(HandleRef jarg1, float jarg2)
    {
        _ToolTipService_SetVerticalOffset(jarg1, jarg2);
    }

    public delegate IntPtr ToolTipService_FindValidToolTipOwnerDelegate(HandleRef jarg1);
    public static ToolTipService_FindValidToolTipOwnerDelegate _ToolTipService_FindValidToolTipOwner;
    public static IntPtr ToolTipService_FindValidToolTipOwner(HandleRef jarg1)
    {
        IntPtr ret = _ToolTipService_FindValidToolTipOwner(jarg1);

        return ret;
    }

    public delegate IntPtr new_ToolTipServiceDelegate();
    public static new_ToolTipServiceDelegate _new_ToolTipService;
    public static IntPtr new_ToolTipService()
    {
        IntPtr ret = _new_ToolTipService();

        return ret;
    }

    public delegate void delete_ToolTipServiceDelegate(HandleRef jarg1);
    public static delete_ToolTipServiceDelegate _delete_ToolTipService;
    public static void delete_ToolTipService(HandleRef jarg1)
    {
        _delete_ToolTipService(jarg1);
    }

    public delegate IntPtr new_TrackDelegate();
    public static new_TrackDelegate _new_Track;
    public static IntPtr new_Track()
    {
        IntPtr ret = _new_Track();

        return ret;
    }

    public delegate void delete_TrackDelegate(HandleRef jarg1);
    public static delete_TrackDelegate _delete_Track;
    public static void delete_Track(HandleRef jarg1)
    {
        _delete_Track(jarg1);
    }

    public delegate IntPtr Track_GetDecreaseRepeatButtonDelegate(HandleRef jarg1);
    public static Track_GetDecreaseRepeatButtonDelegate _Track_GetDecreaseRepeatButton;
    public static IntPtr Track_GetDecreaseRepeatButton(HandleRef jarg1)
    {
        IntPtr ret = _Track_GetDecreaseRepeatButton(jarg1);

        return ret;
    }

    public delegate void Track_SetDecreaseRepeatButtonDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Track_SetDecreaseRepeatButtonDelegate _Track_SetDecreaseRepeatButton;
    public static void Track_SetDecreaseRepeatButton(HandleRef jarg1, HandleRef jarg2)
    {
        _Track_SetDecreaseRepeatButton(jarg1, jarg2);
    }

    public delegate IntPtr Track_GetIncreaseRepeatButtonDelegate(HandleRef jarg1);
    public static Track_GetIncreaseRepeatButtonDelegate _Track_GetIncreaseRepeatButton;
    public static IntPtr Track_GetIncreaseRepeatButton(HandleRef jarg1)
    {
        IntPtr ret = _Track_GetIncreaseRepeatButton(jarg1);

        return ret;
    }

    public delegate void Track_SetIncreaseRepeatButtonDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Track_SetIncreaseRepeatButtonDelegate _Track_SetIncreaseRepeatButton;
    public static void Track_SetIncreaseRepeatButton(HandleRef jarg1, HandleRef jarg2)
    {
        _Track_SetIncreaseRepeatButton(jarg1, jarg2);
    }

    public delegate bool Track_GetIsDirectionReversedDelegate(HandleRef jarg1);
    public static Track_GetIsDirectionReversedDelegate _Track_GetIsDirectionReversed;
    public static bool Track_GetIsDirectionReversed(HandleRef jarg1)
    {
        bool ret = _Track_GetIsDirectionReversed(jarg1);

        return ret;
    }

    public delegate void Track_SetIsDirectionReversedDelegate(HandleRef jarg1, bool jarg2);
    public static Track_SetIsDirectionReversedDelegate _Track_SetIsDirectionReversed;
    public static void Track_SetIsDirectionReversed(HandleRef jarg1, bool jarg2)
    {
        _Track_SetIsDirectionReversed(jarg1, jarg2);
    }

    public delegate float Track_GetMaximumDelegate(HandleRef jarg1);
    public static Track_GetMaximumDelegate _Track_GetMaximum;
    public static float Track_GetMaximum(HandleRef jarg1)
    {
        float ret = _Track_GetMaximum(jarg1);

        return ret;
    }

    public delegate void Track_SetMaximumDelegate(HandleRef jarg1, float jarg2);
    public static Track_SetMaximumDelegate _Track_SetMaximum;
    public static void Track_SetMaximum(HandleRef jarg1, float jarg2)
    {
        _Track_SetMaximum(jarg1, jarg2);
    }

    public delegate float Track_GetMinimumDelegate(HandleRef jarg1);
    public static Track_GetMinimumDelegate _Track_GetMinimum;
    public static float Track_GetMinimum(HandleRef jarg1)
    {
        float ret = _Track_GetMinimum(jarg1);

        return ret;
    }

    public delegate void Track_SetMinimumDelegate(HandleRef jarg1, float jarg2);
    public static Track_SetMinimumDelegate _Track_SetMinimum;
    public static void Track_SetMinimum(HandleRef jarg1, float jarg2)
    {
        _Track_SetMinimum(jarg1, jarg2);
    }

    public delegate int Track_GetOrientationDelegate(HandleRef jarg1);
    public static Track_GetOrientationDelegate _Track_GetOrientation;
    public static int Track_GetOrientation(HandleRef jarg1)
    {
        int ret = _Track_GetOrientation(jarg1);

        return ret;
    }

    public delegate void Track_SetOrientationDelegate(HandleRef jarg1, int jarg2);
    public static Track_SetOrientationDelegate _Track_SetOrientation;
    public static void Track_SetOrientation(HandleRef jarg1, int jarg2)
    {
        _Track_SetOrientation(jarg1, jarg2);
    }

    public delegate IntPtr Track_GetThumbDelegate(HandleRef jarg1);
    public static Track_GetThumbDelegate _Track_GetThumb;
    public static IntPtr Track_GetThumb(HandleRef jarg1)
    {
        IntPtr ret = _Track_GetThumb(jarg1);

        return ret;
    }

    public delegate void Track_SetThumbDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Track_SetThumbDelegate _Track_SetThumb;
    public static void Track_SetThumb(HandleRef jarg1, HandleRef jarg2)
    {
        _Track_SetThumb(jarg1, jarg2);
    }

    public delegate float Track_GetValueDelegate(HandleRef jarg1);
    public static Track_GetValueDelegate _Track_GetValue;
    public static float Track_GetValue(HandleRef jarg1)
    {
        float ret = _Track_GetValue(jarg1);

        return ret;
    }

    public delegate void Track_SetValueDelegate(HandleRef jarg1, float jarg2);
    public static Track_SetValueDelegate _Track_SetValue;
    public static void Track_SetValue(HandleRef jarg1, float jarg2)
    {
        _Track_SetValue(jarg1, jarg2);
    }

    public delegate float Track_GetViewportSizeDelegate(HandleRef jarg1);
    public static Track_GetViewportSizeDelegate _Track_GetViewportSize;
    public static float Track_GetViewportSize(HandleRef jarg1)
    {
        float ret = _Track_GetViewportSize(jarg1);

        return ret;
    }

    public delegate void Track_SetViewportSizeDelegate(HandleRef jarg1, float jarg2);
    public static Track_SetViewportSizeDelegate _Track_SetViewportSize;
    public static void Track_SetViewportSize(HandleRef jarg1, float jarg2)
    {
        _Track_SetViewportSize(jarg1, jarg2);
    }

    public delegate float Track_ValueFromDistanceDelegate(HandleRef jarg1, float jarg2, float jarg3);
    public static Track_ValueFromDistanceDelegate _Track_ValueFromDistance;
    public static float Track_ValueFromDistance(HandleRef jarg1, float jarg2, float jarg3)
    {
        float ret = _Track_ValueFromDistance(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate float Track_ValueFromPointDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Track_ValueFromPointDelegate _Track_ValueFromPoint;
    public static float Track_ValueFromPoint(HandleRef jarg1, HandleRef jarg2)
    {
        float ret = _Track_ValueFromPoint(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_TransformGroupDelegate();
    public static new_TransformGroupDelegate _new_TransformGroup;
    public static IntPtr new_TransformGroup()
    {
        IntPtr ret = _new_TransformGroup();

        return ret;
    }

    public delegate void delete_TransformGroupDelegate(HandleRef jarg1);
    public static delete_TransformGroupDelegate _delete_TransformGroup;
    public static void delete_TransformGroup(HandleRef jarg1)
    {
        _delete_TransformGroup(jarg1);
    }

    public delegate uint TransformGroup_GetNumChildrenDelegate(HandleRef jarg1);
    public static TransformGroup_GetNumChildrenDelegate _TransformGroup_GetNumChildren;
    public static uint TransformGroup_GetNumChildren(HandleRef jarg1)
    {
        uint ret = _TransformGroup_GetNumChildren(jarg1);

        return ret;
    }

    public delegate IntPtr TransformGroup_GetChildDelegate(HandleRef jarg1, uint jarg2);
    public static TransformGroup_GetChildDelegate _TransformGroup_GetChild;
    public static IntPtr TransformGroup_GetChild(HandleRef jarg1, uint jarg2)
    {
        IntPtr ret = _TransformGroup_GetChild(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr TransformGroup_GetChildrenDelegate(HandleRef jarg1);
    public static TransformGroup_GetChildrenDelegate _TransformGroup_GetChildren;
    public static IntPtr TransformGroup_GetChildren(HandleRef jarg1)
    {
        IntPtr ret = _TransformGroup_GetChildren(jarg1);

        return ret;
    }

    public delegate void TransformGroup_SetChildrenDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TransformGroup_SetChildrenDelegate _TransformGroup_SetChildren;
    public static void TransformGroup_SetChildren(HandleRef jarg1, HandleRef jarg2)
    {
        _TransformGroup_SetChildren(jarg1, jarg2);
    }

    public delegate IntPtr TransformGroup_GetTransformDelegate(HandleRef jarg1);
    public static TransformGroup_GetTransformDelegate _TransformGroup_GetTransform;
    public static IntPtr TransformGroup_GetTransform(HandleRef jarg1)
    {
        IntPtr ret = _TransformGroup_GetTransform(jarg1);

        return ret;
    }

    public delegate void TransformGroup_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static TransformGroup_CreateRenderProxyDelegate _TransformGroup_CreateRenderProxy;
    public static void TransformGroup_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _TransformGroup_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void TransformGroup_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static TransformGroup_UpdateRenderProxyDelegate _TransformGroup_UpdateRenderProxy;
    public static void TransformGroup_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _TransformGroup_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void TransformGroup_UnregisterRendererDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TransformGroup_UnregisterRendererDelegate _TransformGroup_UnregisterRenderer;
    public static void TransformGroup_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2)
    {
        _TransformGroup_UnregisterRenderer(jarg1, jarg2);
    }

    public delegate IntPtr new_TranslateTransform__SWIG_0Delegate();
    public static new_TranslateTransform__SWIG_0Delegate _new_TranslateTransform__SWIG_0;
    public static IntPtr new_TranslateTransform__SWIG_0()
    {
        IntPtr ret = _new_TranslateTransform__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_TranslateTransform__SWIG_1Delegate(float jarg1, float jarg2);
    public static new_TranslateTransform__SWIG_1Delegate _new_TranslateTransform__SWIG_1;
    public static IntPtr new_TranslateTransform__SWIG_1(float jarg1, float jarg2)
    {
        IntPtr ret = _new_TranslateTransform__SWIG_1(jarg1, jarg2);

        return ret;
    }

    public delegate float TranslateTransform_GetXDelegate(HandleRef jarg1);
    public static TranslateTransform_GetXDelegate _TranslateTransform_GetX;
    public static float TranslateTransform_GetX(HandleRef jarg1)
    {
        float ret = _TranslateTransform_GetX(jarg1);

        return ret;
    }

    public delegate void TranslateTransform_SetXDelegate(HandleRef jarg1, float jarg2);
    public static TranslateTransform_SetXDelegate _TranslateTransform_SetX;
    public static void TranslateTransform_SetX(HandleRef jarg1, float jarg2)
    {
        _TranslateTransform_SetX(jarg1, jarg2);
    }

    public delegate float TranslateTransform_GetYDelegate(HandleRef jarg1);
    public static TranslateTransform_GetYDelegate _TranslateTransform_GetY;
    public static float TranslateTransform_GetY(HandleRef jarg1)
    {
        float ret = _TranslateTransform_GetY(jarg1);

        return ret;
    }

    public delegate void TranslateTransform_SetYDelegate(HandleRef jarg1, float jarg2);
    public static TranslateTransform_SetYDelegate _TranslateTransform_SetY;
    public static void TranslateTransform_SetY(HandleRef jarg1, float jarg2)
    {
        _TranslateTransform_SetY(jarg1, jarg2);
    }

    public delegate IntPtr TranslateTransform_GetTransformDelegate(HandleRef jarg1);
    public static TranslateTransform_GetTransformDelegate _TranslateTransform_GetTransform;
    public static IntPtr TranslateTransform_GetTransform(HandleRef jarg1)
    {
        IntPtr ret = _TranslateTransform_GetTransform(jarg1);

        return ret;
    }

    public delegate void TranslateTransform_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static TranslateTransform_CreateRenderProxyDelegate _TranslateTransform_CreateRenderProxy;
    public static void TranslateTransform_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _TranslateTransform_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void TranslateTransform_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static TranslateTransform_UpdateRenderProxyDelegate _TranslateTransform_UpdateRenderProxy;
    public static void TranslateTransform_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _TranslateTransform_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void TranslateTransform_UnregisterRendererDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TranslateTransform_UnregisterRendererDelegate _TranslateTransform_UnregisterRenderer;
    public static void TranslateTransform_UnregisterRenderer(HandleRef jarg1, HandleRef jarg2)
    {
        _TranslateTransform_UnregisterRenderer(jarg1, jarg2);
    }

    public delegate void delete_TranslateTransformDelegate(HandleRef jarg1);
    public static delete_TranslateTransformDelegate _delete_TranslateTransform;
    public static void delete_TranslateTransform(HandleRef jarg1)
    {
        _delete_TranslateTransform(jarg1);
    }

    public delegate IntPtr new_TreeViewDelegate();
    public static new_TreeViewDelegate _new_TreeView;
    public static IntPtr new_TreeView()
    {
        IntPtr ret = _new_TreeView();

        return ret;
    }

    public delegate void delete_TreeViewDelegate(HandleRef jarg1);
    public static delete_TreeViewDelegate _delete_TreeView;
    public static void delete_TreeView(HandleRef jarg1)
    {
        _delete_TreeView(jarg1);
    }

    public delegate IntPtr TreeView_GetSelectedItemDelegate(HandleRef jarg1);
    public static TreeView_GetSelectedItemDelegate _TreeView_GetSelectedItem;
    public static IntPtr TreeView_GetSelectedItem(HandleRef jarg1)
    {
        IntPtr ret = _TreeView_GetSelectedItem(jarg1);

        return ret;
    }

    public delegate IntPtr TreeView_GetSelectedValueDelegate(HandleRef jarg1);
    public static TreeView_GetSelectedValueDelegate _TreeView_GetSelectedValue;
    public static IntPtr TreeView_GetSelectedValue(HandleRef jarg1)
    {
        IntPtr ret = _TreeView_GetSelectedValue(jarg1);

        return ret;
    }

    public delegate IntPtr TreeView_GetSelectedValuePathDelegate(HandleRef jarg1);
    public static TreeView_GetSelectedValuePathDelegate _TreeView_GetSelectedValuePath;
    public static IntPtr TreeView_GetSelectedValuePath(HandleRef jarg1)
    {
        IntPtr ret = _TreeView_GetSelectedValuePath(jarg1);

        return ret;
    }

    public delegate void TreeView_SetSelectedValuePathDelegate(HandleRef jarg1, IntPtr jarg2);
    public static TreeView_SetSelectedValuePathDelegate _TreeView_SetSelectedValuePath;
    public static void TreeView_SetSelectedValuePath(HandleRef jarg1, IntPtr jarg2)
    {
        _TreeView_SetSelectedValuePath(jarg1, jarg2);
    }

    public delegate void TreeView_ItemClickedDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TreeView_ItemClickedDelegate _TreeView_ItemClicked;
    public static void TreeView_ItemClicked(HandleRef jarg1, HandleRef jarg2)
    {
        _TreeView_ItemClicked(jarg1, jarg2);
    }

    public delegate void TreeView_ItemExpandedDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TreeView_ItemExpandedDelegate _TreeView_ItemExpanded;
    public static void TreeView_ItemExpanded(HandleRef jarg1, HandleRef jarg2)
    {
        _TreeView_ItemExpanded(jarg1, jarg2);
    }

    public delegate IntPtr new_TreeViewItemDelegate();
    public static new_TreeViewItemDelegate _new_TreeViewItem;
    public static IntPtr new_TreeViewItem()
    {
        IntPtr ret = _new_TreeViewItem();

        return ret;
    }

    public delegate void delete_TreeViewItemDelegate(HandleRef jarg1);
    public static delete_TreeViewItemDelegate _delete_TreeViewItem;
    public static void delete_TreeViewItem(HandleRef jarg1)
    {
        _delete_TreeViewItem(jarg1);
    }

    public delegate bool TreeViewItem_GetIsExpandedDelegate(HandleRef jarg1);
    public static TreeViewItem_GetIsExpandedDelegate _TreeViewItem_GetIsExpanded;
    public static bool TreeViewItem_GetIsExpanded(HandleRef jarg1)
    {
        bool ret = _TreeViewItem_GetIsExpanded(jarg1);

        return ret;
    }

    public delegate void TreeViewItem_SetIsExpandedDelegate(HandleRef jarg1, bool jarg2);
    public static TreeViewItem_SetIsExpandedDelegate _TreeViewItem_SetIsExpanded;
    public static void TreeViewItem_SetIsExpanded(HandleRef jarg1, bool jarg2)
    {
        _TreeViewItem_SetIsExpanded(jarg1, jarg2);
    }

    public delegate bool TreeViewItem_GetIsSelectedDelegate(HandleRef jarg1);
    public static TreeViewItem_GetIsSelectedDelegate _TreeViewItem_GetIsSelected;
    public static bool TreeViewItem_GetIsSelected(HandleRef jarg1)
    {
        bool ret = _TreeViewItem_GetIsSelected(jarg1);

        return ret;
    }

    public delegate void TreeViewItem_SetIsSelectedDelegate(HandleRef jarg1, bool jarg2);
    public static TreeViewItem_SetIsSelectedDelegate _TreeViewItem_SetIsSelected;
    public static void TreeViewItem_SetIsSelected(HandleRef jarg1, bool jarg2)
    {
        _TreeViewItem_SetIsSelected(jarg1, jarg2);
    }

    public delegate bool TreeViewItem_GetIsSelectionActiveDelegate(HandleRef jarg1);
    public static TreeViewItem_GetIsSelectionActiveDelegate _TreeViewItem_GetIsSelectionActive;
    public static bool TreeViewItem_GetIsSelectionActive(HandleRef jarg1)
    {
        bool ret = _TreeViewItem_GetIsSelectionActive(jarg1);

        return ret;
    }

    public delegate void TreeViewItem_SetIsSelectionActiveDelegate(HandleRef jarg1, bool jarg2);
    public static TreeViewItem_SetIsSelectionActiveDelegate _TreeViewItem_SetIsSelectionActive;
    public static void TreeViewItem_SetIsSelectionActive(HandleRef jarg1, bool jarg2)
    {
        _TreeViewItem_SetIsSelectionActive(jarg1, jarg2);
    }

    public delegate IntPtr new_TriggerDelegate();
    public static new_TriggerDelegate _new_Trigger;
    public static IntPtr new_Trigger()
    {
        IntPtr ret = _new_Trigger();

        return ret;
    }

    public delegate void delete_TriggerDelegate(HandleRef jarg1);
    public static delete_TriggerDelegate _delete_Trigger;
    public static void delete_Trigger(HandleRef jarg1)
    {
        _delete_Trigger(jarg1);
    }

    public delegate IntPtr Trigger_GetPropertyDelegate(HandleRef jarg1);
    public static Trigger_GetPropertyDelegate _Trigger_GetProperty;
    public static IntPtr Trigger_GetProperty(HandleRef jarg1)
    {
        IntPtr ret = _Trigger_GetProperty(jarg1);

        return ret;
    }

    public delegate void Trigger_SetPropertyDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Trigger_SetPropertyDelegate _Trigger_SetProperty;
    public static void Trigger_SetProperty(HandleRef jarg1, HandleRef jarg2)
    {
        _Trigger_SetProperty(jarg1, jarg2);
    }

    public delegate IntPtr Trigger_GetSettersDelegate(HandleRef jarg1);
    public static Trigger_GetSettersDelegate _Trigger_GetSetters;
    public static IntPtr Trigger_GetSetters(HandleRef jarg1)
    {
        IntPtr ret = _Trigger_GetSetters(jarg1);

        return ret;
    }

    public delegate IntPtr Trigger_GetSourceNameDelegate(HandleRef jarg1);
    public static Trigger_GetSourceNameDelegate _Trigger_GetSourceName;
    public static IntPtr Trigger_GetSourceName(HandleRef jarg1)
    {
        IntPtr ret = _Trigger_GetSourceName(jarg1);

        return ret;
    }

    public delegate void Trigger_SetSourceNameDelegate(HandleRef jarg1, IntPtr jarg2);
    public static Trigger_SetSourceNameDelegate _Trigger_SetSourceName;
    public static void Trigger_SetSourceName(HandleRef jarg1, IntPtr jarg2)
    {
        _Trigger_SetSourceName(jarg1, jarg2);
    }

    public delegate IntPtr Trigger_GetValueDelegate(HandleRef jarg1);
    public static Trigger_GetValueDelegate _Trigger_GetValue;
    public static IntPtr Trigger_GetValue(HandleRef jarg1)
    {
        IntPtr ret = _Trigger_GetValue(jarg1);

        return ret;
    }

    public delegate void Trigger_SetValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Trigger_SetValueDelegate _Trigger_SetValue;
    public static void Trigger_SetValue(HandleRef jarg1, HandleRef jarg2)
    {
        _Trigger_SetValue(jarg1, jarg2);
    }

    public delegate IntPtr Trigger_FindSetterDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Trigger_FindSetterDelegate _Trigger_FindSetter;
    public static IntPtr Trigger_FindSetter(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _Trigger_FindSetter(jarg1, jarg2);

        return ret;
    }

    public delegate void Trigger_RegisterSourcesDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static Trigger_RegisterSourcesDelegate _Trigger_RegisterSources;
    public static void Trigger_RegisterSources(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        _Trigger_RegisterSources(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate void Trigger_UnregisterSourcesDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static Trigger_UnregisterSourcesDelegate _Trigger_UnregisterSources;
    public static void Trigger_UnregisterSources(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        _Trigger_UnregisterSources(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate void Trigger_RegisterEventsDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);
    public static Trigger_RegisterEventsDelegate _Trigger_RegisterEvents;
    public static void Trigger_RegisterEvents(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4)
    {
        _Trigger_RegisterEvents(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate void Trigger_UnregisterEventsDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);
    public static Trigger_UnregisterEventsDelegate _Trigger_UnregisterEvents;
    public static void Trigger_UnregisterEvents(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4)
    {
        _Trigger_UnregisterEvents(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate bool Trigger_CheckDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, bool jarg6);
    public static Trigger_CheckDelegate _Trigger_Check;
    public static bool Trigger_Check(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, bool jarg6)
    {
        bool ret = _Trigger_Check(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6);

        return ret;
    }

    public delegate IntPtr Trigger_FindValueDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);
    public static Trigger_FindValueDelegate _Trigger_FindValue;
    public static IntPtr Trigger_FindValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5)
    {
        IntPtr ret = _Trigger_FindValue(jarg1, jarg2, jarg3, jarg4, jarg5);

        return ret;
    }

    public delegate void Trigger_Invalidate__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4, bool jarg5, byte jarg6);
    public static Trigger_Invalidate__SWIG_0Delegate _Trigger_Invalidate__SWIG_0;
    public static void Trigger_Invalidate__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4, bool jarg5, byte jarg6)
    {
        _Trigger_Invalidate__SWIG_0(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6);
    }

    public delegate void Trigger_Invalidate__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6, HandleRef jarg7, bool jarg8, bool jarg9, byte jarg10);
    public static Trigger_Invalidate__SWIG_1Delegate _Trigger_Invalidate__SWIG_1;
    public static void Trigger_Invalidate__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, HandleRef jarg6, HandleRef jarg7, bool jarg8, bool jarg9, byte jarg10)
    {
        _Trigger_Invalidate__SWIG_1(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6, jarg7, jarg8, jarg9, jarg10);
    }

    public delegate void delete_TriggerActionDelegate(HandleRef jarg1);
    public static delete_TriggerActionDelegate _delete_TriggerAction;
    public static void delete_TriggerAction(HandleRef jarg1)
    {
        _delete_TriggerAction(jarg1);
    }

    public delegate void TriggerAction_Invoke__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static TriggerAction_Invoke__SWIG_0Delegate _TriggerAction_Invoke__SWIG_0;
    public static void TriggerAction_Invoke__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _TriggerAction_Invoke__SWIG_0(jarg1, jarg2, jarg3);
    }

    public delegate void TriggerAction_Invoke__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static TriggerAction_Invoke__SWIG_1Delegate _TriggerAction_Invoke__SWIG_1;
    public static void TriggerAction_Invoke__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        _TriggerAction_Invoke__SWIG_1(jarg1, jarg2);
    }

    public delegate IntPtr new_UIElementDataDelegate(HandleRef jarg1);
    public static new_UIElementDataDelegate _new_UIElementData;
    public static IntPtr new_UIElementData(HandleRef jarg1)
    {
        IntPtr ret = _new_UIElementData(jarg1);

        return ret;
    }

    public delegate void UIElementData_RegisterEventDelegate(HandleRef jarg1, HandleRef jarg2, string jarg3, int jarg4);
    public static UIElementData_RegisterEventDelegate _UIElementData_RegisterEvent;
    public static void UIElementData_RegisterEvent(HandleRef jarg1, HandleRef jarg2, string jarg3, int jarg4)
    {
        _UIElementData_RegisterEvent(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate void UIElementData_AddEventOwnerDelegate(HandleRef jarg1, HandleRef jarg2, string jarg3, HandleRef jarg4);
    public static UIElementData_AddEventOwnerDelegate _UIElementData_AddEventOwner;
    public static void UIElementData_AddEventOwner(HandleRef jarg1, HandleRef jarg2, string jarg3, HandleRef jarg4)
    {
        _UIElementData_AddEventOwner(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate IntPtr UIElementData_FindEventDelegate(HandleRef jarg1, IntPtr jarg2);
    public static UIElementData_FindEventDelegate _UIElementData_FindEvent;
    public static IntPtr UIElementData_FindEvent(HandleRef jarg1, IntPtr jarg2)
    {
        IntPtr ret = _UIElementData_FindEvent(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr UIElementData_EnumEventsDelegate(HandleRef jarg1);
    public static UIElementData_EnumEventsDelegate _UIElementData_EnumEvents;
    public static IntPtr UIElementData_EnumEvents(HandleRef jarg1)
    {
        IntPtr ret = _UIElementData_EnumEvents(jarg1);

        return ret;
    }

    public delegate void UIElementData_RegisterEventHandlerDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static UIElementData_RegisterEventHandlerDelegate _UIElementData_RegisterEventHandler;
    public static void UIElementData_RegisterEventHandler(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _UIElementData_RegisterEventHandler(jarg1, jarg2, jarg3);
    }

    public delegate IntPtr UIElementData_FindEventHandlerDelegate(HandleRef jarg1, HandleRef jarg2);
    public static UIElementData_FindEventHandlerDelegate _UIElementData_FindEventHandler;
    public static IntPtr UIElementData_FindEventHandler(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _UIElementData_FindEventHandler(jarg1, jarg2);

        return ret;
    }

    public delegate void UIElementData_RegisterNonRoutedDelegate(HandleRef jarg1, IntPtr jarg2);
    public static UIElementData_RegisterNonRoutedDelegate _UIElementData_RegisterNonRouted;
    public static void UIElementData_RegisterNonRouted(HandleRef jarg1, IntPtr jarg2)
    {
        _UIElementData_RegisterNonRouted(jarg1, jarg2);
    }

    public delegate bool UIElementData_IsNonRoutedRegisteredDelegate(HandleRef jarg1, IntPtr jarg2);
    public static UIElementData_IsNonRoutedRegisteredDelegate _UIElementData_IsNonRoutedRegistered;
    public static bool UIElementData_IsNonRoutedRegistered(HandleRef jarg1, IntPtr jarg2)
    {
        bool ret = _UIElementData_IsNonRoutedRegistered(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_UIElementDataDelegate(HandleRef jarg1);
    public static delete_UIElementDataDelegate _delete_UIElementData;
    public static void delete_UIElementData(HandleRef jarg1)
    {
        _delete_UIElementData(jarg1);
    }

    public delegate IntPtr FindRoutedEventRecursiveDelegate(HandleRef jarg1, IntPtr jarg2);
    public static FindRoutedEventRecursiveDelegate _FindRoutedEventRecursive;
    public static IntPtr FindRoutedEventRecursive(HandleRef jarg1, IntPtr jarg2)
    {
        IntPtr ret = _FindRoutedEventRecursive(jarg1, jarg2);

        return ret;
    }

    public delegate bool IsNonRoutedEventRegisteredRecursiveDelegate(HandleRef jarg1, IntPtr jarg2);
    public static IsNonRoutedEventRegisteredRecursiveDelegate _IsNonRoutedEventRegisteredRecursive;
    public static bool IsNonRoutedEventRegisteredRecursive(HandleRef jarg1, IntPtr jarg2)
    {
        bool ret = _IsNonRoutedEventRegisteredRecursive(jarg1, jarg2);

        return ret;
    }

    public delegate void MouseEventArgs_position_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static MouseEventArgs_position_setDelegate _MouseEventArgs_position_set;
    public static void MouseEventArgs_position_set(HandleRef jarg1, HandleRef jarg2)
    {
        _MouseEventArgs_position_set(jarg1, jarg2);
    }

    public delegate IntPtr MouseEventArgs_position_getDelegate(HandleRef jarg1);
    public static MouseEventArgs_position_getDelegate _MouseEventArgs_position_get;
    public static IntPtr MouseEventArgs_position_get(HandleRef jarg1)
    {
        IntPtr ret = _MouseEventArgs_position_get(jarg1);

        return ret;
    }

    public delegate void MouseEventArgs_leftButton_setDelegate(HandleRef jarg1, int jarg2);
    public static MouseEventArgs_leftButton_setDelegate _MouseEventArgs_leftButton_set;
    public static void MouseEventArgs_leftButton_set(HandleRef jarg1, int jarg2)
    {
        _MouseEventArgs_leftButton_set(jarg1, jarg2);
    }

    public delegate int MouseEventArgs_leftButton_getDelegate(HandleRef jarg1);
    public static MouseEventArgs_leftButton_getDelegate _MouseEventArgs_leftButton_get;
    public static int MouseEventArgs_leftButton_get(HandleRef jarg1)
    {
        int ret = _MouseEventArgs_leftButton_get(jarg1);

        return ret;
    }

    public delegate void MouseEventArgs_middleButton_setDelegate(HandleRef jarg1, int jarg2);
    public static MouseEventArgs_middleButton_setDelegate _MouseEventArgs_middleButton_set;
    public static void MouseEventArgs_middleButton_set(HandleRef jarg1, int jarg2)
    {
        _MouseEventArgs_middleButton_set(jarg1, jarg2);
    }

    public delegate int MouseEventArgs_middleButton_getDelegate(HandleRef jarg1);
    public static MouseEventArgs_middleButton_getDelegate _MouseEventArgs_middleButton_get;
    public static int MouseEventArgs_middleButton_get(HandleRef jarg1)
    {
        int ret = _MouseEventArgs_middleButton_get(jarg1);

        return ret;
    }

    public delegate void MouseEventArgs_rightButton_setDelegate(HandleRef jarg1, int jarg2);
    public static MouseEventArgs_rightButton_setDelegate _MouseEventArgs_rightButton_set;
    public static void MouseEventArgs_rightButton_set(HandleRef jarg1, int jarg2)
    {
        _MouseEventArgs_rightButton_set(jarg1, jarg2);
    }

    public delegate int MouseEventArgs_rightButton_getDelegate(HandleRef jarg1);
    public static MouseEventArgs_rightButton_getDelegate _MouseEventArgs_rightButton_get;
    public static int MouseEventArgs_rightButton_get(HandleRef jarg1)
    {
        int ret = _MouseEventArgs_rightButton_get(jarg1);

        return ret;
    }

    public delegate void MouseEventArgs_xButton1Button_setDelegate(HandleRef jarg1, int jarg2);
    public static MouseEventArgs_xButton1Button_setDelegate _MouseEventArgs_xButton1Button_set;
    public static void MouseEventArgs_xButton1Button_set(HandleRef jarg1, int jarg2)
    {
        _MouseEventArgs_xButton1Button_set(jarg1, jarg2);
    }

    public delegate int MouseEventArgs_xButton1Button_getDelegate(HandleRef jarg1);
    public static MouseEventArgs_xButton1Button_getDelegate _MouseEventArgs_xButton1Button_get;
    public static int MouseEventArgs_xButton1Button_get(HandleRef jarg1)
    {
        int ret = _MouseEventArgs_xButton1Button_get(jarg1);

        return ret;
    }

    public delegate void MouseEventArgs_xButton2Button_setDelegate(HandleRef jarg1, int jarg2);
    public static MouseEventArgs_xButton2Button_setDelegate _MouseEventArgs_xButton2Button_set;
    public static void MouseEventArgs_xButton2Button_set(HandleRef jarg1, int jarg2)
    {
        _MouseEventArgs_xButton2Button_set(jarg1, jarg2);
    }

    public delegate int MouseEventArgs_xButton2Button_getDelegate(HandleRef jarg1);
    public static MouseEventArgs_xButton2Button_getDelegate _MouseEventArgs_xButton2Button_get;
    public static int MouseEventArgs_xButton2Button_get(HandleRef jarg1)
    {
        int ret = _MouseEventArgs_xButton2Button_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_MouseEventArgsDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static new_MouseEventArgsDelegate _new_MouseEventArgs;
    public static IntPtr new_MouseEventArgs(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        IntPtr ret = _new_MouseEventArgs(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void delete_MouseEventArgsDelegate(HandleRef jarg1);
    public static delete_MouseEventArgsDelegate _delete_MouseEventArgs;
    public static void delete_MouseEventArgs(HandleRef jarg1)
    {
        _delete_MouseEventArgs(jarg1);
    }

    public delegate void MouseButtonEventArgs_changedButton_setDelegate(HandleRef jarg1, int jarg2);
    public static MouseButtonEventArgs_changedButton_setDelegate _MouseButtonEventArgs_changedButton_set;
    public static void MouseButtonEventArgs_changedButton_set(HandleRef jarg1, int jarg2)
    {
        _MouseButtonEventArgs_changedButton_set(jarg1, jarg2);
    }

    public delegate int MouseButtonEventArgs_changedButton_getDelegate(HandleRef jarg1);
    public static MouseButtonEventArgs_changedButton_getDelegate _MouseButtonEventArgs_changedButton_get;
    public static int MouseButtonEventArgs_changedButton_get(HandleRef jarg1)
    {
        int ret = _MouseButtonEventArgs_changedButton_get(jarg1);

        return ret;
    }

    public delegate void MouseButtonEventArgs_buttonState_setDelegate(HandleRef jarg1, int jarg2);
    public static MouseButtonEventArgs_buttonState_setDelegate _MouseButtonEventArgs_buttonState_set;
    public static void MouseButtonEventArgs_buttonState_set(HandleRef jarg1, int jarg2)
    {
        _MouseButtonEventArgs_buttonState_set(jarg1, jarg2);
    }

    public delegate int MouseButtonEventArgs_buttonState_getDelegate(HandleRef jarg1);
    public static MouseButtonEventArgs_buttonState_getDelegate _MouseButtonEventArgs_buttonState_get;
    public static int MouseButtonEventArgs_buttonState_get(HandleRef jarg1)
    {
        int ret = _MouseButtonEventArgs_buttonState_get(jarg1);

        return ret;
    }

    public delegate void MouseButtonEventArgs_buttonClicks_setDelegate(HandleRef jarg1, uint jarg2);
    public static MouseButtonEventArgs_buttonClicks_setDelegate _MouseButtonEventArgs_buttonClicks_set;
    public static void MouseButtonEventArgs_buttonClicks_set(HandleRef jarg1, uint jarg2)
    {
        _MouseButtonEventArgs_buttonClicks_set(jarg1, jarg2);
    }

    public delegate uint MouseButtonEventArgs_buttonClicks_getDelegate(HandleRef jarg1);
    public static MouseButtonEventArgs_buttonClicks_getDelegate _MouseButtonEventArgs_buttonClicks_get;
    public static uint MouseButtonEventArgs_buttonClicks_get(HandleRef jarg1)
    {
        uint ret = _MouseButtonEventArgs_buttonClicks_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_MouseButtonEventArgsDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4, int jarg5, uint jarg6);
    public static new_MouseButtonEventArgsDelegate _new_MouseButtonEventArgs;
    public static IntPtr new_MouseButtonEventArgs(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4, int jarg5, uint jarg6)
    {
        IntPtr ret = _new_MouseButtonEventArgs(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6);

        return ret;
    }

    public delegate void delete_MouseButtonEventArgsDelegate(HandleRef jarg1);
    public static delete_MouseButtonEventArgsDelegate _delete_MouseButtonEventArgs;
    public static void delete_MouseButtonEventArgs(HandleRef jarg1)
    {
        _delete_MouseButtonEventArgs(jarg1);
    }

    public delegate void MouseWheelEventArgs_wheelRotation_setDelegate(HandleRef jarg1, int jarg2);
    public static MouseWheelEventArgs_wheelRotation_setDelegate _MouseWheelEventArgs_wheelRotation_set;
    public static void MouseWheelEventArgs_wheelRotation_set(HandleRef jarg1, int jarg2)
    {
        _MouseWheelEventArgs_wheelRotation_set(jarg1, jarg2);
    }

    public delegate int MouseWheelEventArgs_wheelRotation_getDelegate(HandleRef jarg1);
    public static MouseWheelEventArgs_wheelRotation_getDelegate _MouseWheelEventArgs_wheelRotation_get;
    public static int MouseWheelEventArgs_wheelRotation_get(HandleRef jarg1)
    {
        int ret = _MouseWheelEventArgs_wheelRotation_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_MouseWheelEventArgsDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);
    public static new_MouseWheelEventArgsDelegate _new_MouseWheelEventArgs;
    public static IntPtr new_MouseWheelEventArgs(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4)
    {
        IntPtr ret = _new_MouseWheelEventArgs(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate void delete_MouseWheelEventArgsDelegate(HandleRef jarg1);
    public static delete_MouseWheelEventArgsDelegate _delete_MouseWheelEventArgs;
    public static void delete_MouseWheelEventArgs(HandleRef jarg1)
    {
        _delete_MouseWheelEventArgs(jarg1);
    }

    public delegate void AccessKeyEventArgs_isMultiple_setDelegate(HandleRef jarg1, bool jarg2);
    public static AccessKeyEventArgs_isMultiple_setDelegate _AccessKeyEventArgs_isMultiple_set;
    public static void AccessKeyEventArgs_isMultiple_set(HandleRef jarg1, bool jarg2)
    {
        _AccessKeyEventArgs_isMultiple_set(jarg1, jarg2);
    }

    public delegate bool AccessKeyEventArgs_isMultiple_getDelegate(HandleRef jarg1);
    public static AccessKeyEventArgs_isMultiple_getDelegate _AccessKeyEventArgs_isMultiple_get;
    public static bool AccessKeyEventArgs_isMultiple_get(HandleRef jarg1)
    {
        bool ret = _AccessKeyEventArgs_isMultiple_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_AccessKeyEventArgsDelegate();
    public static new_AccessKeyEventArgsDelegate _new_AccessKeyEventArgs;
    public static IntPtr new_AccessKeyEventArgs()
    {
        IntPtr ret = _new_AccessKeyEventArgs();

        return ret;
    }

    public delegate void delete_AccessKeyEventArgsDelegate(HandleRef jarg1);
    public static delete_AccessKeyEventArgsDelegate _delete_AccessKeyEventArgs;
    public static void delete_AccessKeyEventArgs(HandleRef jarg1)
    {
        _delete_AccessKeyEventArgs(jarg1);
    }

    public delegate void KeyboardFocusChangedEventArgs_oldFocus_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static KeyboardFocusChangedEventArgs_oldFocus_setDelegate _KeyboardFocusChangedEventArgs_oldFocus_set;
    public static void KeyboardFocusChangedEventArgs_oldFocus_set(HandleRef jarg1, HandleRef jarg2)
    {
        _KeyboardFocusChangedEventArgs_oldFocus_set(jarg1, jarg2);
    }

    public delegate IntPtr KeyboardFocusChangedEventArgs_oldFocus_getDelegate(HandleRef jarg1);
    public static KeyboardFocusChangedEventArgs_oldFocus_getDelegate _KeyboardFocusChangedEventArgs_oldFocus_get;
    public static IntPtr KeyboardFocusChangedEventArgs_oldFocus_get(HandleRef jarg1)
    {
        IntPtr ret = _KeyboardFocusChangedEventArgs_oldFocus_get(jarg1);

        return ret;
    }

    public delegate void KeyboardFocusChangedEventArgs_newFocus_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static KeyboardFocusChangedEventArgs_newFocus_setDelegate _KeyboardFocusChangedEventArgs_newFocus_set;
    public static void KeyboardFocusChangedEventArgs_newFocus_set(HandleRef jarg1, HandleRef jarg2)
    {
        _KeyboardFocusChangedEventArgs_newFocus_set(jarg1, jarg2);
    }

    public delegate IntPtr KeyboardFocusChangedEventArgs_newFocus_getDelegate(HandleRef jarg1);
    public static KeyboardFocusChangedEventArgs_newFocus_getDelegate _KeyboardFocusChangedEventArgs_newFocus_get;
    public static IntPtr KeyboardFocusChangedEventArgs_newFocus_get(HandleRef jarg1)
    {
        IntPtr ret = _KeyboardFocusChangedEventArgs_newFocus_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_KeyboardFocusChangedEventArgsDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static new_KeyboardFocusChangedEventArgsDelegate _new_KeyboardFocusChangedEventArgs;
    public static IntPtr new_KeyboardFocusChangedEventArgs(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        IntPtr ret = _new_KeyboardFocusChangedEventArgs(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate void delete_KeyboardFocusChangedEventArgsDelegate(HandleRef jarg1);
    public static delete_KeyboardFocusChangedEventArgsDelegate _delete_KeyboardFocusChangedEventArgs;
    public static void delete_KeyboardFocusChangedEventArgs(HandleRef jarg1)
    {
        _delete_KeyboardFocusChangedEventArgs(jarg1);
    }

    public delegate void KeyEventArgs_deadCharProcessedKey_setDelegate(HandleRef jarg1, int jarg2);
    public static KeyEventArgs_deadCharProcessedKey_setDelegate _KeyEventArgs_deadCharProcessedKey_set;
    public static void KeyEventArgs_deadCharProcessedKey_set(HandleRef jarg1, int jarg2)
    {
        _KeyEventArgs_deadCharProcessedKey_set(jarg1, jarg2);
    }

    public delegate int KeyEventArgs_deadCharProcessedKey_getDelegate(HandleRef jarg1);
    public static KeyEventArgs_deadCharProcessedKey_getDelegate _KeyEventArgs_deadCharProcessedKey_get;
    public static int KeyEventArgs_deadCharProcessedKey_get(HandleRef jarg1)
    {
        int ret = _KeyEventArgs_deadCharProcessedKey_get(jarg1);

        return ret;
    }

    public delegate void KeyEventArgs_imeProcessedKey_setDelegate(HandleRef jarg1, int jarg2);
    public static KeyEventArgs_imeProcessedKey_setDelegate _KeyEventArgs_imeProcessedKey_set;
    public static void KeyEventArgs_imeProcessedKey_set(HandleRef jarg1, int jarg2)
    {
        _KeyEventArgs_imeProcessedKey_set(jarg1, jarg2);
    }

    public delegate int KeyEventArgs_imeProcessedKey_getDelegate(HandleRef jarg1);
    public static KeyEventArgs_imeProcessedKey_getDelegate _KeyEventArgs_imeProcessedKey_get;
    public static int KeyEventArgs_imeProcessedKey_get(HandleRef jarg1)
    {
        int ret = _KeyEventArgs_imeProcessedKey_get(jarg1);

        return ret;
    }

    public delegate void KeyEventArgs_key_setDelegate(HandleRef jarg1, int jarg2);
    public static KeyEventArgs_key_setDelegate _KeyEventArgs_key_set;
    public static void KeyEventArgs_key_set(HandleRef jarg1, int jarg2)
    {
        _KeyEventArgs_key_set(jarg1, jarg2);
    }

    public delegate int KeyEventArgs_key_getDelegate(HandleRef jarg1);
    public static KeyEventArgs_key_getDelegate _KeyEventArgs_key_get;
    public static int KeyEventArgs_key_get(HandleRef jarg1)
    {
        int ret = _KeyEventArgs_key_get(jarg1);

        return ret;
    }

    public delegate void KeyEventArgs_keyStates_setDelegate(HandleRef jarg1, uint jarg2);
    public static KeyEventArgs_keyStates_setDelegate _KeyEventArgs_keyStates_set;
    public static void KeyEventArgs_keyStates_set(HandleRef jarg1, uint jarg2)
    {
        _KeyEventArgs_keyStates_set(jarg1, jarg2);
    }

    public delegate uint KeyEventArgs_keyStates_getDelegate(HandleRef jarg1);
    public static KeyEventArgs_keyStates_getDelegate _KeyEventArgs_keyStates_get;
    public static uint KeyEventArgs_keyStates_get(HandleRef jarg1)
    {
        uint ret = _KeyEventArgs_keyStates_get(jarg1);

        return ret;
    }

    public delegate void KeyEventArgs_systemKey_setDelegate(HandleRef jarg1, int jarg2);
    public static KeyEventArgs_systemKey_setDelegate _KeyEventArgs_systemKey_set;
    public static void KeyEventArgs_systemKey_set(HandleRef jarg1, int jarg2)
    {
        _KeyEventArgs_systemKey_set(jarg1, jarg2);
    }

    public delegate int KeyEventArgs_systemKey_getDelegate(HandleRef jarg1);
    public static KeyEventArgs_systemKey_getDelegate _KeyEventArgs_systemKey_get;
    public static int KeyEventArgs_systemKey_get(HandleRef jarg1)
    {
        int ret = _KeyEventArgs_systemKey_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_KeyEventArgsDelegate(HandleRef jarg1, HandleRef jarg2, int jarg3, uint jarg4);
    public static new_KeyEventArgsDelegate _new_KeyEventArgs;
    public static IntPtr new_KeyEventArgs(HandleRef jarg1, HandleRef jarg2, int jarg3, uint jarg4)
    {
        IntPtr ret = _new_KeyEventArgs(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate bool KeyEventArgs_GetIsDownDelegate(HandleRef jarg1);
    public static KeyEventArgs_GetIsDownDelegate _KeyEventArgs_GetIsDown;
    public static bool KeyEventArgs_GetIsDown(HandleRef jarg1)
    {
        bool ret = _KeyEventArgs_GetIsDown(jarg1);

        return ret;
    }

    public delegate bool KeyEventArgs_GetIsRepeatDelegate(HandleRef jarg1);
    public static KeyEventArgs_GetIsRepeatDelegate _KeyEventArgs_GetIsRepeat;
    public static bool KeyEventArgs_GetIsRepeat(HandleRef jarg1)
    {
        bool ret = _KeyEventArgs_GetIsRepeat(jarg1);

        return ret;
    }

    public delegate bool KeyEventArgs_GetIsToggledDelegate(HandleRef jarg1);
    public static KeyEventArgs_GetIsToggledDelegate _KeyEventArgs_GetIsToggled;
    public static bool KeyEventArgs_GetIsToggled(HandleRef jarg1)
    {
        bool ret = _KeyEventArgs_GetIsToggled(jarg1);

        return ret;
    }

    public delegate bool KeyEventArgs_GetIsUpDelegate(HandleRef jarg1);
    public static KeyEventArgs_GetIsUpDelegate _KeyEventArgs_GetIsUp;
    public static bool KeyEventArgs_GetIsUp(HandleRef jarg1)
    {
        bool ret = _KeyEventArgs_GetIsUp(jarg1);

        return ret;
    }

    public delegate void delete_KeyEventArgsDelegate(HandleRef jarg1);
    public static delete_KeyEventArgsDelegate _delete_KeyEventArgs;
    public static void delete_KeyEventArgs(HandleRef jarg1)
    {
        _delete_KeyEventArgs(jarg1);
    }

    public delegate void DragEventArgs_allowedEffects_setDelegate(HandleRef jarg1, int jarg2);
    public static DragEventArgs_allowedEffects_setDelegate _DragEventArgs_allowedEffects_set;
    public static void DragEventArgs_allowedEffects_set(HandleRef jarg1, int jarg2)
    {
        _DragEventArgs_allowedEffects_set(jarg1, jarg2);
    }

    public delegate int DragEventArgs_allowedEffects_getDelegate(HandleRef jarg1);
    public static DragEventArgs_allowedEffects_getDelegate _DragEventArgs_allowedEffects_get;
    public static int DragEventArgs_allowedEffects_get(HandleRef jarg1)
    {
        int ret = _DragEventArgs_allowedEffects_get(jarg1);

        return ret;
    }

    public delegate void DragEventArgs_data_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DragEventArgs_data_setDelegate _DragEventArgs_data_set;
    public static void DragEventArgs_data_set(HandleRef jarg1, HandleRef jarg2)
    {
        _DragEventArgs_data_set(jarg1, jarg2);
    }

    public delegate IntPtr DragEventArgs_data_getDelegate(HandleRef jarg1);
    public static DragEventArgs_data_getDelegate _DragEventArgs_data_get;
    public static IntPtr DragEventArgs_data_get(HandleRef jarg1)
    {
        IntPtr ret = _DragEventArgs_data_get(jarg1);

        return ret;
    }

    public delegate void DragEventArgs_effects_setDelegate(HandleRef jarg1, int jarg2);
    public static DragEventArgs_effects_setDelegate _DragEventArgs_effects_set;
    public static void DragEventArgs_effects_set(HandleRef jarg1, int jarg2)
    {
        _DragEventArgs_effects_set(jarg1, jarg2);
    }

    public delegate int DragEventArgs_effects_getDelegate(HandleRef jarg1);
    public static DragEventArgs_effects_getDelegate _DragEventArgs_effects_get;
    public static int DragEventArgs_effects_get(HandleRef jarg1)
    {
        int ret = _DragEventArgs_effects_get(jarg1);

        return ret;
    }

    public delegate void DragEventArgs_keyStates_setDelegate(HandleRef jarg1, int jarg2);
    public static DragEventArgs_keyStates_setDelegate _DragEventArgs_keyStates_set;
    public static void DragEventArgs_keyStates_set(HandleRef jarg1, int jarg2)
    {
        _DragEventArgs_keyStates_set(jarg1, jarg2);
    }

    public delegate int DragEventArgs_keyStates_getDelegate(HandleRef jarg1);
    public static DragEventArgs_keyStates_getDelegate _DragEventArgs_keyStates_get;
    public static int DragEventArgs_keyStates_get(HandleRef jarg1)
    {
        int ret = _DragEventArgs_keyStates_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_DragEventArgsDelegate(HandleRef jarg1, HandleRef jarg2);
    public static new_DragEventArgsDelegate _new_DragEventArgs;
    public static IntPtr new_DragEventArgs(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_DragEventArgs(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_DragEventArgsDelegate(HandleRef jarg1);
    public static delete_DragEventArgsDelegate _delete_DragEventArgs;
    public static void delete_DragEventArgs(HandleRef jarg1)
    {
        _delete_DragEventArgs(jarg1);
    }

    public delegate void GiveFeedbackEventArgs_effects_setDelegate(HandleRef jarg1, int jarg2);
    public static GiveFeedbackEventArgs_effects_setDelegate _GiveFeedbackEventArgs_effects_set;
    public static void GiveFeedbackEventArgs_effects_set(HandleRef jarg1, int jarg2)
    {
        _GiveFeedbackEventArgs_effects_set(jarg1, jarg2);
    }

    public delegate int GiveFeedbackEventArgs_effects_getDelegate(HandleRef jarg1);
    public static GiveFeedbackEventArgs_effects_getDelegate _GiveFeedbackEventArgs_effects_get;
    public static int GiveFeedbackEventArgs_effects_get(HandleRef jarg1)
    {
        int ret = _GiveFeedbackEventArgs_effects_get(jarg1);

        return ret;
    }

    public delegate void GiveFeedbackEventArgs_useDefaultCursors_setDelegate(HandleRef jarg1, bool jarg2);
    public static GiveFeedbackEventArgs_useDefaultCursors_setDelegate _GiveFeedbackEventArgs_useDefaultCursors_set;
    public static void GiveFeedbackEventArgs_useDefaultCursors_set(HandleRef jarg1, bool jarg2)
    {
        _GiveFeedbackEventArgs_useDefaultCursors_set(jarg1, jarg2);
    }

    public delegate bool GiveFeedbackEventArgs_useDefaultCursors_getDelegate(HandleRef jarg1);
    public static GiveFeedbackEventArgs_useDefaultCursors_getDelegate _GiveFeedbackEventArgs_useDefaultCursors_get;
    public static bool GiveFeedbackEventArgs_useDefaultCursors_get(HandleRef jarg1)
    {
        bool ret = _GiveFeedbackEventArgs_useDefaultCursors_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_GiveFeedbackEventArgsDelegate(HandleRef jarg1, HandleRef jarg2);
    public static new_GiveFeedbackEventArgsDelegate _new_GiveFeedbackEventArgs;
    public static IntPtr new_GiveFeedbackEventArgs(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_GiveFeedbackEventArgs(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_GiveFeedbackEventArgsDelegate(HandleRef jarg1);
    public static delete_GiveFeedbackEventArgsDelegate _delete_GiveFeedbackEventArgs;
    public static void delete_GiveFeedbackEventArgs(HandleRef jarg1)
    {
        _delete_GiveFeedbackEventArgs(jarg1);
    }

    public delegate void QueryContinueDragEventArgs_action_setDelegate(HandleRef jarg1, int jarg2);
    public static QueryContinueDragEventArgs_action_setDelegate _QueryContinueDragEventArgs_action_set;
    public static void QueryContinueDragEventArgs_action_set(HandleRef jarg1, int jarg2)
    {
        _QueryContinueDragEventArgs_action_set(jarg1, jarg2);
    }

    public delegate int QueryContinueDragEventArgs_action_getDelegate(HandleRef jarg1);
    public static QueryContinueDragEventArgs_action_getDelegate _QueryContinueDragEventArgs_action_get;
    public static int QueryContinueDragEventArgs_action_get(HandleRef jarg1)
    {
        int ret = _QueryContinueDragEventArgs_action_get(jarg1);

        return ret;
    }

    public delegate void QueryContinueDragEventArgs_escapePressed_setDelegate(HandleRef jarg1, bool jarg2);
    public static QueryContinueDragEventArgs_escapePressed_setDelegate _QueryContinueDragEventArgs_escapePressed_set;
    public static void QueryContinueDragEventArgs_escapePressed_set(HandleRef jarg1, bool jarg2)
    {
        _QueryContinueDragEventArgs_escapePressed_set(jarg1, jarg2);
    }

    public delegate bool QueryContinueDragEventArgs_escapePressed_getDelegate(HandleRef jarg1);
    public static QueryContinueDragEventArgs_escapePressed_getDelegate _QueryContinueDragEventArgs_escapePressed_get;
    public static bool QueryContinueDragEventArgs_escapePressed_get(HandleRef jarg1)
    {
        bool ret = _QueryContinueDragEventArgs_escapePressed_get(jarg1);

        return ret;
    }

    public delegate void QueryContinueDragEventArgs_keyStates_setDelegate(HandleRef jarg1, int jarg2);
    public static QueryContinueDragEventArgs_keyStates_setDelegate _QueryContinueDragEventArgs_keyStates_set;
    public static void QueryContinueDragEventArgs_keyStates_set(HandleRef jarg1, int jarg2)
    {
        _QueryContinueDragEventArgs_keyStates_set(jarg1, jarg2);
    }

    public delegate int QueryContinueDragEventArgs_keyStates_getDelegate(HandleRef jarg1);
    public static QueryContinueDragEventArgs_keyStates_getDelegate _QueryContinueDragEventArgs_keyStates_get;
    public static int QueryContinueDragEventArgs_keyStates_get(HandleRef jarg1)
    {
        int ret = _QueryContinueDragEventArgs_keyStates_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_QueryContinueDragEventArgsDelegate(HandleRef jarg1, HandleRef jarg2);
    public static new_QueryContinueDragEventArgsDelegate _new_QueryContinueDragEventArgs;
    public static IntPtr new_QueryContinueDragEventArgs(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_QueryContinueDragEventArgs(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_QueryContinueDragEventArgsDelegate(HandleRef jarg1);
    public static delete_QueryContinueDragEventArgsDelegate _delete_QueryContinueDragEventArgs;
    public static void delete_QueryContinueDragEventArgs(HandleRef jarg1)
    {
        _delete_QueryContinueDragEventArgs(jarg1);
    }

    public delegate void TextCompositionEventArgs_ch_setDelegate(HandleRef jarg1, uint jarg2);
    public static TextCompositionEventArgs_ch_setDelegate _TextCompositionEventArgs_ch_set;
    public static void TextCompositionEventArgs_ch_set(HandleRef jarg1, uint jarg2)
    {
        _TextCompositionEventArgs_ch_set(jarg1, jarg2);
    }

    public delegate uint TextCompositionEventArgs_ch_getDelegate(HandleRef jarg1);
    public static TextCompositionEventArgs_ch_getDelegate _TextCompositionEventArgs_ch_get;
    public static uint TextCompositionEventArgs_ch_get(HandleRef jarg1)
    {
        uint ret = _TextCompositionEventArgs_ch_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_TextCompositionEventArgsDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static new_TextCompositionEventArgsDelegate _new_TextCompositionEventArgs;
    public static IntPtr new_TextCompositionEventArgs(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        IntPtr ret = _new_TextCompositionEventArgs(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void delete_TextCompositionEventArgsDelegate(HandleRef jarg1);
    public static delete_TextCompositionEventArgsDelegate _delete_TextCompositionEventArgs;
    public static void delete_TextCompositionEventArgs(HandleRef jarg1)
    {
        _delete_TextCompositionEventArgs(jarg1);
    }

    public delegate IntPtr new_QueryCursorEventArgsDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static new_QueryCursorEventArgsDelegate _new_QueryCursorEventArgs;
    public static IntPtr new_QueryCursorEventArgs(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        IntPtr ret = _new_QueryCursorEventArgs(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void delete_QueryCursorEventArgsDelegate(HandleRef jarg1);
    public static delete_QueryCursorEventArgsDelegate _delete_QueryCursorEventArgs;
    public static void delete_QueryCursorEventArgs(HandleRef jarg1)
    {
        _delete_QueryCursorEventArgs(jarg1);
    }

    public delegate void TraversalRequest_focusNavigationDirection_setDelegate(HandleRef jarg1, int jarg2);
    public static TraversalRequest_focusNavigationDirection_setDelegate _TraversalRequest_focusNavigationDirection_set;
    public static void TraversalRequest_focusNavigationDirection_set(HandleRef jarg1, int jarg2)
    {
        _TraversalRequest_focusNavigationDirection_set(jarg1, jarg2);
    }

    public delegate int TraversalRequest_focusNavigationDirection_getDelegate(HandleRef jarg1);
    public static TraversalRequest_focusNavigationDirection_getDelegate _TraversalRequest_focusNavigationDirection_get;
    public static int TraversalRequest_focusNavigationDirection_get(HandleRef jarg1)
    {
        int ret = _TraversalRequest_focusNavigationDirection_get(jarg1);

        return ret;
    }

    public delegate void TraversalRequest_wrapped_setDelegate(HandleRef jarg1, bool jarg2);
    public static TraversalRequest_wrapped_setDelegate _TraversalRequest_wrapped_set;
    public static void TraversalRequest_wrapped_set(HandleRef jarg1, bool jarg2)
    {
        _TraversalRequest_wrapped_set(jarg1, jarg2);
    }

    public delegate bool TraversalRequest_wrapped_getDelegate(HandleRef jarg1);
    public static TraversalRequest_wrapped_getDelegate _TraversalRequest_wrapped_get;
    public static bool TraversalRequest_wrapped_get(HandleRef jarg1)
    {
        bool ret = _TraversalRequest_wrapped_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_TraversalRequestDelegate();
    public static new_TraversalRequestDelegate _new_TraversalRequest;
    public static IntPtr new_TraversalRequest()
    {
        IntPtr ret = _new_TraversalRequest();

        return ret;
    }

    public delegate void delete_TraversalRequestDelegate(HandleRef jarg1);
    public static delete_TraversalRequestDelegate _delete_TraversalRequest;
    public static void delete_TraversalRequest(HandleRef jarg1)
    {
        _delete_TraversalRequest(jarg1);
    }

    public delegate IntPtr new_ValueTargetProviderDelegate(HandleRef jarg1, HandleRef jarg2);
    public static new_ValueTargetProviderDelegate _new_ValueTargetProvider;
    public static IntPtr new_ValueTargetProvider(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_ValueTargetProvider(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr ValueTargetProvider_GetTargetObjectDelegate(HandleRef jarg1);
    public static ValueTargetProvider_GetTargetObjectDelegate _ValueTargetProvider_GetTargetObject;
    public static IntPtr ValueTargetProvider_GetTargetObject(HandleRef jarg1)
    {
        IntPtr ret = _ValueTargetProvider_GetTargetObject(jarg1);

        return ret;
    }

    public delegate IntPtr ValueTargetProvider_GetTargetPropertyDelegate(HandleRef jarg1);
    public static ValueTargetProvider_GetTargetPropertyDelegate _ValueTargetProvider_GetTargetProperty;
    public static IntPtr ValueTargetProvider_GetTargetProperty(HandleRef jarg1)
    {
        IntPtr ret = _ValueTargetProvider_GetTargetProperty(jarg1);

        return ret;
    }

    public delegate void delete_ValueTargetProviderDelegate(HandleRef jarg1);
    public static delete_ValueTargetProviderDelegate _delete_ValueTargetProvider;
    public static void delete_ValueTargetProvider(HandleRef jarg1)
    {
        _delete_ValueTargetProvider(jarg1);
    }

    public delegate IntPtr new_ViewboxDelegate();
    public static new_ViewboxDelegate _new_Viewbox;
    public static IntPtr new_Viewbox()
    {
        IntPtr ret = _new_Viewbox();

        return ret;
    }

    public delegate void delete_ViewboxDelegate(HandleRef jarg1);
    public static delete_ViewboxDelegate _delete_Viewbox;
    public static void delete_Viewbox(HandleRef jarg1)
    {
        _delete_Viewbox(jarg1);
    }

    public delegate IntPtr Viewbox_GetStretchScale__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);
    public static Viewbox_GetStretchScale__SWIG_0Delegate _Viewbox_GetStretchScale__SWIG_0;
    public static IntPtr Viewbox_GetStretchScale__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4)
    {
        IntPtr ret = _Viewbox_GetStretchScale__SWIG_0(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr Viewbox_GetStretchScale__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2, int jarg3);
    public static Viewbox_GetStretchScale__SWIG_1Delegate _Viewbox_GetStretchScale__SWIG_1;
    public static IntPtr Viewbox_GetStretchScale__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3)
    {
        IntPtr ret = _Viewbox_GetStretchScale__SWIG_1(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate int Viewbox_GetStretchDirectionDelegate(HandleRef jarg1);
    public static Viewbox_GetStretchDirectionDelegate _Viewbox_GetStretchDirection;
    public static int Viewbox_GetStretchDirection(HandleRef jarg1)
    {
        int ret = _Viewbox_GetStretchDirection(jarg1);

        return ret;
    }

    public delegate void Viewbox_SetStretchDirectionDelegate(HandleRef jarg1, int jarg2);
    public static Viewbox_SetStretchDirectionDelegate _Viewbox_SetStretchDirection;
    public static void Viewbox_SetStretchDirection(HandleRef jarg1, int jarg2)
    {
        _Viewbox_SetStretchDirection(jarg1, jarg2);
    }

    public delegate int Viewbox_GetStretchDelegate(HandleRef jarg1);
    public static Viewbox_GetStretchDelegate _Viewbox_GetStretch;
    public static int Viewbox_GetStretch(HandleRef jarg1)
    {
        int ret = _Viewbox_GetStretch(jarg1);

        return ret;
    }

    public delegate void Viewbox_SetStretchDelegate(HandleRef jarg1, int jarg2);
    public static Viewbox_SetStretchDelegate _Viewbox_SetStretch;
    public static void Viewbox_SetStretch(HandleRef jarg1, int jarg2)
    {
        _Viewbox_SetStretch(jarg1, jarg2);
    }

    public delegate IntPtr Viewbox_GetChildDelegate(HandleRef jarg1);
    public static Viewbox_GetChildDelegate _Viewbox_GetChild;
    public static IntPtr Viewbox_GetChild(HandleRef jarg1)
    {
        IntPtr ret = _Viewbox_GetChild(jarg1);

        return ret;
    }

    public delegate void Viewbox_SetChildDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Viewbox_SetChildDelegate _Viewbox_SetChild;
    public static void Viewbox_SetChild(HandleRef jarg1, HandleRef jarg2)
    {
        _Viewbox_SetChild(jarg1, jarg2);
    }

    public delegate IntPtr new_VisualBrushDelegate();
    public static new_VisualBrushDelegate _new_VisualBrush;
    public static IntPtr new_VisualBrush()
    {
        IntPtr ret = _new_VisualBrush();

        return ret;
    }

    public delegate void delete_VisualBrushDelegate(HandleRef jarg1);
    public static delete_VisualBrushDelegate _delete_VisualBrush;
    public static void delete_VisualBrush(HandleRef jarg1)
    {
        _delete_VisualBrush(jarg1);
    }

    public delegate bool VisualBrush_GetAutoLayoutContentDelegate(HandleRef jarg1);
    public static VisualBrush_GetAutoLayoutContentDelegate _VisualBrush_GetAutoLayoutContent;
    public static bool VisualBrush_GetAutoLayoutContent(HandleRef jarg1)
    {
        bool ret = _VisualBrush_GetAutoLayoutContent(jarg1);

        return ret;
    }

    public delegate void VisualBrush_SetAutoLayoutContentDelegate(HandleRef jarg1, bool jarg2);
    public static VisualBrush_SetAutoLayoutContentDelegate _VisualBrush_SetAutoLayoutContent;
    public static void VisualBrush_SetAutoLayoutContent(HandleRef jarg1, bool jarg2)
    {
        _VisualBrush_SetAutoLayoutContent(jarg1, jarg2);
    }

    public delegate IntPtr VisualBrush_GetVisualDelegate(HandleRef jarg1);
    public static VisualBrush_GetVisualDelegate _VisualBrush_GetVisual;
    public static IntPtr VisualBrush_GetVisual(HandleRef jarg1)
    {
        IntPtr ret = _VisualBrush_GetVisual(jarg1);

        return ret;
    }

    public delegate void VisualBrush_SetVisualDelegate(HandleRef jarg1, HandleRef jarg2);
    public static VisualBrush_SetVisualDelegate _VisualBrush_SetVisual;
    public static void VisualBrush_SetVisual(HandleRef jarg1, HandleRef jarg2)
    {
        _VisualBrush_SetVisual(jarg1, jarg2);
    }

    public delegate void VisualBrush_CreateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static VisualBrush_CreateRenderProxyDelegate _VisualBrush_CreateRenderProxy;
    public static void VisualBrush_CreateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _VisualBrush_CreateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate void VisualBrush_UpdateRenderProxyDelegate(HandleRef jarg1, HandleRef jarg2, uint jarg3);
    public static VisualBrush_UpdateRenderProxyDelegate _VisualBrush_UpdateRenderProxy;
    public static void VisualBrush_UpdateRenderProxy(HandleRef jarg1, HandleRef jarg2, uint jarg3)
    {
        _VisualBrush_UpdateRenderProxy(jarg1, jarg2, jarg3);
    }

    public delegate IntPtr VisualTreeHelper_GetRootDelegate(HandleRef jarg1);
    public static VisualTreeHelper_GetRootDelegate _VisualTreeHelper_GetRoot;
    public static IntPtr VisualTreeHelper_GetRoot(HandleRef jarg1)
    {
        IntPtr ret = _VisualTreeHelper_GetRoot(jarg1);

        return ret;
    }

    public delegate IntPtr VisualTreeHelper_GetParentDelegate(HandleRef jarg1);
    public static VisualTreeHelper_GetParentDelegate _VisualTreeHelper_GetParent;
    public static IntPtr VisualTreeHelper_GetParent(HandleRef jarg1)
    {
        IntPtr ret = _VisualTreeHelper_GetParent(jarg1);

        return ret;
    }

    public delegate uint VisualTreeHelper_GetChildrenCountDelegate(HandleRef jarg1);
    public static VisualTreeHelper_GetChildrenCountDelegate _VisualTreeHelper_GetChildrenCount;
    public static uint VisualTreeHelper_GetChildrenCount(HandleRef jarg1)
    {
        uint ret = _VisualTreeHelper_GetChildrenCount(jarg1);

        return ret;
    }

    public delegate IntPtr VisualTreeHelper_GetChildDelegate(HandleRef jarg1, uint jarg2);
    public static VisualTreeHelper_GetChildDelegate _VisualTreeHelper_GetChild;
    public static IntPtr VisualTreeHelper_GetChild(HandleRef jarg1, uint jarg2)
    {
        IntPtr ret = _VisualTreeHelper_GetChild(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr VisualTreeHelper_GetContentBoundsDelegate(HandleRef jarg1);
    public static VisualTreeHelper_GetContentBoundsDelegate _VisualTreeHelper_GetContentBounds;
    public static IntPtr VisualTreeHelper_GetContentBounds(HandleRef jarg1)
    {
        IntPtr ret = _VisualTreeHelper_GetContentBounds(jarg1);

        return ret;
    }

    public delegate IntPtr VisualTreeHelper_GetDescendantBoundsDelegate(HandleRef jarg1);
    public static VisualTreeHelper_GetDescendantBoundsDelegate _VisualTreeHelper_GetDescendantBounds;
    public static IntPtr VisualTreeHelper_GetDescendantBounds(HandleRef jarg1)
    {
        IntPtr ret = _VisualTreeHelper_GetDescendantBounds(jarg1);

        return ret;
    }

    public delegate IntPtr VisualTreeHelper_HitTest__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2);
    public static VisualTreeHelper_HitTest__SWIG_0Delegate _VisualTreeHelper_HitTest__SWIG_0;
    public static IntPtr VisualTreeHelper_HitTest__SWIG_0(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _VisualTreeHelper_HitTest__SWIG_0(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr VisualTreeHelper_HitTest__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static VisualTreeHelper_HitTest__SWIG_1Delegate _VisualTreeHelper_HitTest__SWIG_1;
    public static IntPtr VisualTreeHelper_HitTest__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        IntPtr ret = _VisualTreeHelper_HitTest__SWIG_1(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void VisualTreeHelper_PrintTreeDelegate(HandleRef jarg1);
    public static VisualTreeHelper_PrintTreeDelegate _VisualTreeHelper_PrintTree;
    public static void VisualTreeHelper_PrintTree(HandleRef jarg1)
    {
        _VisualTreeHelper_PrintTree(jarg1);
    }

    public delegate IntPtr new_VisualTreeHelperDelegate();
    public static new_VisualTreeHelperDelegate _new_VisualTreeHelper;
    public static IntPtr new_VisualTreeHelper()
    {
        IntPtr ret = _new_VisualTreeHelper();

        return ret;
    }

    public delegate void delete_VisualTreeHelperDelegate(HandleRef jarg1);
    public static delete_VisualTreeHelperDelegate _delete_VisualTreeHelper;
    public static void delete_VisualTreeHelper(HandleRef jarg1)
    {
        _delete_VisualTreeHelper(jarg1);
    }

    public delegate void CancelEventArgs_cancel_setDelegate(HandleRef jarg1, bool jarg2);
    public static CancelEventArgs_cancel_setDelegate _CancelEventArgs_cancel_set;
    public static void CancelEventArgs_cancel_set(HandleRef jarg1, bool jarg2)
    {
        _CancelEventArgs_cancel_set(jarg1, jarg2);
    }

    public delegate bool CancelEventArgs_cancel_getDelegate(HandleRef jarg1);
    public static CancelEventArgs_cancel_getDelegate _CancelEventArgs_cancel_get;
    public static bool CancelEventArgs_cancel_get(HandleRef jarg1)
    {
        bool ret = _CancelEventArgs_cancel_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_CancelEventArgsDelegate();
    public static new_CancelEventArgsDelegate _new_CancelEventArgs;
    public static IntPtr new_CancelEventArgs()
    {
        IntPtr ret = _new_CancelEventArgs();

        return ret;
    }

    public delegate void delete_CancelEventArgsDelegate(HandleRef jarg1);
    public static delete_CancelEventArgsDelegate _delete_CancelEventArgs;
    public static void delete_CancelEventArgs(HandleRef jarg1)
    {
        _delete_CancelEventArgs(jarg1);
    }

    public delegate IntPtr new_WindowDelegate();
    public static new_WindowDelegate _new_Window;
    public static IntPtr new_Window()
    {
        IntPtr ret = _new_Window();

        return ret;
    }

    public delegate void delete_WindowDelegate(HandleRef jarg1);
    public static delete_WindowDelegate _delete_Window;
    public static void delete_Window(HandleRef jarg1)
    {
        _delete_Window(jarg1);
    }

    public delegate IntPtr Window_GetContentSizeDelegate(HandleRef jarg1);
    public static Window_GetContentSizeDelegate _Window_GetContentSize;
    public static IntPtr Window_GetContentSize(HandleRef jarg1)
    {
        IntPtr ret = _Window_GetContentSize(jarg1);

        return ret;
    }

    public delegate IntPtr Window_GetSystemWindowDelegate(HandleRef jarg1);
    public static Window_GetSystemWindowDelegate _Window_GetSystemWindow;
    public static IntPtr Window_GetSystemWindow(HandleRef jarg1)
    {
        IntPtr ret = _Window_GetSystemWindow(jarg1);

        return ret;
    }

    public delegate void Window_AttachDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Window_AttachDelegate _Window_Attach;
    public static void Window_Attach(HandleRef jarg1, HandleRef jarg2)
    {
        _Window_Attach(jarg1, jarg2);
    }

    public delegate void Window_DetachDelegate(HandleRef jarg1);
    public static Window_DetachDelegate _Window_Detach;
    public static void Window_Detach(HandleRef jarg1)
    {
        _Window_Detach(jarg1);
    }

    public delegate void Window_CreateDelegate(HandleRef jarg1);
    public static Window_CreateDelegate _Window_Create;
    public static void Window_Create(HandleRef jarg1)
    {
        _Window_Create(jarg1);
    }

    public delegate void Window_ShowDelegate(HandleRef jarg1);
    public static Window_ShowDelegate _Window_Show;
    public static void Window_Show(HandleRef jarg1)
    {
        _Window_Show(jarg1);
    }

    public delegate bool Window_ShowDialogDelegate(HandleRef jarg1);
    public static Window_ShowDialogDelegate _Window_ShowDialog;
    public static bool Window_ShowDialog(HandleRef jarg1)
    {
        bool ret = _Window_ShowDialog(jarg1);

        return ret;
    }

    public delegate bool Window_ActivateDelegate(HandleRef jarg1);
    public static Window_ActivateDelegate _Window_Activate;
    public static bool Window_Activate(HandleRef jarg1)
    {
        bool ret = _Window_Activate(jarg1);

        return ret;
    }

    public delegate void Window_HideDelegate(HandleRef jarg1);
    public static Window_HideDelegate _Window_Hide;
    public static void Window_Hide(HandleRef jarg1)
    {
        _Window_Hide(jarg1);
    }

    public delegate void Window_Close__SWIG_0Delegate(HandleRef jarg1, bool jarg2);
    public static Window_Close__SWIG_0Delegate _Window_Close__SWIG_0;
    public static void Window_Close__SWIG_0(HandleRef jarg1, bool jarg2)
    {
        _Window_Close__SWIG_0(jarg1, jarg2);
    }

    public delegate void Window_Close__SWIG_1Delegate(HandleRef jarg1);
    public static Window_Close__SWIG_1Delegate _Window_Close__SWIG_1;
    public static void Window_Close__SWIG_1(HandleRef jarg1)
    {
        _Window_Close__SWIG_1(jarg1);
    }

    public delegate bool Window_GetAllowsTransparencyDelegate(HandleRef jarg1);
    public static Window_GetAllowsTransparencyDelegate _Window_GetAllowsTransparency;
    public static bool Window_GetAllowsTransparency(HandleRef jarg1)
    {
        bool ret = _Window_GetAllowsTransparency(jarg1);

        return ret;
    }

    public delegate void Window_SetAllowsTransparencyDelegate(HandleRef jarg1, bool jarg2);
    public static Window_SetAllowsTransparencyDelegate _Window_SetAllowsTransparency;
    public static void Window_SetAllowsTransparency(HandleRef jarg1, bool jarg2)
    {
        _Window_SetAllowsTransparency(jarg1, jarg2);
    }

    public delegate bool Window_GetDialogResultDelegate(HandleRef jarg1);
    public static Window_GetDialogResultDelegate _Window_GetDialogResult;
    public static bool Window_GetDialogResult(HandleRef jarg1)
    {
        bool ret = _Window_GetDialogResult(jarg1);

        return ret;
    }

    public delegate void Window_SetDialogResultDelegate(HandleRef jarg1, bool jarg2);
    public static Window_SetDialogResultDelegate _Window_SetDialogResult;
    public static void Window_SetDialogResult(HandleRef jarg1, bool jarg2)
    {
        _Window_SetDialogResult(jarg1, jarg2);
    }

    public delegate bool Window_GetFullscreenDelegate(HandleRef jarg1);
    public static Window_GetFullscreenDelegate _Window_GetFullscreen;
    public static bool Window_GetFullscreen(HandleRef jarg1)
    {
        bool ret = _Window_GetFullscreen(jarg1);

        return ret;
    }

    public delegate void Window_SetFullscreenDelegate(HandleRef jarg1, bool jarg2);
    public static Window_SetFullscreenDelegate _Window_SetFullscreen;
    public static void Window_SetFullscreen(HandleRef jarg1, bool jarg2)
    {
        _Window_SetFullscreen(jarg1, jarg2);
    }

    public delegate IntPtr Window_GetIconDelegate(HandleRef jarg1);
    public static Window_GetIconDelegate _Window_GetIcon;
    public static IntPtr Window_GetIcon(HandleRef jarg1)
    {
        IntPtr ret = _Window_GetIcon(jarg1);

        return ret;
    }

    public delegate void Window_SetIconDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Window_SetIconDelegate _Window_SetIcon;
    public static void Window_SetIcon(HandleRef jarg1, HandleRef jarg2)
    {
        _Window_SetIcon(jarg1, jarg2);
    }

    public delegate bool Window_GetIsActiveDelegate(HandleRef jarg1);
    public static Window_GetIsActiveDelegate _Window_GetIsActive;
    public static bool Window_GetIsActive(HandleRef jarg1)
    {
        bool ret = _Window_GetIsActive(jarg1);

        return ret;
    }

    public delegate void Window_SetIsActiveDelegate(HandleRef jarg1, bool jarg2);
    public static Window_SetIsActiveDelegate _Window_SetIsActive;
    public static void Window_SetIsActive(HandleRef jarg1, bool jarg2)
    {
        _Window_SetIsActive(jarg1, jarg2);
    }

    public delegate float Window_GetLeftDelegate(HandleRef jarg1);
    public static Window_GetLeftDelegate _Window_GetLeft;
    public static float Window_GetLeft(HandleRef jarg1)
    {
        float ret = _Window_GetLeft(jarg1);

        return ret;
    }

    public delegate void Window_SetLeftDelegate(HandleRef jarg1, float jarg2);
    public static Window_SetLeftDelegate _Window_SetLeft;
    public static void Window_SetLeft(HandleRef jarg1, float jarg2)
    {
        _Window_SetLeft(jarg1, jarg2);
    }

    public delegate IntPtr Window_GetResizeModeDelegate(HandleRef jarg1);
    public static Window_GetResizeModeDelegate _Window_GetResizeMode;
    public static IntPtr Window_GetResizeMode(HandleRef jarg1)
    {
        IntPtr ret = _Window_GetResizeMode(jarg1);

        return ret;
    }

    public delegate void Window_SetResizeModeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Window_SetResizeModeDelegate _Window_SetResizeMode;
    public static void Window_SetResizeMode(HandleRef jarg1, HandleRef jarg2)
    {
        _Window_SetResizeMode(jarg1, jarg2);
    }

    public delegate bool Window_GetShowInTaskbarDelegate(HandleRef jarg1);
    public static Window_GetShowInTaskbarDelegate _Window_GetShowInTaskbar;
    public static bool Window_GetShowInTaskbar(HandleRef jarg1)
    {
        bool ret = _Window_GetShowInTaskbar(jarg1);

        return ret;
    }

    public delegate void Window_SetShowInTaskbarDelegate(HandleRef jarg1, bool jarg2);
    public static Window_SetShowInTaskbarDelegate _Window_SetShowInTaskbar;
    public static void Window_SetShowInTaskbar(HandleRef jarg1, bool jarg2)
    {
        _Window_SetShowInTaskbar(jarg1, jarg2);
    }

    public delegate int Window_GetSizeToContentDelegate(HandleRef jarg1);
    public static Window_GetSizeToContentDelegate _Window_GetSizeToContent;
    public static int Window_GetSizeToContent(HandleRef jarg1)
    {
        int ret = _Window_GetSizeToContent(jarg1);

        return ret;
    }

    public delegate void Window_SetSizeToContentDelegate(HandleRef jarg1, int jarg2);
    public static Window_SetSizeToContentDelegate _Window_SetSizeToContent;
    public static void Window_SetSizeToContent(HandleRef jarg1, int jarg2)
    {
        _Window_SetSizeToContent(jarg1, jarg2);
    }

    public delegate IntPtr Window_GetTitleDelegate(HandleRef jarg1);
    public static Window_GetTitleDelegate _Window_GetTitle;
    public static IntPtr Window_GetTitle(HandleRef jarg1)
    {
        IntPtr ret = _Window_GetTitle(jarg1);

        return ret;
    }

    public delegate void Window_SetTitleDelegate(HandleRef jarg1, IntPtr jarg2);
    public static Window_SetTitleDelegate _Window_SetTitle;
    public static void Window_SetTitle(HandleRef jarg1, IntPtr jarg2)
    {
        _Window_SetTitle(jarg1, jarg2);
    }

    public delegate float Window_GetTopDelegate(HandleRef jarg1);
    public static Window_GetTopDelegate _Window_GetTop;
    public static float Window_GetTop(HandleRef jarg1)
    {
        float ret = _Window_GetTop(jarg1);

        return ret;
    }

    public delegate void Window_SetTopDelegate(HandleRef jarg1, float jarg2);
    public static Window_SetTopDelegate _Window_SetTop;
    public static void Window_SetTop(HandleRef jarg1, float jarg2)
    {
        _Window_SetTop(jarg1, jarg2);
    }

    public delegate bool Window_GetTopmostDelegate(HandleRef jarg1);
    public static Window_GetTopmostDelegate _Window_GetTopmost;
    public static bool Window_GetTopmost(HandleRef jarg1)
    {
        bool ret = _Window_GetTopmost(jarg1);

        return ret;
    }

    public delegate void Window_SetTopmostDelegate(HandleRef jarg1, bool jarg2);
    public static Window_SetTopmostDelegate _Window_SetTopmost;
    public static void Window_SetTopmost(HandleRef jarg1, bool jarg2)
    {
        _Window_SetTopmost(jarg1, jarg2);
    }

    public delegate IntPtr Window_GetWindowStateDelegate(HandleRef jarg1);
    public static Window_GetWindowStateDelegate _Window_GetWindowState;
    public static IntPtr Window_GetWindowState(HandleRef jarg1)
    {
        IntPtr ret = _Window_GetWindowState(jarg1);

        return ret;
    }

    public delegate void Window_SetWindowStateDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Window_SetWindowStateDelegate _Window_SetWindowState;
    public static void Window_SetWindowState(HandleRef jarg1, HandleRef jarg2)
    {
        _Window_SetWindowState(jarg1, jarg2);
    }

    public delegate IntPtr Window_GetWindowStyleDelegate(HandleRef jarg1);
    public static Window_GetWindowStyleDelegate _Window_GetWindowStyle;
    public static IntPtr Window_GetWindowStyle(HandleRef jarg1)
    {
        IntPtr ret = _Window_GetWindowStyle(jarg1);

        return ret;
    }

    public delegate void Window_SetWindowStyleDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Window_SetWindowStyleDelegate _Window_SetWindowStyle;
    public static void Window_SetWindowStyle(HandleRef jarg1, HandleRef jarg2)
    {
        _Window_SetWindowStyle(jarg1, jarg2);
    }

    public delegate IntPtr Window_GetWindowStartupLocationDelegate(HandleRef jarg1);
    public static Window_GetWindowStartupLocationDelegate _Window_GetWindowStartupLocation;
    public static IntPtr Window_GetWindowStartupLocation(HandleRef jarg1)
    {
        IntPtr ret = _Window_GetWindowStartupLocation(jarg1);

        return ret;
    }

    public delegate void Window_SetWindowStartupLocationDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Window_SetWindowStartupLocationDelegate _Window_SetWindowStartupLocation;
    public static void Window_SetWindowStartupLocation(HandleRef jarg1, HandleRef jarg2)
    {
        _Window_SetWindowStartupLocation(jarg1, jarg2);
    }

    public delegate IntPtr Window_ActivatedDelegate(HandleRef jarg1);
    public static Window_ActivatedDelegate _Window_Activated;
    public static IntPtr Window_Activated(HandleRef jarg1)
    {
        IntPtr ret = _Window_Activated(jarg1);

        return ret;
    }

    public delegate IntPtr Window_DeactivatedDelegate(HandleRef jarg1);
    public static Window_DeactivatedDelegate _Window_Deactivated;
    public static IntPtr Window_Deactivated(HandleRef jarg1)
    {
        IntPtr ret = _Window_Deactivated(jarg1);

        return ret;
    }

    public delegate IntPtr Window_ClosingDelegate(HandleRef jarg1);
    public static Window_ClosingDelegate _Window_Closing;
    public static IntPtr Window_Closing(HandleRef jarg1)
    {
        IntPtr ret = _Window_Closing(jarg1);

        return ret;
    }

    public delegate IntPtr Window_ClosedDelegate(HandleRef jarg1);
    public static Window_ClosedDelegate _Window_Closed;
    public static IntPtr Window_Closed(HandleRef jarg1)
    {
        IntPtr ret = _Window_Closed(jarg1);

        return ret;
    }

    public delegate IntPtr Window_LocationChangedDelegate(HandleRef jarg1);
    public static Window_LocationChangedDelegate _Window_LocationChanged;
    public static IntPtr Window_LocationChanged(HandleRef jarg1)
    {
        IntPtr ret = _Window_LocationChanged(jarg1);

        return ret;
    }

    public delegate IntPtr Window_StateChangedDelegate(HandleRef jarg1);
    public static Window_StateChangedDelegate _Window_StateChanged;
    public static IntPtr Window_StateChanged(HandleRef jarg1)
    {
        IntPtr ret = _Window_StateChanged(jarg1);

        return ret;
    }

    public delegate IntPtr Window_ContentRenderedDelegate(HandleRef jarg1);
    public static Window_ContentRenderedDelegate _Window_ContentRendered;
    public static IntPtr Window_ContentRendered(HandleRef jarg1)
    {
        IntPtr ret = _Window_ContentRendered(jarg1);

        return ret;
    }

    public delegate IntPtr new_WrapPanelDelegate();
    public static new_WrapPanelDelegate _new_WrapPanel;
    public static IntPtr new_WrapPanel()
    {
        IntPtr ret = _new_WrapPanel();

        return ret;
    }

    public delegate float WrapPanel_GetItemWidthDelegate(HandleRef jarg1);
    public static WrapPanel_GetItemWidthDelegate _WrapPanel_GetItemWidth;
    public static float WrapPanel_GetItemWidth(HandleRef jarg1)
    {
        float ret = _WrapPanel_GetItemWidth(jarg1);

        return ret;
    }

    public delegate void WrapPanel_SetItemWidthDelegate(HandleRef jarg1, float jarg2);
    public static WrapPanel_SetItemWidthDelegate _WrapPanel_SetItemWidth;
    public static void WrapPanel_SetItemWidth(HandleRef jarg1, float jarg2)
    {
        _WrapPanel_SetItemWidth(jarg1, jarg2);
    }

    public delegate float WrapPanel_GetItemHeightDelegate(HandleRef jarg1);
    public static WrapPanel_GetItemHeightDelegate _WrapPanel_GetItemHeight;
    public static float WrapPanel_GetItemHeight(HandleRef jarg1)
    {
        float ret = _WrapPanel_GetItemHeight(jarg1);

        return ret;
    }

    public delegate void WrapPanel_SetItemHeightDelegate(HandleRef jarg1, float jarg2);
    public static WrapPanel_SetItemHeightDelegate _WrapPanel_SetItemHeight;
    public static void WrapPanel_SetItemHeight(HandleRef jarg1, float jarg2)
    {
        _WrapPanel_SetItemHeight(jarg1, jarg2);
    }

    public delegate int WrapPanel_GetOrientationDelegate(HandleRef jarg1);
    public static WrapPanel_GetOrientationDelegate _WrapPanel_GetOrientation;
    public static int WrapPanel_GetOrientation(HandleRef jarg1)
    {
        int ret = _WrapPanel_GetOrientation(jarg1);

        return ret;
    }

    public delegate void WrapPanel_SetOrientationDelegate(HandleRef jarg1, int jarg2);
    public static WrapPanel_SetOrientationDelegate _WrapPanel_SetOrientation;
    public static void WrapPanel_SetOrientation(HandleRef jarg1, int jarg2)
    {
        _WrapPanel_SetOrientation(jarg1, jarg2);
    }

    public delegate void delete_WrapPanelDelegate(HandleRef jarg1);
    public static delete_WrapPanelDelegate _delete_WrapPanel;
    public static void delete_WrapPanel(HandleRef jarg1)
    {
        _delete_WrapPanel(jarg1);
    }

    public delegate IntPtr MScorlibBoolean_ProvideValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static MScorlibBoolean_ProvideValueDelegate _MScorlibBoolean_ProvideValue;
    public static IntPtr MScorlibBoolean_ProvideValue(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _MScorlibBoolean_ProvideValue(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_MScorlibBooleanDelegate();
    public static new_MScorlibBooleanDelegate _new_MScorlibBoolean;
    public static IntPtr new_MScorlibBoolean()
    {
        IntPtr ret = _new_MScorlibBoolean();

        return ret;
    }

    public delegate void delete_MScorlibBooleanDelegate(HandleRef jarg1);
    public static delete_MScorlibBooleanDelegate _delete_MScorlibBoolean;
    public static void delete_MScorlibBoolean(HandleRef jarg1)
    {
        _delete_MScorlibBoolean(jarg1);
    }

    public delegate IntPtr MScorlibString_ProvideValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static MScorlibString_ProvideValueDelegate _MScorlibString_ProvideValue;
    public static IntPtr MScorlibString_ProvideValue(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _MScorlibString_ProvideValue(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_MScorlibStringDelegate();
    public static new_MScorlibStringDelegate _new_MScorlibString;
    public static IntPtr new_MScorlibString()
    {
        IntPtr ret = _new_MScorlibString();

        return ret;
    }

    public delegate void delete_MScorlibStringDelegate(HandleRef jarg1);
    public static delete_MScorlibStringDelegate _delete_MScorlibString;
    public static void delete_MScorlibString(HandleRef jarg1)
    {
        _delete_MScorlibString(jarg1);
    }

    public delegate IntPtr new_AnimationClockDelegate(HandleRef jarg1, bool jarg2);
    public static new_AnimationClockDelegate _new_AnimationClock;
    public static IntPtr new_AnimationClock(HandleRef jarg1, bool jarg2)
    {
        IntPtr ret = _new_AnimationClock(jarg1, jarg2);

        return ret;
    }

    public delegate void AnimationClock_Start__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);
    public static AnimationClock_Start__SWIG_0Delegate _AnimationClock_Start__SWIG_0;
    public static void AnimationClock_Start__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5)
    {
        _AnimationClock_Start__SWIG_0(jarg1, jarg2, jarg3, jarg4, jarg5);
    }

    public delegate void AnimationClock_Start__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static AnimationClock_Start__SWIG_1Delegate _AnimationClock_Start__SWIG_1;
    public static void AnimationClock_Start__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        _AnimationClock_Start__SWIG_1(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate void delete_AnimationClockDelegate(HandleRef jarg1);
    public static delete_AnimationClockDelegate _delete_AnimationClock;
    public static void delete_AnimationClock(HandleRef jarg1)
    {
        _delete_AnimationClock(jarg1);
    }

    public delegate void delete_AnimationTimelineDelegate(HandleRef jarg1);
    public static delete_AnimationTimelineDelegate _delete_AnimationTimeline;
    public static void delete_AnimationTimeline(HandleRef jarg1)
    {
        _delete_AnimationTimeline(jarg1);
    }

    public delegate IntPtr AnimationTimeline_GetAnimatedValueDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static AnimationTimeline_GetAnimatedValueDelegate _AnimationTimeline_GetAnimatedValue;
    public static IntPtr AnimationTimeline_GetAnimatedValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        IntPtr ret = _AnimationTimeline_GetAnimatedValue(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate void AnimationTimeline_Start__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5);
    public static AnimationTimeline_Start__SWIG_0Delegate _AnimationTimeline_Start__SWIG_0;
    public static void AnimationTimeline_Start__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5)
    {
        _AnimationTimeline_Start__SWIG_0(jarg1, jarg2, jarg3, jarg4, jarg5);
    }

    public delegate void AnimationTimeline_Start__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static AnimationTimeline_Start__SWIG_1Delegate _AnimationTimeline_Start__SWIG_1;
    public static void AnimationTimeline_Start__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        _AnimationTimeline_Start__SWIG_1(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate bool AnimationTimeline_GetIsAdditiveDelegate(HandleRef jarg1);
    public static AnimationTimeline_GetIsAdditiveDelegate _AnimationTimeline_GetIsAdditive;
    public static bool AnimationTimeline_GetIsAdditive(HandleRef jarg1)
    {
        bool ret = _AnimationTimeline_GetIsAdditive(jarg1);

        return ret;
    }

    public delegate void AnimationTimeline_SetIsAdditiveDelegate(HandleRef jarg1, bool jarg2);
    public static AnimationTimeline_SetIsAdditiveDelegate _AnimationTimeline_SetIsAdditive;
    public static void AnimationTimeline_SetIsAdditive(HandleRef jarg1, bool jarg2)
    {
        _AnimationTimeline_SetIsAdditive(jarg1, jarg2);
    }

    public delegate bool AnimationTimeline_GetIsCumulativeDelegate(HandleRef jarg1);
    public static AnimationTimeline_GetIsCumulativeDelegate _AnimationTimeline_GetIsCumulative;
    public static bool AnimationTimeline_GetIsCumulative(HandleRef jarg1)
    {
        bool ret = _AnimationTimeline_GetIsCumulative(jarg1);

        return ret;
    }

    public delegate void AnimationTimeline_SetIsCumulativeDelegate(HandleRef jarg1, bool jarg2);
    public static AnimationTimeline_SetIsCumulativeDelegate _AnimationTimeline_SetIsCumulative;
    public static void AnimationTimeline_SetIsCumulative(HandleRef jarg1, bool jarg2)
    {
        _AnimationTimeline_SetIsCumulative(jarg1, jarg2);
    }

    public delegate IntPtr AnimationTimeline_CreateTransitionFromDelegate(HandleRef jarg1);
    public static AnimationTimeline_CreateTransitionFromDelegate _AnimationTimeline_CreateTransitionFrom;
    public static IntPtr AnimationTimeline_CreateTransitionFrom(HandleRef jarg1)
    {
        IntPtr ret = _AnimationTimeline_CreateTransitionFrom(jarg1);

        return ret;
    }

    public delegate IntPtr AnimationTimeline_CreateTransitionToDelegate(HandleRef jarg1);
    public static AnimationTimeline_CreateTransitionToDelegate _AnimationTimeline_CreateTransitionTo;
    public static IntPtr AnimationTimeline_CreateTransitionTo(HandleRef jarg1)
    {
        IntPtr ret = _AnimationTimeline_CreateTransitionTo(jarg1);

        return ret;
    }

    public delegate void delete_EasingFunctionBaseDelegate(HandleRef jarg1);
    public static delete_EasingFunctionBaseDelegate _delete_EasingFunctionBase;
    public static void delete_EasingFunctionBase(HandleRef jarg1)
    {
        _delete_EasingFunctionBase(jarg1);
    }

    public delegate int EasingFunctionBase_GetEasingModeDelegate(HandleRef jarg1);
    public static EasingFunctionBase_GetEasingModeDelegate _EasingFunctionBase_GetEasingMode;
    public static int EasingFunctionBase_GetEasingMode(HandleRef jarg1)
    {
        int ret = _EasingFunctionBase_GetEasingMode(jarg1);

        return ret;
    }

    public delegate void EasingFunctionBase_SetEasingModeDelegate(HandleRef jarg1, int jarg2);
    public static EasingFunctionBase_SetEasingModeDelegate _EasingFunctionBase_SetEasingMode;
    public static void EasingFunctionBase_SetEasingMode(HandleRef jarg1, int jarg2)
    {
        _EasingFunctionBase_SetEasingMode(jarg1, jarg2);
    }

    public delegate float EasingFunctionBase_EaseDelegate(HandleRef jarg1, float jarg2);
    public static EasingFunctionBase_EaseDelegate _EasingFunctionBase_Ease;
    public static float EasingFunctionBase_Ease(HandleRef jarg1, float jarg2)
    {
        float ret = _EasingFunctionBase_Ease(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_BackEaseDelegate();
    public static new_BackEaseDelegate _new_BackEase;
    public static IntPtr new_BackEase()
    {
        IntPtr ret = _new_BackEase();

        return ret;
    }

    public delegate float BackEase_GetAmplitudeDelegate(HandleRef jarg1);
    public static BackEase_GetAmplitudeDelegate _BackEase_GetAmplitude;
    public static float BackEase_GetAmplitude(HandleRef jarg1)
    {
        float ret = _BackEase_GetAmplitude(jarg1);

        return ret;
    }

    public delegate void BackEase_SetAmplitudeDelegate(HandleRef jarg1, float jarg2);
    public static BackEase_SetAmplitudeDelegate _BackEase_SetAmplitude;
    public static void BackEase_SetAmplitude(HandleRef jarg1, float jarg2)
    {
        _BackEase_SetAmplitude(jarg1, jarg2);
    }

    public delegate void delete_BackEaseDelegate(HandleRef jarg1);
    public static delete_BackEaseDelegate _delete_BackEase;
    public static void delete_BackEase(HandleRef jarg1)
    {
        _delete_BackEase(jarg1);
    }

    public delegate void delete_BaseAnimationDelegate(HandleRef jarg1);
    public static delete_BaseAnimationDelegate _delete_BaseAnimation;
    public static void delete_BaseAnimation(HandleRef jarg1)
    {
        _delete_BaseAnimation(jarg1);
    }

    public delegate IntPtr BaseAnimation_GetEasingFunctionDelegate(HandleRef jarg1);
    public static BaseAnimation_GetEasingFunctionDelegate _BaseAnimation_GetEasingFunction;
    public static IntPtr BaseAnimation_GetEasingFunction(HandleRef jarg1)
    {
        IntPtr ret = _BaseAnimation_GetEasingFunction(jarg1);

        return ret;
    }

    public delegate void BaseAnimation_SetEasingFunctionDelegate(HandleRef jarg1, HandleRef jarg2);
    public static BaseAnimation_SetEasingFunctionDelegate _BaseAnimation_SetEasingFunction;
    public static void BaseAnimation_SetEasingFunction(HandleRef jarg1, HandleRef jarg2)
    {
        _BaseAnimation_SetEasingFunction(jarg1, jarg2);
    }

    public delegate IntPtr new_BeginStoryboardDelegate();
    public static new_BeginStoryboardDelegate _new_BeginStoryboard;
    public static IntPtr new_BeginStoryboard()
    {
        IntPtr ret = _new_BeginStoryboard();

        return ret;
    }

    public delegate IntPtr BeginStoryboard_GetHandoffBehaviorDelegate(HandleRef jarg1);
    public static BeginStoryboard_GetHandoffBehaviorDelegate _BeginStoryboard_GetHandoffBehavior;
    public static IntPtr BeginStoryboard_GetHandoffBehavior(HandleRef jarg1)
    {
        IntPtr ret = _BeginStoryboard_GetHandoffBehavior(jarg1);

        return ret;
    }

    public delegate void BeginStoryboard_SetHandoffBehaviorDelegate(HandleRef jarg1, HandleRef jarg2);
    public static BeginStoryboard_SetHandoffBehaviorDelegate _BeginStoryboard_SetHandoffBehavior;
    public static void BeginStoryboard_SetHandoffBehavior(HandleRef jarg1, HandleRef jarg2)
    {
        _BeginStoryboard_SetHandoffBehavior(jarg1, jarg2);
    }

    public delegate string BeginStoryboard_GetNameDelegate(HandleRef jarg1);
    public static BeginStoryboard_GetNameDelegate _BeginStoryboard_GetName;
    public static string BeginStoryboard_GetName(HandleRef jarg1)
    {
        string ret = _BeginStoryboard_GetName(jarg1);

        return ret;
    }

    public delegate void BeginStoryboard_SetNameDelegate(HandleRef jarg1, string jarg2);
    public static BeginStoryboard_SetNameDelegate _BeginStoryboard_SetName;
    public static void BeginStoryboard_SetName(HandleRef jarg1, string jarg2)
    {
        _BeginStoryboard_SetName(jarg1, jarg2);
    }

    public delegate IntPtr BeginStoryboard_GetStoryboardDelegate(HandleRef jarg1);
    public static BeginStoryboard_GetStoryboardDelegate _BeginStoryboard_GetStoryboard;
    public static IntPtr BeginStoryboard_GetStoryboard(HandleRef jarg1)
    {
        IntPtr ret = _BeginStoryboard_GetStoryboard(jarg1);

        return ret;
    }

    public delegate void BeginStoryboard_SetStoryboardDelegate(HandleRef jarg1, HandleRef jarg2);
    public static BeginStoryboard_SetStoryboardDelegate _BeginStoryboard_SetStoryboard;
    public static void BeginStoryboard_SetStoryboard(HandleRef jarg1, HandleRef jarg2)
    {
        _BeginStoryboard_SetStoryboard(jarg1, jarg2);
    }

    public delegate void BeginStoryboard_Invoke__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static BeginStoryboard_Invoke__SWIG_0Delegate _BeginStoryboard_Invoke__SWIG_0;
    public static void BeginStoryboard_Invoke__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _BeginStoryboard_Invoke__SWIG_0(jarg1, jarg2, jarg3);
    }

    public delegate void BeginStoryboard_Invoke__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static BeginStoryboard_Invoke__SWIG_1Delegate _BeginStoryboard_Invoke__SWIG_1;
    public static void BeginStoryboard_Invoke__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        _BeginStoryboard_Invoke__SWIG_1(jarg1, jarg2);
    }

    public delegate void delete_BeginStoryboardDelegate(HandleRef jarg1);
    public static delete_BeginStoryboardDelegate _delete_BeginStoryboard;
    public static void delete_BeginStoryboard(HandleRef jarg1)
    {
        _delete_BeginStoryboard(jarg1);
    }

    public delegate IntPtr new_BounceEaseDelegate();
    public static new_BounceEaseDelegate _new_BounceEase;
    public static IntPtr new_BounceEase()
    {
        IntPtr ret = _new_BounceEase();

        return ret;
    }

    public delegate int BounceEase_GetBouncesDelegate(HandleRef jarg1);
    public static BounceEase_GetBouncesDelegate _BounceEase_GetBounces;
    public static int BounceEase_GetBounces(HandleRef jarg1)
    {
        int ret = _BounceEase_GetBounces(jarg1);

        return ret;
    }

    public delegate void BounceEase_SetBouncesDelegate(HandleRef jarg1, int jarg2);
    public static BounceEase_SetBouncesDelegate _BounceEase_SetBounces;
    public static void BounceEase_SetBounces(HandleRef jarg1, int jarg2)
    {
        _BounceEase_SetBounces(jarg1, jarg2);
    }

    public delegate float BounceEase_GetBouncinessDelegate(HandleRef jarg1);
    public static BounceEase_GetBouncinessDelegate _BounceEase_GetBounciness;
    public static float BounceEase_GetBounciness(HandleRef jarg1)
    {
        float ret = _BounceEase_GetBounciness(jarg1);

        return ret;
    }

    public delegate void BounceEase_SetBouncinessDelegate(HandleRef jarg1, float jarg2);
    public static BounceEase_SetBouncinessDelegate _BounceEase_SetBounciness;
    public static void BounceEase_SetBounciness(HandleRef jarg1, float jarg2)
    {
        _BounceEase_SetBounciness(jarg1, jarg2);
    }

    public delegate void delete_BounceEaseDelegate(HandleRef jarg1);
    public static delete_BounceEaseDelegate _delete_BounceEase;
    public static void delete_BounceEase(HandleRef jarg1)
    {
        _delete_BounceEase(jarg1);
    }

    public delegate IntPtr new_CircleEaseDelegate();
    public static new_CircleEaseDelegate _new_CircleEase;
    public static IntPtr new_CircleEase()
    {
        IntPtr ret = _new_CircleEase();

        return ret;
    }

    public delegate void delete_CircleEaseDelegate(HandleRef jarg1);
    public static delete_CircleEaseDelegate _delete_CircleEase;
    public static void delete_CircleEase(HandleRef jarg1)
    {
        _delete_CircleEase(jarg1);
    }

    public delegate void delete_ClockDelegate(HandleRef jarg1);
    public static delete_ClockDelegate _delete_Clock;
    public static void delete_Clock(HandleRef jarg1)
    {
        _delete_Clock(jarg1);
    }

    public delegate int Clock_GetCurrentIterationDelegate(HandleRef jarg1);
    public static Clock_GetCurrentIterationDelegate _Clock_GetCurrentIteration;
    public static int Clock_GetCurrentIteration(HandleRef jarg1)
    {
        int ret = _Clock_GetCurrentIteration(jarg1);

        return ret;
    }

    public delegate float Clock_GetCurrentProgressDelegate(HandleRef jarg1);
    public static Clock_GetCurrentProgressDelegate _Clock_GetCurrentProgress;
    public static float Clock_GetCurrentProgress(HandleRef jarg1)
    {
        float ret = _Clock_GetCurrentProgress(jarg1);

        return ret;
    }

    public delegate double Clock_GetCurrentTimeDelegate(HandleRef jarg1);
    public static Clock_GetCurrentTimeDelegate _Clock_GetCurrentTime;
    public static double Clock_GetCurrentTime(HandleRef jarg1)
    {
        double ret = _Clock_GetCurrentTime(jarg1);

        return ret;
    }

    public delegate int Clock_GetCurrentStateDelegate(HandleRef jarg1);
    public static Clock_GetCurrentStateDelegate _Clock_GetCurrentState;
    public static int Clock_GetCurrentState(HandleRef jarg1)
    {
        int ret = _Clock_GetCurrentState(jarg1);

        return ret;
    }

    public delegate bool Clock_HasControllableRootDelegate(HandleRef jarg1);
    public static Clock_HasControllableRootDelegate _Clock_HasControllableRoot;
    public static bool Clock_HasControllableRoot(HandleRef jarg1)
    {
        bool ret = _Clock_HasControllableRoot(jarg1);

        return ret;
    }

    public delegate IntPtr Clock_GetParentDelegate(HandleRef jarg1);
    public static Clock_GetParentDelegate _Clock_GetParent;
    public static IntPtr Clock_GetParent(HandleRef jarg1)
    {
        IntPtr ret = _Clock_GetParent(jarg1);

        return ret;
    }

    public delegate IntPtr Clock_GetTimelineDelegate(HandleRef jarg1);
    public static Clock_GetTimelineDelegate _Clock_GetTimeline;
    public static IntPtr Clock_GetTimeline(HandleRef jarg1)
    {
        IntPtr ret = _Clock_GetTimeline(jarg1);

        return ret;
    }

    public delegate IntPtr Clock_CompletedDelegate(HandleRef jarg1);
    public static Clock_CompletedDelegate _Clock_Completed;
    public static IntPtr Clock_Completed(HandleRef jarg1)
    {
        IntPtr ret = _Clock_Completed(jarg1);

        return ret;
    }

    public delegate bool Clock_TickDelegate(HandleRef jarg1, double jarg2, int jarg3);
    public static Clock_TickDelegate _Clock_Tick;
    public static bool Clock_Tick(HandleRef jarg1, double jarg2, int jarg3)
    {
        bool ret = _Clock_Tick(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void Clock_FlattenChildrenDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Clock_FlattenChildrenDelegate _Clock_FlattenChildren;
    public static void Clock_FlattenChildren(HandleRef jarg1, HandleRef jarg2)
    {
        _Clock_FlattenChildren(jarg1, jarg2);
    }

    public delegate IntPtr new_ClockControllerDelegate(HandleRef jarg1);
    public static new_ClockControllerDelegate _new_ClockController;
    public static IntPtr new_ClockController(HandleRef jarg1)
    {
        IntPtr ret = _new_ClockController(jarg1);

        return ret;
    }

    public delegate void delete_ClockControllerDelegate(HandleRef jarg1);
    public static delete_ClockControllerDelegate _delete_ClockController;
    public static void delete_ClockController(HandleRef jarg1)
    {
        _delete_ClockController(jarg1);
    }

    public delegate IntPtr new_ClockGroupDelegate(HandleRef jarg1, bool jarg2);
    public static new_ClockGroupDelegate _new_ClockGroup;
    public static IntPtr new_ClockGroup(HandleRef jarg1, bool jarg2)
    {
        IntPtr ret = _new_ClockGroup(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_ClockGroupDelegate(HandleRef jarg1);
    public static delete_ClockGroupDelegate _delete_ClockGroup;
    public static void delete_ClockGroup(HandleRef jarg1)
    {
        _delete_ClockGroup(jarg1);
    }

    public delegate void ClockGroup_AddDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ClockGroup_AddDelegate _ClockGroup_Add;
    public static void ClockGroup_Add(HandleRef jarg1, HandleRef jarg2)
    {
        _ClockGroup_Add(jarg1, jarg2);
    }

    public delegate uint ClockGroup_GetChildrenCountDelegate(HandleRef jarg1);
    public static ClockGroup_GetChildrenCountDelegate _ClockGroup_GetChildrenCount;
    public static uint ClockGroup_GetChildrenCount(HandleRef jarg1)
    {
        uint ret = _ClockGroup_GetChildrenCount(jarg1);

        return ret;
    }

    public delegate IntPtr ClockGroup_GetChildDelegate(HandleRef jarg1, uint jarg2);
    public static ClockGroup_GetChildDelegate _ClockGroup_GetChild;
    public static IntPtr ClockGroup_GetChild(HandleRef jarg1, uint jarg2)
    {
        IntPtr ret = _ClockGroup_GetChild(jarg1, jarg2);

        return ret;
    }

    public delegate bool ClockGroup_TickDelegate(HandleRef jarg1, double jarg2, int jarg3);
    public static ClockGroup_TickDelegate _ClockGroup_Tick;
    public static bool ClockGroup_Tick(HandleRef jarg1, double jarg2, int jarg3)
    {
        bool ret = _ClockGroup_Tick(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void ClockGroup_FlattenChildrenDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ClockGroup_FlattenChildrenDelegate _ClockGroup_FlattenChildren;
    public static void ClockGroup_FlattenChildren(HandleRef jarg1, HandleRef jarg2)
    {
        _ClockGroup_FlattenChildren(jarg1, jarg2);
    }

    public delegate void delete_ControllableStoryboardActionDelegate(HandleRef jarg1);
    public static delete_ControllableStoryboardActionDelegate _delete_ControllableStoryboardAction;
    public static void delete_ControllableStoryboardAction(HandleRef jarg1)
    {
        _delete_ControllableStoryboardAction(jarg1);
    }

    public delegate string ControllableStoryboardAction_GetBeginStoryboardNameDelegate(HandleRef jarg1);
    public static ControllableStoryboardAction_GetBeginStoryboardNameDelegate _ControllableStoryboardAction_GetBeginStoryboardName;
    public static string ControllableStoryboardAction_GetBeginStoryboardName(HandleRef jarg1)
    {
        string ret = _ControllableStoryboardAction_GetBeginStoryboardName(jarg1);

        return ret;
    }

    public delegate void ControllableStoryboardAction_SetBeginStoryboardNameDelegate(HandleRef jarg1, string jarg2);
    public static ControllableStoryboardAction_SetBeginStoryboardNameDelegate _ControllableStoryboardAction_SetBeginStoryboardName;
    public static void ControllableStoryboardAction_SetBeginStoryboardName(HandleRef jarg1, string jarg2)
    {
        _ControllableStoryboardAction_SetBeginStoryboardName(jarg1, jarg2);
    }

    public delegate void ControllableStoryboardAction_Invoke__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static ControllableStoryboardAction_Invoke__SWIG_0Delegate _ControllableStoryboardAction_Invoke__SWIG_0;
    public static void ControllableStoryboardAction_Invoke__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _ControllableStoryboardAction_Invoke__SWIG_0(jarg1, jarg2, jarg3);
    }

    public delegate void ControllableStoryboardAction_Invoke__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static ControllableStoryboardAction_Invoke__SWIG_1Delegate _ControllableStoryboardAction_Invoke__SWIG_1;
    public static void ControllableStoryboardAction_Invoke__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        _ControllableStoryboardAction_Invoke__SWIG_1(jarg1, jarg2);
    }

    public delegate IntPtr new_CubicEaseDelegate();
    public static new_CubicEaseDelegate _new_CubicEase;
    public static IntPtr new_CubicEase()
    {
        IntPtr ret = _new_CubicEase();

        return ret;
    }

    public delegate void delete_CubicEaseDelegate(HandleRef jarg1);
    public static delete_CubicEaseDelegate _delete_CubicEase;
    public static void delete_CubicEase(HandleRef jarg1)
    {
        _delete_CubicEase(jarg1);
    }

    public delegate IntPtr new_Duration__SWIG_0Delegate();
    public static new_Duration__SWIG_0Delegate _new_Duration__SWIG_0;
    public static IntPtr new_Duration__SWIG_0()
    {
        IntPtr ret = _new_Duration__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_Duration__SWIG_1Delegate(HandleRef jarg1);
    public static new_Duration__SWIG_1Delegate _new_Duration__SWIG_1;
    public static IntPtr new_Duration__SWIG_1(HandleRef jarg1)
    {
        IntPtr ret = _new_Duration__SWIG_1(jarg1);

        return ret;
    }

    public delegate IntPtr Duration_AutomaticDelegate();
    public static Duration_AutomaticDelegate _Duration_Automatic;
    public static IntPtr Duration_Automatic()
    {
        IntPtr ret = _Duration_Automatic();

        return ret;
    }

    public delegate IntPtr Duration_ForeverDelegate();
    public static Duration_ForeverDelegate _Duration_Forever;
    public static IntPtr Duration_Forever()
    {
        IntPtr ret = _Duration_Forever();

        return ret;
    }

    public delegate IntPtr Duration_ParseDelegate(string jarg1);
    public static Duration_ParseDelegate _Duration_Parse;
    public static IntPtr Duration_Parse(string jarg1)
    {
        IntPtr ret = _Duration_Parse(jarg1);

        return ret;
    }

    public delegate bool Duration_TryParseDelegate(string jarg1, HandleRef jarg2);
    public static Duration_TryParseDelegate _Duration_TryParse;
    public static bool Duration_TryParse(string jarg1, HandleRef jarg2)
    {
        bool ret = _Duration_TryParse(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr Duration_GetTimeSpanDelegate(HandleRef jarg1);
    public static Duration_GetTimeSpanDelegate _Duration_GetTimeSpan;
    public static IntPtr Duration_GetTimeSpan(HandleRef jarg1)
    {
        IntPtr ret = _Duration_GetTimeSpan(jarg1);

        return ret;
    }

    public delegate int Duration_GetDurationTypeDelegate(HandleRef jarg1);
    public static Duration_GetDurationTypeDelegate _Duration_GetDurationType;
    public static int Duration_GetDurationType(HandleRef jarg1)
    {
        int ret = _Duration_GetDurationType(jarg1);

        return ret;
    }

    public delegate IntPtr Duration_ToStrDelegate(HandleRef jarg1);
    public static Duration_ToStrDelegate _Duration_ToStr;
    public static IntPtr Duration_ToStr(HandleRef jarg1)
    {
        IntPtr ret = _Duration_ToStr(jarg1);

        return ret;
    }

    public delegate void delete_DurationDelegate(HandleRef jarg1);
    public static delete_DurationDelegate _delete_Duration;
    public static void delete_Duration(HandleRef jarg1)
    {
        _delete_Duration(jarg1);
    }

    public delegate IntPtr new_ElasticEaseDelegate();
    public static new_ElasticEaseDelegate _new_ElasticEase;
    public static IntPtr new_ElasticEase()
    {
        IntPtr ret = _new_ElasticEase();

        return ret;
    }

    public delegate int ElasticEase_GetOscillationsDelegate(HandleRef jarg1);
    public static ElasticEase_GetOscillationsDelegate _ElasticEase_GetOscillations;
    public static int ElasticEase_GetOscillations(HandleRef jarg1)
    {
        int ret = _ElasticEase_GetOscillations(jarg1);

        return ret;
    }

    public delegate void ElasticEase_SetOscillationsDelegate(HandleRef jarg1, int jarg2);
    public static ElasticEase_SetOscillationsDelegate _ElasticEase_SetOscillations;
    public static void ElasticEase_SetOscillations(HandleRef jarg1, int jarg2)
    {
        _ElasticEase_SetOscillations(jarg1, jarg2);
    }

    public delegate float ElasticEase_GetSpringinessDelegate(HandleRef jarg1);
    public static ElasticEase_GetSpringinessDelegate _ElasticEase_GetSpringiness;
    public static float ElasticEase_GetSpringiness(HandleRef jarg1)
    {
        float ret = _ElasticEase_GetSpringiness(jarg1);

        return ret;
    }

    public delegate void ElasticEase_SetSpringinessDelegate(HandleRef jarg1, float jarg2);
    public static ElasticEase_SetSpringinessDelegate _ElasticEase_SetSpringiness;
    public static void ElasticEase_SetSpringiness(HandleRef jarg1, float jarg2)
    {
        _ElasticEase_SetSpringiness(jarg1, jarg2);
    }

    public delegate void delete_ElasticEaseDelegate(HandleRef jarg1);
    public static delete_ElasticEaseDelegate _delete_ElasticEase;
    public static void delete_ElasticEase(HandleRef jarg1)
    {
        _delete_ElasticEase(jarg1);
    }

    public delegate IntPtr new_ExponentialEaseDelegate();
    public static new_ExponentialEaseDelegate _new_ExponentialEase;
    public static IntPtr new_ExponentialEase()
    {
        IntPtr ret = _new_ExponentialEase();

        return ret;
    }

    public delegate float ExponentialEase_GetExponentDelegate(HandleRef jarg1);
    public static ExponentialEase_GetExponentDelegate _ExponentialEase_GetExponent;
    public static float ExponentialEase_GetExponent(HandleRef jarg1)
    {
        float ret = _ExponentialEase_GetExponent(jarg1);

        return ret;
    }

    public delegate void ExponentialEase_SetExponentDelegate(HandleRef jarg1, float jarg2);
    public static ExponentialEase_SetExponentDelegate _ExponentialEase_SetExponent;
    public static void ExponentialEase_SetExponent(HandleRef jarg1, float jarg2)
    {
        _ExponentialEase_SetExponent(jarg1, jarg2);
    }

    public delegate void delete_ExponentialEaseDelegate(HandleRef jarg1);
    public static delete_ExponentialEaseDelegate _delete_ExponentialEase;
    public static void delete_ExponentialEase(HandleRef jarg1)
    {
        _delete_ExponentialEase(jarg1);
    }

    public delegate IntPtr new_KeySpline__SWIG_0Delegate();
    public static new_KeySpline__SWIG_0Delegate _new_KeySpline__SWIG_0;
    public static IntPtr new_KeySpline__SWIG_0()
    {
        IntPtr ret = _new_KeySpline__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_KeySpline__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static new_KeySpline__SWIG_1Delegate _new_KeySpline__SWIG_1;
    public static IntPtr new_KeySpline__SWIG_1(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_KeySpline__SWIG_1(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_KeySpline__SWIG_2Delegate(float jarg1, float jarg2, float jarg3, float jarg4);
    public static new_KeySpline__SWIG_2Delegate _new_KeySpline__SWIG_2;
    public static IntPtr new_KeySpline__SWIG_2(float jarg1, float jarg2, float jarg3, float jarg4)
    {
        IntPtr ret = _new_KeySpline__SWIG_2(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr KeySpline_GetControlPoint1Delegate(HandleRef jarg1);
    public static KeySpline_GetControlPoint1Delegate _KeySpline_GetControlPoint1;
    public static IntPtr KeySpline_GetControlPoint1(HandleRef jarg1)
    {
        IntPtr ret = _KeySpline_GetControlPoint1(jarg1);

        return ret;
    }

    public delegate void KeySpline_SetControlPoint1Delegate(HandleRef jarg1, HandleRef jarg2);
    public static KeySpline_SetControlPoint1Delegate _KeySpline_SetControlPoint1;
    public static void KeySpline_SetControlPoint1(HandleRef jarg1, HandleRef jarg2)
    {
        _KeySpline_SetControlPoint1(jarg1, jarg2);
    }

    public delegate IntPtr KeySpline_GetControlPoint2Delegate(HandleRef jarg1);
    public static KeySpline_GetControlPoint2Delegate _KeySpline_GetControlPoint2;
    public static IntPtr KeySpline_GetControlPoint2(HandleRef jarg1)
    {
        IntPtr ret = _KeySpline_GetControlPoint2(jarg1);

        return ret;
    }

    public delegate void KeySpline_SetControlPoint2Delegate(HandleRef jarg1, HandleRef jarg2);
    public static KeySpline_SetControlPoint2Delegate _KeySpline_SetControlPoint2;
    public static void KeySpline_SetControlPoint2(HandleRef jarg1, HandleRef jarg2)
    {
        _KeySpline_SetControlPoint2(jarg1, jarg2);
    }

    public delegate float KeySpline_GetSplineProgressDelegate(HandleRef jarg1, float jarg2);
    public static KeySpline_GetSplineProgressDelegate _KeySpline_GetSplineProgress;
    public static float KeySpline_GetSplineProgress(HandleRef jarg1, float jarg2)
    {
        float ret = _KeySpline_GetSplineProgress(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr KeySpline_ParseDelegate(string jarg1);
    public static KeySpline_ParseDelegate _KeySpline_Parse;
    public static IntPtr KeySpline_Parse(string jarg1)
    {
        IntPtr ret = _KeySpline_Parse(jarg1);

        return ret;
    }

    public delegate bool KeySpline_TryParseDelegate(string jarg1, HandleRef jarg2);
    public static KeySpline_TryParseDelegate _KeySpline_TryParse;
    public static bool KeySpline_TryParse(string jarg1, HandleRef jarg2)
    {
        bool ret = _KeySpline_TryParse(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_KeySplineDelegate(HandleRef jarg1);
    public static delete_KeySplineDelegate _delete_KeySpline;
    public static void delete_KeySpline(HandleRef jarg1)
    {
        _delete_KeySpline(jarg1);
    }

    public delegate IntPtr new_KeyTimeDelegate();
    public static new_KeyTimeDelegate _new_KeyTime;
    public static IntPtr new_KeyTime()
    {
        IntPtr ret = _new_KeyTime();

        return ret;
    }

    public delegate IntPtr KeyTime_FromPercentDelegate(float jarg1);
    public static KeyTime_FromPercentDelegate _KeyTime_FromPercent;
    public static IntPtr KeyTime_FromPercent(float jarg1)
    {
        IntPtr ret = _KeyTime_FromPercent(jarg1);

        return ret;
    }

    public delegate IntPtr KeyTime_FromTimeSpanDelegate(HandleRef jarg1);
    public static KeyTime_FromTimeSpanDelegate _KeyTime_FromTimeSpan;
    public static IntPtr KeyTime_FromTimeSpan(HandleRef jarg1)
    {
        IntPtr ret = _KeyTime_FromTimeSpan(jarg1);

        return ret;
    }

    public delegate IntPtr KeyTime_PacedDelegate();
    public static KeyTime_PacedDelegate _KeyTime_Paced;
    public static IntPtr KeyTime_Paced()
    {
        IntPtr ret = _KeyTime_Paced();

        return ret;
    }

    public delegate IntPtr KeyTime_UniformDelegate();
    public static KeyTime_UniformDelegate _KeyTime_Uniform;
    public static IntPtr KeyTime_Uniform()
    {
        IntPtr ret = _KeyTime_Uniform();

        return ret;
    }

    public delegate IntPtr KeyTime_ParseDelegate(string jarg1);
    public static KeyTime_ParseDelegate _KeyTime_Parse;
    public static IntPtr KeyTime_Parse(string jarg1)
    {
        IntPtr ret = _KeyTime_Parse(jarg1);

        return ret;
    }

    public delegate bool KeyTime_TryParseDelegate(string jarg1, HandleRef jarg2);
    public static KeyTime_TryParseDelegate _KeyTime_TryParse;
    public static bool KeyTime_TryParse(string jarg1, HandleRef jarg2)
    {
        bool ret = _KeyTime_TryParse(jarg1, jarg2);

        return ret;
    }

    public delegate int KeyTime_GetKeyTimeTypeDelegate(HandleRef jarg1);
    public static KeyTime_GetKeyTimeTypeDelegate _KeyTime_GetKeyTimeType;
    public static int KeyTime_GetKeyTimeType(HandleRef jarg1)
    {
        int ret = _KeyTime_GetKeyTimeType(jarg1);

        return ret;
    }

    public delegate IntPtr KeyTime_GetTimeSpanDelegate(HandleRef jarg1);
    public static KeyTime_GetTimeSpanDelegate _KeyTime_GetTimeSpan;
    public static IntPtr KeyTime_GetTimeSpan(HandleRef jarg1)
    {
        IntPtr ret = _KeyTime_GetTimeSpan(jarg1);

        return ret;
    }

    public delegate float KeyTime_GetPercentDelegate(HandleRef jarg1);
    public static KeyTime_GetPercentDelegate _KeyTime_GetPercent;
    public static float KeyTime_GetPercent(HandleRef jarg1)
    {
        float ret = _KeyTime_GetPercent(jarg1);

        return ret;
    }

    public delegate void delete_KeyTimeDelegate(HandleRef jarg1);
    public static delete_KeyTimeDelegate _delete_KeyTime;
    public static void delete_KeyTime(HandleRef jarg1)
    {
        _delete_KeyTime(jarg1);
    }

    public delegate void TimelineEventArgs_target_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TimelineEventArgs_target_setDelegate _TimelineEventArgs_target_set;
    public static void TimelineEventArgs_target_set(HandleRef jarg1, HandleRef jarg2)
    {
        _TimelineEventArgs_target_set(jarg1, jarg2);
    }

    public delegate IntPtr TimelineEventArgs_target_getDelegate(HandleRef jarg1);
    public static TimelineEventArgs_target_getDelegate _TimelineEventArgs_target_get;
    public static IntPtr TimelineEventArgs_target_get(HandleRef jarg1)
    {
        IntPtr ret = _TimelineEventArgs_target_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_TimelineEventArgsDelegate();
    public static new_TimelineEventArgsDelegate _new_TimelineEventArgs;
    public static IntPtr new_TimelineEventArgs()
    {
        IntPtr ret = _new_TimelineEventArgs();

        return ret;
    }

    public delegate void delete_TimelineEventArgsDelegate(HandleRef jarg1);
    public static delete_TimelineEventArgsDelegate _delete_TimelineEventArgs;
    public static void delete_TimelineEventArgs(HandleRef jarg1)
    {
        _delete_TimelineEventArgs(jarg1);
    }

    public delegate void delete_TimelineDelegate(HandleRef jarg1);
    public static delete_TimelineDelegate _delete_Timeline;
    public static void delete_Timeline(HandleRef jarg1)
    {
        _delete_Timeline(jarg1);
    }

    public delegate int Timeline_GetDesiredFrameRateDelegate(HandleRef jarg1);
    public static Timeline_GetDesiredFrameRateDelegate _Timeline_GetDesiredFrameRate;
    public static int Timeline_GetDesiredFrameRate(HandleRef jarg1)
    {
        int ret = _Timeline_GetDesiredFrameRate(jarg1);

        return ret;
    }

    public delegate void Timeline_SetDesiredFrameRateDelegate(HandleRef jarg1, int jarg2);
    public static Timeline_SetDesiredFrameRateDelegate _Timeline_SetDesiredFrameRate;
    public static void Timeline_SetDesiredFrameRate(HandleRef jarg1, int jarg2)
    {
        _Timeline_SetDesiredFrameRate(jarg1, jarg2);
    }

    public delegate float Timeline_GetAccelerationRatioDelegate(HandleRef jarg1);
    public static Timeline_GetAccelerationRatioDelegate _Timeline_GetAccelerationRatio;
    public static float Timeline_GetAccelerationRatio(HandleRef jarg1)
    {
        float ret = _Timeline_GetAccelerationRatio(jarg1);

        return ret;
    }

    public delegate void Timeline_SetAccelerationRatioDelegate(HandleRef jarg1, float jarg2);
    public static Timeline_SetAccelerationRatioDelegate _Timeline_SetAccelerationRatio;
    public static void Timeline_SetAccelerationRatio(HandleRef jarg1, float jarg2)
    {
        _Timeline_SetAccelerationRatio(jarg1, jarg2);
    }

    public delegate bool Timeline_GetAutoReverseDelegate(HandleRef jarg1);
    public static Timeline_GetAutoReverseDelegate _Timeline_GetAutoReverse;
    public static bool Timeline_GetAutoReverse(HandleRef jarg1)
    {
        bool ret = _Timeline_GetAutoReverse(jarg1);

        return ret;
    }

    public delegate void Timeline_SetAutoReverseDelegate(HandleRef jarg1, bool jarg2);
    public static Timeline_SetAutoReverseDelegate _Timeline_SetAutoReverse;
    public static void Timeline_SetAutoReverse(HandleRef jarg1, bool jarg2)
    {
        _Timeline_SetAutoReverse(jarg1, jarg2);
    }

    public delegate IntPtr Timeline_GetBeginTimeDelegate(HandleRef jarg1);
    public static Timeline_GetBeginTimeDelegate _Timeline_GetBeginTime;
    public static IntPtr Timeline_GetBeginTime(HandleRef jarg1)
    {
        IntPtr ret = _Timeline_GetBeginTime(jarg1);

        return ret;
    }

    public delegate void Timeline_SetBeginTimeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Timeline_SetBeginTimeDelegate _Timeline_SetBeginTime;
    public static void Timeline_SetBeginTime(HandleRef jarg1, HandleRef jarg2)
    {
        _Timeline_SetBeginTime(jarg1, jarg2);
    }

    public delegate float Timeline_GetDecelerationRatioDelegate(HandleRef jarg1);
    public static Timeline_GetDecelerationRatioDelegate _Timeline_GetDecelerationRatio;
    public static float Timeline_GetDecelerationRatio(HandleRef jarg1)
    {
        float ret = _Timeline_GetDecelerationRatio(jarg1);

        return ret;
    }

    public delegate void Timeline_SetDecelerationRatioDelegate(HandleRef jarg1, float jarg2);
    public static Timeline_SetDecelerationRatioDelegate _Timeline_SetDecelerationRatio;
    public static void Timeline_SetDecelerationRatio(HandleRef jarg1, float jarg2)
    {
        _Timeline_SetDecelerationRatio(jarg1, jarg2);
    }

    public delegate IntPtr Timeline_GetDurationDelegate(HandleRef jarg1);
    public static Timeline_GetDurationDelegate _Timeline_GetDuration;
    public static IntPtr Timeline_GetDuration(HandleRef jarg1)
    {
        IntPtr ret = _Timeline_GetDuration(jarg1);

        return ret;
    }

    public delegate void Timeline_SetDurationDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Timeline_SetDurationDelegate _Timeline_SetDuration;
    public static void Timeline_SetDuration(HandleRef jarg1, HandleRef jarg2)
    {
        _Timeline_SetDuration(jarg1, jarg2);
    }

    public delegate int Timeline_GetFillBehaviorDelegate(HandleRef jarg1);
    public static Timeline_GetFillBehaviorDelegate _Timeline_GetFillBehavior;
    public static int Timeline_GetFillBehavior(HandleRef jarg1)
    {
        int ret = _Timeline_GetFillBehavior(jarg1);

        return ret;
    }

    public delegate void Timeline_SetFillBehaviorDelegate(HandleRef jarg1, int jarg2);
    public static Timeline_SetFillBehaviorDelegate _Timeline_SetFillBehavior;
    public static void Timeline_SetFillBehavior(HandleRef jarg1, int jarg2)
    {
        _Timeline_SetFillBehavior(jarg1, jarg2);
    }

    public delegate IntPtr Timeline_GetNameDelegate(HandleRef jarg1);
    public static Timeline_GetNameDelegate _Timeline_GetName;
    public static IntPtr Timeline_GetName(HandleRef jarg1)
    {
        IntPtr ret = _Timeline_GetName(jarg1);

        return ret;
    }

    public delegate void Timeline_SetNameDelegate(HandleRef jarg1, IntPtr jarg2);
    public static Timeline_SetNameDelegate _Timeline_SetName;
    public static void Timeline_SetName(HandleRef jarg1, IntPtr jarg2)
    {
        _Timeline_SetName(jarg1, jarg2);
    }

    public delegate IntPtr Timeline_GetRepeatBehaviorDelegate(HandleRef jarg1);
    public static Timeline_GetRepeatBehaviorDelegate _Timeline_GetRepeatBehavior;
    public static IntPtr Timeline_GetRepeatBehavior(HandleRef jarg1)
    {
        IntPtr ret = _Timeline_GetRepeatBehavior(jarg1);

        return ret;
    }

    public delegate void Timeline_SetRepeatBehaviorDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Timeline_SetRepeatBehaviorDelegate _Timeline_SetRepeatBehavior;
    public static void Timeline_SetRepeatBehavior(HandleRef jarg1, HandleRef jarg2)
    {
        _Timeline_SetRepeatBehavior(jarg1, jarg2);
    }

    public delegate float Timeline_GetSpeedRatioDelegate(HandleRef jarg1);
    public static Timeline_GetSpeedRatioDelegate _Timeline_GetSpeedRatio;
    public static float Timeline_GetSpeedRatio(HandleRef jarg1)
    {
        float ret = _Timeline_GetSpeedRatio(jarg1);

        return ret;
    }

    public delegate void Timeline_SetSpeedRatioDelegate(HandleRef jarg1, float jarg2);
    public static Timeline_SetSpeedRatioDelegate _Timeline_SetSpeedRatio;
    public static void Timeline_SetSpeedRatio(HandleRef jarg1, float jarg2)
    {
        _Timeline_SetSpeedRatio(jarg1, jarg2);
    }

    public delegate IntPtr Timeline_CreateClockDelegate(HandleRef jarg1, HandleRef jarg2, bool jarg3);
    public static Timeline_CreateClockDelegate _Timeline_CreateClock;
    public static IntPtr Timeline_CreateClock(HandleRef jarg1, HandleRef jarg2, bool jarg3)
    {
        IntPtr ret = _Timeline_CreateClock(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr Timeline_GetNaturalDurationDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Timeline_GetNaturalDurationDelegate _Timeline_GetNaturalDuration;
    public static IntPtr Timeline_GetNaturalDuration(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _Timeline_GetNaturalDuration(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr Timeline_GetSinglePassDurationDelegate(HandleRef jarg1);
    public static Timeline_GetSinglePassDurationDelegate _Timeline_GetSinglePassDuration;
    public static IntPtr Timeline_GetSinglePassDuration(HandleRef jarg1)
    {
        IntPtr ret = _Timeline_GetSinglePassDuration(jarg1);

        return ret;
    }

    public delegate IntPtr Timeline_GetIterationDurationDelegate(HandleRef jarg1);
    public static Timeline_GetIterationDurationDelegate _Timeline_GetIterationDuration;
    public static IntPtr Timeline_GetIterationDuration(HandleRef jarg1)
    {
        IntPtr ret = _Timeline_GetIterationDuration(jarg1);

        return ret;
    }

    public delegate IntPtr Timeline_GetTotalDurationDelegate(HandleRef jarg1);
    public static Timeline_GetTotalDurationDelegate _Timeline_GetTotalDuration;
    public static IntPtr Timeline_GetTotalDuration(HandleRef jarg1)
    {
        IntPtr ret = _Timeline_GetTotalDuration(jarg1);

        return ret;
    }

    public delegate bool Timeline_IsTotalDurationAbsoluteDelegate(HandleRef jarg1);
    public static Timeline_IsTotalDurationAbsoluteDelegate _Timeline_IsTotalDurationAbsolute;
    public static bool Timeline_IsTotalDurationAbsolute(HandleRef jarg1)
    {
        bool ret = _Timeline_IsTotalDurationAbsolute(jarg1);

        return ret;
    }

    public delegate IntPtr Timeline_GetNormalizedDurationDelegate(HandleRef jarg1);
    public static Timeline_GetNormalizedDurationDelegate _Timeline_GetNormalizedDuration;
    public static IntPtr Timeline_GetNormalizedDuration(HandleRef jarg1)
    {
        IntPtr ret = _Timeline_GetNormalizedDuration(jarg1);

        return ret;
    }

    public delegate void Timeline_CalculateEffectiveDurationsDelegate(HandleRef jarg1);
    public static Timeline_CalculateEffectiveDurationsDelegate _Timeline_CalculateEffectiveDurations;
    public static void Timeline_CalculateEffectiveDurations(HandleRef jarg1)
    {
        _Timeline_CalculateEffectiveDurations(jarg1);
    }

    public delegate IntPtr Timeline_GetEffectiveDurationDelegate(HandleRef jarg1);
    public static Timeline_GetEffectiveDurationDelegate _Timeline_GetEffectiveDuration;
    public static IntPtr Timeline_GetEffectiveDuration(HandleRef jarg1)
    {
        IntPtr ret = _Timeline_GetEffectiveDuration(jarg1);

        return ret;
    }

    public delegate void Timeline_OnClockDestroyedDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Timeline_OnClockDestroyedDelegate _Timeline_OnClockDestroyed;
    public static void Timeline_OnClockDestroyed(HandleRef jarg1, HandleRef jarg2)
    {
        _Timeline_OnClockDestroyed(jarg1, jarg2);
    }

    public delegate void delete_TimelineGroupDelegate(HandleRef jarg1);
    public static delete_TimelineGroupDelegate _delete_TimelineGroup;
    public static void delete_TimelineGroup(HandleRef jarg1)
    {
        _delete_TimelineGroup(jarg1);
    }

    public delegate IntPtr TimelineGroup_GetChildrenDelegate(HandleRef jarg1);
    public static TimelineGroup_GetChildrenDelegate _TimelineGroup_GetChildren;
    public static IntPtr TimelineGroup_GetChildren(HandleRef jarg1)
    {
        IntPtr ret = _TimelineGroup_GetChildren(jarg1);

        return ret;
    }

    public delegate void TimelineGroup_SetChildrenDelegate(HandleRef jarg1, HandleRef jarg2);
    public static TimelineGroup_SetChildrenDelegate _TimelineGroup_SetChildren;
    public static void TimelineGroup_SetChildren(HandleRef jarg1, HandleRef jarg2)
    {
        _TimelineGroup_SetChildren(jarg1, jarg2);
    }

    public delegate IntPtr new_ParallelTimeline__SWIG_0Delegate();
    public static new_ParallelTimeline__SWIG_0Delegate _new_ParallelTimeline__SWIG_0;
    public static IntPtr new_ParallelTimeline__SWIG_0()
    {
        IntPtr ret = _new_ParallelTimeline__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_ParallelTimeline__SWIG_1Delegate(bool jarg1);
    public static new_ParallelTimeline__SWIG_1Delegate _new_ParallelTimeline__SWIG_1;
    public static IntPtr new_ParallelTimeline__SWIG_1(bool jarg1)
    {
        IntPtr ret = _new_ParallelTimeline__SWIG_1(jarg1);

        return ret;
    }

    public delegate void delete_ParallelTimelineDelegate(HandleRef jarg1);
    public static delete_ParallelTimelineDelegate _delete_ParallelTimeline;
    public static void delete_ParallelTimeline(HandleRef jarg1)
    {
        _delete_ParallelTimeline(jarg1);
    }

    public delegate int ParallelTimeline_GetSlipBehaviorDelegate(HandleRef jarg1);
    public static ParallelTimeline_GetSlipBehaviorDelegate _ParallelTimeline_GetSlipBehavior;
    public static int ParallelTimeline_GetSlipBehavior(HandleRef jarg1)
    {
        int ret = _ParallelTimeline_GetSlipBehavior(jarg1);

        return ret;
    }

    public delegate void ParallelTimeline_SetSlipBehaviorDelegate(HandleRef jarg1, int jarg2);
    public static ParallelTimeline_SetSlipBehaviorDelegate _ParallelTimeline_SetSlipBehavior;
    public static void ParallelTimeline_SetSlipBehavior(HandleRef jarg1, int jarg2)
    {
        _ParallelTimeline_SetSlipBehavior(jarg1, jarg2);
    }

    public delegate IntPtr ParallelTimeline_GetNaturalDurationDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ParallelTimeline_GetNaturalDurationDelegate _ParallelTimeline_GetNaturalDuration;
    public static IntPtr ParallelTimeline_GetNaturalDuration(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _ParallelTimeline_GetNaturalDuration(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr ParallelTimeline_GetEffectiveDurationDelegate(HandleRef jarg1);
    public static ParallelTimeline_GetEffectiveDurationDelegate _ParallelTimeline_GetEffectiveDuration;
    public static IntPtr ParallelTimeline_GetEffectiveDuration(HandleRef jarg1)
    {
        IntPtr ret = _ParallelTimeline_GetEffectiveDuration(jarg1);

        return ret;
    }

    public delegate IntPtr new_PauseStoryboardDelegate();
    public static new_PauseStoryboardDelegate _new_PauseStoryboard;
    public static IntPtr new_PauseStoryboard()
    {
        IntPtr ret = _new_PauseStoryboard();

        return ret;
    }

    public delegate void delete_PauseStoryboardDelegate(HandleRef jarg1);
    public static delete_PauseStoryboardDelegate _delete_PauseStoryboard;
    public static void delete_PauseStoryboard(HandleRef jarg1)
    {
        _delete_PauseStoryboard(jarg1);
    }

    public delegate IntPtr new_PowerEaseDelegate();
    public static new_PowerEaseDelegate _new_PowerEase;
    public static IntPtr new_PowerEase()
    {
        IntPtr ret = _new_PowerEase();

        return ret;
    }

    public delegate float PowerEase_GetPowerDelegate(HandleRef jarg1);
    public static PowerEase_GetPowerDelegate _PowerEase_GetPower;
    public static float PowerEase_GetPower(HandleRef jarg1)
    {
        float ret = _PowerEase_GetPower(jarg1);

        return ret;
    }

    public delegate void PowerEase_SetPowerDelegate(HandleRef jarg1, float jarg2);
    public static PowerEase_SetPowerDelegate _PowerEase_SetPower;
    public static void PowerEase_SetPower(HandleRef jarg1, float jarg2)
    {
        _PowerEase_SetPower(jarg1, jarg2);
    }

    public delegate void delete_PowerEaseDelegate(HandleRef jarg1);
    public static delete_PowerEaseDelegate _delete_PowerEase;
    public static void delete_PowerEase(HandleRef jarg1)
    {
        _delete_PowerEase(jarg1);
    }

    public delegate IntPtr new_QuadraticEaseDelegate();
    public static new_QuadraticEaseDelegate _new_QuadraticEase;
    public static IntPtr new_QuadraticEase()
    {
        IntPtr ret = _new_QuadraticEase();

        return ret;
    }

    public delegate void delete_QuadraticEaseDelegate(HandleRef jarg1);
    public static delete_QuadraticEaseDelegate _delete_QuadraticEase;
    public static void delete_QuadraticEase(HandleRef jarg1)
    {
        _delete_QuadraticEase(jarg1);
    }

    public delegate IntPtr new_QuarticEaseDelegate();
    public static new_QuarticEaseDelegate _new_QuarticEase;
    public static IntPtr new_QuarticEase()
    {
        IntPtr ret = _new_QuarticEase();

        return ret;
    }

    public delegate void delete_QuarticEaseDelegate(HandleRef jarg1);
    public static delete_QuarticEaseDelegate _delete_QuarticEase;
    public static void delete_QuarticEase(HandleRef jarg1)
    {
        _delete_QuarticEase(jarg1);
    }

    public delegate IntPtr new_QuinticEaseDelegate();
    public static new_QuinticEaseDelegate _new_QuinticEase;
    public static IntPtr new_QuinticEase()
    {
        IntPtr ret = _new_QuinticEase();

        return ret;
    }

    public delegate void delete_QuinticEaseDelegate(HandleRef jarg1);
    public static delete_QuinticEaseDelegate _delete_QuinticEase;
    public static void delete_QuinticEase(HandleRef jarg1)
    {
        _delete_QuinticEase(jarg1);
    }

    public delegate IntPtr new_RepeatBehavior__SWIG_0Delegate();
    public static new_RepeatBehavior__SWIG_0Delegate _new_RepeatBehavior__SWIG_0;
    public static IntPtr new_RepeatBehavior__SWIG_0()
    {
        IntPtr ret = _new_RepeatBehavior__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_RepeatBehavior__SWIG_1Delegate(float jarg1);
    public static new_RepeatBehavior__SWIG_1Delegate _new_RepeatBehavior__SWIG_1;
    public static IntPtr new_RepeatBehavior__SWIG_1(float jarg1)
    {
        IntPtr ret = _new_RepeatBehavior__SWIG_1(jarg1);

        return ret;
    }

    public delegate IntPtr new_RepeatBehavior__SWIG_2Delegate(HandleRef jarg1);
    public static new_RepeatBehavior__SWIG_2Delegate _new_RepeatBehavior__SWIG_2;
    public static IntPtr new_RepeatBehavior__SWIG_2(HandleRef jarg1)
    {
        IntPtr ret = _new_RepeatBehavior__SWIG_2(jarg1);

        return ret;
    }

    public delegate IntPtr RepeatBehavior_ForeverDelegate();
    public static RepeatBehavior_ForeverDelegate _RepeatBehavior_Forever;
    public static IntPtr RepeatBehavior_Forever()
    {
        IntPtr ret = _RepeatBehavior_Forever();

        return ret;
    }

    public delegate IntPtr RepeatBehavior_ParseDelegate(string jarg1);
    public static RepeatBehavior_ParseDelegate _RepeatBehavior_Parse;
    public static IntPtr RepeatBehavior_Parse(string jarg1)
    {
        IntPtr ret = _RepeatBehavior_Parse(jarg1);

        return ret;
    }

    public delegate bool RepeatBehavior_TryParseDelegate(string jarg1, HandleRef jarg2);
    public static RepeatBehavior_TryParseDelegate _RepeatBehavior_TryParse;
    public static bool RepeatBehavior_TryParse(string jarg1, HandleRef jarg2)
    {
        bool ret = _RepeatBehavior_TryParse(jarg1, jarg2);

        return ret;
    }

    public delegate int RepeatBehavior_GetRepeatModeDelegate(HandleRef jarg1);
    public static RepeatBehavior_GetRepeatModeDelegate _RepeatBehavior_GetRepeatMode;
    public static int RepeatBehavior_GetRepeatMode(HandleRef jarg1)
    {
        int ret = _RepeatBehavior_GetRepeatMode(jarg1);

        return ret;
    }

    public delegate float RepeatBehavior_GetCountDelegate(HandleRef jarg1);
    public static RepeatBehavior_GetCountDelegate _RepeatBehavior_GetCount;
    public static float RepeatBehavior_GetCount(HandleRef jarg1)
    {
        float ret = _RepeatBehavior_GetCount(jarg1);

        return ret;
    }

    public delegate IntPtr RepeatBehavior_GetDurationDelegate(HandleRef jarg1);
    public static RepeatBehavior_GetDurationDelegate _RepeatBehavior_GetDuration;
    public static IntPtr RepeatBehavior_GetDuration(HandleRef jarg1)
    {
        IntPtr ret = _RepeatBehavior_GetDuration(jarg1);

        return ret;
    }

    public delegate void delete_RepeatBehaviorDelegate(HandleRef jarg1);
    public static delete_RepeatBehaviorDelegate _delete_RepeatBehavior;
    public static void delete_RepeatBehavior(HandleRef jarg1)
    {
        _delete_RepeatBehavior(jarg1);
    }

    public delegate IntPtr new_ResumeStoryboardDelegate();
    public static new_ResumeStoryboardDelegate _new_ResumeStoryboard;
    public static IntPtr new_ResumeStoryboard()
    {
        IntPtr ret = _new_ResumeStoryboard();

        return ret;
    }

    public delegate void delete_ResumeStoryboardDelegate(HandleRef jarg1);
    public static delete_ResumeStoryboardDelegate _delete_ResumeStoryboard;
    public static void delete_ResumeStoryboard(HandleRef jarg1)
    {
        _delete_ResumeStoryboard(jarg1);
    }

    public delegate IntPtr new_SineEaseDelegate();
    public static new_SineEaseDelegate _new_SineEase;
    public static IntPtr new_SineEase()
    {
        IntPtr ret = _new_SineEase();

        return ret;
    }

    public delegate void delete_SineEaseDelegate(HandleRef jarg1);
    public static delete_SineEaseDelegate _delete_SineEase;
    public static void delete_SineEase(HandleRef jarg1)
    {
        _delete_SineEase(jarg1);
    }

    public delegate IntPtr new_StopStoryboardDelegate();
    public static new_StopStoryboardDelegate _new_StopStoryboard;
    public static IntPtr new_StopStoryboard()
    {
        IntPtr ret = _new_StopStoryboard();

        return ret;
    }

    public delegate void delete_StopStoryboardDelegate(HandleRef jarg1);
    public static delete_StopStoryboardDelegate _delete_StopStoryboard;
    public static void delete_StopStoryboard(HandleRef jarg1)
    {
        _delete_StopStoryboard(jarg1);
    }

    public delegate void AnimationTarget__object_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static AnimationTarget__object_setDelegate _AnimationTarget__object_set;
    public static void AnimationTarget__object_set(HandleRef jarg1, HandleRef jarg2)
    {
        _AnimationTarget__object_set(jarg1, jarg2);
    }

    public delegate IntPtr AnimationTarget__object_getDelegate(HandleRef jarg1);
    public static AnimationTarget__object_getDelegate _AnimationTarget__object_get;
    public static IntPtr AnimationTarget__object_get(HandleRef jarg1)
    {
        IntPtr ret = _AnimationTarget__object_get(jarg1);

        return ret;
    }

    public delegate void AnimationTarget_dp_setDelegate(HandleRef jarg1, HandleRef jarg2);
    public static AnimationTarget_dp_setDelegate _AnimationTarget_dp_set;
    public static void AnimationTarget_dp_set(HandleRef jarg1, HandleRef jarg2)
    {
        _AnimationTarget_dp_set(jarg1, jarg2);
    }

    public delegate IntPtr AnimationTarget_dp_getDelegate(HandleRef jarg1);
    public static AnimationTarget_dp_getDelegate _AnimationTarget_dp_get;
    public static IntPtr AnimationTarget_dp_get(HandleRef jarg1)
    {
        IntPtr ret = _AnimationTarget_dp_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_AnimationTargetDelegate();
    public static new_AnimationTargetDelegate _new_AnimationTarget;
    public static IntPtr new_AnimationTarget()
    {
        IntPtr ret = _new_AnimationTarget();

        return ret;
    }

    public delegate void delete_AnimationTargetDelegate(HandleRef jarg1);
    public static delete_AnimationTargetDelegate _delete_AnimationTarget;
    public static void delete_AnimationTarget(HandleRef jarg1)
    {
        _delete_AnimationTarget(jarg1);
    }

    public delegate IntPtr new_Storyboard__SWIG_0Delegate();
    public static new_Storyboard__SWIG_0Delegate _new_Storyboard__SWIG_0;
    public static IntPtr new_Storyboard__SWIG_0()
    {
        IntPtr ret = _new_Storyboard__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_Storyboard__SWIG_1Delegate(bool jarg1);
    public static new_Storyboard__SWIG_1Delegate _new_Storyboard__SWIG_1;
    public static IntPtr new_Storyboard__SWIG_1(bool jarg1)
    {
        IntPtr ret = _new_Storyboard__SWIG_1(jarg1);

        return ret;
    }

    public delegate void delete_StoryboardDelegate(HandleRef jarg1);
    public static delete_StoryboardDelegate _delete_Storyboard;
    public static void delete_Storyboard(HandleRef jarg1)
    {
        _delete_Storyboard(jarg1);
    }

    public delegate IntPtr Storyboard_GetTargetNameDelegate(HandleRef jarg1);
    public static Storyboard_GetTargetNameDelegate _Storyboard_GetTargetName;
    public static IntPtr Storyboard_GetTargetName(HandleRef jarg1)
    {
        IntPtr ret = _Storyboard_GetTargetName(jarg1);

        return ret;
    }

    public delegate void Storyboard_SetTargetNameDelegate(HandleRef jarg1, IntPtr jarg2);
    public static Storyboard_SetTargetNameDelegate _Storyboard_SetTargetName;
    public static void Storyboard_SetTargetName(HandleRef jarg1, IntPtr jarg2)
    {
        _Storyboard_SetTargetName(jarg1, jarg2);
    }

    public delegate IntPtr Storyboard_GetTargetPropertyDelegate(HandleRef jarg1);
    public static Storyboard_GetTargetPropertyDelegate _Storyboard_GetTargetProperty;
    public static IntPtr Storyboard_GetTargetProperty(HandleRef jarg1)
    {
        IntPtr ret = _Storyboard_GetTargetProperty(jarg1);

        return ret;
    }

    public delegate void Storyboard_SetTargetPropertyDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Storyboard_SetTargetPropertyDelegate _Storyboard_SetTargetProperty;
    public static void Storyboard_SetTargetProperty(HandleRef jarg1, HandleRef jarg2)
    {
        _Storyboard_SetTargetProperty(jarg1, jarg2);
    }

    public delegate IntPtr Storyboard_GetTargetDelegate(HandleRef jarg1);
    public static Storyboard_GetTargetDelegate _Storyboard_GetTarget;
    public static IntPtr Storyboard_GetTarget(HandleRef jarg1)
    {
        IntPtr ret = _Storyboard_GetTarget(jarg1);

        return ret;
    }

    public delegate void Storyboard_SetTargetDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Storyboard_SetTargetDelegate _Storyboard_SetTarget;
    public static void Storyboard_SetTarget(HandleRef jarg1, HandleRef jarg2)
    {
        _Storyboard_SetTarget(jarg1, jarg2);
    }

    public delegate void Storyboard_Begin__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4, HandleRef jarg5);
    public static Storyboard_Begin__SWIG_0Delegate _Storyboard_Begin__SWIG_0;
    public static void Storyboard_Begin__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4, HandleRef jarg5)
    {
        _Storyboard_Begin__SWIG_0(jarg1, jarg2, jarg3, jarg4, jarg5);
    }

    public delegate void Storyboard_Begin__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4);
    public static Storyboard_Begin__SWIG_1Delegate _Storyboard_Begin__SWIG_1;
    public static void Storyboard_Begin__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, bool jarg4)
    {
        _Storyboard_Begin__SWIG_1(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate void Storyboard_Begin__SWIG_2Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static Storyboard_Begin__SWIG_2Delegate _Storyboard_Begin__SWIG_2;
    public static void Storyboard_Begin__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _Storyboard_Begin__SWIG_2(jarg1, jarg2, jarg3);
    }

    public delegate void Storyboard_Begin__SWIG_3Delegate(HandleRef jarg1, HandleRef jarg2);
    public static Storyboard_Begin__SWIG_3Delegate _Storyboard_Begin__SWIG_3;
    public static void Storyboard_Begin__SWIG_3(HandleRef jarg1, HandleRef jarg2)
    {
        _Storyboard_Begin__SWIG_3(jarg1, jarg2);
    }

    public delegate void Storyboard_PauseDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Storyboard_PauseDelegate _Storyboard_Pause;
    public static void Storyboard_Pause(HandleRef jarg1, HandleRef jarg2)
    {
        _Storyboard_Pause(jarg1, jarg2);
    }

    public delegate void Storyboard_ResumeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Storyboard_ResumeDelegate _Storyboard_Resume;
    public static void Storyboard_Resume(HandleRef jarg1, HandleRef jarg2)
    {
        _Storyboard_Resume(jarg1, jarg2);
    }

    public delegate void Storyboard_StopDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Storyboard_StopDelegate _Storyboard_Stop;
    public static void Storyboard_Stop(HandleRef jarg1, HandleRef jarg2)
    {
        _Storyboard_Stop(jarg1, jarg2);
    }

    public delegate void Storyboard_RemoveDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Storyboard_RemoveDelegate _Storyboard_Remove;
    public static void Storyboard_Remove(HandleRef jarg1, HandleRef jarg2)
    {
        _Storyboard_Remove(jarg1, jarg2);
    }

    public delegate bool Storyboard_IsPlayingDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Storyboard_IsPlayingDelegate _Storyboard_IsPlaying;
    public static bool Storyboard_IsPlaying(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _Storyboard_IsPlaying(jarg1, jarg2);

        return ret;
    }

    public delegate bool Storyboard_IsPausedDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Storyboard_IsPausedDelegate _Storyboard_IsPaused;
    public static bool Storyboard_IsPaused(HandleRef jarg1, HandleRef jarg2)
    {
        bool ret = _Storyboard_IsPaused(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr Storyboard_AnimationCompletedDelegate(HandleRef jarg1);
    public static Storyboard_AnimationCompletedDelegate _Storyboard_AnimationCompleted;
    public static IntPtr Storyboard_AnimationCompleted(HandleRef jarg1)
    {
        IntPtr ret = _Storyboard_AnimationCompleted(jarg1);

        return ret;
    }

    public delegate IntPtr new_TimeSpan__SWIG_0Delegate();
    public static new_TimeSpan__SWIG_0Delegate _new_TimeSpan__SWIG_0;
    public static IntPtr new_TimeSpan__SWIG_0()
    {
        IntPtr ret = _new_TimeSpan__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_TimeSpan__SWIG_1Delegate(long jarg1);
    public static new_TimeSpan__SWIG_1Delegate _new_TimeSpan__SWIG_1;
    public static IntPtr new_TimeSpan__SWIG_1(long jarg1)
    {
        IntPtr ret = _new_TimeSpan__SWIG_1(jarg1);

        return ret;
    }

    public delegate IntPtr new_TimeSpan__SWIG_2Delegate(double jarg1);
    public static new_TimeSpan__SWIG_2Delegate _new_TimeSpan__SWIG_2;
    public static IntPtr new_TimeSpan__SWIG_2(double jarg1)
    {
        IntPtr ret = _new_TimeSpan__SWIG_2(jarg1);

        return ret;
    }

    public delegate IntPtr new_TimeSpan__SWIG_3Delegate(int jarg1, int jarg2, int jarg3);
    public static new_TimeSpan__SWIG_3Delegate _new_TimeSpan__SWIG_3;
    public static IntPtr new_TimeSpan__SWIG_3(int jarg1, int jarg2, int jarg3)
    {
        IntPtr ret = _new_TimeSpan__SWIG_3(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr new_TimeSpan__SWIG_4Delegate(int jarg1, int jarg2, int jarg3, int jarg4);
    public static new_TimeSpan__SWIG_4Delegate _new_TimeSpan__SWIG_4;
    public static IntPtr new_TimeSpan__SWIG_4(int jarg1, int jarg2, int jarg3, int jarg4)
    {
        IntPtr ret = _new_TimeSpan__SWIG_4(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr new_TimeSpan__SWIG_5Delegate(int jarg1, int jarg2, int jarg3, int jarg4, int jarg5);
    public static new_TimeSpan__SWIG_5Delegate _new_TimeSpan__SWIG_5;
    public static IntPtr new_TimeSpan__SWIG_5(int jarg1, int jarg2, int jarg3, int jarg4, int jarg5)
    {
        IntPtr ret = _new_TimeSpan__SWIG_5(jarg1, jarg2, jarg3, jarg4, jarg5);

        return ret;
    }

    public delegate IntPtr TimeSpan_ParseDelegate(string jarg1);
    public static TimeSpan_ParseDelegate _TimeSpan_Parse;
    public static IntPtr TimeSpan_Parse(string jarg1)
    {
        IntPtr ret = _TimeSpan_Parse(jarg1);

        return ret;
    }

    public delegate bool TimeSpan_TryParseDelegate(string jarg1, HandleRef jarg2);
    public static TimeSpan_TryParseDelegate _TimeSpan_TryParse;
    public static bool TimeSpan_TryParse(string jarg1, HandleRef jarg2)
    {
        bool ret = _TimeSpan_TryParse(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr TimeSpan_ToStrDelegate(HandleRef jarg1);
    public static TimeSpan_ToStrDelegate _TimeSpan_ToStr;
    public static IntPtr TimeSpan_ToStr(HandleRef jarg1)
    {
        IntPtr ret = _TimeSpan_ToStr(jarg1);

        return ret;
    }

    public delegate IntPtr TimeSpan_ZeroDelegate();
    public static TimeSpan_ZeroDelegate _TimeSpan_Zero;
    public static IntPtr TimeSpan_Zero()
    {
        IntPtr ret = _TimeSpan_Zero();

        return ret;
    }

    public delegate int TimeSpan_GetDaysDelegate(HandleRef jarg1);
    public static TimeSpan_GetDaysDelegate _TimeSpan_GetDays;
    public static int TimeSpan_GetDays(HandleRef jarg1)
    {
        int ret = _TimeSpan_GetDays(jarg1);

        return ret;
    }

    public delegate int TimeSpan_GetHoursDelegate(HandleRef jarg1);
    public static TimeSpan_GetHoursDelegate _TimeSpan_GetHours;
    public static int TimeSpan_GetHours(HandleRef jarg1)
    {
        int ret = _TimeSpan_GetHours(jarg1);

        return ret;
    }

    public delegate int TimeSpan_GetMinutesDelegate(HandleRef jarg1);
    public static TimeSpan_GetMinutesDelegate _TimeSpan_GetMinutes;
    public static int TimeSpan_GetMinutes(HandleRef jarg1)
    {
        int ret = _TimeSpan_GetMinutes(jarg1);

        return ret;
    }

    public delegate int TimeSpan_GetSecondsDelegate(HandleRef jarg1);
    public static TimeSpan_GetSecondsDelegate _TimeSpan_GetSeconds;
    public static int TimeSpan_GetSeconds(HandleRef jarg1)
    {
        int ret = _TimeSpan_GetSeconds(jarg1);

        return ret;
    }

    public delegate int TimeSpan_GetMillisecondsDelegate(HandleRef jarg1);
    public static TimeSpan_GetMillisecondsDelegate _TimeSpan_GetMilliseconds;
    public static int TimeSpan_GetMilliseconds(HandleRef jarg1)
    {
        int ret = _TimeSpan_GetMilliseconds(jarg1);

        return ret;
    }

    public delegate long TimeSpan_GetTicksDelegate(HandleRef jarg1);
    public static TimeSpan_GetTicksDelegate _TimeSpan_GetTicks;
    public static long TimeSpan_GetTicks(HandleRef jarg1)
    {
        long ret = _TimeSpan_GetTicks(jarg1);

        return ret;
    }

    public delegate double TimeSpan_GetTimeInSecondsDelegate(HandleRef jarg1);
    public static TimeSpan_GetTimeInSecondsDelegate _TimeSpan_GetTimeInSeconds;
    public static double TimeSpan_GetTimeInSeconds(HandleRef jarg1)
    {
        double ret = _TimeSpan_GetTimeInSeconds(jarg1);

        return ret;
    }

    public delegate void delete_TimeSpanDelegate(HandleRef jarg1);
    public static delete_TimeSpanDelegate _delete_TimeSpan;
    public static void delete_TimeSpan(HandleRef jarg1)
    {
        _delete_TimeSpan(jarg1);
    }

    public delegate IntPtr new_VisualStateDelegate();
    public static new_VisualStateDelegate _new_VisualState;
    public static IntPtr new_VisualState()
    {
        IntPtr ret = _new_VisualState();

        return ret;
    }

    public delegate IntPtr VisualState_GetNameDelegate(HandleRef jarg1);
    public static VisualState_GetNameDelegate _VisualState_GetName;
    public static IntPtr VisualState_GetName(HandleRef jarg1)
    {
        IntPtr ret = _VisualState_GetName(jarg1);

        return ret;
    }

    public delegate void VisualState_SetNameDelegate(HandleRef jarg1, IntPtr jarg2);
    public static VisualState_SetNameDelegate _VisualState_SetName;
    public static void VisualState_SetName(HandleRef jarg1, IntPtr jarg2)
    {
        _VisualState_SetName(jarg1, jarg2);
    }

    public delegate IntPtr VisualState_GetStoryboardDelegate(HandleRef jarg1);
    public static VisualState_GetStoryboardDelegate _VisualState_GetStoryboard;
    public static IntPtr VisualState_GetStoryboard(HandleRef jarg1)
    {
        IntPtr ret = _VisualState_GetStoryboard(jarg1);

        return ret;
    }

    public delegate void VisualState_SetStoryboardDelegate(HandleRef jarg1, HandleRef jarg2);
    public static VisualState_SetStoryboardDelegate _VisualState_SetStoryboard;
    public static void VisualState_SetStoryboard(HandleRef jarg1, HandleRef jarg2)
    {
        _VisualState_SetStoryboard(jarg1, jarg2);
    }

    public delegate void delete_VisualStateDelegate(HandleRef jarg1);
    public static delete_VisualStateDelegate _delete_VisualState;
    public static void delete_VisualState(HandleRef jarg1)
    {
        _delete_VisualState(jarg1);
    }

    public delegate IntPtr new_VisualStateGroupDelegate();
    public static new_VisualStateGroupDelegate _new_VisualStateGroup;
    public static IntPtr new_VisualStateGroup()
    {
        IntPtr ret = _new_VisualStateGroup();

        return ret;
    }

    public delegate void delete_VisualStateGroupDelegate(HandleRef jarg1);
    public static delete_VisualStateGroupDelegate _delete_VisualStateGroup;
    public static void delete_VisualStateGroup(HandleRef jarg1)
    {
        _delete_VisualStateGroup(jarg1);
    }

    public delegate string VisualStateGroup_GetNameDelegate(HandleRef jarg1);
    public static VisualStateGroup_GetNameDelegate _VisualStateGroup_GetName;
    public static string VisualStateGroup_GetName(HandleRef jarg1)
    {
        string ret = _VisualStateGroup_GetName(jarg1);

        return ret;
    }

    public delegate IntPtr VisualStateGroup_GetStatesDelegate(HandleRef jarg1);
    public static VisualStateGroup_GetStatesDelegate _VisualStateGroup_GetStates;
    public static IntPtr VisualStateGroup_GetStates(HandleRef jarg1)
    {
        IntPtr ret = _VisualStateGroup_GetStates(jarg1);

        return ret;
    }

    public delegate IntPtr VisualStateGroup_GetTransitionsDelegate(HandleRef jarg1);
    public static VisualStateGroup_GetTransitionsDelegate _VisualStateGroup_GetTransitions;
    public static IntPtr VisualStateGroup_GetTransitions(HandleRef jarg1)
    {
        IntPtr ret = _VisualStateGroup_GetTransitions(jarg1);

        return ret;
    }

    public delegate IntPtr VisualStateGroup_GetCurrentStateDelegate(HandleRef jarg1, HandleRef jarg2);
    public static VisualStateGroup_GetCurrentStateDelegate _VisualStateGroup_GetCurrentState;
    public static IntPtr VisualStateGroup_GetCurrentState(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _VisualStateGroup_GetCurrentState(jarg1, jarg2);

        return ret;
    }

    public delegate void VisualStateGroup_SetCurrentStateDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static VisualStateGroup_SetCurrentStateDelegate _VisualStateGroup_SetCurrentState;
    public static void VisualStateGroup_SetCurrentState(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _VisualStateGroup_SetCurrentState(jarg1, jarg2, jarg3);
    }

    public delegate IntPtr VisualStateGroup_FindStateDelegate(HandleRef jarg1, IntPtr jarg2);
    public static VisualStateGroup_FindStateDelegate _VisualStateGroup_FindState;
    public static IntPtr VisualStateGroup_FindState(HandleRef jarg1, IntPtr jarg2)
    {
        IntPtr ret = _VisualStateGroup_FindState(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr VisualStateGroup_FindTransitionDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static VisualStateGroup_FindTransitionDelegate _VisualStateGroup_FindTransition;
    public static IntPtr VisualStateGroup_FindTransition(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        IntPtr ret = _VisualStateGroup_FindTransition(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void VisualStateGroup_UpdateAnimations__SWIG_0Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static VisualStateGroup_UpdateAnimations__SWIG_0Delegate _VisualStateGroup_UpdateAnimations__SWIG_0;
    public static void VisualStateGroup_UpdateAnimations__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        _VisualStateGroup_UpdateAnimations__SWIG_0(jarg1, jarg2, jarg3, jarg4);
    }

    public delegate void VisualStateGroup_UpdateAnimations__SWIG_1Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static VisualStateGroup_UpdateAnimations__SWIG_1Delegate _VisualStateGroup_UpdateAnimations__SWIG_1;
    public static void VisualStateGroup_UpdateAnimations__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        _VisualStateGroup_UpdateAnimations__SWIG_1(jarg1, jarg2, jarg3);
    }

    public delegate IntPtr VisualStateGroup_CreateTransitionStoryboardDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static VisualStateGroup_CreateTransitionStoryboardDelegate _VisualStateGroup_CreateTransitionStoryboard;
    public static IntPtr VisualStateGroup_CreateTransitionStoryboard(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        IntPtr ret = _VisualStateGroup_CreateTransitionStoryboard(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr new_VisualStateManagerDelegate();
    public static new_VisualStateManagerDelegate _new_VisualStateManager;
    public static IntPtr new_VisualStateManager()
    {
        IntPtr ret = _new_VisualStateManager();

        return ret;
    }

    public delegate void delete_VisualStateManagerDelegate(HandleRef jarg1);
    public static delete_VisualStateManagerDelegate _delete_VisualStateManager;
    public static void delete_VisualStateManager(HandleRef jarg1)
    {
        _delete_VisualStateManager(jarg1);
    }

    public delegate IntPtr VisualStateManager_GetCustomVisualStateManagerDelegate(HandleRef jarg1);
    public static VisualStateManager_GetCustomVisualStateManagerDelegate _VisualStateManager_GetCustomVisualStateManager;
    public static IntPtr VisualStateManager_GetCustomVisualStateManager(HandleRef jarg1)
    {
        IntPtr ret = _VisualStateManager_GetCustomVisualStateManager(jarg1);

        return ret;
    }

    public delegate void VisualStateManager_SetCustomVisualStateManagerDelegate(HandleRef jarg1, HandleRef jarg2);
    public static VisualStateManager_SetCustomVisualStateManagerDelegate _VisualStateManager_SetCustomVisualStateManager;
    public static void VisualStateManager_SetCustomVisualStateManager(HandleRef jarg1, HandleRef jarg2)
    {
        _VisualStateManager_SetCustomVisualStateManager(jarg1, jarg2);
    }

    public delegate IntPtr VisualStateManager_GetVisualStateGroupsDelegate(HandleRef jarg1);
    public static VisualStateManager_GetVisualStateGroupsDelegate _VisualStateManager_GetVisualStateGroups;
    public static IntPtr VisualStateManager_GetVisualStateGroups(HandleRef jarg1)
    {
        IntPtr ret = _VisualStateManager_GetVisualStateGroups(jarg1);

        return ret;
    }

    public delegate void VisualStateManager_SetVisualStateGroupsDelegate(HandleRef jarg1, HandleRef jarg2);
    public static VisualStateManager_SetVisualStateGroupsDelegate _VisualStateManager_SetVisualStateGroups;
    public static void VisualStateManager_SetVisualStateGroups(HandleRef jarg1, HandleRef jarg2)
    {
        _VisualStateManager_SetVisualStateGroups(jarg1, jarg2);
    }

    public delegate bool VisualStateManager_GoToStateDelegate(HandleRef jarg1, IntPtr jarg2, bool jarg3);
    public static VisualStateManager_GoToStateDelegate _VisualStateManager_GoToState;
    public static bool VisualStateManager_GoToState(HandleRef jarg1, IntPtr jarg2, bool jarg3)
    {
        bool ret = _VisualStateManager_GoToState(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate bool VisualStateManager_GoToElementStateDelegate(HandleRef jarg1, IntPtr jarg2, bool jarg3);
    public static VisualStateManager_GoToElementStateDelegate _VisualStateManager_GoToElementState;
    public static bool VisualStateManager_GoToElementState(HandleRef jarg1, IntPtr jarg2, bool jarg3)
    {
        bool ret = _VisualStateManager_GoToElementState(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr new_VisualTransitionDelegate();
    public static new_VisualTransitionDelegate _new_VisualTransition;
    public static IntPtr new_VisualTransition()
    {
        IntPtr ret = _new_VisualTransition();

        return ret;
    }

    public delegate void delete_VisualTransitionDelegate(HandleRef jarg1);
    public static delete_VisualTransitionDelegate _delete_VisualTransition;
    public static void delete_VisualTransition(HandleRef jarg1)
    {
        _delete_VisualTransition(jarg1);
    }

    public delegate IntPtr VisualTransition_GetFromDelegate(HandleRef jarg1);
    public static VisualTransition_GetFromDelegate _VisualTransition_GetFrom;
    public static IntPtr VisualTransition_GetFrom(HandleRef jarg1)
    {
        IntPtr ret = _VisualTransition_GetFrom(jarg1);

        return ret;
    }

    public delegate void VisualTransition_SetFromDelegate(HandleRef jarg1, IntPtr jarg2);
    public static VisualTransition_SetFromDelegate _VisualTransition_SetFrom;
    public static void VisualTransition_SetFrom(HandleRef jarg1, IntPtr jarg2)
    {
        _VisualTransition_SetFrom(jarg1, jarg2);
    }

    public delegate IntPtr VisualTransition_GetToDelegate(HandleRef jarg1);
    public static VisualTransition_GetToDelegate _VisualTransition_GetTo;
    public static IntPtr VisualTransition_GetTo(HandleRef jarg1)
    {
        IntPtr ret = _VisualTransition_GetTo(jarg1);

        return ret;
    }

    public delegate void VisualTransition_SetToDelegate(HandleRef jarg1, IntPtr jarg2);
    public static VisualTransition_SetToDelegate _VisualTransition_SetTo;
    public static void VisualTransition_SetTo(HandleRef jarg1, IntPtr jarg2)
    {
        _VisualTransition_SetTo(jarg1, jarg2);
    }

    public delegate IntPtr VisualTransition_GetGeneratedDurationDelegate(HandleRef jarg1);
    public static VisualTransition_GetGeneratedDurationDelegate _VisualTransition_GetGeneratedDuration;
    public static IntPtr VisualTransition_GetGeneratedDuration(HandleRef jarg1)
    {
        IntPtr ret = _VisualTransition_GetGeneratedDuration(jarg1);

        return ret;
    }

    public delegate void VisualTransition_SetGeneratedDurationDelegate(HandleRef jarg1, HandleRef jarg2);
    public static VisualTransition_SetGeneratedDurationDelegate _VisualTransition_SetGeneratedDuration;
    public static void VisualTransition_SetGeneratedDuration(HandleRef jarg1, HandleRef jarg2)
    {
        _VisualTransition_SetGeneratedDuration(jarg1, jarg2);
    }

    public delegate IntPtr VisualTransition_GetGeneratedEasingFunctionDelegate(HandleRef jarg1);
    public static VisualTransition_GetGeneratedEasingFunctionDelegate _VisualTransition_GetGeneratedEasingFunction;
    public static IntPtr VisualTransition_GetGeneratedEasingFunction(HandleRef jarg1)
    {
        IntPtr ret = _VisualTransition_GetGeneratedEasingFunction(jarg1);

        return ret;
    }

    public delegate void VisualTransition_SetGeneratedEasingFunctionDelegate(HandleRef jarg1, HandleRef jarg2);
    public static VisualTransition_SetGeneratedEasingFunctionDelegate _VisualTransition_SetGeneratedEasingFunction;
    public static void VisualTransition_SetGeneratedEasingFunction(HandleRef jarg1, HandleRef jarg2)
    {
        _VisualTransition_SetGeneratedEasingFunction(jarg1, jarg2);
    }

    public delegate IntPtr VisualTransition_GetStoryboardDelegate(HandleRef jarg1);
    public static VisualTransition_GetStoryboardDelegate _VisualTransition_GetStoryboard;
    public static IntPtr VisualTransition_GetStoryboard(HandleRef jarg1)
    {
        IntPtr ret = _VisualTransition_GetStoryboard(jarg1);

        return ret;
    }

    public delegate void VisualTransition_SetStoryboardDelegate(HandleRef jarg1, HandleRef jarg2);
    public static VisualTransition_SetStoryboardDelegate _VisualTransition_SetStoryboard;
    public static void VisualTransition_SetStoryboard(HandleRef jarg1, HandleRef jarg2)
    {
        _VisualTransition_SetStoryboard(jarg1, jarg2);
    }

    public delegate bool VisualTransition_IsDefaultDelegate(HandleRef jarg1);
    public static VisualTransition_IsDefaultDelegate _VisualTransition_IsDefault;
    public static bool VisualTransition_IsDefault(HandleRef jarg1)
    {
        bool ret = _VisualTransition_IsDefault(jarg1);

        return ret;
    }

    public delegate void delete_BaseSetterCollectionDelegate(HandleRef jarg1);
    public static delete_BaseSetterCollectionDelegate _delete_BaseSetterCollection;
    public static void delete_BaseSetterCollection(HandleRef jarg1)
    {
        _delete_BaseSetterCollection(jarg1);
    }

    public delegate void delete_TriggerActionCollectionDelegate(HandleRef jarg1);
    public static delete_TriggerActionCollectionDelegate _delete_TriggerActionCollection;
    public static void delete_TriggerActionCollection(HandleRef jarg1)
    {
        _delete_TriggerActionCollection(jarg1);
    }

    public delegate void delete_GroupDescriptionCollectionDelegate(HandleRef jarg1);
    public static delete_GroupDescriptionCollectionDelegate _delete_GroupDescriptionCollection;
    public static void delete_GroupDescriptionCollection(HandleRef jarg1)
    {
        _delete_GroupDescriptionCollection(jarg1);
    }

    public delegate void delete_SortDescriptionCollectionDelegate(HandleRef jarg1);
    public static delete_SortDescriptionCollectionDelegate _delete_SortDescriptionCollection;
    public static void delete_SortDescriptionCollection(HandleRef jarg1)
    {
        _delete_SortDescriptionCollection(jarg1);
    }

    public delegate void delete_CommandBindingCollectionDelegate(HandleRef jarg1);
    public static delete_CommandBindingCollectionDelegate _delete_CommandBindingCollection;
    public static void delete_CommandBindingCollection(HandleRef jarg1)
    {
        _delete_CommandBindingCollection(jarg1);
    }

    public delegate void delete_InputBindingCollectionDelegate(HandleRef jarg1);
    public static delete_InputBindingCollectionDelegate _delete_InputBindingCollection;
    public static void delete_InputBindingCollection(HandleRef jarg1)
    {
        _delete_InputBindingCollection(jarg1);
    }

    public delegate IntPtr CommandIterator_GetDelegate(HandleRef jarg1);
    public static CommandIterator_GetDelegate _CommandIterator_Get;
    public static IntPtr CommandIterator_Get(HandleRef jarg1)
    {
        IntPtr ret = _CommandIterator_Get(jarg1);

        return ret;
    }

    public delegate void CommandIterator_AdvanceDelegate(HandleRef jarg1);
    public static CommandIterator_AdvanceDelegate _CommandIterator_Advance;
    public static void CommandIterator_Advance(HandleRef jarg1)
    {
        _CommandIterator_Advance(jarg1);
    }

    public delegate bool CommandIterator_EndDelegate(HandleRef jarg1);
    public static CommandIterator_EndDelegate _CommandIterator_End;
    public static bool CommandIterator_End(HandleRef jarg1)
    {
        bool ret = _CommandIterator_End(jarg1);

        return ret;
    }

    public delegate void delete_CommandIteratorDelegate(HandleRef jarg1);
    public static delete_CommandIteratorDelegate _delete_CommandIterator;
    public static void delete_CommandIterator(HandleRef jarg1)
    {
        _delete_CommandIterator(jarg1);
    }

    public delegate void delete_GeometryCollectionDelegate(HandleRef jarg1);
    public static delete_GeometryCollectionDelegate _delete_GeometryCollection;
    public static void delete_GeometryCollection(HandleRef jarg1)
    {
        _delete_GeometryCollection(jarg1);
    }

    public delegate void delete_ColumnDefinitionCollectionDelegate(HandleRef jarg1);
    public static delete_ColumnDefinitionCollectionDelegate _delete_ColumnDefinitionCollection;
    public static void delete_ColumnDefinitionCollection(HandleRef jarg1)
    {
        _delete_ColumnDefinitionCollection(jarg1);
    }

    public delegate void delete_RowDefinitionCollectionDelegate(HandleRef jarg1);
    public static delete_RowDefinitionCollectionDelegate _delete_RowDefinitionCollection;
    public static void delete_RowDefinitionCollection(HandleRef jarg1)
    {
        _delete_RowDefinitionCollection(jarg1);
    }

    public delegate IntPtr new_Transform2f__SWIG_0Delegate();
    public static new_Transform2f__SWIG_0Delegate _new_Transform2f__SWIG_0;
    public static IntPtr new_Transform2f__SWIG_0()
    {
        IntPtr ret = _new_Transform2f__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_Transform2f__SWIG_1Delegate(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6);
    public static new_Transform2f__SWIG_1Delegate _new_Transform2f__SWIG_1;
    public static IntPtr new_Transform2f__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6)
    {
        IntPtr ret = _new_Transform2f__SWIG_1(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6);

        return ret;
    }

    public delegate IntPtr new_Transform2f__SWIG_2Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static new_Transform2f__SWIG_2Delegate _new_Transform2f__SWIG_2;
    public static IntPtr new_Transform2f__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        IntPtr ret = _new_Transform2f__SWIG_2(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr new_Transform2f__SWIG_3Delegate(HandleRef jarg1);
    public static new_Transform2f__SWIG_3Delegate _new_Transform2f__SWIG_3;
    public static IntPtr new_Transform2f__SWIG_3(HandleRef jarg1)
    {
        IntPtr ret = _new_Transform2f__SWIG_3(jarg1);

        return ret;
    }

    public delegate IntPtr new_Transform2f__SWIG_4Delegate(HandleRef jarg1);
    public static new_Transform2f__SWIG_4Delegate _new_Transform2f__SWIG_4;
    public static IntPtr new_Transform2f__SWIG_4(HandleRef jarg1)
    {
        IntPtr ret = _new_Transform2f__SWIG_4(jarg1);

        return ret;
    }

    public delegate IntPtr Transform2f_GetDataDelegate(HandleRef jarg1);
    public static Transform2f_GetDataDelegate _Transform2f_GetData;
    public static IntPtr Transform2f_GetData(HandleRef jarg1)
    {
        IntPtr ret = _Transform2f_GetData(jarg1);

        return ret;
    }

    public delegate void Transform2f_SetUpper2x2Delegate(HandleRef jarg1, HandleRef jarg2);
    public static Transform2f_SetUpper2x2Delegate _Transform2f_SetUpper2x2;
    public static void Transform2f_SetUpper2x2(HandleRef jarg1, HandleRef jarg2)
    {
        _Transform2f_SetUpper2x2(jarg1, jarg2);
    }

    public delegate void Transform2f_SetTranslationDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Transform2f_SetTranslationDelegate _Transform2f_SetTranslation;
    public static void Transform2f_SetTranslation(HandleRef jarg1, HandleRef jarg2)
    {
        _Transform2f_SetTranslation(jarg1, jarg2);
    }

    public delegate IntPtr Transform2f_GetUpper2x2Delegate(HandleRef jarg1);
    public static Transform2f_GetUpper2x2Delegate _Transform2f_GetUpper2x2;
    public static IntPtr Transform2f_GetUpper2x2(HandleRef jarg1)
    {
        IntPtr ret = _Transform2f_GetUpper2x2(jarg1);

        return ret;
    }

    public delegate IntPtr Transform2f_GetTranslationDelegate(HandleRef jarg1);
    public static Transform2f_GetTranslationDelegate _Transform2f_GetTranslation;
    public static IntPtr Transform2f_GetTranslation(HandleRef jarg1)
    {
        IntPtr ret = _Transform2f_GetTranslation(jarg1);

        return ret;
    }

    public delegate IntPtr Transform2f_IdentityDelegate();
    public static Transform2f_IdentityDelegate _Transform2f_Identity;
    public static IntPtr Transform2f_Identity()
    {
        IntPtr ret = _Transform2f_Identity();

        return ret;
    }

    public delegate IntPtr Transform2f_ScaleDelegate(float jarg1, float jarg2);
    public static Transform2f_ScaleDelegate _Transform2f_Scale;
    public static IntPtr Transform2f_Scale(float jarg1, float jarg2)
    {
        IntPtr ret = _Transform2f_Scale(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr Transform2f_TransDelegate(float jarg1, float jarg2);
    public static Transform2f_TransDelegate _Transform2f_Trans;
    public static IntPtr Transform2f_Trans(float jarg1, float jarg2)
    {
        IntPtr ret = _Transform2f_Trans(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr Transform2f_RotDelegate(float jarg1);
    public static Transform2f_RotDelegate _Transform2f_Rot;
    public static IntPtr Transform2f_Rot(float jarg1)
    {
        IntPtr ret = _Transform2f_Rot(jarg1);

        return ret;
    }

    public delegate IntPtr Transform2f_ShearXYDelegate(float jarg1);
    public static Transform2f_ShearXYDelegate _Transform2f_ShearXY;
    public static IntPtr Transform2f_ShearXY(float jarg1)
    {
        IntPtr ret = _Transform2f_ShearXY(jarg1);

        return ret;
    }

    public delegate IntPtr Transform2f_ShearYXDelegate(float jarg1);
    public static Transform2f_ShearYXDelegate _Transform2f_ShearYX;
    public static IntPtr Transform2f_ShearYX(float jarg1)
    {
        IntPtr ret = _Transform2f_ShearYX(jarg1);

        return ret;
    }

    public delegate IntPtr Transform2f_SkewDelegate(float jarg1, float jarg2);
    public static Transform2f_SkewDelegate _Transform2f_Skew;
    public static IntPtr Transform2f_Skew(float jarg1, float jarg2)
    {
        IntPtr ret = _Transform2f_Skew(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_Transform2fDelegate(HandleRef jarg1);
    public static delete_Transform2fDelegate _delete_Transform2f;
    public static void delete_Transform2f(HandleRef jarg1)
    {
        _delete_Transform2f(jarg1);
    }

    public delegate void delete_ConditionCollectionDelegate(HandleRef jarg1);
    public static delete_ConditionCollectionDelegate _delete_ConditionCollection;
    public static void delete_ConditionCollection(HandleRef jarg1)
    {
        _delete_ConditionCollection(jarg1);
    }

    public delegate IntPtr new_Matrix4f__SWIG_0Delegate();
    public static new_Matrix4f__SWIG_0Delegate _new_Matrix4f__SWIG_0;
    public static IntPtr new_Matrix4f__SWIG_0()
    {
        IntPtr ret = _new_Matrix4f__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_Matrix4f__SWIG_1Delegate(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10, float jarg11, float jarg12, float jarg13, float jarg14, float jarg15, float jarg16);
    public static new_Matrix4f__SWIG_1Delegate _new_Matrix4f__SWIG_1;
    public static IntPtr new_Matrix4f__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10, float jarg11, float jarg12, float jarg13, float jarg14, float jarg15, float jarg16)
    {
        IntPtr ret = _new_Matrix4f__SWIG_1(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6, jarg7, jarg8, jarg9, jarg10, jarg11, jarg12, jarg13, jarg14, jarg15, jarg16);

        return ret;
    }

    public delegate IntPtr new_Matrix4f__SWIG_2Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static new_Matrix4f__SWIG_2Delegate _new_Matrix4f__SWIG_2;
    public static IntPtr new_Matrix4f__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        IntPtr ret = _new_Matrix4f__SWIG_2(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr new_Matrix4f__SWIG_3Delegate(HandleRef jarg1);
    public static new_Matrix4f__SWIG_3Delegate _new_Matrix4f__SWIG_3;
    public static IntPtr new_Matrix4f__SWIG_3(HandleRef jarg1)
    {
        IntPtr ret = _new_Matrix4f__SWIG_3(jarg1);

        return ret;
    }

    public delegate IntPtr new_Matrix4f__SWIG_4Delegate(HandleRef jarg1);
    public static new_Matrix4f__SWIG_4Delegate _new_Matrix4f__SWIG_4;
    public static IntPtr new_Matrix4f__SWIG_4(HandleRef jarg1)
    {
        IntPtr ret = _new_Matrix4f__SWIG_4(jarg1);

        return ret;
    }

    public delegate IntPtr new_Matrix4f__SWIG_5Delegate(HandleRef jarg1);
    public static new_Matrix4f__SWIG_5Delegate _new_Matrix4f__SWIG_5;
    public static IntPtr new_Matrix4f__SWIG_5(HandleRef jarg1)
    {
        IntPtr ret = _new_Matrix4f__SWIG_5(jarg1);

        return ret;
    }

    public delegate IntPtr Matrix4f_GetDataDelegate(HandleRef jarg1);
    public static Matrix4f_GetDataDelegate _Matrix4f_GetData;
    public static IntPtr Matrix4f_GetData(HandleRef jarg1)
    {
        IntPtr ret = _Matrix4f_GetData(jarg1);

        return ret;
    }

    public delegate IntPtr Matrix4f_IdentityDelegate();
    public static Matrix4f_IdentityDelegate _Matrix4f_Identity;
    public static IntPtr Matrix4f_Identity()
    {
        IntPtr ret = _Matrix4f_Identity();

        return ret;
    }

    public delegate IntPtr Matrix4f_ScaleDelegate(float jarg1, float jarg2, float jarg3);
    public static Matrix4f_ScaleDelegate _Matrix4f_Scale;
    public static IntPtr Matrix4f_Scale(float jarg1, float jarg2, float jarg3)
    {
        IntPtr ret = _Matrix4f_Scale(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr Matrix4f_RotXDelegate(float jarg1);
    public static Matrix4f_RotXDelegate _Matrix4f_RotX;
    public static IntPtr Matrix4f_RotX(float jarg1)
    {
        IntPtr ret = _Matrix4f_RotX(jarg1);

        return ret;
    }

    public delegate IntPtr Matrix4f_RotYDelegate(float jarg1);
    public static Matrix4f_RotYDelegate _Matrix4f_RotY;
    public static IntPtr Matrix4f_RotY(float jarg1)
    {
        IntPtr ret = _Matrix4f_RotY(jarg1);

        return ret;
    }

    public delegate IntPtr Matrix4f_RotZDelegate(float jarg1);
    public static Matrix4f_RotZDelegate _Matrix4f_RotZ;
    public static IntPtr Matrix4f_RotZ(float jarg1)
    {
        IntPtr ret = _Matrix4f_RotZ(jarg1);

        return ret;
    }

    public delegate IntPtr Matrix4f_Ortho__SWIG_0Delegate(float jarg1, float jarg2, float jarg3, float jarg4);
    public static Matrix4f_Ortho__SWIG_0Delegate _Matrix4f_Ortho__SWIG_0;
    public static IntPtr Matrix4f_Ortho__SWIG_0(float jarg1, float jarg2, float jarg3, float jarg4)
    {
        IntPtr ret = _Matrix4f_Ortho__SWIG_0(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr Matrix4f_Ortho__SWIG_1Delegate(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6);
    public static Matrix4f_Ortho__SWIG_1Delegate _Matrix4f_Ortho__SWIG_1;
    public static IntPtr Matrix4f_Ortho__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6)
    {
        IntPtr ret = _Matrix4f_Ortho__SWIG_1(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6);

        return ret;
    }

    public delegate IntPtr Matrix4f_Perspective__SWIG_0Delegate(float jarg1, float jarg2, float jarg3, float jarg4);
    public static Matrix4f_Perspective__SWIG_0Delegate _Matrix4f_Perspective__SWIG_0;
    public static IntPtr Matrix4f_Perspective__SWIG_0(float jarg1, float jarg2, float jarg3, float jarg4)
    {
        IntPtr ret = _Matrix4f_Perspective__SWIG_0(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr Matrix4f_PerspectiveFovDelegate(float jarg1, float jarg2, float jarg3, float jarg4);
    public static Matrix4f_PerspectiveFovDelegate _Matrix4f_PerspectiveFov;
    public static IntPtr Matrix4f_PerspectiveFov(float jarg1, float jarg2, float jarg3, float jarg4)
    {
        IntPtr ret = _Matrix4f_PerspectiveFov(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr Matrix4f_Perspective__SWIG_1Delegate(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6);
    public static Matrix4f_Perspective__SWIG_1Delegate _Matrix4f_Perspective__SWIG_1;
    public static IntPtr Matrix4f_Perspective__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6)
    {
        IntPtr ret = _Matrix4f_Perspective__SWIG_1(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6);

        return ret;
    }

    public delegate IntPtr Matrix4f_ViewportDelegate(float jarg1, float jarg2);
    public static Matrix4f_ViewportDelegate _Matrix4f_Viewport;
    public static IntPtr Matrix4f_Viewport(float jarg1, float jarg2)
    {
        IntPtr ret = _Matrix4f_Viewport(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_Matrix4fDelegate(HandleRef jarg1);
    public static delete_Matrix4fDelegate _delete_Matrix4f;
    public static void delete_Matrix4f(HandleRef jarg1)
    {
        _delete_Matrix4f(jarg1);
    }

    public delegate void delete_ResourceDictionaryCollectionDelegate(HandleRef jarg1);
    public static delete_ResourceDictionaryCollectionDelegate _delete_ResourceDictionaryCollection;
    public static void delete_ResourceDictionaryCollection(HandleRef jarg1)
    {
        _delete_ResourceDictionaryCollection(jarg1);
    }

    public delegate void delete_InputGestureCollectionDelegate(HandleRef jarg1);
    public static delete_InputGestureCollectionDelegate _delete_InputGestureCollection;
    public static void delete_InputGestureCollection(HandleRef jarg1)
    {
        _delete_InputGestureCollection(jarg1);
    }

    public delegate void Vector2f_x_setDelegate(HandleRef jarg1, float jarg2);
    public static Vector2f_x_setDelegate _Vector2f_x_set;
    public static void Vector2f_x_set(HandleRef jarg1, float jarg2)
    {
        _Vector2f_x_set(jarg1, jarg2);
    }

    public delegate float Vector2f_x_getDelegate(HandleRef jarg1);
    public static Vector2f_x_getDelegate _Vector2f_x_get;
    public static float Vector2f_x_get(HandleRef jarg1)
    {
        float ret = _Vector2f_x_get(jarg1);

        return ret;
    }

    public delegate void Vector2f_y_setDelegate(HandleRef jarg1, float jarg2);
    public static Vector2f_y_setDelegate _Vector2f_y_set;
    public static void Vector2f_y_set(HandleRef jarg1, float jarg2)
    {
        _Vector2f_y_set(jarg1, jarg2);
    }

    public delegate float Vector2f_y_getDelegate(HandleRef jarg1);
    public static Vector2f_y_getDelegate _Vector2f_y_get;
    public static float Vector2f_y_get(HandleRef jarg1)
    {
        float ret = _Vector2f_y_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_Vector2f__SWIG_0Delegate();
    public static new_Vector2f__SWIG_0Delegate _new_Vector2f__SWIG_0;
    public static IntPtr new_Vector2f__SWIG_0()
    {
        IntPtr ret = _new_Vector2f__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_Vector2f__SWIG_1Delegate(HandleRef jarg1);
    public static new_Vector2f__SWIG_1Delegate _new_Vector2f__SWIG_1;
    public static IntPtr new_Vector2f__SWIG_1(HandleRef jarg1)
    {
        IntPtr ret = _new_Vector2f__SWIG_1(jarg1);

        return ret;
    }

    public delegate IntPtr new_Vector2f__SWIG_2Delegate(float jarg1, float jarg2);
    public static new_Vector2f__SWIG_2Delegate _new_Vector2f__SWIG_2;
    public static IntPtr new_Vector2f__SWIG_2(float jarg1, float jarg2)
    {
        IntPtr ret = _new_Vector2f__SWIG_2(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_Vector2f__SWIG_3Delegate(HandleRef jarg1);
    public static new_Vector2f__SWIG_3Delegate _new_Vector2f__SWIG_3;
    public static IntPtr new_Vector2f__SWIG_3(HandleRef jarg1)
    {
        IntPtr ret = _new_Vector2f__SWIG_3(jarg1);

        return ret;
    }

    public delegate IntPtr Vector2f_GetDataDelegate(HandleRef jarg1);
    public static Vector2f_GetDataDelegate _Vector2f_GetData;
    public static IntPtr Vector2f_GetData(HandleRef jarg1)
    {
        IntPtr ret = _Vector2f_GetData(jarg1);

        return ret;
    }

    public delegate IntPtr Vector2f_ZeroDelegate();
    public static Vector2f_ZeroDelegate _Vector2f_Zero;
    public static IntPtr Vector2f_Zero()
    {
        IntPtr ret = _Vector2f_Zero();

        return ret;
    }

    public delegate IntPtr Vector2f_XAxisDelegate();
    public static Vector2f_XAxisDelegate _Vector2f_XAxis;
    public static IntPtr Vector2f_XAxis()
    {
        IntPtr ret = _Vector2f_XAxis();

        return ret;
    }

    public delegate IntPtr Vector2f_YAxisDelegate();
    public static Vector2f_YAxisDelegate _Vector2f_YAxis;
    public static IntPtr Vector2f_YAxis()
    {
        IntPtr ret = _Vector2f_YAxis();

        return ret;
    }

    public delegate void delete_Vector2fDelegate(HandleRef jarg1);
    public static delete_Vector2fDelegate _delete_Vector2f;
    public static void delete_Vector2f(HandleRef jarg1)
    {
        _delete_Vector2f(jarg1);
    }

    public delegate void delete_TransformCollectionDelegate(HandleRef jarg1);
    public static delete_TransformCollectionDelegate _delete_TransformCollection;
    public static void delete_TransformCollection(HandleRef jarg1)
    {
        _delete_TransformCollection(jarg1);
    }

    public delegate IntPtr EventIterator_GetDelegate(HandleRef jarg1);
    public static EventIterator_GetDelegate _EventIterator_Get;
    public static IntPtr EventIterator_Get(HandleRef jarg1)
    {
        IntPtr ret = _EventIterator_Get(jarg1);

        return ret;
    }

    public delegate void EventIterator_AdvanceDelegate(HandleRef jarg1);
    public static EventIterator_AdvanceDelegate _EventIterator_Advance;
    public static void EventIterator_Advance(HandleRef jarg1)
    {
        _EventIterator_Advance(jarg1);
    }

    public delegate bool EventIterator_EndDelegate(HandleRef jarg1);
    public static EventIterator_EndDelegate _EventIterator_End;
    public static bool EventIterator_End(HandleRef jarg1)
    {
        bool ret = _EventIterator_End(jarg1);

        return ret;
    }

    public delegate void delete_EventIteratorDelegate(HandleRef jarg1);
    public static delete_EventIteratorDelegate _delete_EventIterator;
    public static void delete_EventIterator(HandleRef jarg1)
    {
        _delete_EventIterator(jarg1);
    }

    public delegate void Vector2i_x_setDelegate(HandleRef jarg1, int jarg2);
    public static Vector2i_x_setDelegate _Vector2i_x_set;
    public static void Vector2i_x_set(HandleRef jarg1, int jarg2)
    {
        _Vector2i_x_set(jarg1, jarg2);
    }

    public delegate int Vector2i_x_getDelegate(HandleRef jarg1);
    public static Vector2i_x_getDelegate _Vector2i_x_get;
    public static int Vector2i_x_get(HandleRef jarg1)
    {
        int ret = _Vector2i_x_get(jarg1);

        return ret;
    }

    public delegate void Vector2i_y_setDelegate(HandleRef jarg1, int jarg2);
    public static Vector2i_y_setDelegate _Vector2i_y_set;
    public static void Vector2i_y_set(HandleRef jarg1, int jarg2)
    {
        _Vector2i_y_set(jarg1, jarg2);
    }

    public delegate int Vector2i_y_getDelegate(HandleRef jarg1);
    public static Vector2i_y_getDelegate _Vector2i_y_get;
    public static int Vector2i_y_get(HandleRef jarg1)
    {
        int ret = _Vector2i_y_get(jarg1);

        return ret;
    }

    public delegate IntPtr new_Vector2i__SWIG_0Delegate();
    public static new_Vector2i__SWIG_0Delegate _new_Vector2i__SWIG_0;
    public static IntPtr new_Vector2i__SWIG_0()
    {
        IntPtr ret = _new_Vector2i__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_Vector2i__SWIG_1Delegate(HandleRef jarg1);
    public static new_Vector2i__SWIG_1Delegate _new_Vector2i__SWIG_1;
    public static IntPtr new_Vector2i__SWIG_1(HandleRef jarg1)
    {
        IntPtr ret = _new_Vector2i__SWIG_1(jarg1);

        return ret;
    }

    public delegate IntPtr new_Vector2i__SWIG_2Delegate(int jarg1, int jarg2);
    public static new_Vector2i__SWIG_2Delegate _new_Vector2i__SWIG_2;
    public static IntPtr new_Vector2i__SWIG_2(int jarg1, int jarg2)
    {
        IntPtr ret = _new_Vector2i__SWIG_2(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_Vector2i__SWIG_3Delegate(HandleRef jarg1);
    public static new_Vector2i__SWIG_3Delegate _new_Vector2i__SWIG_3;
    public static IntPtr new_Vector2i__SWIG_3(HandleRef jarg1)
    {
        IntPtr ret = _new_Vector2i__SWIG_3(jarg1);

        return ret;
    }

    public delegate IntPtr Vector2i_GetDataDelegate(HandleRef jarg1);
    public static Vector2i_GetDataDelegate _Vector2i_GetData;
    public static IntPtr Vector2i_GetData(HandleRef jarg1)
    {
        IntPtr ret = _Vector2i_GetData(jarg1);

        return ret;
    }

    public delegate IntPtr Vector2i_ZeroDelegate();
    public static Vector2i_ZeroDelegate _Vector2i_Zero;
    public static IntPtr Vector2i_Zero()
    {
        IntPtr ret = _Vector2i_Zero();

        return ret;
    }

    public delegate IntPtr Vector2i_XAxisDelegate();
    public static Vector2i_XAxisDelegate _Vector2i_XAxis;
    public static IntPtr Vector2i_XAxis()
    {
        IntPtr ret = _Vector2i_XAxis();

        return ret;
    }

    public delegate IntPtr Vector2i_YAxisDelegate();
    public static Vector2i_YAxisDelegate _Vector2i_YAxis;
    public static IntPtr Vector2i_YAxis()
    {
        IntPtr ret = _Vector2i_YAxis();

        return ret;
    }

    public delegate void delete_Vector2iDelegate(HandleRef jarg1);
    public static delete_Vector2iDelegate _delete_Vector2i;
    public static void delete_Vector2i(HandleRef jarg1)
    {
        _delete_Vector2i(jarg1);
    }

    public delegate IntPtr new_Matrix3f__SWIG_0Delegate();
    public static new_Matrix3f__SWIG_0Delegate _new_Matrix3f__SWIG_0;
    public static IntPtr new_Matrix3f__SWIG_0()
    {
        IntPtr ret = _new_Matrix3f__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_Matrix3f__SWIG_1Delegate(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9);
    public static new_Matrix3f__SWIG_1Delegate _new_Matrix3f__SWIG_1;
    public static IntPtr new_Matrix3f__SWIG_1(float jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9)
    {
        IntPtr ret = _new_Matrix3f__SWIG_1(jarg1, jarg2, jarg3, jarg4, jarg5, jarg6, jarg7, jarg8, jarg9);

        return ret;
    }

    public delegate IntPtr new_Matrix3f__SWIG_2Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static new_Matrix3f__SWIG_2Delegate _new_Matrix3f__SWIG_2;
    public static IntPtr new_Matrix3f__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        IntPtr ret = _new_Matrix3f__SWIG_2(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr new_Matrix3f__SWIG_3Delegate(HandleRef jarg1);
    public static new_Matrix3f__SWIG_3Delegate _new_Matrix3f__SWIG_3;
    public static IntPtr new_Matrix3f__SWIG_3(HandleRef jarg1)
    {
        IntPtr ret = _new_Matrix3f__SWIG_3(jarg1);

        return ret;
    }

    public delegate IntPtr new_Matrix3f__SWIG_4Delegate(HandleRef jarg1);
    public static new_Matrix3f__SWIG_4Delegate _new_Matrix3f__SWIG_4;
    public static IntPtr new_Matrix3f__SWIG_4(HandleRef jarg1)
    {
        IntPtr ret = _new_Matrix3f__SWIG_4(jarg1);

        return ret;
    }

    public delegate IntPtr new_Matrix3f__SWIG_5Delegate(HandleRef jarg1);
    public static new_Matrix3f__SWIG_5Delegate _new_Matrix3f__SWIG_5;
    public static IntPtr new_Matrix3f__SWIG_5(HandleRef jarg1)
    {
        IntPtr ret = _new_Matrix3f__SWIG_5(jarg1);

        return ret;
    }

    public delegate IntPtr Matrix3f_GetDataDelegate(HandleRef jarg1);
    public static Matrix3f_GetDataDelegate _Matrix3f_GetData;
    public static IntPtr Matrix3f_GetData(HandleRef jarg1)
    {
        IntPtr ret = _Matrix3f_GetData(jarg1);

        return ret;
    }

    public delegate IntPtr Matrix3f_IdentityDelegate();
    public static Matrix3f_IdentityDelegate _Matrix3f_Identity;
    public static IntPtr Matrix3f_Identity()
    {
        IntPtr ret = _Matrix3f_Identity();

        return ret;
    }

    public delegate IntPtr Matrix3f_ScaleDelegate(float jarg1, float jarg2, float jarg3);
    public static Matrix3f_ScaleDelegate _Matrix3f_Scale;
    public static IntPtr Matrix3f_Scale(float jarg1, float jarg2, float jarg3)
    {
        IntPtr ret = _Matrix3f_Scale(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr Matrix3f_RotXDelegate(float jarg1);
    public static Matrix3f_RotXDelegate _Matrix3f_RotX;
    public static IntPtr Matrix3f_RotX(float jarg1)
    {
        IntPtr ret = _Matrix3f_RotX(jarg1);

        return ret;
    }

    public delegate IntPtr Matrix3f_RotYDelegate(float jarg1);
    public static Matrix3f_RotYDelegate _Matrix3f_RotY;
    public static IntPtr Matrix3f_RotY(float jarg1)
    {
        IntPtr ret = _Matrix3f_RotY(jarg1);

        return ret;
    }

    public delegate IntPtr Matrix3f_RotZDelegate(float jarg1);
    public static Matrix3f_RotZDelegate _Matrix3f_RotZ;
    public static IntPtr Matrix3f_RotZ(float jarg1)
    {
        IntPtr ret = _Matrix3f_RotZ(jarg1);

        return ret;
    }

    public delegate IntPtr Matrix3f_EulerZXYDelegate(float jarg1, float jarg2, float jarg3);
    public static Matrix3f_EulerZXYDelegate _Matrix3f_EulerZXY;
    public static IntPtr Matrix3f_EulerZXY(float jarg1, float jarg2, float jarg3)
    {
        IntPtr ret = _Matrix3f_EulerZXY(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void delete_Matrix3fDelegate(HandleRef jarg1);
    public static delete_Matrix3fDelegate _delete_Matrix3f;
    public static void delete_Matrix3f(HandleRef jarg1)
    {
        _delete_Matrix3f(jarg1);
    }

    public delegate IntPtr new_NullableBool__SWIG_0Delegate();
    public static new_NullableBool__SWIG_0Delegate _new_NullableBool__SWIG_0;
    public static IntPtr new_NullableBool__SWIG_0()
    {
        IntPtr ret = _new_NullableBool__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_NullableBool__SWIG_1Delegate(HandleRef jarg1);
    public static new_NullableBool__SWIG_1Delegate _new_NullableBool__SWIG_1;
    public static IntPtr new_NullableBool__SWIG_1(HandleRef jarg1)
    {
        IntPtr ret = _new_NullableBool__SWIG_1(jarg1);

        return ret;
    }

    public delegate IntPtr NullableBool_GetValueDelegate(HandleRef jarg1);
    public static NullableBool_GetValueDelegate _NullableBool_GetValue;
    public static IntPtr NullableBool_GetValue(HandleRef jarg1)
    {
        IntPtr ret = _NullableBool_GetValue(jarg1);

        return ret;
    }

    public delegate void delete_NullableBoolDelegate(HandleRef jarg1);
    public static delete_NullableBoolDelegate _delete_NullableBool;
    public static void delete_NullableBool(HandleRef jarg1)
    {
        _delete_NullableBool(jarg1);
    }

    public delegate IntPtr new_NullableFloat__SWIG_0Delegate();
    public static new_NullableFloat__SWIG_0Delegate _new_NullableFloat__SWIG_0;
    public static IntPtr new_NullableFloat__SWIG_0()
    {
        IntPtr ret = _new_NullableFloat__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_NullableFloat__SWIG_1Delegate(HandleRef jarg1);
    public static new_NullableFloat__SWIG_1Delegate _new_NullableFloat__SWIG_1;
    public static IntPtr new_NullableFloat__SWIG_1(HandleRef jarg1)
    {
        IntPtr ret = _new_NullableFloat__SWIG_1(jarg1);

        return ret;
    }

    public delegate IntPtr NullableFloat_GetValueDelegate(HandleRef jarg1);
    public static NullableFloat_GetValueDelegate _NullableFloat_GetValue;
    public static IntPtr NullableFloat_GetValue(HandleRef jarg1)
    {
        IntPtr ret = _NullableFloat_GetValue(jarg1);

        return ret;
    }

    public delegate void delete_NullableFloatDelegate(HandleRef jarg1);
    public static delete_NullableFloatDelegate _delete_NullableFloat;
    public static void delete_NullableFloat(HandleRef jarg1)
    {
        _delete_NullableFloat(jarg1);
    }

    public delegate IntPtr new_NullableInt16__SWIG_0Delegate();
    public static new_NullableInt16__SWIG_0Delegate _new_NullableInt16__SWIG_0;
    public static IntPtr new_NullableInt16__SWIG_0()
    {
        IntPtr ret = _new_NullableInt16__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_NullableInt16__SWIG_1Delegate(HandleRef jarg1);
    public static new_NullableInt16__SWIG_1Delegate _new_NullableInt16__SWIG_1;
    public static IntPtr new_NullableInt16__SWIG_1(HandleRef jarg1)
    {
        IntPtr ret = _new_NullableInt16__SWIG_1(jarg1);

        return ret;
    }

    public delegate IntPtr NullableInt16_GetValueDelegate(HandleRef jarg1);
    public static NullableInt16_GetValueDelegate _NullableInt16_GetValue;
    public static IntPtr NullableInt16_GetValue(HandleRef jarg1)
    {
        IntPtr ret = _NullableInt16_GetValue(jarg1);

        return ret;
    }

    public delegate void delete_NullableInt16Delegate(HandleRef jarg1);
    public static delete_NullableInt16Delegate _delete_NullableInt16;
    public static void delete_NullableInt16(HandleRef jarg1)
    {
        _delete_NullableInt16(jarg1);
    }

    public delegate IntPtr new_NullableInt32__SWIG_0Delegate();
    public static new_NullableInt32__SWIG_0Delegate _new_NullableInt32__SWIG_0;
    public static IntPtr new_NullableInt32__SWIG_0()
    {
        IntPtr ret = _new_NullableInt32__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_NullableInt32__SWIG_1Delegate(HandleRef jarg1);
    public static new_NullableInt32__SWIG_1Delegate _new_NullableInt32__SWIG_1;
    public static IntPtr new_NullableInt32__SWIG_1(HandleRef jarg1)
    {
        IntPtr ret = _new_NullableInt32__SWIG_1(jarg1);

        return ret;
    }

    public delegate IntPtr NullableInt32_GetValueDelegate(HandleRef jarg1);
    public static NullableInt32_GetValueDelegate _NullableInt32_GetValue;
    public static IntPtr NullableInt32_GetValue(HandleRef jarg1)
    {
        IntPtr ret = _NullableInt32_GetValue(jarg1);

        return ret;
    }

    public delegate void delete_NullableInt32Delegate(HandleRef jarg1);
    public static delete_NullableInt32Delegate _delete_NullableInt32;
    public static void delete_NullableInt32(HandleRef jarg1)
    {
        _delete_NullableInt32(jarg1);
    }

    public delegate IntPtr new_DoubleAnimationDelegate();
    public static new_DoubleAnimationDelegate _new_DoubleAnimation;
    public static IntPtr new_DoubleAnimation()
    {
        IntPtr ret = _new_DoubleAnimation();

        return ret;
    }

    public delegate void delete_DoubleAnimationDelegate(HandleRef jarg1);
    public static delete_DoubleAnimationDelegate _delete_DoubleAnimation;
    public static void delete_DoubleAnimation(HandleRef jarg1)
    {
        _delete_DoubleAnimation(jarg1);
    }

    public delegate IntPtr DoubleAnimation_GetByDelegate(HandleRef jarg1);
    public static DoubleAnimation_GetByDelegate _DoubleAnimation_GetBy;
    public static IntPtr DoubleAnimation_GetBy(HandleRef jarg1)
    {
        IntPtr ret = _DoubleAnimation_GetBy(jarg1);

        return ret;
    }

    public delegate void DoubleAnimation_SetByDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DoubleAnimation_SetByDelegate _DoubleAnimation_SetBy;
    public static void DoubleAnimation_SetBy(HandleRef jarg1, HandleRef jarg2)
    {
        _DoubleAnimation_SetBy(jarg1, jarg2);
    }

    public delegate IntPtr DoubleAnimation_GetFromDelegate(HandleRef jarg1);
    public static DoubleAnimation_GetFromDelegate _DoubleAnimation_GetFrom;
    public static IntPtr DoubleAnimation_GetFrom(HandleRef jarg1)
    {
        IntPtr ret = _DoubleAnimation_GetFrom(jarg1);

        return ret;
    }

    public delegate void DoubleAnimation_SetFromDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DoubleAnimation_SetFromDelegate _DoubleAnimation_SetFrom;
    public static void DoubleAnimation_SetFrom(HandleRef jarg1, HandleRef jarg2)
    {
        _DoubleAnimation_SetFrom(jarg1, jarg2);
    }

    public delegate IntPtr DoubleAnimation_GetToDelegate(HandleRef jarg1);
    public static DoubleAnimation_GetToDelegate _DoubleAnimation_GetTo;
    public static IntPtr DoubleAnimation_GetTo(HandleRef jarg1)
    {
        IntPtr ret = _DoubleAnimation_GetTo(jarg1);

        return ret;
    }

    public delegate void DoubleAnimation_SetToDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DoubleAnimation_SetToDelegate _DoubleAnimation_SetTo;
    public static void DoubleAnimation_SetTo(HandleRef jarg1, HandleRef jarg2)
    {
        _DoubleAnimation_SetTo(jarg1, jarg2);
    }

    public delegate IntPtr new_Int16AnimationDelegate();
    public static new_Int16AnimationDelegate _new_Int16Animation;
    public static IntPtr new_Int16Animation()
    {
        IntPtr ret = _new_Int16Animation();

        return ret;
    }

    public delegate void delete_Int16AnimationDelegate(HandleRef jarg1);
    public static delete_Int16AnimationDelegate _delete_Int16Animation;
    public static void delete_Int16Animation(HandleRef jarg1)
    {
        _delete_Int16Animation(jarg1);
    }

    public delegate IntPtr Int16Animation_GetByDelegate(HandleRef jarg1);
    public static Int16Animation_GetByDelegate _Int16Animation_GetBy;
    public static IntPtr Int16Animation_GetBy(HandleRef jarg1)
    {
        IntPtr ret = _Int16Animation_GetBy(jarg1);

        return ret;
    }

    public delegate void Int16Animation_SetByDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Int16Animation_SetByDelegate _Int16Animation_SetBy;
    public static void Int16Animation_SetBy(HandleRef jarg1, HandleRef jarg2)
    {
        _Int16Animation_SetBy(jarg1, jarg2);
    }

    public delegate IntPtr Int16Animation_GetFromDelegate(HandleRef jarg1);
    public static Int16Animation_GetFromDelegate _Int16Animation_GetFrom;
    public static IntPtr Int16Animation_GetFrom(HandleRef jarg1)
    {
        IntPtr ret = _Int16Animation_GetFrom(jarg1);

        return ret;
    }

    public delegate void Int16Animation_SetFromDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Int16Animation_SetFromDelegate _Int16Animation_SetFrom;
    public static void Int16Animation_SetFrom(HandleRef jarg1, HandleRef jarg2)
    {
        _Int16Animation_SetFrom(jarg1, jarg2);
    }

    public delegate IntPtr Int16Animation_GetToDelegate(HandleRef jarg1);
    public static Int16Animation_GetToDelegate _Int16Animation_GetTo;
    public static IntPtr Int16Animation_GetTo(HandleRef jarg1)
    {
        IntPtr ret = _Int16Animation_GetTo(jarg1);

        return ret;
    }

    public delegate void Int16Animation_SetToDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Int16Animation_SetToDelegate _Int16Animation_SetTo;
    public static void Int16Animation_SetTo(HandleRef jarg1, HandleRef jarg2)
    {
        _Int16Animation_SetTo(jarg1, jarg2);
    }

    public delegate IntPtr new_Int32AnimationDelegate();
    public static new_Int32AnimationDelegate _new_Int32Animation;
    public static IntPtr new_Int32Animation()
    {
        IntPtr ret = _new_Int32Animation();

        return ret;
    }

    public delegate void delete_Int32AnimationDelegate(HandleRef jarg1);
    public static delete_Int32AnimationDelegate _delete_Int32Animation;
    public static void delete_Int32Animation(HandleRef jarg1)
    {
        _delete_Int32Animation(jarg1);
    }

    public delegate IntPtr Int32Animation_GetByDelegate(HandleRef jarg1);
    public static Int32Animation_GetByDelegate _Int32Animation_GetBy;
    public static IntPtr Int32Animation_GetBy(HandleRef jarg1)
    {
        IntPtr ret = _Int32Animation_GetBy(jarg1);

        return ret;
    }

    public delegate void Int32Animation_SetByDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Int32Animation_SetByDelegate _Int32Animation_SetBy;
    public static void Int32Animation_SetBy(HandleRef jarg1, HandleRef jarg2)
    {
        _Int32Animation_SetBy(jarg1, jarg2);
    }

    public delegate IntPtr Int32Animation_GetFromDelegate(HandleRef jarg1);
    public static Int32Animation_GetFromDelegate _Int32Animation_GetFrom;
    public static IntPtr Int32Animation_GetFrom(HandleRef jarg1)
    {
        IntPtr ret = _Int32Animation_GetFrom(jarg1);

        return ret;
    }

    public delegate void Int32Animation_SetFromDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Int32Animation_SetFromDelegate _Int32Animation_SetFrom;
    public static void Int32Animation_SetFrom(HandleRef jarg1, HandleRef jarg2)
    {
        _Int32Animation_SetFrom(jarg1, jarg2);
    }

    public delegate IntPtr Int32Animation_GetToDelegate(HandleRef jarg1);
    public static Int32Animation_GetToDelegate _Int32Animation_GetTo;
    public static IntPtr Int32Animation_GetTo(HandleRef jarg1)
    {
        IntPtr ret = _Int32Animation_GetTo(jarg1);

        return ret;
    }

    public delegate void Int32Animation_SetToDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Int32Animation_SetToDelegate _Int32Animation_SetTo;
    public static void Int32Animation_SetTo(HandleRef jarg1, HandleRef jarg2)
    {
        _Int32Animation_SetTo(jarg1, jarg2);
    }

    public delegate IntPtr new_Int64AnimationDelegate();
    public static new_Int64AnimationDelegate _new_Int64Animation;
    public static IntPtr new_Int64Animation()
    {
        IntPtr ret = _new_Int64Animation();

        return ret;
    }

    public delegate void delete_Int64AnimationDelegate(HandleRef jarg1);
    public static delete_Int64AnimationDelegate _delete_Int64Animation;
    public static void delete_Int64Animation(HandleRef jarg1)
    {
        _delete_Int64Animation(jarg1);
    }

    public delegate IntPtr Int64Animation_GetByDelegate(HandleRef jarg1);
    public static Int64Animation_GetByDelegate _Int64Animation_GetBy;
    public static IntPtr Int64Animation_GetBy(HandleRef jarg1)
    {
        IntPtr ret = _Int64Animation_GetBy(jarg1);

        return ret;
    }

    public delegate void Int64Animation_SetByDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Int64Animation_SetByDelegate _Int64Animation_SetBy;
    public static void Int64Animation_SetBy(HandleRef jarg1, HandleRef jarg2)
    {
        _Int64Animation_SetBy(jarg1, jarg2);
    }

    public delegate IntPtr Int64Animation_GetFromDelegate(HandleRef jarg1);
    public static Int64Animation_GetFromDelegate _Int64Animation_GetFrom;
    public static IntPtr Int64Animation_GetFrom(HandleRef jarg1)
    {
        IntPtr ret = _Int64Animation_GetFrom(jarg1);

        return ret;
    }

    public delegate void Int64Animation_SetFromDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Int64Animation_SetFromDelegate _Int64Animation_SetFrom;
    public static void Int64Animation_SetFrom(HandleRef jarg1, HandleRef jarg2)
    {
        _Int64Animation_SetFrom(jarg1, jarg2);
    }

    public delegate IntPtr Int64Animation_GetToDelegate(HandleRef jarg1);
    public static Int64Animation_GetToDelegate _Int64Animation_GetTo;
    public static IntPtr Int64Animation_GetTo(HandleRef jarg1)
    {
        IntPtr ret = _Int64Animation_GetTo(jarg1);

        return ret;
    }

    public delegate void Int64Animation_SetToDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Int64Animation_SetToDelegate _Int64Animation_SetTo;
    public static void Int64Animation_SetTo(HandleRef jarg1, HandleRef jarg2)
    {
        _Int64Animation_SetTo(jarg1, jarg2);
    }

    public delegate IntPtr new_ColorAnimationDelegate();
    public static new_ColorAnimationDelegate _new_ColorAnimation;
    public static IntPtr new_ColorAnimation()
    {
        IntPtr ret = _new_ColorAnimation();

        return ret;
    }

    public delegate void delete_ColorAnimationDelegate(HandleRef jarg1);
    public static delete_ColorAnimationDelegate _delete_ColorAnimation;
    public static void delete_ColorAnimation(HandleRef jarg1)
    {
        _delete_ColorAnimation(jarg1);
    }

    public delegate IntPtr ColorAnimation_GetByDelegate(HandleRef jarg1);
    public static ColorAnimation_GetByDelegate _ColorAnimation_GetBy;
    public static IntPtr ColorAnimation_GetBy(HandleRef jarg1)
    {
        IntPtr ret = _ColorAnimation_GetBy(jarg1);

        return ret;
    }

    public delegate void ColorAnimation_SetByDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ColorAnimation_SetByDelegate _ColorAnimation_SetBy;
    public static void ColorAnimation_SetBy(HandleRef jarg1, HandleRef jarg2)
    {
        _ColorAnimation_SetBy(jarg1, jarg2);
    }

    public delegate IntPtr ColorAnimation_GetFromDelegate(HandleRef jarg1);
    public static ColorAnimation_GetFromDelegate _ColorAnimation_GetFrom;
    public static IntPtr ColorAnimation_GetFrom(HandleRef jarg1)
    {
        IntPtr ret = _ColorAnimation_GetFrom(jarg1);

        return ret;
    }

    public delegate void ColorAnimation_SetFromDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ColorAnimation_SetFromDelegate _ColorAnimation_SetFrom;
    public static void ColorAnimation_SetFrom(HandleRef jarg1, HandleRef jarg2)
    {
        _ColorAnimation_SetFrom(jarg1, jarg2);
    }

    public delegate IntPtr ColorAnimation_GetToDelegate(HandleRef jarg1);
    public static ColorAnimation_GetToDelegate _ColorAnimation_GetTo;
    public static IntPtr ColorAnimation_GetTo(HandleRef jarg1)
    {
        IntPtr ret = _ColorAnimation_GetTo(jarg1);

        return ret;
    }

    public delegate void ColorAnimation_SetToDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ColorAnimation_SetToDelegate _ColorAnimation_SetTo;
    public static void ColorAnimation_SetTo(HandleRef jarg1, HandleRef jarg2)
    {
        _ColorAnimation_SetTo(jarg1, jarg2);
    }

    public delegate IntPtr new_PointAnimationDelegate();
    public static new_PointAnimationDelegate _new_PointAnimation;
    public static IntPtr new_PointAnimation()
    {
        IntPtr ret = _new_PointAnimation();

        return ret;
    }

    public delegate void delete_PointAnimationDelegate(HandleRef jarg1);
    public static delete_PointAnimationDelegate _delete_PointAnimation;
    public static void delete_PointAnimation(HandleRef jarg1)
    {
        _delete_PointAnimation(jarg1);
    }

    public delegate IntPtr PointAnimation_GetByDelegate(HandleRef jarg1);
    public static PointAnimation_GetByDelegate _PointAnimation_GetBy;
    public static IntPtr PointAnimation_GetBy(HandleRef jarg1)
    {
        IntPtr ret = _PointAnimation_GetBy(jarg1);

        return ret;
    }

    public delegate void PointAnimation_SetByDelegate(HandleRef jarg1, HandleRef jarg2);
    public static PointAnimation_SetByDelegate _PointAnimation_SetBy;
    public static void PointAnimation_SetBy(HandleRef jarg1, HandleRef jarg2)
    {
        _PointAnimation_SetBy(jarg1, jarg2);
    }

    public delegate IntPtr PointAnimation_GetFromDelegate(HandleRef jarg1);
    public static PointAnimation_GetFromDelegate _PointAnimation_GetFrom;
    public static IntPtr PointAnimation_GetFrom(HandleRef jarg1)
    {
        IntPtr ret = _PointAnimation_GetFrom(jarg1);

        return ret;
    }

    public delegate void PointAnimation_SetFromDelegate(HandleRef jarg1, HandleRef jarg2);
    public static PointAnimation_SetFromDelegate _PointAnimation_SetFrom;
    public static void PointAnimation_SetFrom(HandleRef jarg1, HandleRef jarg2)
    {
        _PointAnimation_SetFrom(jarg1, jarg2);
    }

    public delegate IntPtr PointAnimation_GetToDelegate(HandleRef jarg1);
    public static PointAnimation_GetToDelegate _PointAnimation_GetTo;
    public static IntPtr PointAnimation_GetTo(HandleRef jarg1)
    {
        IntPtr ret = _PointAnimation_GetTo(jarg1);

        return ret;
    }

    public delegate void PointAnimation_SetToDelegate(HandleRef jarg1, HandleRef jarg2);
    public static PointAnimation_SetToDelegate _PointAnimation_SetTo;
    public static void PointAnimation_SetTo(HandleRef jarg1, HandleRef jarg2)
    {
        _PointAnimation_SetTo(jarg1, jarg2);
    }

    public delegate IntPtr new_RectAnimationDelegate();
    public static new_RectAnimationDelegate _new_RectAnimation;
    public static IntPtr new_RectAnimation()
    {
        IntPtr ret = _new_RectAnimation();

        return ret;
    }

    public delegate void delete_RectAnimationDelegate(HandleRef jarg1);
    public static delete_RectAnimationDelegate _delete_RectAnimation;
    public static void delete_RectAnimation(HandleRef jarg1)
    {
        _delete_RectAnimation(jarg1);
    }

    public delegate IntPtr RectAnimation_GetByDelegate(HandleRef jarg1);
    public static RectAnimation_GetByDelegate _RectAnimation_GetBy;
    public static IntPtr RectAnimation_GetBy(HandleRef jarg1)
    {
        IntPtr ret = _RectAnimation_GetBy(jarg1);

        return ret;
    }

    public delegate void RectAnimation_SetByDelegate(HandleRef jarg1, HandleRef jarg2);
    public static RectAnimation_SetByDelegate _RectAnimation_SetBy;
    public static void RectAnimation_SetBy(HandleRef jarg1, HandleRef jarg2)
    {
        _RectAnimation_SetBy(jarg1, jarg2);
    }

    public delegate IntPtr RectAnimation_GetFromDelegate(HandleRef jarg1);
    public static RectAnimation_GetFromDelegate _RectAnimation_GetFrom;
    public static IntPtr RectAnimation_GetFrom(HandleRef jarg1)
    {
        IntPtr ret = _RectAnimation_GetFrom(jarg1);

        return ret;
    }

    public delegate void RectAnimation_SetFromDelegate(HandleRef jarg1, HandleRef jarg2);
    public static RectAnimation_SetFromDelegate _RectAnimation_SetFrom;
    public static void RectAnimation_SetFrom(HandleRef jarg1, HandleRef jarg2)
    {
        _RectAnimation_SetFrom(jarg1, jarg2);
    }

    public delegate IntPtr RectAnimation_GetToDelegate(HandleRef jarg1);
    public static RectAnimation_GetToDelegate _RectAnimation_GetTo;
    public static IntPtr RectAnimation_GetTo(HandleRef jarg1)
    {
        IntPtr ret = _RectAnimation_GetTo(jarg1);

        return ret;
    }

    public delegate void RectAnimation_SetToDelegate(HandleRef jarg1, HandleRef jarg2);
    public static RectAnimation_SetToDelegate _RectAnimation_SetTo;
    public static void RectAnimation_SetTo(HandleRef jarg1, HandleRef jarg2)
    {
        _RectAnimation_SetTo(jarg1, jarg2);
    }

    public delegate IntPtr new_SizeAnimationDelegate();
    public static new_SizeAnimationDelegate _new_SizeAnimation;
    public static IntPtr new_SizeAnimation()
    {
        IntPtr ret = _new_SizeAnimation();

        return ret;
    }

    public delegate void delete_SizeAnimationDelegate(HandleRef jarg1);
    public static delete_SizeAnimationDelegate _delete_SizeAnimation;
    public static void delete_SizeAnimation(HandleRef jarg1)
    {
        _delete_SizeAnimation(jarg1);
    }

    public delegate IntPtr SizeAnimation_GetByDelegate(HandleRef jarg1);
    public static SizeAnimation_GetByDelegate _SizeAnimation_GetBy;
    public static IntPtr SizeAnimation_GetBy(HandleRef jarg1)
    {
        IntPtr ret = _SizeAnimation_GetBy(jarg1);

        return ret;
    }

    public delegate void SizeAnimation_SetByDelegate(HandleRef jarg1, HandleRef jarg2);
    public static SizeAnimation_SetByDelegate _SizeAnimation_SetBy;
    public static void SizeAnimation_SetBy(HandleRef jarg1, HandleRef jarg2)
    {
        _SizeAnimation_SetBy(jarg1, jarg2);
    }

    public delegate IntPtr SizeAnimation_GetFromDelegate(HandleRef jarg1);
    public static SizeAnimation_GetFromDelegate _SizeAnimation_GetFrom;
    public static IntPtr SizeAnimation_GetFrom(HandleRef jarg1)
    {
        IntPtr ret = _SizeAnimation_GetFrom(jarg1);

        return ret;
    }

    public delegate void SizeAnimation_SetFromDelegate(HandleRef jarg1, HandleRef jarg2);
    public static SizeAnimation_SetFromDelegate _SizeAnimation_SetFrom;
    public static void SizeAnimation_SetFrom(HandleRef jarg1, HandleRef jarg2)
    {
        _SizeAnimation_SetFrom(jarg1, jarg2);
    }

    public delegate IntPtr SizeAnimation_GetToDelegate(HandleRef jarg1);
    public static SizeAnimation_GetToDelegate _SizeAnimation_GetTo;
    public static IntPtr SizeAnimation_GetTo(HandleRef jarg1)
    {
        IntPtr ret = _SizeAnimation_GetTo(jarg1);

        return ret;
    }

    public delegate void SizeAnimation_SetToDelegate(HandleRef jarg1, HandleRef jarg2);
    public static SizeAnimation_SetToDelegate _SizeAnimation_SetTo;
    public static void SizeAnimation_SetTo(HandleRef jarg1, HandleRef jarg2)
    {
        _SizeAnimation_SetTo(jarg1, jarg2);
    }

    public delegate IntPtr new_ThicknessAnimationDelegate();
    public static new_ThicknessAnimationDelegate _new_ThicknessAnimation;
    public static IntPtr new_ThicknessAnimation()
    {
        IntPtr ret = _new_ThicknessAnimation();

        return ret;
    }

    public delegate void delete_ThicknessAnimationDelegate(HandleRef jarg1);
    public static delete_ThicknessAnimationDelegate _delete_ThicknessAnimation;
    public static void delete_ThicknessAnimation(HandleRef jarg1)
    {
        _delete_ThicknessAnimation(jarg1);
    }

    public delegate IntPtr ThicknessAnimation_GetByDelegate(HandleRef jarg1);
    public static ThicknessAnimation_GetByDelegate _ThicknessAnimation_GetBy;
    public static IntPtr ThicknessAnimation_GetBy(HandleRef jarg1)
    {
        IntPtr ret = _ThicknessAnimation_GetBy(jarg1);

        return ret;
    }

    public delegate void ThicknessAnimation_SetByDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ThicknessAnimation_SetByDelegate _ThicknessAnimation_SetBy;
    public static void ThicknessAnimation_SetBy(HandleRef jarg1, HandleRef jarg2)
    {
        _ThicknessAnimation_SetBy(jarg1, jarg2);
    }

    public delegate IntPtr ThicknessAnimation_GetFromDelegate(HandleRef jarg1);
    public static ThicknessAnimation_GetFromDelegate _ThicknessAnimation_GetFrom;
    public static IntPtr ThicknessAnimation_GetFrom(HandleRef jarg1)
    {
        IntPtr ret = _ThicknessAnimation_GetFrom(jarg1);

        return ret;
    }

    public delegate void ThicknessAnimation_SetFromDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ThicknessAnimation_SetFromDelegate _ThicknessAnimation_SetFrom;
    public static void ThicknessAnimation_SetFrom(HandleRef jarg1, HandleRef jarg2)
    {
        _ThicknessAnimation_SetFrom(jarg1, jarg2);
    }

    public delegate IntPtr ThicknessAnimation_GetToDelegate(HandleRef jarg1);
    public static ThicknessAnimation_GetToDelegate _ThicknessAnimation_GetTo;
    public static IntPtr ThicknessAnimation_GetTo(HandleRef jarg1)
    {
        IntPtr ret = _ThicknessAnimation_GetTo(jarg1);

        return ret;
    }

    public delegate void ThicknessAnimation_SetToDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ThicknessAnimation_SetToDelegate _ThicknessAnimation_SetTo;
    public static void ThicknessAnimation_SetTo(HandleRef jarg1, HandleRef jarg2)
    {
        _ThicknessAnimation_SetTo(jarg1, jarg2);
    }

    public delegate void delete_BooleanKeyFrameDelegate(HandleRef jarg1);
    public static delete_BooleanKeyFrameDelegate _delete_BooleanKeyFrame;
    public static void delete_BooleanKeyFrame(HandleRef jarg1)
    {
        _delete_BooleanKeyFrame(jarg1);
    }

    public delegate IntPtr BooleanKeyFrame_GetKeyTimeDelegate(HandleRef jarg1);
    public static BooleanKeyFrame_GetKeyTimeDelegate _BooleanKeyFrame_GetKeyTime;
    public static IntPtr BooleanKeyFrame_GetKeyTime(HandleRef jarg1)
    {
        IntPtr ret = _BooleanKeyFrame_GetKeyTime(jarg1);

        return ret;
    }

    public delegate void BooleanKeyFrame_SetKeyTimeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static BooleanKeyFrame_SetKeyTimeDelegate _BooleanKeyFrame_SetKeyTime;
    public static void BooleanKeyFrame_SetKeyTime(HandleRef jarg1, HandleRef jarg2)
    {
        _BooleanKeyFrame_SetKeyTime(jarg1, jarg2);
    }

    public delegate IntPtr BooleanKeyFrame_GetValueDelegate(HandleRef jarg1);
    public static BooleanKeyFrame_GetValueDelegate _BooleanKeyFrame_GetValue;
    public static IntPtr BooleanKeyFrame_GetValue(HandleRef jarg1)
    {
        IntPtr ret = _BooleanKeyFrame_GetValue(jarg1);

        return ret;
    }

    public delegate void BooleanKeyFrame_SetValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static BooleanKeyFrame_SetValueDelegate _BooleanKeyFrame_SetValue;
    public static void BooleanKeyFrame_SetValue(HandleRef jarg1, HandleRef jarg2)
    {
        _BooleanKeyFrame_SetValue(jarg1, jarg2);
    }

    public delegate IntPtr BooleanKeyFrame_InterpolateValueDelegate(HandleRef jarg1, HandleRef jarg2, float jarg3);
    public static BooleanKeyFrame_InterpolateValueDelegate _BooleanKeyFrame_InterpolateValue;
    public static IntPtr BooleanKeyFrame_InterpolateValue(HandleRef jarg1, HandleRef jarg2, float jarg3)
    {
        IntPtr ret = _BooleanKeyFrame_InterpolateValue(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr BooleanKeyFrame_BoxValueDelegate(HandleRef jarg1);
    public static BooleanKeyFrame_BoxValueDelegate _BooleanKeyFrame_BoxValue;
    public static IntPtr BooleanKeyFrame_BoxValue(HandleRef jarg1)
    {
        IntPtr ret = _BooleanKeyFrame_BoxValue(jarg1);

        return ret;
    }

    public delegate bool BooleanKeyFrame_UnboxValueDelegate(HandleRef jarg1);
    public static BooleanKeyFrame_UnboxValueDelegate _BooleanKeyFrame_UnboxValue;
    public static bool BooleanKeyFrame_UnboxValue(HandleRef jarg1)
    {
        bool ret = _BooleanKeyFrame_UnboxValue(jarg1);

        return ret;
    }

    public delegate float BooleanKeyFrame_LenDelegate(HandleRef jarg1, HandleRef jarg2);
    public static BooleanKeyFrame_LenDelegate _BooleanKeyFrame_Len;
    public static float BooleanKeyFrame_Len(HandleRef jarg1, HandleRef jarg2)
    {
        float ret = _BooleanKeyFrame_Len(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_DoubleKeyFrameDelegate(HandleRef jarg1);
    public static delete_DoubleKeyFrameDelegate _delete_DoubleKeyFrame;
    public static void delete_DoubleKeyFrame(HandleRef jarg1)
    {
        _delete_DoubleKeyFrame(jarg1);
    }

    public delegate IntPtr DoubleKeyFrame_GetKeyTimeDelegate(HandleRef jarg1);
    public static DoubleKeyFrame_GetKeyTimeDelegate _DoubleKeyFrame_GetKeyTime;
    public static IntPtr DoubleKeyFrame_GetKeyTime(HandleRef jarg1)
    {
        IntPtr ret = _DoubleKeyFrame_GetKeyTime(jarg1);

        return ret;
    }

    public delegate void DoubleKeyFrame_SetKeyTimeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DoubleKeyFrame_SetKeyTimeDelegate _DoubleKeyFrame_SetKeyTime;
    public static void DoubleKeyFrame_SetKeyTime(HandleRef jarg1, HandleRef jarg2)
    {
        _DoubleKeyFrame_SetKeyTime(jarg1, jarg2);
    }

    public delegate IntPtr DoubleKeyFrame_GetValueDelegate(HandleRef jarg1);
    public static DoubleKeyFrame_GetValueDelegate _DoubleKeyFrame_GetValue;
    public static IntPtr DoubleKeyFrame_GetValue(HandleRef jarg1)
    {
        IntPtr ret = _DoubleKeyFrame_GetValue(jarg1);

        return ret;
    }

    public delegate void DoubleKeyFrame_SetValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DoubleKeyFrame_SetValueDelegate _DoubleKeyFrame_SetValue;
    public static void DoubleKeyFrame_SetValue(HandleRef jarg1, HandleRef jarg2)
    {
        _DoubleKeyFrame_SetValue(jarg1, jarg2);
    }

    public delegate IntPtr DoubleKeyFrame_InterpolateValueDelegate(HandleRef jarg1, HandleRef jarg2, float jarg3);
    public static DoubleKeyFrame_InterpolateValueDelegate _DoubleKeyFrame_InterpolateValue;
    public static IntPtr DoubleKeyFrame_InterpolateValue(HandleRef jarg1, HandleRef jarg2, float jarg3)
    {
        IntPtr ret = _DoubleKeyFrame_InterpolateValue(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr DoubleKeyFrame_BoxValueDelegate(HandleRef jarg1);
    public static DoubleKeyFrame_BoxValueDelegate _DoubleKeyFrame_BoxValue;
    public static IntPtr DoubleKeyFrame_BoxValue(HandleRef jarg1)
    {
        IntPtr ret = _DoubleKeyFrame_BoxValue(jarg1);

        return ret;
    }

    public delegate float DoubleKeyFrame_UnboxValueDelegate(HandleRef jarg1);
    public static DoubleKeyFrame_UnboxValueDelegate _DoubleKeyFrame_UnboxValue;
    public static float DoubleKeyFrame_UnboxValue(HandleRef jarg1)
    {
        float ret = _DoubleKeyFrame_UnboxValue(jarg1);

        return ret;
    }

    public delegate float DoubleKeyFrame_LenDelegate(HandleRef jarg1, HandleRef jarg2);
    public static DoubleKeyFrame_LenDelegate _DoubleKeyFrame_Len;
    public static float DoubleKeyFrame_Len(HandleRef jarg1, HandleRef jarg2)
    {
        float ret = _DoubleKeyFrame_Len(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_Int16KeyFrameDelegate(HandleRef jarg1);
    public static delete_Int16KeyFrameDelegate _delete_Int16KeyFrame;
    public static void delete_Int16KeyFrame(HandleRef jarg1)
    {
        _delete_Int16KeyFrame(jarg1);
    }

    public delegate IntPtr Int16KeyFrame_GetKeyTimeDelegate(HandleRef jarg1);
    public static Int16KeyFrame_GetKeyTimeDelegate _Int16KeyFrame_GetKeyTime;
    public static IntPtr Int16KeyFrame_GetKeyTime(HandleRef jarg1)
    {
        IntPtr ret = _Int16KeyFrame_GetKeyTime(jarg1);

        return ret;
    }

    public delegate void Int16KeyFrame_SetKeyTimeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Int16KeyFrame_SetKeyTimeDelegate _Int16KeyFrame_SetKeyTime;
    public static void Int16KeyFrame_SetKeyTime(HandleRef jarg1, HandleRef jarg2)
    {
        _Int16KeyFrame_SetKeyTime(jarg1, jarg2);
    }

    public delegate IntPtr Int16KeyFrame_GetValueDelegate(HandleRef jarg1);
    public static Int16KeyFrame_GetValueDelegate _Int16KeyFrame_GetValue;
    public static IntPtr Int16KeyFrame_GetValue(HandleRef jarg1)
    {
        IntPtr ret = _Int16KeyFrame_GetValue(jarg1);

        return ret;
    }

    public delegate void Int16KeyFrame_SetValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Int16KeyFrame_SetValueDelegate _Int16KeyFrame_SetValue;
    public static void Int16KeyFrame_SetValue(HandleRef jarg1, HandleRef jarg2)
    {
        _Int16KeyFrame_SetValue(jarg1, jarg2);
    }

    public delegate IntPtr Int16KeyFrame_InterpolateValueDelegate(HandleRef jarg1, HandleRef jarg2, float jarg3);
    public static Int16KeyFrame_InterpolateValueDelegate _Int16KeyFrame_InterpolateValue;
    public static IntPtr Int16KeyFrame_InterpolateValue(HandleRef jarg1, HandleRef jarg2, float jarg3)
    {
        IntPtr ret = _Int16KeyFrame_InterpolateValue(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr Int16KeyFrame_BoxValueDelegate(HandleRef jarg1);
    public static Int16KeyFrame_BoxValueDelegate _Int16KeyFrame_BoxValue;
    public static IntPtr Int16KeyFrame_BoxValue(HandleRef jarg1)
    {
        IntPtr ret = _Int16KeyFrame_BoxValue(jarg1);

        return ret;
    }

    public delegate short Int16KeyFrame_UnboxValueDelegate(HandleRef jarg1);
    public static Int16KeyFrame_UnboxValueDelegate _Int16KeyFrame_UnboxValue;
    public static short Int16KeyFrame_UnboxValue(HandleRef jarg1)
    {
        short ret = _Int16KeyFrame_UnboxValue(jarg1);

        return ret;
    }

    public delegate float Int16KeyFrame_LenDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Int16KeyFrame_LenDelegate _Int16KeyFrame_Len;
    public static float Int16KeyFrame_Len(HandleRef jarg1, HandleRef jarg2)
    {
        float ret = _Int16KeyFrame_Len(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_Int32KeyFrameDelegate(HandleRef jarg1);
    public static delete_Int32KeyFrameDelegate _delete_Int32KeyFrame;
    public static void delete_Int32KeyFrame(HandleRef jarg1)
    {
        _delete_Int32KeyFrame(jarg1);
    }

    public delegate IntPtr Int32KeyFrame_GetKeyTimeDelegate(HandleRef jarg1);
    public static Int32KeyFrame_GetKeyTimeDelegate _Int32KeyFrame_GetKeyTime;
    public static IntPtr Int32KeyFrame_GetKeyTime(HandleRef jarg1)
    {
        IntPtr ret = _Int32KeyFrame_GetKeyTime(jarg1);

        return ret;
    }

    public delegate void Int32KeyFrame_SetKeyTimeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Int32KeyFrame_SetKeyTimeDelegate _Int32KeyFrame_SetKeyTime;
    public static void Int32KeyFrame_SetKeyTime(HandleRef jarg1, HandleRef jarg2)
    {
        _Int32KeyFrame_SetKeyTime(jarg1, jarg2);
    }

    public delegate IntPtr Int32KeyFrame_GetValueDelegate(HandleRef jarg1);
    public static Int32KeyFrame_GetValueDelegate _Int32KeyFrame_GetValue;
    public static IntPtr Int32KeyFrame_GetValue(HandleRef jarg1)
    {
        IntPtr ret = _Int32KeyFrame_GetValue(jarg1);

        return ret;
    }

    public delegate void Int32KeyFrame_SetValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Int32KeyFrame_SetValueDelegate _Int32KeyFrame_SetValue;
    public static void Int32KeyFrame_SetValue(HandleRef jarg1, HandleRef jarg2)
    {
        _Int32KeyFrame_SetValue(jarg1, jarg2);
    }

    public delegate IntPtr Int32KeyFrame_InterpolateValueDelegate(HandleRef jarg1, HandleRef jarg2, float jarg3);
    public static Int32KeyFrame_InterpolateValueDelegate _Int32KeyFrame_InterpolateValue;
    public static IntPtr Int32KeyFrame_InterpolateValue(HandleRef jarg1, HandleRef jarg2, float jarg3)
    {
        IntPtr ret = _Int32KeyFrame_InterpolateValue(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr Int32KeyFrame_BoxValueDelegate(HandleRef jarg1);
    public static Int32KeyFrame_BoxValueDelegate _Int32KeyFrame_BoxValue;
    public static IntPtr Int32KeyFrame_BoxValue(HandleRef jarg1)
    {
        IntPtr ret = _Int32KeyFrame_BoxValue(jarg1);

        return ret;
    }

    public delegate int Int32KeyFrame_UnboxValueDelegate(HandleRef jarg1);
    public static Int32KeyFrame_UnboxValueDelegate _Int32KeyFrame_UnboxValue;
    public static int Int32KeyFrame_UnboxValue(HandleRef jarg1)
    {
        int ret = _Int32KeyFrame_UnboxValue(jarg1);

        return ret;
    }

    public delegate float Int32KeyFrame_LenDelegate(HandleRef jarg1, HandleRef jarg2);
    public static Int32KeyFrame_LenDelegate _Int32KeyFrame_Len;
    public static float Int32KeyFrame_Len(HandleRef jarg1, HandleRef jarg2)
    {
        float ret = _Int32KeyFrame_Len(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_ColorKeyFrameDelegate(HandleRef jarg1);
    public static delete_ColorKeyFrameDelegate _delete_ColorKeyFrame;
    public static void delete_ColorKeyFrame(HandleRef jarg1)
    {
        _delete_ColorKeyFrame(jarg1);
    }

    public delegate IntPtr ColorKeyFrame_GetKeyTimeDelegate(HandleRef jarg1);
    public static ColorKeyFrame_GetKeyTimeDelegate _ColorKeyFrame_GetKeyTime;
    public static IntPtr ColorKeyFrame_GetKeyTime(HandleRef jarg1)
    {
        IntPtr ret = _ColorKeyFrame_GetKeyTime(jarg1);

        return ret;
    }

    public delegate void ColorKeyFrame_SetKeyTimeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ColorKeyFrame_SetKeyTimeDelegate _ColorKeyFrame_SetKeyTime;
    public static void ColorKeyFrame_SetKeyTime(HandleRef jarg1, HandleRef jarg2)
    {
        _ColorKeyFrame_SetKeyTime(jarg1, jarg2);
    }

    public delegate IntPtr ColorKeyFrame_GetValueDelegate(HandleRef jarg1);
    public static ColorKeyFrame_GetValueDelegate _ColorKeyFrame_GetValue;
    public static IntPtr ColorKeyFrame_GetValue(HandleRef jarg1)
    {
        IntPtr ret = _ColorKeyFrame_GetValue(jarg1);

        return ret;
    }

    public delegate void ColorKeyFrame_SetValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ColorKeyFrame_SetValueDelegate _ColorKeyFrame_SetValue;
    public static void ColorKeyFrame_SetValue(HandleRef jarg1, HandleRef jarg2)
    {
        _ColorKeyFrame_SetValue(jarg1, jarg2);
    }

    public delegate IntPtr ColorKeyFrame_InterpolateValueDelegate(HandleRef jarg1, HandleRef jarg2, float jarg3);
    public static ColorKeyFrame_InterpolateValueDelegate _ColorKeyFrame_InterpolateValue;
    public static IntPtr ColorKeyFrame_InterpolateValue(HandleRef jarg1, HandleRef jarg2, float jarg3)
    {
        IntPtr ret = _ColorKeyFrame_InterpolateValue(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr ColorKeyFrame_BoxValueDelegate(HandleRef jarg1);
    public static ColorKeyFrame_BoxValueDelegate _ColorKeyFrame_BoxValue;
    public static IntPtr ColorKeyFrame_BoxValue(HandleRef jarg1)
    {
        IntPtr ret = _ColorKeyFrame_BoxValue(jarg1);

        return ret;
    }

    public delegate IntPtr ColorKeyFrame_UnboxValueDelegate(HandleRef jarg1);
    public static ColorKeyFrame_UnboxValueDelegate _ColorKeyFrame_UnboxValue;
    public static IntPtr ColorKeyFrame_UnboxValue(HandleRef jarg1)
    {
        IntPtr ret = _ColorKeyFrame_UnboxValue(jarg1);

        return ret;
    }

    public delegate float ColorKeyFrame_LenDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ColorKeyFrame_LenDelegate _ColorKeyFrame_Len;
    public static float ColorKeyFrame_Len(HandleRef jarg1, HandleRef jarg2)
    {
        float ret = _ColorKeyFrame_Len(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_PointKeyFrameDelegate(HandleRef jarg1);
    public static delete_PointKeyFrameDelegate _delete_PointKeyFrame;
    public static void delete_PointKeyFrame(HandleRef jarg1)
    {
        _delete_PointKeyFrame(jarg1);
    }

    public delegate IntPtr PointKeyFrame_GetKeyTimeDelegate(HandleRef jarg1);
    public static PointKeyFrame_GetKeyTimeDelegate _PointKeyFrame_GetKeyTime;
    public static IntPtr PointKeyFrame_GetKeyTime(HandleRef jarg1)
    {
        IntPtr ret = _PointKeyFrame_GetKeyTime(jarg1);

        return ret;
    }

    public delegate void PointKeyFrame_SetKeyTimeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static PointKeyFrame_SetKeyTimeDelegate _PointKeyFrame_SetKeyTime;
    public static void PointKeyFrame_SetKeyTime(HandleRef jarg1, HandleRef jarg2)
    {
        _PointKeyFrame_SetKeyTime(jarg1, jarg2);
    }

    public delegate IntPtr PointKeyFrame_GetValueDelegate(HandleRef jarg1);
    public static PointKeyFrame_GetValueDelegate _PointKeyFrame_GetValue;
    public static IntPtr PointKeyFrame_GetValue(HandleRef jarg1)
    {
        IntPtr ret = _PointKeyFrame_GetValue(jarg1);

        return ret;
    }

    public delegate void PointKeyFrame_SetValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static PointKeyFrame_SetValueDelegate _PointKeyFrame_SetValue;
    public static void PointKeyFrame_SetValue(HandleRef jarg1, HandleRef jarg2)
    {
        _PointKeyFrame_SetValue(jarg1, jarg2);
    }

    public delegate IntPtr PointKeyFrame_InterpolateValueDelegate(HandleRef jarg1, HandleRef jarg2, float jarg3);
    public static PointKeyFrame_InterpolateValueDelegate _PointKeyFrame_InterpolateValue;
    public static IntPtr PointKeyFrame_InterpolateValue(HandleRef jarg1, HandleRef jarg2, float jarg3)
    {
        IntPtr ret = _PointKeyFrame_InterpolateValue(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr PointKeyFrame_BoxValueDelegate(HandleRef jarg1);
    public static PointKeyFrame_BoxValueDelegate _PointKeyFrame_BoxValue;
    public static IntPtr PointKeyFrame_BoxValue(HandleRef jarg1)
    {
        IntPtr ret = _PointKeyFrame_BoxValue(jarg1);

        return ret;
    }

    public delegate IntPtr PointKeyFrame_UnboxValueDelegate(HandleRef jarg1);
    public static PointKeyFrame_UnboxValueDelegate _PointKeyFrame_UnboxValue;
    public static IntPtr PointKeyFrame_UnboxValue(HandleRef jarg1)
    {
        IntPtr ret = _PointKeyFrame_UnboxValue(jarg1);

        return ret;
    }

    public delegate float PointKeyFrame_LenDelegate(HandleRef jarg1, HandleRef jarg2);
    public static PointKeyFrame_LenDelegate _PointKeyFrame_Len;
    public static float PointKeyFrame_Len(HandleRef jarg1, HandleRef jarg2)
    {
        float ret = _PointKeyFrame_Len(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_RectKeyFrameDelegate(HandleRef jarg1);
    public static delete_RectKeyFrameDelegate _delete_RectKeyFrame;
    public static void delete_RectKeyFrame(HandleRef jarg1)
    {
        _delete_RectKeyFrame(jarg1);
    }

    public delegate IntPtr RectKeyFrame_GetKeyTimeDelegate(HandleRef jarg1);
    public static RectKeyFrame_GetKeyTimeDelegate _RectKeyFrame_GetKeyTime;
    public static IntPtr RectKeyFrame_GetKeyTime(HandleRef jarg1)
    {
        IntPtr ret = _RectKeyFrame_GetKeyTime(jarg1);

        return ret;
    }

    public delegate void RectKeyFrame_SetKeyTimeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static RectKeyFrame_SetKeyTimeDelegate _RectKeyFrame_SetKeyTime;
    public static void RectKeyFrame_SetKeyTime(HandleRef jarg1, HandleRef jarg2)
    {
        _RectKeyFrame_SetKeyTime(jarg1, jarg2);
    }

    public delegate IntPtr RectKeyFrame_GetValueDelegate(HandleRef jarg1);
    public static RectKeyFrame_GetValueDelegate _RectKeyFrame_GetValue;
    public static IntPtr RectKeyFrame_GetValue(HandleRef jarg1)
    {
        IntPtr ret = _RectKeyFrame_GetValue(jarg1);

        return ret;
    }

    public delegate void RectKeyFrame_SetValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static RectKeyFrame_SetValueDelegate _RectKeyFrame_SetValue;
    public static void RectKeyFrame_SetValue(HandleRef jarg1, HandleRef jarg2)
    {
        _RectKeyFrame_SetValue(jarg1, jarg2);
    }

    public delegate IntPtr RectKeyFrame_InterpolateValueDelegate(HandleRef jarg1, HandleRef jarg2, float jarg3);
    public static RectKeyFrame_InterpolateValueDelegate _RectKeyFrame_InterpolateValue;
    public static IntPtr RectKeyFrame_InterpolateValue(HandleRef jarg1, HandleRef jarg2, float jarg3)
    {
        IntPtr ret = _RectKeyFrame_InterpolateValue(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr RectKeyFrame_BoxValueDelegate(HandleRef jarg1);
    public static RectKeyFrame_BoxValueDelegate _RectKeyFrame_BoxValue;
    public static IntPtr RectKeyFrame_BoxValue(HandleRef jarg1)
    {
        IntPtr ret = _RectKeyFrame_BoxValue(jarg1);

        return ret;
    }

    public delegate IntPtr RectKeyFrame_UnboxValueDelegate(HandleRef jarg1);
    public static RectKeyFrame_UnboxValueDelegate _RectKeyFrame_UnboxValue;
    public static IntPtr RectKeyFrame_UnboxValue(HandleRef jarg1)
    {
        IntPtr ret = _RectKeyFrame_UnboxValue(jarg1);

        return ret;
    }

    public delegate float RectKeyFrame_LenDelegate(HandleRef jarg1, HandleRef jarg2);
    public static RectKeyFrame_LenDelegate _RectKeyFrame_Len;
    public static float RectKeyFrame_Len(HandleRef jarg1, HandleRef jarg2)
    {
        float ret = _RectKeyFrame_Len(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_SizeKeyFrameDelegate(HandleRef jarg1);
    public static delete_SizeKeyFrameDelegate _delete_SizeKeyFrame;
    public static void delete_SizeKeyFrame(HandleRef jarg1)
    {
        _delete_SizeKeyFrame(jarg1);
    }

    public delegate IntPtr SizeKeyFrame_GetKeyTimeDelegate(HandleRef jarg1);
    public static SizeKeyFrame_GetKeyTimeDelegate _SizeKeyFrame_GetKeyTime;
    public static IntPtr SizeKeyFrame_GetKeyTime(HandleRef jarg1)
    {
        IntPtr ret = _SizeKeyFrame_GetKeyTime(jarg1);

        return ret;
    }

    public delegate void SizeKeyFrame_SetKeyTimeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static SizeKeyFrame_SetKeyTimeDelegate _SizeKeyFrame_SetKeyTime;
    public static void SizeKeyFrame_SetKeyTime(HandleRef jarg1, HandleRef jarg2)
    {
        _SizeKeyFrame_SetKeyTime(jarg1, jarg2);
    }

    public delegate IntPtr SizeKeyFrame_GetValueDelegate(HandleRef jarg1);
    public static SizeKeyFrame_GetValueDelegate _SizeKeyFrame_GetValue;
    public static IntPtr SizeKeyFrame_GetValue(HandleRef jarg1)
    {
        IntPtr ret = _SizeKeyFrame_GetValue(jarg1);

        return ret;
    }

    public delegate void SizeKeyFrame_SetValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static SizeKeyFrame_SetValueDelegate _SizeKeyFrame_SetValue;
    public static void SizeKeyFrame_SetValue(HandleRef jarg1, HandleRef jarg2)
    {
        _SizeKeyFrame_SetValue(jarg1, jarg2);
    }

    public delegate IntPtr SizeKeyFrame_InterpolateValueDelegate(HandleRef jarg1, HandleRef jarg2, float jarg3);
    public static SizeKeyFrame_InterpolateValueDelegate _SizeKeyFrame_InterpolateValue;
    public static IntPtr SizeKeyFrame_InterpolateValue(HandleRef jarg1, HandleRef jarg2, float jarg3)
    {
        IntPtr ret = _SizeKeyFrame_InterpolateValue(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr SizeKeyFrame_BoxValueDelegate(HandleRef jarg1);
    public static SizeKeyFrame_BoxValueDelegate _SizeKeyFrame_BoxValue;
    public static IntPtr SizeKeyFrame_BoxValue(HandleRef jarg1)
    {
        IntPtr ret = _SizeKeyFrame_BoxValue(jarg1);

        return ret;
    }

    public delegate IntPtr SizeKeyFrame_UnboxValueDelegate(HandleRef jarg1);
    public static SizeKeyFrame_UnboxValueDelegate _SizeKeyFrame_UnboxValue;
    public static IntPtr SizeKeyFrame_UnboxValue(HandleRef jarg1)
    {
        IntPtr ret = _SizeKeyFrame_UnboxValue(jarg1);

        return ret;
    }

    public delegate float SizeKeyFrame_LenDelegate(HandleRef jarg1, HandleRef jarg2);
    public static SizeKeyFrame_LenDelegate _SizeKeyFrame_Len;
    public static float SizeKeyFrame_Len(HandleRef jarg1, HandleRef jarg2)
    {
        float ret = _SizeKeyFrame_Len(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_ThicknessKeyFrameDelegate(HandleRef jarg1);
    public static delete_ThicknessKeyFrameDelegate _delete_ThicknessKeyFrame;
    public static void delete_ThicknessKeyFrame(HandleRef jarg1)
    {
        _delete_ThicknessKeyFrame(jarg1);
    }

    public delegate IntPtr ThicknessKeyFrame_GetKeyTimeDelegate(HandleRef jarg1);
    public static ThicknessKeyFrame_GetKeyTimeDelegate _ThicknessKeyFrame_GetKeyTime;
    public static IntPtr ThicknessKeyFrame_GetKeyTime(HandleRef jarg1)
    {
        IntPtr ret = _ThicknessKeyFrame_GetKeyTime(jarg1);

        return ret;
    }

    public delegate void ThicknessKeyFrame_SetKeyTimeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ThicknessKeyFrame_SetKeyTimeDelegate _ThicknessKeyFrame_SetKeyTime;
    public static void ThicknessKeyFrame_SetKeyTime(HandleRef jarg1, HandleRef jarg2)
    {
        _ThicknessKeyFrame_SetKeyTime(jarg1, jarg2);
    }

    public delegate IntPtr ThicknessKeyFrame_GetValueDelegate(HandleRef jarg1);
    public static ThicknessKeyFrame_GetValueDelegate _ThicknessKeyFrame_GetValue;
    public static IntPtr ThicknessKeyFrame_GetValue(HandleRef jarg1)
    {
        IntPtr ret = _ThicknessKeyFrame_GetValue(jarg1);

        return ret;
    }

    public delegate void ThicknessKeyFrame_SetValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ThicknessKeyFrame_SetValueDelegate _ThicknessKeyFrame_SetValue;
    public static void ThicknessKeyFrame_SetValue(HandleRef jarg1, HandleRef jarg2)
    {
        _ThicknessKeyFrame_SetValue(jarg1, jarg2);
    }

    public delegate IntPtr ThicknessKeyFrame_InterpolateValueDelegate(HandleRef jarg1, HandleRef jarg2, float jarg3);
    public static ThicknessKeyFrame_InterpolateValueDelegate _ThicknessKeyFrame_InterpolateValue;
    public static IntPtr ThicknessKeyFrame_InterpolateValue(HandleRef jarg1, HandleRef jarg2, float jarg3)
    {
        IntPtr ret = _ThicknessKeyFrame_InterpolateValue(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr ThicknessKeyFrame_BoxValueDelegate(HandleRef jarg1);
    public static ThicknessKeyFrame_BoxValueDelegate _ThicknessKeyFrame_BoxValue;
    public static IntPtr ThicknessKeyFrame_BoxValue(HandleRef jarg1)
    {
        IntPtr ret = _ThicknessKeyFrame_BoxValue(jarg1);

        return ret;
    }

    public delegate IntPtr ThicknessKeyFrame_UnboxValueDelegate(HandleRef jarg1);
    public static ThicknessKeyFrame_UnboxValueDelegate _ThicknessKeyFrame_UnboxValue;
    public static IntPtr ThicknessKeyFrame_UnboxValue(HandleRef jarg1)
    {
        IntPtr ret = _ThicknessKeyFrame_UnboxValue(jarg1);

        return ret;
    }

    public delegate float ThicknessKeyFrame_LenDelegate(HandleRef jarg1, HandleRef jarg2);
    public static ThicknessKeyFrame_LenDelegate _ThicknessKeyFrame_Len;
    public static float ThicknessKeyFrame_Len(HandleRef jarg1, HandleRef jarg2)
    {
        float ret = _ThicknessKeyFrame_Len(jarg1, jarg2);

        return ret;
    }

    public delegate void delete_StringKeyFrameDelegate(HandleRef jarg1);
    public static delete_StringKeyFrameDelegate _delete_StringKeyFrame;
    public static void delete_StringKeyFrame(HandleRef jarg1)
    {
        _delete_StringKeyFrame(jarg1);
    }

    public delegate IntPtr StringKeyFrame_GetKeyTimeDelegate(HandleRef jarg1);
    public static StringKeyFrame_GetKeyTimeDelegate _StringKeyFrame_GetKeyTime;
    public static IntPtr StringKeyFrame_GetKeyTime(HandleRef jarg1)
    {
        IntPtr ret = _StringKeyFrame_GetKeyTime(jarg1);

        return ret;
    }

    public delegate void StringKeyFrame_SetKeyTimeDelegate(HandleRef jarg1, HandleRef jarg2);
    public static StringKeyFrame_SetKeyTimeDelegate _StringKeyFrame_SetKeyTime;
    public static void StringKeyFrame_SetKeyTime(HandleRef jarg1, HandleRef jarg2)
    {
        _StringKeyFrame_SetKeyTime(jarg1, jarg2);
    }

    public delegate IntPtr StringKeyFrame_GetValueDelegate(HandleRef jarg1);
    public static StringKeyFrame_GetValueDelegate _StringKeyFrame_GetValue;
    public static IntPtr StringKeyFrame_GetValue(HandleRef jarg1)
    {
        IntPtr ret = _StringKeyFrame_GetValue(jarg1);

        return ret;
    }

    public delegate void StringKeyFrame_SetValueDelegate(HandleRef jarg1, HandleRef jarg2);
    public static StringKeyFrame_SetValueDelegate _StringKeyFrame_SetValue;
    public static void StringKeyFrame_SetValue(HandleRef jarg1, HandleRef jarg2)
    {
        _StringKeyFrame_SetValue(jarg1, jarg2);
    }

    public delegate IntPtr StringKeyFrame_InterpolateValueDelegate(HandleRef jarg1, HandleRef jarg2, float jarg3);
    public static StringKeyFrame_InterpolateValueDelegate _StringKeyFrame_InterpolateValue;
    public static IntPtr StringKeyFrame_InterpolateValue(HandleRef jarg1, HandleRef jarg2, float jarg3)
    {
        IntPtr ret = _StringKeyFrame_InterpolateValue(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate IntPtr StringKeyFrame_BoxValueDelegate(HandleRef jarg1);
    public static StringKeyFrame_BoxValueDelegate _StringKeyFrame_BoxValue;
    public static IntPtr StringKeyFrame_BoxValue(HandleRef jarg1)
    {
        IntPtr ret = _StringKeyFrame_BoxValue(jarg1);

        return ret;
    }

    public delegate IntPtr StringKeyFrame_UnboxValueDelegate(HandleRef jarg1);
    public static StringKeyFrame_UnboxValueDelegate _StringKeyFrame_UnboxValue;
    public static IntPtr StringKeyFrame_UnboxValue(HandleRef jarg1)
    {
        IntPtr ret = _StringKeyFrame_UnboxValue(jarg1);

        return ret;
    }

    public delegate float StringKeyFrame_LenDelegate(HandleRef jarg1, HandleRef jarg2);
    public static StringKeyFrame_LenDelegate _StringKeyFrame_Len;
    public static float StringKeyFrame_Len(HandleRef jarg1, HandleRef jarg2)
    {
        float ret = _StringKeyFrame_Len(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_DiscreteBooleanKeyFrameDelegate();
    public static new_DiscreteBooleanKeyFrameDelegate _new_DiscreteBooleanKeyFrame;
    public static IntPtr new_DiscreteBooleanKeyFrame()
    {
        IntPtr ret = _new_DiscreteBooleanKeyFrame();

        return ret;
    }

    public delegate void delete_DiscreteBooleanKeyFrameDelegate(HandleRef jarg1);
    public static delete_DiscreteBooleanKeyFrameDelegate _delete_DiscreteBooleanKeyFrame;
    public static void delete_DiscreteBooleanKeyFrame(HandleRef jarg1)
    {
        _delete_DiscreteBooleanKeyFrame(jarg1);
    }

    public delegate IntPtr new_DiscreteDoubleKeyFrameDelegate();
    public static new_DiscreteDoubleKeyFrameDelegate _new_DiscreteDoubleKeyFrame;
    public static IntPtr new_DiscreteDoubleKeyFrame()
    {
        IntPtr ret = _new_DiscreteDoubleKeyFrame();

        return ret;
    }

    public delegate void delete_DiscreteDoubleKeyFrameDelegate(HandleRef jarg1);
    public static delete_DiscreteDoubleKeyFrameDelegate _delete_DiscreteDoubleKeyFrame;
    public static void delete_DiscreteDoubleKeyFrame(HandleRef jarg1)
    {
        _delete_DiscreteDoubleKeyFrame(jarg1);
    }

    public delegate IntPtr new_DiscreteInt16KeyFrameDelegate();
    public static new_DiscreteInt16KeyFrameDelegate _new_DiscreteInt16KeyFrame;
    public static IntPtr new_DiscreteInt16KeyFrame()
    {
        IntPtr ret = _new_DiscreteInt16KeyFrame();

        return ret;
    }

    public delegate void delete_DiscreteInt16KeyFrameDelegate(HandleRef jarg1);
    public static delete_DiscreteInt16KeyFrameDelegate _delete_DiscreteInt16KeyFrame;
    public static void delete_DiscreteInt16KeyFrame(HandleRef jarg1)
    {
        _delete_DiscreteInt16KeyFrame(jarg1);
    }

    public delegate IntPtr new_DiscreteInt32KeyFrameDelegate();
    public static new_DiscreteInt32KeyFrameDelegate _new_DiscreteInt32KeyFrame;
    public static IntPtr new_DiscreteInt32KeyFrame()
    {
        IntPtr ret = _new_DiscreteInt32KeyFrame();

        return ret;
    }

    public delegate void delete_DiscreteInt32KeyFrameDelegate(HandleRef jarg1);
    public static delete_DiscreteInt32KeyFrameDelegate _delete_DiscreteInt32KeyFrame;
    public static void delete_DiscreteInt32KeyFrame(HandleRef jarg1)
    {
        _delete_DiscreteInt32KeyFrame(jarg1);
    }

    public delegate IntPtr new_DiscreteColorKeyFrameDelegate();
    public static new_DiscreteColorKeyFrameDelegate _new_DiscreteColorKeyFrame;
    public static IntPtr new_DiscreteColorKeyFrame()
    {
        IntPtr ret = _new_DiscreteColorKeyFrame();

        return ret;
    }

    public delegate void delete_DiscreteColorKeyFrameDelegate(HandleRef jarg1);
    public static delete_DiscreteColorKeyFrameDelegate _delete_DiscreteColorKeyFrame;
    public static void delete_DiscreteColorKeyFrame(HandleRef jarg1)
    {
        _delete_DiscreteColorKeyFrame(jarg1);
    }

    public delegate IntPtr new_DiscretePointKeyFrameDelegate();
    public static new_DiscretePointKeyFrameDelegate _new_DiscretePointKeyFrame;
    public static IntPtr new_DiscretePointKeyFrame()
    {
        IntPtr ret = _new_DiscretePointKeyFrame();

        return ret;
    }

    public delegate void delete_DiscretePointKeyFrameDelegate(HandleRef jarg1);
    public static delete_DiscretePointKeyFrameDelegate _delete_DiscretePointKeyFrame;
    public static void delete_DiscretePointKeyFrame(HandleRef jarg1)
    {
        _delete_DiscretePointKeyFrame(jarg1);
    }

    public delegate IntPtr new_DiscreteRectKeyFrameDelegate();
    public static new_DiscreteRectKeyFrameDelegate _new_DiscreteRectKeyFrame;
    public static IntPtr new_DiscreteRectKeyFrame()
    {
        IntPtr ret = _new_DiscreteRectKeyFrame();

        return ret;
    }

    public delegate void delete_DiscreteRectKeyFrameDelegate(HandleRef jarg1);
    public static delete_DiscreteRectKeyFrameDelegate _delete_DiscreteRectKeyFrame;
    public static void delete_DiscreteRectKeyFrame(HandleRef jarg1)
    {
        _delete_DiscreteRectKeyFrame(jarg1);
    }

    public delegate IntPtr new_DiscreteSizeKeyFrameDelegate();
    public static new_DiscreteSizeKeyFrameDelegate _new_DiscreteSizeKeyFrame;
    public static IntPtr new_DiscreteSizeKeyFrame()
    {
        IntPtr ret = _new_DiscreteSizeKeyFrame();

        return ret;
    }

    public delegate void delete_DiscreteSizeKeyFrameDelegate(HandleRef jarg1);
    public static delete_DiscreteSizeKeyFrameDelegate _delete_DiscreteSizeKeyFrame;
    public static void delete_DiscreteSizeKeyFrame(HandleRef jarg1)
    {
        _delete_DiscreteSizeKeyFrame(jarg1);
    }

    public delegate IntPtr new_DiscreteThicknessKeyFrameDelegate();
    public static new_DiscreteThicknessKeyFrameDelegate _new_DiscreteThicknessKeyFrame;
    public static IntPtr new_DiscreteThicknessKeyFrame()
    {
        IntPtr ret = _new_DiscreteThicknessKeyFrame();

        return ret;
    }

    public delegate void delete_DiscreteThicknessKeyFrameDelegate(HandleRef jarg1);
    public static delete_DiscreteThicknessKeyFrameDelegate _delete_DiscreteThicknessKeyFrame;
    public static void delete_DiscreteThicknessKeyFrame(HandleRef jarg1)
    {
        _delete_DiscreteThicknessKeyFrame(jarg1);
    }

    public delegate IntPtr new_DiscreteStringKeyFrameDelegate();
    public static new_DiscreteStringKeyFrameDelegate _new_DiscreteStringKeyFrame;
    public static IntPtr new_DiscreteStringKeyFrame()
    {
        IntPtr ret = _new_DiscreteStringKeyFrame();

        return ret;
    }

    public delegate void delete_DiscreteStringKeyFrameDelegate(HandleRef jarg1);
    public static delete_DiscreteStringKeyFrameDelegate _delete_DiscreteStringKeyFrame;
    public static void delete_DiscreteStringKeyFrame(HandleRef jarg1)
    {
        _delete_DiscreteStringKeyFrame(jarg1);
    }

    public delegate IntPtr new_EasingDoubleKeyFrameDelegate();
    public static new_EasingDoubleKeyFrameDelegate _new_EasingDoubleKeyFrame;
    public static IntPtr new_EasingDoubleKeyFrame()
    {
        IntPtr ret = _new_EasingDoubleKeyFrame();

        return ret;
    }

    public delegate void delete_EasingDoubleKeyFrameDelegate(HandleRef jarg1);
    public static delete_EasingDoubleKeyFrameDelegate _delete_EasingDoubleKeyFrame;
    public static void delete_EasingDoubleKeyFrame(HandleRef jarg1)
    {
        _delete_EasingDoubleKeyFrame(jarg1);
    }

    public delegate IntPtr EasingDoubleKeyFrame_GetEasingFunctionDelegate(HandleRef jarg1);
    public static EasingDoubleKeyFrame_GetEasingFunctionDelegate _EasingDoubleKeyFrame_GetEasingFunction;
    public static IntPtr EasingDoubleKeyFrame_GetEasingFunction(HandleRef jarg1)
    {
        IntPtr ret = _EasingDoubleKeyFrame_GetEasingFunction(jarg1);

        return ret;
    }

    public delegate void EasingDoubleKeyFrame_SetEasingFunctionDelegate(HandleRef jarg1, HandleRef jarg2);
    public static EasingDoubleKeyFrame_SetEasingFunctionDelegate _EasingDoubleKeyFrame_SetEasingFunction;
    public static void EasingDoubleKeyFrame_SetEasingFunction(HandleRef jarg1, HandleRef jarg2)
    {
        _EasingDoubleKeyFrame_SetEasingFunction(jarg1, jarg2);
    }

    public delegate IntPtr new_EasingInt16KeyFrameDelegate();
    public static new_EasingInt16KeyFrameDelegate _new_EasingInt16KeyFrame;
    public static IntPtr new_EasingInt16KeyFrame()
    {
        IntPtr ret = _new_EasingInt16KeyFrame();

        return ret;
    }

    public delegate void delete_EasingInt16KeyFrameDelegate(HandleRef jarg1);
    public static delete_EasingInt16KeyFrameDelegate _delete_EasingInt16KeyFrame;
    public static void delete_EasingInt16KeyFrame(HandleRef jarg1)
    {
        _delete_EasingInt16KeyFrame(jarg1);
    }

    public delegate IntPtr EasingInt16KeyFrame_GetEasingFunctionDelegate(HandleRef jarg1);
    public static EasingInt16KeyFrame_GetEasingFunctionDelegate _EasingInt16KeyFrame_GetEasingFunction;
    public static IntPtr EasingInt16KeyFrame_GetEasingFunction(HandleRef jarg1)
    {
        IntPtr ret = _EasingInt16KeyFrame_GetEasingFunction(jarg1);

        return ret;
    }

    public delegate void EasingInt16KeyFrame_SetEasingFunctionDelegate(HandleRef jarg1, HandleRef jarg2);
    public static EasingInt16KeyFrame_SetEasingFunctionDelegate _EasingInt16KeyFrame_SetEasingFunction;
    public static void EasingInt16KeyFrame_SetEasingFunction(HandleRef jarg1, HandleRef jarg2)
    {
        _EasingInt16KeyFrame_SetEasingFunction(jarg1, jarg2);
    }

    public delegate IntPtr new_EasingInt32KeyFrameDelegate();
    public static new_EasingInt32KeyFrameDelegate _new_EasingInt32KeyFrame;
    public static IntPtr new_EasingInt32KeyFrame()
    {
        IntPtr ret = _new_EasingInt32KeyFrame();

        return ret;
    }

    public delegate void delete_EasingInt32KeyFrameDelegate(HandleRef jarg1);
    public static delete_EasingInt32KeyFrameDelegate _delete_EasingInt32KeyFrame;
    public static void delete_EasingInt32KeyFrame(HandleRef jarg1)
    {
        _delete_EasingInt32KeyFrame(jarg1);
    }

    public delegate IntPtr EasingInt32KeyFrame_GetEasingFunctionDelegate(HandleRef jarg1);
    public static EasingInt32KeyFrame_GetEasingFunctionDelegate _EasingInt32KeyFrame_GetEasingFunction;
    public static IntPtr EasingInt32KeyFrame_GetEasingFunction(HandleRef jarg1)
    {
        IntPtr ret = _EasingInt32KeyFrame_GetEasingFunction(jarg1);

        return ret;
    }

    public delegate void EasingInt32KeyFrame_SetEasingFunctionDelegate(HandleRef jarg1, HandleRef jarg2);
    public static EasingInt32KeyFrame_SetEasingFunctionDelegate _EasingInt32KeyFrame_SetEasingFunction;
    public static void EasingInt32KeyFrame_SetEasingFunction(HandleRef jarg1, HandleRef jarg2)
    {
        _EasingInt32KeyFrame_SetEasingFunction(jarg1, jarg2);
    }

    public delegate IntPtr new_EasingColorKeyFrameDelegate();
    public static new_EasingColorKeyFrameDelegate _new_EasingColorKeyFrame;
    public static IntPtr new_EasingColorKeyFrame()
    {
        IntPtr ret = _new_EasingColorKeyFrame();

        return ret;
    }

    public delegate void delete_EasingColorKeyFrameDelegate(HandleRef jarg1);
    public static delete_EasingColorKeyFrameDelegate _delete_EasingColorKeyFrame;
    public static void delete_EasingColorKeyFrame(HandleRef jarg1)
    {
        _delete_EasingColorKeyFrame(jarg1);
    }

    public delegate IntPtr EasingColorKeyFrame_GetEasingFunctionDelegate(HandleRef jarg1);
    public static EasingColorKeyFrame_GetEasingFunctionDelegate _EasingColorKeyFrame_GetEasingFunction;
    public static IntPtr EasingColorKeyFrame_GetEasingFunction(HandleRef jarg1)
    {
        IntPtr ret = _EasingColorKeyFrame_GetEasingFunction(jarg1);

        return ret;
    }

    public delegate void EasingColorKeyFrame_SetEasingFunctionDelegate(HandleRef jarg1, HandleRef jarg2);
    public static EasingColorKeyFrame_SetEasingFunctionDelegate _EasingColorKeyFrame_SetEasingFunction;
    public static void EasingColorKeyFrame_SetEasingFunction(HandleRef jarg1, HandleRef jarg2)
    {
        _EasingColorKeyFrame_SetEasingFunction(jarg1, jarg2);
    }

    public delegate IntPtr new_EasingPointKeyFrameDelegate();
    public static new_EasingPointKeyFrameDelegate _new_EasingPointKeyFrame;
    public static IntPtr new_EasingPointKeyFrame()
    {
        IntPtr ret = _new_EasingPointKeyFrame();

        return ret;
    }

    public delegate void delete_EasingPointKeyFrameDelegate(HandleRef jarg1);
    public static delete_EasingPointKeyFrameDelegate _delete_EasingPointKeyFrame;
    public static void delete_EasingPointKeyFrame(HandleRef jarg1)
    {
        _delete_EasingPointKeyFrame(jarg1);
    }

    public delegate IntPtr EasingPointKeyFrame_GetEasingFunctionDelegate(HandleRef jarg1);
    public static EasingPointKeyFrame_GetEasingFunctionDelegate _EasingPointKeyFrame_GetEasingFunction;
    public static IntPtr EasingPointKeyFrame_GetEasingFunction(HandleRef jarg1)
    {
        IntPtr ret = _EasingPointKeyFrame_GetEasingFunction(jarg1);

        return ret;
    }

    public delegate void EasingPointKeyFrame_SetEasingFunctionDelegate(HandleRef jarg1, HandleRef jarg2);
    public static EasingPointKeyFrame_SetEasingFunctionDelegate _EasingPointKeyFrame_SetEasingFunction;
    public static void EasingPointKeyFrame_SetEasingFunction(HandleRef jarg1, HandleRef jarg2)
    {
        _EasingPointKeyFrame_SetEasingFunction(jarg1, jarg2);
    }

    public delegate IntPtr new_EasingRectKeyFrameDelegate();
    public static new_EasingRectKeyFrameDelegate _new_EasingRectKeyFrame;
    public static IntPtr new_EasingRectKeyFrame()
    {
        IntPtr ret = _new_EasingRectKeyFrame();

        return ret;
    }

    public delegate void delete_EasingRectKeyFrameDelegate(HandleRef jarg1);
    public static delete_EasingRectKeyFrameDelegate _delete_EasingRectKeyFrame;
    public static void delete_EasingRectKeyFrame(HandleRef jarg1)
    {
        _delete_EasingRectKeyFrame(jarg1);
    }

    public delegate IntPtr EasingRectKeyFrame_GetEasingFunctionDelegate(HandleRef jarg1);
    public static EasingRectKeyFrame_GetEasingFunctionDelegate _EasingRectKeyFrame_GetEasingFunction;
    public static IntPtr EasingRectKeyFrame_GetEasingFunction(HandleRef jarg1)
    {
        IntPtr ret = _EasingRectKeyFrame_GetEasingFunction(jarg1);

        return ret;
    }

    public delegate void EasingRectKeyFrame_SetEasingFunctionDelegate(HandleRef jarg1, HandleRef jarg2);
    public static EasingRectKeyFrame_SetEasingFunctionDelegate _EasingRectKeyFrame_SetEasingFunction;
    public static void EasingRectKeyFrame_SetEasingFunction(HandleRef jarg1, HandleRef jarg2)
    {
        _EasingRectKeyFrame_SetEasingFunction(jarg1, jarg2);
    }

    public delegate IntPtr new_EasingSizeKeyFrameDelegate();
    public static new_EasingSizeKeyFrameDelegate _new_EasingSizeKeyFrame;
    public static IntPtr new_EasingSizeKeyFrame()
    {
        IntPtr ret = _new_EasingSizeKeyFrame();

        return ret;
    }

    public delegate void delete_EasingSizeKeyFrameDelegate(HandleRef jarg1);
    public static delete_EasingSizeKeyFrameDelegate _delete_EasingSizeKeyFrame;
    public static void delete_EasingSizeKeyFrame(HandleRef jarg1)
    {
        _delete_EasingSizeKeyFrame(jarg1);
    }

    public delegate IntPtr EasingSizeKeyFrame_GetEasingFunctionDelegate(HandleRef jarg1);
    public static EasingSizeKeyFrame_GetEasingFunctionDelegate _EasingSizeKeyFrame_GetEasingFunction;
    public static IntPtr EasingSizeKeyFrame_GetEasingFunction(HandleRef jarg1)
    {
        IntPtr ret = _EasingSizeKeyFrame_GetEasingFunction(jarg1);

        return ret;
    }

    public delegate void EasingSizeKeyFrame_SetEasingFunctionDelegate(HandleRef jarg1, HandleRef jarg2);
    public static EasingSizeKeyFrame_SetEasingFunctionDelegate _EasingSizeKeyFrame_SetEasingFunction;
    public static void EasingSizeKeyFrame_SetEasingFunction(HandleRef jarg1, HandleRef jarg2)
    {
        _EasingSizeKeyFrame_SetEasingFunction(jarg1, jarg2);
    }

    public delegate IntPtr new_EasingThicknessKeyFrameDelegate();
    public static new_EasingThicknessKeyFrameDelegate _new_EasingThicknessKeyFrame;
    public static IntPtr new_EasingThicknessKeyFrame()
    {
        IntPtr ret = _new_EasingThicknessKeyFrame();

        return ret;
    }

    public delegate void delete_EasingThicknessKeyFrameDelegate(HandleRef jarg1);
    public static delete_EasingThicknessKeyFrameDelegate _delete_EasingThicknessKeyFrame;
    public static void delete_EasingThicknessKeyFrame(HandleRef jarg1)
    {
        _delete_EasingThicknessKeyFrame(jarg1);
    }

    public delegate IntPtr EasingThicknessKeyFrame_GetEasingFunctionDelegate(HandleRef jarg1);
    public static EasingThicknessKeyFrame_GetEasingFunctionDelegate _EasingThicknessKeyFrame_GetEasingFunction;
    public static IntPtr EasingThicknessKeyFrame_GetEasingFunction(HandleRef jarg1)
    {
        IntPtr ret = _EasingThicknessKeyFrame_GetEasingFunction(jarg1);

        return ret;
    }

    public delegate void EasingThicknessKeyFrame_SetEasingFunctionDelegate(HandleRef jarg1, HandleRef jarg2);
    public static EasingThicknessKeyFrame_SetEasingFunctionDelegate _EasingThicknessKeyFrame_SetEasingFunction;
    public static void EasingThicknessKeyFrame_SetEasingFunction(HandleRef jarg1, HandleRef jarg2)
    {
        _EasingThicknessKeyFrame_SetEasingFunction(jarg1, jarg2);
    }

    public delegate IntPtr new_LinearDoubleKeyFrameDelegate();
    public static new_LinearDoubleKeyFrameDelegate _new_LinearDoubleKeyFrame;
    public static IntPtr new_LinearDoubleKeyFrame()
    {
        IntPtr ret = _new_LinearDoubleKeyFrame();

        return ret;
    }

    public delegate void delete_LinearDoubleKeyFrameDelegate(HandleRef jarg1);
    public static delete_LinearDoubleKeyFrameDelegate _delete_LinearDoubleKeyFrame;
    public static void delete_LinearDoubleKeyFrame(HandleRef jarg1)
    {
        _delete_LinearDoubleKeyFrame(jarg1);
    }

    public delegate IntPtr new_LinearInt16KeyFrameDelegate();
    public static new_LinearInt16KeyFrameDelegate _new_LinearInt16KeyFrame;
    public static IntPtr new_LinearInt16KeyFrame()
    {
        IntPtr ret = _new_LinearInt16KeyFrame();

        return ret;
    }

    public delegate void delete_LinearInt16KeyFrameDelegate(HandleRef jarg1);
    public static delete_LinearInt16KeyFrameDelegate _delete_LinearInt16KeyFrame;
    public static void delete_LinearInt16KeyFrame(HandleRef jarg1)
    {
        _delete_LinearInt16KeyFrame(jarg1);
    }

    public delegate IntPtr new_LinearInt32KeyFrameDelegate();
    public static new_LinearInt32KeyFrameDelegate _new_LinearInt32KeyFrame;
    public static IntPtr new_LinearInt32KeyFrame()
    {
        IntPtr ret = _new_LinearInt32KeyFrame();

        return ret;
    }

    public delegate void delete_LinearInt32KeyFrameDelegate(HandleRef jarg1);
    public static delete_LinearInt32KeyFrameDelegate _delete_LinearInt32KeyFrame;
    public static void delete_LinearInt32KeyFrame(HandleRef jarg1)
    {
        _delete_LinearInt32KeyFrame(jarg1);
    }

    public delegate IntPtr new_LinearColorKeyFrameDelegate();
    public static new_LinearColorKeyFrameDelegate _new_LinearColorKeyFrame;
    public static IntPtr new_LinearColorKeyFrame()
    {
        IntPtr ret = _new_LinearColorKeyFrame();

        return ret;
    }

    public delegate void delete_LinearColorKeyFrameDelegate(HandleRef jarg1);
    public static delete_LinearColorKeyFrameDelegate _delete_LinearColorKeyFrame;
    public static void delete_LinearColorKeyFrame(HandleRef jarg1)
    {
        _delete_LinearColorKeyFrame(jarg1);
    }

    public delegate IntPtr new_LinearPointKeyFrameDelegate();
    public static new_LinearPointKeyFrameDelegate _new_LinearPointKeyFrame;
    public static IntPtr new_LinearPointKeyFrame()
    {
        IntPtr ret = _new_LinearPointKeyFrame();

        return ret;
    }

    public delegate void delete_LinearPointKeyFrameDelegate(HandleRef jarg1);
    public static delete_LinearPointKeyFrameDelegate _delete_LinearPointKeyFrame;
    public static void delete_LinearPointKeyFrame(HandleRef jarg1)
    {
        _delete_LinearPointKeyFrame(jarg1);
    }

    public delegate IntPtr new_LinearRectKeyFrameDelegate();
    public static new_LinearRectKeyFrameDelegate _new_LinearRectKeyFrame;
    public static IntPtr new_LinearRectKeyFrame()
    {
        IntPtr ret = _new_LinearRectKeyFrame();

        return ret;
    }

    public delegate void delete_LinearRectKeyFrameDelegate(HandleRef jarg1);
    public static delete_LinearRectKeyFrameDelegate _delete_LinearRectKeyFrame;
    public static void delete_LinearRectKeyFrame(HandleRef jarg1)
    {
        _delete_LinearRectKeyFrame(jarg1);
    }

    public delegate IntPtr new_LinearSizeKeyFrameDelegate();
    public static new_LinearSizeKeyFrameDelegate _new_LinearSizeKeyFrame;
    public static IntPtr new_LinearSizeKeyFrame()
    {
        IntPtr ret = _new_LinearSizeKeyFrame();

        return ret;
    }

    public delegate void delete_LinearSizeKeyFrameDelegate(HandleRef jarg1);
    public static delete_LinearSizeKeyFrameDelegate _delete_LinearSizeKeyFrame;
    public static void delete_LinearSizeKeyFrame(HandleRef jarg1)
    {
        _delete_LinearSizeKeyFrame(jarg1);
    }

    public delegate IntPtr new_LinearThicknessKeyFrameDelegate();
    public static new_LinearThicknessKeyFrameDelegate _new_LinearThicknessKeyFrame;
    public static IntPtr new_LinearThicknessKeyFrame()
    {
        IntPtr ret = _new_LinearThicknessKeyFrame();

        return ret;
    }

    public delegate void delete_LinearThicknessKeyFrameDelegate(HandleRef jarg1);
    public static delete_LinearThicknessKeyFrameDelegate _delete_LinearThicknessKeyFrame;
    public static void delete_LinearThicknessKeyFrame(HandleRef jarg1)
    {
        _delete_LinearThicknessKeyFrame(jarg1);
    }

    public delegate IntPtr new_SplineDoubleKeyFrameDelegate();
    public static new_SplineDoubleKeyFrameDelegate _new_SplineDoubleKeyFrame;
    public static IntPtr new_SplineDoubleKeyFrame()
    {
        IntPtr ret = _new_SplineDoubleKeyFrame();

        return ret;
    }

    public delegate void delete_SplineDoubleKeyFrameDelegate(HandleRef jarg1);
    public static delete_SplineDoubleKeyFrameDelegate _delete_SplineDoubleKeyFrame;
    public static void delete_SplineDoubleKeyFrame(HandleRef jarg1)
    {
        _delete_SplineDoubleKeyFrame(jarg1);
    }

    public delegate IntPtr SplineDoubleKeyFrame_GetKeySplineDelegate(HandleRef jarg1);
    public static SplineDoubleKeyFrame_GetKeySplineDelegate _SplineDoubleKeyFrame_GetKeySpline;
    public static IntPtr SplineDoubleKeyFrame_GetKeySpline(HandleRef jarg1)
    {
        IntPtr ret = _SplineDoubleKeyFrame_GetKeySpline(jarg1);

        return ret;
    }

    public delegate void SplineDoubleKeyFrame_SetKeySplineDelegate(HandleRef jarg1, HandleRef jarg2);
    public static SplineDoubleKeyFrame_SetKeySplineDelegate _SplineDoubleKeyFrame_SetKeySpline;
    public static void SplineDoubleKeyFrame_SetKeySpline(HandleRef jarg1, HandleRef jarg2)
    {
        _SplineDoubleKeyFrame_SetKeySpline(jarg1, jarg2);
    }

    public delegate IntPtr new_SplineInt16KeyFrameDelegate();
    public static new_SplineInt16KeyFrameDelegate _new_SplineInt16KeyFrame;
    public static IntPtr new_SplineInt16KeyFrame()
    {
        IntPtr ret = _new_SplineInt16KeyFrame();

        return ret;
    }

    public delegate void delete_SplineInt16KeyFrameDelegate(HandleRef jarg1);
    public static delete_SplineInt16KeyFrameDelegate _delete_SplineInt16KeyFrame;
    public static void delete_SplineInt16KeyFrame(HandleRef jarg1)
    {
        _delete_SplineInt16KeyFrame(jarg1);
    }

    public delegate IntPtr SplineInt16KeyFrame_GetKeySplineDelegate(HandleRef jarg1);
    public static SplineInt16KeyFrame_GetKeySplineDelegate _SplineInt16KeyFrame_GetKeySpline;
    public static IntPtr SplineInt16KeyFrame_GetKeySpline(HandleRef jarg1)
    {
        IntPtr ret = _SplineInt16KeyFrame_GetKeySpline(jarg1);

        return ret;
    }

    public delegate void SplineInt16KeyFrame_SetKeySplineDelegate(HandleRef jarg1, HandleRef jarg2);
    public static SplineInt16KeyFrame_SetKeySplineDelegate _SplineInt16KeyFrame_SetKeySpline;
    public static void SplineInt16KeyFrame_SetKeySpline(HandleRef jarg1, HandleRef jarg2)
    {
        _SplineInt16KeyFrame_SetKeySpline(jarg1, jarg2);
    }

    public delegate IntPtr new_SplineInt32KeyFrameDelegate();
    public static new_SplineInt32KeyFrameDelegate _new_SplineInt32KeyFrame;
    public static IntPtr new_SplineInt32KeyFrame()
    {
        IntPtr ret = _new_SplineInt32KeyFrame();

        return ret;
    }

    public delegate void delete_SplineInt32KeyFrameDelegate(HandleRef jarg1);
    public static delete_SplineInt32KeyFrameDelegate _delete_SplineInt32KeyFrame;
    public static void delete_SplineInt32KeyFrame(HandleRef jarg1)
    {
        _delete_SplineInt32KeyFrame(jarg1);
    }

    public delegate IntPtr SplineInt32KeyFrame_GetKeySplineDelegate(HandleRef jarg1);
    public static SplineInt32KeyFrame_GetKeySplineDelegate _SplineInt32KeyFrame_GetKeySpline;
    public static IntPtr SplineInt32KeyFrame_GetKeySpline(HandleRef jarg1)
    {
        IntPtr ret = _SplineInt32KeyFrame_GetKeySpline(jarg1);

        return ret;
    }

    public delegate void SplineInt32KeyFrame_SetKeySplineDelegate(HandleRef jarg1, HandleRef jarg2);
    public static SplineInt32KeyFrame_SetKeySplineDelegate _SplineInt32KeyFrame_SetKeySpline;
    public static void SplineInt32KeyFrame_SetKeySpline(HandleRef jarg1, HandleRef jarg2)
    {
        _SplineInt32KeyFrame_SetKeySpline(jarg1, jarg2);
    }

    public delegate IntPtr new_SplineColorKeyFrameDelegate();
    public static new_SplineColorKeyFrameDelegate _new_SplineColorKeyFrame;
    public static IntPtr new_SplineColorKeyFrame()
    {
        IntPtr ret = _new_SplineColorKeyFrame();

        return ret;
    }

    public delegate void delete_SplineColorKeyFrameDelegate(HandleRef jarg1);
    public static delete_SplineColorKeyFrameDelegate _delete_SplineColorKeyFrame;
    public static void delete_SplineColorKeyFrame(HandleRef jarg1)
    {
        _delete_SplineColorKeyFrame(jarg1);
    }

    public delegate IntPtr SplineColorKeyFrame_GetKeySplineDelegate(HandleRef jarg1);
    public static SplineColorKeyFrame_GetKeySplineDelegate _SplineColorKeyFrame_GetKeySpline;
    public static IntPtr SplineColorKeyFrame_GetKeySpline(HandleRef jarg1)
    {
        IntPtr ret = _SplineColorKeyFrame_GetKeySpline(jarg1);

        return ret;
    }

    public delegate void SplineColorKeyFrame_SetKeySplineDelegate(HandleRef jarg1, HandleRef jarg2);
    public static SplineColorKeyFrame_SetKeySplineDelegate _SplineColorKeyFrame_SetKeySpline;
    public static void SplineColorKeyFrame_SetKeySpline(HandleRef jarg1, HandleRef jarg2)
    {
        _SplineColorKeyFrame_SetKeySpline(jarg1, jarg2);
    }

    public delegate IntPtr new_SplinePointKeyFrameDelegate();
    public static new_SplinePointKeyFrameDelegate _new_SplinePointKeyFrame;
    public static IntPtr new_SplinePointKeyFrame()
    {
        IntPtr ret = _new_SplinePointKeyFrame();

        return ret;
    }

    public delegate void delete_SplinePointKeyFrameDelegate(HandleRef jarg1);
    public static delete_SplinePointKeyFrameDelegate _delete_SplinePointKeyFrame;
    public static void delete_SplinePointKeyFrame(HandleRef jarg1)
    {
        _delete_SplinePointKeyFrame(jarg1);
    }

    public delegate IntPtr SplinePointKeyFrame_GetKeySplineDelegate(HandleRef jarg1);
    public static SplinePointKeyFrame_GetKeySplineDelegate _SplinePointKeyFrame_GetKeySpline;
    public static IntPtr SplinePointKeyFrame_GetKeySpline(HandleRef jarg1)
    {
        IntPtr ret = _SplinePointKeyFrame_GetKeySpline(jarg1);

        return ret;
    }

    public delegate void SplinePointKeyFrame_SetKeySplineDelegate(HandleRef jarg1, HandleRef jarg2);
    public static SplinePointKeyFrame_SetKeySplineDelegate _SplinePointKeyFrame_SetKeySpline;
    public static void SplinePointKeyFrame_SetKeySpline(HandleRef jarg1, HandleRef jarg2)
    {
        _SplinePointKeyFrame_SetKeySpline(jarg1, jarg2);
    }

    public delegate IntPtr new_SplineRectKeyFrameDelegate();
    public static new_SplineRectKeyFrameDelegate _new_SplineRectKeyFrame;
    public static IntPtr new_SplineRectKeyFrame()
    {
        IntPtr ret = _new_SplineRectKeyFrame();

        return ret;
    }

    public delegate void delete_SplineRectKeyFrameDelegate(HandleRef jarg1);
    public static delete_SplineRectKeyFrameDelegate _delete_SplineRectKeyFrame;
    public static void delete_SplineRectKeyFrame(HandleRef jarg1)
    {
        _delete_SplineRectKeyFrame(jarg1);
    }

    public delegate IntPtr SplineRectKeyFrame_GetKeySplineDelegate(HandleRef jarg1);
    public static SplineRectKeyFrame_GetKeySplineDelegate _SplineRectKeyFrame_GetKeySpline;
    public static IntPtr SplineRectKeyFrame_GetKeySpline(HandleRef jarg1)
    {
        IntPtr ret = _SplineRectKeyFrame_GetKeySpline(jarg1);

        return ret;
    }

    public delegate void SplineRectKeyFrame_SetKeySplineDelegate(HandleRef jarg1, HandleRef jarg2);
    public static SplineRectKeyFrame_SetKeySplineDelegate _SplineRectKeyFrame_SetKeySpline;
    public static void SplineRectKeyFrame_SetKeySpline(HandleRef jarg1, HandleRef jarg2)
    {
        _SplineRectKeyFrame_SetKeySpline(jarg1, jarg2);
    }

    public delegate IntPtr new_SplineSizeKeyFrameDelegate();
    public static new_SplineSizeKeyFrameDelegate _new_SplineSizeKeyFrame;
    public static IntPtr new_SplineSizeKeyFrame()
    {
        IntPtr ret = _new_SplineSizeKeyFrame();

        return ret;
    }

    public delegate void delete_SplineSizeKeyFrameDelegate(HandleRef jarg1);
    public static delete_SplineSizeKeyFrameDelegate _delete_SplineSizeKeyFrame;
    public static void delete_SplineSizeKeyFrame(HandleRef jarg1)
    {
        _delete_SplineSizeKeyFrame(jarg1);
    }

    public delegate IntPtr SplineSizeKeyFrame_GetKeySplineDelegate(HandleRef jarg1);
    public static SplineSizeKeyFrame_GetKeySplineDelegate _SplineSizeKeyFrame_GetKeySpline;
    public static IntPtr SplineSizeKeyFrame_GetKeySpline(HandleRef jarg1)
    {
        IntPtr ret = _SplineSizeKeyFrame_GetKeySpline(jarg1);

        return ret;
    }

    public delegate void SplineSizeKeyFrame_SetKeySplineDelegate(HandleRef jarg1, HandleRef jarg2);
    public static SplineSizeKeyFrame_SetKeySplineDelegate _SplineSizeKeyFrame_SetKeySpline;
    public static void SplineSizeKeyFrame_SetKeySpline(HandleRef jarg1, HandleRef jarg2)
    {
        _SplineSizeKeyFrame_SetKeySpline(jarg1, jarg2);
    }

    public delegate IntPtr new_SplineThicknessKeyFrameDelegate();
    public static new_SplineThicknessKeyFrameDelegate _new_SplineThicknessKeyFrame;
    public static IntPtr new_SplineThicknessKeyFrame()
    {
        IntPtr ret = _new_SplineThicknessKeyFrame();

        return ret;
    }

    public delegate void delete_SplineThicknessKeyFrameDelegate(HandleRef jarg1);
    public static delete_SplineThicknessKeyFrameDelegate _delete_SplineThicknessKeyFrame;
    public static void delete_SplineThicknessKeyFrame(HandleRef jarg1)
    {
        _delete_SplineThicknessKeyFrame(jarg1);
    }

    public delegate IntPtr SplineThicknessKeyFrame_GetKeySplineDelegate(HandleRef jarg1);
    public static SplineThicknessKeyFrame_GetKeySplineDelegate _SplineThicknessKeyFrame_GetKeySpline;
    public static IntPtr SplineThicknessKeyFrame_GetKeySpline(HandleRef jarg1)
    {
        IntPtr ret = _SplineThicknessKeyFrame_GetKeySpline(jarg1);

        return ret;
    }

    public delegate void SplineThicknessKeyFrame_SetKeySplineDelegate(HandleRef jarg1, HandleRef jarg2);
    public static SplineThicknessKeyFrame_SetKeySplineDelegate _SplineThicknessKeyFrame_SetKeySpline;
    public static void SplineThicknessKeyFrame_SetKeySpline(HandleRef jarg1, HandleRef jarg2)
    {
        _SplineThicknessKeyFrame_SetKeySpline(jarg1, jarg2);
    }

    public delegate IntPtr new_AnimationUsingKeyFramesBoolDelegate();
    public static new_AnimationUsingKeyFramesBoolDelegate _new_AnimationUsingKeyFramesBool;
    public static IntPtr new_AnimationUsingKeyFramesBool()
    {
        IntPtr ret = _new_AnimationUsingKeyFramesBool();

        return ret;
    }

    public delegate void delete_AnimationUsingKeyFramesBoolDelegate(HandleRef jarg1);
    public static delete_AnimationUsingKeyFramesBoolDelegate _delete_AnimationUsingKeyFramesBool;
    public static void delete_AnimationUsingKeyFramesBool(HandleRef jarg1)
    {
        _delete_AnimationUsingKeyFramesBool(jarg1);
    }

    public delegate IntPtr AnimationUsingKeyFramesBool_GetKeyFramesDelegate(HandleRef jarg1);
    public static AnimationUsingKeyFramesBool_GetKeyFramesDelegate _AnimationUsingKeyFramesBool_GetKeyFrames;
    public static IntPtr AnimationUsingKeyFramesBool_GetKeyFrames(HandleRef jarg1)
    {
        IntPtr ret = _AnimationUsingKeyFramesBool_GetKeyFrames(jarg1);

        return ret;
    }

    public delegate IntPtr AnimationUsingKeyFramesBool_GetAnimatedValueDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static AnimationUsingKeyFramesBool_GetAnimatedValueDelegate _AnimationUsingKeyFramesBool_GetAnimatedValue;
    public static IntPtr AnimationUsingKeyFramesBool_GetAnimatedValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        IntPtr ret = _AnimationUsingKeyFramesBool_GetAnimatedValue(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr new_AnimationUsingKeyFramesFloatDelegate();
    public static new_AnimationUsingKeyFramesFloatDelegate _new_AnimationUsingKeyFramesFloat;
    public static IntPtr new_AnimationUsingKeyFramesFloat()
    {
        IntPtr ret = _new_AnimationUsingKeyFramesFloat();

        return ret;
    }

    public delegate void delete_AnimationUsingKeyFramesFloatDelegate(HandleRef jarg1);
    public static delete_AnimationUsingKeyFramesFloatDelegate _delete_AnimationUsingKeyFramesFloat;
    public static void delete_AnimationUsingKeyFramesFloat(HandleRef jarg1)
    {
        _delete_AnimationUsingKeyFramesFloat(jarg1);
    }

    public delegate IntPtr AnimationUsingKeyFramesFloat_GetKeyFramesDelegate(HandleRef jarg1);
    public static AnimationUsingKeyFramesFloat_GetKeyFramesDelegate _AnimationUsingKeyFramesFloat_GetKeyFrames;
    public static IntPtr AnimationUsingKeyFramesFloat_GetKeyFrames(HandleRef jarg1)
    {
        IntPtr ret = _AnimationUsingKeyFramesFloat_GetKeyFrames(jarg1);

        return ret;
    }

    public delegate IntPtr AnimationUsingKeyFramesFloat_GetAnimatedValueDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static AnimationUsingKeyFramesFloat_GetAnimatedValueDelegate _AnimationUsingKeyFramesFloat_GetAnimatedValue;
    public static IntPtr AnimationUsingKeyFramesFloat_GetAnimatedValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        IntPtr ret = _AnimationUsingKeyFramesFloat_GetAnimatedValue(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr new_AnimationUsingKeyFramesInt16Delegate();
    public static new_AnimationUsingKeyFramesInt16Delegate _new_AnimationUsingKeyFramesInt16;
    public static IntPtr new_AnimationUsingKeyFramesInt16()
    {
        IntPtr ret = _new_AnimationUsingKeyFramesInt16();

        return ret;
    }

    public delegate void delete_AnimationUsingKeyFramesInt16Delegate(HandleRef jarg1);
    public static delete_AnimationUsingKeyFramesInt16Delegate _delete_AnimationUsingKeyFramesInt16;
    public static void delete_AnimationUsingKeyFramesInt16(HandleRef jarg1)
    {
        _delete_AnimationUsingKeyFramesInt16(jarg1);
    }

    public delegate IntPtr AnimationUsingKeyFramesInt16_GetKeyFramesDelegate(HandleRef jarg1);
    public static AnimationUsingKeyFramesInt16_GetKeyFramesDelegate _AnimationUsingKeyFramesInt16_GetKeyFrames;
    public static IntPtr AnimationUsingKeyFramesInt16_GetKeyFrames(HandleRef jarg1)
    {
        IntPtr ret = _AnimationUsingKeyFramesInt16_GetKeyFrames(jarg1);

        return ret;
    }

    public delegate IntPtr AnimationUsingKeyFramesInt16_GetAnimatedValueDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static AnimationUsingKeyFramesInt16_GetAnimatedValueDelegate _AnimationUsingKeyFramesInt16_GetAnimatedValue;
    public static IntPtr AnimationUsingKeyFramesInt16_GetAnimatedValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        IntPtr ret = _AnimationUsingKeyFramesInt16_GetAnimatedValue(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr new_AnimationUsingKeyFramesInt32Delegate();
    public static new_AnimationUsingKeyFramesInt32Delegate _new_AnimationUsingKeyFramesInt32;
    public static IntPtr new_AnimationUsingKeyFramesInt32()
    {
        IntPtr ret = _new_AnimationUsingKeyFramesInt32();

        return ret;
    }

    public delegate void delete_AnimationUsingKeyFramesInt32Delegate(HandleRef jarg1);
    public static delete_AnimationUsingKeyFramesInt32Delegate _delete_AnimationUsingKeyFramesInt32;
    public static void delete_AnimationUsingKeyFramesInt32(HandleRef jarg1)
    {
        _delete_AnimationUsingKeyFramesInt32(jarg1);
    }

    public delegate IntPtr AnimationUsingKeyFramesInt32_GetKeyFramesDelegate(HandleRef jarg1);
    public static AnimationUsingKeyFramesInt32_GetKeyFramesDelegate _AnimationUsingKeyFramesInt32_GetKeyFrames;
    public static IntPtr AnimationUsingKeyFramesInt32_GetKeyFrames(HandleRef jarg1)
    {
        IntPtr ret = _AnimationUsingKeyFramesInt32_GetKeyFrames(jarg1);

        return ret;
    }

    public delegate IntPtr AnimationUsingKeyFramesInt32_GetAnimatedValueDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static AnimationUsingKeyFramesInt32_GetAnimatedValueDelegate _AnimationUsingKeyFramesInt32_GetAnimatedValue;
    public static IntPtr AnimationUsingKeyFramesInt32_GetAnimatedValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        IntPtr ret = _AnimationUsingKeyFramesInt32_GetAnimatedValue(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr new_AnimationUsingKeyFramesColorDelegate();
    public static new_AnimationUsingKeyFramesColorDelegate _new_AnimationUsingKeyFramesColor;
    public static IntPtr new_AnimationUsingKeyFramesColor()
    {
        IntPtr ret = _new_AnimationUsingKeyFramesColor();

        return ret;
    }

    public delegate void delete_AnimationUsingKeyFramesColorDelegate(HandleRef jarg1);
    public static delete_AnimationUsingKeyFramesColorDelegate _delete_AnimationUsingKeyFramesColor;
    public static void delete_AnimationUsingKeyFramesColor(HandleRef jarg1)
    {
        _delete_AnimationUsingKeyFramesColor(jarg1);
    }

    public delegate IntPtr AnimationUsingKeyFramesColor_GetKeyFramesDelegate(HandleRef jarg1);
    public static AnimationUsingKeyFramesColor_GetKeyFramesDelegate _AnimationUsingKeyFramesColor_GetKeyFrames;
    public static IntPtr AnimationUsingKeyFramesColor_GetKeyFrames(HandleRef jarg1)
    {
        IntPtr ret = _AnimationUsingKeyFramesColor_GetKeyFrames(jarg1);

        return ret;
    }

    public delegate IntPtr AnimationUsingKeyFramesColor_GetAnimatedValueDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static AnimationUsingKeyFramesColor_GetAnimatedValueDelegate _AnimationUsingKeyFramesColor_GetAnimatedValue;
    public static IntPtr AnimationUsingKeyFramesColor_GetAnimatedValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        IntPtr ret = _AnimationUsingKeyFramesColor_GetAnimatedValue(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr new_AnimationUsingKeyFramesPointDelegate();
    public static new_AnimationUsingKeyFramesPointDelegate _new_AnimationUsingKeyFramesPoint;
    public static IntPtr new_AnimationUsingKeyFramesPoint()
    {
        IntPtr ret = _new_AnimationUsingKeyFramesPoint();

        return ret;
    }

    public delegate void delete_AnimationUsingKeyFramesPointDelegate(HandleRef jarg1);
    public static delete_AnimationUsingKeyFramesPointDelegate _delete_AnimationUsingKeyFramesPoint;
    public static void delete_AnimationUsingKeyFramesPoint(HandleRef jarg1)
    {
        _delete_AnimationUsingKeyFramesPoint(jarg1);
    }

    public delegate IntPtr AnimationUsingKeyFramesPoint_GetKeyFramesDelegate(HandleRef jarg1);
    public static AnimationUsingKeyFramesPoint_GetKeyFramesDelegate _AnimationUsingKeyFramesPoint_GetKeyFrames;
    public static IntPtr AnimationUsingKeyFramesPoint_GetKeyFrames(HandleRef jarg1)
    {
        IntPtr ret = _AnimationUsingKeyFramesPoint_GetKeyFrames(jarg1);

        return ret;
    }

    public delegate IntPtr AnimationUsingKeyFramesPoint_GetAnimatedValueDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static AnimationUsingKeyFramesPoint_GetAnimatedValueDelegate _AnimationUsingKeyFramesPoint_GetAnimatedValue;
    public static IntPtr AnimationUsingKeyFramesPoint_GetAnimatedValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        IntPtr ret = _AnimationUsingKeyFramesPoint_GetAnimatedValue(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr new_AnimationUsingKeyFramesRectDelegate();
    public static new_AnimationUsingKeyFramesRectDelegate _new_AnimationUsingKeyFramesRect;
    public static IntPtr new_AnimationUsingKeyFramesRect()
    {
        IntPtr ret = _new_AnimationUsingKeyFramesRect();

        return ret;
    }

    public delegate void delete_AnimationUsingKeyFramesRectDelegate(HandleRef jarg1);
    public static delete_AnimationUsingKeyFramesRectDelegate _delete_AnimationUsingKeyFramesRect;
    public static void delete_AnimationUsingKeyFramesRect(HandleRef jarg1)
    {
        _delete_AnimationUsingKeyFramesRect(jarg1);
    }

    public delegate IntPtr AnimationUsingKeyFramesRect_GetKeyFramesDelegate(HandleRef jarg1);
    public static AnimationUsingKeyFramesRect_GetKeyFramesDelegate _AnimationUsingKeyFramesRect_GetKeyFrames;
    public static IntPtr AnimationUsingKeyFramesRect_GetKeyFrames(HandleRef jarg1)
    {
        IntPtr ret = _AnimationUsingKeyFramesRect_GetKeyFrames(jarg1);

        return ret;
    }

    public delegate IntPtr AnimationUsingKeyFramesRect_GetAnimatedValueDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static AnimationUsingKeyFramesRect_GetAnimatedValueDelegate _AnimationUsingKeyFramesRect_GetAnimatedValue;
    public static IntPtr AnimationUsingKeyFramesRect_GetAnimatedValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        IntPtr ret = _AnimationUsingKeyFramesRect_GetAnimatedValue(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr new_AnimationUsingKeyFramesSizeDelegate();
    public static new_AnimationUsingKeyFramesSizeDelegate _new_AnimationUsingKeyFramesSize;
    public static IntPtr new_AnimationUsingKeyFramesSize()
    {
        IntPtr ret = _new_AnimationUsingKeyFramesSize();

        return ret;
    }

    public delegate void delete_AnimationUsingKeyFramesSizeDelegate(HandleRef jarg1);
    public static delete_AnimationUsingKeyFramesSizeDelegate _delete_AnimationUsingKeyFramesSize;
    public static void delete_AnimationUsingKeyFramesSize(HandleRef jarg1)
    {
        _delete_AnimationUsingKeyFramesSize(jarg1);
    }

    public delegate IntPtr AnimationUsingKeyFramesSize_GetKeyFramesDelegate(HandleRef jarg1);
    public static AnimationUsingKeyFramesSize_GetKeyFramesDelegate _AnimationUsingKeyFramesSize_GetKeyFrames;
    public static IntPtr AnimationUsingKeyFramesSize_GetKeyFrames(HandleRef jarg1)
    {
        IntPtr ret = _AnimationUsingKeyFramesSize_GetKeyFrames(jarg1);

        return ret;
    }

    public delegate IntPtr AnimationUsingKeyFramesSize_GetAnimatedValueDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static AnimationUsingKeyFramesSize_GetAnimatedValueDelegate _AnimationUsingKeyFramesSize_GetAnimatedValue;
    public static IntPtr AnimationUsingKeyFramesSize_GetAnimatedValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        IntPtr ret = _AnimationUsingKeyFramesSize_GetAnimatedValue(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr new_AnimationUsingKeyFramesThicknessDelegate();
    public static new_AnimationUsingKeyFramesThicknessDelegate _new_AnimationUsingKeyFramesThickness;
    public static IntPtr new_AnimationUsingKeyFramesThickness()
    {
        IntPtr ret = _new_AnimationUsingKeyFramesThickness();

        return ret;
    }

    public delegate void delete_AnimationUsingKeyFramesThicknessDelegate(HandleRef jarg1);
    public static delete_AnimationUsingKeyFramesThicknessDelegate _delete_AnimationUsingKeyFramesThickness;
    public static void delete_AnimationUsingKeyFramesThickness(HandleRef jarg1)
    {
        _delete_AnimationUsingKeyFramesThickness(jarg1);
    }

    public delegate IntPtr AnimationUsingKeyFramesThickness_GetKeyFramesDelegate(HandleRef jarg1);
    public static AnimationUsingKeyFramesThickness_GetKeyFramesDelegate _AnimationUsingKeyFramesThickness_GetKeyFrames;
    public static IntPtr AnimationUsingKeyFramesThickness_GetKeyFrames(HandleRef jarg1)
    {
        IntPtr ret = _AnimationUsingKeyFramesThickness_GetKeyFrames(jarg1);

        return ret;
    }

    public delegate IntPtr AnimationUsingKeyFramesThickness_GetAnimatedValueDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static AnimationUsingKeyFramesThickness_GetAnimatedValueDelegate _AnimationUsingKeyFramesThickness_GetAnimatedValue;
    public static IntPtr AnimationUsingKeyFramesThickness_GetAnimatedValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        IntPtr ret = _AnimationUsingKeyFramesThickness_GetAnimatedValue(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate IntPtr new_AnimationUsingKeyFramesNsStringDelegate();
    public static new_AnimationUsingKeyFramesNsStringDelegate _new_AnimationUsingKeyFramesNsString;
    public static IntPtr new_AnimationUsingKeyFramesNsString()
    {
        IntPtr ret = _new_AnimationUsingKeyFramesNsString();

        return ret;
    }

    public delegate void delete_AnimationUsingKeyFramesNsStringDelegate(HandleRef jarg1);
    public static delete_AnimationUsingKeyFramesNsStringDelegate _delete_AnimationUsingKeyFramesNsString;
    public static void delete_AnimationUsingKeyFramesNsString(HandleRef jarg1)
    {
        _delete_AnimationUsingKeyFramesNsString(jarg1);
    }

    public delegate IntPtr AnimationUsingKeyFramesNsString_GetKeyFramesDelegate(HandleRef jarg1);
    public static AnimationUsingKeyFramesNsString_GetKeyFramesDelegate _AnimationUsingKeyFramesNsString_GetKeyFrames;
    public static IntPtr AnimationUsingKeyFramesNsString_GetKeyFrames(HandleRef jarg1)
    {
        IntPtr ret = _AnimationUsingKeyFramesNsString_GetKeyFrames(jarg1);

        return ret;
    }

    public delegate IntPtr AnimationUsingKeyFramesNsString_GetAnimatedValueDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);
    public static AnimationUsingKeyFramesNsString_GetAnimatedValueDelegate _AnimationUsingKeyFramesNsString_GetAnimatedValue;
    public static IntPtr AnimationUsingKeyFramesNsString_GetAnimatedValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4)
    {
        IntPtr ret = _AnimationUsingKeyFramesNsString_GetAnimatedValue(jarg1, jarg2, jarg3, jarg4);

        return ret;
    }

    public delegate void delete_TimelineCollectionDelegate(HandleRef jarg1);
    public static delete_TimelineCollectionDelegate _delete_TimelineCollection;
    public static void delete_TimelineCollection(HandleRef jarg1)
    {
        _delete_TimelineCollection(jarg1);
    }

    public delegate bool CheckType_SerializableComponentDelegate(IntPtr baseComponent);
    public static CheckType_SerializableComponentDelegate _CheckType_SerializableComponent;
    public static bool CheckType_SerializableComponent(IntPtr baseComponent)
    {
        bool ret = _CheckType_SerializableComponent(baseComponent);

        return ret;
    }

    public delegate bool CheckType_DependencyPropertyDelegate(IntPtr baseComponent);
    public static CheckType_DependencyPropertyDelegate _CheckType_DependencyProperty;
    public static bool CheckType_DependencyProperty(IntPtr baseComponent)
    {
        bool ret = _CheckType_DependencyProperty(baseComponent);

        return ret;
    }

    public delegate bool CheckType_PropertyMetadataDelegate(IntPtr baseComponent);
    public static CheckType_PropertyMetadataDelegate _CheckType_PropertyMetadata;
    public static bool CheckType_PropertyMetadata(IntPtr baseComponent)
    {
        bool ret = _CheckType_PropertyMetadata(baseComponent);

        return ret;
    }

    public delegate void Extend_BaseComponentDelegate(IntPtr typeClass);
    public static Extend_BaseComponentDelegate _Extend_BaseComponent;
    public static void Extend_BaseComponent(IntPtr typeClass)
    {
        _Extend_BaseComponent(typeClass);
    }

    public delegate void Extend_SerializableComponentDelegate(IntPtr typeClass);
    public static Extend_SerializableComponentDelegate _Extend_SerializableComponent;
    public static void Extend_SerializableComponent(IntPtr typeClass)
    {
        _Extend_SerializableComponent(typeClass);
    }

    public delegate void Extend_AdornerDecoratorDelegate(IntPtr typeClass);
    public static Extend_AdornerDecoratorDelegate _Extend_AdornerDecorator;
    public static void Extend_AdornerDecorator(IntPtr typeClass)
    {
        _Extend_AdornerDecorator(typeClass);
    }

    public delegate void Extend_AnimatableDelegate(IntPtr typeClass);
    public static Extend_AnimatableDelegate _Extend_Animatable;
    public static void Extend_Animatable(IntPtr typeClass)
    {
        _Extend_Animatable(typeClass);
    }

    public delegate void Extend_AtlasSourceDelegate(IntPtr typeClass);
    public static Extend_AtlasSourceDelegate _Extend_AtlasSource;
    public static void Extend_AtlasSource(IntPtr typeClass)
    {
        _Extend_AtlasSource(typeClass);
    }

    public delegate void Extend_BaseButtonDelegate(IntPtr typeClass);
    public static Extend_BaseButtonDelegate _Extend_BaseButton;
    public static void Extend_BaseButton(IntPtr typeClass)
    {
        _Extend_BaseButton(typeClass);
    }

    public delegate void Extend_BaseCommandDelegate(IntPtr typeClass);
    public static Extend_BaseCommandDelegate _Extend_BaseCommand;
    public static void Extend_BaseCommand(IntPtr typeClass)
    {
        _Extend_BaseCommand(typeClass);
    }

    public delegate void Extend_BaseDefinitionDelegate(IntPtr typeClass);
    public static Extend_BaseDefinitionDelegate _Extend_BaseDefinition;
    public static void Extend_BaseDefinition(IntPtr typeClass)
    {
        _Extend_BaseDefinition(typeClass);
    }

    public delegate void Extend_BaseDictionaryDelegate(IntPtr typeClass);
    public static Extend_BaseDictionaryDelegate _Extend_BaseDictionary;
    public static void Extend_BaseDictionary(IntPtr typeClass)
    {
        _Extend_BaseDictionary(typeClass);
    }

    public delegate void Extend_BaseMenuDelegate(IntPtr typeClass);
    public static Extend_BaseMenuDelegate _Extend_BaseMenu;
    public static void Extend_BaseMenu(IntPtr typeClass)
    {
        _Extend_BaseMenu(typeClass);
    }

    public delegate void Extend_BaseSetterDelegate(IntPtr typeClass);
    public static Extend_BaseSetterDelegate _Extend_BaseSetter;
    public static void Extend_BaseSetter(IntPtr typeClass)
    {
        _Extend_BaseSetter(typeClass);
    }

    public delegate void Extend_BaseTextBoxDelegate(IntPtr typeClass);
    public static Extend_BaseTextBoxDelegate _Extend_BaseTextBox;
    public static void Extend_BaseTextBox(IntPtr typeClass)
    {
        _Extend_BaseTextBox(typeClass);
    }

    public delegate void Extend_BindingDelegate(IntPtr typeClass);
    public static Extend_BindingDelegate _Extend_Binding;
    public static void Extend_Binding(IntPtr typeClass)
    {
        _Extend_Binding(typeClass);
    }

    public delegate void Extend_BitmapSourceDelegate(IntPtr typeClass);
    public static Extend_BitmapSourceDelegate _Extend_BitmapSource;
    public static void Extend_BitmapSource(IntPtr typeClass)
    {
        _Extend_BitmapSource(typeClass);
    }

    public delegate void Extend_BorderDelegate(IntPtr typeClass);
    public static Extend_BorderDelegate _Extend_Border;
    public static void Extend_Border(IntPtr typeClass)
    {
        _Extend_Border(typeClass);
    }

    public delegate void Extend_BulletDecoratorDelegate(IntPtr typeClass);
    public static Extend_BulletDecoratorDelegate _Extend_BulletDecorator;
    public static void Extend_BulletDecorator(IntPtr typeClass)
    {
        _Extend_BulletDecorator(typeClass);
    }

    public delegate void Extend_ButtonDelegate(IntPtr typeClass);
    public static Extend_ButtonDelegate _Extend_Button;
    public static void Extend_Button(IntPtr typeClass)
    {
        _Extend_Button(typeClass);
    }

    public delegate void Extend_CanvasDelegate(IntPtr typeClass);
    public static Extend_CanvasDelegate _Extend_Canvas;
    public static void Extend_Canvas(IntPtr typeClass)
    {
        _Extend_Canvas(typeClass);
    }

    public delegate void Extend_CheckBoxDelegate(IntPtr typeClass);
    public static Extend_CheckBoxDelegate _Extend_CheckBox;
    public static void Extend_CheckBox(IntPtr typeClass)
    {
        _Extend_CheckBox(typeClass);
    }

    public delegate void Extend_CollectionDelegate(IntPtr typeClass);
    public static Extend_CollectionDelegate _Extend_Collection;
    public static void Extend_Collection(IntPtr typeClass)
    {
        _Extend_Collection(typeClass);
    }

    public delegate void Extend_CollectionViewDelegate(IntPtr typeClass);
    public static Extend_CollectionViewDelegate _Extend_CollectionView;
    public static void Extend_CollectionView(IntPtr typeClass)
    {
        _Extend_CollectionView(typeClass);
    }

    public delegate void Extend_CollectionViewSourceDelegate(IntPtr typeClass);
    public static Extend_CollectionViewSourceDelegate _Extend_CollectionViewSource;
    public static void Extend_CollectionViewSource(IntPtr typeClass)
    {
        _Extend_CollectionViewSource(typeClass);
    }

    public delegate void Extend_ColumnDefinitionDelegate(IntPtr typeClass);
    public static Extend_ColumnDefinitionDelegate _Extend_ColumnDefinition;
    public static void Extend_ColumnDefinition(IntPtr typeClass)
    {
        _Extend_ColumnDefinition(typeClass);
    }

    public delegate void Extend_CombinedGeometryDelegate(IntPtr typeClass);
    public static Extend_CombinedGeometryDelegate _Extend_CombinedGeometry;
    public static void Extend_CombinedGeometry(IntPtr typeClass)
    {
        _Extend_CombinedGeometry(typeClass);
    }

    public delegate void Extend_ComboBoxDelegate(IntPtr typeClass);
    public static Extend_ComboBoxDelegate _Extend_ComboBox;
    public static void Extend_ComboBox(IntPtr typeClass)
    {
        _Extend_ComboBox(typeClass);
    }

    public delegate void Extend_ComboBoxItemDelegate(IntPtr typeClass);
    public static Extend_ComboBoxItemDelegate _Extend_ComboBoxItem;
    public static void Extend_ComboBoxItem(IntPtr typeClass)
    {
        _Extend_ComboBoxItem(typeClass);
    }

    public delegate void Extend_CommandBindingDelegate(IntPtr typeClass);
    public static Extend_CommandBindingDelegate _Extend_CommandBinding;
    public static void Extend_CommandBinding(IntPtr typeClass)
    {
        _Extend_CommandBinding(typeClass);
    }

    public delegate void Extend_CompositeTransformDelegate(IntPtr typeClass);
    public static Extend_CompositeTransformDelegate _Extend_CompositeTransform;
    public static void Extend_CompositeTransform(IntPtr typeClass)
    {
        _Extend_CompositeTransform(typeClass);
    }

    public delegate void Extend_ConditionDelegate(IntPtr typeClass);
    public static Extend_ConditionDelegate _Extend_Condition;
    public static void Extend_Condition(IntPtr typeClass)
    {
        _Extend_Condition(typeClass);
    }

    public delegate void Extend_ContentControlDelegate(IntPtr typeClass);
    public static Extend_ContentControlDelegate _Extend_ContentControl;
    public static void Extend_ContentControl(IntPtr typeClass)
    {
        _Extend_ContentControl(typeClass);
    }

    public delegate void Extend_ContentPresenterDelegate(IntPtr typeClass);
    public static Extend_ContentPresenterDelegate _Extend_ContentPresenter;
    public static void Extend_ContentPresenter(IntPtr typeClass)
    {
        _Extend_ContentPresenter(typeClass);
    }

    public delegate void Extend_ContextMenuDelegate(IntPtr typeClass);
    public static Extend_ContextMenuDelegate _Extend_ContextMenu;
    public static void Extend_ContextMenu(IntPtr typeClass)
    {
        _Extend_ContextMenu(typeClass);
    }

    public delegate void Extend_ControlDelegate(IntPtr typeClass);
    public static Extend_ControlDelegate _Extend_Control;
    public static void Extend_Control(IntPtr typeClass)
    {
        _Extend_Control(typeClass);
    }

    public delegate void Extend_ControlTemplateDelegate(IntPtr typeClass);
    public static Extend_ControlTemplateDelegate _Extend_ControlTemplate;
    public static void Extend_ControlTemplate(IntPtr typeClass)
    {
        _Extend_ControlTemplate(typeClass);
    }

    public delegate void Extend_DashStyleDelegate(IntPtr typeClass);
    public static Extend_DashStyleDelegate _Extend_DashStyle;
    public static void Extend_DashStyle(IntPtr typeClass)
    {
        _Extend_DashStyle(typeClass);
    }

    public delegate void Extend_DataTemplateDelegate(IntPtr typeClass);
    public static Extend_DataTemplateDelegate _Extend_DataTemplate;
    public static void Extend_DataTemplate(IntPtr typeClass)
    {
        _Extend_DataTemplate(typeClass);
    }

    public delegate void Extend_DecoratorDelegate(IntPtr typeClass);
    public static Extend_DecoratorDelegate _Extend_Decorator;
    public static void Extend_Decorator(IntPtr typeClass)
    {
        _Extend_Decorator(typeClass);
    }

    public delegate void Extend_DialogDelegate(IntPtr typeClass);
    public static Extend_DialogDelegate _Extend_Dialog;
    public static void Extend_Dialog(IntPtr typeClass)
    {
        _Extend_Dialog(typeClass);
    }

    public delegate void Extend_DockPanelDelegate(IntPtr typeClass);
    public static Extend_DockPanelDelegate _Extend_DockPanel;
    public static void Extend_DockPanel(IntPtr typeClass)
    {
        _Extend_DockPanel(typeClass);
    }

    public delegate void Extend_DrawingContextDelegate(IntPtr typeClass);
    public static Extend_DrawingContextDelegate _Extend_DrawingContext;
    public static void Extend_DrawingContext(IntPtr typeClass)
    {
        _Extend_DrawingContext(typeClass);
    }

    public delegate void Extend_DropShadowEffectDelegate(IntPtr typeClass);
    public static Extend_DropShadowEffectDelegate _Extend_DropShadowEffect;
    public static void Extend_DropShadowEffect(IntPtr typeClass)
    {
        _Extend_DropShadowEffect(typeClass);
    }

    public delegate void Extend_EffectDelegate(IntPtr typeClass);
    public static Extend_EffectDelegate _Extend_Effect;
    public static void Extend_Effect(IntPtr typeClass)
    {
        _Extend_Effect(typeClass);
    }

    public delegate void Extend_EllipseDelegate(IntPtr typeClass);
    public static Extend_EllipseDelegate _Extend_Ellipse;
    public static void Extend_Ellipse(IntPtr typeClass)
    {
        _Extend_Ellipse(typeClass);
    }

    public delegate void Extend_EllipseGeometryDelegate(IntPtr typeClass);
    public static Extend_EllipseGeometryDelegate _Extend_EllipseGeometry;
    public static void Extend_EllipseGeometry(IntPtr typeClass)
    {
        _Extend_EllipseGeometry(typeClass);
    }

    public delegate void Extend_EventTriggerDelegate(IntPtr typeClass);
    public static Extend_EventTriggerDelegate _Extend_EventTrigger;
    public static void Extend_EventTrigger(IntPtr typeClass)
    {
        _Extend_EventTrigger(typeClass);
    }

    public delegate void Extend_ExpanderDelegate(IntPtr typeClass);
    public static Extend_ExpanderDelegate _Extend_Expander;
    public static void Extend_Expander(IntPtr typeClass)
    {
        _Extend_Expander(typeClass);
    }

    public delegate void Extend_FormattedTextDelegate(IntPtr typeClass);
    public static Extend_FormattedTextDelegate _Extend_FormattedText;
    public static void Extend_FormattedText(IntPtr typeClass)
    {
        _Extend_FormattedText(typeClass);
    }

    public delegate void Extend_FrameworkElementDelegate(IntPtr typeClass);
    public static Extend_FrameworkElementDelegate _Extend_FrameworkElement;
    public static void Extend_FrameworkElement(IntPtr typeClass)
    {
        _Extend_FrameworkElement(typeClass);
    }

    public delegate void Extend_FrameworkTemplateDelegate(IntPtr typeClass);
    public static Extend_FrameworkTemplateDelegate _Extend_FrameworkTemplate;
    public static void Extend_FrameworkTemplate(IntPtr typeClass)
    {
        _Extend_FrameworkTemplate(typeClass);
    }

    public delegate void Extend_FreezableCollectionDelegate(IntPtr typeClass);
    public static Extend_FreezableCollectionDelegate _Extend_FreezableCollection;
    public static void Extend_FreezableCollection(IntPtr typeClass)
    {
        _Extend_FreezableCollection(typeClass);
    }

    public delegate void Extend_GeometryGroupDelegate(IntPtr typeClass);
    public static Extend_GeometryGroupDelegate _Extend_GeometryGroup;
    public static void Extend_GeometryGroup(IntPtr typeClass)
    {
        _Extend_GeometryGroup(typeClass);
    }

    public delegate void Extend_GradientStopDelegate(IntPtr typeClass);
    public static Extend_GradientStopDelegate _Extend_GradientStop;
    public static void Extend_GradientStop(IntPtr typeClass)
    {
        _Extend_GradientStop(typeClass);
    }

    public delegate void Extend_GradientStopCollectionDelegate(IntPtr typeClass);
    public static Extend_GradientStopCollectionDelegate _Extend_GradientStopCollection;
    public static void Extend_GradientStopCollection(IntPtr typeClass)
    {
        _Extend_GradientStopCollection(typeClass);
    }

    public delegate void Extend_GridDelegate(IntPtr typeClass);
    public static Extend_GridDelegate _Extend_Grid;
    public static void Extend_Grid(IntPtr typeClass)
    {
        _Extend_Grid(typeClass);
    }

    public delegate void Extend_GroupBoxDelegate(IntPtr typeClass);
    public static Extend_GroupBoxDelegate _Extend_GroupBox;
    public static void Extend_GroupBox(IntPtr typeClass)
    {
        _Extend_GroupBox(typeClass);
    }

    public delegate void Extend_HeaderedContentControlDelegate(IntPtr typeClass);
    public static Extend_HeaderedContentControlDelegate _Extend_HeaderedContentControl;
    public static void Extend_HeaderedContentControl(IntPtr typeClass)
    {
        _Extend_HeaderedContentControl(typeClass);
    }

    public delegate void Extend_HeaderedItemsControlDelegate(IntPtr typeClass);
    public static Extend_HeaderedItemsControlDelegate _Extend_HeaderedItemsControl;
    public static void Extend_HeaderedItemsControl(IntPtr typeClass)
    {
        _Extend_HeaderedItemsControl(typeClass);
    }

    public delegate void Extend_ImageDelegate(IntPtr typeClass);
    public static Extend_ImageDelegate _Extend_Image;
    public static void Extend_Image(IntPtr typeClass)
    {
        _Extend_Image(typeClass);
    }

    public delegate void Extend_ImageAtlasListDelegate(IntPtr typeClass);
    public static Extend_ImageAtlasListDelegate _Extend_ImageAtlasList;
    public static void Extend_ImageAtlasList(IntPtr typeClass)
    {
        _Extend_ImageAtlasList(typeClass);
    }

    public delegate void Extend_ImageBrushDelegate(IntPtr typeClass);
    public static Extend_ImageBrushDelegate _Extend_ImageBrush;
    public static void Extend_ImageBrush(IntPtr typeClass)
    {
        _Extend_ImageBrush(typeClass);
    }

    public delegate void Extend_InputBindingDelegate(IntPtr typeClass);
    public static Extend_InputBindingDelegate _Extend_InputBinding;
    public static void Extend_InputBinding(IntPtr typeClass)
    {
        _Extend_InputBinding(typeClass);
    }

    public delegate void Extend_ItemCollectionDelegate(IntPtr typeClass);
    public static Extend_ItemCollectionDelegate _Extend_ItemCollection;
    public static void Extend_ItemCollection(IntPtr typeClass)
    {
        _Extend_ItemCollection(typeClass);
    }

    public delegate void Extend_ItemsControlDelegate(IntPtr typeClass);
    public static Extend_ItemsControlDelegate _Extend_ItemsControl;
    public static void Extend_ItemsControl(IntPtr typeClass)
    {
        _Extend_ItemsControl(typeClass);
    }

    public delegate void Extend_ItemsPanelTemplateDelegate(IntPtr typeClass);
    public static Extend_ItemsPanelTemplateDelegate _Extend_ItemsPanelTemplate;
    public static void Extend_ItemsPanelTemplate(IntPtr typeClass)
    {
        _Extend_ItemsPanelTemplate(typeClass);
    }

    public delegate void Extend_ItemsPresenterDelegate(IntPtr typeClass);
    public static Extend_ItemsPresenterDelegate _Extend_ItemsPresenter;
    public static void Extend_ItemsPresenter(IntPtr typeClass)
    {
        _Extend_ItemsPresenter(typeClass);
    }

    public delegate void Extend_KeyBindingDelegate(IntPtr typeClass);
    public static Extend_KeyBindingDelegate _Extend_KeyBinding;
    public static void Extend_KeyBinding(IntPtr typeClass)
    {
        _Extend_KeyBinding(typeClass);
    }

    public delegate void Extend_KeyboardNavigationDelegate(IntPtr typeClass);
    public static Extend_KeyboardNavigationDelegate _Extend_KeyboardNavigation;
    public static void Extend_KeyboardNavigation(IntPtr typeClass)
    {
        _Extend_KeyboardNavigation(typeClass);
    }

    public delegate void Extend_KeyGestureDelegate(IntPtr typeClass);
    public static Extend_KeyGestureDelegate _Extend_KeyGesture;
    public static void Extend_KeyGesture(IntPtr typeClass)
    {
        _Extend_KeyGesture(typeClass);
    }

    public delegate void Extend_LabelDelegate(IntPtr typeClass);
    public static Extend_LabelDelegate _Extend_Label;
    public static void Extend_Label(IntPtr typeClass)
    {
        _Extend_Label(typeClass);
    }

    public delegate void Extend_LineDelegate(IntPtr typeClass);
    public static Extend_LineDelegate _Extend_Line;
    public static void Extend_Line(IntPtr typeClass)
    {
        _Extend_Line(typeClass);
    }

    public delegate void Extend_LinearGradientBrushDelegate(IntPtr typeClass);
    public static Extend_LinearGradientBrushDelegate _Extend_LinearGradientBrush;
    public static void Extend_LinearGradientBrush(IntPtr typeClass)
    {
        _Extend_LinearGradientBrush(typeClass);
    }

    public delegate void Extend_LineGeometryDelegate(IntPtr typeClass);
    public static Extend_LineGeometryDelegate _Extend_LineGeometry;
    public static void Extend_LineGeometry(IntPtr typeClass)
    {
        _Extend_LineGeometry(typeClass);
    }

    public delegate void Extend_ListBoxDelegate(IntPtr typeClass);
    public static Extend_ListBoxDelegate _Extend_ListBox;
    public static void Extend_ListBox(IntPtr typeClass)
    {
        _Extend_ListBox(typeClass);
    }

    public delegate void Extend_ListBoxItemDelegate(IntPtr typeClass);
    public static Extend_ListBoxItemDelegate _Extend_ListBoxItem;
    public static void Extend_ListBoxItem(IntPtr typeClass)
    {
        _Extend_ListBoxItem(typeClass);
    }

    public delegate void Extend_Matrix3DProjectionDelegate(IntPtr typeClass);
    public static Extend_Matrix3DProjectionDelegate _Extend_Matrix3DProjection;
    public static void Extend_Matrix3DProjection(IntPtr typeClass)
    {
        _Extend_Matrix3DProjection(typeClass);
    }

    public delegate void Extend_MatrixTransformDelegate(IntPtr typeClass);
    public static Extend_MatrixTransformDelegate _Extend_MatrixTransform;
    public static void Extend_MatrixTransform(IntPtr typeClass)
    {
        _Extend_MatrixTransform(typeClass);
    }

    public delegate void Extend_MenuDelegate(IntPtr typeClass);
    public static Extend_MenuDelegate _Extend_Menu;
    public static void Extend_Menu(IntPtr typeClass)
    {
        _Extend_Menu(typeClass);
    }

    public delegate void Extend_MenuItemDelegate(IntPtr typeClass);
    public static Extend_MenuItemDelegate _Extend_MenuItem;
    public static void Extend_MenuItem(IntPtr typeClass)
    {
        _Extend_MenuItem(typeClass);
    }

    public delegate void Extend_MessageDialogDelegate(IntPtr typeClass);
    public static Extend_MessageDialogDelegate _Extend_MessageDialog;
    public static void Extend_MessageDialog(IntPtr typeClass)
    {
        _Extend_MessageDialog(typeClass);
    }

    public delegate void Extend_MultiTriggerDelegate(IntPtr typeClass);
    public static Extend_MultiTriggerDelegate _Extend_MultiTrigger;
    public static void Extend_MultiTrigger(IntPtr typeClass)
    {
        _Extend_MultiTrigger(typeClass);
    }

    public delegate void Extend_NameScopeDelegate(IntPtr typeClass);
    public static Extend_NameScopeDelegate _Extend_NameScope;
    public static void Extend_NameScope(IntPtr typeClass)
    {
        _Extend_NameScope(typeClass);
    }

    public delegate void Extend_PageDelegate(IntPtr typeClass);
    public static Extend_PageDelegate _Extend_Page;
    public static void Extend_Page(IntPtr typeClass)
    {
        _Extend_Page(typeClass);
    }

    public delegate void Extend_PanelDelegate(IntPtr typeClass);
    public static Extend_PanelDelegate _Extend_Panel;
    public static void Extend_Panel(IntPtr typeClass)
    {
        _Extend_Panel(typeClass);
    }

    public delegate void Extend_PasswordBoxDelegate(IntPtr typeClass);
    public static Extend_PasswordBoxDelegate _Extend_PasswordBox;
    public static void Extend_PasswordBox(IntPtr typeClass)
    {
        _Extend_PasswordBox(typeClass);
    }

    public delegate void Extend_PathDelegate(IntPtr typeClass);
    public static Extend_PathDelegate _Extend_Path;
    public static void Extend_Path(IntPtr typeClass)
    {
        _Extend_Path(typeClass);
    }

    public delegate void Extend_PenDelegate(IntPtr typeClass);
    public static Extend_PenDelegate _Extend_Pen;
    public static void Extend_Pen(IntPtr typeClass)
    {
        _Extend_Pen(typeClass);
    }

    public delegate void Extend_PlaneProjectionDelegate(IntPtr typeClass);
    public static Extend_PlaneProjectionDelegate _Extend_PlaneProjection;
    public static void Extend_PlaneProjection(IntPtr typeClass)
    {
        _Extend_PlaneProjection(typeClass);
    }

    public delegate void Extend_PopupDelegate(IntPtr typeClass);
    public static Extend_PopupDelegate _Extend_Popup;
    public static void Extend_Popup(IntPtr typeClass)
    {
        _Extend_Popup(typeClass);
    }

    public delegate void Extend_ProgressBarDelegate(IntPtr typeClass);
    public static Extend_ProgressBarDelegate _Extend_ProgressBar;
    public static void Extend_ProgressBar(IntPtr typeClass)
    {
        _Extend_ProgressBar(typeClass);
    }

    public delegate void Extend_PropertyPathDelegate(IntPtr typeClass);
    public static Extend_PropertyPathDelegate _Extend_PropertyPath;
    public static void Extend_PropertyPath(IntPtr typeClass)
    {
        _Extend_PropertyPath(typeClass);
    }

    public delegate void Extend_RadialGradientBrushDelegate(IntPtr typeClass);
    public static Extend_RadialGradientBrushDelegate _Extend_RadialGradientBrush;
    public static void Extend_RadialGradientBrush(IntPtr typeClass)
    {
        _Extend_RadialGradientBrush(typeClass);
    }

    public delegate void Extend_RadioButtonDelegate(IntPtr typeClass);
    public static Extend_RadioButtonDelegate _Extend_RadioButton;
    public static void Extend_RadioButton(IntPtr typeClass)
    {
        _Extend_RadioButton(typeClass);
    }

    public delegate void Extend_RangeBaseDelegate(IntPtr typeClass);
    public static Extend_RangeBaseDelegate _Extend_RangeBase;
    public static void Extend_RangeBase(IntPtr typeClass)
    {
        _Extend_RangeBase(typeClass);
    }

    public delegate void Extend_RectangleDelegate(IntPtr typeClass);
    public static Extend_RectangleDelegate _Extend_Rectangle;
    public static void Extend_Rectangle(IntPtr typeClass)
    {
        _Extend_Rectangle(typeClass);
    }

    public delegate void Extend_RectangleGeometryDelegate(IntPtr typeClass);
    public static Extend_RectangleGeometryDelegate _Extend_RectangleGeometry;
    public static void Extend_RectangleGeometry(IntPtr typeClass)
    {
        _Extend_RectangleGeometry(typeClass);
    }

    public delegate void Extend_RelativeSourceDelegate(IntPtr typeClass);
    public static Extend_RelativeSourceDelegate _Extend_RelativeSource;
    public static void Extend_RelativeSource(IntPtr typeClass)
    {
        _Extend_RelativeSource(typeClass);
    }

    public delegate void Extend_RepeatButtonDelegate(IntPtr typeClass);
    public static Extend_RepeatButtonDelegate _Extend_RepeatButton;
    public static void Extend_RepeatButton(IntPtr typeClass)
    {
        _Extend_RepeatButton(typeClass);
    }

    public delegate void Extend_ResourceDictionaryDelegate(IntPtr typeClass);
    public static Extend_ResourceDictionaryDelegate _Extend_ResourceDictionary;
    public static void Extend_ResourceDictionary(IntPtr typeClass)
    {
        _Extend_ResourceDictionary(typeClass);
    }

    public delegate void Extend_ResourceKeyStringDelegate(IntPtr typeClass);
    public static Extend_ResourceKeyStringDelegate _Extend_ResourceKeyString;
    public static void Extend_ResourceKeyString(IntPtr typeClass)
    {
        _Extend_ResourceKeyString(typeClass);
    }

    public delegate void Extend_ResourceKeyTypeDelegate(IntPtr typeClass);
    public static Extend_ResourceKeyTypeDelegate _Extend_ResourceKeyType;
    public static void Extend_ResourceKeyType(IntPtr typeClass)
    {
        _Extend_ResourceKeyType(typeClass);
    }

    public delegate void Extend_RotateTransformDelegate(IntPtr typeClass);
    public static Extend_RotateTransformDelegate _Extend_RotateTransform;
    public static void Extend_RotateTransform(IntPtr typeClass)
    {
        _Extend_RotateTransform(typeClass);
    }

    public delegate void Extend_RowDefinitionDelegate(IntPtr typeClass);
    public static Extend_RowDefinitionDelegate _Extend_RowDefinition;
    public static void Extend_RowDefinition(IntPtr typeClass)
    {
        _Extend_RowDefinition(typeClass);
    }

    public delegate void Extend_ScaleTransformDelegate(IntPtr typeClass);
    public static Extend_ScaleTransformDelegate _Extend_ScaleTransform;
    public static void Extend_ScaleTransform(IntPtr typeClass)
    {
        _Extend_ScaleTransform(typeClass);
    }

    public delegate void Extend_ScrollBarDelegate(IntPtr typeClass);
    public static Extend_ScrollBarDelegate _Extend_ScrollBar;
    public static void Extend_ScrollBar(IntPtr typeClass)
    {
        _Extend_ScrollBar(typeClass);
    }

    public delegate void Extend_ScrollContentPresenterDelegate(IntPtr typeClass);
    public static Extend_ScrollContentPresenterDelegate _Extend_ScrollContentPresenter;
    public static void Extend_ScrollContentPresenter(IntPtr typeClass)
    {
        _Extend_ScrollContentPresenter(typeClass);
    }

    public delegate void Extend_ScrollViewerDelegate(IntPtr typeClass);
    public static Extend_ScrollViewerDelegate _Extend_ScrollViewer;
    public static void Extend_ScrollViewer(IntPtr typeClass)
    {
        _Extend_ScrollViewer(typeClass);
    }

    public delegate void Extend_SelectorDelegate(IntPtr typeClass);
    public static Extend_SelectorDelegate _Extend_Selector;
    public static void Extend_Selector(IntPtr typeClass)
    {
        _Extend_Selector(typeClass);
    }

    public delegate void Extend_SeparatorDelegate(IntPtr typeClass);
    public static Extend_SeparatorDelegate _Extend_Separator;
    public static void Extend_Separator(IntPtr typeClass)
    {
        _Extend_Separator(typeClass);
    }

    public delegate void Extend_SetterDelegate(IntPtr typeClass);
    public static Extend_SetterDelegate _Extend_Setter;
    public static void Extend_Setter(IntPtr typeClass)
    {
        _Extend_Setter(typeClass);
    }

    public delegate void Extend_ShapeDelegate(IntPtr typeClass);
    public static Extend_ShapeDelegate _Extend_Shape;
    public static void Extend_Shape(IntPtr typeClass)
    {
        _Extend_Shape(typeClass);
    }

    public delegate void Extend_SkewTransformDelegate(IntPtr typeClass);
    public static Extend_SkewTransformDelegate _Extend_SkewTransform;
    public static void Extend_SkewTransform(IntPtr typeClass)
    {
        _Extend_SkewTransform(typeClass);
    }

    public delegate void Extend_SliderDelegate(IntPtr typeClass);
    public static Extend_SliderDelegate _Extend_Slider;
    public static void Extend_Slider(IntPtr typeClass)
    {
        _Extend_Slider(typeClass);
    }

    public delegate void Extend_SolidColorBrushDelegate(IntPtr typeClass);
    public static Extend_SolidColorBrushDelegate _Extend_SolidColorBrush;
    public static void Extend_SolidColorBrush(IntPtr typeClass)
    {
        _Extend_SolidColorBrush(typeClass);
    }

    public delegate void Extend_StackPanelDelegate(IntPtr typeClass);
    public static Extend_StackPanelDelegate _Extend_StackPanel;
    public static void Extend_StackPanel(IntPtr typeClass)
    {
        _Extend_StackPanel(typeClass);
    }

    public delegate void Extend_StatusBarDelegate(IntPtr typeClass);
    public static Extend_StatusBarDelegate _Extend_StatusBar;
    public static void Extend_StatusBar(IntPtr typeClass)
    {
        _Extend_StatusBar(typeClass);
    }

    public delegate void Extend_StatusBarItemDelegate(IntPtr typeClass);
    public static Extend_StatusBarItemDelegate _Extend_StatusBarItem;
    public static void Extend_StatusBarItem(IntPtr typeClass)
    {
        _Extend_StatusBarItem(typeClass);
    }

    public delegate void Extend_StreamGeometryDelegate(IntPtr typeClass);
    public static Extend_StreamGeometryDelegate _Extend_StreamGeometry;
    public static void Extend_StreamGeometry(IntPtr typeClass)
    {
        _Extend_StreamGeometry(typeClass);
    }

    public delegate void Extend_StyleDelegate(IntPtr typeClass);
    public static Extend_StyleDelegate _Extend_Style;
    public static void Extend_Style(IntPtr typeClass)
    {
        _Extend_Style(typeClass);
    }

    public delegate void Extend_TabControlDelegate(IntPtr typeClass);
    public static Extend_TabControlDelegate _Extend_TabControl;
    public static void Extend_TabControl(IntPtr typeClass)
    {
        _Extend_TabControl(typeClass);
    }

    public delegate void Extend_TabItemDelegate(IntPtr typeClass);
    public static Extend_TabItemDelegate _Extend_TabItem;
    public static void Extend_TabItem(IntPtr typeClass)
    {
        _Extend_TabItem(typeClass);
    }

    public delegate void Extend_TabPanelDelegate(IntPtr typeClass);
    public static Extend_TabPanelDelegate _Extend_TabPanel;
    public static void Extend_TabPanel(IntPtr typeClass)
    {
        _Extend_TabPanel(typeClass);
    }

    public delegate void Extend_TemplateBindingDelegate(IntPtr typeClass);
    public static Extend_TemplateBindingDelegate _Extend_TemplateBinding;
    public static void Extend_TemplateBinding(IntPtr typeClass)
    {
        _Extend_TemplateBinding(typeClass);
    }

    public delegate void Extend_TextBlockDelegate(IntPtr typeClass);
    public static Extend_TextBlockDelegate _Extend_TextBlock;
    public static void Extend_TextBlock(IntPtr typeClass)
    {
        _Extend_TextBlock(typeClass);
    }

    public delegate void Extend_TextBoxDelegate(IntPtr typeClass);
    public static Extend_TextBoxDelegate _Extend_TextBox;
    public static void Extend_TextBox(IntPtr typeClass)
    {
        _Extend_TextBox(typeClass);
    }

    public delegate void Extend_TextureSourceDelegate(IntPtr typeClass);
    public static Extend_TextureSourceDelegate _Extend_TextureSource;
    public static void Extend_TextureSource(IntPtr typeClass)
    {
        _Extend_TextureSource(typeClass);
    }

    public delegate void Extend_ThumbDelegate(IntPtr typeClass);
    public static Extend_ThumbDelegate _Extend_Thumb;
    public static void Extend_Thumb(IntPtr typeClass)
    {
        _Extend_Thumb(typeClass);
    }

    public delegate void Extend_TickBarDelegate(IntPtr typeClass);
    public static Extend_TickBarDelegate _Extend_TickBar;
    public static void Extend_TickBar(IntPtr typeClass)
    {
        _Extend_TickBar(typeClass);
    }

    public delegate void Extend_ToggleButtonDelegate(IntPtr typeClass);
    public static Extend_ToggleButtonDelegate _Extend_ToggleButton;
    public static void Extend_ToggleButton(IntPtr typeClass)
    {
        _Extend_ToggleButton(typeClass);
    }

    public delegate void Extend_ToolBarDelegate(IntPtr typeClass);
    public static Extend_ToolBarDelegate _Extend_ToolBar;
    public static void Extend_ToolBar(IntPtr typeClass)
    {
        _Extend_ToolBar(typeClass);
    }

    public delegate void Extend_ToolBarOverflowPanelDelegate(IntPtr typeClass);
    public static Extend_ToolBarOverflowPanelDelegate _Extend_ToolBarOverflowPanel;
    public static void Extend_ToolBarOverflowPanel(IntPtr typeClass)
    {
        _Extend_ToolBarOverflowPanel(typeClass);
    }

    public delegate void Extend_ToolBarPanelDelegate(IntPtr typeClass);
    public static Extend_ToolBarPanelDelegate _Extend_ToolBarPanel;
    public static void Extend_ToolBarPanel(IntPtr typeClass)
    {
        _Extend_ToolBarPanel(typeClass);
    }

    public delegate void Extend_ToolBarTrayDelegate(IntPtr typeClass);
    public static Extend_ToolBarTrayDelegate _Extend_ToolBarTray;
    public static void Extend_ToolBarTray(IntPtr typeClass)
    {
        _Extend_ToolBarTray(typeClass);
    }

    public delegate void Extend_ToolTipDelegate(IntPtr typeClass);
    public static Extend_ToolTipDelegate _Extend_ToolTip;
    public static void Extend_ToolTip(IntPtr typeClass)
    {
        _Extend_ToolTip(typeClass);
    }

    public delegate void Extend_TrackDelegate(IntPtr typeClass);
    public static Extend_TrackDelegate _Extend_Track;
    public static void Extend_Track(IntPtr typeClass)
    {
        _Extend_Track(typeClass);
    }

    public delegate void Extend_TransformGroupDelegate(IntPtr typeClass);
    public static Extend_TransformGroupDelegate _Extend_TransformGroup;
    public static void Extend_TransformGroup(IntPtr typeClass)
    {
        _Extend_TransformGroup(typeClass);
    }

    public delegate void Extend_TranslateTransformDelegate(IntPtr typeClass);
    public static Extend_TranslateTransformDelegate _Extend_TranslateTransform;
    public static void Extend_TranslateTransform(IntPtr typeClass)
    {
        _Extend_TranslateTransform(typeClass);
    }

    public delegate void Extend_TreeViewDelegate(IntPtr typeClass);
    public static Extend_TreeViewDelegate _Extend_TreeView;
    public static void Extend_TreeView(IntPtr typeClass)
    {
        _Extend_TreeView(typeClass);
    }

    public delegate void Extend_TreeViewItemDelegate(IntPtr typeClass);
    public static Extend_TreeViewItemDelegate _Extend_TreeViewItem;
    public static void Extend_TreeViewItem(IntPtr typeClass)
    {
        _Extend_TreeViewItem(typeClass);
    }

    public delegate void Extend_TriggerDelegate(IntPtr typeClass);
    public static Extend_TriggerDelegate _Extend_Trigger;
    public static void Extend_Trigger(IntPtr typeClass)
    {
        _Extend_Trigger(typeClass);
    }

    public delegate void Extend_TriggerCollectionDelegate(IntPtr typeClass);
    public static Extend_TriggerCollectionDelegate _Extend_TriggerCollection;
    public static void Extend_TriggerCollection(IntPtr typeClass)
    {
        _Extend_TriggerCollection(typeClass);
    }

    public delegate void Extend_UIElementDelegate(IntPtr typeClass);
    public static Extend_UIElementDelegate _Extend_UIElement;
    public static void Extend_UIElement(IntPtr typeClass)
    {
        _Extend_UIElement(typeClass);
    }

    public delegate void Extend_UIElementCollectionDelegate(IntPtr typeClass);
    public static Extend_UIElementCollectionDelegate _Extend_UIElementCollection;
    public static void Extend_UIElementCollection(IntPtr typeClass)
    {
        _Extend_UIElementCollection(typeClass);
    }

    public delegate void Extend_UserControlDelegate(IntPtr typeClass);
    public static Extend_UserControlDelegate _Extend_UserControl;
    public static void Extend_UserControl(IntPtr typeClass)
    {
        _Extend_UserControl(typeClass);
    }

    public delegate void Extend_ViewboxDelegate(IntPtr typeClass);
    public static Extend_ViewboxDelegate _Extend_Viewbox;
    public static void Extend_Viewbox(IntPtr typeClass)
    {
        _Extend_Viewbox(typeClass);
    }

    public delegate void Extend_VisualDelegate(IntPtr typeClass);
    public static Extend_VisualDelegate _Extend_Visual;
    public static void Extend_Visual(IntPtr typeClass)
    {
        _Extend_Visual(typeClass);
    }

    public delegate void Extend_VisualBrushDelegate(IntPtr typeClass);
    public static Extend_VisualBrushDelegate _Extend_VisualBrush;
    public static void Extend_VisualBrush(IntPtr typeClass)
    {
        _Extend_VisualBrush(typeClass);
    }

    public delegate void Extend_VisualCollectionDelegate(IntPtr typeClass);
    public static Extend_VisualCollectionDelegate _Extend_VisualCollection;
    public static void Extend_VisualCollection(IntPtr typeClass)
    {
        _Extend_VisualCollection(typeClass);
    }

    public delegate void Extend_WindowDelegate(IntPtr typeClass);
    public static Extend_WindowDelegate _Extend_Window;
    public static void Extend_Window(IntPtr typeClass)
    {
        _Extend_Window(typeClass);
    }

    public delegate void Extend_WrapPanelDelegate(IntPtr typeClass);
    public static Extend_WrapPanelDelegate _Extend_WrapPanel;
    public static void Extend_WrapPanel(IntPtr typeClass)
    {
        _Extend_WrapPanel(typeClass);
    }

    public delegate IntPtr new_SerializableComponentDelegate();
    public static new_SerializableComponentDelegate _new_SerializableComponent;
    public static IntPtr new_SerializableComponent()
    {
        IntPtr ret = _new_SerializableComponent();

        return ret;
    }

    public delegate void delete_SerializableComponentDelegate(HandleRef jarg1);
    public static delete_SerializableComponentDelegate _delete_SerializableComponent;
    public static void delete_SerializableComponent(HandleRef jarg1)
    {
        _delete_SerializableComponent(jarg1);
    }

    public delegate IntPtr new_DependencyPropertyChangedEventArgsDelegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static new_DependencyPropertyChangedEventArgsDelegate _new_DependencyPropertyChangedEventArgs;
    public static IntPtr new_DependencyPropertyChangedEventArgs(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        IntPtr ret = _new_DependencyPropertyChangedEventArgs(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void delete_DependencyPropertyChangedEventArgsDelegate(HandleRef jarg1);
    public static delete_DependencyPropertyChangedEventArgsDelegate _delete_DependencyPropertyChangedEventArgs;
    public static void delete_DependencyPropertyChangedEventArgs(HandleRef jarg1)
    {
        _delete_DependencyPropertyChangedEventArgs(jarg1);
    }

    public delegate void delete_DependencyPropertyDelegate(HandleRef jarg1);
    public static delete_DependencyPropertyDelegate _delete_DependencyProperty;
    public static void delete_DependencyProperty(HandleRef jarg1)
    {
        _delete_DependencyProperty(jarg1);
    }

    public delegate IntPtr new_PropertyMetadata__SWIG_0Delegate();
    public static new_PropertyMetadata__SWIG_0Delegate _new_PropertyMetadata__SWIG_0;
    public static IntPtr new_PropertyMetadata__SWIG_0()
    {
        IntPtr ret = _new_PropertyMetadata__SWIG_0();

        return ret;
    }

    public delegate IntPtr new_PropertyMetadata__SWIG_1Delegate(HandleRef jarg1);
    public static new_PropertyMetadata__SWIG_1Delegate _new_PropertyMetadata__SWIG_1;
    public static IntPtr new_PropertyMetadata__SWIG_1(HandleRef jarg1)
    {
        IntPtr ret = _new_PropertyMetadata__SWIG_1(jarg1);

        return ret;
    }

    public delegate IntPtr new_PropertyMetadata__SWIG_2Delegate(HandleRef jarg1);
    public static new_PropertyMetadata__SWIG_2Delegate _new_PropertyMetadata__SWIG_2;
    public static IntPtr new_PropertyMetadata__SWIG_2(HandleRef jarg1)
    {
        IntPtr ret = _new_PropertyMetadata__SWIG_2(jarg1);

        return ret;
    }

    public delegate IntPtr new_PropertyMetadata__SWIG_3Delegate(HandleRef jarg1);
    public static new_PropertyMetadata__SWIG_3Delegate _new_PropertyMetadata__SWIG_3;
    public static IntPtr new_PropertyMetadata__SWIG_3(HandleRef jarg1)
    {
        IntPtr ret = _new_PropertyMetadata__SWIG_3(jarg1);

        return ret;
    }

    public delegate IntPtr new_PropertyMetadata__SWIG_4Delegate(HandleRef jarg1, HandleRef jarg2);
    public static new_PropertyMetadata__SWIG_4Delegate _new_PropertyMetadata__SWIG_4;
    public static IntPtr new_PropertyMetadata__SWIG_4(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_PropertyMetadata__SWIG_4(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_PropertyMetadata__SWIG_5Delegate(HandleRef jarg1, HandleRef jarg2);
    public static new_PropertyMetadata__SWIG_5Delegate _new_PropertyMetadata__SWIG_5;
    public static IntPtr new_PropertyMetadata__SWIG_5(HandleRef jarg1, HandleRef jarg2)
    {
        IntPtr ret = _new_PropertyMetadata__SWIG_5(jarg1, jarg2);

        return ret;
    }

    public delegate IntPtr new_PropertyMetadata__SWIG_6Delegate(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);
    public static new_PropertyMetadata__SWIG_6Delegate _new_PropertyMetadata__SWIG_6;
    public static IntPtr new_PropertyMetadata__SWIG_6(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3)
    {
        IntPtr ret = _new_PropertyMetadata__SWIG_6(jarg1, jarg2, jarg3);

        return ret;
    }

    public delegate void delete_PropertyMetadataDelegate(HandleRef jarg1);
    public static delete_PropertyMetadataDelegate _delete_PropertyMetadata;
    public static void delete_PropertyMetadata(HandleRef jarg1)
    {
        _delete_PropertyMetadata(jarg1);
    }

    public delegate void UIElement_AllowDropProperty_setDelegate(HandleRef jarg1);
    public static UIElement_AllowDropProperty_setDelegate _UIElement_AllowDropProperty_set;
    public static void UIElement_AllowDropProperty_set(HandleRef jarg1)
    {
        _UIElement_AllowDropProperty_set(jarg1);
    }

    public delegate IntPtr UIElement_AllowDropProperty_getDelegate();
    public static UIElement_AllowDropProperty_getDelegate _UIElement_AllowDropProperty_get;
    public static IntPtr UIElement_AllowDropProperty_get()
    {
        IntPtr ret = _UIElement_AllowDropProperty_get();

        return ret;
    }

    public delegate void UIElement_ClipProperty_setDelegate(HandleRef jarg1);
    public static UIElement_ClipProperty_setDelegate _UIElement_ClipProperty_set;
    public static void UIElement_ClipProperty_set(HandleRef jarg1)
    {
        _UIElement_ClipProperty_set(jarg1);
    }

    public delegate IntPtr UIElement_ClipProperty_getDelegate();
    public static UIElement_ClipProperty_getDelegate _UIElement_ClipProperty_get;
    public static IntPtr UIElement_ClipProperty_get()
    {
        IntPtr ret = _UIElement_ClipProperty_get();

        return ret;
    }

    public delegate void UIElement_ClipToBoundsProperty_setDelegate(HandleRef jarg1);
    public static UIElement_ClipToBoundsProperty_setDelegate _UIElement_ClipToBoundsProperty_set;
    public static void UIElement_ClipToBoundsProperty_set(HandleRef jarg1)
    {
        _UIElement_ClipToBoundsProperty_set(jarg1);
    }

    public delegate IntPtr UIElement_ClipToBoundsProperty_getDelegate();
    public static UIElement_ClipToBoundsProperty_getDelegate _UIElement_ClipToBoundsProperty_get;
    public static IntPtr UIElement_ClipToBoundsProperty_get()
    {
        IntPtr ret = _UIElement_ClipToBoundsProperty_get();

        return ret;
    }

    public delegate void UIElement_EffectProperty_setDelegate(HandleRef jarg1);
    public static UIElement_EffectProperty_setDelegate _UIElement_EffectProperty_set;
    public static void UIElement_EffectProperty_set(HandleRef jarg1)
    {
        _UIElement_EffectProperty_set(jarg1);
    }

    public delegate IntPtr UIElement_EffectProperty_getDelegate();
    public static UIElement_EffectProperty_getDelegate _UIElement_EffectProperty_get;
    public static IntPtr UIElement_EffectProperty_get()
    {
        IntPtr ret = _UIElement_EffectProperty_get();

        return ret;
    }

    public delegate void UIElement_FocusableProperty_setDelegate(HandleRef jarg1);
    public static UIElement_FocusableProperty_setDelegate _UIElement_FocusableProperty_set;
    public static void UIElement_FocusableProperty_set(HandleRef jarg1)
    {
        _UIElement_FocusableProperty_set(jarg1);
    }

    public delegate IntPtr UIElement_FocusableProperty_getDelegate();
    public static UIElement_FocusableProperty_getDelegate _UIElement_FocusableProperty_get;
    public static IntPtr UIElement_FocusableProperty_get()
    {
        IntPtr ret = _UIElement_FocusableProperty_get();

        return ret;
    }

    public delegate void UIElement_IsEnabledProperty_setDelegate(HandleRef jarg1);
    public static UIElement_IsEnabledProperty_setDelegate _UIElement_IsEnabledProperty_set;
    public static void UIElement_IsEnabledProperty_set(HandleRef jarg1)
    {
        _UIElement_IsEnabledProperty_set(jarg1);
    }

    public delegate IntPtr UIElement_IsEnabledProperty_getDelegate();
    public static UIElement_IsEnabledProperty_getDelegate _UIElement_IsEnabledProperty_get;
    public static IntPtr UIElement_IsEnabledProperty_get()
    {
        IntPtr ret = _UIElement_IsEnabledProperty_get();

        return ret;
    }

    public delegate void UIElement_IsFocusedProperty_setDelegate(HandleRef jarg1);
    public static UIElement_IsFocusedProperty_setDelegate _UIElement_IsFocusedProperty_set;
    public static void UIElement_IsFocusedProperty_set(HandleRef jarg1)
    {
        _UIElement_IsFocusedProperty_set(jarg1);
    }

    public delegate IntPtr UIElement_IsFocusedProperty_getDelegate();
    public static UIElement_IsFocusedProperty_getDelegate _UIElement_IsFocusedProperty_get;
    public static IntPtr UIElement_IsFocusedProperty_get()
    {
        IntPtr ret = _UIElement_IsFocusedProperty_get();

        return ret;
    }

    public delegate void UIElement_IsHitTestVisibleProperty_setDelegate(HandleRef jarg1);
    public static UIElement_IsHitTestVisibleProperty_setDelegate _UIElement_IsHitTestVisibleProperty_set;
    public static void UIElement_IsHitTestVisibleProperty_set(HandleRef jarg1)
    {
        _UIElement_IsHitTestVisibleProperty_set(jarg1);
    }

    public delegate IntPtr UIElement_IsHitTestVisibleProperty_getDelegate();
    public static UIElement_IsHitTestVisibleProperty_getDelegate _UIElement_IsHitTestVisibleProperty_get;
    public static IntPtr UIElement_IsHitTestVisibleProperty_get()
    {
        IntPtr ret = _UIElement_IsHitTestVisibleProperty_get();

        return ret;
    }

    public delegate void UIElement_IsKeyboardFocusedProperty_setDelegate(HandleRef jarg1);
    public static UIElement_IsKeyboardFocusedProperty_setDelegate _UIElement_IsKeyboardFocusedProperty_set;
    public static void UIElement_IsKeyboardFocusedProperty_set(HandleRef jarg1)
    {
        _UIElement_IsKeyboardFocusedProperty_set(jarg1);
    }

    public delegate IntPtr UIElement_IsKeyboardFocusedProperty_getDelegate();
    public static UIElement_IsKeyboardFocusedProperty_getDelegate _UIElement_IsKeyboardFocusedProperty_get;
    public static IntPtr UIElement_IsKeyboardFocusedProperty_get()
    {
        IntPtr ret = _UIElement_IsKeyboardFocusedProperty_get();

        return ret;
    }

    public delegate void UIElement_IsKeyboardFocusWithinProperty_setDelegate(HandleRef jarg1);
    public static UIElement_IsKeyboardFocusWithinProperty_setDelegate _UIElement_IsKeyboardFocusWithinProperty_set;
    public static void UIElement_IsKeyboardFocusWithinProperty_set(HandleRef jarg1)
    {
        _UIElement_IsKeyboardFocusWithinProperty_set(jarg1);
    }

    public delegate IntPtr UIElement_IsKeyboardFocusWithinProperty_getDelegate();
    public static UIElement_IsKeyboardFocusWithinProperty_getDelegate _UIElement_IsKeyboardFocusWithinProperty_get;
    public static IntPtr UIElement_IsKeyboardFocusWithinProperty_get()
    {
        IntPtr ret = _UIElement_IsKeyboardFocusWithinProperty_get();

        return ret;
    }

    public delegate void UIElement_IsMouseCapturedProperty_setDelegate(HandleRef jarg1);
    public static UIElement_IsMouseCapturedProperty_setDelegate _UIElement_IsMouseCapturedProperty_set;
    public static void UIElement_IsMouseCapturedProperty_set(HandleRef jarg1)
    {
        _UIElement_IsMouseCapturedProperty_set(jarg1);
    }

    public delegate IntPtr UIElement_IsMouseCapturedProperty_getDelegate();
    public static UIElement_IsMouseCapturedProperty_getDelegate _UIElement_IsMouseCapturedProperty_get;
    public static IntPtr UIElement_IsMouseCapturedProperty_get()
    {
        IntPtr ret = _UIElement_IsMouseCapturedProperty_get();

        return ret;
    }

    public delegate void UIElement_IsMouseCaptureWithinProperty_setDelegate(HandleRef jarg1);
    public static UIElement_IsMouseCaptureWithinProperty_setDelegate _UIElement_IsMouseCaptureWithinProperty_set;
    public static void UIElement_IsMouseCaptureWithinProperty_set(HandleRef jarg1)
    {
        _UIElement_IsMouseCaptureWithinProperty_set(jarg1);
    }

    public delegate IntPtr UIElement_IsMouseCaptureWithinProperty_getDelegate();
    public static UIElement_IsMouseCaptureWithinProperty_getDelegate _UIElement_IsMouseCaptureWithinProperty_get;
    public static IntPtr UIElement_IsMouseCaptureWithinProperty_get()
    {
        IntPtr ret = _UIElement_IsMouseCaptureWithinProperty_get();

        return ret;
    }

    public delegate void UIElement_IsMouseDirectlyOverProperty_setDelegate(HandleRef jarg1);
    public static UIElement_IsMouseDirectlyOverProperty_setDelegate _UIElement_IsMouseDirectlyOverProperty_set;
    public static void UIElement_IsMouseDirectlyOverProperty_set(HandleRef jarg1)
    {
        _UIElement_IsMouseDirectlyOverProperty_set(jarg1);
    }

    public delegate IntPtr UIElement_IsMouseDirectlyOverProperty_getDelegate();
    public static UIElement_IsMouseDirectlyOverProperty_getDelegate _UIElement_IsMouseDirectlyOverProperty_get;
    public static IntPtr UIElement_IsMouseDirectlyOverProperty_get()
    {
        IntPtr ret = _UIElement_IsMouseDirectlyOverProperty_get();

        return ret;
    }

    public delegate void UIElement_IsMouseOverProperty_setDelegate(HandleRef jarg1);
    public static UIElement_IsMouseOverProperty_setDelegate _UIElement_IsMouseOverProperty_set;
    public static void UIElement_IsMouseOverProperty_set(HandleRef jarg1)
    {
        _UIElement_IsMouseOverProperty_set(jarg1);
    }

    public delegate IntPtr UIElement_IsMouseOverProperty_getDelegate();
    public static UIElement_IsMouseOverProperty_getDelegate _UIElement_IsMouseOverProperty_get;
    public static IntPtr UIElement_IsMouseOverProperty_get()
    {
        IntPtr ret = _UIElement_IsMouseOverProperty_get();

        return ret;
    }

    public delegate void UIElement_IsVisibleProperty_setDelegate(HandleRef jarg1);
    public static UIElement_IsVisibleProperty_setDelegate _UIElement_IsVisibleProperty_set;
    public static void UIElement_IsVisibleProperty_set(HandleRef jarg1)
    {
        _UIElement_IsVisibleProperty_set(jarg1);
    }

    public delegate IntPtr UIElement_IsVisibleProperty_getDelegate();
    public static UIElement_IsVisibleProperty_getDelegate _UIElement_IsVisibleProperty_get;
    public static IntPtr UIElement_IsVisibleProperty_get()
    {
        IntPtr ret = _UIElement_IsVisibleProperty_get();

        return ret;
    }

    public delegate void UIElement_OpacityMaskProperty_setDelegate(HandleRef jarg1);
    public static UIElement_OpacityMaskProperty_setDelegate _UIElement_OpacityMaskProperty_set;
    public static void UIElement_OpacityMaskProperty_set(HandleRef jarg1)
    {
        _UIElement_OpacityMaskProperty_set(jarg1);
    }

    public delegate IntPtr UIElement_OpacityMaskProperty_getDelegate();
    public static UIElement_OpacityMaskProperty_getDelegate _UIElement_OpacityMaskProperty_get;
    public static IntPtr UIElement_OpacityMaskProperty_get()
    {
        IntPtr ret = _UIElement_OpacityMaskProperty_get();

        return ret;
    }

    public delegate void UIElement_OpacityProperty_setDelegate(HandleRef jarg1);
    public static UIElement_OpacityProperty_setDelegate _UIElement_OpacityProperty_set;
    public static void UIElement_OpacityProperty_set(HandleRef jarg1)
    {
        _UIElement_OpacityProperty_set(jarg1);
    }

    public delegate IntPtr UIElement_OpacityProperty_getDelegate();
    public static UIElement_OpacityProperty_getDelegate _UIElement_OpacityProperty_get;
    public static IntPtr UIElement_OpacityProperty_get()
    {
        IntPtr ret = _UIElement_OpacityProperty_get();

        return ret;
    }

    public delegate void UIElement_ProjectionProperty_setDelegate(HandleRef jarg1);
    public static UIElement_ProjectionProperty_setDelegate _UIElement_ProjectionProperty_set;
    public static void UIElement_ProjectionProperty_set(HandleRef jarg1)
    {
        _UIElement_ProjectionProperty_set(jarg1);
    }

    public delegate IntPtr UIElement_ProjectionProperty_getDelegate();
    public static UIElement_ProjectionProperty_getDelegate _UIElement_ProjectionProperty_get;
    public static IntPtr UIElement_ProjectionProperty_get()
    {
        IntPtr ret = _UIElement_ProjectionProperty_get();

        return ret;
    }

    public delegate void UIElement_RenderTransformOriginProperty_setDelegate(HandleRef jarg1);
    public static UIElement_RenderTransformOriginProperty_setDelegate _UIElement_RenderTransformOriginProperty_set;
    public static void UIElement_RenderTransformOriginProperty_set(HandleRef jarg1)
    {
        _UIElement_RenderTransformOriginProperty_set(jarg1);
    }

    public delegate IntPtr UIElement_RenderTransformOriginProperty_getDelegate();
    public static UIElement_RenderTransformOriginProperty_getDelegate _UIElement_RenderTransformOriginProperty_get;
    public static IntPtr UIElement_RenderTransformOriginProperty_get()
    {
        IntPtr ret = _UIElement_RenderTransformOriginProperty_get();

        return ret;
    }

    public delegate void UIElement_RenderTransformProperty_setDelegate(HandleRef jarg1);
    public static UIElement_RenderTransformProperty_setDelegate _UIElement_RenderTransformProperty_set;
    public static void UIElement_RenderTransformProperty_set(HandleRef jarg1)
    {
        _UIElement_RenderTransformProperty_set(jarg1);
    }

    public delegate IntPtr UIElement_RenderTransformProperty_getDelegate();
    public static UIElement_RenderTransformProperty_getDelegate _UIElement_RenderTransformProperty_get;
    public static IntPtr UIElement_RenderTransformProperty_get()
    {
        IntPtr ret = _UIElement_RenderTransformProperty_get();

        return ret;
    }

    public delegate void UIElement_VisibilityProperty_setDelegate(HandleRef jarg1);
    public static UIElement_VisibilityProperty_setDelegate _UIElement_VisibilityProperty_set;
    public static void UIElement_VisibilityProperty_set(HandleRef jarg1)
    {
        _UIElement_VisibilityProperty_set(jarg1);
    }

    public delegate IntPtr UIElement_VisibilityProperty_getDelegate();
    public static UIElement_VisibilityProperty_getDelegate _UIElement_VisibilityProperty_get;
    public static IntPtr UIElement_VisibilityProperty_get()
    {
        IntPtr ret = _UIElement_VisibilityProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_ActualHeightProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_ActualHeightProperty_setDelegate _FrameworkElement_ActualHeightProperty_set;
    public static void FrameworkElement_ActualHeightProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_ActualHeightProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_ActualHeightProperty_getDelegate();
    public static FrameworkElement_ActualHeightProperty_getDelegate _FrameworkElement_ActualHeightProperty_get;
    public static IntPtr FrameworkElement_ActualHeightProperty_get()
    {
        IntPtr ret = _FrameworkElement_ActualHeightProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_ActualWidthProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_ActualWidthProperty_setDelegate _FrameworkElement_ActualWidthProperty_set;
    public static void FrameworkElement_ActualWidthProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_ActualWidthProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_ActualWidthProperty_getDelegate();
    public static FrameworkElement_ActualWidthProperty_getDelegate _FrameworkElement_ActualWidthProperty_get;
    public static IntPtr FrameworkElement_ActualWidthProperty_get()
    {
        IntPtr ret = _FrameworkElement_ActualWidthProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_ContextMenuProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_ContextMenuProperty_setDelegate _FrameworkElement_ContextMenuProperty_set;
    public static void FrameworkElement_ContextMenuProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_ContextMenuProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_ContextMenuProperty_getDelegate();
    public static FrameworkElement_ContextMenuProperty_getDelegate _FrameworkElement_ContextMenuProperty_get;
    public static IntPtr FrameworkElement_ContextMenuProperty_get()
    {
        IntPtr ret = _FrameworkElement_ContextMenuProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_CursorProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_CursorProperty_setDelegate _FrameworkElement_CursorProperty_set;
    public static void FrameworkElement_CursorProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_CursorProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_CursorProperty_getDelegate();
    public static FrameworkElement_CursorProperty_getDelegate _FrameworkElement_CursorProperty_get;
    public static IntPtr FrameworkElement_CursorProperty_get()
    {
        IntPtr ret = _FrameworkElement_CursorProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_DataContextProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_DataContextProperty_setDelegate _FrameworkElement_DataContextProperty_set;
    public static void FrameworkElement_DataContextProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_DataContextProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_DataContextProperty_getDelegate();
    public static FrameworkElement_DataContextProperty_getDelegate _FrameworkElement_DataContextProperty_get;
    public static IntPtr FrameworkElement_DataContextProperty_get()
    {
        IntPtr ret = _FrameworkElement_DataContextProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_DefaultStyleKeyProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_DefaultStyleKeyProperty_setDelegate _FrameworkElement_DefaultStyleKeyProperty_set;
    public static void FrameworkElement_DefaultStyleKeyProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_DefaultStyleKeyProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_DefaultStyleKeyProperty_getDelegate();
    public static FrameworkElement_DefaultStyleKeyProperty_getDelegate _FrameworkElement_DefaultStyleKeyProperty_get;
    public static IntPtr FrameworkElement_DefaultStyleKeyProperty_get()
    {
        IntPtr ret = _FrameworkElement_DefaultStyleKeyProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_FlowDirectionProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_FlowDirectionProperty_setDelegate _FrameworkElement_FlowDirectionProperty_set;
    public static void FrameworkElement_FlowDirectionProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_FlowDirectionProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_FlowDirectionProperty_getDelegate();
    public static FrameworkElement_FlowDirectionProperty_getDelegate _FrameworkElement_FlowDirectionProperty_get;
    public static IntPtr FrameworkElement_FlowDirectionProperty_get()
    {
        IntPtr ret = _FrameworkElement_FlowDirectionProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_FocusVisualStyleProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_FocusVisualStyleProperty_setDelegate _FrameworkElement_FocusVisualStyleProperty_set;
    public static void FrameworkElement_FocusVisualStyleProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_FocusVisualStyleProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_FocusVisualStyleProperty_getDelegate();
    public static FrameworkElement_FocusVisualStyleProperty_getDelegate _FrameworkElement_FocusVisualStyleProperty_get;
    public static IntPtr FrameworkElement_FocusVisualStyleProperty_get()
    {
        IntPtr ret = _FrameworkElement_FocusVisualStyleProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_ForceCursorProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_ForceCursorProperty_setDelegate _FrameworkElement_ForceCursorProperty_set;
    public static void FrameworkElement_ForceCursorProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_ForceCursorProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_ForceCursorProperty_getDelegate();
    public static FrameworkElement_ForceCursorProperty_getDelegate _FrameworkElement_ForceCursorProperty_get;
    public static IntPtr FrameworkElement_ForceCursorProperty_get()
    {
        IntPtr ret = _FrameworkElement_ForceCursorProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_HeightProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_HeightProperty_setDelegate _FrameworkElement_HeightProperty_set;
    public static void FrameworkElement_HeightProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_HeightProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_HeightProperty_getDelegate();
    public static FrameworkElement_HeightProperty_getDelegate _FrameworkElement_HeightProperty_get;
    public static IntPtr FrameworkElement_HeightProperty_get()
    {
        IntPtr ret = _FrameworkElement_HeightProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_HorizontalAlignmentProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_HorizontalAlignmentProperty_setDelegate _FrameworkElement_HorizontalAlignmentProperty_set;
    public static void FrameworkElement_HorizontalAlignmentProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_HorizontalAlignmentProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_HorizontalAlignmentProperty_getDelegate();
    public static FrameworkElement_HorizontalAlignmentProperty_getDelegate _FrameworkElement_HorizontalAlignmentProperty_get;
    public static IntPtr FrameworkElement_HorizontalAlignmentProperty_get()
    {
        IntPtr ret = _FrameworkElement_HorizontalAlignmentProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_InputScopeProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_InputScopeProperty_setDelegate _FrameworkElement_InputScopeProperty_set;
    public static void FrameworkElement_InputScopeProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_InputScopeProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_InputScopeProperty_getDelegate();
    public static FrameworkElement_InputScopeProperty_getDelegate _FrameworkElement_InputScopeProperty_get;
    public static IntPtr FrameworkElement_InputScopeProperty_get()
    {
        IntPtr ret = _FrameworkElement_InputScopeProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_LanguageProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_LanguageProperty_setDelegate _FrameworkElement_LanguageProperty_set;
    public static void FrameworkElement_LanguageProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_LanguageProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_LanguageProperty_getDelegate();
    public static FrameworkElement_LanguageProperty_getDelegate _FrameworkElement_LanguageProperty_get;
    public static IntPtr FrameworkElement_LanguageProperty_get()
    {
        IntPtr ret = _FrameworkElement_LanguageProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_LayoutTransformProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_LayoutTransformProperty_setDelegate _FrameworkElement_LayoutTransformProperty_set;
    public static void FrameworkElement_LayoutTransformProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_LayoutTransformProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_LayoutTransformProperty_getDelegate();
    public static FrameworkElement_LayoutTransformProperty_getDelegate _FrameworkElement_LayoutTransformProperty_get;
    public static IntPtr FrameworkElement_LayoutTransformProperty_get()
    {
        IntPtr ret = _FrameworkElement_LayoutTransformProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_MarginProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_MarginProperty_setDelegate _FrameworkElement_MarginProperty_set;
    public static void FrameworkElement_MarginProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_MarginProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_MarginProperty_getDelegate();
    public static FrameworkElement_MarginProperty_getDelegate _FrameworkElement_MarginProperty_get;
    public static IntPtr FrameworkElement_MarginProperty_get()
    {
        IntPtr ret = _FrameworkElement_MarginProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_MaxHeightProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_MaxHeightProperty_setDelegate _FrameworkElement_MaxHeightProperty_set;
    public static void FrameworkElement_MaxHeightProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_MaxHeightProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_MaxHeightProperty_getDelegate();
    public static FrameworkElement_MaxHeightProperty_getDelegate _FrameworkElement_MaxHeightProperty_get;
    public static IntPtr FrameworkElement_MaxHeightProperty_get()
    {
        IntPtr ret = _FrameworkElement_MaxHeightProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_MaxWidthProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_MaxWidthProperty_setDelegate _FrameworkElement_MaxWidthProperty_set;
    public static void FrameworkElement_MaxWidthProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_MaxWidthProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_MaxWidthProperty_getDelegate();
    public static FrameworkElement_MaxWidthProperty_getDelegate _FrameworkElement_MaxWidthProperty_get;
    public static IntPtr FrameworkElement_MaxWidthProperty_get()
    {
        IntPtr ret = _FrameworkElement_MaxWidthProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_MinHeightProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_MinHeightProperty_setDelegate _FrameworkElement_MinHeightProperty_set;
    public static void FrameworkElement_MinHeightProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_MinHeightProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_MinHeightProperty_getDelegate();
    public static FrameworkElement_MinHeightProperty_getDelegate _FrameworkElement_MinHeightProperty_get;
    public static IntPtr FrameworkElement_MinHeightProperty_get()
    {
        IntPtr ret = _FrameworkElement_MinHeightProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_MinWidthProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_MinWidthProperty_setDelegate _FrameworkElement_MinWidthProperty_set;
    public static void FrameworkElement_MinWidthProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_MinWidthProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_MinWidthProperty_getDelegate();
    public static FrameworkElement_MinWidthProperty_getDelegate _FrameworkElement_MinWidthProperty_get;
    public static IntPtr FrameworkElement_MinWidthProperty_get()
    {
        IntPtr ret = _FrameworkElement_MinWidthProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_NameProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_NameProperty_setDelegate _FrameworkElement_NameProperty_set;
    public static void FrameworkElement_NameProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_NameProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_NameProperty_getDelegate();
    public static FrameworkElement_NameProperty_getDelegate _FrameworkElement_NameProperty_get;
    public static IntPtr FrameworkElement_NameProperty_get()
    {
        IntPtr ret = _FrameworkElement_NameProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_OverridesDefaultStyleProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_OverridesDefaultStyleProperty_setDelegate _FrameworkElement_OverridesDefaultStyleProperty_set;
    public static void FrameworkElement_OverridesDefaultStyleProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_OverridesDefaultStyleProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_OverridesDefaultStyleProperty_getDelegate();
    public static FrameworkElement_OverridesDefaultStyleProperty_getDelegate _FrameworkElement_OverridesDefaultStyleProperty_get;
    public static IntPtr FrameworkElement_OverridesDefaultStyleProperty_get()
    {
        IntPtr ret = _FrameworkElement_OverridesDefaultStyleProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_StyleProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_StyleProperty_setDelegate _FrameworkElement_StyleProperty_set;
    public static void FrameworkElement_StyleProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_StyleProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_StyleProperty_getDelegate();
    public static FrameworkElement_StyleProperty_getDelegate _FrameworkElement_StyleProperty_get;
    public static IntPtr FrameworkElement_StyleProperty_get()
    {
        IntPtr ret = _FrameworkElement_StyleProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_TagProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_TagProperty_setDelegate _FrameworkElement_TagProperty_set;
    public static void FrameworkElement_TagProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_TagProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_TagProperty_getDelegate();
    public static FrameworkElement_TagProperty_getDelegate _FrameworkElement_TagProperty_get;
    public static IntPtr FrameworkElement_TagProperty_get()
    {
        IntPtr ret = _FrameworkElement_TagProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_ToolTipProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_ToolTipProperty_setDelegate _FrameworkElement_ToolTipProperty_set;
    public static void FrameworkElement_ToolTipProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_ToolTipProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_ToolTipProperty_getDelegate();
    public static FrameworkElement_ToolTipProperty_getDelegate _FrameworkElement_ToolTipProperty_get;
    public static IntPtr FrameworkElement_ToolTipProperty_get()
    {
        IntPtr ret = _FrameworkElement_ToolTipProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_UseLayoutRoundingProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_UseLayoutRoundingProperty_setDelegate _FrameworkElement_UseLayoutRoundingProperty_set;
    public static void FrameworkElement_UseLayoutRoundingProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_UseLayoutRoundingProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_UseLayoutRoundingProperty_getDelegate();
    public static FrameworkElement_UseLayoutRoundingProperty_getDelegate _FrameworkElement_UseLayoutRoundingProperty_get;
    public static IntPtr FrameworkElement_UseLayoutRoundingProperty_get()
    {
        IntPtr ret = _FrameworkElement_UseLayoutRoundingProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_VerticalAlignmentProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_VerticalAlignmentProperty_setDelegate _FrameworkElement_VerticalAlignmentProperty_set;
    public static void FrameworkElement_VerticalAlignmentProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_VerticalAlignmentProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_VerticalAlignmentProperty_getDelegate();
    public static FrameworkElement_VerticalAlignmentProperty_getDelegate _FrameworkElement_VerticalAlignmentProperty_get;
    public static IntPtr FrameworkElement_VerticalAlignmentProperty_get()
    {
        IntPtr ret = _FrameworkElement_VerticalAlignmentProperty_get();

        return ret;
    }

    public delegate void FrameworkElement_WidthProperty_setDelegate(HandleRef jarg1);
    public static FrameworkElement_WidthProperty_setDelegate _FrameworkElement_WidthProperty_set;
    public static void FrameworkElement_WidthProperty_set(HandleRef jarg1)
    {
        _FrameworkElement_WidthProperty_set(jarg1);
    }

    public delegate IntPtr FrameworkElement_WidthProperty_getDelegate();
    public static FrameworkElement_WidthProperty_getDelegate _FrameworkElement_WidthProperty_get;
    public static IntPtr FrameworkElement_WidthProperty_get()
    {
        IntPtr ret = _FrameworkElement_WidthProperty_get();

        return ret;
    }

    public delegate void Control_BackgroundProperty_setDelegate(HandleRef jarg1);
    public static Control_BackgroundProperty_setDelegate _Control_BackgroundProperty_set;
    public static void Control_BackgroundProperty_set(HandleRef jarg1)
    {
        _Control_BackgroundProperty_set(jarg1);
    }

    public delegate IntPtr Control_BackgroundProperty_getDelegate();
    public static Control_BackgroundProperty_getDelegate _Control_BackgroundProperty_get;
    public static IntPtr Control_BackgroundProperty_get()
    {
        IntPtr ret = _Control_BackgroundProperty_get();

        return ret;
    }

    public delegate void Control_BorderBrushProperty_setDelegate(HandleRef jarg1);
    public static Control_BorderBrushProperty_setDelegate _Control_BorderBrushProperty_set;
    public static void Control_BorderBrushProperty_set(HandleRef jarg1)
    {
        _Control_BorderBrushProperty_set(jarg1);
    }

    public delegate IntPtr Control_BorderBrushProperty_getDelegate();
    public static Control_BorderBrushProperty_getDelegate _Control_BorderBrushProperty_get;
    public static IntPtr Control_BorderBrushProperty_get()
    {
        IntPtr ret = _Control_BorderBrushProperty_get();

        return ret;
    }

    public delegate void Control_BorderThicknessProperty_setDelegate(HandleRef jarg1);
    public static Control_BorderThicknessProperty_setDelegate _Control_BorderThicknessProperty_set;
    public static void Control_BorderThicknessProperty_set(HandleRef jarg1)
    {
        _Control_BorderThicknessProperty_set(jarg1);
    }

    public delegate IntPtr Control_BorderThicknessProperty_getDelegate();
    public static Control_BorderThicknessProperty_getDelegate _Control_BorderThicknessProperty_get;
    public static IntPtr Control_BorderThicknessProperty_get()
    {
        IntPtr ret = _Control_BorderThicknessProperty_get();

        return ret;
    }

    public delegate void Control_FontFamilyProperty_setDelegate(HandleRef jarg1);
    public static Control_FontFamilyProperty_setDelegate _Control_FontFamilyProperty_set;
    public static void Control_FontFamilyProperty_set(HandleRef jarg1)
    {
        _Control_FontFamilyProperty_set(jarg1);
    }

    public delegate IntPtr Control_FontFamilyProperty_getDelegate();
    public static Control_FontFamilyProperty_getDelegate _Control_FontFamilyProperty_get;
    public static IntPtr Control_FontFamilyProperty_get()
    {
        IntPtr ret = _Control_FontFamilyProperty_get();

        return ret;
    }

    public delegate void Control_FontSizeProperty_setDelegate(HandleRef jarg1);
    public static Control_FontSizeProperty_setDelegate _Control_FontSizeProperty_set;
    public static void Control_FontSizeProperty_set(HandleRef jarg1)
    {
        _Control_FontSizeProperty_set(jarg1);
    }

    public delegate IntPtr Control_FontSizeProperty_getDelegate();
    public static Control_FontSizeProperty_getDelegate _Control_FontSizeProperty_get;
    public static IntPtr Control_FontSizeProperty_get()
    {
        IntPtr ret = _Control_FontSizeProperty_get();

        return ret;
    }

    public delegate void Control_FontStretchProperty_setDelegate(HandleRef jarg1);
    public static Control_FontStretchProperty_setDelegate _Control_FontStretchProperty_set;
    public static void Control_FontStretchProperty_set(HandleRef jarg1)
    {
        _Control_FontStretchProperty_set(jarg1);
    }

    public delegate IntPtr Control_FontStretchProperty_getDelegate();
    public static Control_FontStretchProperty_getDelegate _Control_FontStretchProperty_get;
    public static IntPtr Control_FontStretchProperty_get()
    {
        IntPtr ret = _Control_FontStretchProperty_get();

        return ret;
    }

    public delegate void Control_FontStyleProperty_setDelegate(HandleRef jarg1);
    public static Control_FontStyleProperty_setDelegate _Control_FontStyleProperty_set;
    public static void Control_FontStyleProperty_set(HandleRef jarg1)
    {
        _Control_FontStyleProperty_set(jarg1);
    }

    public delegate IntPtr Control_FontStyleProperty_getDelegate();
    public static Control_FontStyleProperty_getDelegate _Control_FontStyleProperty_get;
    public static IntPtr Control_FontStyleProperty_get()
    {
        IntPtr ret = _Control_FontStyleProperty_get();

        return ret;
    }

    public delegate void Control_FontWeightProperty_setDelegate(HandleRef jarg1);
    public static Control_FontWeightProperty_setDelegate _Control_FontWeightProperty_set;
    public static void Control_FontWeightProperty_set(HandleRef jarg1)
    {
        _Control_FontWeightProperty_set(jarg1);
    }

    public delegate IntPtr Control_FontWeightProperty_getDelegate();
    public static Control_FontWeightProperty_getDelegate _Control_FontWeightProperty_get;
    public static IntPtr Control_FontWeightProperty_get()
    {
        IntPtr ret = _Control_FontWeightProperty_get();

        return ret;
    }

    public delegate void Control_ForegroundProperty_setDelegate(HandleRef jarg1);
    public static Control_ForegroundProperty_setDelegate _Control_ForegroundProperty_set;
    public static void Control_ForegroundProperty_set(HandleRef jarg1)
    {
        _Control_ForegroundProperty_set(jarg1);
    }

    public delegate IntPtr Control_ForegroundProperty_getDelegate();
    public static Control_ForegroundProperty_getDelegate _Control_ForegroundProperty_get;
    public static IntPtr Control_ForegroundProperty_get()
    {
        IntPtr ret = _Control_ForegroundProperty_get();

        return ret;
    }

    public delegate void Control_HorizontalContentAlignmentProperty_setDelegate(HandleRef jarg1);
    public static Control_HorizontalContentAlignmentProperty_setDelegate _Control_HorizontalContentAlignmentProperty_set;
    public static void Control_HorizontalContentAlignmentProperty_set(HandleRef jarg1)
    {
        _Control_HorizontalContentAlignmentProperty_set(jarg1);
    }

    public delegate IntPtr Control_HorizontalContentAlignmentProperty_getDelegate();
    public static Control_HorizontalContentAlignmentProperty_getDelegate _Control_HorizontalContentAlignmentProperty_get;
    public static IntPtr Control_HorizontalContentAlignmentProperty_get()
    {
        IntPtr ret = _Control_HorizontalContentAlignmentProperty_get();

        return ret;
    }

    public delegate void Control_IsTabStopProperty_setDelegate(HandleRef jarg1);
    public static Control_IsTabStopProperty_setDelegate _Control_IsTabStopProperty_set;
    public static void Control_IsTabStopProperty_set(HandleRef jarg1)
    {
        _Control_IsTabStopProperty_set(jarg1);
    }

    public delegate IntPtr Control_IsTabStopProperty_getDelegate();
    public static Control_IsTabStopProperty_getDelegate _Control_IsTabStopProperty_get;
    public static IntPtr Control_IsTabStopProperty_get()
    {
        IntPtr ret = _Control_IsTabStopProperty_get();

        return ret;
    }

    public delegate void Control_PaddingProperty_setDelegate(HandleRef jarg1);
    public static Control_PaddingProperty_setDelegate _Control_PaddingProperty_set;
    public static void Control_PaddingProperty_set(HandleRef jarg1)
    {
        _Control_PaddingProperty_set(jarg1);
    }

    public delegate IntPtr Control_PaddingProperty_getDelegate();
    public static Control_PaddingProperty_getDelegate _Control_PaddingProperty_get;
    public static IntPtr Control_PaddingProperty_get()
    {
        IntPtr ret = _Control_PaddingProperty_get();

        return ret;
    }

    public delegate void Control_TabIndexProperty_setDelegate(HandleRef jarg1);
    public static Control_TabIndexProperty_setDelegate _Control_TabIndexProperty_set;
    public static void Control_TabIndexProperty_set(HandleRef jarg1)
    {
        _Control_TabIndexProperty_set(jarg1);
    }

    public delegate IntPtr Control_TabIndexProperty_getDelegate();
    public static Control_TabIndexProperty_getDelegate _Control_TabIndexProperty_get;
    public static IntPtr Control_TabIndexProperty_get()
    {
        IntPtr ret = _Control_TabIndexProperty_get();

        return ret;
    }

    public delegate void Control_TemplateProperty_setDelegate(HandleRef jarg1);
    public static Control_TemplateProperty_setDelegate _Control_TemplateProperty_set;
    public static void Control_TemplateProperty_set(HandleRef jarg1)
    {
        _Control_TemplateProperty_set(jarg1);
    }

    public delegate IntPtr Control_TemplateProperty_getDelegate();
    public static Control_TemplateProperty_getDelegate _Control_TemplateProperty_get;
    public static IntPtr Control_TemplateProperty_get()
    {
        IntPtr ret = _Control_TemplateProperty_get();

        return ret;
    }

    public delegate void Control_VerticalContentAlignmentProperty_setDelegate(HandleRef jarg1);
    public static Control_VerticalContentAlignmentProperty_setDelegate _Control_VerticalContentAlignmentProperty_set;
    public static void Control_VerticalContentAlignmentProperty_set(HandleRef jarg1)
    {
        _Control_VerticalContentAlignmentProperty_set(jarg1);
    }

    public delegate IntPtr Control_VerticalContentAlignmentProperty_getDelegate();
    public static Control_VerticalContentAlignmentProperty_getDelegate _Control_VerticalContentAlignmentProperty_get;
    public static IntPtr Control_VerticalContentAlignmentProperty_get()
    {
        IntPtr ret = _Control_VerticalContentAlignmentProperty_get();

        return ret;
    }

    public delegate void ContentControl_ContentProperty_setDelegate(HandleRef jarg1);
    public static ContentControl_ContentProperty_setDelegate _ContentControl_ContentProperty_set;
    public static void ContentControl_ContentProperty_set(HandleRef jarg1)
    {
        _ContentControl_ContentProperty_set(jarg1);
    }

    public delegate IntPtr ContentControl_ContentProperty_getDelegate();
    public static ContentControl_ContentProperty_getDelegate _ContentControl_ContentProperty_get;
    public static IntPtr ContentControl_ContentProperty_get()
    {
        IntPtr ret = _ContentControl_ContentProperty_get();

        return ret;
    }

    public delegate void ContentControl_ContentTemplateProperty_setDelegate(HandleRef jarg1);
    public static ContentControl_ContentTemplateProperty_setDelegate _ContentControl_ContentTemplateProperty_set;
    public static void ContentControl_ContentTemplateProperty_set(HandleRef jarg1)
    {
        _ContentControl_ContentTemplateProperty_set(jarg1);
    }

    public delegate IntPtr ContentControl_ContentTemplateProperty_getDelegate();
    public static ContentControl_ContentTemplateProperty_getDelegate _ContentControl_ContentTemplateProperty_get;
    public static IntPtr ContentControl_ContentTemplateProperty_get()
    {
        IntPtr ret = _ContentControl_ContentTemplateProperty_get();

        return ret;
    }

    public delegate void ContentControl_ContentTemplateSelectorProperty_setDelegate(HandleRef jarg1);
    public static ContentControl_ContentTemplateSelectorProperty_setDelegate _ContentControl_ContentTemplateSelectorProperty_set;
    public static void ContentControl_ContentTemplateSelectorProperty_set(HandleRef jarg1)
    {
        _ContentControl_ContentTemplateSelectorProperty_set(jarg1);
    }

    public delegate IntPtr ContentControl_ContentTemplateSelectorProperty_getDelegate();
    public static ContentControl_ContentTemplateSelectorProperty_getDelegate _ContentControl_ContentTemplateSelectorProperty_get;
    public static IntPtr ContentControl_ContentTemplateSelectorProperty_get()
    {
        IntPtr ret = _ContentControl_ContentTemplateSelectorProperty_get();

        return ret;
    }

    public delegate void ContentControl_HasContentProperty_setDelegate(HandleRef jarg1);
    public static ContentControl_HasContentProperty_setDelegate _ContentControl_HasContentProperty_set;
    public static void ContentControl_HasContentProperty_set(HandleRef jarg1)
    {
        _ContentControl_HasContentProperty_set(jarg1);
    }

    public delegate IntPtr ContentControl_HasContentProperty_getDelegate();
    public static ContentControl_HasContentProperty_getDelegate _ContentControl_HasContentProperty_get;
    public static IntPtr ContentControl_HasContentProperty_get()
    {
        IntPtr ret = _ContentControl_HasContentProperty_get();

        return ret;
    }

    public delegate void Panel_BackgroundProperty_setDelegate(HandleRef jarg1);
    public static Panel_BackgroundProperty_setDelegate _Panel_BackgroundProperty_set;
    public static void Panel_BackgroundProperty_set(HandleRef jarg1)
    {
        _Panel_BackgroundProperty_set(jarg1);
    }

    public delegate IntPtr Panel_BackgroundProperty_getDelegate();
    public static Panel_BackgroundProperty_getDelegate _Panel_BackgroundProperty_get;
    public static IntPtr Panel_BackgroundProperty_get()
    {
        IntPtr ret = _Panel_BackgroundProperty_get();

        return ret;
    }

    public delegate void Panel_IsItemsHostProperty_setDelegate(HandleRef jarg1);
    public static Panel_IsItemsHostProperty_setDelegate _Panel_IsItemsHostProperty_set;
    public static void Panel_IsItemsHostProperty_set(HandleRef jarg1)
    {
        _Panel_IsItemsHostProperty_set(jarg1);
    }

    public delegate IntPtr Panel_IsItemsHostProperty_getDelegate();
    public static Panel_IsItemsHostProperty_getDelegate _Panel_IsItemsHostProperty_get;
    public static IntPtr Panel_IsItemsHostProperty_get()
    {
        IntPtr ret = _Panel_IsItemsHostProperty_get();

        return ret;
    }

    public delegate void Panel_ZIndexProperty_setDelegate(HandleRef jarg1);
    public static Panel_ZIndexProperty_setDelegate _Panel_ZIndexProperty_set;
    public static void Panel_ZIndexProperty_set(HandleRef jarg1)
    {
        _Panel_ZIndexProperty_set(jarg1);
    }

    public delegate IntPtr Panel_ZIndexProperty_getDelegate();
    public static Panel_ZIndexProperty_getDelegate _Panel_ZIndexProperty_get;
    public static IntPtr Panel_ZIndexProperty_get()
    {
        IntPtr ret = _Panel_ZIndexProperty_get();

        return ret;
    }

    public delegate void ItemsControl_DisplayMemberPathProperty_setDelegate(HandleRef jarg1);
    public static ItemsControl_DisplayMemberPathProperty_setDelegate _ItemsControl_DisplayMemberPathProperty_set;
    public static void ItemsControl_DisplayMemberPathProperty_set(HandleRef jarg1)
    {
        _ItemsControl_DisplayMemberPathProperty_set(jarg1);
    }

    public delegate IntPtr ItemsControl_DisplayMemberPathProperty_getDelegate();
    public static ItemsControl_DisplayMemberPathProperty_getDelegate _ItemsControl_DisplayMemberPathProperty_get;
    public static IntPtr ItemsControl_DisplayMemberPathProperty_get()
    {
        IntPtr ret = _ItemsControl_DisplayMemberPathProperty_get();

        return ret;
    }

    public delegate void ItemsControl_GroupStyleSelectorProperty_setDelegate(HandleRef jarg1);
    public static ItemsControl_GroupStyleSelectorProperty_setDelegate _ItemsControl_GroupStyleSelectorProperty_set;
    public static void ItemsControl_GroupStyleSelectorProperty_set(HandleRef jarg1)
    {
        _ItemsControl_GroupStyleSelectorProperty_set(jarg1);
    }

    public delegate IntPtr ItemsControl_GroupStyleSelectorProperty_getDelegate();
    public static ItemsControl_GroupStyleSelectorProperty_getDelegate _ItemsControl_GroupStyleSelectorProperty_get;
    public static IntPtr ItemsControl_GroupStyleSelectorProperty_get()
    {
        IntPtr ret = _ItemsControl_GroupStyleSelectorProperty_get();

        return ret;
    }

    public delegate void ItemsControl_HasItemsProperty_setDelegate(HandleRef jarg1);
    public static ItemsControl_HasItemsProperty_setDelegate _ItemsControl_HasItemsProperty_set;
    public static void ItemsControl_HasItemsProperty_set(HandleRef jarg1)
    {
        _ItemsControl_HasItemsProperty_set(jarg1);
    }

    public delegate IntPtr ItemsControl_HasItemsProperty_getDelegate();
    public static ItemsControl_HasItemsProperty_getDelegate _ItemsControl_HasItemsProperty_get;
    public static IntPtr ItemsControl_HasItemsProperty_get()
    {
        IntPtr ret = _ItemsControl_HasItemsProperty_get();

        return ret;
    }

    public delegate void ItemsControl_IsGroupingProperty_setDelegate(HandleRef jarg1);
    public static ItemsControl_IsGroupingProperty_setDelegate _ItemsControl_IsGroupingProperty_set;
    public static void ItemsControl_IsGroupingProperty_set(HandleRef jarg1)
    {
        _ItemsControl_IsGroupingProperty_set(jarg1);
    }

    public delegate IntPtr ItemsControl_IsGroupingProperty_getDelegate();
    public static ItemsControl_IsGroupingProperty_getDelegate _ItemsControl_IsGroupingProperty_get;
    public static IntPtr ItemsControl_IsGroupingProperty_get()
    {
        IntPtr ret = _ItemsControl_IsGroupingProperty_get();

        return ret;
    }

    public delegate void ItemsControl_IsTextSearchEnabledProperty_setDelegate(HandleRef jarg1);
    public static ItemsControl_IsTextSearchEnabledProperty_setDelegate _ItemsControl_IsTextSearchEnabledProperty_set;
    public static void ItemsControl_IsTextSearchEnabledProperty_set(HandleRef jarg1)
    {
        _ItemsControl_IsTextSearchEnabledProperty_set(jarg1);
    }

    public delegate IntPtr ItemsControl_IsTextSearchEnabledProperty_getDelegate();
    public static ItemsControl_IsTextSearchEnabledProperty_getDelegate _ItemsControl_IsTextSearchEnabledProperty_get;
    public static IntPtr ItemsControl_IsTextSearchEnabledProperty_get()
    {
        IntPtr ret = _ItemsControl_IsTextSearchEnabledProperty_get();

        return ret;
    }

    public delegate void ItemsControl_ItemContainerStyleProperty_setDelegate(HandleRef jarg1);
    public static ItemsControl_ItemContainerStyleProperty_setDelegate _ItemsControl_ItemContainerStyleProperty_set;
    public static void ItemsControl_ItemContainerStyleProperty_set(HandleRef jarg1)
    {
        _ItemsControl_ItemContainerStyleProperty_set(jarg1);
    }

    public delegate IntPtr ItemsControl_ItemContainerStyleProperty_getDelegate();
    public static ItemsControl_ItemContainerStyleProperty_getDelegate _ItemsControl_ItemContainerStyleProperty_get;
    public static IntPtr ItemsControl_ItemContainerStyleProperty_get()
    {
        IntPtr ret = _ItemsControl_ItemContainerStyleProperty_get();

        return ret;
    }

    public delegate void ItemsControl_ItemContainerStyleSelectorProperty_setDelegate(HandleRef jarg1);
    public static ItemsControl_ItemContainerStyleSelectorProperty_setDelegate _ItemsControl_ItemContainerStyleSelectorProperty_set;
    public static void ItemsControl_ItemContainerStyleSelectorProperty_set(HandleRef jarg1)
    {
        _ItemsControl_ItemContainerStyleSelectorProperty_set(jarg1);
    }

    public delegate IntPtr ItemsControl_ItemContainerStyleSelectorProperty_getDelegate();
    public static ItemsControl_ItemContainerStyleSelectorProperty_getDelegate _ItemsControl_ItemContainerStyleSelectorProperty_get;
    public static IntPtr ItemsControl_ItemContainerStyleSelectorProperty_get()
    {
        IntPtr ret = _ItemsControl_ItemContainerStyleSelectorProperty_get();

        return ret;
    }

    public delegate void ItemsControl_ItemsPanelProperty_setDelegate(HandleRef jarg1);
    public static ItemsControl_ItemsPanelProperty_setDelegate _ItemsControl_ItemsPanelProperty_set;
    public static void ItemsControl_ItemsPanelProperty_set(HandleRef jarg1)
    {
        _ItemsControl_ItemsPanelProperty_set(jarg1);
    }

    public delegate IntPtr ItemsControl_ItemsPanelProperty_getDelegate();
    public static ItemsControl_ItemsPanelProperty_getDelegate _ItemsControl_ItemsPanelProperty_get;
    public static IntPtr ItemsControl_ItemsPanelProperty_get()
    {
        IntPtr ret = _ItemsControl_ItemsPanelProperty_get();

        return ret;
    }

    public delegate void ItemsControl_ItemsSourceProperty_setDelegate(HandleRef jarg1);
    public static ItemsControl_ItemsSourceProperty_setDelegate _ItemsControl_ItemsSourceProperty_set;
    public static void ItemsControl_ItemsSourceProperty_set(HandleRef jarg1)
    {
        _ItemsControl_ItemsSourceProperty_set(jarg1);
    }

    public delegate IntPtr ItemsControl_ItemsSourceProperty_getDelegate();
    public static ItemsControl_ItemsSourceProperty_getDelegate _ItemsControl_ItemsSourceProperty_get;
    public static IntPtr ItemsControl_ItemsSourceProperty_get()
    {
        IntPtr ret = _ItemsControl_ItemsSourceProperty_get();

        return ret;
    }

    public delegate void ItemsControl_ItemTemplateProperty_setDelegate(HandleRef jarg1);
    public static ItemsControl_ItemTemplateProperty_setDelegate _ItemsControl_ItemTemplateProperty_set;
    public static void ItemsControl_ItemTemplateProperty_set(HandleRef jarg1)
    {
        _ItemsControl_ItemTemplateProperty_set(jarg1);
    }

    public delegate IntPtr ItemsControl_ItemTemplateProperty_getDelegate();
    public static ItemsControl_ItemTemplateProperty_getDelegate _ItemsControl_ItemTemplateProperty_get;
    public static IntPtr ItemsControl_ItemTemplateProperty_get()
    {
        IntPtr ret = _ItemsControl_ItemTemplateProperty_get();

        return ret;
    }

    public delegate void ItemsControl_ItemTemplateSelectorProperty_setDelegate(HandleRef jarg1);
    public static ItemsControl_ItemTemplateSelectorProperty_setDelegate _ItemsControl_ItemTemplateSelectorProperty_set;
    public static void ItemsControl_ItemTemplateSelectorProperty_set(HandleRef jarg1)
    {
        _ItemsControl_ItemTemplateSelectorProperty_set(jarg1);
    }

    public delegate IntPtr ItemsControl_ItemTemplateSelectorProperty_getDelegate();
    public static ItemsControl_ItemTemplateSelectorProperty_getDelegate _ItemsControl_ItemTemplateSelectorProperty_get;
    public static IntPtr ItemsControl_ItemTemplateSelectorProperty_get()
    {
        IntPtr ret = _ItemsControl_ItemTemplateSelectorProperty_get();

        return ret;
    }

    public delegate void Selector_IsSelectedProperty_setDelegate(HandleRef jarg1);
    public static Selector_IsSelectedProperty_setDelegate _Selector_IsSelectedProperty_set;
    public static void Selector_IsSelectedProperty_set(HandleRef jarg1)
    {
        _Selector_IsSelectedProperty_set(jarg1);
    }

    public delegate IntPtr Selector_IsSelectedProperty_getDelegate();
    public static Selector_IsSelectedProperty_getDelegate _Selector_IsSelectedProperty_get;
    public static IntPtr Selector_IsSelectedProperty_get()
    {
        IntPtr ret = _Selector_IsSelectedProperty_get();

        return ret;
    }

    public delegate void Selector_IsSelectionActiveProperty_setDelegate(HandleRef jarg1);
    public static Selector_IsSelectionActiveProperty_setDelegate _Selector_IsSelectionActiveProperty_set;
    public static void Selector_IsSelectionActiveProperty_set(HandleRef jarg1)
    {
        _Selector_IsSelectionActiveProperty_set(jarg1);
    }

    public delegate IntPtr Selector_IsSelectionActiveProperty_getDelegate();
    public static Selector_IsSelectionActiveProperty_getDelegate _Selector_IsSelectionActiveProperty_get;
    public static IntPtr Selector_IsSelectionActiveProperty_get()
    {
        IntPtr ret = _Selector_IsSelectionActiveProperty_get();

        return ret;
    }

    public delegate void Selector_IsSynchronizedWithCurrentItemProperty_setDelegate(HandleRef jarg1);
    public static Selector_IsSynchronizedWithCurrentItemProperty_setDelegate _Selector_IsSynchronizedWithCurrentItemProperty_set;
    public static void Selector_IsSynchronizedWithCurrentItemProperty_set(HandleRef jarg1)
    {
        _Selector_IsSynchronizedWithCurrentItemProperty_set(jarg1);
    }

    public delegate IntPtr Selector_IsSynchronizedWithCurrentItemProperty_getDelegate();
    public static Selector_IsSynchronizedWithCurrentItemProperty_getDelegate _Selector_IsSynchronizedWithCurrentItemProperty_get;
    public static IntPtr Selector_IsSynchronizedWithCurrentItemProperty_get()
    {
        IntPtr ret = _Selector_IsSynchronizedWithCurrentItemProperty_get();

        return ret;
    }

    public delegate void Selector_SelectedIndexProperty_setDelegate(HandleRef jarg1);
    public static Selector_SelectedIndexProperty_setDelegate _Selector_SelectedIndexProperty_set;
    public static void Selector_SelectedIndexProperty_set(HandleRef jarg1)
    {
        _Selector_SelectedIndexProperty_set(jarg1);
    }

    public delegate IntPtr Selector_SelectedIndexProperty_getDelegate();
    public static Selector_SelectedIndexProperty_getDelegate _Selector_SelectedIndexProperty_get;
    public static IntPtr Selector_SelectedIndexProperty_get()
    {
        IntPtr ret = _Selector_SelectedIndexProperty_get();

        return ret;
    }

    public delegate void Selector_SelectedItemProperty_setDelegate(HandleRef jarg1);
    public static Selector_SelectedItemProperty_setDelegate _Selector_SelectedItemProperty_set;
    public static void Selector_SelectedItemProperty_set(HandleRef jarg1)
    {
        _Selector_SelectedItemProperty_set(jarg1);
    }

    public delegate IntPtr Selector_SelectedItemProperty_getDelegate();
    public static Selector_SelectedItemProperty_getDelegate _Selector_SelectedItemProperty_get;
    public static IntPtr Selector_SelectedItemProperty_get()
    {
        IntPtr ret = _Selector_SelectedItemProperty_get();

        return ret;
    }

    public delegate void Selector_SelectedValuePathProperty_setDelegate(HandleRef jarg1);
    public static Selector_SelectedValuePathProperty_setDelegate _Selector_SelectedValuePathProperty_set;
    public static void Selector_SelectedValuePathProperty_set(HandleRef jarg1)
    {
        _Selector_SelectedValuePathProperty_set(jarg1);
    }

    public delegate IntPtr Selector_SelectedValuePathProperty_getDelegate();
    public static Selector_SelectedValuePathProperty_getDelegate _Selector_SelectedValuePathProperty_get;
    public static IntPtr Selector_SelectedValuePathProperty_get()
    {
        IntPtr ret = _Selector_SelectedValuePathProperty_get();

        return ret;
    }

    public delegate void Selector_SelectedValueProperty_setDelegate(HandleRef jarg1);
    public static Selector_SelectedValueProperty_setDelegate _Selector_SelectedValueProperty_set;
    public static void Selector_SelectedValueProperty_set(HandleRef jarg1)
    {
        _Selector_SelectedValueProperty_set(jarg1);
    }

    public delegate IntPtr Selector_SelectedValueProperty_getDelegate();
    public static Selector_SelectedValueProperty_getDelegate _Selector_SelectedValueProperty_get;
    public static IntPtr Selector_SelectedValueProperty_get()
    {
        IntPtr ret = _Selector_SelectedValueProperty_get();

        return ret;
    }

    public delegate void Geometry_TransformProperty_setDelegate(HandleRef jarg1);
    public static Geometry_TransformProperty_setDelegate _Geometry_TransformProperty_set;
    public static void Geometry_TransformProperty_set(HandleRef jarg1)
    {
        _Geometry_TransformProperty_set(jarg1);
    }

    public delegate IntPtr Geometry_TransformProperty_getDelegate();
    public static Geometry_TransformProperty_getDelegate _Geometry_TransformProperty_get;
    public static IntPtr Geometry_TransformProperty_get()
    {
        IntPtr ret = _Geometry_TransformProperty_get();

        return ret;
    }

    public delegate void BaseButton_ClickModeProperty_setDelegate(HandleRef jarg1);
    public static BaseButton_ClickModeProperty_setDelegate _BaseButton_ClickModeProperty_set;
    public static void BaseButton_ClickModeProperty_set(HandleRef jarg1)
    {
        _BaseButton_ClickModeProperty_set(jarg1);
    }

    public delegate IntPtr BaseButton_ClickModeProperty_getDelegate();
    public static BaseButton_ClickModeProperty_getDelegate _BaseButton_ClickModeProperty_get;
    public static IntPtr BaseButton_ClickModeProperty_get()
    {
        IntPtr ret = _BaseButton_ClickModeProperty_get();

        return ret;
    }

    public delegate void BaseButton_CommandProperty_setDelegate(HandleRef jarg1);
    public static BaseButton_CommandProperty_setDelegate _BaseButton_CommandProperty_set;
    public static void BaseButton_CommandProperty_set(HandleRef jarg1)
    {
        _BaseButton_CommandProperty_set(jarg1);
    }

    public delegate IntPtr BaseButton_CommandProperty_getDelegate();
    public static BaseButton_CommandProperty_getDelegate _BaseButton_CommandProperty_get;
    public static IntPtr BaseButton_CommandProperty_get()
    {
        IntPtr ret = _BaseButton_CommandProperty_get();

        return ret;
    }

    public delegate void BaseButton_CommandParameterProperty_setDelegate(HandleRef jarg1);
    public static BaseButton_CommandParameterProperty_setDelegate _BaseButton_CommandParameterProperty_set;
    public static void BaseButton_CommandParameterProperty_set(HandleRef jarg1)
    {
        _BaseButton_CommandParameterProperty_set(jarg1);
    }

    public delegate IntPtr BaseButton_CommandParameterProperty_getDelegate();
    public static BaseButton_CommandParameterProperty_getDelegate _BaseButton_CommandParameterProperty_get;
    public static IntPtr BaseButton_CommandParameterProperty_get()
    {
        IntPtr ret = _BaseButton_CommandParameterProperty_get();

        return ret;
    }

    public delegate void BaseButton_CommandTargetProperty_setDelegate(HandleRef jarg1);
    public static BaseButton_CommandTargetProperty_setDelegate _BaseButton_CommandTargetProperty_set;
    public static void BaseButton_CommandTargetProperty_set(HandleRef jarg1)
    {
        _BaseButton_CommandTargetProperty_set(jarg1);
    }

    public delegate IntPtr BaseButton_CommandTargetProperty_getDelegate();
    public static BaseButton_CommandTargetProperty_getDelegate _BaseButton_CommandTargetProperty_get;
    public static IntPtr BaseButton_CommandTargetProperty_get()
    {
        IntPtr ret = _BaseButton_CommandTargetProperty_get();

        return ret;
    }

    public delegate void BaseButton_IsPressedProperty_setDelegate(HandleRef jarg1);
    public static BaseButton_IsPressedProperty_setDelegate _BaseButton_IsPressedProperty_set;
    public static void BaseButton_IsPressedProperty_set(HandleRef jarg1)
    {
        _BaseButton_IsPressedProperty_set(jarg1);
    }

    public delegate IntPtr BaseButton_IsPressedProperty_getDelegate();
    public static BaseButton_IsPressedProperty_getDelegate _BaseButton_IsPressedProperty_get;
    public static IntPtr BaseButton_IsPressedProperty_get()
    {
        IntPtr ret = _BaseButton_IsPressedProperty_get();

        return ret;
    }

    public delegate void ToggleButton_IsCheckedProperty_setDelegate(HandleRef jarg1);
    public static ToggleButton_IsCheckedProperty_setDelegate _ToggleButton_IsCheckedProperty_set;
    public static void ToggleButton_IsCheckedProperty_set(HandleRef jarg1)
    {
        _ToggleButton_IsCheckedProperty_set(jarg1);
    }

    public delegate IntPtr ToggleButton_IsCheckedProperty_getDelegate();
    public static ToggleButton_IsCheckedProperty_getDelegate _ToggleButton_IsCheckedProperty_get;
    public static IntPtr ToggleButton_IsCheckedProperty_get()
    {
        IntPtr ret = _ToggleButton_IsCheckedProperty_get();

        return ret;
    }

    public delegate void ToggleButton_IsThreeStateProperty_setDelegate(HandleRef jarg1);
    public static ToggleButton_IsThreeStateProperty_setDelegate _ToggleButton_IsThreeStateProperty_set;
    public static void ToggleButton_IsThreeStateProperty_set(HandleRef jarg1)
    {
        _ToggleButton_IsThreeStateProperty_set(jarg1);
    }

    public delegate IntPtr ToggleButton_IsThreeStateProperty_getDelegate();
    public static ToggleButton_IsThreeStateProperty_getDelegate _ToggleButton_IsThreeStateProperty_get;
    public static IntPtr ToggleButton_IsThreeStateProperty_get()
    {
        IntPtr ret = _ToggleButton_IsThreeStateProperty_get();

        return ret;
    }

    public delegate void BaseDefinition_SharedSizeGroupProperty_setDelegate(HandleRef jarg1);
    public static BaseDefinition_SharedSizeGroupProperty_setDelegate _BaseDefinition_SharedSizeGroupProperty_set;
    public static void BaseDefinition_SharedSizeGroupProperty_set(HandleRef jarg1)
    {
        _BaseDefinition_SharedSizeGroupProperty_set(jarg1);
    }

    public delegate IntPtr BaseDefinition_SharedSizeGroupProperty_getDelegate();
    public static BaseDefinition_SharedSizeGroupProperty_getDelegate _BaseDefinition_SharedSizeGroupProperty_get;
    public static IntPtr BaseDefinition_SharedSizeGroupProperty_get()
    {
        IntPtr ret = _BaseDefinition_SharedSizeGroupProperty_get();

        return ret;
    }

    public delegate void BaseTextBox_AcceptsReturnProperty_setDelegate(HandleRef jarg1);
    public static BaseTextBox_AcceptsReturnProperty_setDelegate _BaseTextBox_AcceptsReturnProperty_set;
    public static void BaseTextBox_AcceptsReturnProperty_set(HandleRef jarg1)
    {
        _BaseTextBox_AcceptsReturnProperty_set(jarg1);
    }

    public delegate IntPtr BaseTextBox_AcceptsReturnProperty_getDelegate();
    public static BaseTextBox_AcceptsReturnProperty_getDelegate _BaseTextBox_AcceptsReturnProperty_get;
    public static IntPtr BaseTextBox_AcceptsReturnProperty_get()
    {
        IntPtr ret = _BaseTextBox_AcceptsReturnProperty_get();

        return ret;
    }

    public delegate void BaseTextBox_AcceptsTabProperty_setDelegate(HandleRef jarg1);
    public static BaseTextBox_AcceptsTabProperty_setDelegate _BaseTextBox_AcceptsTabProperty_set;
    public static void BaseTextBox_AcceptsTabProperty_set(HandleRef jarg1)
    {
        _BaseTextBox_AcceptsTabProperty_set(jarg1);
    }

    public delegate IntPtr BaseTextBox_AcceptsTabProperty_getDelegate();
    public static BaseTextBox_AcceptsTabProperty_getDelegate _BaseTextBox_AcceptsTabProperty_get;
    public static IntPtr BaseTextBox_AcceptsTabProperty_get()
    {
        IntPtr ret = _BaseTextBox_AcceptsTabProperty_get();

        return ret;
    }

    public delegate void BaseTextBox_AutoWordSelectionProperty_setDelegate(HandleRef jarg1);
    public static BaseTextBox_AutoWordSelectionProperty_setDelegate _BaseTextBox_AutoWordSelectionProperty_set;
    public static void BaseTextBox_AutoWordSelectionProperty_set(HandleRef jarg1)
    {
        _BaseTextBox_AutoWordSelectionProperty_set(jarg1);
    }

    public delegate IntPtr BaseTextBox_AutoWordSelectionProperty_getDelegate();
    public static BaseTextBox_AutoWordSelectionProperty_getDelegate _BaseTextBox_AutoWordSelectionProperty_get;
    public static IntPtr BaseTextBox_AutoWordSelectionProperty_get()
    {
        IntPtr ret = _BaseTextBox_AutoWordSelectionProperty_get();

        return ret;
    }

    public delegate void BaseTextBox_CaretBrushProperty_setDelegate(HandleRef jarg1);
    public static BaseTextBox_CaretBrushProperty_setDelegate _BaseTextBox_CaretBrushProperty_set;
    public static void BaseTextBox_CaretBrushProperty_set(HandleRef jarg1)
    {
        _BaseTextBox_CaretBrushProperty_set(jarg1);
    }

    public delegate IntPtr BaseTextBox_CaretBrushProperty_getDelegate();
    public static BaseTextBox_CaretBrushProperty_getDelegate _BaseTextBox_CaretBrushProperty_get;
    public static IntPtr BaseTextBox_CaretBrushProperty_get()
    {
        IntPtr ret = _BaseTextBox_CaretBrushProperty_get();

        return ret;
    }

    public delegate void BaseTextBox_HorizontalScrollBarVisibilityProperty_setDelegate(HandleRef jarg1);
    public static BaseTextBox_HorizontalScrollBarVisibilityProperty_setDelegate _BaseTextBox_HorizontalScrollBarVisibilityProperty_set;
    public static void BaseTextBox_HorizontalScrollBarVisibilityProperty_set(HandleRef jarg1)
    {
        _BaseTextBox_HorizontalScrollBarVisibilityProperty_set(jarg1);
    }

    public delegate IntPtr BaseTextBox_HorizontalScrollBarVisibilityProperty_getDelegate();
    public static BaseTextBox_HorizontalScrollBarVisibilityProperty_getDelegate _BaseTextBox_HorizontalScrollBarVisibilityProperty_get;
    public static IntPtr BaseTextBox_HorizontalScrollBarVisibilityProperty_get()
    {
        IntPtr ret = _BaseTextBox_HorizontalScrollBarVisibilityProperty_get();

        return ret;
    }

    public delegate void BaseTextBox_IsReadOnlyProperty_setDelegate(HandleRef jarg1);
    public static BaseTextBox_IsReadOnlyProperty_setDelegate _BaseTextBox_IsReadOnlyProperty_set;
    public static void BaseTextBox_IsReadOnlyProperty_set(HandleRef jarg1)
    {
        _BaseTextBox_IsReadOnlyProperty_set(jarg1);
    }

    public delegate IntPtr BaseTextBox_IsReadOnlyProperty_getDelegate();
    public static BaseTextBox_IsReadOnlyProperty_getDelegate _BaseTextBox_IsReadOnlyProperty_get;
    public static IntPtr BaseTextBox_IsReadOnlyProperty_get()
    {
        IntPtr ret = _BaseTextBox_IsReadOnlyProperty_get();

        return ret;
    }

    public delegate void BaseTextBox_IsUndoEnabledProperty_setDelegate(HandleRef jarg1);
    public static BaseTextBox_IsUndoEnabledProperty_setDelegate _BaseTextBox_IsUndoEnabledProperty_set;
    public static void BaseTextBox_IsUndoEnabledProperty_set(HandleRef jarg1)
    {
        _BaseTextBox_IsUndoEnabledProperty_set(jarg1);
    }

    public delegate IntPtr BaseTextBox_IsUndoEnabledProperty_getDelegate();
    public static BaseTextBox_IsUndoEnabledProperty_getDelegate _BaseTextBox_IsUndoEnabledProperty_get;
    public static IntPtr BaseTextBox_IsUndoEnabledProperty_get()
    {
        IntPtr ret = _BaseTextBox_IsUndoEnabledProperty_get();

        return ret;
    }

    public delegate void BaseTextBox_SelectionBrushProperty_setDelegate(HandleRef jarg1);
    public static BaseTextBox_SelectionBrushProperty_setDelegate _BaseTextBox_SelectionBrushProperty_set;
    public static void BaseTextBox_SelectionBrushProperty_set(HandleRef jarg1)
    {
        _BaseTextBox_SelectionBrushProperty_set(jarg1);
    }

    public delegate IntPtr BaseTextBox_SelectionBrushProperty_getDelegate();
    public static BaseTextBox_SelectionBrushProperty_getDelegate _BaseTextBox_SelectionBrushProperty_get;
    public static IntPtr BaseTextBox_SelectionBrushProperty_get()
    {
        IntPtr ret = _BaseTextBox_SelectionBrushProperty_get();

        return ret;
    }

    public delegate void BaseTextBox_SelectionOpacityProperty_setDelegate(HandleRef jarg1);
    public static BaseTextBox_SelectionOpacityProperty_setDelegate _BaseTextBox_SelectionOpacityProperty_set;
    public static void BaseTextBox_SelectionOpacityProperty_set(HandleRef jarg1)
    {
        _BaseTextBox_SelectionOpacityProperty_set(jarg1);
    }

    public delegate IntPtr BaseTextBox_SelectionOpacityProperty_getDelegate();
    public static BaseTextBox_SelectionOpacityProperty_getDelegate _BaseTextBox_SelectionOpacityProperty_get;
    public static IntPtr BaseTextBox_SelectionOpacityProperty_get()
    {
        IntPtr ret = _BaseTextBox_SelectionOpacityProperty_get();

        return ret;
    }

    public delegate void BaseTextBox_UndoLimitProperty_setDelegate(HandleRef jarg1);
    public static BaseTextBox_UndoLimitProperty_setDelegate _BaseTextBox_UndoLimitProperty_set;
    public static void BaseTextBox_UndoLimitProperty_set(HandleRef jarg1)
    {
        _BaseTextBox_UndoLimitProperty_set(jarg1);
    }

    public delegate IntPtr BaseTextBox_UndoLimitProperty_getDelegate();
    public static BaseTextBox_UndoLimitProperty_getDelegate _BaseTextBox_UndoLimitProperty_get;
    public static IntPtr BaseTextBox_UndoLimitProperty_get()
    {
        IntPtr ret = _BaseTextBox_UndoLimitProperty_get();

        return ret;
    }

    public delegate void BaseTextBox_VerticalScrollBarVisibilityProperty_setDelegate(HandleRef jarg1);
    public static BaseTextBox_VerticalScrollBarVisibilityProperty_setDelegate _BaseTextBox_VerticalScrollBarVisibilityProperty_set;
    public static void BaseTextBox_VerticalScrollBarVisibilityProperty_set(HandleRef jarg1)
    {
        _BaseTextBox_VerticalScrollBarVisibilityProperty_set(jarg1);
    }

    public delegate IntPtr BaseTextBox_VerticalScrollBarVisibilityProperty_getDelegate();
    public static BaseTextBox_VerticalScrollBarVisibilityProperty_getDelegate _BaseTextBox_VerticalScrollBarVisibilityProperty_get;
    public static IntPtr BaseTextBox_VerticalScrollBarVisibilityProperty_get()
    {
        IntPtr ret = _BaseTextBox_VerticalScrollBarVisibilityProperty_get();

        return ret;
    }

    public delegate void Border_BackgroundProperty_setDelegate(HandleRef jarg1);
    public static Border_BackgroundProperty_setDelegate _Border_BackgroundProperty_set;
    public static void Border_BackgroundProperty_set(HandleRef jarg1)
    {
        _Border_BackgroundProperty_set(jarg1);
    }

    public delegate IntPtr Border_BackgroundProperty_getDelegate();
    public static Border_BackgroundProperty_getDelegate _Border_BackgroundProperty_get;
    public static IntPtr Border_BackgroundProperty_get()
    {
        IntPtr ret = _Border_BackgroundProperty_get();

        return ret;
    }

    public delegate void Border_BorderBrushProperty_setDelegate(HandleRef jarg1);
    public static Border_BorderBrushProperty_setDelegate _Border_BorderBrushProperty_set;
    public static void Border_BorderBrushProperty_set(HandleRef jarg1)
    {
        _Border_BorderBrushProperty_set(jarg1);
    }

    public delegate IntPtr Border_BorderBrushProperty_getDelegate();
    public static Border_BorderBrushProperty_getDelegate _Border_BorderBrushProperty_get;
    public static IntPtr Border_BorderBrushProperty_get()
    {
        IntPtr ret = _Border_BorderBrushProperty_get();

        return ret;
    }

    public delegate void Border_BorderThicknessProperty_setDelegate(HandleRef jarg1);
    public static Border_BorderThicknessProperty_setDelegate _Border_BorderThicknessProperty_set;
    public static void Border_BorderThicknessProperty_set(HandleRef jarg1)
    {
        _Border_BorderThicknessProperty_set(jarg1);
    }

    public delegate IntPtr Border_BorderThicknessProperty_getDelegate();
    public static Border_BorderThicknessProperty_getDelegate _Border_BorderThicknessProperty_get;
    public static IntPtr Border_BorderThicknessProperty_get()
    {
        IntPtr ret = _Border_BorderThicknessProperty_get();

        return ret;
    }

    public delegate void Border_CornerRadiusProperty_setDelegate(HandleRef jarg1);
    public static Border_CornerRadiusProperty_setDelegate _Border_CornerRadiusProperty_set;
    public static void Border_CornerRadiusProperty_set(HandleRef jarg1)
    {
        _Border_CornerRadiusProperty_set(jarg1);
    }

    public delegate IntPtr Border_CornerRadiusProperty_getDelegate();
    public static Border_CornerRadiusProperty_getDelegate _Border_CornerRadiusProperty_get;
    public static IntPtr Border_CornerRadiusProperty_get()
    {
        IntPtr ret = _Border_CornerRadiusProperty_get();

        return ret;
    }

    public delegate void Border_PaddingProperty_setDelegate(HandleRef jarg1);
    public static Border_PaddingProperty_setDelegate _Border_PaddingProperty_set;
    public static void Border_PaddingProperty_set(HandleRef jarg1)
    {
        _Border_PaddingProperty_set(jarg1);
    }

    public delegate IntPtr Border_PaddingProperty_getDelegate();
    public static Border_PaddingProperty_getDelegate _Border_PaddingProperty_get;
    public static IntPtr Border_PaddingProperty_get()
    {
        IntPtr ret = _Border_PaddingProperty_get();

        return ret;
    }

    public delegate void Brush_OpacityProperty_setDelegate(HandleRef jarg1);
    public static Brush_OpacityProperty_setDelegate _Brush_OpacityProperty_set;
    public static void Brush_OpacityProperty_set(HandleRef jarg1)
    {
        _Brush_OpacityProperty_set(jarg1);
    }

    public delegate IntPtr Brush_OpacityProperty_getDelegate();
    public static Brush_OpacityProperty_getDelegate _Brush_OpacityProperty_get;
    public static IntPtr Brush_OpacityProperty_get()
    {
        IntPtr ret = _Brush_OpacityProperty_get();

        return ret;
    }

    public delegate void Brush_RelativeTransformProperty_setDelegate(HandleRef jarg1);
    public static Brush_RelativeTransformProperty_setDelegate _Brush_RelativeTransformProperty_set;
    public static void Brush_RelativeTransformProperty_set(HandleRef jarg1)
    {
        _Brush_RelativeTransformProperty_set(jarg1);
    }

    public delegate IntPtr Brush_RelativeTransformProperty_getDelegate();
    public static Brush_RelativeTransformProperty_getDelegate _Brush_RelativeTransformProperty_get;
    public static IntPtr Brush_RelativeTransformProperty_get()
    {
        IntPtr ret = _Brush_RelativeTransformProperty_get();

        return ret;
    }

    public delegate void Brush_TransformProperty_setDelegate(HandleRef jarg1);
    public static Brush_TransformProperty_setDelegate _Brush_TransformProperty_set;
    public static void Brush_TransformProperty_set(HandleRef jarg1)
    {
        _Brush_TransformProperty_set(jarg1);
    }

    public delegate IntPtr Brush_TransformProperty_getDelegate();
    public static Brush_TransformProperty_getDelegate _Brush_TransformProperty_get;
    public static IntPtr Brush_TransformProperty_get()
    {
        IntPtr ret = _Brush_TransformProperty_get();

        return ret;
    }

    public delegate void BulletDecorator_BackgroundProperty_setDelegate(HandleRef jarg1);
    public static BulletDecorator_BackgroundProperty_setDelegate _BulletDecorator_BackgroundProperty_set;
    public static void BulletDecorator_BackgroundProperty_set(HandleRef jarg1)
    {
        _BulletDecorator_BackgroundProperty_set(jarg1);
    }

    public delegate IntPtr BulletDecorator_BackgroundProperty_getDelegate();
    public static BulletDecorator_BackgroundProperty_getDelegate _BulletDecorator_BackgroundProperty_get;
    public static IntPtr BulletDecorator_BackgroundProperty_get()
    {
        IntPtr ret = _BulletDecorator_BackgroundProperty_get();

        return ret;
    }

    public delegate void Button_IsCancelProperty_setDelegate(HandleRef jarg1);
    public static Button_IsCancelProperty_setDelegate _Button_IsCancelProperty_set;
    public static void Button_IsCancelProperty_set(HandleRef jarg1)
    {
        _Button_IsCancelProperty_set(jarg1);
    }

    public delegate IntPtr Button_IsCancelProperty_getDelegate();
    public static Button_IsCancelProperty_getDelegate _Button_IsCancelProperty_get;
    public static IntPtr Button_IsCancelProperty_get()
    {
        IntPtr ret = _Button_IsCancelProperty_get();

        return ret;
    }

    public delegate void Button_IsDefaultProperty_setDelegate(HandleRef jarg1);
    public static Button_IsDefaultProperty_setDelegate _Button_IsDefaultProperty_set;
    public static void Button_IsDefaultProperty_set(HandleRef jarg1)
    {
        _Button_IsDefaultProperty_set(jarg1);
    }

    public delegate IntPtr Button_IsDefaultProperty_getDelegate();
    public static Button_IsDefaultProperty_getDelegate _Button_IsDefaultProperty_get;
    public static IntPtr Button_IsDefaultProperty_get()
    {
        IntPtr ret = _Button_IsDefaultProperty_get();

        return ret;
    }

    public delegate void Button_IsDefaultedProperty_setDelegate(HandleRef jarg1);
    public static Button_IsDefaultedProperty_setDelegate _Button_IsDefaultedProperty_set;
    public static void Button_IsDefaultedProperty_set(HandleRef jarg1)
    {
        _Button_IsDefaultedProperty_set(jarg1);
    }

    public delegate IntPtr Button_IsDefaultedProperty_getDelegate();
    public static Button_IsDefaultedProperty_getDelegate _Button_IsDefaultedProperty_get;
    public static IntPtr Button_IsDefaultedProperty_get()
    {
        IntPtr ret = _Button_IsDefaultedProperty_get();

        return ret;
    }

    public delegate void Canvas_BottomProperty_setDelegate(HandleRef jarg1);
    public static Canvas_BottomProperty_setDelegate _Canvas_BottomProperty_set;
    public static void Canvas_BottomProperty_set(HandleRef jarg1)
    {
        _Canvas_BottomProperty_set(jarg1);
    }

    public delegate IntPtr Canvas_BottomProperty_getDelegate();
    public static Canvas_BottomProperty_getDelegate _Canvas_BottomProperty_get;
    public static IntPtr Canvas_BottomProperty_get()
    {
        IntPtr ret = _Canvas_BottomProperty_get();

        return ret;
    }

    public delegate void Canvas_LeftProperty_setDelegate(HandleRef jarg1);
    public static Canvas_LeftProperty_setDelegate _Canvas_LeftProperty_set;
    public static void Canvas_LeftProperty_set(HandleRef jarg1)
    {
        _Canvas_LeftProperty_set(jarg1);
    }

    public delegate IntPtr Canvas_LeftProperty_getDelegate();
    public static Canvas_LeftProperty_getDelegate _Canvas_LeftProperty_get;
    public static IntPtr Canvas_LeftProperty_get()
    {
        IntPtr ret = _Canvas_LeftProperty_get();

        return ret;
    }

    public delegate void Canvas_RightProperty_setDelegate(HandleRef jarg1);
    public static Canvas_RightProperty_setDelegate _Canvas_RightProperty_set;
    public static void Canvas_RightProperty_set(HandleRef jarg1)
    {
        _Canvas_RightProperty_set(jarg1);
    }

    public delegate IntPtr Canvas_RightProperty_getDelegate();
    public static Canvas_RightProperty_getDelegate _Canvas_RightProperty_get;
    public static IntPtr Canvas_RightProperty_get()
    {
        IntPtr ret = _Canvas_RightProperty_get();

        return ret;
    }

    public delegate void Canvas_TopProperty_setDelegate(HandleRef jarg1);
    public static Canvas_TopProperty_setDelegate _Canvas_TopProperty_set;
    public static void Canvas_TopProperty_set(HandleRef jarg1)
    {
        _Canvas_TopProperty_set(jarg1);
    }

    public delegate IntPtr Canvas_TopProperty_getDelegate();
    public static Canvas_TopProperty_getDelegate _Canvas_TopProperty_get;
    public static IntPtr Canvas_TopProperty_get()
    {
        IntPtr ret = _Canvas_TopProperty_get();

        return ret;
    }

    public delegate void CollectionViewSource_CollectionViewTypeProperty_setDelegate(HandleRef jarg1);
    public static CollectionViewSource_CollectionViewTypeProperty_setDelegate _CollectionViewSource_CollectionViewTypeProperty_set;
    public static void CollectionViewSource_CollectionViewTypeProperty_set(HandleRef jarg1)
    {
        _CollectionViewSource_CollectionViewTypeProperty_set(jarg1);
    }

    public delegate IntPtr CollectionViewSource_CollectionViewTypeProperty_getDelegate();
    public static CollectionViewSource_CollectionViewTypeProperty_getDelegate _CollectionViewSource_CollectionViewTypeProperty_get;
    public static IntPtr CollectionViewSource_CollectionViewTypeProperty_get()
    {
        IntPtr ret = _CollectionViewSource_CollectionViewTypeProperty_get();

        return ret;
    }

    public delegate void CollectionViewSource_SourceProperty_setDelegate(HandleRef jarg1);
    public static CollectionViewSource_SourceProperty_setDelegate _CollectionViewSource_SourceProperty_set;
    public static void CollectionViewSource_SourceProperty_set(HandleRef jarg1)
    {
        _CollectionViewSource_SourceProperty_set(jarg1);
    }

    public delegate IntPtr CollectionViewSource_SourceProperty_getDelegate();
    public static CollectionViewSource_SourceProperty_getDelegate _CollectionViewSource_SourceProperty_get;
    public static IntPtr CollectionViewSource_SourceProperty_get()
    {
        IntPtr ret = _CollectionViewSource_SourceProperty_get();

        return ret;
    }

    public delegate void CollectionViewSource_ViewProperty_setDelegate(HandleRef jarg1);
    public static CollectionViewSource_ViewProperty_setDelegate _CollectionViewSource_ViewProperty_set;
    public static void CollectionViewSource_ViewProperty_set(HandleRef jarg1)
    {
        _CollectionViewSource_ViewProperty_set(jarg1);
    }

    public delegate IntPtr CollectionViewSource_ViewProperty_getDelegate();
    public static CollectionViewSource_ViewProperty_getDelegate _CollectionViewSource_ViewProperty_get;
    public static IntPtr CollectionViewSource_ViewProperty_get()
    {
        IntPtr ret = _CollectionViewSource_ViewProperty_get();

        return ret;
    }

    public delegate void ColumnDefinition_WidthProperty_setDelegate(HandleRef jarg1);
    public static ColumnDefinition_WidthProperty_setDelegate _ColumnDefinition_WidthProperty_set;
    public static void ColumnDefinition_WidthProperty_set(HandleRef jarg1)
    {
        _ColumnDefinition_WidthProperty_set(jarg1);
    }

    public delegate IntPtr ColumnDefinition_WidthProperty_getDelegate();
    public static ColumnDefinition_WidthProperty_getDelegate _ColumnDefinition_WidthProperty_get;
    public static IntPtr ColumnDefinition_WidthProperty_get()
    {
        IntPtr ret = _ColumnDefinition_WidthProperty_get();

        return ret;
    }

    public delegate void ColumnDefinition_MinWidthProperty_setDelegate(HandleRef jarg1);
    public static ColumnDefinition_MinWidthProperty_setDelegate _ColumnDefinition_MinWidthProperty_set;
    public static void ColumnDefinition_MinWidthProperty_set(HandleRef jarg1)
    {
        _ColumnDefinition_MinWidthProperty_set(jarg1);
    }

    public delegate IntPtr ColumnDefinition_MinWidthProperty_getDelegate();
    public static ColumnDefinition_MinWidthProperty_getDelegate _ColumnDefinition_MinWidthProperty_get;
    public static IntPtr ColumnDefinition_MinWidthProperty_get()
    {
        IntPtr ret = _ColumnDefinition_MinWidthProperty_get();

        return ret;
    }

    public delegate void ColumnDefinition_MaxWidthProperty_setDelegate(HandleRef jarg1);
    public static ColumnDefinition_MaxWidthProperty_setDelegate _ColumnDefinition_MaxWidthProperty_set;
    public static void ColumnDefinition_MaxWidthProperty_set(HandleRef jarg1)
    {
        _ColumnDefinition_MaxWidthProperty_set(jarg1);
    }

    public delegate IntPtr ColumnDefinition_MaxWidthProperty_getDelegate();
    public static ColumnDefinition_MaxWidthProperty_getDelegate _ColumnDefinition_MaxWidthProperty_get;
    public static IntPtr ColumnDefinition_MaxWidthProperty_get()
    {
        IntPtr ret = _ColumnDefinition_MaxWidthProperty_get();

        return ret;
    }

    public delegate void CombinedGeometry_Geometry1Property_setDelegate(HandleRef jarg1);
    public static CombinedGeometry_Geometry1Property_setDelegate _CombinedGeometry_Geometry1Property_set;
    public static void CombinedGeometry_Geometry1Property_set(HandleRef jarg1)
    {
        _CombinedGeometry_Geometry1Property_set(jarg1);
    }

    public delegate IntPtr CombinedGeometry_Geometry1Property_getDelegate();
    public static CombinedGeometry_Geometry1Property_getDelegate _CombinedGeometry_Geometry1Property_get;
    public static IntPtr CombinedGeometry_Geometry1Property_get()
    {
        IntPtr ret = _CombinedGeometry_Geometry1Property_get();

        return ret;
    }

    public delegate void CombinedGeometry_Geometry2Property_setDelegate(HandleRef jarg1);
    public static CombinedGeometry_Geometry2Property_setDelegate _CombinedGeometry_Geometry2Property_set;
    public static void CombinedGeometry_Geometry2Property_set(HandleRef jarg1)
    {
        _CombinedGeometry_Geometry2Property_set(jarg1);
    }

    public delegate IntPtr CombinedGeometry_Geometry2Property_getDelegate();
    public static CombinedGeometry_Geometry2Property_getDelegate _CombinedGeometry_Geometry2Property_get;
    public static IntPtr CombinedGeometry_Geometry2Property_get()
    {
        IntPtr ret = _CombinedGeometry_Geometry2Property_get();

        return ret;
    }

    public delegate void CombinedGeometry_GeometryCombineModeProperty_setDelegate(HandleRef jarg1);
    public static CombinedGeometry_GeometryCombineModeProperty_setDelegate _CombinedGeometry_GeometryCombineModeProperty_set;
    public static void CombinedGeometry_GeometryCombineModeProperty_set(HandleRef jarg1)
    {
        _CombinedGeometry_GeometryCombineModeProperty_set(jarg1);
    }

    public delegate IntPtr CombinedGeometry_GeometryCombineModeProperty_getDelegate();
    public static CombinedGeometry_GeometryCombineModeProperty_getDelegate _CombinedGeometry_GeometryCombineModeProperty_get;
    public static IntPtr CombinedGeometry_GeometryCombineModeProperty_get()
    {
        IntPtr ret = _CombinedGeometry_GeometryCombineModeProperty_get();

        return ret;
    }

    public delegate void ComboBox_IsDropDownOpenProperty_setDelegate(HandleRef jarg1);
    public static ComboBox_IsDropDownOpenProperty_setDelegate _ComboBox_IsDropDownOpenProperty_set;
    public static void ComboBox_IsDropDownOpenProperty_set(HandleRef jarg1)
    {
        _ComboBox_IsDropDownOpenProperty_set(jarg1);
    }

    public delegate IntPtr ComboBox_IsDropDownOpenProperty_getDelegate();
    public static ComboBox_IsDropDownOpenProperty_getDelegate _ComboBox_IsDropDownOpenProperty_get;
    public static IntPtr ComboBox_IsDropDownOpenProperty_get()
    {
        IntPtr ret = _ComboBox_IsDropDownOpenProperty_get();

        return ret;
    }

    public delegate void ComboBox_IsEditableProperty_setDelegate(HandleRef jarg1);
    public static ComboBox_IsEditableProperty_setDelegate _ComboBox_IsEditableProperty_set;
    public static void ComboBox_IsEditableProperty_set(HandleRef jarg1)
    {
        _ComboBox_IsEditableProperty_set(jarg1);
    }

    public delegate IntPtr ComboBox_IsEditableProperty_getDelegate();
    public static ComboBox_IsEditableProperty_getDelegate _ComboBox_IsEditableProperty_get;
    public static IntPtr ComboBox_IsEditableProperty_get()
    {
        IntPtr ret = _ComboBox_IsEditableProperty_get();

        return ret;
    }

    public delegate void ComboBox_IsReadOnlyProperty_setDelegate(HandleRef jarg1);
    public static ComboBox_IsReadOnlyProperty_setDelegate _ComboBox_IsReadOnlyProperty_set;
    public static void ComboBox_IsReadOnlyProperty_set(HandleRef jarg1)
    {
        _ComboBox_IsReadOnlyProperty_set(jarg1);
    }

    public delegate IntPtr ComboBox_IsReadOnlyProperty_getDelegate();
    public static ComboBox_IsReadOnlyProperty_getDelegate _ComboBox_IsReadOnlyProperty_get;
    public static IntPtr ComboBox_IsReadOnlyProperty_get()
    {
        IntPtr ret = _ComboBox_IsReadOnlyProperty_get();

        return ret;
    }

    public delegate void ComboBox_MaxDropDownHeightProperty_setDelegate(HandleRef jarg1);
    public static ComboBox_MaxDropDownHeightProperty_setDelegate _ComboBox_MaxDropDownHeightProperty_set;
    public static void ComboBox_MaxDropDownHeightProperty_set(HandleRef jarg1)
    {
        _ComboBox_MaxDropDownHeightProperty_set(jarg1);
    }

    public delegate IntPtr ComboBox_MaxDropDownHeightProperty_getDelegate();
    public static ComboBox_MaxDropDownHeightProperty_getDelegate _ComboBox_MaxDropDownHeightProperty_get;
    public static IntPtr ComboBox_MaxDropDownHeightProperty_get()
    {
        IntPtr ret = _ComboBox_MaxDropDownHeightProperty_get();

        return ret;
    }

    public delegate void ComboBox_SelectionBoxItemProperty_setDelegate(HandleRef jarg1);
    public static ComboBox_SelectionBoxItemProperty_setDelegate _ComboBox_SelectionBoxItemProperty_set;
    public static void ComboBox_SelectionBoxItemProperty_set(HandleRef jarg1)
    {
        _ComboBox_SelectionBoxItemProperty_set(jarg1);
    }

    public delegate IntPtr ComboBox_SelectionBoxItemProperty_getDelegate();
    public static ComboBox_SelectionBoxItemProperty_getDelegate _ComboBox_SelectionBoxItemProperty_get;
    public static IntPtr ComboBox_SelectionBoxItemProperty_get()
    {
        IntPtr ret = _ComboBox_SelectionBoxItemProperty_get();

        return ret;
    }

    public delegate void ComboBox_SelectionBoxItemTemplateProperty_setDelegate(HandleRef jarg1);
    public static ComboBox_SelectionBoxItemTemplateProperty_setDelegate _ComboBox_SelectionBoxItemTemplateProperty_set;
    public static void ComboBox_SelectionBoxItemTemplateProperty_set(HandleRef jarg1)
    {
        _ComboBox_SelectionBoxItemTemplateProperty_set(jarg1);
    }

    public delegate IntPtr ComboBox_SelectionBoxItemTemplateProperty_getDelegate();
    public static ComboBox_SelectionBoxItemTemplateProperty_getDelegate _ComboBox_SelectionBoxItemTemplateProperty_get;
    public static IntPtr ComboBox_SelectionBoxItemTemplateProperty_get()
    {
        IntPtr ret = _ComboBox_SelectionBoxItemTemplateProperty_get();

        return ret;
    }

    public delegate void ComboBox_StaysOpenOnEditProperty_setDelegate(HandleRef jarg1);
    public static ComboBox_StaysOpenOnEditProperty_setDelegate _ComboBox_StaysOpenOnEditProperty_set;
    public static void ComboBox_StaysOpenOnEditProperty_set(HandleRef jarg1)
    {
        _ComboBox_StaysOpenOnEditProperty_set(jarg1);
    }

    public delegate IntPtr ComboBox_StaysOpenOnEditProperty_getDelegate();
    public static ComboBox_StaysOpenOnEditProperty_getDelegate _ComboBox_StaysOpenOnEditProperty_get;
    public static IntPtr ComboBox_StaysOpenOnEditProperty_get()
    {
        IntPtr ret = _ComboBox_StaysOpenOnEditProperty_get();

        return ret;
    }

    public delegate void ComboBox_TextProperty_setDelegate(HandleRef jarg1);
    public static ComboBox_TextProperty_setDelegate _ComboBox_TextProperty_set;
    public static void ComboBox_TextProperty_set(HandleRef jarg1)
    {
        _ComboBox_TextProperty_set(jarg1);
    }

    public delegate IntPtr ComboBox_TextProperty_getDelegate();
    public static ComboBox_TextProperty_getDelegate _ComboBox_TextProperty_get;
    public static IntPtr ComboBox_TextProperty_get()
    {
        IntPtr ret = _ComboBox_TextProperty_get();

        return ret;
    }

    public delegate void ListBoxItem_IsSelectedProperty_setDelegate(HandleRef jarg1);
    public static ListBoxItem_IsSelectedProperty_setDelegate _ListBoxItem_IsSelectedProperty_set;
    public static void ListBoxItem_IsSelectedProperty_set(HandleRef jarg1)
    {
        _ListBoxItem_IsSelectedProperty_set(jarg1);
    }

    public delegate IntPtr ListBoxItem_IsSelectedProperty_getDelegate();
    public static ListBoxItem_IsSelectedProperty_getDelegate _ListBoxItem_IsSelectedProperty_get;
    public static IntPtr ListBoxItem_IsSelectedProperty_get()
    {
        IntPtr ret = _ListBoxItem_IsSelectedProperty_get();

        return ret;
    }

    public delegate void ComboBoxItem_IsHighlightedProperty_setDelegate(HandleRef jarg1);
    public static ComboBoxItem_IsHighlightedProperty_setDelegate _ComboBoxItem_IsHighlightedProperty_set;
    public static void ComboBoxItem_IsHighlightedProperty_set(HandleRef jarg1)
    {
        _ComboBoxItem_IsHighlightedProperty_set(jarg1);
    }

    public delegate IntPtr ComboBoxItem_IsHighlightedProperty_getDelegate();
    public static ComboBoxItem_IsHighlightedProperty_getDelegate _ComboBoxItem_IsHighlightedProperty_get;
    public static IntPtr ComboBoxItem_IsHighlightedProperty_get()
    {
        IntPtr ret = _ComboBoxItem_IsHighlightedProperty_get();

        return ret;
    }

    public delegate void CompositeTransform_CenterXProperty_setDelegate(HandleRef jarg1);
    public static CompositeTransform_CenterXProperty_setDelegate _CompositeTransform_CenterXProperty_set;
    public static void CompositeTransform_CenterXProperty_set(HandleRef jarg1)
    {
        _CompositeTransform_CenterXProperty_set(jarg1);
    }

    public delegate IntPtr CompositeTransform_CenterXProperty_getDelegate();
    public static CompositeTransform_CenterXProperty_getDelegate _CompositeTransform_CenterXProperty_get;
    public static IntPtr CompositeTransform_CenterXProperty_get()
    {
        IntPtr ret = _CompositeTransform_CenterXProperty_get();

        return ret;
    }

    public delegate void CompositeTransform_CenterYProperty_setDelegate(HandleRef jarg1);
    public static CompositeTransform_CenterYProperty_setDelegate _CompositeTransform_CenterYProperty_set;
    public static void CompositeTransform_CenterYProperty_set(HandleRef jarg1)
    {
        _CompositeTransform_CenterYProperty_set(jarg1);
    }

    public delegate IntPtr CompositeTransform_CenterYProperty_getDelegate();
    public static CompositeTransform_CenterYProperty_getDelegate _CompositeTransform_CenterYProperty_get;
    public static IntPtr CompositeTransform_CenterYProperty_get()
    {
        IntPtr ret = _CompositeTransform_CenterYProperty_get();

        return ret;
    }

    public delegate void CompositeTransform_RotationProperty_setDelegate(HandleRef jarg1);
    public static CompositeTransform_RotationProperty_setDelegate _CompositeTransform_RotationProperty_set;
    public static void CompositeTransform_RotationProperty_set(HandleRef jarg1)
    {
        _CompositeTransform_RotationProperty_set(jarg1);
    }

    public delegate IntPtr CompositeTransform_RotationProperty_getDelegate();
    public static CompositeTransform_RotationProperty_getDelegate _CompositeTransform_RotationProperty_get;
    public static IntPtr CompositeTransform_RotationProperty_get()
    {
        IntPtr ret = _CompositeTransform_RotationProperty_get();

        return ret;
    }

    public delegate void CompositeTransform_ScaleXProperty_setDelegate(HandleRef jarg1);
    public static CompositeTransform_ScaleXProperty_setDelegate _CompositeTransform_ScaleXProperty_set;
    public static void CompositeTransform_ScaleXProperty_set(HandleRef jarg1)
    {
        _CompositeTransform_ScaleXProperty_set(jarg1);
    }

    public delegate IntPtr CompositeTransform_ScaleXProperty_getDelegate();
    public static CompositeTransform_ScaleXProperty_getDelegate _CompositeTransform_ScaleXProperty_get;
    public static IntPtr CompositeTransform_ScaleXProperty_get()
    {
        IntPtr ret = _CompositeTransform_ScaleXProperty_get();

        return ret;
    }

    public delegate void CompositeTransform_ScaleYProperty_setDelegate(HandleRef jarg1);
    public static CompositeTransform_ScaleYProperty_setDelegate _CompositeTransform_ScaleYProperty_set;
    public static void CompositeTransform_ScaleYProperty_set(HandleRef jarg1)
    {
        _CompositeTransform_ScaleYProperty_set(jarg1);
    }

    public delegate IntPtr CompositeTransform_ScaleYProperty_getDelegate();
    public static CompositeTransform_ScaleYProperty_getDelegate _CompositeTransform_ScaleYProperty_get;
    public static IntPtr CompositeTransform_ScaleYProperty_get()
    {
        IntPtr ret = _CompositeTransform_ScaleYProperty_get();

        return ret;
    }

    public delegate void CompositeTransform_SkewXProperty_setDelegate(HandleRef jarg1);
    public static CompositeTransform_SkewXProperty_setDelegate _CompositeTransform_SkewXProperty_set;
    public static void CompositeTransform_SkewXProperty_set(HandleRef jarg1)
    {
        _CompositeTransform_SkewXProperty_set(jarg1);
    }

    public delegate IntPtr CompositeTransform_SkewXProperty_getDelegate();
    public static CompositeTransform_SkewXProperty_getDelegate _CompositeTransform_SkewXProperty_get;
    public static IntPtr CompositeTransform_SkewXProperty_get()
    {
        IntPtr ret = _CompositeTransform_SkewXProperty_get();

        return ret;
    }

    public delegate void CompositeTransform_SkewYProperty_setDelegate(HandleRef jarg1);
    public static CompositeTransform_SkewYProperty_setDelegate _CompositeTransform_SkewYProperty_set;
    public static void CompositeTransform_SkewYProperty_set(HandleRef jarg1)
    {
        _CompositeTransform_SkewYProperty_set(jarg1);
    }

    public delegate IntPtr CompositeTransform_SkewYProperty_getDelegate();
    public static CompositeTransform_SkewYProperty_getDelegate _CompositeTransform_SkewYProperty_get;
    public static IntPtr CompositeTransform_SkewYProperty_get()
    {
        IntPtr ret = _CompositeTransform_SkewYProperty_get();

        return ret;
    }

    public delegate void CompositeTransform_TranslateXProperty_setDelegate(HandleRef jarg1);
    public static CompositeTransform_TranslateXProperty_setDelegate _CompositeTransform_TranslateXProperty_set;
    public static void CompositeTransform_TranslateXProperty_set(HandleRef jarg1)
    {
        _CompositeTransform_TranslateXProperty_set(jarg1);
    }

    public delegate IntPtr CompositeTransform_TranslateXProperty_getDelegate();
    public static CompositeTransform_TranslateXProperty_getDelegate _CompositeTransform_TranslateXProperty_get;
    public static IntPtr CompositeTransform_TranslateXProperty_get()
    {
        IntPtr ret = _CompositeTransform_TranslateXProperty_get();

        return ret;
    }

    public delegate void CompositeTransform_TranslateYProperty_setDelegate(HandleRef jarg1);
    public static CompositeTransform_TranslateYProperty_setDelegate _CompositeTransform_TranslateYProperty_set;
    public static void CompositeTransform_TranslateYProperty_set(HandleRef jarg1)
    {
        _CompositeTransform_TranslateYProperty_set(jarg1);
    }

    public delegate IntPtr CompositeTransform_TranslateYProperty_getDelegate();
    public static CompositeTransform_TranslateYProperty_getDelegate _CompositeTransform_TranslateYProperty_get;
    public static IntPtr CompositeTransform_TranslateYProperty_get()
    {
        IntPtr ret = _CompositeTransform_TranslateYProperty_get();

        return ret;
    }

    public delegate void ContentPresenter_ContentProperty_setDelegate(HandleRef jarg1);
    public static ContentPresenter_ContentProperty_setDelegate _ContentPresenter_ContentProperty_set;
    public static void ContentPresenter_ContentProperty_set(HandleRef jarg1)
    {
        _ContentPresenter_ContentProperty_set(jarg1);
    }

    public delegate IntPtr ContentPresenter_ContentProperty_getDelegate();
    public static ContentPresenter_ContentProperty_getDelegate _ContentPresenter_ContentProperty_get;
    public static IntPtr ContentPresenter_ContentProperty_get()
    {
        IntPtr ret = _ContentPresenter_ContentProperty_get();

        return ret;
    }

    public delegate void ContentPresenter_ContentSourceProperty_setDelegate(HandleRef jarg1);
    public static ContentPresenter_ContentSourceProperty_setDelegate _ContentPresenter_ContentSourceProperty_set;
    public static void ContentPresenter_ContentSourceProperty_set(HandleRef jarg1)
    {
        _ContentPresenter_ContentSourceProperty_set(jarg1);
    }

    public delegate IntPtr ContentPresenter_ContentSourceProperty_getDelegate();
    public static ContentPresenter_ContentSourceProperty_getDelegate _ContentPresenter_ContentSourceProperty_get;
    public static IntPtr ContentPresenter_ContentSourceProperty_get()
    {
        IntPtr ret = _ContentPresenter_ContentSourceProperty_get();

        return ret;
    }

    public delegate void ContentPresenter_ContentTemplateProperty_setDelegate(HandleRef jarg1);
    public static ContentPresenter_ContentTemplateProperty_setDelegate _ContentPresenter_ContentTemplateProperty_set;
    public static void ContentPresenter_ContentTemplateProperty_set(HandleRef jarg1)
    {
        _ContentPresenter_ContentTemplateProperty_set(jarg1);
    }

    public delegate IntPtr ContentPresenter_ContentTemplateProperty_getDelegate();
    public static ContentPresenter_ContentTemplateProperty_getDelegate _ContentPresenter_ContentTemplateProperty_get;
    public static IntPtr ContentPresenter_ContentTemplateProperty_get()
    {
        IntPtr ret = _ContentPresenter_ContentTemplateProperty_get();

        return ret;
    }

    public delegate void ContentPresenter_ContentTemplateSelectorProperty_setDelegate(HandleRef jarg1);
    public static ContentPresenter_ContentTemplateSelectorProperty_setDelegate _ContentPresenter_ContentTemplateSelectorProperty_set;
    public static void ContentPresenter_ContentTemplateSelectorProperty_set(HandleRef jarg1)
    {
        _ContentPresenter_ContentTemplateSelectorProperty_set(jarg1);
    }

    public delegate IntPtr ContentPresenter_ContentTemplateSelectorProperty_getDelegate();
    public static ContentPresenter_ContentTemplateSelectorProperty_getDelegate _ContentPresenter_ContentTemplateSelectorProperty_get;
    public static IntPtr ContentPresenter_ContentTemplateSelectorProperty_get()
    {
        IntPtr ret = _ContentPresenter_ContentTemplateSelectorProperty_get();

        return ret;
    }

    public delegate void ContentPresenter_RecognizesAccessKeyProperty_setDelegate(HandleRef jarg1);
    public static ContentPresenter_RecognizesAccessKeyProperty_setDelegate _ContentPresenter_RecognizesAccessKeyProperty_set;
    public static void ContentPresenter_RecognizesAccessKeyProperty_set(HandleRef jarg1)
    {
        _ContentPresenter_RecognizesAccessKeyProperty_set(jarg1);
    }

    public delegate IntPtr ContentPresenter_RecognizesAccessKeyProperty_getDelegate();
    public static ContentPresenter_RecognizesAccessKeyProperty_getDelegate _ContentPresenter_RecognizesAccessKeyProperty_get;
    public static IntPtr ContentPresenter_RecognizesAccessKeyProperty_get()
    {
        IntPtr ret = _ContentPresenter_RecognizesAccessKeyProperty_get();

        return ret;
    }

    public delegate void ContextMenu_CustomPopupPlacementCallbackProperty_setDelegate(HandleRef jarg1);
    public static ContextMenu_CustomPopupPlacementCallbackProperty_setDelegate _ContextMenu_CustomPopupPlacementCallbackProperty_set;
    public static void ContextMenu_CustomPopupPlacementCallbackProperty_set(HandleRef jarg1)
    {
        _ContextMenu_CustomPopupPlacementCallbackProperty_set(jarg1);
    }

    public delegate IntPtr ContextMenu_CustomPopupPlacementCallbackProperty_getDelegate();
    public static ContextMenu_CustomPopupPlacementCallbackProperty_getDelegate _ContextMenu_CustomPopupPlacementCallbackProperty_get;
    public static IntPtr ContextMenu_CustomPopupPlacementCallbackProperty_get()
    {
        IntPtr ret = _ContextMenu_CustomPopupPlacementCallbackProperty_get();

        return ret;
    }

    public delegate void ContextMenu_HasDropShadowProperty_setDelegate(HandleRef jarg1);
    public static ContextMenu_HasDropShadowProperty_setDelegate _ContextMenu_HasDropShadowProperty_set;
    public static void ContextMenu_HasDropShadowProperty_set(HandleRef jarg1)
    {
        _ContextMenu_HasDropShadowProperty_set(jarg1);
    }

    public delegate IntPtr ContextMenu_HasDropShadowProperty_getDelegate();
    public static ContextMenu_HasDropShadowProperty_getDelegate _ContextMenu_HasDropShadowProperty_get;
    public static IntPtr ContextMenu_HasDropShadowProperty_get()
    {
        IntPtr ret = _ContextMenu_HasDropShadowProperty_get();

        return ret;
    }

    public delegate void ContextMenu_HorizontalOffsetProperty_setDelegate(HandleRef jarg1);
    public static ContextMenu_HorizontalOffsetProperty_setDelegate _ContextMenu_HorizontalOffsetProperty_set;
    public static void ContextMenu_HorizontalOffsetProperty_set(HandleRef jarg1)
    {
        _ContextMenu_HorizontalOffsetProperty_set(jarg1);
    }

    public delegate IntPtr ContextMenu_HorizontalOffsetProperty_getDelegate();
    public static ContextMenu_HorizontalOffsetProperty_getDelegate _ContextMenu_HorizontalOffsetProperty_get;
    public static IntPtr ContextMenu_HorizontalOffsetProperty_get()
    {
        IntPtr ret = _ContextMenu_HorizontalOffsetProperty_get();

        return ret;
    }

    public delegate void ContextMenu_IsOpenProperty_setDelegate(HandleRef jarg1);
    public static ContextMenu_IsOpenProperty_setDelegate _ContextMenu_IsOpenProperty_set;
    public static void ContextMenu_IsOpenProperty_set(HandleRef jarg1)
    {
        _ContextMenu_IsOpenProperty_set(jarg1);
    }

    public delegate IntPtr ContextMenu_IsOpenProperty_getDelegate();
    public static ContextMenu_IsOpenProperty_getDelegate _ContextMenu_IsOpenProperty_get;
    public static IntPtr ContextMenu_IsOpenProperty_get()
    {
        IntPtr ret = _ContextMenu_IsOpenProperty_get();

        return ret;
    }

    public delegate void ContextMenu_PlacementProperty_setDelegate(HandleRef jarg1);
    public static ContextMenu_PlacementProperty_setDelegate _ContextMenu_PlacementProperty_set;
    public static void ContextMenu_PlacementProperty_set(HandleRef jarg1)
    {
        _ContextMenu_PlacementProperty_set(jarg1);
    }

    public delegate IntPtr ContextMenu_PlacementProperty_getDelegate();
    public static ContextMenu_PlacementProperty_getDelegate _ContextMenu_PlacementProperty_get;
    public static IntPtr ContextMenu_PlacementProperty_get()
    {
        IntPtr ret = _ContextMenu_PlacementProperty_get();

        return ret;
    }

    public delegate void ContextMenu_PlacementRectangleProperty_setDelegate(HandleRef jarg1);
    public static ContextMenu_PlacementRectangleProperty_setDelegate _ContextMenu_PlacementRectangleProperty_set;
    public static void ContextMenu_PlacementRectangleProperty_set(HandleRef jarg1)
    {
        _ContextMenu_PlacementRectangleProperty_set(jarg1);
    }

    public delegate IntPtr ContextMenu_PlacementRectangleProperty_getDelegate();
    public static ContextMenu_PlacementRectangleProperty_getDelegate _ContextMenu_PlacementRectangleProperty_get;
    public static IntPtr ContextMenu_PlacementRectangleProperty_get()
    {
        IntPtr ret = _ContextMenu_PlacementRectangleProperty_get();

        return ret;
    }

    public delegate void ContextMenu_PlacementTargetProperty_setDelegate(HandleRef jarg1);
    public static ContextMenu_PlacementTargetProperty_setDelegate _ContextMenu_PlacementTargetProperty_set;
    public static void ContextMenu_PlacementTargetProperty_set(HandleRef jarg1)
    {
        _ContextMenu_PlacementTargetProperty_set(jarg1);
    }

    public delegate IntPtr ContextMenu_PlacementTargetProperty_getDelegate();
    public static ContextMenu_PlacementTargetProperty_getDelegate _ContextMenu_PlacementTargetProperty_get;
    public static IntPtr ContextMenu_PlacementTargetProperty_get()
    {
        IntPtr ret = _ContextMenu_PlacementTargetProperty_get();

        return ret;
    }

    public delegate void ContextMenu_StaysOpenProperty_setDelegate(HandleRef jarg1);
    public static ContextMenu_StaysOpenProperty_setDelegate _ContextMenu_StaysOpenProperty_set;
    public static void ContextMenu_StaysOpenProperty_set(HandleRef jarg1)
    {
        _ContextMenu_StaysOpenProperty_set(jarg1);
    }

    public delegate IntPtr ContextMenu_StaysOpenProperty_getDelegate();
    public static ContextMenu_StaysOpenProperty_getDelegate _ContextMenu_StaysOpenProperty_get;
    public static IntPtr ContextMenu_StaysOpenProperty_get()
    {
        IntPtr ret = _ContextMenu_StaysOpenProperty_get();

        return ret;
    }

    public delegate void ContextMenu_VerticalOffsetProperty_setDelegate(HandleRef jarg1);
    public static ContextMenu_VerticalOffsetProperty_setDelegate _ContextMenu_VerticalOffsetProperty_set;
    public static void ContextMenu_VerticalOffsetProperty_set(HandleRef jarg1)
    {
        _ContextMenu_VerticalOffsetProperty_set(jarg1);
    }

    public delegate IntPtr ContextMenu_VerticalOffsetProperty_getDelegate();
    public static ContextMenu_VerticalOffsetProperty_getDelegate _ContextMenu_VerticalOffsetProperty_get;
    public static IntPtr ContextMenu_VerticalOffsetProperty_get()
    {
        IntPtr ret = _ContextMenu_VerticalOffsetProperty_get();

        return ret;
    }

    public delegate void ContextMenuService_ContextMenuProperty_setDelegate(HandleRef jarg1);
    public static ContextMenuService_ContextMenuProperty_setDelegate _ContextMenuService_ContextMenuProperty_set;
    public static void ContextMenuService_ContextMenuProperty_set(HandleRef jarg1)
    {
        _ContextMenuService_ContextMenuProperty_set(jarg1);
    }

    public delegate IntPtr ContextMenuService_ContextMenuProperty_getDelegate();
    public static ContextMenuService_ContextMenuProperty_getDelegate _ContextMenuService_ContextMenuProperty_get;
    public static IntPtr ContextMenuService_ContextMenuProperty_get()
    {
        IntPtr ret = _ContextMenuService_ContextMenuProperty_get();

        return ret;
    }

    public delegate void ContextMenuService_HasDropShadowProperty_setDelegate(HandleRef jarg1);
    public static ContextMenuService_HasDropShadowProperty_setDelegate _ContextMenuService_HasDropShadowProperty_set;
    public static void ContextMenuService_HasDropShadowProperty_set(HandleRef jarg1)
    {
        _ContextMenuService_HasDropShadowProperty_set(jarg1);
    }

    public delegate IntPtr ContextMenuService_HasDropShadowProperty_getDelegate();
    public static ContextMenuService_HasDropShadowProperty_getDelegate _ContextMenuService_HasDropShadowProperty_get;
    public static IntPtr ContextMenuService_HasDropShadowProperty_get()
    {
        IntPtr ret = _ContextMenuService_HasDropShadowProperty_get();

        return ret;
    }

    public delegate void ContextMenuService_HorizontalOffsetProperty_setDelegate(HandleRef jarg1);
    public static ContextMenuService_HorizontalOffsetProperty_setDelegate _ContextMenuService_HorizontalOffsetProperty_set;
    public static void ContextMenuService_HorizontalOffsetProperty_set(HandleRef jarg1)
    {
        _ContextMenuService_HorizontalOffsetProperty_set(jarg1);
    }

    public delegate IntPtr ContextMenuService_HorizontalOffsetProperty_getDelegate();
    public static ContextMenuService_HorizontalOffsetProperty_getDelegate _ContextMenuService_HorizontalOffsetProperty_get;
    public static IntPtr ContextMenuService_HorizontalOffsetProperty_get()
    {
        IntPtr ret = _ContextMenuService_HorizontalOffsetProperty_get();

        return ret;
    }

    public delegate void ContextMenuService_IsEnabledProperty_setDelegate(HandleRef jarg1);
    public static ContextMenuService_IsEnabledProperty_setDelegate _ContextMenuService_IsEnabledProperty_set;
    public static void ContextMenuService_IsEnabledProperty_set(HandleRef jarg1)
    {
        _ContextMenuService_IsEnabledProperty_set(jarg1);
    }

    public delegate IntPtr ContextMenuService_IsEnabledProperty_getDelegate();
    public static ContextMenuService_IsEnabledProperty_getDelegate _ContextMenuService_IsEnabledProperty_get;
    public static IntPtr ContextMenuService_IsEnabledProperty_get()
    {
        IntPtr ret = _ContextMenuService_IsEnabledProperty_get();

        return ret;
    }

    public delegate void ContextMenuService_PlacementProperty_setDelegate(HandleRef jarg1);
    public static ContextMenuService_PlacementProperty_setDelegate _ContextMenuService_PlacementProperty_set;
    public static void ContextMenuService_PlacementProperty_set(HandleRef jarg1)
    {
        _ContextMenuService_PlacementProperty_set(jarg1);
    }

    public delegate IntPtr ContextMenuService_PlacementProperty_getDelegate();
    public static ContextMenuService_PlacementProperty_getDelegate _ContextMenuService_PlacementProperty_get;
    public static IntPtr ContextMenuService_PlacementProperty_get()
    {
        IntPtr ret = _ContextMenuService_PlacementProperty_get();

        return ret;
    }

    public delegate void ContextMenuService_PlacementRectangleProperty_setDelegate(HandleRef jarg1);
    public static ContextMenuService_PlacementRectangleProperty_setDelegate _ContextMenuService_PlacementRectangleProperty_set;
    public static void ContextMenuService_PlacementRectangleProperty_set(HandleRef jarg1)
    {
        _ContextMenuService_PlacementRectangleProperty_set(jarg1);
    }

    public delegate IntPtr ContextMenuService_PlacementRectangleProperty_getDelegate();
    public static ContextMenuService_PlacementRectangleProperty_getDelegate _ContextMenuService_PlacementRectangleProperty_get;
    public static IntPtr ContextMenuService_PlacementRectangleProperty_get()
    {
        IntPtr ret = _ContextMenuService_PlacementRectangleProperty_get();

        return ret;
    }

    public delegate void ContextMenuService_PlacementTargetProperty_setDelegate(HandleRef jarg1);
    public static ContextMenuService_PlacementTargetProperty_setDelegate _ContextMenuService_PlacementTargetProperty_set;
    public static void ContextMenuService_PlacementTargetProperty_set(HandleRef jarg1)
    {
        _ContextMenuService_PlacementTargetProperty_set(jarg1);
    }

    public delegate IntPtr ContextMenuService_PlacementTargetProperty_getDelegate();
    public static ContextMenuService_PlacementTargetProperty_getDelegate _ContextMenuService_PlacementTargetProperty_get;
    public static IntPtr ContextMenuService_PlacementTargetProperty_get()
    {
        IntPtr ret = _ContextMenuService_PlacementTargetProperty_get();

        return ret;
    }

    public delegate void ContextMenuService_ShowOnDisabledProperty_setDelegate(HandleRef jarg1);
    public static ContextMenuService_ShowOnDisabledProperty_setDelegate _ContextMenuService_ShowOnDisabledProperty_set;
    public static void ContextMenuService_ShowOnDisabledProperty_set(HandleRef jarg1)
    {
        _ContextMenuService_ShowOnDisabledProperty_set(jarg1);
    }

    public delegate IntPtr ContextMenuService_ShowOnDisabledProperty_getDelegate();
    public static ContextMenuService_ShowOnDisabledProperty_getDelegate _ContextMenuService_ShowOnDisabledProperty_get;
    public static IntPtr ContextMenuService_ShowOnDisabledProperty_get()
    {
        IntPtr ret = _ContextMenuService_ShowOnDisabledProperty_get();

        return ret;
    }

    public delegate void ContextMenuService_VerticalOffsetProperty_setDelegate(HandleRef jarg1);
    public static ContextMenuService_VerticalOffsetProperty_setDelegate _ContextMenuService_VerticalOffsetProperty_set;
    public static void ContextMenuService_VerticalOffsetProperty_set(HandleRef jarg1)
    {
        _ContextMenuService_VerticalOffsetProperty_set(jarg1);
    }

    public delegate IntPtr ContextMenuService_VerticalOffsetProperty_getDelegate();
    public static ContextMenuService_VerticalOffsetProperty_getDelegate _ContextMenuService_VerticalOffsetProperty_get;
    public static IntPtr ContextMenuService_VerticalOffsetProperty_get()
    {
        IntPtr ret = _ContextMenuService_VerticalOffsetProperty_get();

        return ret;
    }

    public delegate void DashStyle_DashesProperty_setDelegate(HandleRef jarg1);
    public static DashStyle_DashesProperty_setDelegate _DashStyle_DashesProperty_set;
    public static void DashStyle_DashesProperty_set(HandleRef jarg1)
    {
        _DashStyle_DashesProperty_set(jarg1);
    }

    public delegate IntPtr DashStyle_DashesProperty_getDelegate();
    public static DashStyle_DashesProperty_getDelegate _DashStyle_DashesProperty_get;
    public static IntPtr DashStyle_DashesProperty_get()
    {
        IntPtr ret = _DashStyle_DashesProperty_get();

        return ret;
    }

    public delegate void DashStyle_OffsetProperty_setDelegate(HandleRef jarg1);
    public static DashStyle_OffsetProperty_setDelegate _DashStyle_OffsetProperty_set;
    public static void DashStyle_OffsetProperty_set(HandleRef jarg1)
    {
        _DashStyle_OffsetProperty_set(jarg1);
    }

    public delegate IntPtr DashStyle_OffsetProperty_getDelegate();
    public static DashStyle_OffsetProperty_getDelegate _DashStyle_OffsetProperty_get;
    public static IntPtr DashStyle_OffsetProperty_get()
    {
        IntPtr ret = _DashStyle_OffsetProperty_get();

        return ret;
    }

    public delegate void DockPanel_DockProperty_setDelegate(HandleRef jarg1);
    public static DockPanel_DockProperty_setDelegate _DockPanel_DockProperty_set;
    public static void DockPanel_DockProperty_set(HandleRef jarg1)
    {
        _DockPanel_DockProperty_set(jarg1);
    }

    public delegate IntPtr DockPanel_DockProperty_getDelegate();
    public static DockPanel_DockProperty_getDelegate _DockPanel_DockProperty_get;
    public static IntPtr DockPanel_DockProperty_get()
    {
        IntPtr ret = _DockPanel_DockProperty_get();

        return ret;
    }

    public delegate void DockPanel_LastChildFillProperty_setDelegate(HandleRef jarg1);
    public static DockPanel_LastChildFillProperty_setDelegate _DockPanel_LastChildFillProperty_set;
    public static void DockPanel_LastChildFillProperty_set(HandleRef jarg1)
    {
        _DockPanel_LastChildFillProperty_set(jarg1);
    }

    public delegate IntPtr DockPanel_LastChildFillProperty_getDelegate();
    public static DockPanel_LastChildFillProperty_getDelegate _DockPanel_LastChildFillProperty_get;
    public static IntPtr DockPanel_LastChildFillProperty_get()
    {
        IntPtr ret = _DockPanel_LastChildFillProperty_get();

        return ret;
    }

    public delegate void DropShadowEffect_BlurRadiusProperty_setDelegate(HandleRef jarg1);
    public static DropShadowEffect_BlurRadiusProperty_setDelegate _DropShadowEffect_BlurRadiusProperty_set;
    public static void DropShadowEffect_BlurRadiusProperty_set(HandleRef jarg1)
    {
        _DropShadowEffect_BlurRadiusProperty_set(jarg1);
    }

    public delegate IntPtr DropShadowEffect_BlurRadiusProperty_getDelegate();
    public static DropShadowEffect_BlurRadiusProperty_getDelegate _DropShadowEffect_BlurRadiusProperty_get;
    public static IntPtr DropShadowEffect_BlurRadiusProperty_get()
    {
        IntPtr ret = _DropShadowEffect_BlurRadiusProperty_get();

        return ret;
    }

    public delegate void DropShadowEffect_ColorProperty_setDelegate(HandleRef jarg1);
    public static DropShadowEffect_ColorProperty_setDelegate _DropShadowEffect_ColorProperty_set;
    public static void DropShadowEffect_ColorProperty_set(HandleRef jarg1)
    {
        _DropShadowEffect_ColorProperty_set(jarg1);
    }

    public delegate IntPtr DropShadowEffect_ColorProperty_getDelegate();
    public static DropShadowEffect_ColorProperty_getDelegate _DropShadowEffect_ColorProperty_get;
    public static IntPtr DropShadowEffect_ColorProperty_get()
    {
        IntPtr ret = _DropShadowEffect_ColorProperty_get();

        return ret;
    }

    public delegate void DropShadowEffect_DirectionProperty_setDelegate(HandleRef jarg1);
    public static DropShadowEffect_DirectionProperty_setDelegate _DropShadowEffect_DirectionProperty_set;
    public static void DropShadowEffect_DirectionProperty_set(HandleRef jarg1)
    {
        _DropShadowEffect_DirectionProperty_set(jarg1);
    }

    public delegate IntPtr DropShadowEffect_DirectionProperty_getDelegate();
    public static DropShadowEffect_DirectionProperty_getDelegate _DropShadowEffect_DirectionProperty_get;
    public static IntPtr DropShadowEffect_DirectionProperty_get()
    {
        IntPtr ret = _DropShadowEffect_DirectionProperty_get();

        return ret;
    }

    public delegate void DropShadowEffect_OpacityProperty_setDelegate(HandleRef jarg1);
    public static DropShadowEffect_OpacityProperty_setDelegate _DropShadowEffect_OpacityProperty_set;
    public static void DropShadowEffect_OpacityProperty_set(HandleRef jarg1)
    {
        _DropShadowEffect_OpacityProperty_set(jarg1);
    }

    public delegate IntPtr DropShadowEffect_OpacityProperty_getDelegate();
    public static DropShadowEffect_OpacityProperty_getDelegate _DropShadowEffect_OpacityProperty_get;
    public static IntPtr DropShadowEffect_OpacityProperty_get()
    {
        IntPtr ret = _DropShadowEffect_OpacityProperty_get();

        return ret;
    }

    public delegate void DropShadowEffect_RenderingBiasProperty_setDelegate(HandleRef jarg1);
    public static DropShadowEffect_RenderingBiasProperty_setDelegate _DropShadowEffect_RenderingBiasProperty_set;
    public static void DropShadowEffect_RenderingBiasProperty_set(HandleRef jarg1)
    {
        _DropShadowEffect_RenderingBiasProperty_set(jarg1);
    }

    public delegate IntPtr DropShadowEffect_RenderingBiasProperty_getDelegate();
    public static DropShadowEffect_RenderingBiasProperty_getDelegate _DropShadowEffect_RenderingBiasProperty_get;
    public static IntPtr DropShadowEffect_RenderingBiasProperty_get()
    {
        IntPtr ret = _DropShadowEffect_RenderingBiasProperty_get();

        return ret;
    }

    public delegate void DropShadowEffect_ShadowDepthProperty_setDelegate(HandleRef jarg1);
    public static DropShadowEffect_ShadowDepthProperty_setDelegate _DropShadowEffect_ShadowDepthProperty_set;
    public static void DropShadowEffect_ShadowDepthProperty_set(HandleRef jarg1)
    {
        _DropShadowEffect_ShadowDepthProperty_set(jarg1);
    }

    public delegate IntPtr DropShadowEffect_ShadowDepthProperty_getDelegate();
    public static DropShadowEffect_ShadowDepthProperty_getDelegate _DropShadowEffect_ShadowDepthProperty_get;
    public static IntPtr DropShadowEffect_ShadowDepthProperty_get()
    {
        IntPtr ret = _DropShadowEffect_ShadowDepthProperty_get();

        return ret;
    }

    public delegate void Shape_FillProperty_setDelegate(HandleRef jarg1);
    public static Shape_FillProperty_setDelegate _Shape_FillProperty_set;
    public static void Shape_FillProperty_set(HandleRef jarg1)
    {
        _Shape_FillProperty_set(jarg1);
    }

    public delegate IntPtr Shape_FillProperty_getDelegate();
    public static Shape_FillProperty_getDelegate _Shape_FillProperty_get;
    public static IntPtr Shape_FillProperty_get()
    {
        IntPtr ret = _Shape_FillProperty_get();

        return ret;
    }

    public delegate void Shape_StretchProperty_setDelegate(HandleRef jarg1);
    public static Shape_StretchProperty_setDelegate _Shape_StretchProperty_set;
    public static void Shape_StretchProperty_set(HandleRef jarg1)
    {
        _Shape_StretchProperty_set(jarg1);
    }

    public delegate IntPtr Shape_StretchProperty_getDelegate();
    public static Shape_StretchProperty_getDelegate _Shape_StretchProperty_get;
    public static IntPtr Shape_StretchProperty_get()
    {
        IntPtr ret = _Shape_StretchProperty_get();

        return ret;
    }

    public delegate void Shape_StrokeProperty_setDelegate(HandleRef jarg1);
    public static Shape_StrokeProperty_setDelegate _Shape_StrokeProperty_set;
    public static void Shape_StrokeProperty_set(HandleRef jarg1)
    {
        _Shape_StrokeProperty_set(jarg1);
    }

    public delegate IntPtr Shape_StrokeProperty_getDelegate();
    public static Shape_StrokeProperty_getDelegate _Shape_StrokeProperty_get;
    public static IntPtr Shape_StrokeProperty_get()
    {
        IntPtr ret = _Shape_StrokeProperty_get();

        return ret;
    }

    public delegate void Shape_StrokeDashArrayProperty_setDelegate(HandleRef jarg1);
    public static Shape_StrokeDashArrayProperty_setDelegate _Shape_StrokeDashArrayProperty_set;
    public static void Shape_StrokeDashArrayProperty_set(HandleRef jarg1)
    {
        _Shape_StrokeDashArrayProperty_set(jarg1);
    }

    public delegate IntPtr Shape_StrokeDashArrayProperty_getDelegate();
    public static Shape_StrokeDashArrayProperty_getDelegate _Shape_StrokeDashArrayProperty_get;
    public static IntPtr Shape_StrokeDashArrayProperty_get()
    {
        IntPtr ret = _Shape_StrokeDashArrayProperty_get();

        return ret;
    }

    public delegate void Shape_StrokeDashCapProperty_setDelegate(HandleRef jarg1);
    public static Shape_StrokeDashCapProperty_setDelegate _Shape_StrokeDashCapProperty_set;
    public static void Shape_StrokeDashCapProperty_set(HandleRef jarg1)
    {
        _Shape_StrokeDashCapProperty_set(jarg1);
    }

    public delegate IntPtr Shape_StrokeDashCapProperty_getDelegate();
    public static Shape_StrokeDashCapProperty_getDelegate _Shape_StrokeDashCapProperty_get;
    public static IntPtr Shape_StrokeDashCapProperty_get()
    {
        IntPtr ret = _Shape_StrokeDashCapProperty_get();

        return ret;
    }

    public delegate void Shape_StrokeDashOffsetProperty_setDelegate(HandleRef jarg1);
    public static Shape_StrokeDashOffsetProperty_setDelegate _Shape_StrokeDashOffsetProperty_set;
    public static void Shape_StrokeDashOffsetProperty_set(HandleRef jarg1)
    {
        _Shape_StrokeDashOffsetProperty_set(jarg1);
    }

    public delegate IntPtr Shape_StrokeDashOffsetProperty_getDelegate();
    public static Shape_StrokeDashOffsetProperty_getDelegate _Shape_StrokeDashOffsetProperty_get;
    public static IntPtr Shape_StrokeDashOffsetProperty_get()
    {
        IntPtr ret = _Shape_StrokeDashOffsetProperty_get();

        return ret;
    }

    public delegate void Shape_StrokeEndLineCapProperty_setDelegate(HandleRef jarg1);
    public static Shape_StrokeEndLineCapProperty_setDelegate _Shape_StrokeEndLineCapProperty_set;
    public static void Shape_StrokeEndLineCapProperty_set(HandleRef jarg1)
    {
        _Shape_StrokeEndLineCapProperty_set(jarg1);
    }

    public delegate IntPtr Shape_StrokeEndLineCapProperty_getDelegate();
    public static Shape_StrokeEndLineCapProperty_getDelegate _Shape_StrokeEndLineCapProperty_get;
    public static IntPtr Shape_StrokeEndLineCapProperty_get()
    {
        IntPtr ret = _Shape_StrokeEndLineCapProperty_get();

        return ret;
    }

    public delegate void Shape_StrokeLineJoinProperty_setDelegate(HandleRef jarg1);
    public static Shape_StrokeLineJoinProperty_setDelegate _Shape_StrokeLineJoinProperty_set;
    public static void Shape_StrokeLineJoinProperty_set(HandleRef jarg1)
    {
        _Shape_StrokeLineJoinProperty_set(jarg1);
    }

    public delegate IntPtr Shape_StrokeLineJoinProperty_getDelegate();
    public static Shape_StrokeLineJoinProperty_getDelegate _Shape_StrokeLineJoinProperty_get;
    public static IntPtr Shape_StrokeLineJoinProperty_get()
    {
        IntPtr ret = _Shape_StrokeLineJoinProperty_get();

        return ret;
    }

    public delegate void Shape_StrokeMiterLimitProperty_setDelegate(HandleRef jarg1);
    public static Shape_StrokeMiterLimitProperty_setDelegate _Shape_StrokeMiterLimitProperty_set;
    public static void Shape_StrokeMiterLimitProperty_set(HandleRef jarg1)
    {
        _Shape_StrokeMiterLimitProperty_set(jarg1);
    }

    public delegate IntPtr Shape_StrokeMiterLimitProperty_getDelegate();
    public static Shape_StrokeMiterLimitProperty_getDelegate _Shape_StrokeMiterLimitProperty_get;
    public static IntPtr Shape_StrokeMiterLimitProperty_get()
    {
        IntPtr ret = _Shape_StrokeMiterLimitProperty_get();

        return ret;
    }

    public delegate void Shape_StrokeStartLineCapProperty_setDelegate(HandleRef jarg1);
    public static Shape_StrokeStartLineCapProperty_setDelegate _Shape_StrokeStartLineCapProperty_set;
    public static void Shape_StrokeStartLineCapProperty_set(HandleRef jarg1)
    {
        _Shape_StrokeStartLineCapProperty_set(jarg1);
    }

    public delegate IntPtr Shape_StrokeStartLineCapProperty_getDelegate();
    public static Shape_StrokeStartLineCapProperty_getDelegate _Shape_StrokeStartLineCapProperty_get;
    public static IntPtr Shape_StrokeStartLineCapProperty_get()
    {
        IntPtr ret = _Shape_StrokeStartLineCapProperty_get();

        return ret;
    }

    public delegate void Shape_StrokeThicknessProperty_setDelegate(HandleRef jarg1);
    public static Shape_StrokeThicknessProperty_setDelegate _Shape_StrokeThicknessProperty_set;
    public static void Shape_StrokeThicknessProperty_set(HandleRef jarg1)
    {
        _Shape_StrokeThicknessProperty_set(jarg1);
    }

    public delegate IntPtr Shape_StrokeThicknessProperty_getDelegate();
    public static Shape_StrokeThicknessProperty_getDelegate _Shape_StrokeThicknessProperty_get;
    public static IntPtr Shape_StrokeThicknessProperty_get()
    {
        IntPtr ret = _Shape_StrokeThicknessProperty_get();

        return ret;
    }

    public delegate void EllipseGeometry_CenterProperty_setDelegate(HandleRef jarg1);
    public static EllipseGeometry_CenterProperty_setDelegate _EllipseGeometry_CenterProperty_set;
    public static void EllipseGeometry_CenterProperty_set(HandleRef jarg1)
    {
        _EllipseGeometry_CenterProperty_set(jarg1);
    }

    public delegate IntPtr EllipseGeometry_CenterProperty_getDelegate();
    public static EllipseGeometry_CenterProperty_getDelegate _EllipseGeometry_CenterProperty_get;
    public static IntPtr EllipseGeometry_CenterProperty_get()
    {
        IntPtr ret = _EllipseGeometry_CenterProperty_get();

        return ret;
    }

    public delegate void EllipseGeometry_RadiusXProperty_setDelegate(HandleRef jarg1);
    public static EllipseGeometry_RadiusXProperty_setDelegate _EllipseGeometry_RadiusXProperty_set;
    public static void EllipseGeometry_RadiusXProperty_set(HandleRef jarg1)
    {
        _EllipseGeometry_RadiusXProperty_set(jarg1);
    }

    public delegate IntPtr EllipseGeometry_RadiusXProperty_getDelegate();
    public static EllipseGeometry_RadiusXProperty_getDelegate _EllipseGeometry_RadiusXProperty_get;
    public static IntPtr EllipseGeometry_RadiusXProperty_get()
    {
        IntPtr ret = _EllipseGeometry_RadiusXProperty_get();

        return ret;
    }

    public delegate void EllipseGeometry_RadiusYProperty_setDelegate(HandleRef jarg1);
    public static EllipseGeometry_RadiusYProperty_setDelegate _EllipseGeometry_RadiusYProperty_set;
    public static void EllipseGeometry_RadiusYProperty_set(HandleRef jarg1)
    {
        _EllipseGeometry_RadiusYProperty_set(jarg1);
    }

    public delegate IntPtr EllipseGeometry_RadiusYProperty_getDelegate();
    public static EllipseGeometry_RadiusYProperty_getDelegate _EllipseGeometry_RadiusYProperty_get;
    public static IntPtr EllipseGeometry_RadiusYProperty_get()
    {
        IntPtr ret = _EllipseGeometry_RadiusYProperty_get();

        return ret;
    }

    public delegate void HeaderedContentControl_HasHeaderProperty_setDelegate(HandleRef jarg1);
    public static HeaderedContentControl_HasHeaderProperty_setDelegate _HeaderedContentControl_HasHeaderProperty_set;
    public static void HeaderedContentControl_HasHeaderProperty_set(HandleRef jarg1)
    {
        _HeaderedContentControl_HasHeaderProperty_set(jarg1);
    }

    public delegate IntPtr HeaderedContentControl_HasHeaderProperty_getDelegate();
    public static HeaderedContentControl_HasHeaderProperty_getDelegate _HeaderedContentControl_HasHeaderProperty_get;
    public static IntPtr HeaderedContentControl_HasHeaderProperty_get()
    {
        IntPtr ret = _HeaderedContentControl_HasHeaderProperty_get();

        return ret;
    }

    public delegate void HeaderedContentControl_HeaderProperty_setDelegate(HandleRef jarg1);
    public static HeaderedContentControl_HeaderProperty_setDelegate _HeaderedContentControl_HeaderProperty_set;
    public static void HeaderedContentControl_HeaderProperty_set(HandleRef jarg1)
    {
        _HeaderedContentControl_HeaderProperty_set(jarg1);
    }

    public delegate IntPtr HeaderedContentControl_HeaderProperty_getDelegate();
    public static HeaderedContentControl_HeaderProperty_getDelegate _HeaderedContentControl_HeaderProperty_get;
    public static IntPtr HeaderedContentControl_HeaderProperty_get()
    {
        IntPtr ret = _HeaderedContentControl_HeaderProperty_get();

        return ret;
    }

    public delegate void HeaderedContentControl_HeaderTemplateProperty_setDelegate(HandleRef jarg1);
    public static HeaderedContentControl_HeaderTemplateProperty_setDelegate _HeaderedContentControl_HeaderTemplateProperty_set;
    public static void HeaderedContentControl_HeaderTemplateProperty_set(HandleRef jarg1)
    {
        _HeaderedContentControl_HeaderTemplateProperty_set(jarg1);
    }

    public delegate IntPtr HeaderedContentControl_HeaderTemplateProperty_getDelegate();
    public static HeaderedContentControl_HeaderTemplateProperty_getDelegate _HeaderedContentControl_HeaderTemplateProperty_get;
    public static IntPtr HeaderedContentControl_HeaderTemplateProperty_get()
    {
        IntPtr ret = _HeaderedContentControl_HeaderTemplateProperty_get();

        return ret;
    }

    public delegate void HeaderedContentControl_HeaderTemplateSelectorProperty_setDelegate(HandleRef jarg1);
    public static HeaderedContentControl_HeaderTemplateSelectorProperty_setDelegate _HeaderedContentControl_HeaderTemplateSelectorProperty_set;
    public static void HeaderedContentControl_HeaderTemplateSelectorProperty_set(HandleRef jarg1)
    {
        _HeaderedContentControl_HeaderTemplateSelectorProperty_set(jarg1);
    }

    public delegate IntPtr HeaderedContentControl_HeaderTemplateSelectorProperty_getDelegate();
    public static HeaderedContentControl_HeaderTemplateSelectorProperty_getDelegate _HeaderedContentControl_HeaderTemplateSelectorProperty_get;
    public static IntPtr HeaderedContentControl_HeaderTemplateSelectorProperty_get()
    {
        IntPtr ret = _HeaderedContentControl_HeaderTemplateSelectorProperty_get();

        return ret;
    }

    public delegate void Expander_ExpandDirectionProperty_setDelegate(HandleRef jarg1);
    public static Expander_ExpandDirectionProperty_setDelegate _Expander_ExpandDirectionProperty_set;
    public static void Expander_ExpandDirectionProperty_set(HandleRef jarg1)
    {
        _Expander_ExpandDirectionProperty_set(jarg1);
    }

    public delegate IntPtr Expander_ExpandDirectionProperty_getDelegate();
    public static Expander_ExpandDirectionProperty_getDelegate _Expander_ExpandDirectionProperty_get;
    public static IntPtr Expander_ExpandDirectionProperty_get()
    {
        IntPtr ret = _Expander_ExpandDirectionProperty_get();

        return ret;
    }

    public delegate void Expander_IsExpandedProperty_setDelegate(HandleRef jarg1);
    public static Expander_IsExpandedProperty_setDelegate _Expander_IsExpandedProperty_set;
    public static void Expander_IsExpandedProperty_set(HandleRef jarg1)
    {
        _Expander_IsExpandedProperty_set(jarg1);
    }

    public delegate IntPtr Expander_IsExpandedProperty_getDelegate();
    public static Expander_IsExpandedProperty_getDelegate _Expander_IsExpandedProperty_get;
    public static IntPtr Expander_IsExpandedProperty_get()
    {
        IntPtr ret = _Expander_IsExpandedProperty_get();

        return ret;
    }

    public delegate void FocusManager_FocusedElementProperty_setDelegate(HandleRef jarg1);
    public static FocusManager_FocusedElementProperty_setDelegate _FocusManager_FocusedElementProperty_set;
    public static void FocusManager_FocusedElementProperty_set(HandleRef jarg1)
    {
        _FocusManager_FocusedElementProperty_set(jarg1);
    }

    public delegate IntPtr FocusManager_FocusedElementProperty_getDelegate();
    public static FocusManager_FocusedElementProperty_getDelegate _FocusManager_FocusedElementProperty_get;
    public static IntPtr FocusManager_FocusedElementProperty_get()
    {
        IntPtr ret = _FocusManager_FocusedElementProperty_get();

        return ret;
    }

    public delegate void FocusManager_IsFocusScopeProperty_setDelegate(HandleRef jarg1);
    public static FocusManager_IsFocusScopeProperty_setDelegate _FocusManager_IsFocusScopeProperty_set;
    public static void FocusManager_IsFocusScopeProperty_set(HandleRef jarg1)
    {
        _FocusManager_IsFocusScopeProperty_set(jarg1);
    }

    public delegate IntPtr FocusManager_IsFocusScopeProperty_getDelegate();
    public static FocusManager_IsFocusScopeProperty_getDelegate _FocusManager_IsFocusScopeProperty_get;
    public static IntPtr FocusManager_IsFocusScopeProperty_get()
    {
        IntPtr ret = _FocusManager_IsFocusScopeProperty_get();

        return ret;
    }

    public delegate void GeometryGroup_ChildrenProperty_setDelegate(HandleRef jarg1);
    public static GeometryGroup_ChildrenProperty_setDelegate _GeometryGroup_ChildrenProperty_set;
    public static void GeometryGroup_ChildrenProperty_set(HandleRef jarg1)
    {
        _GeometryGroup_ChildrenProperty_set(jarg1);
    }

    public delegate IntPtr GeometryGroup_ChildrenProperty_getDelegate();
    public static GeometryGroup_ChildrenProperty_getDelegate _GeometryGroup_ChildrenProperty_get;
    public static IntPtr GeometryGroup_ChildrenProperty_get()
    {
        IntPtr ret = _GeometryGroup_ChildrenProperty_get();

        return ret;
    }

    public delegate void GeometryGroup_FillRuleProperty_setDelegate(HandleRef jarg1);
    public static GeometryGroup_FillRuleProperty_setDelegate _GeometryGroup_FillRuleProperty_set;
    public static void GeometryGroup_FillRuleProperty_set(HandleRef jarg1)
    {
        _GeometryGroup_FillRuleProperty_set(jarg1);
    }

    public delegate IntPtr GeometryGroup_FillRuleProperty_getDelegate();
    public static GeometryGroup_FillRuleProperty_getDelegate _GeometryGroup_FillRuleProperty_get;
    public static IntPtr GeometryGroup_FillRuleProperty_get()
    {
        IntPtr ret = _GeometryGroup_FillRuleProperty_get();

        return ret;
    }

    public delegate void GradientBrush_ColorInterpolationModeProperty_setDelegate(HandleRef jarg1);
    public static GradientBrush_ColorInterpolationModeProperty_setDelegate _GradientBrush_ColorInterpolationModeProperty_set;
    public static void GradientBrush_ColorInterpolationModeProperty_set(HandleRef jarg1)
    {
        _GradientBrush_ColorInterpolationModeProperty_set(jarg1);
    }

    public delegate IntPtr GradientBrush_ColorInterpolationModeProperty_getDelegate();
    public static GradientBrush_ColorInterpolationModeProperty_getDelegate _GradientBrush_ColorInterpolationModeProperty_get;
    public static IntPtr GradientBrush_ColorInterpolationModeProperty_get()
    {
        IntPtr ret = _GradientBrush_ColorInterpolationModeProperty_get();

        return ret;
    }

    public delegate void GradientBrush_GradientStopsProperty_setDelegate(HandleRef jarg1);
    public static GradientBrush_GradientStopsProperty_setDelegate _GradientBrush_GradientStopsProperty_set;
    public static void GradientBrush_GradientStopsProperty_set(HandleRef jarg1)
    {
        _GradientBrush_GradientStopsProperty_set(jarg1);
    }

    public delegate IntPtr GradientBrush_GradientStopsProperty_getDelegate();
    public static GradientBrush_GradientStopsProperty_getDelegate _GradientBrush_GradientStopsProperty_get;
    public static IntPtr GradientBrush_GradientStopsProperty_get()
    {
        IntPtr ret = _GradientBrush_GradientStopsProperty_get();

        return ret;
    }

    public delegate void GradientBrush_MappingModeProperty_setDelegate(HandleRef jarg1);
    public static GradientBrush_MappingModeProperty_setDelegate _GradientBrush_MappingModeProperty_set;
    public static void GradientBrush_MappingModeProperty_set(HandleRef jarg1)
    {
        _GradientBrush_MappingModeProperty_set(jarg1);
    }

    public delegate IntPtr GradientBrush_MappingModeProperty_getDelegate();
    public static GradientBrush_MappingModeProperty_getDelegate _GradientBrush_MappingModeProperty_get;
    public static IntPtr GradientBrush_MappingModeProperty_get()
    {
        IntPtr ret = _GradientBrush_MappingModeProperty_get();

        return ret;
    }

    public delegate void GradientBrush_SpreadMethodProperty_setDelegate(HandleRef jarg1);
    public static GradientBrush_SpreadMethodProperty_setDelegate _GradientBrush_SpreadMethodProperty_set;
    public static void GradientBrush_SpreadMethodProperty_set(HandleRef jarg1)
    {
        _GradientBrush_SpreadMethodProperty_set(jarg1);
    }

    public delegate IntPtr GradientBrush_SpreadMethodProperty_getDelegate();
    public static GradientBrush_SpreadMethodProperty_getDelegate _GradientBrush_SpreadMethodProperty_get;
    public static IntPtr GradientBrush_SpreadMethodProperty_get()
    {
        IntPtr ret = _GradientBrush_SpreadMethodProperty_get();

        return ret;
    }

    public delegate void GradientStop_ColorProperty_setDelegate(HandleRef jarg1);
    public static GradientStop_ColorProperty_setDelegate _GradientStop_ColorProperty_set;
    public static void GradientStop_ColorProperty_set(HandleRef jarg1)
    {
        _GradientStop_ColorProperty_set(jarg1);
    }

    public delegate IntPtr GradientStop_ColorProperty_getDelegate();
    public static GradientStop_ColorProperty_getDelegate _GradientStop_ColorProperty_get;
    public static IntPtr GradientStop_ColorProperty_get()
    {
        IntPtr ret = _GradientStop_ColorProperty_get();

        return ret;
    }

    public delegate void GradientStop_OffsetProperty_setDelegate(HandleRef jarg1);
    public static GradientStop_OffsetProperty_setDelegate _GradientStop_OffsetProperty_set;
    public static void GradientStop_OffsetProperty_set(HandleRef jarg1)
    {
        _GradientStop_OffsetProperty_set(jarg1);
    }

    public delegate IntPtr GradientStop_OffsetProperty_getDelegate();
    public static GradientStop_OffsetProperty_getDelegate _GradientStop_OffsetProperty_get;
    public static IntPtr GradientStop_OffsetProperty_get()
    {
        IntPtr ret = _GradientStop_OffsetProperty_get();

        return ret;
    }

    public delegate void Grid_ColumnProperty_setDelegate(HandleRef jarg1);
    public static Grid_ColumnProperty_setDelegate _Grid_ColumnProperty_set;
    public static void Grid_ColumnProperty_set(HandleRef jarg1)
    {
        _Grid_ColumnProperty_set(jarg1);
    }

    public delegate IntPtr Grid_ColumnProperty_getDelegate();
    public static Grid_ColumnProperty_getDelegate _Grid_ColumnProperty_get;
    public static IntPtr Grid_ColumnProperty_get()
    {
        IntPtr ret = _Grid_ColumnProperty_get();

        return ret;
    }

    public delegate void Grid_ColumnSpanProperty_setDelegate(HandleRef jarg1);
    public static Grid_ColumnSpanProperty_setDelegate _Grid_ColumnSpanProperty_set;
    public static void Grid_ColumnSpanProperty_set(HandleRef jarg1)
    {
        _Grid_ColumnSpanProperty_set(jarg1);
    }

    public delegate IntPtr Grid_ColumnSpanProperty_getDelegate();
    public static Grid_ColumnSpanProperty_getDelegate _Grid_ColumnSpanProperty_get;
    public static IntPtr Grid_ColumnSpanProperty_get()
    {
        IntPtr ret = _Grid_ColumnSpanProperty_get();

        return ret;
    }

    public delegate void Grid_IsSharedSizeScopeProperty_setDelegate(HandleRef jarg1);
    public static Grid_IsSharedSizeScopeProperty_setDelegate _Grid_IsSharedSizeScopeProperty_set;
    public static void Grid_IsSharedSizeScopeProperty_set(HandleRef jarg1)
    {
        _Grid_IsSharedSizeScopeProperty_set(jarg1);
    }

    public delegate IntPtr Grid_IsSharedSizeScopeProperty_getDelegate();
    public static Grid_IsSharedSizeScopeProperty_getDelegate _Grid_IsSharedSizeScopeProperty_get;
    public static IntPtr Grid_IsSharedSizeScopeProperty_get()
    {
        IntPtr ret = _Grid_IsSharedSizeScopeProperty_get();

        return ret;
    }

    public delegate void Grid_RowProperty_setDelegate(HandleRef jarg1);
    public static Grid_RowProperty_setDelegate _Grid_RowProperty_set;
    public static void Grid_RowProperty_set(HandleRef jarg1)
    {
        _Grid_RowProperty_set(jarg1);
    }

    public delegate IntPtr Grid_RowProperty_getDelegate();
    public static Grid_RowProperty_getDelegate _Grid_RowProperty_get;
    public static IntPtr Grid_RowProperty_get()
    {
        IntPtr ret = _Grid_RowProperty_get();

        return ret;
    }

    public delegate void Grid_RowSpanProperty_setDelegate(HandleRef jarg1);
    public static Grid_RowSpanProperty_setDelegate _Grid_RowSpanProperty_set;
    public static void Grid_RowSpanProperty_set(HandleRef jarg1)
    {
        _Grid_RowSpanProperty_set(jarg1);
    }

    public delegate IntPtr Grid_RowSpanProperty_getDelegate();
    public static Grid_RowSpanProperty_getDelegate _Grid_RowSpanProperty_get;
    public static IntPtr Grid_RowSpanProperty_get()
    {
        IntPtr ret = _Grid_RowSpanProperty_get();

        return ret;
    }

    public delegate void Grid_ShowGridLinesProperty_setDelegate(HandleRef jarg1);
    public static Grid_ShowGridLinesProperty_setDelegate _Grid_ShowGridLinesProperty_set;
    public static void Grid_ShowGridLinesProperty_set(HandleRef jarg1)
    {
        _Grid_ShowGridLinesProperty_set(jarg1);
    }

    public delegate IntPtr Grid_ShowGridLinesProperty_getDelegate();
    public static Grid_ShowGridLinesProperty_getDelegate _Grid_ShowGridLinesProperty_get;
    public static IntPtr Grid_ShowGridLinesProperty_get()
    {
        IntPtr ret = _Grid_ShowGridLinesProperty_get();

        return ret;
    }

    public delegate void HeaderedItemsControl_HasHeaderProperty_setDelegate(HandleRef jarg1);
    public static HeaderedItemsControl_HasHeaderProperty_setDelegate _HeaderedItemsControl_HasHeaderProperty_set;
    public static void HeaderedItemsControl_HasHeaderProperty_set(HandleRef jarg1)
    {
        _HeaderedItemsControl_HasHeaderProperty_set(jarg1);
    }

    public delegate IntPtr HeaderedItemsControl_HasHeaderProperty_getDelegate();
    public static HeaderedItemsControl_HasHeaderProperty_getDelegate _HeaderedItemsControl_HasHeaderProperty_get;
    public static IntPtr HeaderedItemsControl_HasHeaderProperty_get()
    {
        IntPtr ret = _HeaderedItemsControl_HasHeaderProperty_get();

        return ret;
    }

    public delegate void HeaderedItemsControl_HeaderProperty_setDelegate(HandleRef jarg1);
    public static HeaderedItemsControl_HeaderProperty_setDelegate _HeaderedItemsControl_HeaderProperty_set;
    public static void HeaderedItemsControl_HeaderProperty_set(HandleRef jarg1)
    {
        _HeaderedItemsControl_HeaderProperty_set(jarg1);
    }

    public delegate IntPtr HeaderedItemsControl_HeaderProperty_getDelegate();
    public static HeaderedItemsControl_HeaderProperty_getDelegate _HeaderedItemsControl_HeaderProperty_get;
    public static IntPtr HeaderedItemsControl_HeaderProperty_get()
    {
        IntPtr ret = _HeaderedItemsControl_HeaderProperty_get();

        return ret;
    }

    public delegate void HeaderedItemsControl_HeaderStringFormatProperty_setDelegate(HandleRef jarg1);
    public static HeaderedItemsControl_HeaderStringFormatProperty_setDelegate _HeaderedItemsControl_HeaderStringFormatProperty_set;
    public static void HeaderedItemsControl_HeaderStringFormatProperty_set(HandleRef jarg1)
    {
        _HeaderedItemsControl_HeaderStringFormatProperty_set(jarg1);
    }

    public delegate IntPtr HeaderedItemsControl_HeaderStringFormatProperty_getDelegate();
    public static HeaderedItemsControl_HeaderStringFormatProperty_getDelegate _HeaderedItemsControl_HeaderStringFormatProperty_get;
    public static IntPtr HeaderedItemsControl_HeaderStringFormatProperty_get()
    {
        IntPtr ret = _HeaderedItemsControl_HeaderStringFormatProperty_get();

        return ret;
    }

    public delegate void HeaderedItemsControl_HeaderTemplateProperty_setDelegate(HandleRef jarg1);
    public static HeaderedItemsControl_HeaderTemplateProperty_setDelegate _HeaderedItemsControl_HeaderTemplateProperty_set;
    public static void HeaderedItemsControl_HeaderTemplateProperty_set(HandleRef jarg1)
    {
        _HeaderedItemsControl_HeaderTemplateProperty_set(jarg1);
    }

    public delegate IntPtr HeaderedItemsControl_HeaderTemplateProperty_getDelegate();
    public static HeaderedItemsControl_HeaderTemplateProperty_getDelegate _HeaderedItemsControl_HeaderTemplateProperty_get;
    public static IntPtr HeaderedItemsControl_HeaderTemplateProperty_get()
    {
        IntPtr ret = _HeaderedItemsControl_HeaderTemplateProperty_get();

        return ret;
    }

    public delegate void HeaderedItemsControl_HeaderTemplateSelectorProperty_setDelegate(HandleRef jarg1);
    public static HeaderedItemsControl_HeaderTemplateSelectorProperty_setDelegate _HeaderedItemsControl_HeaderTemplateSelectorProperty_set;
    public static void HeaderedItemsControl_HeaderTemplateSelectorProperty_set(HandleRef jarg1)
    {
        _HeaderedItemsControl_HeaderTemplateSelectorProperty_set(jarg1);
    }

    public delegate IntPtr HeaderedItemsControl_HeaderTemplateSelectorProperty_getDelegate();
    public static HeaderedItemsControl_HeaderTemplateSelectorProperty_getDelegate _HeaderedItemsControl_HeaderTemplateSelectorProperty_get;
    public static IntPtr HeaderedItemsControl_HeaderTemplateSelectorProperty_get()
    {
        IntPtr ret = _HeaderedItemsControl_HeaderTemplateSelectorProperty_get();

        return ret;
    }

    public delegate void Image_SourceProperty_setDelegate(HandleRef jarg1);
    public static Image_SourceProperty_setDelegate _Image_SourceProperty_set;
    public static void Image_SourceProperty_set(HandleRef jarg1)
    {
        _Image_SourceProperty_set(jarg1);
    }

    public delegate IntPtr Image_SourceProperty_getDelegate();
    public static Image_SourceProperty_getDelegate _Image_SourceProperty_get;
    public static IntPtr Image_SourceProperty_get()
    {
        IntPtr ret = _Image_SourceProperty_get();

        return ret;
    }

    public delegate void Image_StretchProperty_setDelegate(HandleRef jarg1);
    public static Image_StretchProperty_setDelegate _Image_StretchProperty_set;
    public static void Image_StretchProperty_set(HandleRef jarg1)
    {
        _Image_StretchProperty_set(jarg1);
    }

    public delegate IntPtr Image_StretchProperty_getDelegate();
    public static Image_StretchProperty_getDelegate _Image_StretchProperty_get;
    public static IntPtr Image_StretchProperty_get()
    {
        IntPtr ret = _Image_StretchProperty_get();

        return ret;
    }

    public delegate void Image_StretchDirectionProperty_setDelegate(HandleRef jarg1);
    public static Image_StretchDirectionProperty_setDelegate _Image_StretchDirectionProperty_set;
    public static void Image_StretchDirectionProperty_set(HandleRef jarg1)
    {
        _Image_StretchDirectionProperty_set(jarg1);
    }

    public delegate IntPtr Image_StretchDirectionProperty_getDelegate();
    public static Image_StretchDirectionProperty_getDelegate _Image_StretchDirectionProperty_get;
    public static IntPtr Image_StretchDirectionProperty_get()
    {
        IntPtr ret = _Image_StretchDirectionProperty_get();

        return ret;
    }

    public delegate void TileBrush_AlignmentXProperty_setDelegate(HandleRef jarg1);
    public static TileBrush_AlignmentXProperty_setDelegate _TileBrush_AlignmentXProperty_set;
    public static void TileBrush_AlignmentXProperty_set(HandleRef jarg1)
    {
        _TileBrush_AlignmentXProperty_set(jarg1);
    }

    public delegate IntPtr TileBrush_AlignmentXProperty_getDelegate();
    public static TileBrush_AlignmentXProperty_getDelegate _TileBrush_AlignmentXProperty_get;
    public static IntPtr TileBrush_AlignmentXProperty_get()
    {
        IntPtr ret = _TileBrush_AlignmentXProperty_get();

        return ret;
    }

    public delegate void TileBrush_AlignmentYProperty_setDelegate(HandleRef jarg1);
    public static TileBrush_AlignmentYProperty_setDelegate _TileBrush_AlignmentYProperty_set;
    public static void TileBrush_AlignmentYProperty_set(HandleRef jarg1)
    {
        _TileBrush_AlignmentYProperty_set(jarg1);
    }

    public delegate IntPtr TileBrush_AlignmentYProperty_getDelegate();
    public static TileBrush_AlignmentYProperty_getDelegate _TileBrush_AlignmentYProperty_get;
    public static IntPtr TileBrush_AlignmentYProperty_get()
    {
        IntPtr ret = _TileBrush_AlignmentYProperty_get();

        return ret;
    }

    public delegate void TileBrush_StretchProperty_setDelegate(HandleRef jarg1);
    public static TileBrush_StretchProperty_setDelegate _TileBrush_StretchProperty_set;
    public static void TileBrush_StretchProperty_set(HandleRef jarg1)
    {
        _TileBrush_StretchProperty_set(jarg1);
    }

    public delegate IntPtr TileBrush_StretchProperty_getDelegate();
    public static TileBrush_StretchProperty_getDelegate _TileBrush_StretchProperty_get;
    public static IntPtr TileBrush_StretchProperty_get()
    {
        IntPtr ret = _TileBrush_StretchProperty_get();

        return ret;
    }

    public delegate void TileBrush_TileModeProperty_setDelegate(HandleRef jarg1);
    public static TileBrush_TileModeProperty_setDelegate _TileBrush_TileModeProperty_set;
    public static void TileBrush_TileModeProperty_set(HandleRef jarg1)
    {
        _TileBrush_TileModeProperty_set(jarg1);
    }

    public delegate IntPtr TileBrush_TileModeProperty_getDelegate();
    public static TileBrush_TileModeProperty_getDelegate _TileBrush_TileModeProperty_get;
    public static IntPtr TileBrush_TileModeProperty_get()
    {
        IntPtr ret = _TileBrush_TileModeProperty_get();

        return ret;
    }

    public delegate void TileBrush_ViewboxProperty_setDelegate(HandleRef jarg1);
    public static TileBrush_ViewboxProperty_setDelegate _TileBrush_ViewboxProperty_set;
    public static void TileBrush_ViewboxProperty_set(HandleRef jarg1)
    {
        _TileBrush_ViewboxProperty_set(jarg1);
    }

    public delegate IntPtr TileBrush_ViewboxProperty_getDelegate();
    public static TileBrush_ViewboxProperty_getDelegate _TileBrush_ViewboxProperty_get;
    public static IntPtr TileBrush_ViewboxProperty_get()
    {
        IntPtr ret = _TileBrush_ViewboxProperty_get();

        return ret;
    }

    public delegate void TileBrush_ViewboxUnitsProperty_setDelegate(HandleRef jarg1);
    public static TileBrush_ViewboxUnitsProperty_setDelegate _TileBrush_ViewboxUnitsProperty_set;
    public static void TileBrush_ViewboxUnitsProperty_set(HandleRef jarg1)
    {
        _TileBrush_ViewboxUnitsProperty_set(jarg1);
    }

    public delegate IntPtr TileBrush_ViewboxUnitsProperty_getDelegate();
    public static TileBrush_ViewboxUnitsProperty_getDelegate _TileBrush_ViewboxUnitsProperty_get;
    public static IntPtr TileBrush_ViewboxUnitsProperty_get()
    {
        IntPtr ret = _TileBrush_ViewboxUnitsProperty_get();

        return ret;
    }

    public delegate void TileBrush_ViewportProperty_setDelegate(HandleRef jarg1);
    public static TileBrush_ViewportProperty_setDelegate _TileBrush_ViewportProperty_set;
    public static void TileBrush_ViewportProperty_set(HandleRef jarg1)
    {
        _TileBrush_ViewportProperty_set(jarg1);
    }

    public delegate IntPtr TileBrush_ViewportProperty_getDelegate();
    public static TileBrush_ViewportProperty_getDelegate _TileBrush_ViewportProperty_get;
    public static IntPtr TileBrush_ViewportProperty_get()
    {
        IntPtr ret = _TileBrush_ViewportProperty_get();

        return ret;
    }

    public delegate void TileBrush_ViewportUnitsProperty_setDelegate(HandleRef jarg1);
    public static TileBrush_ViewportUnitsProperty_setDelegate _TileBrush_ViewportUnitsProperty_set;
    public static void TileBrush_ViewportUnitsProperty_set(HandleRef jarg1)
    {
        _TileBrush_ViewportUnitsProperty_set(jarg1);
    }

    public delegate IntPtr TileBrush_ViewportUnitsProperty_getDelegate();
    public static TileBrush_ViewportUnitsProperty_getDelegate _TileBrush_ViewportUnitsProperty_get;
    public static IntPtr TileBrush_ViewportUnitsProperty_get()
    {
        IntPtr ret = _TileBrush_ViewportUnitsProperty_get();

        return ret;
    }

    public delegate void ImageBrush_ImageSourceProperty_setDelegate(HandleRef jarg1);
    public static ImageBrush_ImageSourceProperty_setDelegate _ImageBrush_ImageSourceProperty_set;
    public static void ImageBrush_ImageSourceProperty_set(HandleRef jarg1)
    {
        _ImageBrush_ImageSourceProperty_set(jarg1);
    }

    public delegate IntPtr ImageBrush_ImageSourceProperty_getDelegate();
    public static ImageBrush_ImageSourceProperty_getDelegate _ImageBrush_ImageSourceProperty_get;
    public static IntPtr ImageBrush_ImageSourceProperty_get()
    {
        IntPtr ret = _ImageBrush_ImageSourceProperty_get();

        return ret;
    }

    public delegate void KeyboardNavigation_AcceptsReturnProperty_setDelegate(HandleRef jarg1);
    public static KeyboardNavigation_AcceptsReturnProperty_setDelegate _KeyboardNavigation_AcceptsReturnProperty_set;
    public static void KeyboardNavigation_AcceptsReturnProperty_set(HandleRef jarg1)
    {
        _KeyboardNavigation_AcceptsReturnProperty_set(jarg1);
    }

    public delegate IntPtr KeyboardNavigation_AcceptsReturnProperty_getDelegate();
    public static KeyboardNavigation_AcceptsReturnProperty_getDelegate _KeyboardNavigation_AcceptsReturnProperty_get;
    public static IntPtr KeyboardNavigation_AcceptsReturnProperty_get()
    {
        IntPtr ret = _KeyboardNavigation_AcceptsReturnProperty_get();

        return ret;
    }

    public delegate void KeyboardNavigation_ControlTabNavigationProperty_setDelegate(HandleRef jarg1);
    public static KeyboardNavigation_ControlTabNavigationProperty_setDelegate _KeyboardNavigation_ControlTabNavigationProperty_set;
    public static void KeyboardNavigation_ControlTabNavigationProperty_set(HandleRef jarg1)
    {
        _KeyboardNavigation_ControlTabNavigationProperty_set(jarg1);
    }

    public delegate IntPtr KeyboardNavigation_ControlTabNavigationProperty_getDelegate();
    public static KeyboardNavigation_ControlTabNavigationProperty_getDelegate _KeyboardNavigation_ControlTabNavigationProperty_get;
    public static IntPtr KeyboardNavigation_ControlTabNavigationProperty_get()
    {
        IntPtr ret = _KeyboardNavigation_ControlTabNavigationProperty_get();

        return ret;
    }

    public delegate void KeyboardNavigation_DirectionalNavigationProperty_setDelegate(HandleRef jarg1);
    public static KeyboardNavigation_DirectionalNavigationProperty_setDelegate _KeyboardNavigation_DirectionalNavigationProperty_set;
    public static void KeyboardNavigation_DirectionalNavigationProperty_set(HandleRef jarg1)
    {
        _KeyboardNavigation_DirectionalNavigationProperty_set(jarg1);
    }

    public delegate IntPtr KeyboardNavigation_DirectionalNavigationProperty_getDelegate();
    public static KeyboardNavigation_DirectionalNavigationProperty_getDelegate _KeyboardNavigation_DirectionalNavigationProperty_get;
    public static IntPtr KeyboardNavigation_DirectionalNavigationProperty_get()
    {
        IntPtr ret = _KeyboardNavigation_DirectionalNavigationProperty_get();

        return ret;
    }

    public delegate void KeyboardNavigation_IsTabStopProperty_setDelegate(HandleRef jarg1);
    public static KeyboardNavigation_IsTabStopProperty_setDelegate _KeyboardNavigation_IsTabStopProperty_set;
    public static void KeyboardNavigation_IsTabStopProperty_set(HandleRef jarg1)
    {
        _KeyboardNavigation_IsTabStopProperty_set(jarg1);
    }

    public delegate IntPtr KeyboardNavigation_IsTabStopProperty_getDelegate();
    public static KeyboardNavigation_IsTabStopProperty_getDelegate _KeyboardNavigation_IsTabStopProperty_get;
    public static IntPtr KeyboardNavigation_IsTabStopProperty_get()
    {
        IntPtr ret = _KeyboardNavigation_IsTabStopProperty_get();

        return ret;
    }

    public delegate void KeyboardNavigation_TabIndexProperty_setDelegate(HandleRef jarg1);
    public static KeyboardNavigation_TabIndexProperty_setDelegate _KeyboardNavigation_TabIndexProperty_set;
    public static void KeyboardNavigation_TabIndexProperty_set(HandleRef jarg1)
    {
        _KeyboardNavigation_TabIndexProperty_set(jarg1);
    }

    public delegate IntPtr KeyboardNavigation_TabIndexProperty_getDelegate();
    public static KeyboardNavigation_TabIndexProperty_getDelegate _KeyboardNavigation_TabIndexProperty_get;
    public static IntPtr KeyboardNavigation_TabIndexProperty_get()
    {
        IntPtr ret = _KeyboardNavigation_TabIndexProperty_get();

        return ret;
    }

    public delegate void KeyboardNavigation_TabNavigationProperty_setDelegate(HandleRef jarg1);
    public static KeyboardNavigation_TabNavigationProperty_setDelegate _KeyboardNavigation_TabNavigationProperty_set;
    public static void KeyboardNavigation_TabNavigationProperty_set(HandleRef jarg1)
    {
        _KeyboardNavigation_TabNavigationProperty_set(jarg1);
    }

    public delegate IntPtr KeyboardNavigation_TabNavigationProperty_getDelegate();
    public static KeyboardNavigation_TabNavigationProperty_getDelegate _KeyboardNavigation_TabNavigationProperty_get;
    public static IntPtr KeyboardNavigation_TabNavigationProperty_get()
    {
        IntPtr ret = _KeyboardNavigation_TabNavigationProperty_get();

        return ret;
    }

    public delegate void Label_TargetProperty_setDelegate(HandleRef jarg1);
    public static Label_TargetProperty_setDelegate _Label_TargetProperty_set;
    public static void Label_TargetProperty_set(HandleRef jarg1)
    {
        _Label_TargetProperty_set(jarg1);
    }

    public delegate IntPtr Label_TargetProperty_getDelegate();
    public static Label_TargetProperty_getDelegate _Label_TargetProperty_get;
    public static IntPtr Label_TargetProperty_get()
    {
        IntPtr ret = _Label_TargetProperty_get();

        return ret;
    }

    public delegate void Line_X1Property_setDelegate(HandleRef jarg1);
    public static Line_X1Property_setDelegate _Line_X1Property_set;
    public static void Line_X1Property_set(HandleRef jarg1)
    {
        _Line_X1Property_set(jarg1);
    }

    public delegate IntPtr Line_X1Property_getDelegate();
    public static Line_X1Property_getDelegate _Line_X1Property_get;
    public static IntPtr Line_X1Property_get()
    {
        IntPtr ret = _Line_X1Property_get();

        return ret;
    }

    public delegate void Line_Y1Property_setDelegate(HandleRef jarg1);
    public static Line_Y1Property_setDelegate _Line_Y1Property_set;
    public static void Line_Y1Property_set(HandleRef jarg1)
    {
        _Line_Y1Property_set(jarg1);
    }

    public delegate IntPtr Line_Y1Property_getDelegate();
    public static Line_Y1Property_getDelegate _Line_Y1Property_get;
    public static IntPtr Line_Y1Property_get()
    {
        IntPtr ret = _Line_Y1Property_get();

        return ret;
    }

    public delegate void Line_X2Property_setDelegate(HandleRef jarg1);
    public static Line_X2Property_setDelegate _Line_X2Property_set;
    public static void Line_X2Property_set(HandleRef jarg1)
    {
        _Line_X2Property_set(jarg1);
    }

    public delegate IntPtr Line_X2Property_getDelegate();
    public static Line_X2Property_getDelegate _Line_X2Property_get;
    public static IntPtr Line_X2Property_get()
    {
        IntPtr ret = _Line_X2Property_get();

        return ret;
    }

    public delegate void Line_Y2Property_setDelegate(HandleRef jarg1);
    public static Line_Y2Property_setDelegate _Line_Y2Property_set;
    public static void Line_Y2Property_set(HandleRef jarg1)
    {
        _Line_Y2Property_set(jarg1);
    }

    public delegate IntPtr Line_Y2Property_getDelegate();
    public static Line_Y2Property_getDelegate _Line_Y2Property_get;
    public static IntPtr Line_Y2Property_get()
    {
        IntPtr ret = _Line_Y2Property_get();

        return ret;
    }

    public delegate void LinearGradientBrush_EndPointProperty_setDelegate(HandleRef jarg1);
    public static LinearGradientBrush_EndPointProperty_setDelegate _LinearGradientBrush_EndPointProperty_set;
    public static void LinearGradientBrush_EndPointProperty_set(HandleRef jarg1)
    {
        _LinearGradientBrush_EndPointProperty_set(jarg1);
    }

    public delegate IntPtr LinearGradientBrush_EndPointProperty_getDelegate();
    public static LinearGradientBrush_EndPointProperty_getDelegate _LinearGradientBrush_EndPointProperty_get;
    public static IntPtr LinearGradientBrush_EndPointProperty_get()
    {
        IntPtr ret = _LinearGradientBrush_EndPointProperty_get();

        return ret;
    }

    public delegate void LinearGradientBrush_StartPointProperty_setDelegate(HandleRef jarg1);
    public static LinearGradientBrush_StartPointProperty_setDelegate _LinearGradientBrush_StartPointProperty_set;
    public static void LinearGradientBrush_StartPointProperty_set(HandleRef jarg1)
    {
        _LinearGradientBrush_StartPointProperty_set(jarg1);
    }

    public delegate IntPtr LinearGradientBrush_StartPointProperty_getDelegate();
    public static LinearGradientBrush_StartPointProperty_getDelegate _LinearGradientBrush_StartPointProperty_get;
    public static IntPtr LinearGradientBrush_StartPointProperty_get()
    {
        IntPtr ret = _LinearGradientBrush_StartPointProperty_get();

        return ret;
    }

    public delegate void LineGeometry_EndPointProperty_setDelegate(HandleRef jarg1);
    public static LineGeometry_EndPointProperty_setDelegate _LineGeometry_EndPointProperty_set;
    public static void LineGeometry_EndPointProperty_set(HandleRef jarg1)
    {
        _LineGeometry_EndPointProperty_set(jarg1);
    }

    public delegate IntPtr LineGeometry_EndPointProperty_getDelegate();
    public static LineGeometry_EndPointProperty_getDelegate _LineGeometry_EndPointProperty_get;
    public static IntPtr LineGeometry_EndPointProperty_get()
    {
        IntPtr ret = _LineGeometry_EndPointProperty_get();

        return ret;
    }

    public delegate void LineGeometry_StartPointProperty_setDelegate(HandleRef jarg1);
    public static LineGeometry_StartPointProperty_setDelegate _LineGeometry_StartPointProperty_set;
    public static void LineGeometry_StartPointProperty_set(HandleRef jarg1)
    {
        _LineGeometry_StartPointProperty_set(jarg1);
    }

    public delegate IntPtr LineGeometry_StartPointProperty_getDelegate();
    public static LineGeometry_StartPointProperty_getDelegate _LineGeometry_StartPointProperty_get;
    public static IntPtr LineGeometry_StartPointProperty_get()
    {
        IntPtr ret = _LineGeometry_StartPointProperty_get();

        return ret;
    }

    public delegate void ListBox_SelectedItemsProperty_setDelegate(HandleRef jarg1);
    public static ListBox_SelectedItemsProperty_setDelegate _ListBox_SelectedItemsProperty_set;
    public static void ListBox_SelectedItemsProperty_set(HandleRef jarg1)
    {
        _ListBox_SelectedItemsProperty_set(jarg1);
    }

    public delegate IntPtr ListBox_SelectedItemsProperty_getDelegate();
    public static ListBox_SelectedItemsProperty_getDelegate _ListBox_SelectedItemsProperty_get;
    public static IntPtr ListBox_SelectedItemsProperty_get()
    {
        IntPtr ret = _ListBox_SelectedItemsProperty_get();

        return ret;
    }

    public delegate void ListBox_SelectionModeProperty_setDelegate(HandleRef jarg1);
    public static ListBox_SelectionModeProperty_setDelegate _ListBox_SelectionModeProperty_set;
    public static void ListBox_SelectionModeProperty_set(HandleRef jarg1)
    {
        _ListBox_SelectionModeProperty_set(jarg1);
    }

    public delegate IntPtr ListBox_SelectionModeProperty_getDelegate();
    public static ListBox_SelectionModeProperty_getDelegate _ListBox_SelectionModeProperty_get;
    public static IntPtr ListBox_SelectionModeProperty_get()
    {
        IntPtr ret = _ListBox_SelectionModeProperty_get();

        return ret;
    }

    public delegate void Matrix3DProjection_ProjectionMatrixProperty_setDelegate(HandleRef jarg1);
    public static Matrix3DProjection_ProjectionMatrixProperty_setDelegate _Matrix3DProjection_ProjectionMatrixProperty_set;
    public static void Matrix3DProjection_ProjectionMatrixProperty_set(HandleRef jarg1)
    {
        _Matrix3DProjection_ProjectionMatrixProperty_set(jarg1);
    }

    public delegate IntPtr Matrix3DProjection_ProjectionMatrixProperty_getDelegate();
    public static Matrix3DProjection_ProjectionMatrixProperty_getDelegate _Matrix3DProjection_ProjectionMatrixProperty_get;
    public static IntPtr Matrix3DProjection_ProjectionMatrixProperty_get()
    {
        IntPtr ret = _Matrix3DProjection_ProjectionMatrixProperty_get();

        return ret;
    }

    public delegate void MatrixTransform_MatrixProperty_setDelegate(HandleRef jarg1);
    public static MatrixTransform_MatrixProperty_setDelegate _MatrixTransform_MatrixProperty_set;
    public static void MatrixTransform_MatrixProperty_set(HandleRef jarg1)
    {
        _MatrixTransform_MatrixProperty_set(jarg1);
    }

    public delegate IntPtr MatrixTransform_MatrixProperty_getDelegate();
    public static MatrixTransform_MatrixProperty_getDelegate _MatrixTransform_MatrixProperty_get;
    public static IntPtr MatrixTransform_MatrixProperty_get()
    {
        IntPtr ret = _MatrixTransform_MatrixProperty_get();

        return ret;
    }

    public delegate void Menu_IsMainMenuProperty_setDelegate(HandleRef jarg1);
    public static Menu_IsMainMenuProperty_setDelegate _Menu_IsMainMenuProperty_set;
    public static void Menu_IsMainMenuProperty_set(HandleRef jarg1)
    {
        _Menu_IsMainMenuProperty_set(jarg1);
    }

    public delegate IntPtr Menu_IsMainMenuProperty_getDelegate();
    public static Menu_IsMainMenuProperty_getDelegate _Menu_IsMainMenuProperty_get;
    public static IntPtr Menu_IsMainMenuProperty_get()
    {
        IntPtr ret = _Menu_IsMainMenuProperty_get();

        return ret;
    }

    public delegate void MenuItem_CommandParameterProperty_setDelegate(HandleRef jarg1);
    public static MenuItem_CommandParameterProperty_setDelegate _MenuItem_CommandParameterProperty_set;
    public static void MenuItem_CommandParameterProperty_set(HandleRef jarg1)
    {
        _MenuItem_CommandParameterProperty_set(jarg1);
    }

    public delegate IntPtr MenuItem_CommandParameterProperty_getDelegate();
    public static MenuItem_CommandParameterProperty_getDelegate _MenuItem_CommandParameterProperty_get;
    public static IntPtr MenuItem_CommandParameterProperty_get()
    {
        IntPtr ret = _MenuItem_CommandParameterProperty_get();

        return ret;
    }

    public delegate void MenuItem_CommandProperty_setDelegate(HandleRef jarg1);
    public static MenuItem_CommandProperty_setDelegate _MenuItem_CommandProperty_set;
    public static void MenuItem_CommandProperty_set(HandleRef jarg1)
    {
        _MenuItem_CommandProperty_set(jarg1);
    }

    public delegate IntPtr MenuItem_CommandProperty_getDelegate();
    public static MenuItem_CommandProperty_getDelegate _MenuItem_CommandProperty_get;
    public static IntPtr MenuItem_CommandProperty_get()
    {
        IntPtr ret = _MenuItem_CommandProperty_get();

        return ret;
    }

    public delegate void MenuItem_CommandTargetProperty_setDelegate(HandleRef jarg1);
    public static MenuItem_CommandTargetProperty_setDelegate _MenuItem_CommandTargetProperty_set;
    public static void MenuItem_CommandTargetProperty_set(HandleRef jarg1)
    {
        _MenuItem_CommandTargetProperty_set(jarg1);
    }

    public delegate IntPtr MenuItem_CommandTargetProperty_getDelegate();
    public static MenuItem_CommandTargetProperty_getDelegate _MenuItem_CommandTargetProperty_get;
    public static IntPtr MenuItem_CommandTargetProperty_get()
    {
        IntPtr ret = _MenuItem_CommandTargetProperty_get();

        return ret;
    }

    public delegate void MenuItem_IconProperty_setDelegate(HandleRef jarg1);
    public static MenuItem_IconProperty_setDelegate _MenuItem_IconProperty_set;
    public static void MenuItem_IconProperty_set(HandleRef jarg1)
    {
        _MenuItem_IconProperty_set(jarg1);
    }

    public delegate IntPtr MenuItem_IconProperty_getDelegate();
    public static MenuItem_IconProperty_getDelegate _MenuItem_IconProperty_get;
    public static IntPtr MenuItem_IconProperty_get()
    {
        IntPtr ret = _MenuItem_IconProperty_get();

        return ret;
    }

    public delegate void MenuItem_InputGestureTextProperty_setDelegate(HandleRef jarg1);
    public static MenuItem_InputGestureTextProperty_setDelegate _MenuItem_InputGestureTextProperty_set;
    public static void MenuItem_InputGestureTextProperty_set(HandleRef jarg1)
    {
        _MenuItem_InputGestureTextProperty_set(jarg1);
    }

    public delegate IntPtr MenuItem_InputGestureTextProperty_getDelegate();
    public static MenuItem_InputGestureTextProperty_getDelegate _MenuItem_InputGestureTextProperty_get;
    public static IntPtr MenuItem_InputGestureTextProperty_get()
    {
        IntPtr ret = _MenuItem_InputGestureTextProperty_get();

        return ret;
    }

    public delegate void MenuItem_IsCheckableProperty_setDelegate(HandleRef jarg1);
    public static MenuItem_IsCheckableProperty_setDelegate _MenuItem_IsCheckableProperty_set;
    public static void MenuItem_IsCheckableProperty_set(HandleRef jarg1)
    {
        _MenuItem_IsCheckableProperty_set(jarg1);
    }

    public delegate IntPtr MenuItem_IsCheckableProperty_getDelegate();
    public static MenuItem_IsCheckableProperty_getDelegate _MenuItem_IsCheckableProperty_get;
    public static IntPtr MenuItem_IsCheckableProperty_get()
    {
        IntPtr ret = _MenuItem_IsCheckableProperty_get();

        return ret;
    }

    public delegate void MenuItem_IsCheckedProperty_setDelegate(HandleRef jarg1);
    public static MenuItem_IsCheckedProperty_setDelegate _MenuItem_IsCheckedProperty_set;
    public static void MenuItem_IsCheckedProperty_set(HandleRef jarg1)
    {
        _MenuItem_IsCheckedProperty_set(jarg1);
    }

    public delegate IntPtr MenuItem_IsCheckedProperty_getDelegate();
    public static MenuItem_IsCheckedProperty_getDelegate _MenuItem_IsCheckedProperty_get;
    public static IntPtr MenuItem_IsCheckedProperty_get()
    {
        IntPtr ret = _MenuItem_IsCheckedProperty_get();

        return ret;
    }

    public delegate void MenuItem_IsHighlightedProperty_setDelegate(HandleRef jarg1);
    public static MenuItem_IsHighlightedProperty_setDelegate _MenuItem_IsHighlightedProperty_set;
    public static void MenuItem_IsHighlightedProperty_set(HandleRef jarg1)
    {
        _MenuItem_IsHighlightedProperty_set(jarg1);
    }

    public delegate IntPtr MenuItem_IsHighlightedProperty_getDelegate();
    public static MenuItem_IsHighlightedProperty_getDelegate _MenuItem_IsHighlightedProperty_get;
    public static IntPtr MenuItem_IsHighlightedProperty_get()
    {
        IntPtr ret = _MenuItem_IsHighlightedProperty_get();

        return ret;
    }

    public delegate void MenuItem_IsPressedProperty_setDelegate(HandleRef jarg1);
    public static MenuItem_IsPressedProperty_setDelegate _MenuItem_IsPressedProperty_set;
    public static void MenuItem_IsPressedProperty_set(HandleRef jarg1)
    {
        _MenuItem_IsPressedProperty_set(jarg1);
    }

    public delegate IntPtr MenuItem_IsPressedProperty_getDelegate();
    public static MenuItem_IsPressedProperty_getDelegate _MenuItem_IsPressedProperty_get;
    public static IntPtr MenuItem_IsPressedProperty_get()
    {
        IntPtr ret = _MenuItem_IsPressedProperty_get();

        return ret;
    }

    public delegate void MenuItem_IsSubmenuOpenProperty_setDelegate(HandleRef jarg1);
    public static MenuItem_IsSubmenuOpenProperty_setDelegate _MenuItem_IsSubmenuOpenProperty_set;
    public static void MenuItem_IsSubmenuOpenProperty_set(HandleRef jarg1)
    {
        _MenuItem_IsSubmenuOpenProperty_set(jarg1);
    }

    public delegate IntPtr MenuItem_IsSubmenuOpenProperty_getDelegate();
    public static MenuItem_IsSubmenuOpenProperty_getDelegate _MenuItem_IsSubmenuOpenProperty_get;
    public static IntPtr MenuItem_IsSubmenuOpenProperty_get()
    {
        IntPtr ret = _MenuItem_IsSubmenuOpenProperty_get();

        return ret;
    }

    public delegate void MenuItem_IsSuspendingPopupAnimationProperty_setDelegate(HandleRef jarg1);
    public static MenuItem_IsSuspendingPopupAnimationProperty_setDelegate _MenuItem_IsSuspendingPopupAnimationProperty_set;
    public static void MenuItem_IsSuspendingPopupAnimationProperty_set(HandleRef jarg1)
    {
        _MenuItem_IsSuspendingPopupAnimationProperty_set(jarg1);
    }

    public delegate IntPtr MenuItem_IsSuspendingPopupAnimationProperty_getDelegate();
    public static MenuItem_IsSuspendingPopupAnimationProperty_getDelegate _MenuItem_IsSuspendingPopupAnimationProperty_get;
    public static IntPtr MenuItem_IsSuspendingPopupAnimationProperty_get()
    {
        IntPtr ret = _MenuItem_IsSuspendingPopupAnimationProperty_get();

        return ret;
    }

    public delegate void MenuItem_RoleProperty_setDelegate(HandleRef jarg1);
    public static MenuItem_RoleProperty_setDelegate _MenuItem_RoleProperty_set;
    public static void MenuItem_RoleProperty_set(HandleRef jarg1)
    {
        _MenuItem_RoleProperty_set(jarg1);
    }

    public delegate IntPtr MenuItem_RoleProperty_getDelegate();
    public static MenuItem_RoleProperty_getDelegate _MenuItem_RoleProperty_get;
    public static IntPtr MenuItem_RoleProperty_get()
    {
        IntPtr ret = _MenuItem_RoleProperty_get();

        return ret;
    }

    public delegate void MenuItem_StaysOpenOnClickProperty_setDelegate(HandleRef jarg1);
    public static MenuItem_StaysOpenOnClickProperty_setDelegate _MenuItem_StaysOpenOnClickProperty_set;
    public static void MenuItem_StaysOpenOnClickProperty_set(HandleRef jarg1)
    {
        _MenuItem_StaysOpenOnClickProperty_set(jarg1);
    }

    public delegate IntPtr MenuItem_StaysOpenOnClickProperty_getDelegate();
    public static MenuItem_StaysOpenOnClickProperty_getDelegate _MenuItem_StaysOpenOnClickProperty_get;
    public static IntPtr MenuItem_StaysOpenOnClickProperty_get()
    {
        IntPtr ret = _MenuItem_StaysOpenOnClickProperty_get();

        return ret;
    }

    public delegate void UserControl_SourceProperty_setDelegate(HandleRef jarg1);
    public static UserControl_SourceProperty_setDelegate _UserControl_SourceProperty_set;
    public static void UserControl_SourceProperty_set(HandleRef jarg1)
    {
        _UserControl_SourceProperty_set(jarg1);
    }

    public delegate IntPtr UserControl_SourceProperty_getDelegate();
    public static UserControl_SourceProperty_getDelegate _UserControl_SourceProperty_get;
    public static IntPtr UserControl_SourceProperty_get()
    {
        IntPtr ret = _UserControl_SourceProperty_get();

        return ret;
    }

    public delegate void MessageDialog_MessageProperty_setDelegate(HandleRef jarg1);
    public static MessageDialog_MessageProperty_setDelegate _MessageDialog_MessageProperty_set;
    public static void MessageDialog_MessageProperty_set(HandleRef jarg1)
    {
        _MessageDialog_MessageProperty_set(jarg1);
    }

    public delegate IntPtr MessageDialog_MessageProperty_getDelegate();
    public static MessageDialog_MessageProperty_getDelegate _MessageDialog_MessageProperty_get;
    public static IntPtr MessageDialog_MessageProperty_get()
    {
        IntPtr ret = _MessageDialog_MessageProperty_get();

        return ret;
    }

    public delegate void MessageDialog_CaptionProperty_setDelegate(HandleRef jarg1);
    public static MessageDialog_CaptionProperty_setDelegate _MessageDialog_CaptionProperty_set;
    public static void MessageDialog_CaptionProperty_set(HandleRef jarg1)
    {
        _MessageDialog_CaptionProperty_set(jarg1);
    }

    public delegate IntPtr MessageDialog_CaptionProperty_getDelegate();
    public static MessageDialog_CaptionProperty_getDelegate _MessageDialog_CaptionProperty_get;
    public static IntPtr MessageDialog_CaptionProperty_get()
    {
        IntPtr ret = _MessageDialog_CaptionProperty_get();

        return ret;
    }

    public delegate void MessageDialog_ButtonsProperty_setDelegate(HandleRef jarg1);
    public static MessageDialog_ButtonsProperty_setDelegate _MessageDialog_ButtonsProperty_set;
    public static void MessageDialog_ButtonsProperty_set(HandleRef jarg1)
    {
        _MessageDialog_ButtonsProperty_set(jarg1);
    }

    public delegate IntPtr MessageDialog_ButtonsProperty_getDelegate();
    public static MessageDialog_ButtonsProperty_getDelegate _MessageDialog_ButtonsProperty_get;
    public static IntPtr MessageDialog_ButtonsProperty_get()
    {
        IntPtr ret = _MessageDialog_ButtonsProperty_get();

        return ret;
    }

    public delegate void MessageDialog_ImageProperty_setDelegate(HandleRef jarg1);
    public static MessageDialog_ImageProperty_setDelegate _MessageDialog_ImageProperty_set;
    public static void MessageDialog_ImageProperty_set(HandleRef jarg1)
    {
        _MessageDialog_ImageProperty_set(jarg1);
    }

    public delegate IntPtr MessageDialog_ImageProperty_getDelegate();
    public static MessageDialog_ImageProperty_getDelegate _MessageDialog_ImageProperty_get;
    public static IntPtr MessageDialog_ImageProperty_get()
    {
        IntPtr ret = _MessageDialog_ImageProperty_get();

        return ret;
    }

    public delegate void NameScope_NameScopeProperty_setDelegate(HandleRef jarg1);
    public static NameScope_NameScopeProperty_setDelegate _NameScope_NameScopeProperty_set;
    public static void NameScope_NameScopeProperty_set(HandleRef jarg1)
    {
        _NameScope_NameScopeProperty_set(jarg1);
    }

    public delegate IntPtr NameScope_NameScopeProperty_getDelegate();
    public static NameScope_NameScopeProperty_getDelegate _NameScope_NameScopeProperty_get;
    public static IntPtr NameScope_NameScopeProperty_get()
    {
        IntPtr ret = _NameScope_NameScopeProperty_get();

        return ret;
    }

    public delegate void PasswordBox_MaxLengthProperty_setDelegate(HandleRef jarg1);
    public static PasswordBox_MaxLengthProperty_setDelegate _PasswordBox_MaxLengthProperty_set;
    public static void PasswordBox_MaxLengthProperty_set(HandleRef jarg1)
    {
        _PasswordBox_MaxLengthProperty_set(jarg1);
    }

    public delegate IntPtr PasswordBox_MaxLengthProperty_getDelegate();
    public static PasswordBox_MaxLengthProperty_getDelegate _PasswordBox_MaxLengthProperty_get;
    public static IntPtr PasswordBox_MaxLengthProperty_get()
    {
        IntPtr ret = _PasswordBox_MaxLengthProperty_get();

        return ret;
    }

    public delegate void PasswordBox_PasswordCharProperty_setDelegate(HandleRef jarg1);
    public static PasswordBox_PasswordCharProperty_setDelegate _PasswordBox_PasswordCharProperty_set;
    public static void PasswordBox_PasswordCharProperty_set(HandleRef jarg1)
    {
        _PasswordBox_PasswordCharProperty_set(jarg1);
    }

    public delegate IntPtr PasswordBox_PasswordCharProperty_getDelegate();
    public static PasswordBox_PasswordCharProperty_getDelegate _PasswordBox_PasswordCharProperty_get;
    public static IntPtr PasswordBox_PasswordCharProperty_get()
    {
        IntPtr ret = _PasswordBox_PasswordCharProperty_get();

        return ret;
    }

    public delegate void Path_DataProperty_setDelegate(HandleRef jarg1);
    public static Path_DataProperty_setDelegate _Path_DataProperty_set;
    public static void Path_DataProperty_set(HandleRef jarg1)
    {
        _Path_DataProperty_set(jarg1);
    }

    public delegate IntPtr Path_DataProperty_getDelegate();
    public static Path_DataProperty_getDelegate _Path_DataProperty_get;
    public static IntPtr Path_DataProperty_get()
    {
        IntPtr ret = _Path_DataProperty_get();

        return ret;
    }

    public delegate void Pen_BrushProperty_setDelegate(HandleRef jarg1);
    public static Pen_BrushProperty_setDelegate _Pen_BrushProperty_set;
    public static void Pen_BrushProperty_set(HandleRef jarg1)
    {
        _Pen_BrushProperty_set(jarg1);
    }

    public delegate IntPtr Pen_BrushProperty_getDelegate();
    public static Pen_BrushProperty_getDelegate _Pen_BrushProperty_get;
    public static IntPtr Pen_BrushProperty_get()
    {
        IntPtr ret = _Pen_BrushProperty_get();

        return ret;
    }

    public delegate void Pen_DashCapProperty_setDelegate(HandleRef jarg1);
    public static Pen_DashCapProperty_setDelegate _Pen_DashCapProperty_set;
    public static void Pen_DashCapProperty_set(HandleRef jarg1)
    {
        _Pen_DashCapProperty_set(jarg1);
    }

    public delegate IntPtr Pen_DashCapProperty_getDelegate();
    public static Pen_DashCapProperty_getDelegate _Pen_DashCapProperty_get;
    public static IntPtr Pen_DashCapProperty_get()
    {
        IntPtr ret = _Pen_DashCapProperty_get();

        return ret;
    }

    public delegate void Pen_DashStyleProperty_setDelegate(HandleRef jarg1);
    public static Pen_DashStyleProperty_setDelegate _Pen_DashStyleProperty_set;
    public static void Pen_DashStyleProperty_set(HandleRef jarg1)
    {
        _Pen_DashStyleProperty_set(jarg1);
    }

    public delegate IntPtr Pen_DashStyleProperty_getDelegate();
    public static Pen_DashStyleProperty_getDelegate _Pen_DashStyleProperty_get;
    public static IntPtr Pen_DashStyleProperty_get()
    {
        IntPtr ret = _Pen_DashStyleProperty_get();

        return ret;
    }

    public delegate void Pen_EndLineCapProperty_setDelegate(HandleRef jarg1);
    public static Pen_EndLineCapProperty_setDelegate _Pen_EndLineCapProperty_set;
    public static void Pen_EndLineCapProperty_set(HandleRef jarg1)
    {
        _Pen_EndLineCapProperty_set(jarg1);
    }

    public delegate IntPtr Pen_EndLineCapProperty_getDelegate();
    public static Pen_EndLineCapProperty_getDelegate _Pen_EndLineCapProperty_get;
    public static IntPtr Pen_EndLineCapProperty_get()
    {
        IntPtr ret = _Pen_EndLineCapProperty_get();

        return ret;
    }

    public delegate void Pen_LineJoinProperty_setDelegate(HandleRef jarg1);
    public static Pen_LineJoinProperty_setDelegate _Pen_LineJoinProperty_set;
    public static void Pen_LineJoinProperty_set(HandleRef jarg1)
    {
        _Pen_LineJoinProperty_set(jarg1);
    }

    public delegate IntPtr Pen_LineJoinProperty_getDelegate();
    public static Pen_LineJoinProperty_getDelegate _Pen_LineJoinProperty_get;
    public static IntPtr Pen_LineJoinProperty_get()
    {
        IntPtr ret = _Pen_LineJoinProperty_get();

        return ret;
    }

    public delegate void Pen_MiterLimitProperty_setDelegate(HandleRef jarg1);
    public static Pen_MiterLimitProperty_setDelegate _Pen_MiterLimitProperty_set;
    public static void Pen_MiterLimitProperty_set(HandleRef jarg1)
    {
        _Pen_MiterLimitProperty_set(jarg1);
    }

    public delegate IntPtr Pen_MiterLimitProperty_getDelegate();
    public static Pen_MiterLimitProperty_getDelegate _Pen_MiterLimitProperty_get;
    public static IntPtr Pen_MiterLimitProperty_get()
    {
        IntPtr ret = _Pen_MiterLimitProperty_get();

        return ret;
    }

    public delegate void Pen_StartLineCapProperty_setDelegate(HandleRef jarg1);
    public static Pen_StartLineCapProperty_setDelegate _Pen_StartLineCapProperty_set;
    public static void Pen_StartLineCapProperty_set(HandleRef jarg1)
    {
        _Pen_StartLineCapProperty_set(jarg1);
    }

    public delegate IntPtr Pen_StartLineCapProperty_getDelegate();
    public static Pen_StartLineCapProperty_getDelegate _Pen_StartLineCapProperty_get;
    public static IntPtr Pen_StartLineCapProperty_get()
    {
        IntPtr ret = _Pen_StartLineCapProperty_get();

        return ret;
    }

    public delegate void Pen_ThicknessProperty_setDelegate(HandleRef jarg1);
    public static Pen_ThicknessProperty_setDelegate _Pen_ThicknessProperty_set;
    public static void Pen_ThicknessProperty_set(HandleRef jarg1)
    {
        _Pen_ThicknessProperty_set(jarg1);
    }

    public delegate IntPtr Pen_ThicknessProperty_getDelegate();
    public static Pen_ThicknessProperty_getDelegate _Pen_ThicknessProperty_get;
    public static IntPtr Pen_ThicknessProperty_get()
    {
        IntPtr ret = _Pen_ThicknessProperty_get();

        return ret;
    }

    public delegate void PlaneProjection_CenterOfRotationXProperty_setDelegate(HandleRef jarg1);
    public static PlaneProjection_CenterOfRotationXProperty_setDelegate _PlaneProjection_CenterOfRotationXProperty_set;
    public static void PlaneProjection_CenterOfRotationXProperty_set(HandleRef jarg1)
    {
        _PlaneProjection_CenterOfRotationXProperty_set(jarg1);
    }

    public delegate IntPtr PlaneProjection_CenterOfRotationXProperty_getDelegate();
    public static PlaneProjection_CenterOfRotationXProperty_getDelegate _PlaneProjection_CenterOfRotationXProperty_get;
    public static IntPtr PlaneProjection_CenterOfRotationXProperty_get()
    {
        IntPtr ret = _PlaneProjection_CenterOfRotationXProperty_get();

        return ret;
    }

    public delegate void PlaneProjection_CenterOfRotationYProperty_setDelegate(HandleRef jarg1);
    public static PlaneProjection_CenterOfRotationYProperty_setDelegate _PlaneProjection_CenterOfRotationYProperty_set;
    public static void PlaneProjection_CenterOfRotationYProperty_set(HandleRef jarg1)
    {
        _PlaneProjection_CenterOfRotationYProperty_set(jarg1);
    }

    public delegate IntPtr PlaneProjection_CenterOfRotationYProperty_getDelegate();
    public static PlaneProjection_CenterOfRotationYProperty_getDelegate _PlaneProjection_CenterOfRotationYProperty_get;
    public static IntPtr PlaneProjection_CenterOfRotationYProperty_get()
    {
        IntPtr ret = _PlaneProjection_CenterOfRotationYProperty_get();

        return ret;
    }

    public delegate void PlaneProjection_CenterOfRotationZProperty_setDelegate(HandleRef jarg1);
    public static PlaneProjection_CenterOfRotationZProperty_setDelegate _PlaneProjection_CenterOfRotationZProperty_set;
    public static void PlaneProjection_CenterOfRotationZProperty_set(HandleRef jarg1)
    {
        _PlaneProjection_CenterOfRotationZProperty_set(jarg1);
    }

    public delegate IntPtr PlaneProjection_CenterOfRotationZProperty_getDelegate();
    public static PlaneProjection_CenterOfRotationZProperty_getDelegate _PlaneProjection_CenterOfRotationZProperty_get;
    public static IntPtr PlaneProjection_CenterOfRotationZProperty_get()
    {
        IntPtr ret = _PlaneProjection_CenterOfRotationZProperty_get();

        return ret;
    }

    public delegate void PlaneProjection_GlobalOffsetXProperty_setDelegate(HandleRef jarg1);
    public static PlaneProjection_GlobalOffsetXProperty_setDelegate _PlaneProjection_GlobalOffsetXProperty_set;
    public static void PlaneProjection_GlobalOffsetXProperty_set(HandleRef jarg1)
    {
        _PlaneProjection_GlobalOffsetXProperty_set(jarg1);
    }

    public delegate IntPtr PlaneProjection_GlobalOffsetXProperty_getDelegate();
    public static PlaneProjection_GlobalOffsetXProperty_getDelegate _PlaneProjection_GlobalOffsetXProperty_get;
    public static IntPtr PlaneProjection_GlobalOffsetXProperty_get()
    {
        IntPtr ret = _PlaneProjection_GlobalOffsetXProperty_get();

        return ret;
    }

    public delegate void PlaneProjection_GlobalOffsetYProperty_setDelegate(HandleRef jarg1);
    public static PlaneProjection_GlobalOffsetYProperty_setDelegate _PlaneProjection_GlobalOffsetYProperty_set;
    public static void PlaneProjection_GlobalOffsetYProperty_set(HandleRef jarg1)
    {
        _PlaneProjection_GlobalOffsetYProperty_set(jarg1);
    }

    public delegate IntPtr PlaneProjection_GlobalOffsetYProperty_getDelegate();
    public static PlaneProjection_GlobalOffsetYProperty_getDelegate _PlaneProjection_GlobalOffsetYProperty_get;
    public static IntPtr PlaneProjection_GlobalOffsetYProperty_get()
    {
        IntPtr ret = _PlaneProjection_GlobalOffsetYProperty_get();

        return ret;
    }

    public delegate void PlaneProjection_GlobalOffsetZProperty_setDelegate(HandleRef jarg1);
    public static PlaneProjection_GlobalOffsetZProperty_setDelegate _PlaneProjection_GlobalOffsetZProperty_set;
    public static void PlaneProjection_GlobalOffsetZProperty_set(HandleRef jarg1)
    {
        _PlaneProjection_GlobalOffsetZProperty_set(jarg1);
    }

    public delegate IntPtr PlaneProjection_GlobalOffsetZProperty_getDelegate();
    public static PlaneProjection_GlobalOffsetZProperty_getDelegate _PlaneProjection_GlobalOffsetZProperty_get;
    public static IntPtr PlaneProjection_GlobalOffsetZProperty_get()
    {
        IntPtr ret = _PlaneProjection_GlobalOffsetZProperty_get();

        return ret;
    }

    public delegate void PlaneProjection_LocalOffsetXProperty_setDelegate(HandleRef jarg1);
    public static PlaneProjection_LocalOffsetXProperty_setDelegate _PlaneProjection_LocalOffsetXProperty_set;
    public static void PlaneProjection_LocalOffsetXProperty_set(HandleRef jarg1)
    {
        _PlaneProjection_LocalOffsetXProperty_set(jarg1);
    }

    public delegate IntPtr PlaneProjection_LocalOffsetXProperty_getDelegate();
    public static PlaneProjection_LocalOffsetXProperty_getDelegate _PlaneProjection_LocalOffsetXProperty_get;
    public static IntPtr PlaneProjection_LocalOffsetXProperty_get()
    {
        IntPtr ret = _PlaneProjection_LocalOffsetXProperty_get();

        return ret;
    }

    public delegate void PlaneProjection_LocalOffsetYProperty_setDelegate(HandleRef jarg1);
    public static PlaneProjection_LocalOffsetYProperty_setDelegate _PlaneProjection_LocalOffsetYProperty_set;
    public static void PlaneProjection_LocalOffsetYProperty_set(HandleRef jarg1)
    {
        _PlaneProjection_LocalOffsetYProperty_set(jarg1);
    }

    public delegate IntPtr PlaneProjection_LocalOffsetYProperty_getDelegate();
    public static PlaneProjection_LocalOffsetYProperty_getDelegate _PlaneProjection_LocalOffsetYProperty_get;
    public static IntPtr PlaneProjection_LocalOffsetYProperty_get()
    {
        IntPtr ret = _PlaneProjection_LocalOffsetYProperty_get();

        return ret;
    }

    public delegate void PlaneProjection_LocalOffsetZProperty_setDelegate(HandleRef jarg1);
    public static PlaneProjection_LocalOffsetZProperty_setDelegate _PlaneProjection_LocalOffsetZProperty_set;
    public static void PlaneProjection_LocalOffsetZProperty_set(HandleRef jarg1)
    {
        _PlaneProjection_LocalOffsetZProperty_set(jarg1);
    }

    public delegate IntPtr PlaneProjection_LocalOffsetZProperty_getDelegate();
    public static PlaneProjection_LocalOffsetZProperty_getDelegate _PlaneProjection_LocalOffsetZProperty_get;
    public static IntPtr PlaneProjection_LocalOffsetZProperty_get()
    {
        IntPtr ret = _PlaneProjection_LocalOffsetZProperty_get();

        return ret;
    }

    public delegate void PlaneProjection_ProjectionMatrixProperty_setDelegate(HandleRef jarg1);
    public static PlaneProjection_ProjectionMatrixProperty_setDelegate _PlaneProjection_ProjectionMatrixProperty_set;
    public static void PlaneProjection_ProjectionMatrixProperty_set(HandleRef jarg1)
    {
        _PlaneProjection_ProjectionMatrixProperty_set(jarg1);
    }

    public delegate IntPtr PlaneProjection_ProjectionMatrixProperty_getDelegate();
    public static PlaneProjection_ProjectionMatrixProperty_getDelegate _PlaneProjection_ProjectionMatrixProperty_get;
    public static IntPtr PlaneProjection_ProjectionMatrixProperty_get()
    {
        IntPtr ret = _PlaneProjection_ProjectionMatrixProperty_get();

        return ret;
    }

    public delegate void PlaneProjection_RotationXProperty_setDelegate(HandleRef jarg1);
    public static PlaneProjection_RotationXProperty_setDelegate _PlaneProjection_RotationXProperty_set;
    public static void PlaneProjection_RotationXProperty_set(HandleRef jarg1)
    {
        _PlaneProjection_RotationXProperty_set(jarg1);
    }

    public delegate IntPtr PlaneProjection_RotationXProperty_getDelegate();
    public static PlaneProjection_RotationXProperty_getDelegate _PlaneProjection_RotationXProperty_get;
    public static IntPtr PlaneProjection_RotationXProperty_get()
    {
        IntPtr ret = _PlaneProjection_RotationXProperty_get();

        return ret;
    }

    public delegate void PlaneProjection_RotationYProperty_setDelegate(HandleRef jarg1);
    public static PlaneProjection_RotationYProperty_setDelegate _PlaneProjection_RotationYProperty_set;
    public static void PlaneProjection_RotationYProperty_set(HandleRef jarg1)
    {
        _PlaneProjection_RotationYProperty_set(jarg1);
    }

    public delegate IntPtr PlaneProjection_RotationYProperty_getDelegate();
    public static PlaneProjection_RotationYProperty_getDelegate _PlaneProjection_RotationYProperty_get;
    public static IntPtr PlaneProjection_RotationYProperty_get()
    {
        IntPtr ret = _PlaneProjection_RotationYProperty_get();

        return ret;
    }

    public delegate void PlaneProjection_RotationZProperty_setDelegate(HandleRef jarg1);
    public static PlaneProjection_RotationZProperty_setDelegate _PlaneProjection_RotationZProperty_set;
    public static void PlaneProjection_RotationZProperty_set(HandleRef jarg1)
    {
        _PlaneProjection_RotationZProperty_set(jarg1);
    }

    public delegate IntPtr PlaneProjection_RotationZProperty_getDelegate();
    public static PlaneProjection_RotationZProperty_getDelegate _PlaneProjection_RotationZProperty_get;
    public static IntPtr PlaneProjection_RotationZProperty_get()
    {
        IntPtr ret = _PlaneProjection_RotationZProperty_get();

        return ret;
    }

    public delegate void Popup_AllowsTransparencyProperty_setDelegate(HandleRef jarg1);
    public static Popup_AllowsTransparencyProperty_setDelegate _Popup_AllowsTransparencyProperty_set;
    public static void Popup_AllowsTransparencyProperty_set(HandleRef jarg1)
    {
        _Popup_AllowsTransparencyProperty_set(jarg1);
    }

    public delegate IntPtr Popup_AllowsTransparencyProperty_getDelegate();
    public static Popup_AllowsTransparencyProperty_getDelegate _Popup_AllowsTransparencyProperty_get;
    public static IntPtr Popup_AllowsTransparencyProperty_get()
    {
        IntPtr ret = _Popup_AllowsTransparencyProperty_get();

        return ret;
    }

    public delegate void Popup_ChildProperty_setDelegate(HandleRef jarg1);
    public static Popup_ChildProperty_setDelegate _Popup_ChildProperty_set;
    public static void Popup_ChildProperty_set(HandleRef jarg1)
    {
        _Popup_ChildProperty_set(jarg1);
    }

    public delegate IntPtr Popup_ChildProperty_getDelegate();
    public static Popup_ChildProperty_getDelegate _Popup_ChildProperty_get;
    public static IntPtr Popup_ChildProperty_get()
    {
        IntPtr ret = _Popup_ChildProperty_get();

        return ret;
    }

    public delegate void Popup_CustomPopupPlacementCallbackProperty_setDelegate(HandleRef jarg1);
    public static Popup_CustomPopupPlacementCallbackProperty_setDelegate _Popup_CustomPopupPlacementCallbackProperty_set;
    public static void Popup_CustomPopupPlacementCallbackProperty_set(HandleRef jarg1)
    {
        _Popup_CustomPopupPlacementCallbackProperty_set(jarg1);
    }

    public delegate IntPtr Popup_CustomPopupPlacementCallbackProperty_getDelegate();
    public static Popup_CustomPopupPlacementCallbackProperty_getDelegate _Popup_CustomPopupPlacementCallbackProperty_get;
    public static IntPtr Popup_CustomPopupPlacementCallbackProperty_get()
    {
        IntPtr ret = _Popup_CustomPopupPlacementCallbackProperty_get();

        return ret;
    }

    public delegate void Popup_HasDropShadowProperty_setDelegate(HandleRef jarg1);
    public static Popup_HasDropShadowProperty_setDelegate _Popup_HasDropShadowProperty_set;
    public static void Popup_HasDropShadowProperty_set(HandleRef jarg1)
    {
        _Popup_HasDropShadowProperty_set(jarg1);
    }

    public delegate IntPtr Popup_HasDropShadowProperty_getDelegate();
    public static Popup_HasDropShadowProperty_getDelegate _Popup_HasDropShadowProperty_get;
    public static IntPtr Popup_HasDropShadowProperty_get()
    {
        IntPtr ret = _Popup_HasDropShadowProperty_get();

        return ret;
    }

    public delegate void Popup_HorizontalOffsetProperty_setDelegate(HandleRef jarg1);
    public static Popup_HorizontalOffsetProperty_setDelegate _Popup_HorizontalOffsetProperty_set;
    public static void Popup_HorizontalOffsetProperty_set(HandleRef jarg1)
    {
        _Popup_HorizontalOffsetProperty_set(jarg1);
    }

    public delegate IntPtr Popup_HorizontalOffsetProperty_getDelegate();
    public static Popup_HorizontalOffsetProperty_getDelegate _Popup_HorizontalOffsetProperty_get;
    public static IntPtr Popup_HorizontalOffsetProperty_get()
    {
        IntPtr ret = _Popup_HorizontalOffsetProperty_get();

        return ret;
    }

    public delegate void Popup_IsOpenProperty_setDelegate(HandleRef jarg1);
    public static Popup_IsOpenProperty_setDelegate _Popup_IsOpenProperty_set;
    public static void Popup_IsOpenProperty_set(HandleRef jarg1)
    {
        _Popup_IsOpenProperty_set(jarg1);
    }

    public delegate IntPtr Popup_IsOpenProperty_getDelegate();
    public static Popup_IsOpenProperty_getDelegate _Popup_IsOpenProperty_get;
    public static IntPtr Popup_IsOpenProperty_get()
    {
        IntPtr ret = _Popup_IsOpenProperty_get();

        return ret;
    }

    public delegate void Popup_PlacementProperty_setDelegate(HandleRef jarg1);
    public static Popup_PlacementProperty_setDelegate _Popup_PlacementProperty_set;
    public static void Popup_PlacementProperty_set(HandleRef jarg1)
    {
        _Popup_PlacementProperty_set(jarg1);
    }

    public delegate IntPtr Popup_PlacementProperty_getDelegate();
    public static Popup_PlacementProperty_getDelegate _Popup_PlacementProperty_get;
    public static IntPtr Popup_PlacementProperty_get()
    {
        IntPtr ret = _Popup_PlacementProperty_get();

        return ret;
    }

    public delegate void Popup_PlacementRectangleProperty_setDelegate(HandleRef jarg1);
    public static Popup_PlacementRectangleProperty_setDelegate _Popup_PlacementRectangleProperty_set;
    public static void Popup_PlacementRectangleProperty_set(HandleRef jarg1)
    {
        _Popup_PlacementRectangleProperty_set(jarg1);
    }

    public delegate IntPtr Popup_PlacementRectangleProperty_getDelegate();
    public static Popup_PlacementRectangleProperty_getDelegate _Popup_PlacementRectangleProperty_get;
    public static IntPtr Popup_PlacementRectangleProperty_get()
    {
        IntPtr ret = _Popup_PlacementRectangleProperty_get();

        return ret;
    }

    public delegate void Popup_PlacementTargetProperty_setDelegate(HandleRef jarg1);
    public static Popup_PlacementTargetProperty_setDelegate _Popup_PlacementTargetProperty_set;
    public static void Popup_PlacementTargetProperty_set(HandleRef jarg1)
    {
        _Popup_PlacementTargetProperty_set(jarg1);
    }

    public delegate IntPtr Popup_PlacementTargetProperty_getDelegate();
    public static Popup_PlacementTargetProperty_getDelegate _Popup_PlacementTargetProperty_get;
    public static IntPtr Popup_PlacementTargetProperty_get()
    {
        IntPtr ret = _Popup_PlacementTargetProperty_get();

        return ret;
    }

    public delegate void Popup_PopupAnimationProperty_setDelegate(HandleRef jarg1);
    public static Popup_PopupAnimationProperty_setDelegate _Popup_PopupAnimationProperty_set;
    public static void Popup_PopupAnimationProperty_set(HandleRef jarg1)
    {
        _Popup_PopupAnimationProperty_set(jarg1);
    }

    public delegate IntPtr Popup_PopupAnimationProperty_getDelegate();
    public static Popup_PopupAnimationProperty_getDelegate _Popup_PopupAnimationProperty_get;
    public static IntPtr Popup_PopupAnimationProperty_get()
    {
        IntPtr ret = _Popup_PopupAnimationProperty_get();

        return ret;
    }

    public delegate void Popup_StaysOpenProperty_setDelegate(HandleRef jarg1);
    public static Popup_StaysOpenProperty_setDelegate _Popup_StaysOpenProperty_set;
    public static void Popup_StaysOpenProperty_set(HandleRef jarg1)
    {
        _Popup_StaysOpenProperty_set(jarg1);
    }

    public delegate IntPtr Popup_StaysOpenProperty_getDelegate();
    public static Popup_StaysOpenProperty_getDelegate _Popup_StaysOpenProperty_get;
    public static IntPtr Popup_StaysOpenProperty_get()
    {
        IntPtr ret = _Popup_StaysOpenProperty_get();

        return ret;
    }

    public delegate void Popup_VerticalOffsetProperty_setDelegate(HandleRef jarg1);
    public static Popup_VerticalOffsetProperty_setDelegate _Popup_VerticalOffsetProperty_set;
    public static void Popup_VerticalOffsetProperty_set(HandleRef jarg1)
    {
        _Popup_VerticalOffsetProperty_set(jarg1);
    }

    public delegate IntPtr Popup_VerticalOffsetProperty_getDelegate();
    public static Popup_VerticalOffsetProperty_getDelegate _Popup_VerticalOffsetProperty_get;
    public static IntPtr Popup_VerticalOffsetProperty_get()
    {
        IntPtr ret = _Popup_VerticalOffsetProperty_get();

        return ret;
    }

    public delegate void RangeBase_LargeChangeProperty_setDelegate(HandleRef jarg1);
    public static RangeBase_LargeChangeProperty_setDelegate _RangeBase_LargeChangeProperty_set;
    public static void RangeBase_LargeChangeProperty_set(HandleRef jarg1)
    {
        _RangeBase_LargeChangeProperty_set(jarg1);
    }

    public delegate IntPtr RangeBase_LargeChangeProperty_getDelegate();
    public static RangeBase_LargeChangeProperty_getDelegate _RangeBase_LargeChangeProperty_get;
    public static IntPtr RangeBase_LargeChangeProperty_get()
    {
        IntPtr ret = _RangeBase_LargeChangeProperty_get();

        return ret;
    }

    public delegate void RangeBase_MaximumProperty_setDelegate(HandleRef jarg1);
    public static RangeBase_MaximumProperty_setDelegate _RangeBase_MaximumProperty_set;
    public static void RangeBase_MaximumProperty_set(HandleRef jarg1)
    {
        _RangeBase_MaximumProperty_set(jarg1);
    }

    public delegate IntPtr RangeBase_MaximumProperty_getDelegate();
    public static RangeBase_MaximumProperty_getDelegate _RangeBase_MaximumProperty_get;
    public static IntPtr RangeBase_MaximumProperty_get()
    {
        IntPtr ret = _RangeBase_MaximumProperty_get();

        return ret;
    }

    public delegate void RangeBase_MinimumProperty_setDelegate(HandleRef jarg1);
    public static RangeBase_MinimumProperty_setDelegate _RangeBase_MinimumProperty_set;
    public static void RangeBase_MinimumProperty_set(HandleRef jarg1)
    {
        _RangeBase_MinimumProperty_set(jarg1);
    }

    public delegate IntPtr RangeBase_MinimumProperty_getDelegate();
    public static RangeBase_MinimumProperty_getDelegate _RangeBase_MinimumProperty_get;
    public static IntPtr RangeBase_MinimumProperty_get()
    {
        IntPtr ret = _RangeBase_MinimumProperty_get();

        return ret;
    }

    public delegate void RangeBase_SmallChangeProperty_setDelegate(HandleRef jarg1);
    public static RangeBase_SmallChangeProperty_setDelegate _RangeBase_SmallChangeProperty_set;
    public static void RangeBase_SmallChangeProperty_set(HandleRef jarg1)
    {
        _RangeBase_SmallChangeProperty_set(jarg1);
    }

    public delegate IntPtr RangeBase_SmallChangeProperty_getDelegate();
    public static RangeBase_SmallChangeProperty_getDelegate _RangeBase_SmallChangeProperty_get;
    public static IntPtr RangeBase_SmallChangeProperty_get()
    {
        IntPtr ret = _RangeBase_SmallChangeProperty_get();

        return ret;
    }

    public delegate void RangeBase_ValueProperty_setDelegate(HandleRef jarg1);
    public static RangeBase_ValueProperty_setDelegate _RangeBase_ValueProperty_set;
    public static void RangeBase_ValueProperty_set(HandleRef jarg1)
    {
        _RangeBase_ValueProperty_set(jarg1);
    }

    public delegate IntPtr RangeBase_ValueProperty_getDelegate();
    public static RangeBase_ValueProperty_getDelegate _RangeBase_ValueProperty_get;
    public static IntPtr RangeBase_ValueProperty_get()
    {
        IntPtr ret = _RangeBase_ValueProperty_get();

        return ret;
    }

    public delegate void ProgressBar_IsIndeterminateProperty_setDelegate(HandleRef jarg1);
    public static ProgressBar_IsIndeterminateProperty_setDelegate _ProgressBar_IsIndeterminateProperty_set;
    public static void ProgressBar_IsIndeterminateProperty_set(HandleRef jarg1)
    {
        _ProgressBar_IsIndeterminateProperty_set(jarg1);
    }

    public delegate IntPtr ProgressBar_IsIndeterminateProperty_getDelegate();
    public static ProgressBar_IsIndeterminateProperty_getDelegate _ProgressBar_IsIndeterminateProperty_get;
    public static IntPtr ProgressBar_IsIndeterminateProperty_get()
    {
        IntPtr ret = _ProgressBar_IsIndeterminateProperty_get();

        return ret;
    }

    public delegate void ProgressBar_OrientationProperty_setDelegate(HandleRef jarg1);
    public static ProgressBar_OrientationProperty_setDelegate _ProgressBar_OrientationProperty_set;
    public static void ProgressBar_OrientationProperty_set(HandleRef jarg1)
    {
        _ProgressBar_OrientationProperty_set(jarg1);
    }

    public delegate IntPtr ProgressBar_OrientationProperty_getDelegate();
    public static ProgressBar_OrientationProperty_getDelegate _ProgressBar_OrientationProperty_get;
    public static IntPtr ProgressBar_OrientationProperty_get()
    {
        IntPtr ret = _ProgressBar_OrientationProperty_get();

        return ret;
    }

    public delegate void RadialGradientBrush_CenterProperty_setDelegate(HandleRef jarg1);
    public static RadialGradientBrush_CenterProperty_setDelegate _RadialGradientBrush_CenterProperty_set;
    public static void RadialGradientBrush_CenterProperty_set(HandleRef jarg1)
    {
        _RadialGradientBrush_CenterProperty_set(jarg1);
    }

    public delegate IntPtr RadialGradientBrush_CenterProperty_getDelegate();
    public static RadialGradientBrush_CenterProperty_getDelegate _RadialGradientBrush_CenterProperty_get;
    public static IntPtr RadialGradientBrush_CenterProperty_get()
    {
        IntPtr ret = _RadialGradientBrush_CenterProperty_get();

        return ret;
    }

    public delegate void RadialGradientBrush_GradientOriginProperty_setDelegate(HandleRef jarg1);
    public static RadialGradientBrush_GradientOriginProperty_setDelegate _RadialGradientBrush_GradientOriginProperty_set;
    public static void RadialGradientBrush_GradientOriginProperty_set(HandleRef jarg1)
    {
        _RadialGradientBrush_GradientOriginProperty_set(jarg1);
    }

    public delegate IntPtr RadialGradientBrush_GradientOriginProperty_getDelegate();
    public static RadialGradientBrush_GradientOriginProperty_getDelegate _RadialGradientBrush_GradientOriginProperty_get;
    public static IntPtr RadialGradientBrush_GradientOriginProperty_get()
    {
        IntPtr ret = _RadialGradientBrush_GradientOriginProperty_get();

        return ret;
    }

    public delegate void RadialGradientBrush_RadiusXProperty_setDelegate(HandleRef jarg1);
    public static RadialGradientBrush_RadiusXProperty_setDelegate _RadialGradientBrush_RadiusXProperty_set;
    public static void RadialGradientBrush_RadiusXProperty_set(HandleRef jarg1)
    {
        _RadialGradientBrush_RadiusXProperty_set(jarg1);
    }

    public delegate IntPtr RadialGradientBrush_RadiusXProperty_getDelegate();
    public static RadialGradientBrush_RadiusXProperty_getDelegate _RadialGradientBrush_RadiusXProperty_get;
    public static IntPtr RadialGradientBrush_RadiusXProperty_get()
    {
        IntPtr ret = _RadialGradientBrush_RadiusXProperty_get();

        return ret;
    }

    public delegate void RadialGradientBrush_RadiusYProperty_setDelegate(HandleRef jarg1);
    public static RadialGradientBrush_RadiusYProperty_setDelegate _RadialGradientBrush_RadiusYProperty_set;
    public static void RadialGradientBrush_RadiusYProperty_set(HandleRef jarg1)
    {
        _RadialGradientBrush_RadiusYProperty_set(jarg1);
    }

    public delegate IntPtr RadialGradientBrush_RadiusYProperty_getDelegate();
    public static RadialGradientBrush_RadiusYProperty_getDelegate _RadialGradientBrush_RadiusYProperty_get;
    public static IntPtr RadialGradientBrush_RadiusYProperty_get()
    {
        IntPtr ret = _RadialGradientBrush_RadiusYProperty_get();

        return ret;
    }

    public delegate void RadioButton_GroupNameProperty_setDelegate(HandleRef jarg1);
    public static RadioButton_GroupNameProperty_setDelegate _RadioButton_GroupNameProperty_set;
    public static void RadioButton_GroupNameProperty_set(HandleRef jarg1)
    {
        _RadioButton_GroupNameProperty_set(jarg1);
    }

    public delegate IntPtr RadioButton_GroupNameProperty_getDelegate();
    public static RadioButton_GroupNameProperty_getDelegate _RadioButton_GroupNameProperty_get;
    public static IntPtr RadioButton_GroupNameProperty_get()
    {
        IntPtr ret = _RadioButton_GroupNameProperty_get();

        return ret;
    }

    public delegate void Rectangle_RadiusXProperty_setDelegate(HandleRef jarg1);
    public static Rectangle_RadiusXProperty_setDelegate _Rectangle_RadiusXProperty_set;
    public static void Rectangle_RadiusXProperty_set(HandleRef jarg1)
    {
        _Rectangle_RadiusXProperty_set(jarg1);
    }

    public delegate IntPtr Rectangle_RadiusXProperty_getDelegate();
    public static Rectangle_RadiusXProperty_getDelegate _Rectangle_RadiusXProperty_get;
    public static IntPtr Rectangle_RadiusXProperty_get()
    {
        IntPtr ret = _Rectangle_RadiusXProperty_get();

        return ret;
    }

    public delegate void Rectangle_RadiusYProperty_setDelegate(HandleRef jarg1);
    public static Rectangle_RadiusYProperty_setDelegate _Rectangle_RadiusYProperty_set;
    public static void Rectangle_RadiusYProperty_set(HandleRef jarg1)
    {
        _Rectangle_RadiusYProperty_set(jarg1);
    }

    public delegate IntPtr Rectangle_RadiusYProperty_getDelegate();
    public static Rectangle_RadiusYProperty_getDelegate _Rectangle_RadiusYProperty_get;
    public static IntPtr Rectangle_RadiusYProperty_get()
    {
        IntPtr ret = _Rectangle_RadiusYProperty_get();

        return ret;
    }

    public delegate void RectangleGeometry_RadiusXProperty_setDelegate(HandleRef jarg1);
    public static RectangleGeometry_RadiusXProperty_setDelegate _RectangleGeometry_RadiusXProperty_set;
    public static void RectangleGeometry_RadiusXProperty_set(HandleRef jarg1)
    {
        _RectangleGeometry_RadiusXProperty_set(jarg1);
    }

    public delegate IntPtr RectangleGeometry_RadiusXProperty_getDelegate();
    public static RectangleGeometry_RadiusXProperty_getDelegate _RectangleGeometry_RadiusXProperty_get;
    public static IntPtr RectangleGeometry_RadiusXProperty_get()
    {
        IntPtr ret = _RectangleGeometry_RadiusXProperty_get();

        return ret;
    }

    public delegate void RectangleGeometry_RadiusYProperty_setDelegate(HandleRef jarg1);
    public static RectangleGeometry_RadiusYProperty_setDelegate _RectangleGeometry_RadiusYProperty_set;
    public static void RectangleGeometry_RadiusYProperty_set(HandleRef jarg1)
    {
        _RectangleGeometry_RadiusYProperty_set(jarg1);
    }

    public delegate IntPtr RectangleGeometry_RadiusYProperty_getDelegate();
    public static RectangleGeometry_RadiusYProperty_getDelegate _RectangleGeometry_RadiusYProperty_get;
    public static IntPtr RectangleGeometry_RadiusYProperty_get()
    {
        IntPtr ret = _RectangleGeometry_RadiusYProperty_get();

        return ret;
    }

    public delegate void RectangleGeometry_RectProperty_setDelegate(HandleRef jarg1);
    public static RectangleGeometry_RectProperty_setDelegate _RectangleGeometry_RectProperty_set;
    public static void RectangleGeometry_RectProperty_set(HandleRef jarg1)
    {
        _RectangleGeometry_RectProperty_set(jarg1);
    }

    public delegate IntPtr RectangleGeometry_RectProperty_getDelegate();
    public static RectangleGeometry_RectProperty_getDelegate _RectangleGeometry_RectProperty_get;
    public static IntPtr RectangleGeometry_RectProperty_get()
    {
        IntPtr ret = _RectangleGeometry_RectProperty_get();

        return ret;
    }

    public delegate void RepeatButton_DelayProperty_setDelegate(HandleRef jarg1);
    public static RepeatButton_DelayProperty_setDelegate _RepeatButton_DelayProperty_set;
    public static void RepeatButton_DelayProperty_set(HandleRef jarg1)
    {
        _RepeatButton_DelayProperty_set(jarg1);
    }

    public delegate IntPtr RepeatButton_DelayProperty_getDelegate();
    public static RepeatButton_DelayProperty_getDelegate _RepeatButton_DelayProperty_get;
    public static IntPtr RepeatButton_DelayProperty_get()
    {
        IntPtr ret = _RepeatButton_DelayProperty_get();

        return ret;
    }

    public delegate void RepeatButton_IntervalProperty_setDelegate(HandleRef jarg1);
    public static RepeatButton_IntervalProperty_setDelegate _RepeatButton_IntervalProperty_set;
    public static void RepeatButton_IntervalProperty_set(HandleRef jarg1)
    {
        _RepeatButton_IntervalProperty_set(jarg1);
    }

    public delegate IntPtr RepeatButton_IntervalProperty_getDelegate();
    public static RepeatButton_IntervalProperty_getDelegate _RepeatButton_IntervalProperty_get;
    public static IntPtr RepeatButton_IntervalProperty_get()
    {
        IntPtr ret = _RepeatButton_IntervalProperty_get();

        return ret;
    }

    public delegate void RotateTransform_AngleProperty_setDelegate(HandleRef jarg1);
    public static RotateTransform_AngleProperty_setDelegate _RotateTransform_AngleProperty_set;
    public static void RotateTransform_AngleProperty_set(HandleRef jarg1)
    {
        _RotateTransform_AngleProperty_set(jarg1);
    }

    public delegate IntPtr RotateTransform_AngleProperty_getDelegate();
    public static RotateTransform_AngleProperty_getDelegate _RotateTransform_AngleProperty_get;
    public static IntPtr RotateTransform_AngleProperty_get()
    {
        IntPtr ret = _RotateTransform_AngleProperty_get();

        return ret;
    }

    public delegate void RotateTransform_CenterXProperty_setDelegate(HandleRef jarg1);
    public static RotateTransform_CenterXProperty_setDelegate _RotateTransform_CenterXProperty_set;
    public static void RotateTransform_CenterXProperty_set(HandleRef jarg1)
    {
        _RotateTransform_CenterXProperty_set(jarg1);
    }

    public delegate IntPtr RotateTransform_CenterXProperty_getDelegate();
    public static RotateTransform_CenterXProperty_getDelegate _RotateTransform_CenterXProperty_get;
    public static IntPtr RotateTransform_CenterXProperty_get()
    {
        IntPtr ret = _RotateTransform_CenterXProperty_get();

        return ret;
    }

    public delegate void RotateTransform_CenterYProperty_setDelegate(HandleRef jarg1);
    public static RotateTransform_CenterYProperty_setDelegate _RotateTransform_CenterYProperty_set;
    public static void RotateTransform_CenterYProperty_set(HandleRef jarg1)
    {
        _RotateTransform_CenterYProperty_set(jarg1);
    }

    public delegate IntPtr RotateTransform_CenterYProperty_getDelegate();
    public static RotateTransform_CenterYProperty_getDelegate _RotateTransform_CenterYProperty_get;
    public static IntPtr RotateTransform_CenterYProperty_get()
    {
        IntPtr ret = _RotateTransform_CenterYProperty_get();

        return ret;
    }

    public delegate void RowDefinition_HeightProperty_setDelegate(HandleRef jarg1);
    public static RowDefinition_HeightProperty_setDelegate _RowDefinition_HeightProperty_set;
    public static void RowDefinition_HeightProperty_set(HandleRef jarg1)
    {
        _RowDefinition_HeightProperty_set(jarg1);
    }

    public delegate IntPtr RowDefinition_HeightProperty_getDelegate();
    public static RowDefinition_HeightProperty_getDelegate _RowDefinition_HeightProperty_get;
    public static IntPtr RowDefinition_HeightProperty_get()
    {
        IntPtr ret = _RowDefinition_HeightProperty_get();

        return ret;
    }

    public delegate void RowDefinition_MinHeightProperty_setDelegate(HandleRef jarg1);
    public static RowDefinition_MinHeightProperty_setDelegate _RowDefinition_MinHeightProperty_set;
    public static void RowDefinition_MinHeightProperty_set(HandleRef jarg1)
    {
        _RowDefinition_MinHeightProperty_set(jarg1);
    }

    public delegate IntPtr RowDefinition_MinHeightProperty_getDelegate();
    public static RowDefinition_MinHeightProperty_getDelegate _RowDefinition_MinHeightProperty_get;
    public static IntPtr RowDefinition_MinHeightProperty_get()
    {
        IntPtr ret = _RowDefinition_MinHeightProperty_get();

        return ret;
    }

    public delegate void RowDefinition_MaxHeightProperty_setDelegate(HandleRef jarg1);
    public static RowDefinition_MaxHeightProperty_setDelegate _RowDefinition_MaxHeightProperty_set;
    public static void RowDefinition_MaxHeightProperty_set(HandleRef jarg1)
    {
        _RowDefinition_MaxHeightProperty_set(jarg1);
    }

    public delegate IntPtr RowDefinition_MaxHeightProperty_getDelegate();
    public static RowDefinition_MaxHeightProperty_getDelegate _RowDefinition_MaxHeightProperty_get;
    public static IntPtr RowDefinition_MaxHeightProperty_get()
    {
        IntPtr ret = _RowDefinition_MaxHeightProperty_get();

        return ret;
    }

    public delegate void ScaleTransform_CenterXProperty_setDelegate(HandleRef jarg1);
    public static ScaleTransform_CenterXProperty_setDelegate _ScaleTransform_CenterXProperty_set;
    public static void ScaleTransform_CenterXProperty_set(HandleRef jarg1)
    {
        _ScaleTransform_CenterXProperty_set(jarg1);
    }

    public delegate IntPtr ScaleTransform_CenterXProperty_getDelegate();
    public static ScaleTransform_CenterXProperty_getDelegate _ScaleTransform_CenterXProperty_get;
    public static IntPtr ScaleTransform_CenterXProperty_get()
    {
        IntPtr ret = _ScaleTransform_CenterXProperty_get();

        return ret;
    }

    public delegate void ScaleTransform_CenterYProperty_setDelegate(HandleRef jarg1);
    public static ScaleTransform_CenterYProperty_setDelegate _ScaleTransform_CenterYProperty_set;
    public static void ScaleTransform_CenterYProperty_set(HandleRef jarg1)
    {
        _ScaleTransform_CenterYProperty_set(jarg1);
    }

    public delegate IntPtr ScaleTransform_CenterYProperty_getDelegate();
    public static ScaleTransform_CenterYProperty_getDelegate _ScaleTransform_CenterYProperty_get;
    public static IntPtr ScaleTransform_CenterYProperty_get()
    {
        IntPtr ret = _ScaleTransform_CenterYProperty_get();

        return ret;
    }

    public delegate void ScaleTransform_ScaleXProperty_setDelegate(HandleRef jarg1);
    public static ScaleTransform_ScaleXProperty_setDelegate _ScaleTransform_ScaleXProperty_set;
    public static void ScaleTransform_ScaleXProperty_set(HandleRef jarg1)
    {
        _ScaleTransform_ScaleXProperty_set(jarg1);
    }

    public delegate IntPtr ScaleTransform_ScaleXProperty_getDelegate();
    public static ScaleTransform_ScaleXProperty_getDelegate _ScaleTransform_ScaleXProperty_get;
    public static IntPtr ScaleTransform_ScaleXProperty_get()
    {
        IntPtr ret = _ScaleTransform_ScaleXProperty_get();

        return ret;
    }

    public delegate void ScaleTransform_ScaleYProperty_setDelegate(HandleRef jarg1);
    public static ScaleTransform_ScaleYProperty_setDelegate _ScaleTransform_ScaleYProperty_set;
    public static void ScaleTransform_ScaleYProperty_set(HandleRef jarg1)
    {
        _ScaleTransform_ScaleYProperty_set(jarg1);
    }

    public delegate IntPtr ScaleTransform_ScaleYProperty_getDelegate();
    public static ScaleTransform_ScaleYProperty_getDelegate _ScaleTransform_ScaleYProperty_get;
    public static IntPtr ScaleTransform_ScaleYProperty_get()
    {
        IntPtr ret = _ScaleTransform_ScaleYProperty_get();

        return ret;
    }

    public delegate void ScrollBar_OrientationProperty_setDelegate(HandleRef jarg1);
    public static ScrollBar_OrientationProperty_setDelegate _ScrollBar_OrientationProperty_set;
    public static void ScrollBar_OrientationProperty_set(HandleRef jarg1)
    {
        _ScrollBar_OrientationProperty_set(jarg1);
    }

    public delegate IntPtr ScrollBar_OrientationProperty_getDelegate();
    public static ScrollBar_OrientationProperty_getDelegate _ScrollBar_OrientationProperty_get;
    public static IntPtr ScrollBar_OrientationProperty_get()
    {
        IntPtr ret = _ScrollBar_OrientationProperty_get();

        return ret;
    }

    public delegate void ScrollBar_ViewportSizeProperty_setDelegate(HandleRef jarg1);
    public static ScrollBar_ViewportSizeProperty_setDelegate _ScrollBar_ViewportSizeProperty_set;
    public static void ScrollBar_ViewportSizeProperty_set(HandleRef jarg1)
    {
        _ScrollBar_ViewportSizeProperty_set(jarg1);
    }

    public delegate IntPtr ScrollBar_ViewportSizeProperty_getDelegate();
    public static ScrollBar_ViewportSizeProperty_getDelegate _ScrollBar_ViewportSizeProperty_get;
    public static IntPtr ScrollBar_ViewportSizeProperty_get()
    {
        IntPtr ret = _ScrollBar_ViewportSizeProperty_get();

        return ret;
    }

    public delegate void ScrollContentPresenter_CanContentScrollProperty_setDelegate(HandleRef jarg1);
    public static ScrollContentPresenter_CanContentScrollProperty_setDelegate _ScrollContentPresenter_CanContentScrollProperty_set;
    public static void ScrollContentPresenter_CanContentScrollProperty_set(HandleRef jarg1)
    {
        _ScrollContentPresenter_CanContentScrollProperty_set(jarg1);
    }

    public delegate IntPtr ScrollContentPresenter_CanContentScrollProperty_getDelegate();
    public static ScrollContentPresenter_CanContentScrollProperty_getDelegate _ScrollContentPresenter_CanContentScrollProperty_get;
    public static IntPtr ScrollContentPresenter_CanContentScrollProperty_get()
    {
        IntPtr ret = _ScrollContentPresenter_CanContentScrollProperty_get();

        return ret;
    }

    public delegate void ScrollViewer_CanContentScrollProperty_setDelegate(HandleRef jarg1);
    public static ScrollViewer_CanContentScrollProperty_setDelegate _ScrollViewer_CanContentScrollProperty_set;
    public static void ScrollViewer_CanContentScrollProperty_set(HandleRef jarg1)
    {
        _ScrollViewer_CanContentScrollProperty_set(jarg1);
    }

    public delegate IntPtr ScrollViewer_CanContentScrollProperty_getDelegate();
    public static ScrollViewer_CanContentScrollProperty_getDelegate _ScrollViewer_CanContentScrollProperty_get;
    public static IntPtr ScrollViewer_CanContentScrollProperty_get()
    {
        IntPtr ret = _ScrollViewer_CanContentScrollProperty_get();

        return ret;
    }

    public delegate void ScrollViewer_ComputedHorizontalScrollBarVisibilityProperty_setDelegate(HandleRef jarg1);
    public static ScrollViewer_ComputedHorizontalScrollBarVisibilityProperty_setDelegate _ScrollViewer_ComputedHorizontalScrollBarVisibilityProperty_set;
    public static void ScrollViewer_ComputedHorizontalScrollBarVisibilityProperty_set(HandleRef jarg1)
    {
        _ScrollViewer_ComputedHorizontalScrollBarVisibilityProperty_set(jarg1);
    }

    public delegate IntPtr ScrollViewer_ComputedHorizontalScrollBarVisibilityProperty_getDelegate();
    public static ScrollViewer_ComputedHorizontalScrollBarVisibilityProperty_getDelegate _ScrollViewer_ComputedHorizontalScrollBarVisibilityProperty_get;
    public static IntPtr ScrollViewer_ComputedHorizontalScrollBarVisibilityProperty_get()
    {
        IntPtr ret = _ScrollViewer_ComputedHorizontalScrollBarVisibilityProperty_get();

        return ret;
    }

    public delegate void ScrollViewer_ComputedVerticalScrollBarVisibilityProperty_setDelegate(HandleRef jarg1);
    public static ScrollViewer_ComputedVerticalScrollBarVisibilityProperty_setDelegate _ScrollViewer_ComputedVerticalScrollBarVisibilityProperty_set;
    public static void ScrollViewer_ComputedVerticalScrollBarVisibilityProperty_set(HandleRef jarg1)
    {
        _ScrollViewer_ComputedVerticalScrollBarVisibilityProperty_set(jarg1);
    }

    public delegate IntPtr ScrollViewer_ComputedVerticalScrollBarVisibilityProperty_getDelegate();
    public static ScrollViewer_ComputedVerticalScrollBarVisibilityProperty_getDelegate _ScrollViewer_ComputedVerticalScrollBarVisibilityProperty_get;
    public static IntPtr ScrollViewer_ComputedVerticalScrollBarVisibilityProperty_get()
    {
        IntPtr ret = _ScrollViewer_ComputedVerticalScrollBarVisibilityProperty_get();

        return ret;
    }

    public delegate void ScrollViewer_ExtentHeightProperty_setDelegate(HandleRef jarg1);
    public static ScrollViewer_ExtentHeightProperty_setDelegate _ScrollViewer_ExtentHeightProperty_set;
    public static void ScrollViewer_ExtentHeightProperty_set(HandleRef jarg1)
    {
        _ScrollViewer_ExtentHeightProperty_set(jarg1);
    }

    public delegate IntPtr ScrollViewer_ExtentHeightProperty_getDelegate();
    public static ScrollViewer_ExtentHeightProperty_getDelegate _ScrollViewer_ExtentHeightProperty_get;
    public static IntPtr ScrollViewer_ExtentHeightProperty_get()
    {
        IntPtr ret = _ScrollViewer_ExtentHeightProperty_get();

        return ret;
    }

    public delegate void ScrollViewer_ExtentWidthProperty_setDelegate(HandleRef jarg1);
    public static ScrollViewer_ExtentWidthProperty_setDelegate _ScrollViewer_ExtentWidthProperty_set;
    public static void ScrollViewer_ExtentWidthProperty_set(HandleRef jarg1)
    {
        _ScrollViewer_ExtentWidthProperty_set(jarg1);
    }

    public delegate IntPtr ScrollViewer_ExtentWidthProperty_getDelegate();
    public static ScrollViewer_ExtentWidthProperty_getDelegate _ScrollViewer_ExtentWidthProperty_get;
    public static IntPtr ScrollViewer_ExtentWidthProperty_get()
    {
        IntPtr ret = _ScrollViewer_ExtentWidthProperty_get();

        return ret;
    }

    public delegate void ScrollViewer_HorizontalOffsetProperty_setDelegate(HandleRef jarg1);
    public static ScrollViewer_HorizontalOffsetProperty_setDelegate _ScrollViewer_HorizontalOffsetProperty_set;
    public static void ScrollViewer_HorizontalOffsetProperty_set(HandleRef jarg1)
    {
        _ScrollViewer_HorizontalOffsetProperty_set(jarg1);
    }

    public delegate IntPtr ScrollViewer_HorizontalOffsetProperty_getDelegate();
    public static ScrollViewer_HorizontalOffsetProperty_getDelegate _ScrollViewer_HorizontalOffsetProperty_get;
    public static IntPtr ScrollViewer_HorizontalOffsetProperty_get()
    {
        IntPtr ret = _ScrollViewer_HorizontalOffsetProperty_get();

        return ret;
    }

    public delegate void ScrollViewer_HorizontalScrollBarVisibilityProperty_setDelegate(HandleRef jarg1);
    public static ScrollViewer_HorizontalScrollBarVisibilityProperty_setDelegate _ScrollViewer_HorizontalScrollBarVisibilityProperty_set;
    public static void ScrollViewer_HorizontalScrollBarVisibilityProperty_set(HandleRef jarg1)
    {
        _ScrollViewer_HorizontalScrollBarVisibilityProperty_set(jarg1);
    }

    public delegate IntPtr ScrollViewer_HorizontalScrollBarVisibilityProperty_getDelegate();
    public static ScrollViewer_HorizontalScrollBarVisibilityProperty_getDelegate _ScrollViewer_HorizontalScrollBarVisibilityProperty_get;
    public static IntPtr ScrollViewer_HorizontalScrollBarVisibilityProperty_get()
    {
        IntPtr ret = _ScrollViewer_HorizontalScrollBarVisibilityProperty_get();

        return ret;
    }

    public delegate void ScrollViewer_ScrollableHeightProperty_setDelegate(HandleRef jarg1);
    public static ScrollViewer_ScrollableHeightProperty_setDelegate _ScrollViewer_ScrollableHeightProperty_set;
    public static void ScrollViewer_ScrollableHeightProperty_set(HandleRef jarg1)
    {
        _ScrollViewer_ScrollableHeightProperty_set(jarg1);
    }

    public delegate IntPtr ScrollViewer_ScrollableHeightProperty_getDelegate();
    public static ScrollViewer_ScrollableHeightProperty_getDelegate _ScrollViewer_ScrollableHeightProperty_get;
    public static IntPtr ScrollViewer_ScrollableHeightProperty_get()
    {
        IntPtr ret = _ScrollViewer_ScrollableHeightProperty_get();

        return ret;
    }

    public delegate void ScrollViewer_ScrollableWidthProperty_setDelegate(HandleRef jarg1);
    public static ScrollViewer_ScrollableWidthProperty_setDelegate _ScrollViewer_ScrollableWidthProperty_set;
    public static void ScrollViewer_ScrollableWidthProperty_set(HandleRef jarg1)
    {
        _ScrollViewer_ScrollableWidthProperty_set(jarg1);
    }

    public delegate IntPtr ScrollViewer_ScrollableWidthProperty_getDelegate();
    public static ScrollViewer_ScrollableWidthProperty_getDelegate _ScrollViewer_ScrollableWidthProperty_get;
    public static IntPtr ScrollViewer_ScrollableWidthProperty_get()
    {
        IntPtr ret = _ScrollViewer_ScrollableWidthProperty_get();

        return ret;
    }

    public delegate void ScrollViewer_VerticalOffsetProperty_setDelegate(HandleRef jarg1);
    public static ScrollViewer_VerticalOffsetProperty_setDelegate _ScrollViewer_VerticalOffsetProperty_set;
    public static void ScrollViewer_VerticalOffsetProperty_set(HandleRef jarg1)
    {
        _ScrollViewer_VerticalOffsetProperty_set(jarg1);
    }

    public delegate IntPtr ScrollViewer_VerticalOffsetProperty_getDelegate();
    public static ScrollViewer_VerticalOffsetProperty_getDelegate _ScrollViewer_VerticalOffsetProperty_get;
    public static IntPtr ScrollViewer_VerticalOffsetProperty_get()
    {
        IntPtr ret = _ScrollViewer_VerticalOffsetProperty_get();

        return ret;
    }

    public delegate void ScrollViewer_VerticalScrollBarVisibilityProperty_setDelegate(HandleRef jarg1);
    public static ScrollViewer_VerticalScrollBarVisibilityProperty_setDelegate _ScrollViewer_VerticalScrollBarVisibilityProperty_set;
    public static void ScrollViewer_VerticalScrollBarVisibilityProperty_set(HandleRef jarg1)
    {
        _ScrollViewer_VerticalScrollBarVisibilityProperty_set(jarg1);
    }

    public delegate IntPtr ScrollViewer_VerticalScrollBarVisibilityProperty_getDelegate();
    public static ScrollViewer_VerticalScrollBarVisibilityProperty_getDelegate _ScrollViewer_VerticalScrollBarVisibilityProperty_get;
    public static IntPtr ScrollViewer_VerticalScrollBarVisibilityProperty_get()
    {
        IntPtr ret = _ScrollViewer_VerticalScrollBarVisibilityProperty_get();

        return ret;
    }

    public delegate void ScrollViewer_ViewportHeightProperty_setDelegate(HandleRef jarg1);
    public static ScrollViewer_ViewportHeightProperty_setDelegate _ScrollViewer_ViewportHeightProperty_set;
    public static void ScrollViewer_ViewportHeightProperty_set(HandleRef jarg1)
    {
        _ScrollViewer_ViewportHeightProperty_set(jarg1);
    }

    public delegate IntPtr ScrollViewer_ViewportHeightProperty_getDelegate();
    public static ScrollViewer_ViewportHeightProperty_getDelegate _ScrollViewer_ViewportHeightProperty_get;
    public static IntPtr ScrollViewer_ViewportHeightProperty_get()
    {
        IntPtr ret = _ScrollViewer_ViewportHeightProperty_get();

        return ret;
    }

    public delegate void ScrollViewer_ViewportWidthProperty_setDelegate(HandleRef jarg1);
    public static ScrollViewer_ViewportWidthProperty_setDelegate _ScrollViewer_ViewportWidthProperty_set;
    public static void ScrollViewer_ViewportWidthProperty_set(HandleRef jarg1)
    {
        _ScrollViewer_ViewportWidthProperty_set(jarg1);
    }

    public delegate IntPtr ScrollViewer_ViewportWidthProperty_getDelegate();
    public static ScrollViewer_ViewportWidthProperty_getDelegate _ScrollViewer_ViewportWidthProperty_get;
    public static IntPtr ScrollViewer_ViewportWidthProperty_get()
    {
        IntPtr ret = _ScrollViewer_ViewportWidthProperty_get();

        return ret;
    }

    public delegate void SkewTransform_AngleXProperty_setDelegate(HandleRef jarg1);
    public static SkewTransform_AngleXProperty_setDelegate _SkewTransform_AngleXProperty_set;
    public static void SkewTransform_AngleXProperty_set(HandleRef jarg1)
    {
        _SkewTransform_AngleXProperty_set(jarg1);
    }

    public delegate IntPtr SkewTransform_AngleXProperty_getDelegate();
    public static SkewTransform_AngleXProperty_getDelegate _SkewTransform_AngleXProperty_get;
    public static IntPtr SkewTransform_AngleXProperty_get()
    {
        IntPtr ret = _SkewTransform_AngleXProperty_get();

        return ret;
    }

    public delegate void SkewTransform_AngleYProperty_setDelegate(HandleRef jarg1);
    public static SkewTransform_AngleYProperty_setDelegate _SkewTransform_AngleYProperty_set;
    public static void SkewTransform_AngleYProperty_set(HandleRef jarg1)
    {
        _SkewTransform_AngleYProperty_set(jarg1);
    }

    public delegate IntPtr SkewTransform_AngleYProperty_getDelegate();
    public static SkewTransform_AngleYProperty_getDelegate _SkewTransform_AngleYProperty_get;
    public static IntPtr SkewTransform_AngleYProperty_get()
    {
        IntPtr ret = _SkewTransform_AngleYProperty_get();

        return ret;
    }

    public delegate void SkewTransform_CenterXProperty_setDelegate(HandleRef jarg1);
    public static SkewTransform_CenterXProperty_setDelegate _SkewTransform_CenterXProperty_set;
    public static void SkewTransform_CenterXProperty_set(HandleRef jarg1)
    {
        _SkewTransform_CenterXProperty_set(jarg1);
    }

    public delegate IntPtr SkewTransform_CenterXProperty_getDelegate();
    public static SkewTransform_CenterXProperty_getDelegate _SkewTransform_CenterXProperty_get;
    public static IntPtr SkewTransform_CenterXProperty_get()
    {
        IntPtr ret = _SkewTransform_CenterXProperty_get();

        return ret;
    }

    public delegate void SkewTransform_CenterYProperty_setDelegate(HandleRef jarg1);
    public static SkewTransform_CenterYProperty_setDelegate _SkewTransform_CenterYProperty_set;
    public static void SkewTransform_CenterYProperty_set(HandleRef jarg1)
    {
        _SkewTransform_CenterYProperty_set(jarg1);
    }

    public delegate IntPtr SkewTransform_CenterYProperty_getDelegate();
    public static SkewTransform_CenterYProperty_getDelegate _SkewTransform_CenterYProperty_get;
    public static IntPtr SkewTransform_CenterYProperty_get()
    {
        IntPtr ret = _SkewTransform_CenterYProperty_get();

        return ret;
    }

    public delegate void Slider_AutoToolTipPlacementProperty_setDelegate(HandleRef jarg1);
    public static Slider_AutoToolTipPlacementProperty_setDelegate _Slider_AutoToolTipPlacementProperty_set;
    public static void Slider_AutoToolTipPlacementProperty_set(HandleRef jarg1)
    {
        _Slider_AutoToolTipPlacementProperty_set(jarg1);
    }

    public delegate IntPtr Slider_AutoToolTipPlacementProperty_getDelegate();
    public static Slider_AutoToolTipPlacementProperty_getDelegate _Slider_AutoToolTipPlacementProperty_get;
    public static IntPtr Slider_AutoToolTipPlacementProperty_get()
    {
        IntPtr ret = _Slider_AutoToolTipPlacementProperty_get();

        return ret;
    }

    public delegate void Slider_AutoToolTipPrecisionProperty_setDelegate(HandleRef jarg1);
    public static Slider_AutoToolTipPrecisionProperty_setDelegate _Slider_AutoToolTipPrecisionProperty_set;
    public static void Slider_AutoToolTipPrecisionProperty_set(HandleRef jarg1)
    {
        _Slider_AutoToolTipPrecisionProperty_set(jarg1);
    }

    public delegate IntPtr Slider_AutoToolTipPrecisionProperty_getDelegate();
    public static Slider_AutoToolTipPrecisionProperty_getDelegate _Slider_AutoToolTipPrecisionProperty_get;
    public static IntPtr Slider_AutoToolTipPrecisionProperty_get()
    {
        IntPtr ret = _Slider_AutoToolTipPrecisionProperty_get();

        return ret;
    }

    public delegate void Slider_DelayProperty_setDelegate(HandleRef jarg1);
    public static Slider_DelayProperty_setDelegate _Slider_DelayProperty_set;
    public static void Slider_DelayProperty_set(HandleRef jarg1)
    {
        _Slider_DelayProperty_set(jarg1);
    }

    public delegate IntPtr Slider_DelayProperty_getDelegate();
    public static Slider_DelayProperty_getDelegate _Slider_DelayProperty_get;
    public static IntPtr Slider_DelayProperty_get()
    {
        IntPtr ret = _Slider_DelayProperty_get();

        return ret;
    }

    public delegate void Slider_IntervalProperty_setDelegate(HandleRef jarg1);
    public static Slider_IntervalProperty_setDelegate _Slider_IntervalProperty_set;
    public static void Slider_IntervalProperty_set(HandleRef jarg1)
    {
        _Slider_IntervalProperty_set(jarg1);
    }

    public delegate IntPtr Slider_IntervalProperty_getDelegate();
    public static Slider_IntervalProperty_getDelegate _Slider_IntervalProperty_get;
    public static IntPtr Slider_IntervalProperty_get()
    {
        IntPtr ret = _Slider_IntervalProperty_get();

        return ret;
    }

    public delegate void Slider_IsDirectionReversedProperty_setDelegate(HandleRef jarg1);
    public static Slider_IsDirectionReversedProperty_setDelegate _Slider_IsDirectionReversedProperty_set;
    public static void Slider_IsDirectionReversedProperty_set(HandleRef jarg1)
    {
        _Slider_IsDirectionReversedProperty_set(jarg1);
    }

    public delegate IntPtr Slider_IsDirectionReversedProperty_getDelegate();
    public static Slider_IsDirectionReversedProperty_getDelegate _Slider_IsDirectionReversedProperty_get;
    public static IntPtr Slider_IsDirectionReversedProperty_get()
    {
        IntPtr ret = _Slider_IsDirectionReversedProperty_get();

        return ret;
    }

    public delegate void Slider_IsMoveToPointEnabledProperty_setDelegate(HandleRef jarg1);
    public static Slider_IsMoveToPointEnabledProperty_setDelegate _Slider_IsMoveToPointEnabledProperty_set;
    public static void Slider_IsMoveToPointEnabledProperty_set(HandleRef jarg1)
    {
        _Slider_IsMoveToPointEnabledProperty_set(jarg1);
    }

    public delegate IntPtr Slider_IsMoveToPointEnabledProperty_getDelegate();
    public static Slider_IsMoveToPointEnabledProperty_getDelegate _Slider_IsMoveToPointEnabledProperty_get;
    public static IntPtr Slider_IsMoveToPointEnabledProperty_get()
    {
        IntPtr ret = _Slider_IsMoveToPointEnabledProperty_get();

        return ret;
    }

    public delegate void Slider_IsSelectionRangeEnabledProperty_setDelegate(HandleRef jarg1);
    public static Slider_IsSelectionRangeEnabledProperty_setDelegate _Slider_IsSelectionRangeEnabledProperty_set;
    public static void Slider_IsSelectionRangeEnabledProperty_set(HandleRef jarg1)
    {
        _Slider_IsSelectionRangeEnabledProperty_set(jarg1);
    }

    public delegate IntPtr Slider_IsSelectionRangeEnabledProperty_getDelegate();
    public static Slider_IsSelectionRangeEnabledProperty_getDelegate _Slider_IsSelectionRangeEnabledProperty_get;
    public static IntPtr Slider_IsSelectionRangeEnabledProperty_get()
    {
        IntPtr ret = _Slider_IsSelectionRangeEnabledProperty_get();

        return ret;
    }

    public delegate void Slider_IsSnapToTickEnabledProperty_setDelegate(HandleRef jarg1);
    public static Slider_IsSnapToTickEnabledProperty_setDelegate _Slider_IsSnapToTickEnabledProperty_set;
    public static void Slider_IsSnapToTickEnabledProperty_set(HandleRef jarg1)
    {
        _Slider_IsSnapToTickEnabledProperty_set(jarg1);
    }

    public delegate IntPtr Slider_IsSnapToTickEnabledProperty_getDelegate();
    public static Slider_IsSnapToTickEnabledProperty_getDelegate _Slider_IsSnapToTickEnabledProperty_get;
    public static IntPtr Slider_IsSnapToTickEnabledProperty_get()
    {
        IntPtr ret = _Slider_IsSnapToTickEnabledProperty_get();

        return ret;
    }

    public delegate void Slider_OrientationProperty_setDelegate(HandleRef jarg1);
    public static Slider_OrientationProperty_setDelegate _Slider_OrientationProperty_set;
    public static void Slider_OrientationProperty_set(HandleRef jarg1)
    {
        _Slider_OrientationProperty_set(jarg1);
    }

    public delegate IntPtr Slider_OrientationProperty_getDelegate();
    public static Slider_OrientationProperty_getDelegate _Slider_OrientationProperty_get;
    public static IntPtr Slider_OrientationProperty_get()
    {
        IntPtr ret = _Slider_OrientationProperty_get();

        return ret;
    }

    public delegate void Slider_SelectionEndProperty_setDelegate(HandleRef jarg1);
    public static Slider_SelectionEndProperty_setDelegate _Slider_SelectionEndProperty_set;
    public static void Slider_SelectionEndProperty_set(HandleRef jarg1)
    {
        _Slider_SelectionEndProperty_set(jarg1);
    }

    public delegate IntPtr Slider_SelectionEndProperty_getDelegate();
    public static Slider_SelectionEndProperty_getDelegate _Slider_SelectionEndProperty_get;
    public static IntPtr Slider_SelectionEndProperty_get()
    {
        IntPtr ret = _Slider_SelectionEndProperty_get();

        return ret;
    }

    public delegate void Slider_SelectionStartProperty_setDelegate(HandleRef jarg1);
    public static Slider_SelectionStartProperty_setDelegate _Slider_SelectionStartProperty_set;
    public static void Slider_SelectionStartProperty_set(HandleRef jarg1)
    {
        _Slider_SelectionStartProperty_set(jarg1);
    }

    public delegate IntPtr Slider_SelectionStartProperty_getDelegate();
    public static Slider_SelectionStartProperty_getDelegate _Slider_SelectionStartProperty_get;
    public static IntPtr Slider_SelectionStartProperty_get()
    {
        IntPtr ret = _Slider_SelectionStartProperty_get();

        return ret;
    }

    public delegate void Slider_TickFrequencyProperty_setDelegate(HandleRef jarg1);
    public static Slider_TickFrequencyProperty_setDelegate _Slider_TickFrequencyProperty_set;
    public static void Slider_TickFrequencyProperty_set(HandleRef jarg1)
    {
        _Slider_TickFrequencyProperty_set(jarg1);
    }

    public delegate IntPtr Slider_TickFrequencyProperty_getDelegate();
    public static Slider_TickFrequencyProperty_getDelegate _Slider_TickFrequencyProperty_get;
    public static IntPtr Slider_TickFrequencyProperty_get()
    {
        IntPtr ret = _Slider_TickFrequencyProperty_get();

        return ret;
    }

    public delegate void Slider_TickPlacementProperty_setDelegate(HandleRef jarg1);
    public static Slider_TickPlacementProperty_setDelegate _Slider_TickPlacementProperty_set;
    public static void Slider_TickPlacementProperty_set(HandleRef jarg1)
    {
        _Slider_TickPlacementProperty_set(jarg1);
    }

    public delegate IntPtr Slider_TickPlacementProperty_getDelegate();
    public static Slider_TickPlacementProperty_getDelegate _Slider_TickPlacementProperty_get;
    public static IntPtr Slider_TickPlacementProperty_get()
    {
        IntPtr ret = _Slider_TickPlacementProperty_get();

        return ret;
    }

    public delegate void Slider_TicksProperty_setDelegate(HandleRef jarg1);
    public static Slider_TicksProperty_setDelegate _Slider_TicksProperty_set;
    public static void Slider_TicksProperty_set(HandleRef jarg1)
    {
        _Slider_TicksProperty_set(jarg1);
    }

    public delegate IntPtr Slider_TicksProperty_getDelegate();
    public static Slider_TicksProperty_getDelegate _Slider_TicksProperty_get;
    public static IntPtr Slider_TicksProperty_get()
    {
        IntPtr ret = _Slider_TicksProperty_get();

        return ret;
    }

    public delegate void SolidColorBrush_ColorProperty_setDelegate(HandleRef jarg1);
    public static SolidColorBrush_ColorProperty_setDelegate _SolidColorBrush_ColorProperty_set;
    public static void SolidColorBrush_ColorProperty_set(HandleRef jarg1)
    {
        _SolidColorBrush_ColorProperty_set(jarg1);
    }

    public delegate IntPtr SolidColorBrush_ColorProperty_getDelegate();
    public static SolidColorBrush_ColorProperty_getDelegate _SolidColorBrush_ColorProperty_get;
    public static IntPtr SolidColorBrush_ColorProperty_get()
    {
        IntPtr ret = _SolidColorBrush_ColorProperty_get();

        return ret;
    }

    public delegate void StackPanel_OrientationProperty_setDelegate(HandleRef jarg1);
    public static StackPanel_OrientationProperty_setDelegate _StackPanel_OrientationProperty_set;
    public static void StackPanel_OrientationProperty_set(HandleRef jarg1)
    {
        _StackPanel_OrientationProperty_set(jarg1);
    }

    public delegate IntPtr StackPanel_OrientationProperty_getDelegate();
    public static StackPanel_OrientationProperty_getDelegate _StackPanel_OrientationProperty_get;
    public static IntPtr StackPanel_OrientationProperty_get()
    {
        IntPtr ret = _StackPanel_OrientationProperty_get();

        return ret;
    }

    public delegate void StreamGeometry_FillRuleProperty_setDelegate(HandleRef jarg1);
    public static StreamGeometry_FillRuleProperty_setDelegate _StreamGeometry_FillRuleProperty_set;
    public static void StreamGeometry_FillRuleProperty_set(HandleRef jarg1)
    {
        _StreamGeometry_FillRuleProperty_set(jarg1);
    }

    public delegate IntPtr StreamGeometry_FillRuleProperty_getDelegate();
    public static StreamGeometry_FillRuleProperty_getDelegate _StreamGeometry_FillRuleProperty_get;
    public static IntPtr StreamGeometry_FillRuleProperty_get()
    {
        IntPtr ret = _StreamGeometry_FillRuleProperty_get();

        return ret;
    }

    public delegate void TabControl_ContentTemplateProperty_setDelegate(HandleRef jarg1);
    public static TabControl_ContentTemplateProperty_setDelegate _TabControl_ContentTemplateProperty_set;
    public static void TabControl_ContentTemplateProperty_set(HandleRef jarg1)
    {
        _TabControl_ContentTemplateProperty_set(jarg1);
    }

    public delegate IntPtr TabControl_ContentTemplateProperty_getDelegate();
    public static TabControl_ContentTemplateProperty_getDelegate _TabControl_ContentTemplateProperty_get;
    public static IntPtr TabControl_ContentTemplateProperty_get()
    {
        IntPtr ret = _TabControl_ContentTemplateProperty_get();

        return ret;
    }

    public delegate void TabControl_ContentTemplateSelectorProperty_setDelegate(HandleRef jarg1);
    public static TabControl_ContentTemplateSelectorProperty_setDelegate _TabControl_ContentTemplateSelectorProperty_set;
    public static void TabControl_ContentTemplateSelectorProperty_set(HandleRef jarg1)
    {
        _TabControl_ContentTemplateSelectorProperty_set(jarg1);
    }

    public delegate IntPtr TabControl_ContentTemplateSelectorProperty_getDelegate();
    public static TabControl_ContentTemplateSelectorProperty_getDelegate _TabControl_ContentTemplateSelectorProperty_get;
    public static IntPtr TabControl_ContentTemplateSelectorProperty_get()
    {
        IntPtr ret = _TabControl_ContentTemplateSelectorProperty_get();

        return ret;
    }

    public delegate void TabControl_SelectedContentProperty_setDelegate(HandleRef jarg1);
    public static TabControl_SelectedContentProperty_setDelegate _TabControl_SelectedContentProperty_set;
    public static void TabControl_SelectedContentProperty_set(HandleRef jarg1)
    {
        _TabControl_SelectedContentProperty_set(jarg1);
    }

    public delegate IntPtr TabControl_SelectedContentProperty_getDelegate();
    public static TabControl_SelectedContentProperty_getDelegate _TabControl_SelectedContentProperty_get;
    public static IntPtr TabControl_SelectedContentProperty_get()
    {
        IntPtr ret = _TabControl_SelectedContentProperty_get();

        return ret;
    }

    public delegate void TabControl_SelectedContentTemplateProperty_setDelegate(HandleRef jarg1);
    public static TabControl_SelectedContentTemplateProperty_setDelegate _TabControl_SelectedContentTemplateProperty_set;
    public static void TabControl_SelectedContentTemplateProperty_set(HandleRef jarg1)
    {
        _TabControl_SelectedContentTemplateProperty_set(jarg1);
    }

    public delegate IntPtr TabControl_SelectedContentTemplateProperty_getDelegate();
    public static TabControl_SelectedContentTemplateProperty_getDelegate _TabControl_SelectedContentTemplateProperty_get;
    public static IntPtr TabControl_SelectedContentTemplateProperty_get()
    {
        IntPtr ret = _TabControl_SelectedContentTemplateProperty_get();

        return ret;
    }

    public delegate void TabControl_SelectedContentTemplateSelectorProperty_setDelegate(HandleRef jarg1);
    public static TabControl_SelectedContentTemplateSelectorProperty_setDelegate _TabControl_SelectedContentTemplateSelectorProperty_set;
    public static void TabControl_SelectedContentTemplateSelectorProperty_set(HandleRef jarg1)
    {
        _TabControl_SelectedContentTemplateSelectorProperty_set(jarg1);
    }

    public delegate IntPtr TabControl_SelectedContentTemplateSelectorProperty_getDelegate();
    public static TabControl_SelectedContentTemplateSelectorProperty_getDelegate _TabControl_SelectedContentTemplateSelectorProperty_get;
    public static IntPtr TabControl_SelectedContentTemplateSelectorProperty_get()
    {
        IntPtr ret = _TabControl_SelectedContentTemplateSelectorProperty_get();

        return ret;
    }

    public delegate void TabControl_TabStripPlacementProperty_setDelegate(HandleRef jarg1);
    public static TabControl_TabStripPlacementProperty_setDelegate _TabControl_TabStripPlacementProperty_set;
    public static void TabControl_TabStripPlacementProperty_set(HandleRef jarg1)
    {
        _TabControl_TabStripPlacementProperty_set(jarg1);
    }

    public delegate IntPtr TabControl_TabStripPlacementProperty_getDelegate();
    public static TabControl_TabStripPlacementProperty_getDelegate _TabControl_TabStripPlacementProperty_get;
    public static IntPtr TabControl_TabStripPlacementProperty_get()
    {
        IntPtr ret = _TabControl_TabStripPlacementProperty_get();

        return ret;
    }

    public delegate void TabItem_IsSelectedProperty_setDelegate(HandleRef jarg1);
    public static TabItem_IsSelectedProperty_setDelegate _TabItem_IsSelectedProperty_set;
    public static void TabItem_IsSelectedProperty_set(HandleRef jarg1)
    {
        _TabItem_IsSelectedProperty_set(jarg1);
    }

    public delegate IntPtr TabItem_IsSelectedProperty_getDelegate();
    public static TabItem_IsSelectedProperty_getDelegate _TabItem_IsSelectedProperty_get;
    public static IntPtr TabItem_IsSelectedProperty_get()
    {
        IntPtr ret = _TabItem_IsSelectedProperty_get();

        return ret;
    }

    public delegate void TabItem_TabStripPlacementProperty_setDelegate(HandleRef jarg1);
    public static TabItem_TabStripPlacementProperty_setDelegate _TabItem_TabStripPlacementProperty_set;
    public static void TabItem_TabStripPlacementProperty_set(HandleRef jarg1)
    {
        _TabItem_TabStripPlacementProperty_set(jarg1);
    }

    public delegate IntPtr TabItem_TabStripPlacementProperty_getDelegate();
    public static TabItem_TabStripPlacementProperty_getDelegate _TabItem_TabStripPlacementProperty_get;
    public static IntPtr TabItem_TabStripPlacementProperty_get()
    {
        IntPtr ret = _TabItem_TabStripPlacementProperty_get();

        return ret;
    }

    public delegate void TextBlock_BackgroundProperty_setDelegate(HandleRef jarg1);
    public static TextBlock_BackgroundProperty_setDelegate _TextBlock_BackgroundProperty_set;
    public static void TextBlock_BackgroundProperty_set(HandleRef jarg1)
    {
        _TextBlock_BackgroundProperty_set(jarg1);
    }

    public delegate IntPtr TextBlock_BackgroundProperty_getDelegate();
    public static TextBlock_BackgroundProperty_getDelegate _TextBlock_BackgroundProperty_get;
    public static IntPtr TextBlock_BackgroundProperty_get()
    {
        IntPtr ret = _TextBlock_BackgroundProperty_get();

        return ret;
    }

    public delegate void TextBlock_BaselineOffsetProperty_setDelegate(HandleRef jarg1);
    public static TextBlock_BaselineOffsetProperty_setDelegate _TextBlock_BaselineOffsetProperty_set;
    public static void TextBlock_BaselineOffsetProperty_set(HandleRef jarg1)
    {
        _TextBlock_BaselineOffsetProperty_set(jarg1);
    }

    public delegate IntPtr TextBlock_BaselineOffsetProperty_getDelegate();
    public static TextBlock_BaselineOffsetProperty_getDelegate _TextBlock_BaselineOffsetProperty_get;
    public static IntPtr TextBlock_BaselineOffsetProperty_get()
    {
        IntPtr ret = _TextBlock_BaselineOffsetProperty_get();

        return ret;
    }

    public delegate void TextBlock_FontFamilyProperty_setDelegate(HandleRef jarg1);
    public static TextBlock_FontFamilyProperty_setDelegate _TextBlock_FontFamilyProperty_set;
    public static void TextBlock_FontFamilyProperty_set(HandleRef jarg1)
    {
        _TextBlock_FontFamilyProperty_set(jarg1);
    }

    public delegate IntPtr TextBlock_FontFamilyProperty_getDelegate();
    public static TextBlock_FontFamilyProperty_getDelegate _TextBlock_FontFamilyProperty_get;
    public static IntPtr TextBlock_FontFamilyProperty_get()
    {
        IntPtr ret = _TextBlock_FontFamilyProperty_get();

        return ret;
    }

    public delegate void TextBlock_FontSizeProperty_setDelegate(HandleRef jarg1);
    public static TextBlock_FontSizeProperty_setDelegate _TextBlock_FontSizeProperty_set;
    public static void TextBlock_FontSizeProperty_set(HandleRef jarg1)
    {
        _TextBlock_FontSizeProperty_set(jarg1);
    }

    public delegate IntPtr TextBlock_FontSizeProperty_getDelegate();
    public static TextBlock_FontSizeProperty_getDelegate _TextBlock_FontSizeProperty_get;
    public static IntPtr TextBlock_FontSizeProperty_get()
    {
        IntPtr ret = _TextBlock_FontSizeProperty_get();

        return ret;
    }

    public delegate void TextBlock_FontStretchProperty_setDelegate(HandleRef jarg1);
    public static TextBlock_FontStretchProperty_setDelegate _TextBlock_FontStretchProperty_set;
    public static void TextBlock_FontStretchProperty_set(HandleRef jarg1)
    {
        _TextBlock_FontStretchProperty_set(jarg1);
    }

    public delegate IntPtr TextBlock_FontStretchProperty_getDelegate();
    public static TextBlock_FontStretchProperty_getDelegate _TextBlock_FontStretchProperty_get;
    public static IntPtr TextBlock_FontStretchProperty_get()
    {
        IntPtr ret = _TextBlock_FontStretchProperty_get();

        return ret;
    }

    public delegate void TextBlock_FontStyleProperty_setDelegate(HandleRef jarg1);
    public static TextBlock_FontStyleProperty_setDelegate _TextBlock_FontStyleProperty_set;
    public static void TextBlock_FontStyleProperty_set(HandleRef jarg1)
    {
        _TextBlock_FontStyleProperty_set(jarg1);
    }

    public delegate IntPtr TextBlock_FontStyleProperty_getDelegate();
    public static TextBlock_FontStyleProperty_getDelegate _TextBlock_FontStyleProperty_get;
    public static IntPtr TextBlock_FontStyleProperty_get()
    {
        IntPtr ret = _TextBlock_FontStyleProperty_get();

        return ret;
    }

    public delegate void TextBlock_FontWeightProperty_setDelegate(HandleRef jarg1);
    public static TextBlock_FontWeightProperty_setDelegate _TextBlock_FontWeightProperty_set;
    public static void TextBlock_FontWeightProperty_set(HandleRef jarg1)
    {
        _TextBlock_FontWeightProperty_set(jarg1);
    }

    public delegate IntPtr TextBlock_FontWeightProperty_getDelegate();
    public static TextBlock_FontWeightProperty_getDelegate _TextBlock_FontWeightProperty_get;
    public static IntPtr TextBlock_FontWeightProperty_get()
    {
        IntPtr ret = _TextBlock_FontWeightProperty_get();

        return ret;
    }

    public delegate void TextBlock_ForegroundProperty_setDelegate(HandleRef jarg1);
    public static TextBlock_ForegroundProperty_setDelegate _TextBlock_ForegroundProperty_set;
    public static void TextBlock_ForegroundProperty_set(HandleRef jarg1)
    {
        _TextBlock_ForegroundProperty_set(jarg1);
    }

    public delegate IntPtr TextBlock_ForegroundProperty_getDelegate();
    public static TextBlock_ForegroundProperty_getDelegate _TextBlock_ForegroundProperty_get;
    public static IntPtr TextBlock_ForegroundProperty_get()
    {
        IntPtr ret = _TextBlock_ForegroundProperty_get();

        return ret;
    }

    public delegate void TextBlock_IsHyphenationEnabledProperty_setDelegate(HandleRef jarg1);
    public static TextBlock_IsHyphenationEnabledProperty_setDelegate _TextBlock_IsHyphenationEnabledProperty_set;
    public static void TextBlock_IsHyphenationEnabledProperty_set(HandleRef jarg1)
    {
        _TextBlock_IsHyphenationEnabledProperty_set(jarg1);
    }

    public delegate IntPtr TextBlock_IsHyphenationEnabledProperty_getDelegate();
    public static TextBlock_IsHyphenationEnabledProperty_getDelegate _TextBlock_IsHyphenationEnabledProperty_get;
    public static IntPtr TextBlock_IsHyphenationEnabledProperty_get()
    {
        IntPtr ret = _TextBlock_IsHyphenationEnabledProperty_get();

        return ret;
    }

    public delegate void TextBlock_LineHeightProperty_setDelegate(HandleRef jarg1);
    public static TextBlock_LineHeightProperty_setDelegate _TextBlock_LineHeightProperty_set;
    public static void TextBlock_LineHeightProperty_set(HandleRef jarg1)
    {
        _TextBlock_LineHeightProperty_set(jarg1);
    }

    public delegate IntPtr TextBlock_LineHeightProperty_getDelegate();
    public static TextBlock_LineHeightProperty_getDelegate _TextBlock_LineHeightProperty_get;
    public static IntPtr TextBlock_LineHeightProperty_get()
    {
        IntPtr ret = _TextBlock_LineHeightProperty_get();

        return ret;
    }

    public delegate void TextBlock_LineStackingStrategyProperty_setDelegate(HandleRef jarg1);
    public static TextBlock_LineStackingStrategyProperty_setDelegate _TextBlock_LineStackingStrategyProperty_set;
    public static void TextBlock_LineStackingStrategyProperty_set(HandleRef jarg1)
    {
        _TextBlock_LineStackingStrategyProperty_set(jarg1);
    }

    public delegate IntPtr TextBlock_LineStackingStrategyProperty_getDelegate();
    public static TextBlock_LineStackingStrategyProperty_getDelegate _TextBlock_LineStackingStrategyProperty_get;
    public static IntPtr TextBlock_LineStackingStrategyProperty_get()
    {
        IntPtr ret = _TextBlock_LineStackingStrategyProperty_get();

        return ret;
    }

    public delegate void TextBlock_PaddingProperty_setDelegate(HandleRef jarg1);
    public static TextBlock_PaddingProperty_setDelegate _TextBlock_PaddingProperty_set;
    public static void TextBlock_PaddingProperty_set(HandleRef jarg1)
    {
        _TextBlock_PaddingProperty_set(jarg1);
    }

    public delegate IntPtr TextBlock_PaddingProperty_getDelegate();
    public static TextBlock_PaddingProperty_getDelegate _TextBlock_PaddingProperty_get;
    public static IntPtr TextBlock_PaddingProperty_get()
    {
        IntPtr ret = _TextBlock_PaddingProperty_get();

        return ret;
    }

    public delegate void TextBlock_StrokeProperty_setDelegate(HandleRef jarg1);
    public static TextBlock_StrokeProperty_setDelegate _TextBlock_StrokeProperty_set;
    public static void TextBlock_StrokeProperty_set(HandleRef jarg1)
    {
        _TextBlock_StrokeProperty_set(jarg1);
    }

    public delegate IntPtr TextBlock_StrokeProperty_getDelegate();
    public static TextBlock_StrokeProperty_getDelegate _TextBlock_StrokeProperty_get;
    public static IntPtr TextBlock_StrokeProperty_get()
    {
        IntPtr ret = _TextBlock_StrokeProperty_get();

        return ret;
    }

    public delegate void TextBlock_StrokeThicknessProperty_setDelegate(HandleRef jarg1);
    public static TextBlock_StrokeThicknessProperty_setDelegate _TextBlock_StrokeThicknessProperty_set;
    public static void TextBlock_StrokeThicknessProperty_set(HandleRef jarg1)
    {
        _TextBlock_StrokeThicknessProperty_set(jarg1);
    }

    public delegate IntPtr TextBlock_StrokeThicknessProperty_getDelegate();
    public static TextBlock_StrokeThicknessProperty_getDelegate _TextBlock_StrokeThicknessProperty_get;
    public static IntPtr TextBlock_StrokeThicknessProperty_get()
    {
        IntPtr ret = _TextBlock_StrokeThicknessProperty_get();

        return ret;
    }

    public delegate void TextBlock_TextAlignmentProperty_setDelegate(HandleRef jarg1);
    public static TextBlock_TextAlignmentProperty_setDelegate _TextBlock_TextAlignmentProperty_set;
    public static void TextBlock_TextAlignmentProperty_set(HandleRef jarg1)
    {
        _TextBlock_TextAlignmentProperty_set(jarg1);
    }

    public delegate IntPtr TextBlock_TextAlignmentProperty_getDelegate();
    public static TextBlock_TextAlignmentProperty_getDelegate _TextBlock_TextAlignmentProperty_get;
    public static IntPtr TextBlock_TextAlignmentProperty_get()
    {
        IntPtr ret = _TextBlock_TextAlignmentProperty_get();

        return ret;
    }

    public delegate void TextBlock_TextDecorationsProperty_setDelegate(HandleRef jarg1);
    public static TextBlock_TextDecorationsProperty_setDelegate _TextBlock_TextDecorationsProperty_set;
    public static void TextBlock_TextDecorationsProperty_set(HandleRef jarg1)
    {
        _TextBlock_TextDecorationsProperty_set(jarg1);
    }

    public delegate IntPtr TextBlock_TextDecorationsProperty_getDelegate();
    public static TextBlock_TextDecorationsProperty_getDelegate _TextBlock_TextDecorationsProperty_get;
    public static IntPtr TextBlock_TextDecorationsProperty_get()
    {
        IntPtr ret = _TextBlock_TextDecorationsProperty_get();

        return ret;
    }

    public delegate void TextBlock_TextEffectsProperty_setDelegate(HandleRef jarg1);
    public static TextBlock_TextEffectsProperty_setDelegate _TextBlock_TextEffectsProperty_set;
    public static void TextBlock_TextEffectsProperty_set(HandleRef jarg1)
    {
        _TextBlock_TextEffectsProperty_set(jarg1);
    }

    public delegate IntPtr TextBlock_TextEffectsProperty_getDelegate();
    public static TextBlock_TextEffectsProperty_getDelegate _TextBlock_TextEffectsProperty_get;
    public static IntPtr TextBlock_TextEffectsProperty_get()
    {
        IntPtr ret = _TextBlock_TextEffectsProperty_get();

        return ret;
    }

    public delegate void TextBlock_TextProperty_setDelegate(HandleRef jarg1);
    public static TextBlock_TextProperty_setDelegate _TextBlock_TextProperty_set;
    public static void TextBlock_TextProperty_set(HandleRef jarg1)
    {
        _TextBlock_TextProperty_set(jarg1);
    }

    public delegate IntPtr TextBlock_TextProperty_getDelegate();
    public static TextBlock_TextProperty_getDelegate _TextBlock_TextProperty_get;
    public static IntPtr TextBlock_TextProperty_get()
    {
        IntPtr ret = _TextBlock_TextProperty_get();

        return ret;
    }

    public delegate void TextBlock_TextTrimmingProperty_setDelegate(HandleRef jarg1);
    public static TextBlock_TextTrimmingProperty_setDelegate _TextBlock_TextTrimmingProperty_set;
    public static void TextBlock_TextTrimmingProperty_set(HandleRef jarg1)
    {
        _TextBlock_TextTrimmingProperty_set(jarg1);
    }

    public delegate IntPtr TextBlock_TextTrimmingProperty_getDelegate();
    public static TextBlock_TextTrimmingProperty_getDelegate _TextBlock_TextTrimmingProperty_get;
    public static IntPtr TextBlock_TextTrimmingProperty_get()
    {
        IntPtr ret = _TextBlock_TextTrimmingProperty_get();

        return ret;
    }

    public delegate void TextBlock_TextWrappingProperty_setDelegate(HandleRef jarg1);
    public static TextBlock_TextWrappingProperty_setDelegate _TextBlock_TextWrappingProperty_set;
    public static void TextBlock_TextWrappingProperty_set(HandleRef jarg1)
    {
        _TextBlock_TextWrappingProperty_set(jarg1);
    }

    public delegate IntPtr TextBlock_TextWrappingProperty_getDelegate();
    public static TextBlock_TextWrappingProperty_getDelegate _TextBlock_TextWrappingProperty_get;
    public static IntPtr TextBlock_TextWrappingProperty_get()
    {
        IntPtr ret = _TextBlock_TextWrappingProperty_get();

        return ret;
    }

    public delegate void TextBox_CharacterCasingProperty_setDelegate(HandleRef jarg1);
    public static TextBox_CharacterCasingProperty_setDelegate _TextBox_CharacterCasingProperty_set;
    public static void TextBox_CharacterCasingProperty_set(HandleRef jarg1)
    {
        _TextBox_CharacterCasingProperty_set(jarg1);
    }

    public delegate IntPtr TextBox_CharacterCasingProperty_getDelegate();
    public static TextBox_CharacterCasingProperty_getDelegate _TextBox_CharacterCasingProperty_get;
    public static IntPtr TextBox_CharacterCasingProperty_get()
    {
        IntPtr ret = _TextBox_CharacterCasingProperty_get();

        return ret;
    }

    public delegate void TextBox_MaxLengthProperty_setDelegate(HandleRef jarg1);
    public static TextBox_MaxLengthProperty_setDelegate _TextBox_MaxLengthProperty_set;
    public static void TextBox_MaxLengthProperty_set(HandleRef jarg1)
    {
        _TextBox_MaxLengthProperty_set(jarg1);
    }

    public delegate IntPtr TextBox_MaxLengthProperty_getDelegate();
    public static TextBox_MaxLengthProperty_getDelegate _TextBox_MaxLengthProperty_get;
    public static IntPtr TextBox_MaxLengthProperty_get()
    {
        IntPtr ret = _TextBox_MaxLengthProperty_get();

        return ret;
    }

    public delegate void TextBox_MaxLinesProperty_setDelegate(HandleRef jarg1);
    public static TextBox_MaxLinesProperty_setDelegate _TextBox_MaxLinesProperty_set;
    public static void TextBox_MaxLinesProperty_set(HandleRef jarg1)
    {
        _TextBox_MaxLinesProperty_set(jarg1);
    }

    public delegate IntPtr TextBox_MaxLinesProperty_getDelegate();
    public static TextBox_MaxLinesProperty_getDelegate _TextBox_MaxLinesProperty_get;
    public static IntPtr TextBox_MaxLinesProperty_get()
    {
        IntPtr ret = _TextBox_MaxLinesProperty_get();

        return ret;
    }

    public delegate void TextBox_MinLinesProperty_setDelegate(HandleRef jarg1);
    public static TextBox_MinLinesProperty_setDelegate _TextBox_MinLinesProperty_set;
    public static void TextBox_MinLinesProperty_set(HandleRef jarg1)
    {
        _TextBox_MinLinesProperty_set(jarg1);
    }

    public delegate IntPtr TextBox_MinLinesProperty_getDelegate();
    public static TextBox_MinLinesProperty_getDelegate _TextBox_MinLinesProperty_get;
    public static IntPtr TextBox_MinLinesProperty_get()
    {
        IntPtr ret = _TextBox_MinLinesProperty_get();

        return ret;
    }

    public delegate void TextBox_TextAlignmentProperty_setDelegate(HandleRef jarg1);
    public static TextBox_TextAlignmentProperty_setDelegate _TextBox_TextAlignmentProperty_set;
    public static void TextBox_TextAlignmentProperty_set(HandleRef jarg1)
    {
        _TextBox_TextAlignmentProperty_set(jarg1);
    }

    public delegate IntPtr TextBox_TextAlignmentProperty_getDelegate();
    public static TextBox_TextAlignmentProperty_getDelegate _TextBox_TextAlignmentProperty_get;
    public static IntPtr TextBox_TextAlignmentProperty_get()
    {
        IntPtr ret = _TextBox_TextAlignmentProperty_get();

        return ret;
    }

    public delegate void TextBox_TextDecorationsProperty_setDelegate(HandleRef jarg1);
    public static TextBox_TextDecorationsProperty_setDelegate _TextBox_TextDecorationsProperty_set;
    public static void TextBox_TextDecorationsProperty_set(HandleRef jarg1)
    {
        _TextBox_TextDecorationsProperty_set(jarg1);
    }

    public delegate IntPtr TextBox_TextDecorationsProperty_getDelegate();
    public static TextBox_TextDecorationsProperty_getDelegate _TextBox_TextDecorationsProperty_get;
    public static IntPtr TextBox_TextDecorationsProperty_get()
    {
        IntPtr ret = _TextBox_TextDecorationsProperty_get();

        return ret;
    }

    public delegate void TextBox_TextProperty_setDelegate(HandleRef jarg1);
    public static TextBox_TextProperty_setDelegate _TextBox_TextProperty_set;
    public static void TextBox_TextProperty_set(HandleRef jarg1)
    {
        _TextBox_TextProperty_set(jarg1);
    }

    public delegate IntPtr TextBox_TextProperty_getDelegate();
    public static TextBox_TextProperty_getDelegate _TextBox_TextProperty_get;
    public static IntPtr TextBox_TextProperty_get()
    {
        IntPtr ret = _TextBox_TextProperty_get();

        return ret;
    }

    public delegate void TextBox_TextWrappingProperty_setDelegate(HandleRef jarg1);
    public static TextBox_TextWrappingProperty_setDelegate _TextBox_TextWrappingProperty_set;
    public static void TextBox_TextWrappingProperty_set(HandleRef jarg1)
    {
        _TextBox_TextWrappingProperty_set(jarg1);
    }

    public delegate IntPtr TextBox_TextWrappingProperty_getDelegate();
    public static TextBox_TextWrappingProperty_getDelegate _TextBox_TextWrappingProperty_get;
    public static IntPtr TextBox_TextWrappingProperty_get()
    {
        IntPtr ret = _TextBox_TextWrappingProperty_get();

        return ret;
    }

    public delegate void TextElement_BackgroundProperty_setDelegate(HandleRef jarg1);
    public static TextElement_BackgroundProperty_setDelegate _TextElement_BackgroundProperty_set;
    public static void TextElement_BackgroundProperty_set(HandleRef jarg1)
    {
        _TextElement_BackgroundProperty_set(jarg1);
    }

    public delegate IntPtr TextElement_BackgroundProperty_getDelegate();
    public static TextElement_BackgroundProperty_getDelegate _TextElement_BackgroundProperty_get;
    public static IntPtr TextElement_BackgroundProperty_get()
    {
        IntPtr ret = _TextElement_BackgroundProperty_get();

        return ret;
    }

    public delegate void TextElement_FontFamilyProperty_setDelegate(HandleRef jarg1);
    public static TextElement_FontFamilyProperty_setDelegate _TextElement_FontFamilyProperty_set;
    public static void TextElement_FontFamilyProperty_set(HandleRef jarg1)
    {
        _TextElement_FontFamilyProperty_set(jarg1);
    }

    public delegate IntPtr TextElement_FontFamilyProperty_getDelegate();
    public static TextElement_FontFamilyProperty_getDelegate _TextElement_FontFamilyProperty_get;
    public static IntPtr TextElement_FontFamilyProperty_get()
    {
        IntPtr ret = _TextElement_FontFamilyProperty_get();

        return ret;
    }

    public delegate void TextElement_FontSizeProperty_setDelegate(HandleRef jarg1);
    public static TextElement_FontSizeProperty_setDelegate _TextElement_FontSizeProperty_set;
    public static void TextElement_FontSizeProperty_set(HandleRef jarg1)
    {
        _TextElement_FontSizeProperty_set(jarg1);
    }

    public delegate IntPtr TextElement_FontSizeProperty_getDelegate();
    public static TextElement_FontSizeProperty_getDelegate _TextElement_FontSizeProperty_get;
    public static IntPtr TextElement_FontSizeProperty_get()
    {
        IntPtr ret = _TextElement_FontSizeProperty_get();

        return ret;
    }

    public delegate void TextElement_FontStretchProperty_setDelegate(HandleRef jarg1);
    public static TextElement_FontStretchProperty_setDelegate _TextElement_FontStretchProperty_set;
    public static void TextElement_FontStretchProperty_set(HandleRef jarg1)
    {
        _TextElement_FontStretchProperty_set(jarg1);
    }

    public delegate IntPtr TextElement_FontStretchProperty_getDelegate();
    public static TextElement_FontStretchProperty_getDelegate _TextElement_FontStretchProperty_get;
    public static IntPtr TextElement_FontStretchProperty_get()
    {
        IntPtr ret = _TextElement_FontStretchProperty_get();

        return ret;
    }

    public delegate void TextElement_FontStyleProperty_setDelegate(HandleRef jarg1);
    public static TextElement_FontStyleProperty_setDelegate _TextElement_FontStyleProperty_set;
    public static void TextElement_FontStyleProperty_set(HandleRef jarg1)
    {
        _TextElement_FontStyleProperty_set(jarg1);
    }

    public delegate IntPtr TextElement_FontStyleProperty_getDelegate();
    public static TextElement_FontStyleProperty_getDelegate _TextElement_FontStyleProperty_get;
    public static IntPtr TextElement_FontStyleProperty_get()
    {
        IntPtr ret = _TextElement_FontStyleProperty_get();

        return ret;
    }

    public delegate void TextElement_FontWeightProperty_setDelegate(HandleRef jarg1);
    public static TextElement_FontWeightProperty_setDelegate _TextElement_FontWeightProperty_set;
    public static void TextElement_FontWeightProperty_set(HandleRef jarg1)
    {
        _TextElement_FontWeightProperty_set(jarg1);
    }

    public delegate IntPtr TextElement_FontWeightProperty_getDelegate();
    public static TextElement_FontWeightProperty_getDelegate _TextElement_FontWeightProperty_get;
    public static IntPtr TextElement_FontWeightProperty_get()
    {
        IntPtr ret = _TextElement_FontWeightProperty_get();

        return ret;
    }

    public delegate void TextElement_ForegroundProperty_setDelegate(HandleRef jarg1);
    public static TextElement_ForegroundProperty_setDelegate _TextElement_ForegroundProperty_set;
    public static void TextElement_ForegroundProperty_set(HandleRef jarg1)
    {
        _TextElement_ForegroundProperty_set(jarg1);
    }

    public delegate IntPtr TextElement_ForegroundProperty_getDelegate();
    public static TextElement_ForegroundProperty_getDelegate _TextElement_ForegroundProperty_get;
    public static IntPtr TextElement_ForegroundProperty_get()
    {
        IntPtr ret = _TextElement_ForegroundProperty_get();

        return ret;
    }

    public delegate void TextElement_StrokeProperty_setDelegate(HandleRef jarg1);
    public static TextElement_StrokeProperty_setDelegate _TextElement_StrokeProperty_set;
    public static void TextElement_StrokeProperty_set(HandleRef jarg1)
    {
        _TextElement_StrokeProperty_set(jarg1);
    }

    public delegate IntPtr TextElement_StrokeProperty_getDelegate();
    public static TextElement_StrokeProperty_getDelegate _TextElement_StrokeProperty_get;
    public static IntPtr TextElement_StrokeProperty_get()
    {
        IntPtr ret = _TextElement_StrokeProperty_get();

        return ret;
    }

    public delegate void TextElement_StrokeThicknessProperty_setDelegate(HandleRef jarg1);
    public static TextElement_StrokeThicknessProperty_setDelegate _TextElement_StrokeThicknessProperty_set;
    public static void TextElement_StrokeThicknessProperty_set(HandleRef jarg1)
    {
        _TextElement_StrokeThicknessProperty_set(jarg1);
    }

    public delegate IntPtr TextElement_StrokeThicknessProperty_getDelegate();
    public static TextElement_StrokeThicknessProperty_getDelegate _TextElement_StrokeThicknessProperty_get;
    public static IntPtr TextElement_StrokeThicknessProperty_get()
    {
        IntPtr ret = _TextElement_StrokeThicknessProperty_get();

        return ret;
    }

    public delegate void TextElement_TextEffectsProperty_setDelegate(HandleRef jarg1);
    public static TextElement_TextEffectsProperty_setDelegate _TextElement_TextEffectsProperty_set;
    public static void TextElement_TextEffectsProperty_set(HandleRef jarg1)
    {
        _TextElement_TextEffectsProperty_set(jarg1);
    }

    public delegate IntPtr TextElement_TextEffectsProperty_getDelegate();
    public static TextElement_TextEffectsProperty_getDelegate _TextElement_TextEffectsProperty_get;
    public static IntPtr TextElement_TextEffectsProperty_get()
    {
        IntPtr ret = _TextElement_TextEffectsProperty_get();

        return ret;
    }

    public delegate void Thumb_IsDraggingProperty_setDelegate(HandleRef jarg1);
    public static Thumb_IsDraggingProperty_setDelegate _Thumb_IsDraggingProperty_set;
    public static void Thumb_IsDraggingProperty_set(HandleRef jarg1)
    {
        _Thumb_IsDraggingProperty_set(jarg1);
    }

    public delegate IntPtr Thumb_IsDraggingProperty_getDelegate();
    public static Thumb_IsDraggingProperty_getDelegate _Thumb_IsDraggingProperty_get;
    public static IntPtr Thumb_IsDraggingProperty_get()
    {
        IntPtr ret = _Thumb_IsDraggingProperty_get();

        return ret;
    }

    public delegate void TickBar_FillProperty_setDelegate(HandleRef jarg1);
    public static TickBar_FillProperty_setDelegate _TickBar_FillProperty_set;
    public static void TickBar_FillProperty_set(HandleRef jarg1)
    {
        _TickBar_FillProperty_set(jarg1);
    }

    public delegate IntPtr TickBar_FillProperty_getDelegate();
    public static TickBar_FillProperty_getDelegate _TickBar_FillProperty_get;
    public static IntPtr TickBar_FillProperty_get()
    {
        IntPtr ret = _TickBar_FillProperty_get();

        return ret;
    }

    public delegate void TickBar_IsDirectionReversedProperty_setDelegate(HandleRef jarg1);
    public static TickBar_IsDirectionReversedProperty_setDelegate _TickBar_IsDirectionReversedProperty_set;
    public static void TickBar_IsDirectionReversedProperty_set(HandleRef jarg1)
    {
        _TickBar_IsDirectionReversedProperty_set(jarg1);
    }

    public delegate IntPtr TickBar_IsDirectionReversedProperty_getDelegate();
    public static TickBar_IsDirectionReversedProperty_getDelegate _TickBar_IsDirectionReversedProperty_get;
    public static IntPtr TickBar_IsDirectionReversedProperty_get()
    {
        IntPtr ret = _TickBar_IsDirectionReversedProperty_get();

        return ret;
    }

    public delegate void TickBar_IsSelectionRangeEnabledProperty_setDelegate(HandleRef jarg1);
    public static TickBar_IsSelectionRangeEnabledProperty_setDelegate _TickBar_IsSelectionRangeEnabledProperty_set;
    public static void TickBar_IsSelectionRangeEnabledProperty_set(HandleRef jarg1)
    {
        _TickBar_IsSelectionRangeEnabledProperty_set(jarg1);
    }

    public delegate IntPtr TickBar_IsSelectionRangeEnabledProperty_getDelegate();
    public static TickBar_IsSelectionRangeEnabledProperty_getDelegate _TickBar_IsSelectionRangeEnabledProperty_get;
    public static IntPtr TickBar_IsSelectionRangeEnabledProperty_get()
    {
        IntPtr ret = _TickBar_IsSelectionRangeEnabledProperty_get();

        return ret;
    }

    public delegate void TickBar_MaximumProperty_setDelegate(HandleRef jarg1);
    public static TickBar_MaximumProperty_setDelegate _TickBar_MaximumProperty_set;
    public static void TickBar_MaximumProperty_set(HandleRef jarg1)
    {
        _TickBar_MaximumProperty_set(jarg1);
    }

    public delegate IntPtr TickBar_MaximumProperty_getDelegate();
    public static TickBar_MaximumProperty_getDelegate _TickBar_MaximumProperty_get;
    public static IntPtr TickBar_MaximumProperty_get()
    {
        IntPtr ret = _TickBar_MaximumProperty_get();

        return ret;
    }

    public delegate void TickBar_MinimumProperty_setDelegate(HandleRef jarg1);
    public static TickBar_MinimumProperty_setDelegate _TickBar_MinimumProperty_set;
    public static void TickBar_MinimumProperty_set(HandleRef jarg1)
    {
        _TickBar_MinimumProperty_set(jarg1);
    }

    public delegate IntPtr TickBar_MinimumProperty_getDelegate();
    public static TickBar_MinimumProperty_getDelegate _TickBar_MinimumProperty_get;
    public static IntPtr TickBar_MinimumProperty_get()
    {
        IntPtr ret = _TickBar_MinimumProperty_get();

        return ret;
    }

    public delegate void TickBar_PlacementProperty_setDelegate(HandleRef jarg1);
    public static TickBar_PlacementProperty_setDelegate _TickBar_PlacementProperty_set;
    public static void TickBar_PlacementProperty_set(HandleRef jarg1)
    {
        _TickBar_PlacementProperty_set(jarg1);
    }

    public delegate IntPtr TickBar_PlacementProperty_getDelegate();
    public static TickBar_PlacementProperty_getDelegate _TickBar_PlacementProperty_get;
    public static IntPtr TickBar_PlacementProperty_get()
    {
        IntPtr ret = _TickBar_PlacementProperty_get();

        return ret;
    }

    public delegate void TickBar_ReservedSpaceProperty_setDelegate(HandleRef jarg1);
    public static TickBar_ReservedSpaceProperty_setDelegate _TickBar_ReservedSpaceProperty_set;
    public static void TickBar_ReservedSpaceProperty_set(HandleRef jarg1)
    {
        _TickBar_ReservedSpaceProperty_set(jarg1);
    }

    public delegate IntPtr TickBar_ReservedSpaceProperty_getDelegate();
    public static TickBar_ReservedSpaceProperty_getDelegate _TickBar_ReservedSpaceProperty_get;
    public static IntPtr TickBar_ReservedSpaceProperty_get()
    {
        IntPtr ret = _TickBar_ReservedSpaceProperty_get();

        return ret;
    }

    public delegate void TickBar_SelectionEndProperty_setDelegate(HandleRef jarg1);
    public static TickBar_SelectionEndProperty_setDelegate _TickBar_SelectionEndProperty_set;
    public static void TickBar_SelectionEndProperty_set(HandleRef jarg1)
    {
        _TickBar_SelectionEndProperty_set(jarg1);
    }

    public delegate IntPtr TickBar_SelectionEndProperty_getDelegate();
    public static TickBar_SelectionEndProperty_getDelegate _TickBar_SelectionEndProperty_get;
    public static IntPtr TickBar_SelectionEndProperty_get()
    {
        IntPtr ret = _TickBar_SelectionEndProperty_get();

        return ret;
    }

    public delegate void TickBar_SelectionStartProperty_setDelegate(HandleRef jarg1);
    public static TickBar_SelectionStartProperty_setDelegate _TickBar_SelectionStartProperty_set;
    public static void TickBar_SelectionStartProperty_set(HandleRef jarg1)
    {
        _TickBar_SelectionStartProperty_set(jarg1);
    }

    public delegate IntPtr TickBar_SelectionStartProperty_getDelegate();
    public static TickBar_SelectionStartProperty_getDelegate _TickBar_SelectionStartProperty_get;
    public static IntPtr TickBar_SelectionStartProperty_get()
    {
        IntPtr ret = _TickBar_SelectionStartProperty_get();

        return ret;
    }

    public delegate void TickBar_TickFrequencyProperty_setDelegate(HandleRef jarg1);
    public static TickBar_TickFrequencyProperty_setDelegate _TickBar_TickFrequencyProperty_set;
    public static void TickBar_TickFrequencyProperty_set(HandleRef jarg1)
    {
        _TickBar_TickFrequencyProperty_set(jarg1);
    }

    public delegate IntPtr TickBar_TickFrequencyProperty_getDelegate();
    public static TickBar_TickFrequencyProperty_getDelegate _TickBar_TickFrequencyProperty_get;
    public static IntPtr TickBar_TickFrequencyProperty_get()
    {
        IntPtr ret = _TickBar_TickFrequencyProperty_get();

        return ret;
    }

    public delegate void TickBar_TicksProperty_setDelegate(HandleRef jarg1);
    public static TickBar_TicksProperty_setDelegate _TickBar_TicksProperty_set;
    public static void TickBar_TicksProperty_set(HandleRef jarg1)
    {
        _TickBar_TicksProperty_set(jarg1);
    }

    public delegate IntPtr TickBar_TicksProperty_getDelegate();
    public static TickBar_TicksProperty_getDelegate _TickBar_TicksProperty_get;
    public static IntPtr TickBar_TicksProperty_get()
    {
        IntPtr ret = _TickBar_TicksProperty_get();

        return ret;
    }

    public delegate void ToolBar_BandIndexProperty_setDelegate(HandleRef jarg1);
    public static ToolBar_BandIndexProperty_setDelegate _ToolBar_BandIndexProperty_set;
    public static void ToolBar_BandIndexProperty_set(HandleRef jarg1)
    {
        _ToolBar_BandIndexProperty_set(jarg1);
    }

    public delegate IntPtr ToolBar_BandIndexProperty_getDelegate();
    public static ToolBar_BandIndexProperty_getDelegate _ToolBar_BandIndexProperty_get;
    public static IntPtr ToolBar_BandIndexProperty_get()
    {
        IntPtr ret = _ToolBar_BandIndexProperty_get();

        return ret;
    }

    public delegate void ToolBar_BandProperty_setDelegate(HandleRef jarg1);
    public static ToolBar_BandProperty_setDelegate _ToolBar_BandProperty_set;
    public static void ToolBar_BandProperty_set(HandleRef jarg1)
    {
        _ToolBar_BandProperty_set(jarg1);
    }

    public delegate IntPtr ToolBar_BandProperty_getDelegate();
    public static ToolBar_BandProperty_getDelegate _ToolBar_BandProperty_get;
    public static IntPtr ToolBar_BandProperty_get()
    {
        IntPtr ret = _ToolBar_BandProperty_get();

        return ret;
    }

    public delegate void ToolBar_HasOverflowItemsProperty_setDelegate(HandleRef jarg1);
    public static ToolBar_HasOverflowItemsProperty_setDelegate _ToolBar_HasOverflowItemsProperty_set;
    public static void ToolBar_HasOverflowItemsProperty_set(HandleRef jarg1)
    {
        _ToolBar_HasOverflowItemsProperty_set(jarg1);
    }

    public delegate IntPtr ToolBar_HasOverflowItemsProperty_getDelegate();
    public static ToolBar_HasOverflowItemsProperty_getDelegate _ToolBar_HasOverflowItemsProperty_get;
    public static IntPtr ToolBar_HasOverflowItemsProperty_get()
    {
        IntPtr ret = _ToolBar_HasOverflowItemsProperty_get();

        return ret;
    }

    public delegate void ToolBar_IsOverflowItemProperty_setDelegate(HandleRef jarg1);
    public static ToolBar_IsOverflowItemProperty_setDelegate _ToolBar_IsOverflowItemProperty_set;
    public static void ToolBar_IsOverflowItemProperty_set(HandleRef jarg1)
    {
        _ToolBar_IsOverflowItemProperty_set(jarg1);
    }

    public delegate IntPtr ToolBar_IsOverflowItemProperty_getDelegate();
    public static ToolBar_IsOverflowItemProperty_getDelegate _ToolBar_IsOverflowItemProperty_get;
    public static IntPtr ToolBar_IsOverflowItemProperty_get()
    {
        IntPtr ret = _ToolBar_IsOverflowItemProperty_get();

        return ret;
    }

    public delegate void ToolBar_IsOverflowOpenProperty_setDelegate(HandleRef jarg1);
    public static ToolBar_IsOverflowOpenProperty_setDelegate _ToolBar_IsOverflowOpenProperty_set;
    public static void ToolBar_IsOverflowOpenProperty_set(HandleRef jarg1)
    {
        _ToolBar_IsOverflowOpenProperty_set(jarg1);
    }

    public delegate IntPtr ToolBar_IsOverflowOpenProperty_getDelegate();
    public static ToolBar_IsOverflowOpenProperty_getDelegate _ToolBar_IsOverflowOpenProperty_get;
    public static IntPtr ToolBar_IsOverflowOpenProperty_get()
    {
        IntPtr ret = _ToolBar_IsOverflowOpenProperty_get();

        return ret;
    }

    public delegate void ToolBar_OrientationProperty_setDelegate(HandleRef jarg1);
    public static ToolBar_OrientationProperty_setDelegate _ToolBar_OrientationProperty_set;
    public static void ToolBar_OrientationProperty_set(HandleRef jarg1)
    {
        _ToolBar_OrientationProperty_set(jarg1);
    }

    public delegate IntPtr ToolBar_OrientationProperty_getDelegate();
    public static ToolBar_OrientationProperty_getDelegate _ToolBar_OrientationProperty_get;
    public static IntPtr ToolBar_OrientationProperty_get()
    {
        IntPtr ret = _ToolBar_OrientationProperty_get();

        return ret;
    }

    public delegate void ToolBar_OverflowModeProperty_setDelegate(HandleRef jarg1);
    public static ToolBar_OverflowModeProperty_setDelegate _ToolBar_OverflowModeProperty_set;
    public static void ToolBar_OverflowModeProperty_set(HandleRef jarg1)
    {
        _ToolBar_OverflowModeProperty_set(jarg1);
    }

    public delegate IntPtr ToolBar_OverflowModeProperty_getDelegate();
    public static ToolBar_OverflowModeProperty_getDelegate _ToolBar_OverflowModeProperty_get;
    public static IntPtr ToolBar_OverflowModeProperty_get()
    {
        IntPtr ret = _ToolBar_OverflowModeProperty_get();

        return ret;
    }

    public delegate void ToolBarOverflowPanel_WrapWidthProperty_setDelegate(HandleRef jarg1);
    public static ToolBarOverflowPanel_WrapWidthProperty_setDelegate _ToolBarOverflowPanel_WrapWidthProperty_set;
    public static void ToolBarOverflowPanel_WrapWidthProperty_set(HandleRef jarg1)
    {
        _ToolBarOverflowPanel_WrapWidthProperty_set(jarg1);
    }

    public delegate IntPtr ToolBarOverflowPanel_WrapWidthProperty_getDelegate();
    public static ToolBarOverflowPanel_WrapWidthProperty_getDelegate _ToolBarOverflowPanel_WrapWidthProperty_get;
    public static IntPtr ToolBarOverflowPanel_WrapWidthProperty_get()
    {
        IntPtr ret = _ToolBarOverflowPanel_WrapWidthProperty_get();

        return ret;
    }

    public delegate void ToolBarTray_BackgroundProperty_setDelegate(HandleRef jarg1);
    public static ToolBarTray_BackgroundProperty_setDelegate _ToolBarTray_BackgroundProperty_set;
    public static void ToolBarTray_BackgroundProperty_set(HandleRef jarg1)
    {
        _ToolBarTray_BackgroundProperty_set(jarg1);
    }

    public delegate IntPtr ToolBarTray_BackgroundProperty_getDelegate();
    public static ToolBarTray_BackgroundProperty_getDelegate _ToolBarTray_BackgroundProperty_get;
    public static IntPtr ToolBarTray_BackgroundProperty_get()
    {
        IntPtr ret = _ToolBarTray_BackgroundProperty_get();

        return ret;
    }

    public delegate void ToolBarTray_IsLockedProperty_setDelegate(HandleRef jarg1);
    public static ToolBarTray_IsLockedProperty_setDelegate _ToolBarTray_IsLockedProperty_set;
    public static void ToolBarTray_IsLockedProperty_set(HandleRef jarg1)
    {
        _ToolBarTray_IsLockedProperty_set(jarg1);
    }

    public delegate IntPtr ToolBarTray_IsLockedProperty_getDelegate();
    public static ToolBarTray_IsLockedProperty_getDelegate _ToolBarTray_IsLockedProperty_get;
    public static IntPtr ToolBarTray_IsLockedProperty_get()
    {
        IntPtr ret = _ToolBarTray_IsLockedProperty_get();

        return ret;
    }

    public delegate void ToolBarTray_OrientationProperty_setDelegate(HandleRef jarg1);
    public static ToolBarTray_OrientationProperty_setDelegate _ToolBarTray_OrientationProperty_set;
    public static void ToolBarTray_OrientationProperty_set(HandleRef jarg1)
    {
        _ToolBarTray_OrientationProperty_set(jarg1);
    }

    public delegate IntPtr ToolBarTray_OrientationProperty_getDelegate();
    public static ToolBarTray_OrientationProperty_getDelegate _ToolBarTray_OrientationProperty_get;
    public static IntPtr ToolBarTray_OrientationProperty_get()
    {
        IntPtr ret = _ToolBarTray_OrientationProperty_get();

        return ret;
    }

    public delegate void ToolTip_CustomPopupPlacementCallbackProperty_setDelegate(HandleRef jarg1);
    public static ToolTip_CustomPopupPlacementCallbackProperty_setDelegate _ToolTip_CustomPopupPlacementCallbackProperty_set;
    public static void ToolTip_CustomPopupPlacementCallbackProperty_set(HandleRef jarg1)
    {
        _ToolTip_CustomPopupPlacementCallbackProperty_set(jarg1);
    }

    public delegate IntPtr ToolTip_CustomPopupPlacementCallbackProperty_getDelegate();
    public static ToolTip_CustomPopupPlacementCallbackProperty_getDelegate _ToolTip_CustomPopupPlacementCallbackProperty_get;
    public static IntPtr ToolTip_CustomPopupPlacementCallbackProperty_get()
    {
        IntPtr ret = _ToolTip_CustomPopupPlacementCallbackProperty_get();

        return ret;
    }

    public delegate void ToolTip_HasDropShadowProperty_setDelegate(HandleRef jarg1);
    public static ToolTip_HasDropShadowProperty_setDelegate _ToolTip_HasDropShadowProperty_set;
    public static void ToolTip_HasDropShadowProperty_set(HandleRef jarg1)
    {
        _ToolTip_HasDropShadowProperty_set(jarg1);
    }

    public delegate IntPtr ToolTip_HasDropShadowProperty_getDelegate();
    public static ToolTip_HasDropShadowProperty_getDelegate _ToolTip_HasDropShadowProperty_get;
    public static IntPtr ToolTip_HasDropShadowProperty_get()
    {
        IntPtr ret = _ToolTip_HasDropShadowProperty_get();

        return ret;
    }

    public delegate void ToolTip_HorizontalOffsetProperty_setDelegate(HandleRef jarg1);
    public static ToolTip_HorizontalOffsetProperty_setDelegate _ToolTip_HorizontalOffsetProperty_set;
    public static void ToolTip_HorizontalOffsetProperty_set(HandleRef jarg1)
    {
        _ToolTip_HorizontalOffsetProperty_set(jarg1);
    }

    public delegate IntPtr ToolTip_HorizontalOffsetProperty_getDelegate();
    public static ToolTip_HorizontalOffsetProperty_getDelegate _ToolTip_HorizontalOffsetProperty_get;
    public static IntPtr ToolTip_HorizontalOffsetProperty_get()
    {
        IntPtr ret = _ToolTip_HorizontalOffsetProperty_get();

        return ret;
    }

    public delegate void ToolTip_IsOpenProperty_setDelegate(HandleRef jarg1);
    public static ToolTip_IsOpenProperty_setDelegate _ToolTip_IsOpenProperty_set;
    public static void ToolTip_IsOpenProperty_set(HandleRef jarg1)
    {
        _ToolTip_IsOpenProperty_set(jarg1);
    }

    public delegate IntPtr ToolTip_IsOpenProperty_getDelegate();
    public static ToolTip_IsOpenProperty_getDelegate _ToolTip_IsOpenProperty_get;
    public static IntPtr ToolTip_IsOpenProperty_get()
    {
        IntPtr ret = _ToolTip_IsOpenProperty_get();

        return ret;
    }

    public delegate void ToolTip_PlacementProperty_setDelegate(HandleRef jarg1);
    public static ToolTip_PlacementProperty_setDelegate _ToolTip_PlacementProperty_set;
    public static void ToolTip_PlacementProperty_set(HandleRef jarg1)
    {
        _ToolTip_PlacementProperty_set(jarg1);
    }

    public delegate IntPtr ToolTip_PlacementProperty_getDelegate();
    public static ToolTip_PlacementProperty_getDelegate _ToolTip_PlacementProperty_get;
    public static IntPtr ToolTip_PlacementProperty_get()
    {
        IntPtr ret = _ToolTip_PlacementProperty_get();

        return ret;
    }

    public delegate void ToolTip_PlacementRectangleProperty_setDelegate(HandleRef jarg1);
    public static ToolTip_PlacementRectangleProperty_setDelegate _ToolTip_PlacementRectangleProperty_set;
    public static void ToolTip_PlacementRectangleProperty_set(HandleRef jarg1)
    {
        _ToolTip_PlacementRectangleProperty_set(jarg1);
    }

    public delegate IntPtr ToolTip_PlacementRectangleProperty_getDelegate();
    public static ToolTip_PlacementRectangleProperty_getDelegate _ToolTip_PlacementRectangleProperty_get;
    public static IntPtr ToolTip_PlacementRectangleProperty_get()
    {
        IntPtr ret = _ToolTip_PlacementRectangleProperty_get();

        return ret;
    }

    public delegate void ToolTip_PlacementTargetProperty_setDelegate(HandleRef jarg1);
    public static ToolTip_PlacementTargetProperty_setDelegate _ToolTip_PlacementTargetProperty_set;
    public static void ToolTip_PlacementTargetProperty_set(HandleRef jarg1)
    {
        _ToolTip_PlacementTargetProperty_set(jarg1);
    }

    public delegate IntPtr ToolTip_PlacementTargetProperty_getDelegate();
    public static ToolTip_PlacementTargetProperty_getDelegate _ToolTip_PlacementTargetProperty_get;
    public static IntPtr ToolTip_PlacementTargetProperty_get()
    {
        IntPtr ret = _ToolTip_PlacementTargetProperty_get();

        return ret;
    }

    public delegate void ToolTip_StaysOpenProperty_setDelegate(HandleRef jarg1);
    public static ToolTip_StaysOpenProperty_setDelegate _ToolTip_StaysOpenProperty_set;
    public static void ToolTip_StaysOpenProperty_set(HandleRef jarg1)
    {
        _ToolTip_StaysOpenProperty_set(jarg1);
    }

    public delegate IntPtr ToolTip_StaysOpenProperty_getDelegate();
    public static ToolTip_StaysOpenProperty_getDelegate _ToolTip_StaysOpenProperty_get;
    public static IntPtr ToolTip_StaysOpenProperty_get()
    {
        IntPtr ret = _ToolTip_StaysOpenProperty_get();

        return ret;
    }

    public delegate void ToolTip_VerticalOffsetProperty_setDelegate(HandleRef jarg1);
    public static ToolTip_VerticalOffsetProperty_setDelegate _ToolTip_VerticalOffsetProperty_set;
    public static void ToolTip_VerticalOffsetProperty_set(HandleRef jarg1)
    {
        _ToolTip_VerticalOffsetProperty_set(jarg1);
    }

    public delegate IntPtr ToolTip_VerticalOffsetProperty_getDelegate();
    public static ToolTip_VerticalOffsetProperty_getDelegate _ToolTip_VerticalOffsetProperty_get;
    public static IntPtr ToolTip_VerticalOffsetProperty_get()
    {
        IntPtr ret = _ToolTip_VerticalOffsetProperty_get();

        return ret;
    }

    public delegate void ToolTipService_BetweenShowDelayProperty_setDelegate(HandleRef jarg1);
    public static ToolTipService_BetweenShowDelayProperty_setDelegate _ToolTipService_BetweenShowDelayProperty_set;
    public static void ToolTipService_BetweenShowDelayProperty_set(HandleRef jarg1)
    {
        _ToolTipService_BetweenShowDelayProperty_set(jarg1);
    }

    public delegate IntPtr ToolTipService_BetweenShowDelayProperty_getDelegate();
    public static ToolTipService_BetweenShowDelayProperty_getDelegate _ToolTipService_BetweenShowDelayProperty_get;
    public static IntPtr ToolTipService_BetweenShowDelayProperty_get()
    {
        IntPtr ret = _ToolTipService_BetweenShowDelayProperty_get();

        return ret;
    }

    public delegate void ToolTipService_HasDropShadowProperty_setDelegate(HandleRef jarg1);
    public static ToolTipService_HasDropShadowProperty_setDelegate _ToolTipService_HasDropShadowProperty_set;
    public static void ToolTipService_HasDropShadowProperty_set(HandleRef jarg1)
    {
        _ToolTipService_HasDropShadowProperty_set(jarg1);
    }

    public delegate IntPtr ToolTipService_HasDropShadowProperty_getDelegate();
    public static ToolTipService_HasDropShadowProperty_getDelegate _ToolTipService_HasDropShadowProperty_get;
    public static IntPtr ToolTipService_HasDropShadowProperty_get()
    {
        IntPtr ret = _ToolTipService_HasDropShadowProperty_get();

        return ret;
    }

    public delegate void ToolTipService_HorizontalOffsetProperty_setDelegate(HandleRef jarg1);
    public static ToolTipService_HorizontalOffsetProperty_setDelegate _ToolTipService_HorizontalOffsetProperty_set;
    public static void ToolTipService_HorizontalOffsetProperty_set(HandleRef jarg1)
    {
        _ToolTipService_HorizontalOffsetProperty_set(jarg1);
    }

    public delegate IntPtr ToolTipService_HorizontalOffsetProperty_getDelegate();
    public static ToolTipService_HorizontalOffsetProperty_getDelegate _ToolTipService_HorizontalOffsetProperty_get;
    public static IntPtr ToolTipService_HorizontalOffsetProperty_get()
    {
        IntPtr ret = _ToolTipService_HorizontalOffsetProperty_get();

        return ret;
    }

    public delegate void ToolTipService_InitialShowDelayProperty_setDelegate(HandleRef jarg1);
    public static ToolTipService_InitialShowDelayProperty_setDelegate _ToolTipService_InitialShowDelayProperty_set;
    public static void ToolTipService_InitialShowDelayProperty_set(HandleRef jarg1)
    {
        _ToolTipService_InitialShowDelayProperty_set(jarg1);
    }

    public delegate IntPtr ToolTipService_InitialShowDelayProperty_getDelegate();
    public static ToolTipService_InitialShowDelayProperty_getDelegate _ToolTipService_InitialShowDelayProperty_get;
    public static IntPtr ToolTipService_InitialShowDelayProperty_get()
    {
        IntPtr ret = _ToolTipService_InitialShowDelayProperty_get();

        return ret;
    }

    public delegate void ToolTipService_IsEnabledProperty_setDelegate(HandleRef jarg1);
    public static ToolTipService_IsEnabledProperty_setDelegate _ToolTipService_IsEnabledProperty_set;
    public static void ToolTipService_IsEnabledProperty_set(HandleRef jarg1)
    {
        _ToolTipService_IsEnabledProperty_set(jarg1);
    }

    public delegate IntPtr ToolTipService_IsEnabledProperty_getDelegate();
    public static ToolTipService_IsEnabledProperty_getDelegate _ToolTipService_IsEnabledProperty_get;
    public static IntPtr ToolTipService_IsEnabledProperty_get()
    {
        IntPtr ret = _ToolTipService_IsEnabledProperty_get();

        return ret;
    }

    public delegate void ToolTipService_IsOpenProperty_setDelegate(HandleRef jarg1);
    public static ToolTipService_IsOpenProperty_setDelegate _ToolTipService_IsOpenProperty_set;
    public static void ToolTipService_IsOpenProperty_set(HandleRef jarg1)
    {
        _ToolTipService_IsOpenProperty_set(jarg1);
    }

    public delegate IntPtr ToolTipService_IsOpenProperty_getDelegate();
    public static ToolTipService_IsOpenProperty_getDelegate _ToolTipService_IsOpenProperty_get;
    public static IntPtr ToolTipService_IsOpenProperty_get()
    {
        IntPtr ret = _ToolTipService_IsOpenProperty_get();

        return ret;
    }

    public delegate void ToolTipService_PlacementProperty_setDelegate(HandleRef jarg1);
    public static ToolTipService_PlacementProperty_setDelegate _ToolTipService_PlacementProperty_set;
    public static void ToolTipService_PlacementProperty_set(HandleRef jarg1)
    {
        _ToolTipService_PlacementProperty_set(jarg1);
    }

    public delegate IntPtr ToolTipService_PlacementProperty_getDelegate();
    public static ToolTipService_PlacementProperty_getDelegate _ToolTipService_PlacementProperty_get;
    public static IntPtr ToolTipService_PlacementProperty_get()
    {
        IntPtr ret = _ToolTipService_PlacementProperty_get();

        return ret;
    }

    public delegate void ToolTipService_PlacementRectangleProperty_setDelegate(HandleRef jarg1);
    public static ToolTipService_PlacementRectangleProperty_setDelegate _ToolTipService_PlacementRectangleProperty_set;
    public static void ToolTipService_PlacementRectangleProperty_set(HandleRef jarg1)
    {
        _ToolTipService_PlacementRectangleProperty_set(jarg1);
    }

    public delegate IntPtr ToolTipService_PlacementRectangleProperty_getDelegate();
    public static ToolTipService_PlacementRectangleProperty_getDelegate _ToolTipService_PlacementRectangleProperty_get;
    public static IntPtr ToolTipService_PlacementRectangleProperty_get()
    {
        IntPtr ret = _ToolTipService_PlacementRectangleProperty_get();

        return ret;
    }

    public delegate void ToolTipService_PlacementTargetProperty_setDelegate(HandleRef jarg1);
    public static ToolTipService_PlacementTargetProperty_setDelegate _ToolTipService_PlacementTargetProperty_set;
    public static void ToolTipService_PlacementTargetProperty_set(HandleRef jarg1)
    {
        _ToolTipService_PlacementTargetProperty_set(jarg1);
    }

    public delegate IntPtr ToolTipService_PlacementTargetProperty_getDelegate();
    public static ToolTipService_PlacementTargetProperty_getDelegate _ToolTipService_PlacementTargetProperty_get;
    public static IntPtr ToolTipService_PlacementTargetProperty_get()
    {
        IntPtr ret = _ToolTipService_PlacementTargetProperty_get();

        return ret;
    }

    public delegate void ToolTipService_ShowDurationProperty_setDelegate(HandleRef jarg1);
    public static ToolTipService_ShowDurationProperty_setDelegate _ToolTipService_ShowDurationProperty_set;
    public static void ToolTipService_ShowDurationProperty_set(HandleRef jarg1)
    {
        _ToolTipService_ShowDurationProperty_set(jarg1);
    }

    public delegate IntPtr ToolTipService_ShowDurationProperty_getDelegate();
    public static ToolTipService_ShowDurationProperty_getDelegate _ToolTipService_ShowDurationProperty_get;
    public static IntPtr ToolTipService_ShowDurationProperty_get()
    {
        IntPtr ret = _ToolTipService_ShowDurationProperty_get();

        return ret;
    }

    public delegate void ToolTipService_ShowOnDisabledProperty_setDelegate(HandleRef jarg1);
    public static ToolTipService_ShowOnDisabledProperty_setDelegate _ToolTipService_ShowOnDisabledProperty_set;
    public static void ToolTipService_ShowOnDisabledProperty_set(HandleRef jarg1)
    {
        _ToolTipService_ShowOnDisabledProperty_set(jarg1);
    }

    public delegate IntPtr ToolTipService_ShowOnDisabledProperty_getDelegate();
    public static ToolTipService_ShowOnDisabledProperty_getDelegate _ToolTipService_ShowOnDisabledProperty_get;
    public static IntPtr ToolTipService_ShowOnDisabledProperty_get()
    {
        IntPtr ret = _ToolTipService_ShowOnDisabledProperty_get();

        return ret;
    }

    public delegate void ToolTipService_ToolTipProperty_setDelegate(HandleRef jarg1);
    public static ToolTipService_ToolTipProperty_setDelegate _ToolTipService_ToolTipProperty_set;
    public static void ToolTipService_ToolTipProperty_set(HandleRef jarg1)
    {
        _ToolTipService_ToolTipProperty_set(jarg1);
    }

    public delegate IntPtr ToolTipService_ToolTipProperty_getDelegate();
    public static ToolTipService_ToolTipProperty_getDelegate _ToolTipService_ToolTipProperty_get;
    public static IntPtr ToolTipService_ToolTipProperty_get()
    {
        IntPtr ret = _ToolTipService_ToolTipProperty_get();

        return ret;
    }

    public delegate void ToolTipService_VerticalOffsetProperty_setDelegate(HandleRef jarg1);
    public static ToolTipService_VerticalOffsetProperty_setDelegate _ToolTipService_VerticalOffsetProperty_set;
    public static void ToolTipService_VerticalOffsetProperty_set(HandleRef jarg1)
    {
        _ToolTipService_VerticalOffsetProperty_set(jarg1);
    }

    public delegate IntPtr ToolTipService_VerticalOffsetProperty_getDelegate();
    public static ToolTipService_VerticalOffsetProperty_getDelegate _ToolTipService_VerticalOffsetProperty_get;
    public static IntPtr ToolTipService_VerticalOffsetProperty_get()
    {
        IntPtr ret = _ToolTipService_VerticalOffsetProperty_get();

        return ret;
    }

    public delegate void Track_IsDirectionReversedProperty_setDelegate(HandleRef jarg1);
    public static Track_IsDirectionReversedProperty_setDelegate _Track_IsDirectionReversedProperty_set;
    public static void Track_IsDirectionReversedProperty_set(HandleRef jarg1)
    {
        _Track_IsDirectionReversedProperty_set(jarg1);
    }

    public delegate IntPtr Track_IsDirectionReversedProperty_getDelegate();
    public static Track_IsDirectionReversedProperty_getDelegate _Track_IsDirectionReversedProperty_get;
    public static IntPtr Track_IsDirectionReversedProperty_get()
    {
        IntPtr ret = _Track_IsDirectionReversedProperty_get();

        return ret;
    }

    public delegate void Track_MaximumProperty_setDelegate(HandleRef jarg1);
    public static Track_MaximumProperty_setDelegate _Track_MaximumProperty_set;
    public static void Track_MaximumProperty_set(HandleRef jarg1)
    {
        _Track_MaximumProperty_set(jarg1);
    }

    public delegate IntPtr Track_MaximumProperty_getDelegate();
    public static Track_MaximumProperty_getDelegate _Track_MaximumProperty_get;
    public static IntPtr Track_MaximumProperty_get()
    {
        IntPtr ret = _Track_MaximumProperty_get();

        return ret;
    }

    public delegate void Track_MinimumProperty_setDelegate(HandleRef jarg1);
    public static Track_MinimumProperty_setDelegate _Track_MinimumProperty_set;
    public static void Track_MinimumProperty_set(HandleRef jarg1)
    {
        _Track_MinimumProperty_set(jarg1);
    }

    public delegate IntPtr Track_MinimumProperty_getDelegate();
    public static Track_MinimumProperty_getDelegate _Track_MinimumProperty_get;
    public static IntPtr Track_MinimumProperty_get()
    {
        IntPtr ret = _Track_MinimumProperty_get();

        return ret;
    }

    public delegate void Track_OrientationProperty_setDelegate(HandleRef jarg1);
    public static Track_OrientationProperty_setDelegate _Track_OrientationProperty_set;
    public static void Track_OrientationProperty_set(HandleRef jarg1)
    {
        _Track_OrientationProperty_set(jarg1);
    }

    public delegate IntPtr Track_OrientationProperty_getDelegate();
    public static Track_OrientationProperty_getDelegate _Track_OrientationProperty_get;
    public static IntPtr Track_OrientationProperty_get()
    {
        IntPtr ret = _Track_OrientationProperty_get();

        return ret;
    }

    public delegate void Track_ValueProperty_setDelegate(HandleRef jarg1);
    public static Track_ValueProperty_setDelegate _Track_ValueProperty_set;
    public static void Track_ValueProperty_set(HandleRef jarg1)
    {
        _Track_ValueProperty_set(jarg1);
    }

    public delegate IntPtr Track_ValueProperty_getDelegate();
    public static Track_ValueProperty_getDelegate _Track_ValueProperty_get;
    public static IntPtr Track_ValueProperty_get()
    {
        IntPtr ret = _Track_ValueProperty_get();

        return ret;
    }

    public delegate void Track_ViewportSizeProperty_setDelegate(HandleRef jarg1);
    public static Track_ViewportSizeProperty_setDelegate _Track_ViewportSizeProperty_set;
    public static void Track_ViewportSizeProperty_set(HandleRef jarg1)
    {
        _Track_ViewportSizeProperty_set(jarg1);
    }

    public delegate IntPtr Track_ViewportSizeProperty_getDelegate();
    public static Track_ViewportSizeProperty_getDelegate _Track_ViewportSizeProperty_get;
    public static IntPtr Track_ViewportSizeProperty_get()
    {
        IntPtr ret = _Track_ViewportSizeProperty_get();

        return ret;
    }

    public delegate void TransformGroup_ChildrenProperty_setDelegate(HandleRef jarg1);
    public static TransformGroup_ChildrenProperty_setDelegate _TransformGroup_ChildrenProperty_set;
    public static void TransformGroup_ChildrenProperty_set(HandleRef jarg1)
    {
        _TransformGroup_ChildrenProperty_set(jarg1);
    }

    public delegate IntPtr TransformGroup_ChildrenProperty_getDelegate();
    public static TransformGroup_ChildrenProperty_getDelegate _TransformGroup_ChildrenProperty_get;
    public static IntPtr TransformGroup_ChildrenProperty_get()
    {
        IntPtr ret = _TransformGroup_ChildrenProperty_get();

        return ret;
    }

    public delegate void TranslateTransform_XProperty_setDelegate(HandleRef jarg1);
    public static TranslateTransform_XProperty_setDelegate _TranslateTransform_XProperty_set;
    public static void TranslateTransform_XProperty_set(HandleRef jarg1)
    {
        _TranslateTransform_XProperty_set(jarg1);
    }

    public delegate IntPtr TranslateTransform_XProperty_getDelegate();
    public static TranslateTransform_XProperty_getDelegate _TranslateTransform_XProperty_get;
    public static IntPtr TranslateTransform_XProperty_get()
    {
        IntPtr ret = _TranslateTransform_XProperty_get();

        return ret;
    }

    public delegate void TranslateTransform_YProperty_setDelegate(HandleRef jarg1);
    public static TranslateTransform_YProperty_setDelegate _TranslateTransform_YProperty_set;
    public static void TranslateTransform_YProperty_set(HandleRef jarg1)
    {
        _TranslateTransform_YProperty_set(jarg1);
    }

    public delegate IntPtr TranslateTransform_YProperty_getDelegate();
    public static TranslateTransform_YProperty_getDelegate _TranslateTransform_YProperty_get;
    public static IntPtr TranslateTransform_YProperty_get()
    {
        IntPtr ret = _TranslateTransform_YProperty_get();

        return ret;
    }

    public delegate void TreeView_SelectedItemProperty_setDelegate(HandleRef jarg1);
    public static TreeView_SelectedItemProperty_setDelegate _TreeView_SelectedItemProperty_set;
    public static void TreeView_SelectedItemProperty_set(HandleRef jarg1)
    {
        _TreeView_SelectedItemProperty_set(jarg1);
    }

    public delegate IntPtr TreeView_SelectedItemProperty_getDelegate();
    public static TreeView_SelectedItemProperty_getDelegate _TreeView_SelectedItemProperty_get;
    public static IntPtr TreeView_SelectedItemProperty_get()
    {
        IntPtr ret = _TreeView_SelectedItemProperty_get();

        return ret;
    }

    public delegate void TreeView_SelectedValuePathProperty_setDelegate(HandleRef jarg1);
    public static TreeView_SelectedValuePathProperty_setDelegate _TreeView_SelectedValuePathProperty_set;
    public static void TreeView_SelectedValuePathProperty_set(HandleRef jarg1)
    {
        _TreeView_SelectedValuePathProperty_set(jarg1);
    }

    public delegate IntPtr TreeView_SelectedValuePathProperty_getDelegate();
    public static TreeView_SelectedValuePathProperty_getDelegate _TreeView_SelectedValuePathProperty_get;
    public static IntPtr TreeView_SelectedValuePathProperty_get()
    {
        IntPtr ret = _TreeView_SelectedValuePathProperty_get();

        return ret;
    }

    public delegate void TreeView_SelectedValueProperty_setDelegate(HandleRef jarg1);
    public static TreeView_SelectedValueProperty_setDelegate _TreeView_SelectedValueProperty_set;
    public static void TreeView_SelectedValueProperty_set(HandleRef jarg1)
    {
        _TreeView_SelectedValueProperty_set(jarg1);
    }

    public delegate IntPtr TreeView_SelectedValueProperty_getDelegate();
    public static TreeView_SelectedValueProperty_getDelegate _TreeView_SelectedValueProperty_get;
    public static IntPtr TreeView_SelectedValueProperty_get()
    {
        IntPtr ret = _TreeView_SelectedValueProperty_get();

        return ret;
    }

    public delegate void TreeViewItem_IsExpandedProperty_setDelegate(HandleRef jarg1);
    public static TreeViewItem_IsExpandedProperty_setDelegate _TreeViewItem_IsExpandedProperty_set;
    public static void TreeViewItem_IsExpandedProperty_set(HandleRef jarg1)
    {
        _TreeViewItem_IsExpandedProperty_set(jarg1);
    }

    public delegate IntPtr TreeViewItem_IsExpandedProperty_getDelegate();
    public static TreeViewItem_IsExpandedProperty_getDelegate _TreeViewItem_IsExpandedProperty_get;
    public static IntPtr TreeViewItem_IsExpandedProperty_get()
    {
        IntPtr ret = _TreeViewItem_IsExpandedProperty_get();

        return ret;
    }

    public delegate void TreeViewItem_IsSelectedProperty_setDelegate(HandleRef jarg1);
    public static TreeViewItem_IsSelectedProperty_setDelegate _TreeViewItem_IsSelectedProperty_set;
    public static void TreeViewItem_IsSelectedProperty_set(HandleRef jarg1)
    {
        _TreeViewItem_IsSelectedProperty_set(jarg1);
    }

    public delegate IntPtr TreeViewItem_IsSelectedProperty_getDelegate();
    public static TreeViewItem_IsSelectedProperty_getDelegate _TreeViewItem_IsSelectedProperty_get;
    public static IntPtr TreeViewItem_IsSelectedProperty_get()
    {
        IntPtr ret = _TreeViewItem_IsSelectedProperty_get();

        return ret;
    }

    public delegate void TreeViewItem_IsSelectionActiveProperty_setDelegate(HandleRef jarg1);
    public static TreeViewItem_IsSelectionActiveProperty_setDelegate _TreeViewItem_IsSelectionActiveProperty_set;
    public static void TreeViewItem_IsSelectionActiveProperty_set(HandleRef jarg1)
    {
        _TreeViewItem_IsSelectionActiveProperty_set(jarg1);
    }

    public delegate IntPtr TreeViewItem_IsSelectionActiveProperty_getDelegate();
    public static TreeViewItem_IsSelectionActiveProperty_getDelegate _TreeViewItem_IsSelectionActiveProperty_get;
    public static IntPtr TreeViewItem_IsSelectionActiveProperty_get()
    {
        IntPtr ret = _TreeViewItem_IsSelectionActiveProperty_get();

        return ret;
    }

    public delegate void Viewbox_StretchDirectionProperty_setDelegate(HandleRef jarg1);
    public static Viewbox_StretchDirectionProperty_setDelegate _Viewbox_StretchDirectionProperty_set;
    public static void Viewbox_StretchDirectionProperty_set(HandleRef jarg1)
    {
        _Viewbox_StretchDirectionProperty_set(jarg1);
    }

    public delegate IntPtr Viewbox_StretchDirectionProperty_getDelegate();
    public static Viewbox_StretchDirectionProperty_getDelegate _Viewbox_StretchDirectionProperty_get;
    public static IntPtr Viewbox_StretchDirectionProperty_get()
    {
        IntPtr ret = _Viewbox_StretchDirectionProperty_get();

        return ret;
    }

    public delegate void Viewbox_StretchProperty_setDelegate(HandleRef jarg1);
    public static Viewbox_StretchProperty_setDelegate _Viewbox_StretchProperty_set;
    public static void Viewbox_StretchProperty_set(HandleRef jarg1)
    {
        _Viewbox_StretchProperty_set(jarg1);
    }

    public delegate IntPtr Viewbox_StretchProperty_getDelegate();
    public static Viewbox_StretchProperty_getDelegate _Viewbox_StretchProperty_get;
    public static IntPtr Viewbox_StretchProperty_get()
    {
        IntPtr ret = _Viewbox_StretchProperty_get();

        return ret;
    }

    public delegate void VisualBrush_AutoLayoutContentProperty_setDelegate(HandleRef jarg1);
    public static VisualBrush_AutoLayoutContentProperty_setDelegate _VisualBrush_AutoLayoutContentProperty_set;
    public static void VisualBrush_AutoLayoutContentProperty_set(HandleRef jarg1)
    {
        _VisualBrush_AutoLayoutContentProperty_set(jarg1);
    }

    public delegate IntPtr VisualBrush_AutoLayoutContentProperty_getDelegate();
    public static VisualBrush_AutoLayoutContentProperty_getDelegate _VisualBrush_AutoLayoutContentProperty_get;
    public static IntPtr VisualBrush_AutoLayoutContentProperty_get()
    {
        IntPtr ret = _VisualBrush_AutoLayoutContentProperty_get();

        return ret;
    }

    public delegate void VisualBrush_VisualProperty_setDelegate(HandleRef jarg1);
    public static VisualBrush_VisualProperty_setDelegate _VisualBrush_VisualProperty_set;
    public static void VisualBrush_VisualProperty_set(HandleRef jarg1)
    {
        _VisualBrush_VisualProperty_set(jarg1);
    }

    public delegate IntPtr VisualBrush_VisualProperty_getDelegate();
    public static VisualBrush_VisualProperty_getDelegate _VisualBrush_VisualProperty_get;
    public static IntPtr VisualBrush_VisualProperty_get()
    {
        IntPtr ret = _VisualBrush_VisualProperty_get();

        return ret;
    }

    public delegate void Window_AllowsTransparencyProperty_setDelegate(HandleRef jarg1);
    public static Window_AllowsTransparencyProperty_setDelegate _Window_AllowsTransparencyProperty_set;
    public static void Window_AllowsTransparencyProperty_set(HandleRef jarg1)
    {
        _Window_AllowsTransparencyProperty_set(jarg1);
    }

    public delegate IntPtr Window_AllowsTransparencyProperty_getDelegate();
    public static Window_AllowsTransparencyProperty_getDelegate _Window_AllowsTransparencyProperty_get;
    public static IntPtr Window_AllowsTransparencyProperty_get()
    {
        IntPtr ret = _Window_AllowsTransparencyProperty_get();

        return ret;
    }

    public delegate void Window_FullscreenProperty_setDelegate(HandleRef jarg1);
    public static Window_FullscreenProperty_setDelegate _Window_FullscreenProperty_set;
    public static void Window_FullscreenProperty_set(HandleRef jarg1)
    {
        _Window_FullscreenProperty_set(jarg1);
    }

    public delegate IntPtr Window_FullscreenProperty_getDelegate();
    public static Window_FullscreenProperty_getDelegate _Window_FullscreenProperty_get;
    public static IntPtr Window_FullscreenProperty_get()
    {
        IntPtr ret = _Window_FullscreenProperty_get();

        return ret;
    }

    public delegate void Window_IconProperty_setDelegate(HandleRef jarg1);
    public static Window_IconProperty_setDelegate _Window_IconProperty_set;
    public static void Window_IconProperty_set(HandleRef jarg1)
    {
        _Window_IconProperty_set(jarg1);
    }

    public delegate IntPtr Window_IconProperty_getDelegate();
    public static Window_IconProperty_getDelegate _Window_IconProperty_get;
    public static IntPtr Window_IconProperty_get()
    {
        IntPtr ret = _Window_IconProperty_get();

        return ret;
    }

    public delegate void Window_IsActiveProperty_setDelegate(HandleRef jarg1);
    public static Window_IsActiveProperty_setDelegate _Window_IsActiveProperty_set;
    public static void Window_IsActiveProperty_set(HandleRef jarg1)
    {
        _Window_IsActiveProperty_set(jarg1);
    }

    public delegate IntPtr Window_IsActiveProperty_getDelegate();
    public static Window_IsActiveProperty_getDelegate _Window_IsActiveProperty_get;
    public static IntPtr Window_IsActiveProperty_get()
    {
        IntPtr ret = _Window_IsActiveProperty_get();

        return ret;
    }

    public delegate void Window_LeftProperty_setDelegate(HandleRef jarg1);
    public static Window_LeftProperty_setDelegate _Window_LeftProperty_set;
    public static void Window_LeftProperty_set(HandleRef jarg1)
    {
        _Window_LeftProperty_set(jarg1);
    }

    public delegate IntPtr Window_LeftProperty_getDelegate();
    public static Window_LeftProperty_getDelegate _Window_LeftProperty_get;
    public static IntPtr Window_LeftProperty_get()
    {
        IntPtr ret = _Window_LeftProperty_get();

        return ret;
    }

    public delegate void Window_ResizeModeProperty_setDelegate(HandleRef jarg1);
    public static Window_ResizeModeProperty_setDelegate _Window_ResizeModeProperty_set;
    public static void Window_ResizeModeProperty_set(HandleRef jarg1)
    {
        _Window_ResizeModeProperty_set(jarg1);
    }

    public delegate IntPtr Window_ResizeModeProperty_getDelegate();
    public static Window_ResizeModeProperty_getDelegate _Window_ResizeModeProperty_get;
    public static IntPtr Window_ResizeModeProperty_get()
    {
        IntPtr ret = _Window_ResizeModeProperty_get();

        return ret;
    }

    public delegate void Window_ShowInTaskbarProperty_setDelegate(HandleRef jarg1);
    public static Window_ShowInTaskbarProperty_setDelegate _Window_ShowInTaskbarProperty_set;
    public static void Window_ShowInTaskbarProperty_set(HandleRef jarg1)
    {
        _Window_ShowInTaskbarProperty_set(jarg1);
    }

    public delegate IntPtr Window_ShowInTaskbarProperty_getDelegate();
    public static Window_ShowInTaskbarProperty_getDelegate _Window_ShowInTaskbarProperty_get;
    public static IntPtr Window_ShowInTaskbarProperty_get()
    {
        IntPtr ret = _Window_ShowInTaskbarProperty_get();

        return ret;
    }

    public delegate void Window_SizeToContentProperty_setDelegate(HandleRef jarg1);
    public static Window_SizeToContentProperty_setDelegate _Window_SizeToContentProperty_set;
    public static void Window_SizeToContentProperty_set(HandleRef jarg1)
    {
        _Window_SizeToContentProperty_set(jarg1);
    }

    public delegate IntPtr Window_SizeToContentProperty_getDelegate();
    public static Window_SizeToContentProperty_getDelegate _Window_SizeToContentProperty_get;
    public static IntPtr Window_SizeToContentProperty_get()
    {
        IntPtr ret = _Window_SizeToContentProperty_get();

        return ret;
    }

    public delegate void Window_TitleProperty_setDelegate(HandleRef jarg1);
    public static Window_TitleProperty_setDelegate _Window_TitleProperty_set;
    public static void Window_TitleProperty_set(HandleRef jarg1)
    {
        _Window_TitleProperty_set(jarg1);
    }

    public delegate IntPtr Window_TitleProperty_getDelegate();
    public static Window_TitleProperty_getDelegate _Window_TitleProperty_get;
    public static IntPtr Window_TitleProperty_get()
    {
        IntPtr ret = _Window_TitleProperty_get();

        return ret;
    }

    public delegate void Window_TopmostProperty_setDelegate(HandleRef jarg1);
    public static Window_TopmostProperty_setDelegate _Window_TopmostProperty_set;
    public static void Window_TopmostProperty_set(HandleRef jarg1)
    {
        _Window_TopmostProperty_set(jarg1);
    }

    public delegate IntPtr Window_TopmostProperty_getDelegate();
    public static Window_TopmostProperty_getDelegate _Window_TopmostProperty_get;
    public static IntPtr Window_TopmostProperty_get()
    {
        IntPtr ret = _Window_TopmostProperty_get();

        return ret;
    }

    public delegate void Window_TopProperty_setDelegate(HandleRef jarg1);
    public static Window_TopProperty_setDelegate _Window_TopProperty_set;
    public static void Window_TopProperty_set(HandleRef jarg1)
    {
        _Window_TopProperty_set(jarg1);
    }

    public delegate IntPtr Window_TopProperty_getDelegate();
    public static Window_TopProperty_getDelegate _Window_TopProperty_get;
    public static IntPtr Window_TopProperty_get()
    {
        IntPtr ret = _Window_TopProperty_get();

        return ret;
    }

    public delegate void Window_WindowStateProperty_setDelegate(HandleRef jarg1);
    public static Window_WindowStateProperty_setDelegate _Window_WindowStateProperty_set;
    public static void Window_WindowStateProperty_set(HandleRef jarg1)
    {
        _Window_WindowStateProperty_set(jarg1);
    }

    public delegate IntPtr Window_WindowStateProperty_getDelegate();
    public static Window_WindowStateProperty_getDelegate _Window_WindowStateProperty_get;
    public static IntPtr Window_WindowStateProperty_get()
    {
        IntPtr ret = _Window_WindowStateProperty_get();

        return ret;
    }

    public delegate void Window_WindowStyleProperty_setDelegate(HandleRef jarg1);
    public static Window_WindowStyleProperty_setDelegate _Window_WindowStyleProperty_set;
    public static void Window_WindowStyleProperty_set(HandleRef jarg1)
    {
        _Window_WindowStyleProperty_set(jarg1);
    }

    public delegate IntPtr Window_WindowStyleProperty_getDelegate();
    public static Window_WindowStyleProperty_getDelegate _Window_WindowStyleProperty_get;
    public static IntPtr Window_WindowStyleProperty_get()
    {
        IntPtr ret = _Window_WindowStyleProperty_get();

        return ret;
    }

    public delegate void Window_WindowStartupLocationProperty_setDelegate(HandleRef jarg1);
    public static Window_WindowStartupLocationProperty_setDelegate _Window_WindowStartupLocationProperty_set;
    public static void Window_WindowStartupLocationProperty_set(HandleRef jarg1)
    {
        _Window_WindowStartupLocationProperty_set(jarg1);
    }

    public delegate IntPtr Window_WindowStartupLocationProperty_getDelegate();
    public static Window_WindowStartupLocationProperty_getDelegate _Window_WindowStartupLocationProperty_get;
    public static IntPtr Window_WindowStartupLocationProperty_get()
    {
        IntPtr ret = _Window_WindowStartupLocationProperty_get();

        return ret;
    }

    public delegate void WrapPanel_ItemWidthProperty_setDelegate(HandleRef jarg1);
    public static WrapPanel_ItemWidthProperty_setDelegate _WrapPanel_ItemWidthProperty_set;
    public static void WrapPanel_ItemWidthProperty_set(HandleRef jarg1)
    {
        _WrapPanel_ItemWidthProperty_set(jarg1);
    }

    public delegate IntPtr WrapPanel_ItemWidthProperty_getDelegate();
    public static WrapPanel_ItemWidthProperty_getDelegate _WrapPanel_ItemWidthProperty_get;
    public static IntPtr WrapPanel_ItemWidthProperty_get()
    {
        IntPtr ret = _WrapPanel_ItemWidthProperty_get();

        return ret;
    }

    public delegate void WrapPanel_ItemHeightProperty_setDelegate(HandleRef jarg1);
    public static WrapPanel_ItemHeightProperty_setDelegate _WrapPanel_ItemHeightProperty_set;
    public static void WrapPanel_ItemHeightProperty_set(HandleRef jarg1)
    {
        _WrapPanel_ItemHeightProperty_set(jarg1);
    }

    public delegate IntPtr WrapPanel_ItemHeightProperty_getDelegate();
    public static WrapPanel_ItemHeightProperty_getDelegate _WrapPanel_ItemHeightProperty_get;
    public static IntPtr WrapPanel_ItemHeightProperty_get()
    {
        IntPtr ret = _WrapPanel_ItemHeightProperty_get();

        return ret;
    }

    public delegate void WrapPanel_OrientationProperty_setDelegate(HandleRef jarg1);
    public static WrapPanel_OrientationProperty_setDelegate _WrapPanel_OrientationProperty_set;
    public static void WrapPanel_OrientationProperty_set(HandleRef jarg1)
    {
        _WrapPanel_OrientationProperty_set(jarg1);
    }

    public delegate IntPtr WrapPanel_OrientationProperty_getDelegate();
    public static WrapPanel_OrientationProperty_getDelegate _WrapPanel_OrientationProperty_get;
    public static IntPtr WrapPanel_OrientationProperty_get()
    {
        IntPtr ret = _WrapPanel_OrientationProperty_get();

        return ret;
    }

    public delegate void AnimationTimeline_IsAdditiveProperty_setDelegate(HandleRef jarg1);
    public static AnimationTimeline_IsAdditiveProperty_setDelegate _AnimationTimeline_IsAdditiveProperty_set;
    public static void AnimationTimeline_IsAdditiveProperty_set(HandleRef jarg1)
    {
        _AnimationTimeline_IsAdditiveProperty_set(jarg1);
    }

    public delegate IntPtr AnimationTimeline_IsAdditiveProperty_getDelegate();
    public static AnimationTimeline_IsAdditiveProperty_getDelegate _AnimationTimeline_IsAdditiveProperty_get;
    public static IntPtr AnimationTimeline_IsAdditiveProperty_get()
    {
        IntPtr ret = _AnimationTimeline_IsAdditiveProperty_get();

        return ret;
    }

    public delegate void AnimationTimeline_IsCumulativeProperty_setDelegate(HandleRef jarg1);
    public static AnimationTimeline_IsCumulativeProperty_setDelegate _AnimationTimeline_IsCumulativeProperty_set;
    public static void AnimationTimeline_IsCumulativeProperty_set(HandleRef jarg1)
    {
        _AnimationTimeline_IsCumulativeProperty_set(jarg1);
    }

    public delegate IntPtr AnimationTimeline_IsCumulativeProperty_getDelegate();
    public static AnimationTimeline_IsCumulativeProperty_getDelegate _AnimationTimeline_IsCumulativeProperty_get;
    public static IntPtr AnimationTimeline_IsCumulativeProperty_get()
    {
        IntPtr ret = _AnimationTimeline_IsCumulativeProperty_get();

        return ret;
    }

    public delegate void EasingFunctionBase_EasingModeProperty_setDelegate(HandleRef jarg1);
    public static EasingFunctionBase_EasingModeProperty_setDelegate _EasingFunctionBase_EasingModeProperty_set;
    public static void EasingFunctionBase_EasingModeProperty_set(HandleRef jarg1)
    {
        _EasingFunctionBase_EasingModeProperty_set(jarg1);
    }

    public delegate IntPtr EasingFunctionBase_EasingModeProperty_getDelegate();
    public static EasingFunctionBase_EasingModeProperty_getDelegate _EasingFunctionBase_EasingModeProperty_get;
    public static IntPtr EasingFunctionBase_EasingModeProperty_get()
    {
        IntPtr ret = _EasingFunctionBase_EasingModeProperty_get();

        return ret;
    }

    public delegate void BackEase_AmplitudeProperty_setDelegate(HandleRef jarg1);
    public static BackEase_AmplitudeProperty_setDelegate _BackEase_AmplitudeProperty_set;
    public static void BackEase_AmplitudeProperty_set(HandleRef jarg1)
    {
        _BackEase_AmplitudeProperty_set(jarg1);
    }

    public delegate IntPtr BackEase_AmplitudeProperty_getDelegate();
    public static BackEase_AmplitudeProperty_getDelegate _BackEase_AmplitudeProperty_get;
    public static IntPtr BackEase_AmplitudeProperty_get()
    {
        IntPtr ret = _BackEase_AmplitudeProperty_get();

        return ret;
    }

    public delegate void BaseAnimation_EasingFunctionProperty_setDelegate(HandleRef jarg1);
    public static BaseAnimation_EasingFunctionProperty_setDelegate _BaseAnimation_EasingFunctionProperty_set;
    public static void BaseAnimation_EasingFunctionProperty_set(HandleRef jarg1)
    {
        _BaseAnimation_EasingFunctionProperty_set(jarg1);
    }

    public delegate IntPtr BaseAnimation_EasingFunctionProperty_getDelegate();
    public static BaseAnimation_EasingFunctionProperty_getDelegate _BaseAnimation_EasingFunctionProperty_get;
    public static IntPtr BaseAnimation_EasingFunctionProperty_get()
    {
        IntPtr ret = _BaseAnimation_EasingFunctionProperty_get();

        return ret;
    }

    public delegate void BeginStoryboard_StoryboardProperty_setDelegate(HandleRef jarg1);
    public static BeginStoryboard_StoryboardProperty_setDelegate _BeginStoryboard_StoryboardProperty_set;
    public static void BeginStoryboard_StoryboardProperty_set(HandleRef jarg1)
    {
        _BeginStoryboard_StoryboardProperty_set(jarg1);
    }

    public delegate IntPtr BeginStoryboard_StoryboardProperty_getDelegate();
    public static BeginStoryboard_StoryboardProperty_getDelegate _BeginStoryboard_StoryboardProperty_get;
    public static IntPtr BeginStoryboard_StoryboardProperty_get()
    {
        IntPtr ret = _BeginStoryboard_StoryboardProperty_get();

        return ret;
    }

    public delegate void BounceEase_BouncesProperty_setDelegate(HandleRef jarg1);
    public static BounceEase_BouncesProperty_setDelegate _BounceEase_BouncesProperty_set;
    public static void BounceEase_BouncesProperty_set(HandleRef jarg1)
    {
        _BounceEase_BouncesProperty_set(jarg1);
    }

    public delegate IntPtr BounceEase_BouncesProperty_getDelegate();
    public static BounceEase_BouncesProperty_getDelegate _BounceEase_BouncesProperty_get;
    public static IntPtr BounceEase_BouncesProperty_get()
    {
        IntPtr ret = _BounceEase_BouncesProperty_get();

        return ret;
    }

    public delegate void BounceEase_BouncinessProperty_setDelegate(HandleRef jarg1);
    public static BounceEase_BouncinessProperty_setDelegate _BounceEase_BouncinessProperty_set;
    public static void BounceEase_BouncinessProperty_set(HandleRef jarg1)
    {
        _BounceEase_BouncinessProperty_set(jarg1);
    }

    public delegate IntPtr BounceEase_BouncinessProperty_getDelegate();
    public static BounceEase_BouncinessProperty_getDelegate _BounceEase_BouncinessProperty_get;
    public static IntPtr BounceEase_BouncinessProperty_get()
    {
        IntPtr ret = _BounceEase_BouncinessProperty_get();

        return ret;
    }

    public delegate void ElasticEase_OscillationsProperty_setDelegate(HandleRef jarg1);
    public static ElasticEase_OscillationsProperty_setDelegate _ElasticEase_OscillationsProperty_set;
    public static void ElasticEase_OscillationsProperty_set(HandleRef jarg1)
    {
        _ElasticEase_OscillationsProperty_set(jarg1);
    }

    public delegate IntPtr ElasticEase_OscillationsProperty_getDelegate();
    public static ElasticEase_OscillationsProperty_getDelegate _ElasticEase_OscillationsProperty_get;
    public static IntPtr ElasticEase_OscillationsProperty_get()
    {
        IntPtr ret = _ElasticEase_OscillationsProperty_get();

        return ret;
    }

    public delegate void ElasticEase_SpringinessProperty_setDelegate(HandleRef jarg1);
    public static ElasticEase_SpringinessProperty_setDelegate _ElasticEase_SpringinessProperty_set;
    public static void ElasticEase_SpringinessProperty_set(HandleRef jarg1)
    {
        _ElasticEase_SpringinessProperty_set(jarg1);
    }

    public delegate IntPtr ElasticEase_SpringinessProperty_getDelegate();
    public static ElasticEase_SpringinessProperty_getDelegate _ElasticEase_SpringinessProperty_get;
    public static IntPtr ElasticEase_SpringinessProperty_get()
    {
        IntPtr ret = _ElasticEase_SpringinessProperty_get();

        return ret;
    }

    public delegate void ExponentialEase_ExponentProperty_setDelegate(HandleRef jarg1);
    public static ExponentialEase_ExponentProperty_setDelegate _ExponentialEase_ExponentProperty_set;
    public static void ExponentialEase_ExponentProperty_set(HandleRef jarg1)
    {
        _ExponentialEase_ExponentProperty_set(jarg1);
    }

    public delegate IntPtr ExponentialEase_ExponentProperty_getDelegate();
    public static ExponentialEase_ExponentProperty_getDelegate _ExponentialEase_ExponentProperty_get;
    public static IntPtr ExponentialEase_ExponentProperty_get()
    {
        IntPtr ret = _ExponentialEase_ExponentProperty_get();

        return ret;
    }

    public delegate void Timeline_AccelerationRatioProperty_setDelegate(HandleRef jarg1);
    public static Timeline_AccelerationRatioProperty_setDelegate _Timeline_AccelerationRatioProperty_set;
    public static void Timeline_AccelerationRatioProperty_set(HandleRef jarg1)
    {
        _Timeline_AccelerationRatioProperty_set(jarg1);
    }

    public delegate IntPtr Timeline_AccelerationRatioProperty_getDelegate();
    public static Timeline_AccelerationRatioProperty_getDelegate _Timeline_AccelerationRatioProperty_get;
    public static IntPtr Timeline_AccelerationRatioProperty_get()
    {
        IntPtr ret = _Timeline_AccelerationRatioProperty_get();

        return ret;
    }

    public delegate void Timeline_AutoReverseProperty_setDelegate(HandleRef jarg1);
    public static Timeline_AutoReverseProperty_setDelegate _Timeline_AutoReverseProperty_set;
    public static void Timeline_AutoReverseProperty_set(HandleRef jarg1)
    {
        _Timeline_AutoReverseProperty_set(jarg1);
    }

    public delegate IntPtr Timeline_AutoReverseProperty_getDelegate();
    public static Timeline_AutoReverseProperty_getDelegate _Timeline_AutoReverseProperty_get;
    public static IntPtr Timeline_AutoReverseProperty_get()
    {
        IntPtr ret = _Timeline_AutoReverseProperty_get();

        return ret;
    }

    public delegate void Timeline_BeginTimeProperty_setDelegate(HandleRef jarg1);
    public static Timeline_BeginTimeProperty_setDelegate _Timeline_BeginTimeProperty_set;
    public static void Timeline_BeginTimeProperty_set(HandleRef jarg1)
    {
        _Timeline_BeginTimeProperty_set(jarg1);
    }

    public delegate IntPtr Timeline_BeginTimeProperty_getDelegate();
    public static Timeline_BeginTimeProperty_getDelegate _Timeline_BeginTimeProperty_get;
    public static IntPtr Timeline_BeginTimeProperty_get()
    {
        IntPtr ret = _Timeline_BeginTimeProperty_get();

        return ret;
    }

    public delegate void Timeline_DecelerationRatioProperty_setDelegate(HandleRef jarg1);
    public static Timeline_DecelerationRatioProperty_setDelegate _Timeline_DecelerationRatioProperty_set;
    public static void Timeline_DecelerationRatioProperty_set(HandleRef jarg1)
    {
        _Timeline_DecelerationRatioProperty_set(jarg1);
    }

    public delegate IntPtr Timeline_DecelerationRatioProperty_getDelegate();
    public static Timeline_DecelerationRatioProperty_getDelegate _Timeline_DecelerationRatioProperty_get;
    public static IntPtr Timeline_DecelerationRatioProperty_get()
    {
        IntPtr ret = _Timeline_DecelerationRatioProperty_get();

        return ret;
    }

    public delegate void Timeline_DesiredFrameRateProperty_setDelegate(HandleRef jarg1);
    public static Timeline_DesiredFrameRateProperty_setDelegate _Timeline_DesiredFrameRateProperty_set;
    public static void Timeline_DesiredFrameRateProperty_set(HandleRef jarg1)
    {
        _Timeline_DesiredFrameRateProperty_set(jarg1);
    }

    public delegate IntPtr Timeline_DesiredFrameRateProperty_getDelegate();
    public static Timeline_DesiredFrameRateProperty_getDelegate _Timeline_DesiredFrameRateProperty_get;
    public static IntPtr Timeline_DesiredFrameRateProperty_get()
    {
        IntPtr ret = _Timeline_DesiredFrameRateProperty_get();

        return ret;
    }

    public delegate void Timeline_DurationProperty_setDelegate(HandleRef jarg1);
    public static Timeline_DurationProperty_setDelegate _Timeline_DurationProperty_set;
    public static void Timeline_DurationProperty_set(HandleRef jarg1)
    {
        _Timeline_DurationProperty_set(jarg1);
    }

    public delegate IntPtr Timeline_DurationProperty_getDelegate();
    public static Timeline_DurationProperty_getDelegate _Timeline_DurationProperty_get;
    public static IntPtr Timeline_DurationProperty_get()
    {
        IntPtr ret = _Timeline_DurationProperty_get();

        return ret;
    }

    public delegate void Timeline_FillBehaviorProperty_setDelegate(HandleRef jarg1);
    public static Timeline_FillBehaviorProperty_setDelegate _Timeline_FillBehaviorProperty_set;
    public static void Timeline_FillBehaviorProperty_set(HandleRef jarg1)
    {
        _Timeline_FillBehaviorProperty_set(jarg1);
    }

    public delegate IntPtr Timeline_FillBehaviorProperty_getDelegate();
    public static Timeline_FillBehaviorProperty_getDelegate _Timeline_FillBehaviorProperty_get;
    public static IntPtr Timeline_FillBehaviorProperty_get()
    {
        IntPtr ret = _Timeline_FillBehaviorProperty_get();

        return ret;
    }

    public delegate void Timeline_NameProperty_setDelegate(HandleRef jarg1);
    public static Timeline_NameProperty_setDelegate _Timeline_NameProperty_set;
    public static void Timeline_NameProperty_set(HandleRef jarg1)
    {
        _Timeline_NameProperty_set(jarg1);
    }

    public delegate IntPtr Timeline_NameProperty_getDelegate();
    public static Timeline_NameProperty_getDelegate _Timeline_NameProperty_get;
    public static IntPtr Timeline_NameProperty_get()
    {
        IntPtr ret = _Timeline_NameProperty_get();

        return ret;
    }

    public delegate void Timeline_RepeatBehaviorProperty_setDelegate(HandleRef jarg1);
    public static Timeline_RepeatBehaviorProperty_setDelegate _Timeline_RepeatBehaviorProperty_set;
    public static void Timeline_RepeatBehaviorProperty_set(HandleRef jarg1)
    {
        _Timeline_RepeatBehaviorProperty_set(jarg1);
    }

    public delegate IntPtr Timeline_RepeatBehaviorProperty_getDelegate();
    public static Timeline_RepeatBehaviorProperty_getDelegate _Timeline_RepeatBehaviorProperty_get;
    public static IntPtr Timeline_RepeatBehaviorProperty_get()
    {
        IntPtr ret = _Timeline_RepeatBehaviorProperty_get();

        return ret;
    }

    public delegate void Timeline_SpeedRatioProperty_setDelegate(HandleRef jarg1);
    public static Timeline_SpeedRatioProperty_setDelegate _Timeline_SpeedRatioProperty_set;
    public static void Timeline_SpeedRatioProperty_set(HandleRef jarg1)
    {
        _Timeline_SpeedRatioProperty_set(jarg1);
    }

    public delegate IntPtr Timeline_SpeedRatioProperty_getDelegate();
    public static Timeline_SpeedRatioProperty_getDelegate _Timeline_SpeedRatioProperty_get;
    public static IntPtr Timeline_SpeedRatioProperty_get()
    {
        IntPtr ret = _Timeline_SpeedRatioProperty_get();

        return ret;
    }

    public delegate void TimelineGroup_ChildrenProperty_setDelegate(HandleRef jarg1);
    public static TimelineGroup_ChildrenProperty_setDelegate _TimelineGroup_ChildrenProperty_set;
    public static void TimelineGroup_ChildrenProperty_set(HandleRef jarg1)
    {
        _TimelineGroup_ChildrenProperty_set(jarg1);
    }

    public delegate IntPtr TimelineGroup_ChildrenProperty_getDelegate();
    public static TimelineGroup_ChildrenProperty_getDelegate _TimelineGroup_ChildrenProperty_get;
    public static IntPtr TimelineGroup_ChildrenProperty_get()
    {
        IntPtr ret = _TimelineGroup_ChildrenProperty_get();

        return ret;
    }

    public delegate void ParallelTimeline_SlipBehaviorProperty_setDelegate(HandleRef jarg1);
    public static ParallelTimeline_SlipBehaviorProperty_setDelegate _ParallelTimeline_SlipBehaviorProperty_set;
    public static void ParallelTimeline_SlipBehaviorProperty_set(HandleRef jarg1)
    {
        _ParallelTimeline_SlipBehaviorProperty_set(jarg1);
    }

    public delegate IntPtr ParallelTimeline_SlipBehaviorProperty_getDelegate();
    public static ParallelTimeline_SlipBehaviorProperty_getDelegate _ParallelTimeline_SlipBehaviorProperty_get;
    public static IntPtr ParallelTimeline_SlipBehaviorProperty_get()
    {
        IntPtr ret = _ParallelTimeline_SlipBehaviorProperty_get();

        return ret;
    }

    public delegate void PowerEase_PowerProperty_setDelegate(HandleRef jarg1);
    public static PowerEase_PowerProperty_setDelegate _PowerEase_PowerProperty_set;
    public static void PowerEase_PowerProperty_set(HandleRef jarg1)
    {
        _PowerEase_PowerProperty_set(jarg1);
    }

    public delegate IntPtr PowerEase_PowerProperty_getDelegate();
    public static PowerEase_PowerProperty_getDelegate _PowerEase_PowerProperty_get;
    public static IntPtr PowerEase_PowerProperty_get()
    {
        IntPtr ret = _PowerEase_PowerProperty_get();

        return ret;
    }

    public delegate void Storyboard_TargetNameProperty_setDelegate(HandleRef jarg1);
    public static Storyboard_TargetNameProperty_setDelegate _Storyboard_TargetNameProperty_set;
    public static void Storyboard_TargetNameProperty_set(HandleRef jarg1)
    {
        _Storyboard_TargetNameProperty_set(jarg1);
    }

    public delegate IntPtr Storyboard_TargetNameProperty_getDelegate();
    public static Storyboard_TargetNameProperty_getDelegate _Storyboard_TargetNameProperty_get;
    public static IntPtr Storyboard_TargetNameProperty_get()
    {
        IntPtr ret = _Storyboard_TargetNameProperty_get();

        return ret;
    }

    public delegate void Storyboard_TargetProperty_setDelegate(HandleRef jarg1);
    public static Storyboard_TargetProperty_setDelegate _Storyboard_TargetProperty_set;
    public static void Storyboard_TargetProperty_set(HandleRef jarg1)
    {
        _Storyboard_TargetProperty_set(jarg1);
    }

    public delegate IntPtr Storyboard_TargetProperty_getDelegate();
    public static Storyboard_TargetProperty_getDelegate _Storyboard_TargetProperty_get;
    public static IntPtr Storyboard_TargetProperty_get()
    {
        IntPtr ret = _Storyboard_TargetProperty_get();

        return ret;
    }

    public delegate void Storyboard_TargetPropertyProperty_setDelegate(HandleRef jarg1);
    public static Storyboard_TargetPropertyProperty_setDelegate _Storyboard_TargetPropertyProperty_set;
    public static void Storyboard_TargetPropertyProperty_set(HandleRef jarg1)
    {
        _Storyboard_TargetPropertyProperty_set(jarg1);
    }

    public delegate IntPtr Storyboard_TargetPropertyProperty_getDelegate();
    public static Storyboard_TargetPropertyProperty_getDelegate _Storyboard_TargetPropertyProperty_get;
    public static IntPtr Storyboard_TargetPropertyProperty_get()
    {
        IntPtr ret = _Storyboard_TargetPropertyProperty_get();

        return ret;
    }

    public delegate void VisualStateManager_CustomVisualStateManagerProperty_setDelegate(HandleRef jarg1);
    public static VisualStateManager_CustomVisualStateManagerProperty_setDelegate _VisualStateManager_CustomVisualStateManagerProperty_set;
    public static void VisualStateManager_CustomVisualStateManagerProperty_set(HandleRef jarg1)
    {
        _VisualStateManager_CustomVisualStateManagerProperty_set(jarg1);
    }

    public delegate IntPtr VisualStateManager_CustomVisualStateManagerProperty_getDelegate();
    public static VisualStateManager_CustomVisualStateManagerProperty_getDelegate _VisualStateManager_CustomVisualStateManagerProperty_get;
    public static IntPtr VisualStateManager_CustomVisualStateManagerProperty_get()
    {
        IntPtr ret = _VisualStateManager_CustomVisualStateManagerProperty_get();

        return ret;
    }

    public delegate void VisualStateManager_VisualStateGroupsProperty_setDelegate(HandleRef jarg1);
    public static VisualStateManager_VisualStateGroupsProperty_setDelegate _VisualStateManager_VisualStateGroupsProperty_set;
    public static void VisualStateManager_VisualStateGroupsProperty_set(HandleRef jarg1)
    {
        _VisualStateManager_VisualStateGroupsProperty_set(jarg1);
    }

    public delegate IntPtr VisualStateManager_VisualStateGroupsProperty_getDelegate();
    public static VisualStateManager_VisualStateGroupsProperty_getDelegate _VisualStateManager_VisualStateGroupsProperty_get;
    public static IntPtr VisualStateManager_VisualStateGroupsProperty_get()
    {
        IntPtr ret = _VisualStateManager_VisualStateGroupsProperty_get();

        return ret;
    }

    public delegate void DoubleAnimation_ByProperty_setDelegate(HandleRef jarg1);
    public static DoubleAnimation_ByProperty_setDelegate _DoubleAnimation_ByProperty_set;
    public static void DoubleAnimation_ByProperty_set(HandleRef jarg1)
    {
        _DoubleAnimation_ByProperty_set(jarg1);
    }

    public delegate IntPtr DoubleAnimation_ByProperty_getDelegate();
    public static DoubleAnimation_ByProperty_getDelegate _DoubleAnimation_ByProperty_get;
    public static IntPtr DoubleAnimation_ByProperty_get()
    {
        IntPtr ret = _DoubleAnimation_ByProperty_get();

        return ret;
    }

    public delegate void DoubleAnimation_FromProperty_setDelegate(HandleRef jarg1);
    public static DoubleAnimation_FromProperty_setDelegate _DoubleAnimation_FromProperty_set;
    public static void DoubleAnimation_FromProperty_set(HandleRef jarg1)
    {
        _DoubleAnimation_FromProperty_set(jarg1);
    }

    public delegate IntPtr DoubleAnimation_FromProperty_getDelegate();
    public static DoubleAnimation_FromProperty_getDelegate _DoubleAnimation_FromProperty_get;
    public static IntPtr DoubleAnimation_FromProperty_get()
    {
        IntPtr ret = _DoubleAnimation_FromProperty_get();

        return ret;
    }

    public delegate void DoubleAnimation_ToProperty_setDelegate(HandleRef jarg1);
    public static DoubleAnimation_ToProperty_setDelegate _DoubleAnimation_ToProperty_set;
    public static void DoubleAnimation_ToProperty_set(HandleRef jarg1)
    {
        _DoubleAnimation_ToProperty_set(jarg1);
    }

    public delegate IntPtr DoubleAnimation_ToProperty_getDelegate();
    public static DoubleAnimation_ToProperty_getDelegate _DoubleAnimation_ToProperty_get;
    public static IntPtr DoubleAnimation_ToProperty_get()
    {
        IntPtr ret = _DoubleAnimation_ToProperty_get();

        return ret;
    }

    public delegate void Int16Animation_ByProperty_setDelegate(HandleRef jarg1);
    public static Int16Animation_ByProperty_setDelegate _Int16Animation_ByProperty_set;
    public static void Int16Animation_ByProperty_set(HandleRef jarg1)
    {
        _Int16Animation_ByProperty_set(jarg1);
    }

    public delegate IntPtr Int16Animation_ByProperty_getDelegate();
    public static Int16Animation_ByProperty_getDelegate _Int16Animation_ByProperty_get;
    public static IntPtr Int16Animation_ByProperty_get()
    {
        IntPtr ret = _Int16Animation_ByProperty_get();

        return ret;
    }

    public delegate void Int16Animation_FromProperty_setDelegate(HandleRef jarg1);
    public static Int16Animation_FromProperty_setDelegate _Int16Animation_FromProperty_set;
    public static void Int16Animation_FromProperty_set(HandleRef jarg1)
    {
        _Int16Animation_FromProperty_set(jarg1);
    }

    public delegate IntPtr Int16Animation_FromProperty_getDelegate();
    public static Int16Animation_FromProperty_getDelegate _Int16Animation_FromProperty_get;
    public static IntPtr Int16Animation_FromProperty_get()
    {
        IntPtr ret = _Int16Animation_FromProperty_get();

        return ret;
    }

    public delegate void Int16Animation_ToProperty_setDelegate(HandleRef jarg1);
    public static Int16Animation_ToProperty_setDelegate _Int16Animation_ToProperty_set;
    public static void Int16Animation_ToProperty_set(HandleRef jarg1)
    {
        _Int16Animation_ToProperty_set(jarg1);
    }

    public delegate IntPtr Int16Animation_ToProperty_getDelegate();
    public static Int16Animation_ToProperty_getDelegate _Int16Animation_ToProperty_get;
    public static IntPtr Int16Animation_ToProperty_get()
    {
        IntPtr ret = _Int16Animation_ToProperty_get();

        return ret;
    }

    public delegate void Int32Animation_ByProperty_setDelegate(HandleRef jarg1);
    public static Int32Animation_ByProperty_setDelegate _Int32Animation_ByProperty_set;
    public static void Int32Animation_ByProperty_set(HandleRef jarg1)
    {
        _Int32Animation_ByProperty_set(jarg1);
    }

    public delegate IntPtr Int32Animation_ByProperty_getDelegate();
    public static Int32Animation_ByProperty_getDelegate _Int32Animation_ByProperty_get;
    public static IntPtr Int32Animation_ByProperty_get()
    {
        IntPtr ret = _Int32Animation_ByProperty_get();

        return ret;
    }

    public delegate void Int32Animation_FromProperty_setDelegate(HandleRef jarg1);
    public static Int32Animation_FromProperty_setDelegate _Int32Animation_FromProperty_set;
    public static void Int32Animation_FromProperty_set(HandleRef jarg1)
    {
        _Int32Animation_FromProperty_set(jarg1);
    }

    public delegate IntPtr Int32Animation_FromProperty_getDelegate();
    public static Int32Animation_FromProperty_getDelegate _Int32Animation_FromProperty_get;
    public static IntPtr Int32Animation_FromProperty_get()
    {
        IntPtr ret = _Int32Animation_FromProperty_get();

        return ret;
    }

    public delegate void Int32Animation_ToProperty_setDelegate(HandleRef jarg1);
    public static Int32Animation_ToProperty_setDelegate _Int32Animation_ToProperty_set;
    public static void Int32Animation_ToProperty_set(HandleRef jarg1)
    {
        _Int32Animation_ToProperty_set(jarg1);
    }

    public delegate IntPtr Int32Animation_ToProperty_getDelegate();
    public static Int32Animation_ToProperty_getDelegate _Int32Animation_ToProperty_get;
    public static IntPtr Int32Animation_ToProperty_get()
    {
        IntPtr ret = _Int32Animation_ToProperty_get();

        return ret;
    }

    public delegate void Int64Animation_ByProperty_setDelegate(HandleRef jarg1);
    public static Int64Animation_ByProperty_setDelegate _Int64Animation_ByProperty_set;
    public static void Int64Animation_ByProperty_set(HandleRef jarg1)
    {
        _Int64Animation_ByProperty_set(jarg1);
    }

    public delegate IntPtr Int64Animation_ByProperty_getDelegate();
    public static Int64Animation_ByProperty_getDelegate _Int64Animation_ByProperty_get;
    public static IntPtr Int64Animation_ByProperty_get()
    {
        IntPtr ret = _Int64Animation_ByProperty_get();

        return ret;
    }

    public delegate void Int64Animation_FromProperty_setDelegate(HandleRef jarg1);
    public static Int64Animation_FromProperty_setDelegate _Int64Animation_FromProperty_set;
    public static void Int64Animation_FromProperty_set(HandleRef jarg1)
    {
        _Int64Animation_FromProperty_set(jarg1);
    }

    public delegate IntPtr Int64Animation_FromProperty_getDelegate();
    public static Int64Animation_FromProperty_getDelegate _Int64Animation_FromProperty_get;
    public static IntPtr Int64Animation_FromProperty_get()
    {
        IntPtr ret = _Int64Animation_FromProperty_get();

        return ret;
    }

    public delegate void Int64Animation_ToProperty_setDelegate(HandleRef jarg1);
    public static Int64Animation_ToProperty_setDelegate _Int64Animation_ToProperty_set;
    public static void Int64Animation_ToProperty_set(HandleRef jarg1)
    {
        _Int64Animation_ToProperty_set(jarg1);
    }

    public delegate IntPtr Int64Animation_ToProperty_getDelegate();
    public static Int64Animation_ToProperty_getDelegate _Int64Animation_ToProperty_get;
    public static IntPtr Int64Animation_ToProperty_get()
    {
        IntPtr ret = _Int64Animation_ToProperty_get();

        return ret;
    }

    public delegate void ColorAnimation_ByProperty_setDelegate(HandleRef jarg1);
    public static ColorAnimation_ByProperty_setDelegate _ColorAnimation_ByProperty_set;
    public static void ColorAnimation_ByProperty_set(HandleRef jarg1)
    {
        _ColorAnimation_ByProperty_set(jarg1);
    }

    public delegate IntPtr ColorAnimation_ByProperty_getDelegate();
    public static ColorAnimation_ByProperty_getDelegate _ColorAnimation_ByProperty_get;
    public static IntPtr ColorAnimation_ByProperty_get()
    {
        IntPtr ret = _ColorAnimation_ByProperty_get();

        return ret;
    }

    public delegate void ColorAnimation_FromProperty_setDelegate(HandleRef jarg1);
    public static ColorAnimation_FromProperty_setDelegate _ColorAnimation_FromProperty_set;
    public static void ColorAnimation_FromProperty_set(HandleRef jarg1)
    {
        _ColorAnimation_FromProperty_set(jarg1);
    }

    public delegate IntPtr ColorAnimation_FromProperty_getDelegate();
    public static ColorAnimation_FromProperty_getDelegate _ColorAnimation_FromProperty_get;
    public static IntPtr ColorAnimation_FromProperty_get()
    {
        IntPtr ret = _ColorAnimation_FromProperty_get();

        return ret;
    }

    public delegate void ColorAnimation_ToProperty_setDelegate(HandleRef jarg1);
    public static ColorAnimation_ToProperty_setDelegate _ColorAnimation_ToProperty_set;
    public static void ColorAnimation_ToProperty_set(HandleRef jarg1)
    {
        _ColorAnimation_ToProperty_set(jarg1);
    }

    public delegate IntPtr ColorAnimation_ToProperty_getDelegate();
    public static ColorAnimation_ToProperty_getDelegate _ColorAnimation_ToProperty_get;
    public static IntPtr ColorAnimation_ToProperty_get()
    {
        IntPtr ret = _ColorAnimation_ToProperty_get();

        return ret;
    }

    public delegate void PointAnimation_ByProperty_setDelegate(HandleRef jarg1);
    public static PointAnimation_ByProperty_setDelegate _PointAnimation_ByProperty_set;
    public static void PointAnimation_ByProperty_set(HandleRef jarg1)
    {
        _PointAnimation_ByProperty_set(jarg1);
    }

    public delegate IntPtr PointAnimation_ByProperty_getDelegate();
    public static PointAnimation_ByProperty_getDelegate _PointAnimation_ByProperty_get;
    public static IntPtr PointAnimation_ByProperty_get()
    {
        IntPtr ret = _PointAnimation_ByProperty_get();

        return ret;
    }

    public delegate void PointAnimation_FromProperty_setDelegate(HandleRef jarg1);
    public static PointAnimation_FromProperty_setDelegate _PointAnimation_FromProperty_set;
    public static void PointAnimation_FromProperty_set(HandleRef jarg1)
    {
        _PointAnimation_FromProperty_set(jarg1);
    }

    public delegate IntPtr PointAnimation_FromProperty_getDelegate();
    public static PointAnimation_FromProperty_getDelegate _PointAnimation_FromProperty_get;
    public static IntPtr PointAnimation_FromProperty_get()
    {
        IntPtr ret = _PointAnimation_FromProperty_get();

        return ret;
    }

    public delegate void PointAnimation_ToProperty_setDelegate(HandleRef jarg1);
    public static PointAnimation_ToProperty_setDelegate _PointAnimation_ToProperty_set;
    public static void PointAnimation_ToProperty_set(HandleRef jarg1)
    {
        _PointAnimation_ToProperty_set(jarg1);
    }

    public delegate IntPtr PointAnimation_ToProperty_getDelegate();
    public static PointAnimation_ToProperty_getDelegate _PointAnimation_ToProperty_get;
    public static IntPtr PointAnimation_ToProperty_get()
    {
        IntPtr ret = _PointAnimation_ToProperty_get();

        return ret;
    }

    public delegate void RectAnimation_ByProperty_setDelegate(HandleRef jarg1);
    public static RectAnimation_ByProperty_setDelegate _RectAnimation_ByProperty_set;
    public static void RectAnimation_ByProperty_set(HandleRef jarg1)
    {
        _RectAnimation_ByProperty_set(jarg1);
    }

    public delegate IntPtr RectAnimation_ByProperty_getDelegate();
    public static RectAnimation_ByProperty_getDelegate _RectAnimation_ByProperty_get;
    public static IntPtr RectAnimation_ByProperty_get()
    {
        IntPtr ret = _RectAnimation_ByProperty_get();

        return ret;
    }

    public delegate void RectAnimation_FromProperty_setDelegate(HandleRef jarg1);
    public static RectAnimation_FromProperty_setDelegate _RectAnimation_FromProperty_set;
    public static void RectAnimation_FromProperty_set(HandleRef jarg1)
    {
        _RectAnimation_FromProperty_set(jarg1);
    }

    public delegate IntPtr RectAnimation_FromProperty_getDelegate();
    public static RectAnimation_FromProperty_getDelegate _RectAnimation_FromProperty_get;
    public static IntPtr RectAnimation_FromProperty_get()
    {
        IntPtr ret = _RectAnimation_FromProperty_get();

        return ret;
    }

    public delegate void RectAnimation_ToProperty_setDelegate(HandleRef jarg1);
    public static RectAnimation_ToProperty_setDelegate _RectAnimation_ToProperty_set;
    public static void RectAnimation_ToProperty_set(HandleRef jarg1)
    {
        _RectAnimation_ToProperty_set(jarg1);
    }

    public delegate IntPtr RectAnimation_ToProperty_getDelegate();
    public static RectAnimation_ToProperty_getDelegate _RectAnimation_ToProperty_get;
    public static IntPtr RectAnimation_ToProperty_get()
    {
        IntPtr ret = _RectAnimation_ToProperty_get();

        return ret;
    }

    public delegate void SizeAnimation_ByProperty_setDelegate(HandleRef jarg1);
    public static SizeAnimation_ByProperty_setDelegate _SizeAnimation_ByProperty_set;
    public static void SizeAnimation_ByProperty_set(HandleRef jarg1)
    {
        _SizeAnimation_ByProperty_set(jarg1);
    }

    public delegate IntPtr SizeAnimation_ByProperty_getDelegate();
    public static SizeAnimation_ByProperty_getDelegate _SizeAnimation_ByProperty_get;
    public static IntPtr SizeAnimation_ByProperty_get()
    {
        IntPtr ret = _SizeAnimation_ByProperty_get();

        return ret;
    }

    public delegate void SizeAnimation_FromProperty_setDelegate(HandleRef jarg1);
    public static SizeAnimation_FromProperty_setDelegate _SizeAnimation_FromProperty_set;
    public static void SizeAnimation_FromProperty_set(HandleRef jarg1)
    {
        _SizeAnimation_FromProperty_set(jarg1);
    }

    public delegate IntPtr SizeAnimation_FromProperty_getDelegate();
    public static SizeAnimation_FromProperty_getDelegate _SizeAnimation_FromProperty_get;
    public static IntPtr SizeAnimation_FromProperty_get()
    {
        IntPtr ret = _SizeAnimation_FromProperty_get();

        return ret;
    }

    public delegate void SizeAnimation_ToProperty_setDelegate(HandleRef jarg1);
    public static SizeAnimation_ToProperty_setDelegate _SizeAnimation_ToProperty_set;
    public static void SizeAnimation_ToProperty_set(HandleRef jarg1)
    {
        _SizeAnimation_ToProperty_set(jarg1);
    }

    public delegate IntPtr SizeAnimation_ToProperty_getDelegate();
    public static SizeAnimation_ToProperty_getDelegate _SizeAnimation_ToProperty_get;
    public static IntPtr SizeAnimation_ToProperty_get()
    {
        IntPtr ret = _SizeAnimation_ToProperty_get();

        return ret;
    }

    public delegate void ThicknessAnimation_ByProperty_setDelegate(HandleRef jarg1);
    public static ThicknessAnimation_ByProperty_setDelegate _ThicknessAnimation_ByProperty_set;
    public static void ThicknessAnimation_ByProperty_set(HandleRef jarg1)
    {
        _ThicknessAnimation_ByProperty_set(jarg1);
    }

    public delegate IntPtr ThicknessAnimation_ByProperty_getDelegate();
    public static ThicknessAnimation_ByProperty_getDelegate _ThicknessAnimation_ByProperty_get;
    public static IntPtr ThicknessAnimation_ByProperty_get()
    {
        IntPtr ret = _ThicknessAnimation_ByProperty_get();

        return ret;
    }

    public delegate void ThicknessAnimation_FromProperty_setDelegate(HandleRef jarg1);
    public static ThicknessAnimation_FromProperty_setDelegate _ThicknessAnimation_FromProperty_set;
    public static void ThicknessAnimation_FromProperty_set(HandleRef jarg1)
    {
        _ThicknessAnimation_FromProperty_set(jarg1);
    }

    public delegate IntPtr ThicknessAnimation_FromProperty_getDelegate();
    public static ThicknessAnimation_FromProperty_getDelegate _ThicknessAnimation_FromProperty_get;
    public static IntPtr ThicknessAnimation_FromProperty_get()
    {
        IntPtr ret = _ThicknessAnimation_FromProperty_get();

        return ret;
    }

    public delegate void ThicknessAnimation_ToProperty_setDelegate(HandleRef jarg1);
    public static ThicknessAnimation_ToProperty_setDelegate _ThicknessAnimation_ToProperty_set;
    public static void ThicknessAnimation_ToProperty_set(HandleRef jarg1)
    {
        _ThicknessAnimation_ToProperty_set(jarg1);
    }

    public delegate IntPtr ThicknessAnimation_ToProperty_getDelegate();
    public static ThicknessAnimation_ToProperty_getDelegate _ThicknessAnimation_ToProperty_get;
    public static IntPtr ThicknessAnimation_ToProperty_get()
    {
        IntPtr ret = _ThicknessAnimation_ToProperty_get();

        return ret;
    }

    public delegate void BooleanKeyFrame_KeyTimeProperty_setDelegate(HandleRef jarg1);
    public static BooleanKeyFrame_KeyTimeProperty_setDelegate _BooleanKeyFrame_KeyTimeProperty_set;
    public static void BooleanKeyFrame_KeyTimeProperty_set(HandleRef jarg1)
    {
        _BooleanKeyFrame_KeyTimeProperty_set(jarg1);
    }

    public delegate IntPtr BooleanKeyFrame_KeyTimeProperty_getDelegate();
    public static BooleanKeyFrame_KeyTimeProperty_getDelegate _BooleanKeyFrame_KeyTimeProperty_get;
    public static IntPtr BooleanKeyFrame_KeyTimeProperty_get()
    {
        IntPtr ret = _BooleanKeyFrame_KeyTimeProperty_get();

        return ret;
    }

    public delegate void BooleanKeyFrame_ValueProperty_setDelegate(HandleRef jarg1);
    public static BooleanKeyFrame_ValueProperty_setDelegate _BooleanKeyFrame_ValueProperty_set;
    public static void BooleanKeyFrame_ValueProperty_set(HandleRef jarg1)
    {
        _BooleanKeyFrame_ValueProperty_set(jarg1);
    }

    public delegate IntPtr BooleanKeyFrame_ValueProperty_getDelegate();
    public static BooleanKeyFrame_ValueProperty_getDelegate _BooleanKeyFrame_ValueProperty_get;
    public static IntPtr BooleanKeyFrame_ValueProperty_get()
    {
        IntPtr ret = _BooleanKeyFrame_ValueProperty_get();

        return ret;
    }

    public delegate void DoubleKeyFrame_KeyTimeProperty_setDelegate(HandleRef jarg1);
    public static DoubleKeyFrame_KeyTimeProperty_setDelegate _DoubleKeyFrame_KeyTimeProperty_set;
    public static void DoubleKeyFrame_KeyTimeProperty_set(HandleRef jarg1)
    {
        _DoubleKeyFrame_KeyTimeProperty_set(jarg1);
    }

    public delegate IntPtr DoubleKeyFrame_KeyTimeProperty_getDelegate();
    public static DoubleKeyFrame_KeyTimeProperty_getDelegate _DoubleKeyFrame_KeyTimeProperty_get;
    public static IntPtr DoubleKeyFrame_KeyTimeProperty_get()
    {
        IntPtr ret = _DoubleKeyFrame_KeyTimeProperty_get();

        return ret;
    }

    public delegate void DoubleKeyFrame_ValueProperty_setDelegate(HandleRef jarg1);
    public static DoubleKeyFrame_ValueProperty_setDelegate _DoubleKeyFrame_ValueProperty_set;
    public static void DoubleKeyFrame_ValueProperty_set(HandleRef jarg1)
    {
        _DoubleKeyFrame_ValueProperty_set(jarg1);
    }

    public delegate IntPtr DoubleKeyFrame_ValueProperty_getDelegate();
    public static DoubleKeyFrame_ValueProperty_getDelegate _DoubleKeyFrame_ValueProperty_get;
    public static IntPtr DoubleKeyFrame_ValueProperty_get()
    {
        IntPtr ret = _DoubleKeyFrame_ValueProperty_get();

        return ret;
    }

    public delegate void Int16KeyFrame_KeyTimeProperty_setDelegate(HandleRef jarg1);
    public static Int16KeyFrame_KeyTimeProperty_setDelegate _Int16KeyFrame_KeyTimeProperty_set;
    public static void Int16KeyFrame_KeyTimeProperty_set(HandleRef jarg1)
    {
        _Int16KeyFrame_KeyTimeProperty_set(jarg1);
    }

    public delegate IntPtr Int16KeyFrame_KeyTimeProperty_getDelegate();
    public static Int16KeyFrame_KeyTimeProperty_getDelegate _Int16KeyFrame_KeyTimeProperty_get;
    public static IntPtr Int16KeyFrame_KeyTimeProperty_get()
    {
        IntPtr ret = _Int16KeyFrame_KeyTimeProperty_get();

        return ret;
    }

    public delegate void Int16KeyFrame_ValueProperty_setDelegate(HandleRef jarg1);
    public static Int16KeyFrame_ValueProperty_setDelegate _Int16KeyFrame_ValueProperty_set;
    public static void Int16KeyFrame_ValueProperty_set(HandleRef jarg1)
    {
        _Int16KeyFrame_ValueProperty_set(jarg1);
    }

    public delegate IntPtr Int16KeyFrame_ValueProperty_getDelegate();
    public static Int16KeyFrame_ValueProperty_getDelegate _Int16KeyFrame_ValueProperty_get;
    public static IntPtr Int16KeyFrame_ValueProperty_get()
    {
        IntPtr ret = _Int16KeyFrame_ValueProperty_get();

        return ret;
    }

    public delegate void Int32KeyFrame_KeyTimeProperty_setDelegate(HandleRef jarg1);
    public static Int32KeyFrame_KeyTimeProperty_setDelegate _Int32KeyFrame_KeyTimeProperty_set;
    public static void Int32KeyFrame_KeyTimeProperty_set(HandleRef jarg1)
    {
        _Int32KeyFrame_KeyTimeProperty_set(jarg1);
    }

    public delegate IntPtr Int32KeyFrame_KeyTimeProperty_getDelegate();
    public static Int32KeyFrame_KeyTimeProperty_getDelegate _Int32KeyFrame_KeyTimeProperty_get;
    public static IntPtr Int32KeyFrame_KeyTimeProperty_get()
    {
        IntPtr ret = _Int32KeyFrame_KeyTimeProperty_get();

        return ret;
    }

    public delegate void Int32KeyFrame_ValueProperty_setDelegate(HandleRef jarg1);
    public static Int32KeyFrame_ValueProperty_setDelegate _Int32KeyFrame_ValueProperty_set;
    public static void Int32KeyFrame_ValueProperty_set(HandleRef jarg1)
    {
        _Int32KeyFrame_ValueProperty_set(jarg1);
    }

    public delegate IntPtr Int32KeyFrame_ValueProperty_getDelegate();
    public static Int32KeyFrame_ValueProperty_getDelegate _Int32KeyFrame_ValueProperty_get;
    public static IntPtr Int32KeyFrame_ValueProperty_get()
    {
        IntPtr ret = _Int32KeyFrame_ValueProperty_get();

        return ret;
    }

    public delegate void ColorKeyFrame_KeyTimeProperty_setDelegate(HandleRef jarg1);
    public static ColorKeyFrame_KeyTimeProperty_setDelegate _ColorKeyFrame_KeyTimeProperty_set;
    public static void ColorKeyFrame_KeyTimeProperty_set(HandleRef jarg1)
    {
        _ColorKeyFrame_KeyTimeProperty_set(jarg1);
    }

    public delegate IntPtr ColorKeyFrame_KeyTimeProperty_getDelegate();
    public static ColorKeyFrame_KeyTimeProperty_getDelegate _ColorKeyFrame_KeyTimeProperty_get;
    public static IntPtr ColorKeyFrame_KeyTimeProperty_get()
    {
        IntPtr ret = _ColorKeyFrame_KeyTimeProperty_get();

        return ret;
    }

    public delegate void ColorKeyFrame_ValueProperty_setDelegate(HandleRef jarg1);
    public static ColorKeyFrame_ValueProperty_setDelegate _ColorKeyFrame_ValueProperty_set;
    public static void ColorKeyFrame_ValueProperty_set(HandleRef jarg1)
    {
        _ColorKeyFrame_ValueProperty_set(jarg1);
    }

    public delegate IntPtr ColorKeyFrame_ValueProperty_getDelegate();
    public static ColorKeyFrame_ValueProperty_getDelegate _ColorKeyFrame_ValueProperty_get;
    public static IntPtr ColorKeyFrame_ValueProperty_get()
    {
        IntPtr ret = _ColorKeyFrame_ValueProperty_get();

        return ret;
    }

    public delegate void PointKeyFrame_KeyTimeProperty_setDelegate(HandleRef jarg1);
    public static PointKeyFrame_KeyTimeProperty_setDelegate _PointKeyFrame_KeyTimeProperty_set;
    public static void PointKeyFrame_KeyTimeProperty_set(HandleRef jarg1)
    {
        _PointKeyFrame_KeyTimeProperty_set(jarg1);
    }

    public delegate IntPtr PointKeyFrame_KeyTimeProperty_getDelegate();
    public static PointKeyFrame_KeyTimeProperty_getDelegate _PointKeyFrame_KeyTimeProperty_get;
    public static IntPtr PointKeyFrame_KeyTimeProperty_get()
    {
        IntPtr ret = _PointKeyFrame_KeyTimeProperty_get();

        return ret;
    }

    public delegate void PointKeyFrame_ValueProperty_setDelegate(HandleRef jarg1);
    public static PointKeyFrame_ValueProperty_setDelegate _PointKeyFrame_ValueProperty_set;
    public static void PointKeyFrame_ValueProperty_set(HandleRef jarg1)
    {
        _PointKeyFrame_ValueProperty_set(jarg1);
    }

    public delegate IntPtr PointKeyFrame_ValueProperty_getDelegate();
    public static PointKeyFrame_ValueProperty_getDelegate _PointKeyFrame_ValueProperty_get;
    public static IntPtr PointKeyFrame_ValueProperty_get()
    {
        IntPtr ret = _PointKeyFrame_ValueProperty_get();

        return ret;
    }

    public delegate void RectKeyFrame_KeyTimeProperty_setDelegate(HandleRef jarg1);
    public static RectKeyFrame_KeyTimeProperty_setDelegate _RectKeyFrame_KeyTimeProperty_set;
    public static void RectKeyFrame_KeyTimeProperty_set(HandleRef jarg1)
    {
        _RectKeyFrame_KeyTimeProperty_set(jarg1);
    }

    public delegate IntPtr RectKeyFrame_KeyTimeProperty_getDelegate();
    public static RectKeyFrame_KeyTimeProperty_getDelegate _RectKeyFrame_KeyTimeProperty_get;
    public static IntPtr RectKeyFrame_KeyTimeProperty_get()
    {
        IntPtr ret = _RectKeyFrame_KeyTimeProperty_get();

        return ret;
    }

    public delegate void RectKeyFrame_ValueProperty_setDelegate(HandleRef jarg1);
    public static RectKeyFrame_ValueProperty_setDelegate _RectKeyFrame_ValueProperty_set;
    public static void RectKeyFrame_ValueProperty_set(HandleRef jarg1)
    {
        _RectKeyFrame_ValueProperty_set(jarg1);
    }

    public delegate IntPtr RectKeyFrame_ValueProperty_getDelegate();
    public static RectKeyFrame_ValueProperty_getDelegate _RectKeyFrame_ValueProperty_get;
    public static IntPtr RectKeyFrame_ValueProperty_get()
    {
        IntPtr ret = _RectKeyFrame_ValueProperty_get();

        return ret;
    }

    public delegate void SizeKeyFrame_KeyTimeProperty_setDelegate(HandleRef jarg1);
    public static SizeKeyFrame_KeyTimeProperty_setDelegate _SizeKeyFrame_KeyTimeProperty_set;
    public static void SizeKeyFrame_KeyTimeProperty_set(HandleRef jarg1)
    {
        _SizeKeyFrame_KeyTimeProperty_set(jarg1);
    }

    public delegate IntPtr SizeKeyFrame_KeyTimeProperty_getDelegate();
    public static SizeKeyFrame_KeyTimeProperty_getDelegate _SizeKeyFrame_KeyTimeProperty_get;
    public static IntPtr SizeKeyFrame_KeyTimeProperty_get()
    {
        IntPtr ret = _SizeKeyFrame_KeyTimeProperty_get();

        return ret;
    }

    public delegate void SizeKeyFrame_ValueProperty_setDelegate(HandleRef jarg1);
    public static SizeKeyFrame_ValueProperty_setDelegate _SizeKeyFrame_ValueProperty_set;
    public static void SizeKeyFrame_ValueProperty_set(HandleRef jarg1)
    {
        _SizeKeyFrame_ValueProperty_set(jarg1);
    }

    public delegate IntPtr SizeKeyFrame_ValueProperty_getDelegate();
    public static SizeKeyFrame_ValueProperty_getDelegate _SizeKeyFrame_ValueProperty_get;
    public static IntPtr SizeKeyFrame_ValueProperty_get()
    {
        IntPtr ret = _SizeKeyFrame_ValueProperty_get();

        return ret;
    }

    public delegate void ThicknessKeyFrame_KeyTimeProperty_setDelegate(HandleRef jarg1);
    public static ThicknessKeyFrame_KeyTimeProperty_setDelegate _ThicknessKeyFrame_KeyTimeProperty_set;
    public static void ThicknessKeyFrame_KeyTimeProperty_set(HandleRef jarg1)
    {
        _ThicknessKeyFrame_KeyTimeProperty_set(jarg1);
    }

    public delegate IntPtr ThicknessKeyFrame_KeyTimeProperty_getDelegate();
    public static ThicknessKeyFrame_KeyTimeProperty_getDelegate _ThicknessKeyFrame_KeyTimeProperty_get;
    public static IntPtr ThicknessKeyFrame_KeyTimeProperty_get()
    {
        IntPtr ret = _ThicknessKeyFrame_KeyTimeProperty_get();

        return ret;
    }

    public delegate void ThicknessKeyFrame_ValueProperty_setDelegate(HandleRef jarg1);
    public static ThicknessKeyFrame_ValueProperty_setDelegate _ThicknessKeyFrame_ValueProperty_set;
    public static void ThicknessKeyFrame_ValueProperty_set(HandleRef jarg1)
    {
        _ThicknessKeyFrame_ValueProperty_set(jarg1);
    }

    public delegate IntPtr ThicknessKeyFrame_ValueProperty_getDelegate();
    public static ThicknessKeyFrame_ValueProperty_getDelegate _ThicknessKeyFrame_ValueProperty_get;
    public static IntPtr ThicknessKeyFrame_ValueProperty_get()
    {
        IntPtr ret = _ThicknessKeyFrame_ValueProperty_get();

        return ret;
    }

    public delegate void StringKeyFrame_KeyTimeProperty_setDelegate(HandleRef jarg1);
    public static StringKeyFrame_KeyTimeProperty_setDelegate _StringKeyFrame_KeyTimeProperty_set;
    public static void StringKeyFrame_KeyTimeProperty_set(HandleRef jarg1)
    {
        _StringKeyFrame_KeyTimeProperty_set(jarg1);
    }

    public delegate IntPtr StringKeyFrame_KeyTimeProperty_getDelegate();
    public static StringKeyFrame_KeyTimeProperty_getDelegate _StringKeyFrame_KeyTimeProperty_get;
    public static IntPtr StringKeyFrame_KeyTimeProperty_get()
    {
        IntPtr ret = _StringKeyFrame_KeyTimeProperty_get();

        return ret;
    }

    public delegate void StringKeyFrame_ValueProperty_setDelegate(HandleRef jarg1);
    public static StringKeyFrame_ValueProperty_setDelegate _StringKeyFrame_ValueProperty_set;
    public static void StringKeyFrame_ValueProperty_set(HandleRef jarg1)
    {
        _StringKeyFrame_ValueProperty_set(jarg1);
    }

    public delegate IntPtr StringKeyFrame_ValueProperty_getDelegate();
    public static StringKeyFrame_ValueProperty_getDelegate _StringKeyFrame_ValueProperty_get;
    public static IntPtr StringKeyFrame_ValueProperty_get()
    {
        IntPtr ret = _StringKeyFrame_ValueProperty_get();

        return ret;
    }

    public delegate void EasingDoubleKeyFrame_EasingFunctionProperty_setDelegate(HandleRef jarg1);
    public static EasingDoubleKeyFrame_EasingFunctionProperty_setDelegate _EasingDoubleKeyFrame_EasingFunctionProperty_set;
    public static void EasingDoubleKeyFrame_EasingFunctionProperty_set(HandleRef jarg1)
    {
        _EasingDoubleKeyFrame_EasingFunctionProperty_set(jarg1);
    }

    public delegate IntPtr EasingDoubleKeyFrame_EasingFunctionProperty_getDelegate();
    public static EasingDoubleKeyFrame_EasingFunctionProperty_getDelegate _EasingDoubleKeyFrame_EasingFunctionProperty_get;
    public static IntPtr EasingDoubleKeyFrame_EasingFunctionProperty_get()
    {
        IntPtr ret = _EasingDoubleKeyFrame_EasingFunctionProperty_get();

        return ret;
    }

    public delegate void EasingInt16KeyFrame_EasingFunctionProperty_setDelegate(HandleRef jarg1);
    public static EasingInt16KeyFrame_EasingFunctionProperty_setDelegate _EasingInt16KeyFrame_EasingFunctionProperty_set;
    public static void EasingInt16KeyFrame_EasingFunctionProperty_set(HandleRef jarg1)
    {
        _EasingInt16KeyFrame_EasingFunctionProperty_set(jarg1);
    }

    public delegate IntPtr EasingInt16KeyFrame_EasingFunctionProperty_getDelegate();
    public static EasingInt16KeyFrame_EasingFunctionProperty_getDelegate _EasingInt16KeyFrame_EasingFunctionProperty_get;
    public static IntPtr EasingInt16KeyFrame_EasingFunctionProperty_get()
    {
        IntPtr ret = _EasingInt16KeyFrame_EasingFunctionProperty_get();

        return ret;
    }

    public delegate void EasingInt32KeyFrame_EasingFunctionProperty_setDelegate(HandleRef jarg1);
    public static EasingInt32KeyFrame_EasingFunctionProperty_setDelegate _EasingInt32KeyFrame_EasingFunctionProperty_set;
    public static void EasingInt32KeyFrame_EasingFunctionProperty_set(HandleRef jarg1)
    {
        _EasingInt32KeyFrame_EasingFunctionProperty_set(jarg1);
    }

    public delegate IntPtr EasingInt32KeyFrame_EasingFunctionProperty_getDelegate();
    public static EasingInt32KeyFrame_EasingFunctionProperty_getDelegate _EasingInt32KeyFrame_EasingFunctionProperty_get;
    public static IntPtr EasingInt32KeyFrame_EasingFunctionProperty_get()
    {
        IntPtr ret = _EasingInt32KeyFrame_EasingFunctionProperty_get();

        return ret;
    }

    public delegate void EasingColorKeyFrame_EasingFunctionProperty_setDelegate(HandleRef jarg1);
    public static EasingColorKeyFrame_EasingFunctionProperty_setDelegate _EasingColorKeyFrame_EasingFunctionProperty_set;
    public static void EasingColorKeyFrame_EasingFunctionProperty_set(HandleRef jarg1)
    {
        _EasingColorKeyFrame_EasingFunctionProperty_set(jarg1);
    }

    public delegate IntPtr EasingColorKeyFrame_EasingFunctionProperty_getDelegate();
    public static EasingColorKeyFrame_EasingFunctionProperty_getDelegate _EasingColorKeyFrame_EasingFunctionProperty_get;
    public static IntPtr EasingColorKeyFrame_EasingFunctionProperty_get()
    {
        IntPtr ret = _EasingColorKeyFrame_EasingFunctionProperty_get();

        return ret;
    }

    public delegate void EasingPointKeyFrame_EasingFunctionProperty_setDelegate(HandleRef jarg1);
    public static EasingPointKeyFrame_EasingFunctionProperty_setDelegate _EasingPointKeyFrame_EasingFunctionProperty_set;
    public static void EasingPointKeyFrame_EasingFunctionProperty_set(HandleRef jarg1)
    {
        _EasingPointKeyFrame_EasingFunctionProperty_set(jarg1);
    }

    public delegate IntPtr EasingPointKeyFrame_EasingFunctionProperty_getDelegate();
    public static EasingPointKeyFrame_EasingFunctionProperty_getDelegate _EasingPointKeyFrame_EasingFunctionProperty_get;
    public static IntPtr EasingPointKeyFrame_EasingFunctionProperty_get()
    {
        IntPtr ret = _EasingPointKeyFrame_EasingFunctionProperty_get();

        return ret;
    }

    public delegate void EasingRectKeyFrame_EasingFunctionProperty_setDelegate(HandleRef jarg1);
    public static EasingRectKeyFrame_EasingFunctionProperty_setDelegate _EasingRectKeyFrame_EasingFunctionProperty_set;
    public static void EasingRectKeyFrame_EasingFunctionProperty_set(HandleRef jarg1)
    {
        _EasingRectKeyFrame_EasingFunctionProperty_set(jarg1);
    }

    public delegate IntPtr EasingRectKeyFrame_EasingFunctionProperty_getDelegate();
    public static EasingRectKeyFrame_EasingFunctionProperty_getDelegate _EasingRectKeyFrame_EasingFunctionProperty_get;
    public static IntPtr EasingRectKeyFrame_EasingFunctionProperty_get()
    {
        IntPtr ret = _EasingRectKeyFrame_EasingFunctionProperty_get();

        return ret;
    }

    public delegate void EasingSizeKeyFrame_EasingFunctionProperty_setDelegate(HandleRef jarg1);
    public static EasingSizeKeyFrame_EasingFunctionProperty_setDelegate _EasingSizeKeyFrame_EasingFunctionProperty_set;
    public static void EasingSizeKeyFrame_EasingFunctionProperty_set(HandleRef jarg1)
    {
        _EasingSizeKeyFrame_EasingFunctionProperty_set(jarg1);
    }

    public delegate IntPtr EasingSizeKeyFrame_EasingFunctionProperty_getDelegate();
    public static EasingSizeKeyFrame_EasingFunctionProperty_getDelegate _EasingSizeKeyFrame_EasingFunctionProperty_get;
    public static IntPtr EasingSizeKeyFrame_EasingFunctionProperty_get()
    {
        IntPtr ret = _EasingSizeKeyFrame_EasingFunctionProperty_get();

        return ret;
    }

    public delegate void EasingThicknessKeyFrame_EasingFunctionProperty_setDelegate(HandleRef jarg1);
    public static EasingThicknessKeyFrame_EasingFunctionProperty_setDelegate _EasingThicknessKeyFrame_EasingFunctionProperty_set;
    public static void EasingThicknessKeyFrame_EasingFunctionProperty_set(HandleRef jarg1)
    {
        _EasingThicknessKeyFrame_EasingFunctionProperty_set(jarg1);
    }

    public delegate IntPtr EasingThicknessKeyFrame_EasingFunctionProperty_getDelegate();
    public static EasingThicknessKeyFrame_EasingFunctionProperty_getDelegate _EasingThicknessKeyFrame_EasingFunctionProperty_get;
    public static IntPtr EasingThicknessKeyFrame_EasingFunctionProperty_get()
    {
        IntPtr ret = _EasingThicknessKeyFrame_EasingFunctionProperty_get();

        return ret;
    }

    public delegate void SplineDoubleKeyFrame_KeySplineProperty_setDelegate(HandleRef jarg1);
    public static SplineDoubleKeyFrame_KeySplineProperty_setDelegate _SplineDoubleKeyFrame_KeySplineProperty_set;
    public static void SplineDoubleKeyFrame_KeySplineProperty_set(HandleRef jarg1)
    {
        _SplineDoubleKeyFrame_KeySplineProperty_set(jarg1);
    }

    public delegate IntPtr SplineDoubleKeyFrame_KeySplineProperty_getDelegate();
    public static SplineDoubleKeyFrame_KeySplineProperty_getDelegate _SplineDoubleKeyFrame_KeySplineProperty_get;
    public static IntPtr SplineDoubleKeyFrame_KeySplineProperty_get()
    {
        IntPtr ret = _SplineDoubleKeyFrame_KeySplineProperty_get();

        return ret;
    }

    public delegate void SplineInt16KeyFrame_KeySplineProperty_setDelegate(HandleRef jarg1);
    public static SplineInt16KeyFrame_KeySplineProperty_setDelegate _SplineInt16KeyFrame_KeySplineProperty_set;
    public static void SplineInt16KeyFrame_KeySplineProperty_set(HandleRef jarg1)
    {
        _SplineInt16KeyFrame_KeySplineProperty_set(jarg1);
    }

    public delegate IntPtr SplineInt16KeyFrame_KeySplineProperty_getDelegate();
    public static SplineInt16KeyFrame_KeySplineProperty_getDelegate _SplineInt16KeyFrame_KeySplineProperty_get;
    public static IntPtr SplineInt16KeyFrame_KeySplineProperty_get()
    {
        IntPtr ret = _SplineInt16KeyFrame_KeySplineProperty_get();

        return ret;
    }

    public delegate void SplineInt32KeyFrame_KeySplineProperty_setDelegate(HandleRef jarg1);
    public static SplineInt32KeyFrame_KeySplineProperty_setDelegate _SplineInt32KeyFrame_KeySplineProperty_set;
    public static void SplineInt32KeyFrame_KeySplineProperty_set(HandleRef jarg1)
    {
        _SplineInt32KeyFrame_KeySplineProperty_set(jarg1);
    }

    public delegate IntPtr SplineInt32KeyFrame_KeySplineProperty_getDelegate();
    public static SplineInt32KeyFrame_KeySplineProperty_getDelegate _SplineInt32KeyFrame_KeySplineProperty_get;
    public static IntPtr SplineInt32KeyFrame_KeySplineProperty_get()
    {
        IntPtr ret = _SplineInt32KeyFrame_KeySplineProperty_get();

        return ret;
    }

    public delegate void SplineColorKeyFrame_KeySplineProperty_setDelegate(HandleRef jarg1);
    public static SplineColorKeyFrame_KeySplineProperty_setDelegate _SplineColorKeyFrame_KeySplineProperty_set;
    public static void SplineColorKeyFrame_KeySplineProperty_set(HandleRef jarg1)
    {
        _SplineColorKeyFrame_KeySplineProperty_set(jarg1);
    }

    public delegate IntPtr SplineColorKeyFrame_KeySplineProperty_getDelegate();
    public static SplineColorKeyFrame_KeySplineProperty_getDelegate _SplineColorKeyFrame_KeySplineProperty_get;
    public static IntPtr SplineColorKeyFrame_KeySplineProperty_get()
    {
        IntPtr ret = _SplineColorKeyFrame_KeySplineProperty_get();

        return ret;
    }

    public delegate void SplinePointKeyFrame_KeySplineProperty_setDelegate(HandleRef jarg1);
    public static SplinePointKeyFrame_KeySplineProperty_setDelegate _SplinePointKeyFrame_KeySplineProperty_set;
    public static void SplinePointKeyFrame_KeySplineProperty_set(HandleRef jarg1)
    {
        _SplinePointKeyFrame_KeySplineProperty_set(jarg1);
    }

    public delegate IntPtr SplinePointKeyFrame_KeySplineProperty_getDelegate();
    public static SplinePointKeyFrame_KeySplineProperty_getDelegate _SplinePointKeyFrame_KeySplineProperty_get;
    public static IntPtr SplinePointKeyFrame_KeySplineProperty_get()
    {
        IntPtr ret = _SplinePointKeyFrame_KeySplineProperty_get();

        return ret;
    }

    public delegate void SplineRectKeyFrame_KeySplineProperty_setDelegate(HandleRef jarg1);
    public static SplineRectKeyFrame_KeySplineProperty_setDelegate _SplineRectKeyFrame_KeySplineProperty_set;
    public static void SplineRectKeyFrame_KeySplineProperty_set(HandleRef jarg1)
    {
        _SplineRectKeyFrame_KeySplineProperty_set(jarg1);
    }

    public delegate IntPtr SplineRectKeyFrame_KeySplineProperty_getDelegate();
    public static SplineRectKeyFrame_KeySplineProperty_getDelegate _SplineRectKeyFrame_KeySplineProperty_get;
    public static IntPtr SplineRectKeyFrame_KeySplineProperty_get()
    {
        IntPtr ret = _SplineRectKeyFrame_KeySplineProperty_get();

        return ret;
    }

    public delegate void SplineSizeKeyFrame_KeySplineProperty_setDelegate(HandleRef jarg1);
    public static SplineSizeKeyFrame_KeySplineProperty_setDelegate _SplineSizeKeyFrame_KeySplineProperty_set;
    public static void SplineSizeKeyFrame_KeySplineProperty_set(HandleRef jarg1)
    {
        _SplineSizeKeyFrame_KeySplineProperty_set(jarg1);
    }

    public delegate IntPtr SplineSizeKeyFrame_KeySplineProperty_getDelegate();
    public static SplineSizeKeyFrame_KeySplineProperty_getDelegate _SplineSizeKeyFrame_KeySplineProperty_get;
    public static IntPtr SplineSizeKeyFrame_KeySplineProperty_get()
    {
        IntPtr ret = _SplineSizeKeyFrame_KeySplineProperty_get();

        return ret;
    }

    public delegate void SplineThicknessKeyFrame_KeySplineProperty_setDelegate(HandleRef jarg1);
    public static SplineThicknessKeyFrame_KeySplineProperty_setDelegate _SplineThicknessKeyFrame_KeySplineProperty_set;
    public static void SplineThicknessKeyFrame_KeySplineProperty_set(HandleRef jarg1)
    {
        _SplineThicknessKeyFrame_KeySplineProperty_set(jarg1);
    }

    public delegate IntPtr SplineThicknessKeyFrame_KeySplineProperty_getDelegate();
    public static SplineThicknessKeyFrame_KeySplineProperty_getDelegate _SplineThicknessKeyFrame_KeySplineProperty_get;
    public static IntPtr SplineThicknessKeyFrame_KeySplineProperty_get()
    {
        IntPtr ret = _SplineThicknessKeyFrame_KeySplineProperty_get();

        return ret;
    }

    public delegate IntPtr SerializableComponent_SWIGUpcastDelegate(IntPtr jarg1);
    public static SerializableComponent_SWIGUpcastDelegate _SerializableComponent_SWIGUpcast;
    public static IntPtr SerializableComponent_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _SerializableComponent_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DependencyObject_SWIGUpcastDelegate(IntPtr jarg1);
    public static DependencyObject_SWIGUpcastDelegate _DependencyObject_SWIGUpcast;
    public static IntPtr DependencyObject_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DependencyObject_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DependencyProperty_SWIGUpcastDelegate(IntPtr jarg1);
    public static DependencyProperty_SWIGUpcastDelegate _DependencyProperty_SWIGUpcast;
    public static IntPtr DependencyProperty_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DependencyProperty_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Freezable_SWIGUpcastDelegate(IntPtr jarg1);
    public static Freezable_SWIGUpcastDelegate _Freezable_SWIGUpcast;
    public static IntPtr Freezable_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Freezable_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr BaseExpression_SWIGUpcastDelegate(IntPtr jarg1);
    public static BaseExpression_SWIGUpcastDelegate _BaseExpression_SWIGUpcast;
    public static IntPtr BaseExpression_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _BaseExpression_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr PropertyMetadata_SWIGUpcastDelegate(IntPtr jarg1);
    public static PropertyMetadata_SWIGUpcastDelegate _PropertyMetadata_SWIGUpcast;
    public static IntPtr PropertyMetadata_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _PropertyMetadata_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr UIPropertyMetadata_SWIGUpcastDelegate(IntPtr jarg1);
    public static UIPropertyMetadata_SWIGUpcastDelegate _UIPropertyMetadata_SWIGUpcast;
    public static IntPtr UIPropertyMetadata_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _UIPropertyMetadata_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr FrameworkPropertyMetadata_SWIGUpcastDelegate(IntPtr jarg1);
    public static FrameworkPropertyMetadata_SWIGUpcastDelegate _FrameworkPropertyMetadata_SWIGUpcast;
    public static IntPtr FrameworkPropertyMetadata_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _FrameworkPropertyMetadata_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Visual_SWIGUpcastDelegate(IntPtr jarg1);
    public static Visual_SWIGUpcastDelegate _Visual_SWIGUpcast;
    public static IntPtr Visual_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Visual_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Collection_SWIGUpcastDelegate(IntPtr jarg1);
    public static Collection_SWIGUpcastDelegate _Collection_SWIGUpcast;
    public static IntPtr Collection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Collection_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr VisualCollection_SWIGUpcastDelegate(IntPtr jarg1);
    public static VisualCollection_SWIGUpcastDelegate _VisualCollection_SWIGUpcast;
    public static IntPtr VisualCollection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _VisualCollection_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr UIElement_SWIGUpcastDelegate(IntPtr jarg1);
    public static UIElement_SWIGUpcastDelegate _UIElement_SWIGUpcast;
    public static IntPtr UIElement_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _UIElement_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr UIElementCollection_SWIGUpcastDelegate(IntPtr jarg1);
    public static UIElementCollection_SWIGUpcastDelegate _UIElementCollection_SWIGUpcast;
    public static IntPtr UIElementCollection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _UIElementCollection_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr TriggerCollection_SWIGUpcastDelegate(IntPtr jarg1);
    public static TriggerCollection_SWIGUpcastDelegate _TriggerCollection_SWIGUpcast;
    public static IntPtr TriggerCollection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _TriggerCollection_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr BaseSetter_SWIGUpcastDelegate(IntPtr jarg1);
    public static BaseSetter_SWIGUpcastDelegate _BaseSetter_SWIGUpcast;
    public static IntPtr BaseSetter_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _BaseSetter_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr BaseDictionary_SWIGUpcastDelegate(IntPtr jarg1);
    public static BaseDictionary_SWIGUpcastDelegate _BaseDictionary_SWIGUpcast;
    public static IntPtr BaseDictionary_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _BaseDictionary_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ResourceDictionary_SWIGUpcastDelegate(IntPtr jarg1);
    public static ResourceDictionary_SWIGUpcastDelegate _ResourceDictionary_SWIGUpcast;
    public static IntPtr ResourceDictionary_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ResourceDictionary_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ResourceKeyString_SWIGUpcastDelegate(IntPtr jarg1);
    public static ResourceKeyString_SWIGUpcastDelegate _ResourceKeyString_SWIGUpcast;
    public static IntPtr ResourceKeyString_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ResourceKeyString_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ResourceKeyType_SWIGUpcastDelegate(IntPtr jarg1);
    public static ResourceKeyType_SWIGUpcastDelegate _ResourceKeyType_SWIGUpcast;
    public static IntPtr ResourceKeyType_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ResourceKeyType_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Style_SWIGUpcastDelegate(IntPtr jarg1);
    public static Style_SWIGUpcastDelegate _Style_SWIGUpcast;
    public static IntPtr Style_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Style_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr TimeManagerRef_SWIGUpcastDelegate(IntPtr jarg1);
    public static TimeManagerRef_SWIGUpcastDelegate _TimeManagerRef_SWIGUpcast;
    public static IntPtr TimeManagerRef_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _TimeManagerRef_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr FrameworkElement_SWIGUpcastDelegate(IntPtr jarg1);
    public static FrameworkElement_SWIGUpcastDelegate _FrameworkElement_SWIGUpcast;
    public static IntPtr FrameworkElement_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _FrameworkElement_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr FrameworkTemplate_SWIGUpcastDelegate(IntPtr jarg1);
    public static FrameworkTemplate_SWIGUpcastDelegate _FrameworkTemplate_SWIGUpcast;
    public static IntPtr FrameworkTemplate_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _FrameworkTemplate_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ControlTemplate_SWIGUpcastDelegate(IntPtr jarg1);
    public static ControlTemplate_SWIGUpcastDelegate _ControlTemplate_SWIGUpcast;
    public static IntPtr ControlTemplate_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ControlTemplate_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Control_SWIGUpcastDelegate(IntPtr jarg1);
    public static Control_SWIGUpcastDelegate _Control_SWIGUpcast;
    public static IntPtr Control_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Control_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ContentControl_SWIGUpcastDelegate(IntPtr jarg1);
    public static ContentControl_SWIGUpcastDelegate _ContentControl_SWIGUpcast;
    public static IntPtr ContentControl_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ContentControl_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Decorator_SWIGUpcastDelegate(IntPtr jarg1);
    public static Decorator_SWIGUpcastDelegate _Decorator_SWIGUpcast;
    public static IntPtr Decorator_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Decorator_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Panel_SWIGUpcastDelegate(IntPtr jarg1);
    public static Panel_SWIGUpcastDelegate _Panel_SWIGUpcast;
    public static IntPtr Panel_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Panel_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr RoutedEvent_SWIGUpcastDelegate(IntPtr jarg1);
    public static RoutedEvent_SWIGUpcastDelegate _RoutedEvent_SWIGUpcast;
    public static IntPtr RoutedEvent_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _RoutedEvent_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr RoutedEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static RoutedEventArgs_SWIGUpcastDelegate _RoutedEventArgs_SWIGUpcast;
    public static IntPtr RoutedEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _RoutedEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ItemsControl_SWIGUpcastDelegate(IntPtr jarg1);
    public static ItemsControl_SWIGUpcastDelegate _ItemsControl_SWIGUpcast;
    public static IntPtr ItemsControl_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ItemsControl_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr SelectionChangedEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static SelectionChangedEventArgs_SWIGUpcastDelegate _SelectionChangedEventArgs_SWIGUpcast;
    public static IntPtr SelectionChangedEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _SelectionChangedEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Selector_SWIGUpcastDelegate(IntPtr jarg1);
    public static Selector_SWIGUpcastDelegate _Selector_SWIGUpcast;
    public static IntPtr Selector_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Selector_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr AdornerDecorator_SWIGUpcastDelegate(IntPtr jarg1);
    public static AdornerDecorator_SWIGUpcastDelegate _AdornerDecorator_SWIGUpcast;
    public static IntPtr AdornerDecorator_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _AdornerDecorator_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Animatable_SWIGUpcastDelegate(IntPtr jarg1);
    public static Animatable_SWIGUpcastDelegate _Animatable_SWIGUpcast;
    public static IntPtr Animatable_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Animatable_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Geometry_SWIGUpcastDelegate(IntPtr jarg1);
    public static Geometry_SWIGUpcastDelegate _Geometry_SWIGUpcast;
    public static IntPtr Geometry_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Geometry_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ImageSource_SWIGUpcastDelegate(IntPtr jarg1);
    public static ImageSource_SWIGUpcastDelegate _ImageSource_SWIGUpcast;
    public static IntPtr ImageSource_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ImageSource_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Application_SWIGUpcastDelegate(IntPtr jarg1);
    public static Application_SWIGUpcastDelegate _Application_SWIGUpcast;
    public static IntPtr Application_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Application_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr AtlasSource_SWIGUpcastDelegate(IntPtr jarg1);
    public static AtlasSource_SWIGUpcastDelegate _AtlasSource_SWIGUpcast;
    public static IntPtr AtlasSource_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _AtlasSource_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr BaseBinding_SWIGUpcastDelegate(IntPtr jarg1);
    public static BaseBinding_SWIGUpcastDelegate _BaseBinding_SWIGUpcast;
    public static IntPtr BaseBinding_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _BaseBinding_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr BaseBindingExpression_SWIGUpcastDelegate(IntPtr jarg1);
    public static BaseBindingExpression_SWIGUpcastDelegate _BaseBindingExpression_SWIGUpcast;
    public static IntPtr BaseBindingExpression_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _BaseBindingExpression_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr BaseButton_SWIGUpcastDelegate(IntPtr jarg1);
    public static BaseButton_SWIGUpcastDelegate _BaseButton_SWIGUpcast;
    public static IntPtr BaseButton_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _BaseButton_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ToggleButton_SWIGUpcastDelegate(IntPtr jarg1);
    public static ToggleButton_SWIGUpcastDelegate _ToggleButton_SWIGUpcast;
    public static IntPtr ToggleButton_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ToggleButton_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr BaseCommand_SWIGUpcastDelegate(IntPtr jarg1);
    public static BaseCommand_SWIGUpcastDelegate _BaseCommand_SWIGUpcast;
    public static IntPtr BaseCommand_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _BaseCommand_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr BaseDefinition_SWIGUpcastDelegate(IntPtr jarg1);
    public static BaseDefinition_SWIGUpcastDelegate _BaseDefinition_SWIGUpcast;
    public static IntPtr BaseDefinition_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _BaseDefinition_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr BaseMenu_SWIGUpcastDelegate(IntPtr jarg1);
    public static BaseMenu_SWIGUpcastDelegate _BaseMenu_SWIGUpcast;
    public static IntPtr BaseMenu_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _BaseMenu_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr BaseTextBox_SWIGUpcastDelegate(IntPtr jarg1);
    public static BaseTextBox_SWIGUpcastDelegate _BaseTextBox_SWIGUpcast;
    public static IntPtr BaseTextBox_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _BaseTextBox_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr BaseTrigger_SWIGUpcastDelegate(IntPtr jarg1);
    public static BaseTrigger_SWIGUpcastDelegate _BaseTrigger_SWIGUpcast;
    public static IntPtr BaseTrigger_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _BaseTrigger_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr BaseValueConverter_SWIGUpcastDelegate(IntPtr jarg1);
    public static BaseValueConverter_SWIGUpcastDelegate _BaseValueConverter_SWIGUpcast;
    public static IntPtr BaseValueConverter_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _BaseValueConverter_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Binding_SWIGUpcastDelegate(IntPtr jarg1);
    public static Binding_SWIGUpcastDelegate _Binding_SWIGUpcast;
    public static IntPtr Binding_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Binding_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr BitmapSource_SWIGUpcastDelegate(IntPtr jarg1);
    public static BitmapSource_SWIGUpcastDelegate _BitmapSource_SWIGUpcast;
    public static IntPtr BitmapSource_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _BitmapSource_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Border_SWIGUpcastDelegate(IntPtr jarg1);
    public static Border_SWIGUpcastDelegate _Border_SWIGUpcast;
    public static IntPtr Border_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Border_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Brush_SWIGUpcastDelegate(IntPtr jarg1);
    public static Brush_SWIGUpcastDelegate _Brush_SWIGUpcast;
    public static IntPtr Brush_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Brush_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr BulletDecorator_SWIGUpcastDelegate(IntPtr jarg1);
    public static BulletDecorator_SWIGUpcastDelegate _BulletDecorator_SWIGUpcast;
    public static IntPtr BulletDecorator_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _BulletDecorator_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Button_SWIGUpcastDelegate(IntPtr jarg1);
    public static Button_SWIGUpcastDelegate _Button_SWIGUpcast;
    public static IntPtr Button_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Button_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Canvas_SWIGUpcastDelegate(IntPtr jarg1);
    public static Canvas_SWIGUpcastDelegate _Canvas_SWIGUpcast;
    public static IntPtr Canvas_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Canvas_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr CheckBox_SWIGUpcastDelegate(IntPtr jarg1);
    public static CheckBox_SWIGUpcastDelegate _CheckBox_SWIGUpcast;
    public static IntPtr CheckBox_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _CheckBox_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr CollectionView_SWIGUpcastDelegate(IntPtr jarg1);
    public static CollectionView_SWIGUpcastDelegate _CollectionView_SWIGUpcast;
    public static IntPtr CollectionView_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _CollectionView_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr CollectionViewSource_SWIGUpcastDelegate(IntPtr jarg1);
    public static CollectionViewSource_SWIGUpcastDelegate _CollectionViewSource_SWIGUpcast;
    public static IntPtr CollectionViewSource_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _CollectionViewSource_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ColumnDefinition_SWIGUpcastDelegate(IntPtr jarg1);
    public static ColumnDefinition_SWIGUpcastDelegate _ColumnDefinition_SWIGUpcast;
    public static IntPtr ColumnDefinition_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ColumnDefinition_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr CombinedGeometry_SWIGUpcastDelegate(IntPtr jarg1);
    public static CombinedGeometry_SWIGUpcastDelegate _CombinedGeometry_SWIGUpcast;
    public static IntPtr CombinedGeometry_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _CombinedGeometry_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ComboBox_SWIGUpcastDelegate(IntPtr jarg1);
    public static ComboBox_SWIGUpcastDelegate _ComboBox_SWIGUpcast;
    public static IntPtr ComboBox_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ComboBox_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ListBoxItem_SWIGUpcastDelegate(IntPtr jarg1);
    public static ListBoxItem_SWIGUpcastDelegate _ListBoxItem_SWIGUpcast;
    public static IntPtr ListBoxItem_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ListBoxItem_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ComboBoxItem_SWIGUpcastDelegate(IntPtr jarg1);
    public static ComboBoxItem_SWIGUpcastDelegate _ComboBoxItem_SWIGUpcast;
    public static IntPtr ComboBoxItem_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ComboBoxItem_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr CanExecuteRoutedEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static CanExecuteRoutedEventArgs_SWIGUpcastDelegate _CanExecuteRoutedEventArgs_SWIGUpcast;
    public static IntPtr CanExecuteRoutedEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _CanExecuteRoutedEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ExecutedRoutedEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static ExecutedRoutedEventArgs_SWIGUpcastDelegate _ExecutedRoutedEventArgs_SWIGUpcast;
    public static IntPtr ExecutedRoutedEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ExecutedRoutedEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr CommandBinding_SWIGUpcastDelegate(IntPtr jarg1);
    public static CommandBinding_SWIGUpcastDelegate _CommandBinding_SWIGUpcast;
    public static IntPtr CommandBinding_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _CommandBinding_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr UITransform_SWIGUpcastDelegate(IntPtr jarg1);
    public static UITransform_SWIGUpcastDelegate _UITransform_SWIGUpcast;
    public static IntPtr UITransform_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _UITransform_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr CompositeTransform_SWIGUpcastDelegate(IntPtr jarg1);
    public static CompositeTransform_SWIGUpcastDelegate _CompositeTransform_SWIGUpcast;
    public static IntPtr CompositeTransform_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _CompositeTransform_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Condition_SWIGUpcastDelegate(IntPtr jarg1);
    public static Condition_SWIGUpcastDelegate _Condition_SWIGUpcast;
    public static IntPtr Condition_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Condition_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ContentPresenter_SWIGUpcastDelegate(IntPtr jarg1);
    public static ContentPresenter_SWIGUpcastDelegate _ContentPresenter_SWIGUpcast;
    public static IntPtr ContentPresenter_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ContentPresenter_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ContextMenu_SWIGUpcastDelegate(IntPtr jarg1);
    public static ContextMenu_SWIGUpcastDelegate _ContextMenu_SWIGUpcast;
    public static IntPtr ContextMenu_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ContextMenu_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DashStyle_SWIGUpcastDelegate(IntPtr jarg1);
    public static DashStyle_SWIGUpcastDelegate _DashStyle_SWIGUpcast;
    public static IntPtr DashStyle_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DashStyle_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DataTemplate_SWIGUpcastDelegate(IntPtr jarg1);
    public static DataTemplate_SWIGUpcastDelegate _DataTemplate_SWIGUpcast;
    public static IntPtr DataTemplate_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DataTemplate_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DataTemplateSelector_SWIGUpcastDelegate(IntPtr jarg1);
    public static DataTemplateSelector_SWIGUpcastDelegate _DataTemplateSelector_SWIGUpcast;
    public static IntPtr DataTemplateSelector_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DataTemplateSelector_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Dialog_SWIGUpcastDelegate(IntPtr jarg1);
    public static Dialog_SWIGUpcastDelegate _Dialog_SWIGUpcast;
    public static IntPtr Dialog_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Dialog_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DockPanel_SWIGUpcastDelegate(IntPtr jarg1);
    public static DockPanel_SWIGUpcastDelegate _DockPanel_SWIGUpcast;
    public static IntPtr DockPanel_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DockPanel_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DrawingContext_SWIGUpcastDelegate(IntPtr jarg1);
    public static DrawingContext_SWIGUpcastDelegate _DrawingContext_SWIGUpcast;
    public static IntPtr DrawingContext_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DrawingContext_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Effect_SWIGUpcastDelegate(IntPtr jarg1);
    public static Effect_SWIGUpcastDelegate _Effect_SWIGUpcast;
    public static IntPtr Effect_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Effect_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DropShadowEffect_SWIGUpcastDelegate(IntPtr jarg1);
    public static DropShadowEffect_SWIGUpcastDelegate _DropShadowEffect_SWIGUpcast;
    public static IntPtr DropShadowEffect_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DropShadowEffect_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Shape_SWIGUpcastDelegate(IntPtr jarg1);
    public static Shape_SWIGUpcastDelegate _Shape_SWIGUpcast;
    public static IntPtr Shape_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Shape_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Ellipse_SWIGUpcastDelegate(IntPtr jarg1);
    public static Ellipse_SWIGUpcastDelegate _Ellipse_SWIGUpcast;
    public static IntPtr Ellipse_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Ellipse_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr EllipseGeometry_SWIGUpcastDelegate(IntPtr jarg1);
    public static EllipseGeometry_SWIGUpcastDelegate _EllipseGeometry_SWIGUpcast;
    public static IntPtr EllipseGeometry_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _EllipseGeometry_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr EventTrigger_SWIGUpcastDelegate(IntPtr jarg1);
    public static EventTrigger_SWIGUpcastDelegate _EventTrigger_SWIGUpcast;
    public static IntPtr EventTrigger_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _EventTrigger_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr HeaderedContentControl_SWIGUpcastDelegate(IntPtr jarg1);
    public static HeaderedContentControl_SWIGUpcastDelegate _HeaderedContentControl_SWIGUpcast;
    public static IntPtr HeaderedContentControl_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _HeaderedContentControl_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Expander_SWIGUpcastDelegate(IntPtr jarg1);
    public static Expander_SWIGUpcastDelegate _Expander_SWIGUpcast;
    public static IntPtr Expander_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Expander_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr FormattedText_SWIGUpcastDelegate(IntPtr jarg1);
    public static FormattedText_SWIGUpcastDelegate _FormattedText_SWIGUpcast;
    public static IntPtr FormattedText_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _FormattedText_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ContextMenuEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static ContextMenuEventArgs_SWIGUpcastDelegate _ContextMenuEventArgs_SWIGUpcast;
    public static IntPtr ContextMenuEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ContextMenuEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ToolTipEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static ToolTipEventArgs_SWIGUpcastDelegate _ToolTipEventArgs_SWIGUpcast;
    public static IntPtr ToolTipEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ToolTipEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr RequestBringIntoViewEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static RequestBringIntoViewEventArgs_SWIGUpcastDelegate _RequestBringIntoViewEventArgs_SWIGUpcast;
    public static IntPtr RequestBringIntoViewEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _RequestBringIntoViewEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr FreezableCollection_SWIGUpcastDelegate(IntPtr jarg1);
    public static FreezableCollection_SWIGUpcastDelegate _FreezableCollection_SWIGUpcast;
    public static IntPtr FreezableCollection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _FreezableCollection_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr GeometryGroup_SWIGUpcastDelegate(IntPtr jarg1);
    public static GeometryGroup_SWIGUpcastDelegate _GeometryGroup_SWIGUpcast;
    public static IntPtr GeometryGroup_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _GeometryGroup_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr GradientBrush_SWIGUpcastDelegate(IntPtr jarg1);
    public static GradientBrush_SWIGUpcastDelegate _GradientBrush_SWIGUpcast;
    public static IntPtr GradientBrush_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _GradientBrush_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr GradientStop_SWIGUpcastDelegate(IntPtr jarg1);
    public static GradientStop_SWIGUpcastDelegate _GradientStop_SWIGUpcast;
    public static IntPtr GradientStop_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _GradientStop_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr GradientStopCollection_SWIGUpcastDelegate(IntPtr jarg1);
    public static GradientStopCollection_SWIGUpcastDelegate _GradientStopCollection_SWIGUpcast;
    public static IntPtr GradientStopCollection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _GradientStopCollection_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Grid_SWIGUpcastDelegate(IntPtr jarg1);
    public static Grid_SWIGUpcastDelegate _Grid_SWIGUpcast;
    public static IntPtr Grid_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Grid_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr GroupBox_SWIGUpcastDelegate(IntPtr jarg1);
    public static GroupBox_SWIGUpcastDelegate _GroupBox_SWIGUpcast;
    public static IntPtr GroupBox_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _GroupBox_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr HeaderedItemsControl_SWIGUpcastDelegate(IntPtr jarg1);
    public static HeaderedItemsControl_SWIGUpcastDelegate _HeaderedItemsControl_SWIGUpcast;
    public static IntPtr HeaderedItemsControl_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _HeaderedItemsControl_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr IconSource_SWIGUpcastDelegate(IntPtr jarg1);
    public static IconSource_SWIGUpcastDelegate _IconSource_SWIGUpcast;
    public static IntPtr IconSource_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _IconSource_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Image_SWIGUpcastDelegate(IntPtr jarg1);
    public static Image_SWIGUpcastDelegate _Image_SWIGUpcast;
    public static IntPtr Image_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Image_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ImageAtlasList_SWIGUpcastDelegate(IntPtr jarg1);
    public static ImageAtlasList_SWIGUpcastDelegate _ImageAtlasList_SWIGUpcast;
    public static IntPtr ImageAtlasList_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ImageAtlasList_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr TileBrush_SWIGUpcastDelegate(IntPtr jarg1);
    public static TileBrush_SWIGUpcastDelegate _TileBrush_SWIGUpcast;
    public static IntPtr TileBrush_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _TileBrush_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ImageBrush_SWIGUpcastDelegate(IntPtr jarg1);
    public static ImageBrush_SWIGUpcastDelegate _ImageBrush_SWIGUpcast;
    public static IntPtr ImageBrush_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ImageBrush_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr InputBinding_SWIGUpcastDelegate(IntPtr jarg1);
    public static InputBinding_SWIGUpcastDelegate _InputBinding_SWIGUpcast;
    public static IntPtr InputBinding_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _InputBinding_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr InputGesture_SWIGUpcastDelegate(IntPtr jarg1);
    public static InputGesture_SWIGUpcastDelegate _InputGesture_SWIGUpcast;
    public static IntPtr InputGesture_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _InputGesture_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ItemCollection_SWIGUpcastDelegate(IntPtr jarg1);
    public static ItemCollection_SWIGUpcastDelegate _ItemCollection_SWIGUpcast;
    public static IntPtr ItemCollection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ItemCollection_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ItemsPanelTemplate_SWIGUpcastDelegate(IntPtr jarg1);
    public static ItemsPanelTemplate_SWIGUpcastDelegate _ItemsPanelTemplate_SWIGUpcast;
    public static IntPtr ItemsPanelTemplate_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ItemsPanelTemplate_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ItemsPresenter_SWIGUpcastDelegate(IntPtr jarg1);
    public static ItemsPresenter_SWIGUpcastDelegate _ItemsPresenter_SWIGUpcast;
    public static IntPtr ItemsPresenter_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ItemsPresenter_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr KeyBinding_SWIGUpcastDelegate(IntPtr jarg1);
    public static KeyBinding_SWIGUpcastDelegate _KeyBinding_SWIGUpcast;
    public static IntPtr KeyBinding_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _KeyBinding_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Keyboard_SWIGUpcastDelegate(IntPtr jarg1);
    public static Keyboard_SWIGUpcastDelegate _Keyboard_SWIGUpcast;
    public static IntPtr Keyboard_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Keyboard_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr KeyboardNavigation_SWIGUpcastDelegate(IntPtr jarg1);
    public static KeyboardNavigation_SWIGUpcastDelegate _KeyboardNavigation_SWIGUpcast;
    public static IntPtr KeyboardNavigation_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _KeyboardNavigation_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr KeyGesture_SWIGUpcastDelegate(IntPtr jarg1);
    public static KeyGesture_SWIGUpcastDelegate _KeyGesture_SWIGUpcast;
    public static IntPtr KeyGesture_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _KeyGesture_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Label_SWIGUpcastDelegate(IntPtr jarg1);
    public static Label_SWIGUpcastDelegate _Label_SWIGUpcast;
    public static IntPtr Label_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Label_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Line_SWIGUpcastDelegate(IntPtr jarg1);
    public static Line_SWIGUpcastDelegate _Line_SWIGUpcast;
    public static IntPtr Line_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Line_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr LinearGradientBrush_SWIGUpcastDelegate(IntPtr jarg1);
    public static LinearGradientBrush_SWIGUpcastDelegate _LinearGradientBrush_SWIGUpcast;
    public static IntPtr LinearGradientBrush_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _LinearGradientBrush_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr LineGeometry_SWIGUpcastDelegate(IntPtr jarg1);
    public static LineGeometry_SWIGUpcastDelegate _LineGeometry_SWIGUpcast;
    public static IntPtr LineGeometry_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _LineGeometry_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ListBox_SWIGUpcastDelegate(IntPtr jarg1);
    public static ListBox_SWIGUpcastDelegate _ListBox_SWIGUpcast;
    public static IntPtr ListBox_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ListBox_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Projection_SWIGUpcastDelegate(IntPtr jarg1);
    public static Projection_SWIGUpcastDelegate _Projection_SWIGUpcast;
    public static IntPtr Projection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Projection_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Matrix3DProjection_SWIGUpcastDelegate(IntPtr jarg1);
    public static Matrix3DProjection_SWIGUpcastDelegate _Matrix3DProjection_SWIGUpcast;
    public static IntPtr Matrix3DProjection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Matrix3DProjection_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr MatrixTransform_SWIGUpcastDelegate(IntPtr jarg1);
    public static MatrixTransform_SWIGUpcastDelegate _MatrixTransform_SWIGUpcast;
    public static IntPtr MatrixTransform_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _MatrixTransform_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Menu_SWIGUpcastDelegate(IntPtr jarg1);
    public static Menu_SWIGUpcastDelegate _Menu_SWIGUpcast;
    public static IntPtr Menu_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Menu_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr MenuItem_SWIGUpcastDelegate(IntPtr jarg1);
    public static MenuItem_SWIGUpcastDelegate _MenuItem_SWIGUpcast;
    public static IntPtr MenuItem_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _MenuItem_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr UserControl_SWIGUpcastDelegate(IntPtr jarg1);
    public static UserControl_SWIGUpcastDelegate _UserControl_SWIGUpcast;
    public static IntPtr UserControl_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _UserControl_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr MessageDialog_SWIGUpcastDelegate(IntPtr jarg1);
    public static MessageDialog_SWIGUpcastDelegate _MessageDialog_SWIGUpcast;
    public static IntPtr MessageDialog_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _MessageDialog_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Mouse_SWIGUpcastDelegate(IntPtr jarg1);
    public static Mouse_SWIGUpcastDelegate _Mouse_SWIGUpcast;
    public static IntPtr Mouse_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Mouse_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr MultiTrigger_SWIGUpcastDelegate(IntPtr jarg1);
    public static MultiTrigger_SWIGUpcastDelegate _MultiTrigger_SWIGUpcast;
    public static IntPtr MultiTrigger_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _MultiTrigger_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr NameScope_SWIGUpcastDelegate(IntPtr jarg1);
    public static NameScope_SWIGUpcastDelegate _NameScope_SWIGUpcast;
    public static IntPtr NameScope_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _NameScope_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Page_SWIGUpcastDelegate(IntPtr jarg1);
    public static Page_SWIGUpcastDelegate _Page_SWIGUpcast;
    public static IntPtr Page_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Page_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr PasswordBox_SWIGUpcastDelegate(IntPtr jarg1);
    public static PasswordBox_SWIGUpcastDelegate _PasswordBox_SWIGUpcast;
    public static IntPtr PasswordBox_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _PasswordBox_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Path_SWIGUpcastDelegate(IntPtr jarg1);
    public static Path_SWIGUpcastDelegate _Path_SWIGUpcast;
    public static IntPtr Path_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Path_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Pen_SWIGUpcastDelegate(IntPtr jarg1);
    public static Pen_SWIGUpcastDelegate _Pen_SWIGUpcast;
    public static IntPtr Pen_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Pen_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr PlaneProjection_SWIGUpcastDelegate(IntPtr jarg1);
    public static PlaneProjection_SWIGUpcastDelegate _PlaneProjection_SWIGUpcast;
    public static IntPtr PlaneProjection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _PlaneProjection_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Popup_SWIGUpcastDelegate(IntPtr jarg1);
    public static Popup_SWIGUpcastDelegate _Popup_SWIGUpcast;
    public static IntPtr Popup_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Popup_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr RangeBase_SWIGUpcastDelegate(IntPtr jarg1);
    public static RangeBase_SWIGUpcastDelegate _RangeBase_SWIGUpcast;
    public static IntPtr RangeBase_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _RangeBase_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ProgressBar_SWIGUpcastDelegate(IntPtr jarg1);
    public static ProgressBar_SWIGUpcastDelegate _ProgressBar_SWIGUpcast;
    public static IntPtr ProgressBar_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ProgressBar_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr PropertyPath_SWIGUpcastDelegate(IntPtr jarg1);
    public static PropertyPath_SWIGUpcastDelegate _PropertyPath_SWIGUpcast;
    public static IntPtr PropertyPath_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _PropertyPath_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr RadialGradientBrush_SWIGUpcastDelegate(IntPtr jarg1);
    public static RadialGradientBrush_SWIGUpcastDelegate _RadialGradientBrush_SWIGUpcast;
    public static IntPtr RadialGradientBrush_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _RadialGradientBrush_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr RadioButton_SWIGUpcastDelegate(IntPtr jarg1);
    public static RadioButton_SWIGUpcastDelegate _RadioButton_SWIGUpcast;
    public static IntPtr RadioButton_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _RadioButton_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Rectangle_SWIGUpcastDelegate(IntPtr jarg1);
    public static Rectangle_SWIGUpcastDelegate _Rectangle_SWIGUpcast;
    public static IntPtr Rectangle_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Rectangle_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr RectangleGeometry_SWIGUpcastDelegate(IntPtr jarg1);
    public static RectangleGeometry_SWIGUpcastDelegate _RectangleGeometry_SWIGUpcast;
    public static IntPtr RectangleGeometry_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _RectangleGeometry_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr RelativeSource_SWIGUpcastDelegate(IntPtr jarg1);
    public static RelativeSource_SWIGUpcastDelegate _RelativeSource_SWIGUpcast;
    public static IntPtr RelativeSource_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _RelativeSource_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr RepeatButton_SWIGUpcastDelegate(IntPtr jarg1);
    public static RepeatButton_SWIGUpcastDelegate _RepeatButton_SWIGUpcast;
    public static IntPtr RepeatButton_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _RepeatButton_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr RotateTransform_SWIGUpcastDelegate(IntPtr jarg1);
    public static RotateTransform_SWIGUpcastDelegate _RotateTransform_SWIGUpcast;
    public static IntPtr RotateTransform_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _RotateTransform_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr RoutedCommand_SWIGUpcastDelegate(IntPtr jarg1);
    public static RoutedCommand_SWIGUpcastDelegate _RoutedCommand_SWIGUpcast;
    public static IntPtr RoutedCommand_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _RoutedCommand_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr RoutedUICommand_SWIGUpcastDelegate(IntPtr jarg1);
    public static RoutedUICommand_SWIGUpcastDelegate _RoutedUICommand_SWIGUpcast;
    public static IntPtr RoutedUICommand_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _RoutedUICommand_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr RowDefinition_SWIGUpcastDelegate(IntPtr jarg1);
    public static RowDefinition_SWIGUpcastDelegate _RowDefinition_SWIGUpcast;
    public static IntPtr RowDefinition_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _RowDefinition_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ScaleTransform_SWIGUpcastDelegate(IntPtr jarg1);
    public static ScaleTransform_SWIGUpcastDelegate _ScaleTransform_SWIGUpcast;
    public static IntPtr ScaleTransform_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ScaleTransform_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ScrollEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static ScrollEventArgs_SWIGUpcastDelegate _ScrollEventArgs_SWIGUpcast;
    public static IntPtr ScrollEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ScrollEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ScrollBar_SWIGUpcastDelegate(IntPtr jarg1);
    public static ScrollBar_SWIGUpcastDelegate _ScrollBar_SWIGUpcast;
    public static IntPtr ScrollBar_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ScrollBar_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ScrollContentPresenter_SWIGUpcastDelegate(IntPtr jarg1);
    public static ScrollContentPresenter_SWIGUpcastDelegate _ScrollContentPresenter_SWIGUpcast;
    public static IntPtr ScrollContentPresenter_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ScrollContentPresenter_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ScrollChangedEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static ScrollChangedEventArgs_SWIGUpcastDelegate _ScrollChangedEventArgs_SWIGUpcast;
    public static IntPtr ScrollChangedEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ScrollChangedEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ScrollViewer_SWIGUpcastDelegate(IntPtr jarg1);
    public static ScrollViewer_SWIGUpcastDelegate _ScrollViewer_SWIGUpcast;
    public static IntPtr ScrollViewer_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ScrollViewer_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Separator_SWIGUpcastDelegate(IntPtr jarg1);
    public static Separator_SWIGUpcastDelegate _Separator_SWIGUpcast;
    public static IntPtr Separator_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Separator_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Setter_SWIGUpcastDelegate(IntPtr jarg1);
    public static Setter_SWIGUpcastDelegate _Setter_SWIGUpcast;
    public static IntPtr Setter_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Setter_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr SizeChangedEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static SizeChangedEventArgs_SWIGUpcastDelegate _SizeChangedEventArgs_SWIGUpcast;
    public static IntPtr SizeChangedEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _SizeChangedEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr SkewTransform_SWIGUpcastDelegate(IntPtr jarg1);
    public static SkewTransform_SWIGUpcastDelegate _SkewTransform_SWIGUpcast;
    public static IntPtr SkewTransform_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _SkewTransform_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Slider_SWIGUpcastDelegate(IntPtr jarg1);
    public static Slider_SWIGUpcastDelegate _Slider_SWIGUpcast;
    public static IntPtr Slider_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Slider_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr SolidColorBrush_SWIGUpcastDelegate(IntPtr jarg1);
    public static SolidColorBrush_SWIGUpcastDelegate _SolidColorBrush_SWIGUpcast;
    public static IntPtr SolidColorBrush_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _SolidColorBrush_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr StackPanel_SWIGUpcastDelegate(IntPtr jarg1);
    public static StackPanel_SWIGUpcastDelegate _StackPanel_SWIGUpcast;
    public static IntPtr StackPanel_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _StackPanel_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr StatusBar_SWIGUpcastDelegate(IntPtr jarg1);
    public static StatusBar_SWIGUpcastDelegate _StatusBar_SWIGUpcast;
    public static IntPtr StatusBar_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _StatusBar_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr StatusBarItem_SWIGUpcastDelegate(IntPtr jarg1);
    public static StatusBarItem_SWIGUpcastDelegate _StatusBarItem_SWIGUpcast;
    public static IntPtr StatusBarItem_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _StatusBarItem_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr StreamGeometry_SWIGUpcastDelegate(IntPtr jarg1);
    public static StreamGeometry_SWIGUpcastDelegate _StreamGeometry_SWIGUpcast;
    public static IntPtr StreamGeometry_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _StreamGeometry_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr TabControl_SWIGUpcastDelegate(IntPtr jarg1);
    public static TabControl_SWIGUpcastDelegate _TabControl_SWIGUpcast;
    public static IntPtr TabControl_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _TabControl_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr TabItem_SWIGUpcastDelegate(IntPtr jarg1);
    public static TabItem_SWIGUpcastDelegate _TabItem_SWIGUpcast;
    public static IntPtr TabItem_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _TabItem_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr TabPanel_SWIGUpcastDelegate(IntPtr jarg1);
    public static TabPanel_SWIGUpcastDelegate _TabPanel_SWIGUpcast;
    public static IntPtr TabPanel_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _TabPanel_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr TemplateBinding_SWIGUpcastDelegate(IntPtr jarg1);
    public static TemplateBinding_SWIGUpcastDelegate _TemplateBinding_SWIGUpcast;
    public static IntPtr TemplateBinding_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _TemplateBinding_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr TextBlock_SWIGUpcastDelegate(IntPtr jarg1);
    public static TextBlock_SWIGUpcastDelegate _TextBlock_SWIGUpcast;
    public static IntPtr TextBlock_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _TextBlock_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr TextBox_SWIGUpcastDelegate(IntPtr jarg1);
    public static TextBox_SWIGUpcastDelegate _TextBox_SWIGUpcast;
    public static IntPtr TextBox_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _TextBox_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr TextureSource_SWIGUpcastDelegate(IntPtr jarg1);
    public static TextureSource_SWIGUpcastDelegate _TextureSource_SWIGUpcast;
    public static IntPtr TextureSource_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _TextureSource_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DragCompletedEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static DragCompletedEventArgs_SWIGUpcastDelegate _DragCompletedEventArgs_SWIGUpcast;
    public static IntPtr DragCompletedEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DragCompletedEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DragStartedEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static DragStartedEventArgs_SWIGUpcastDelegate _DragStartedEventArgs_SWIGUpcast;
    public static IntPtr DragStartedEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DragStartedEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DragDeltaEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static DragDeltaEventArgs_SWIGUpcastDelegate _DragDeltaEventArgs_SWIGUpcast;
    public static IntPtr DragDeltaEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DragDeltaEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Thumb_SWIGUpcastDelegate(IntPtr jarg1);
    public static Thumb_SWIGUpcastDelegate _Thumb_SWIGUpcast;
    public static IntPtr Thumb_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Thumb_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr TickBar_SWIGUpcastDelegate(IntPtr jarg1);
    public static TickBar_SWIGUpcastDelegate _TickBar_SWIGUpcast;
    public static IntPtr TickBar_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _TickBar_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ToolBar_SWIGUpcastDelegate(IntPtr jarg1);
    public static ToolBar_SWIGUpcastDelegate _ToolBar_SWIGUpcast;
    public static IntPtr ToolBar_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ToolBar_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ToolBarOverflowPanel_SWIGUpcastDelegate(IntPtr jarg1);
    public static ToolBarOverflowPanel_SWIGUpcastDelegate _ToolBarOverflowPanel_SWIGUpcast;
    public static IntPtr ToolBarOverflowPanel_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ToolBarOverflowPanel_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ToolBarPanel_SWIGUpcastDelegate(IntPtr jarg1);
    public static ToolBarPanel_SWIGUpcastDelegate _ToolBarPanel_SWIGUpcast;
    public static IntPtr ToolBarPanel_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ToolBarPanel_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ToolBarTray_SWIGUpcastDelegate(IntPtr jarg1);
    public static ToolBarTray_SWIGUpcastDelegate _ToolBarTray_SWIGUpcast;
    public static IntPtr ToolBarTray_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ToolBarTray_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ToolTip_SWIGUpcastDelegate(IntPtr jarg1);
    public static ToolTip_SWIGUpcastDelegate _ToolTip_SWIGUpcast;
    public static IntPtr ToolTip_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ToolTip_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Track_SWIGUpcastDelegate(IntPtr jarg1);
    public static Track_SWIGUpcastDelegate _Track_SWIGUpcast;
    public static IntPtr Track_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Track_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr TransformGroup_SWIGUpcastDelegate(IntPtr jarg1);
    public static TransformGroup_SWIGUpcastDelegate _TransformGroup_SWIGUpcast;
    public static IntPtr TransformGroup_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _TransformGroup_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr TranslateTransform_SWIGUpcastDelegate(IntPtr jarg1);
    public static TranslateTransform_SWIGUpcastDelegate _TranslateTransform_SWIGUpcast;
    public static IntPtr TranslateTransform_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _TranslateTransform_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr TreeView_SWIGUpcastDelegate(IntPtr jarg1);
    public static TreeView_SWIGUpcastDelegate _TreeView_SWIGUpcast;
    public static IntPtr TreeView_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _TreeView_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr TreeViewItem_SWIGUpcastDelegate(IntPtr jarg1);
    public static TreeViewItem_SWIGUpcastDelegate _TreeViewItem_SWIGUpcast;
    public static IntPtr TreeViewItem_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _TreeViewItem_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Trigger_SWIGUpcastDelegate(IntPtr jarg1);
    public static Trigger_SWIGUpcastDelegate _Trigger_SWIGUpcast;
    public static IntPtr Trigger_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Trigger_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr TriggerAction_SWIGUpcastDelegate(IntPtr jarg1);
    public static TriggerAction_SWIGUpcastDelegate _TriggerAction_SWIGUpcast;
    public static IntPtr TriggerAction_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _TriggerAction_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr UIElementData_SWIGUpcastDelegate(IntPtr jarg1);
    public static UIElementData_SWIGUpcastDelegate _UIElementData_SWIGUpcast;
    public static IntPtr UIElementData_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _UIElementData_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr MouseEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static MouseEventArgs_SWIGUpcastDelegate _MouseEventArgs_SWIGUpcast;
    public static IntPtr MouseEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _MouseEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr MouseButtonEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static MouseButtonEventArgs_SWIGUpcastDelegate _MouseButtonEventArgs_SWIGUpcast;
    public static IntPtr MouseButtonEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _MouseButtonEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr MouseWheelEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static MouseWheelEventArgs_SWIGUpcastDelegate _MouseWheelEventArgs_SWIGUpcast;
    public static IntPtr MouseWheelEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _MouseWheelEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr AccessKeyEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static AccessKeyEventArgs_SWIGUpcastDelegate _AccessKeyEventArgs_SWIGUpcast;
    public static IntPtr AccessKeyEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _AccessKeyEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr KeyboardFocusChangedEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static KeyboardFocusChangedEventArgs_SWIGUpcastDelegate _KeyboardFocusChangedEventArgs_SWIGUpcast;
    public static IntPtr KeyboardFocusChangedEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _KeyboardFocusChangedEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr KeyEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static KeyEventArgs_SWIGUpcastDelegate _KeyEventArgs_SWIGUpcast;
    public static IntPtr KeyEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _KeyEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DragEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static DragEventArgs_SWIGUpcastDelegate _DragEventArgs_SWIGUpcast;
    public static IntPtr DragEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DragEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr GiveFeedbackEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static GiveFeedbackEventArgs_SWIGUpcastDelegate _GiveFeedbackEventArgs_SWIGUpcast;
    public static IntPtr GiveFeedbackEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _GiveFeedbackEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr QueryContinueDragEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static QueryContinueDragEventArgs_SWIGUpcastDelegate _QueryContinueDragEventArgs_SWIGUpcast;
    public static IntPtr QueryContinueDragEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _QueryContinueDragEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr TextCompositionEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static TextCompositionEventArgs_SWIGUpcastDelegate _TextCompositionEventArgs_SWIGUpcast;
    public static IntPtr TextCompositionEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _TextCompositionEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr QueryCursorEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static QueryCursorEventArgs_SWIGUpcastDelegate _QueryCursorEventArgs_SWIGUpcast;
    public static IntPtr QueryCursorEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _QueryCursorEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Viewbox_SWIGUpcastDelegate(IntPtr jarg1);
    public static Viewbox_SWIGUpcastDelegate _Viewbox_SWIGUpcast;
    public static IntPtr Viewbox_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Viewbox_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr VisualBrush_SWIGUpcastDelegate(IntPtr jarg1);
    public static VisualBrush_SWIGUpcastDelegate _VisualBrush_SWIGUpcast;
    public static IntPtr VisualBrush_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _VisualBrush_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr CancelEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static CancelEventArgs_SWIGUpcastDelegate _CancelEventArgs_SWIGUpcast;
    public static IntPtr CancelEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _CancelEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Window_SWIGUpcastDelegate(IntPtr jarg1);
    public static Window_SWIGUpcastDelegate _Window_SWIGUpcast;
    public static IntPtr Window_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Window_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr WrapPanel_SWIGUpcastDelegate(IntPtr jarg1);
    public static WrapPanel_SWIGUpcastDelegate _WrapPanel_SWIGUpcast;
    public static IntPtr WrapPanel_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _WrapPanel_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr MScorlibBoolean_SWIGUpcastDelegate(IntPtr jarg1);
    public static MScorlibBoolean_SWIGUpcastDelegate _MScorlibBoolean_SWIGUpcast;
    public static IntPtr MScorlibBoolean_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _MScorlibBoolean_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr MScorlibString_SWIGUpcastDelegate(IntPtr jarg1);
    public static MScorlibString_SWIGUpcastDelegate _MScorlibString_SWIGUpcast;
    public static IntPtr MScorlibString_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _MScorlibString_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr AnimationTimeline_SWIGUpcastDelegate(IntPtr jarg1);
    public static AnimationTimeline_SWIGUpcastDelegate _AnimationTimeline_SWIGUpcast;
    public static IntPtr AnimationTimeline_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _AnimationTimeline_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr EasingFunctionBase_SWIGUpcastDelegate(IntPtr jarg1);
    public static EasingFunctionBase_SWIGUpcastDelegate _EasingFunctionBase_SWIGUpcast;
    public static IntPtr EasingFunctionBase_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _EasingFunctionBase_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr BackEase_SWIGUpcastDelegate(IntPtr jarg1);
    public static BackEase_SWIGUpcastDelegate _BackEase_SWIGUpcast;
    public static IntPtr BackEase_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _BackEase_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr BaseAnimation_SWIGUpcastDelegate(IntPtr jarg1);
    public static BaseAnimation_SWIGUpcastDelegate _BaseAnimation_SWIGUpcast;
    public static IntPtr BaseAnimation_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _BaseAnimation_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr BeginStoryboard_SWIGUpcastDelegate(IntPtr jarg1);
    public static BeginStoryboard_SWIGUpcastDelegate _BeginStoryboard_SWIGUpcast;
    public static IntPtr BeginStoryboard_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _BeginStoryboard_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr BounceEase_SWIGUpcastDelegate(IntPtr jarg1);
    public static BounceEase_SWIGUpcastDelegate _BounceEase_SWIGUpcast;
    public static IntPtr BounceEase_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _BounceEase_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr CircleEase_SWIGUpcastDelegate(IntPtr jarg1);
    public static CircleEase_SWIGUpcastDelegate _CircleEase_SWIGUpcast;
    public static IntPtr CircleEase_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _CircleEase_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ClockController_SWIGUpcastDelegate(IntPtr jarg1);
    public static ClockController_SWIGUpcastDelegate _ClockController_SWIGUpcast;
    public static IntPtr ClockController_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ClockController_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ClockGroup_SWIGUpcastDelegate(IntPtr jarg1);
    public static ClockGroup_SWIGUpcastDelegate _ClockGroup_SWIGUpcast;
    public static IntPtr ClockGroup_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ClockGroup_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ControllableStoryboardAction_SWIGUpcastDelegate(IntPtr jarg1);
    public static ControllableStoryboardAction_SWIGUpcastDelegate _ControllableStoryboardAction_SWIGUpcast;
    public static IntPtr ControllableStoryboardAction_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ControllableStoryboardAction_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr CubicEase_SWIGUpcastDelegate(IntPtr jarg1);
    public static CubicEase_SWIGUpcastDelegate _CubicEase_SWIGUpcast;
    public static IntPtr CubicEase_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _CubicEase_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ElasticEase_SWIGUpcastDelegate(IntPtr jarg1);
    public static ElasticEase_SWIGUpcastDelegate _ElasticEase_SWIGUpcast;
    public static IntPtr ElasticEase_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ElasticEase_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ExponentialEase_SWIGUpcastDelegate(IntPtr jarg1);
    public static ExponentialEase_SWIGUpcastDelegate _ExponentialEase_SWIGUpcast;
    public static IntPtr ExponentialEase_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ExponentialEase_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr KeySpline_SWIGUpcastDelegate(IntPtr jarg1);
    public static KeySpline_SWIGUpcastDelegate _KeySpline_SWIGUpcast;
    public static IntPtr KeySpline_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _KeySpline_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr TimelineEventArgs_SWIGUpcastDelegate(IntPtr jarg1);
    public static TimelineEventArgs_SWIGUpcastDelegate _TimelineEventArgs_SWIGUpcast;
    public static IntPtr TimelineEventArgs_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _TimelineEventArgs_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Timeline_SWIGUpcastDelegate(IntPtr jarg1);
    public static Timeline_SWIGUpcastDelegate _Timeline_SWIGUpcast;
    public static IntPtr Timeline_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Timeline_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr TimelineGroup_SWIGUpcastDelegate(IntPtr jarg1);
    public static TimelineGroup_SWIGUpcastDelegate _TimelineGroup_SWIGUpcast;
    public static IntPtr TimelineGroup_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _TimelineGroup_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ParallelTimeline_SWIGUpcastDelegate(IntPtr jarg1);
    public static ParallelTimeline_SWIGUpcastDelegate _ParallelTimeline_SWIGUpcast;
    public static IntPtr ParallelTimeline_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ParallelTimeline_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr PauseStoryboard_SWIGUpcastDelegate(IntPtr jarg1);
    public static PauseStoryboard_SWIGUpcastDelegate _PauseStoryboard_SWIGUpcast;
    public static IntPtr PauseStoryboard_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _PauseStoryboard_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr PowerEase_SWIGUpcastDelegate(IntPtr jarg1);
    public static PowerEase_SWIGUpcastDelegate _PowerEase_SWIGUpcast;
    public static IntPtr PowerEase_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _PowerEase_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr QuadraticEase_SWIGUpcastDelegate(IntPtr jarg1);
    public static QuadraticEase_SWIGUpcastDelegate _QuadraticEase_SWIGUpcast;
    public static IntPtr QuadraticEase_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _QuadraticEase_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr QuarticEase_SWIGUpcastDelegate(IntPtr jarg1);
    public static QuarticEase_SWIGUpcastDelegate _QuarticEase_SWIGUpcast;
    public static IntPtr QuarticEase_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _QuarticEase_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr QuinticEase_SWIGUpcastDelegate(IntPtr jarg1);
    public static QuinticEase_SWIGUpcastDelegate _QuinticEase_SWIGUpcast;
    public static IntPtr QuinticEase_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _QuinticEase_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ResumeStoryboard_SWIGUpcastDelegate(IntPtr jarg1);
    public static ResumeStoryboard_SWIGUpcastDelegate _ResumeStoryboard_SWIGUpcast;
    public static IntPtr ResumeStoryboard_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ResumeStoryboard_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr SineEase_SWIGUpcastDelegate(IntPtr jarg1);
    public static SineEase_SWIGUpcastDelegate _SineEase_SWIGUpcast;
    public static IntPtr SineEase_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _SineEase_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr StopStoryboard_SWIGUpcastDelegate(IntPtr jarg1);
    public static StopStoryboard_SWIGUpcastDelegate _StopStoryboard_SWIGUpcast;
    public static IntPtr StopStoryboard_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _StopStoryboard_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Storyboard_SWIGUpcastDelegate(IntPtr jarg1);
    public static Storyboard_SWIGUpcastDelegate _Storyboard_SWIGUpcast;
    public static IntPtr Storyboard_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Storyboard_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr VisualState_SWIGUpcastDelegate(IntPtr jarg1);
    public static VisualState_SWIGUpcastDelegate _VisualState_SWIGUpcast;
    public static IntPtr VisualState_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _VisualState_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr VisualStateGroup_SWIGUpcastDelegate(IntPtr jarg1);
    public static VisualStateGroup_SWIGUpcastDelegate _VisualStateGroup_SWIGUpcast;
    public static IntPtr VisualStateGroup_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _VisualStateGroup_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr VisualStateManager_SWIGUpcastDelegate(IntPtr jarg1);
    public static VisualStateManager_SWIGUpcastDelegate _VisualStateManager_SWIGUpcast;
    public static IntPtr VisualStateManager_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _VisualStateManager_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr VisualTransition_SWIGUpcastDelegate(IntPtr jarg1);
    public static VisualTransition_SWIGUpcastDelegate _VisualTransition_SWIGUpcast;
    public static IntPtr VisualTransition_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _VisualTransition_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr BaseSetterCollection_SWIGUpcastDelegate(IntPtr jarg1);
    public static BaseSetterCollection_SWIGUpcastDelegate _BaseSetterCollection_SWIGUpcast;
    public static IntPtr BaseSetterCollection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _BaseSetterCollection_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr TriggerActionCollection_SWIGUpcastDelegate(IntPtr jarg1);
    public static TriggerActionCollection_SWIGUpcastDelegate _TriggerActionCollection_SWIGUpcast;
    public static IntPtr TriggerActionCollection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _TriggerActionCollection_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr GroupDescriptionCollection_SWIGUpcastDelegate(IntPtr jarg1);
    public static GroupDescriptionCollection_SWIGUpcastDelegate _GroupDescriptionCollection_SWIGUpcast;
    public static IntPtr GroupDescriptionCollection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _GroupDescriptionCollection_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr SortDescriptionCollection_SWIGUpcastDelegate(IntPtr jarg1);
    public static SortDescriptionCollection_SWIGUpcastDelegate _SortDescriptionCollection_SWIGUpcast;
    public static IntPtr SortDescriptionCollection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _SortDescriptionCollection_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr CommandBindingCollection_SWIGUpcastDelegate(IntPtr jarg1);
    public static CommandBindingCollection_SWIGUpcastDelegate _CommandBindingCollection_SWIGUpcast;
    public static IntPtr CommandBindingCollection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _CommandBindingCollection_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr InputBindingCollection_SWIGUpcastDelegate(IntPtr jarg1);
    public static InputBindingCollection_SWIGUpcastDelegate _InputBindingCollection_SWIGUpcast;
    public static IntPtr InputBindingCollection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _InputBindingCollection_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr GeometryCollection_SWIGUpcastDelegate(IntPtr jarg1);
    public static GeometryCollection_SWIGUpcastDelegate _GeometryCollection_SWIGUpcast;
    public static IntPtr GeometryCollection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _GeometryCollection_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ColumnDefinitionCollection_SWIGUpcastDelegate(IntPtr jarg1);
    public static ColumnDefinitionCollection_SWIGUpcastDelegate _ColumnDefinitionCollection_SWIGUpcast;
    public static IntPtr ColumnDefinitionCollection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ColumnDefinitionCollection_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr RowDefinitionCollection_SWIGUpcastDelegate(IntPtr jarg1);
    public static RowDefinitionCollection_SWIGUpcastDelegate _RowDefinitionCollection_SWIGUpcast;
    public static IntPtr RowDefinitionCollection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _RowDefinitionCollection_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ConditionCollection_SWIGUpcastDelegate(IntPtr jarg1);
    public static ConditionCollection_SWIGUpcastDelegate _ConditionCollection_SWIGUpcast;
    public static IntPtr ConditionCollection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ConditionCollection_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ResourceDictionaryCollection_SWIGUpcastDelegate(IntPtr jarg1);
    public static ResourceDictionaryCollection_SWIGUpcastDelegate _ResourceDictionaryCollection_SWIGUpcast;
    public static IntPtr ResourceDictionaryCollection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ResourceDictionaryCollection_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr InputGestureCollection_SWIGUpcastDelegate(IntPtr jarg1);
    public static InputGestureCollection_SWIGUpcastDelegate _InputGestureCollection_SWIGUpcast;
    public static IntPtr InputGestureCollection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _InputGestureCollection_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr TransformCollection_SWIGUpcastDelegate(IntPtr jarg1);
    public static TransformCollection_SWIGUpcastDelegate _TransformCollection_SWIGUpcast;
    public static IntPtr TransformCollection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _TransformCollection_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr NullableBool_SWIGUpcastDelegate(IntPtr jarg1);
    public static NullableBool_SWIGUpcastDelegate _NullableBool_SWIGUpcast;
    public static IntPtr NullableBool_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _NullableBool_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr NullableFloat_SWIGUpcastDelegate(IntPtr jarg1);
    public static NullableFloat_SWIGUpcastDelegate _NullableFloat_SWIGUpcast;
    public static IntPtr NullableFloat_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _NullableFloat_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr NullableInt16_SWIGUpcastDelegate(IntPtr jarg1);
    public static NullableInt16_SWIGUpcastDelegate _NullableInt16_SWIGUpcast;
    public static IntPtr NullableInt16_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _NullableInt16_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr NullableInt32_SWIGUpcastDelegate(IntPtr jarg1);
    public static NullableInt32_SWIGUpcastDelegate _NullableInt32_SWIGUpcast;
    public static IntPtr NullableInt32_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _NullableInt32_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DoubleAnimation_SWIGUpcastDelegate(IntPtr jarg1);
    public static DoubleAnimation_SWIGUpcastDelegate _DoubleAnimation_SWIGUpcast;
    public static IntPtr DoubleAnimation_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DoubleAnimation_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Int16Animation_SWIGUpcastDelegate(IntPtr jarg1);
    public static Int16Animation_SWIGUpcastDelegate _Int16Animation_SWIGUpcast;
    public static IntPtr Int16Animation_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Int16Animation_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Int32Animation_SWIGUpcastDelegate(IntPtr jarg1);
    public static Int32Animation_SWIGUpcastDelegate _Int32Animation_SWIGUpcast;
    public static IntPtr Int32Animation_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Int32Animation_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Int64Animation_SWIGUpcastDelegate(IntPtr jarg1);
    public static Int64Animation_SWIGUpcastDelegate _Int64Animation_SWIGUpcast;
    public static IntPtr Int64Animation_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Int64Animation_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ColorAnimation_SWIGUpcastDelegate(IntPtr jarg1);
    public static ColorAnimation_SWIGUpcastDelegate _ColorAnimation_SWIGUpcast;
    public static IntPtr ColorAnimation_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ColorAnimation_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr PointAnimation_SWIGUpcastDelegate(IntPtr jarg1);
    public static PointAnimation_SWIGUpcastDelegate _PointAnimation_SWIGUpcast;
    public static IntPtr PointAnimation_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _PointAnimation_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr RectAnimation_SWIGUpcastDelegate(IntPtr jarg1);
    public static RectAnimation_SWIGUpcastDelegate _RectAnimation_SWIGUpcast;
    public static IntPtr RectAnimation_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _RectAnimation_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr SizeAnimation_SWIGUpcastDelegate(IntPtr jarg1);
    public static SizeAnimation_SWIGUpcastDelegate _SizeAnimation_SWIGUpcast;
    public static IntPtr SizeAnimation_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _SizeAnimation_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ThicknessAnimation_SWIGUpcastDelegate(IntPtr jarg1);
    public static ThicknessAnimation_SWIGUpcastDelegate _ThicknessAnimation_SWIGUpcast;
    public static IntPtr ThicknessAnimation_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ThicknessAnimation_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr BooleanKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static BooleanKeyFrame_SWIGUpcastDelegate _BooleanKeyFrame_SWIGUpcast;
    public static IntPtr BooleanKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _BooleanKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DoubleKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static DoubleKeyFrame_SWIGUpcastDelegate _DoubleKeyFrame_SWIGUpcast;
    public static IntPtr DoubleKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DoubleKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Int16KeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static Int16KeyFrame_SWIGUpcastDelegate _Int16KeyFrame_SWIGUpcast;
    public static IntPtr Int16KeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Int16KeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr Int32KeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static Int32KeyFrame_SWIGUpcastDelegate _Int32KeyFrame_SWIGUpcast;
    public static IntPtr Int32KeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _Int32KeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ColorKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static ColorKeyFrame_SWIGUpcastDelegate _ColorKeyFrame_SWIGUpcast;
    public static IntPtr ColorKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ColorKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr PointKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static PointKeyFrame_SWIGUpcastDelegate _PointKeyFrame_SWIGUpcast;
    public static IntPtr PointKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _PointKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr RectKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static RectKeyFrame_SWIGUpcastDelegate _RectKeyFrame_SWIGUpcast;
    public static IntPtr RectKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _RectKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr SizeKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static SizeKeyFrame_SWIGUpcastDelegate _SizeKeyFrame_SWIGUpcast;
    public static IntPtr SizeKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _SizeKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr ThicknessKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static ThicknessKeyFrame_SWIGUpcastDelegate _ThicknessKeyFrame_SWIGUpcast;
    public static IntPtr ThicknessKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _ThicknessKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr StringKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static StringKeyFrame_SWIGUpcastDelegate _StringKeyFrame_SWIGUpcast;
    public static IntPtr StringKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _StringKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DiscreteBooleanKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static DiscreteBooleanKeyFrame_SWIGUpcastDelegate _DiscreteBooleanKeyFrame_SWIGUpcast;
    public static IntPtr DiscreteBooleanKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DiscreteBooleanKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DiscreteDoubleKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static DiscreteDoubleKeyFrame_SWIGUpcastDelegate _DiscreteDoubleKeyFrame_SWIGUpcast;
    public static IntPtr DiscreteDoubleKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DiscreteDoubleKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DiscreteInt16KeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static DiscreteInt16KeyFrame_SWIGUpcastDelegate _DiscreteInt16KeyFrame_SWIGUpcast;
    public static IntPtr DiscreteInt16KeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DiscreteInt16KeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DiscreteInt32KeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static DiscreteInt32KeyFrame_SWIGUpcastDelegate _DiscreteInt32KeyFrame_SWIGUpcast;
    public static IntPtr DiscreteInt32KeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DiscreteInt32KeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DiscreteColorKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static DiscreteColorKeyFrame_SWIGUpcastDelegate _DiscreteColorKeyFrame_SWIGUpcast;
    public static IntPtr DiscreteColorKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DiscreteColorKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DiscretePointKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static DiscretePointKeyFrame_SWIGUpcastDelegate _DiscretePointKeyFrame_SWIGUpcast;
    public static IntPtr DiscretePointKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DiscretePointKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DiscreteRectKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static DiscreteRectKeyFrame_SWIGUpcastDelegate _DiscreteRectKeyFrame_SWIGUpcast;
    public static IntPtr DiscreteRectKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DiscreteRectKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DiscreteSizeKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static DiscreteSizeKeyFrame_SWIGUpcastDelegate _DiscreteSizeKeyFrame_SWIGUpcast;
    public static IntPtr DiscreteSizeKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DiscreteSizeKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DiscreteThicknessKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static DiscreteThicknessKeyFrame_SWIGUpcastDelegate _DiscreteThicknessKeyFrame_SWIGUpcast;
    public static IntPtr DiscreteThicknessKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DiscreteThicknessKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr DiscreteStringKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static DiscreteStringKeyFrame_SWIGUpcastDelegate _DiscreteStringKeyFrame_SWIGUpcast;
    public static IntPtr DiscreteStringKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _DiscreteStringKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr EasingDoubleKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static EasingDoubleKeyFrame_SWIGUpcastDelegate _EasingDoubleKeyFrame_SWIGUpcast;
    public static IntPtr EasingDoubleKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _EasingDoubleKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr EasingInt16KeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static EasingInt16KeyFrame_SWIGUpcastDelegate _EasingInt16KeyFrame_SWIGUpcast;
    public static IntPtr EasingInt16KeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _EasingInt16KeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr EasingInt32KeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static EasingInt32KeyFrame_SWIGUpcastDelegate _EasingInt32KeyFrame_SWIGUpcast;
    public static IntPtr EasingInt32KeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _EasingInt32KeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr EasingColorKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static EasingColorKeyFrame_SWIGUpcastDelegate _EasingColorKeyFrame_SWIGUpcast;
    public static IntPtr EasingColorKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _EasingColorKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr EasingPointKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static EasingPointKeyFrame_SWIGUpcastDelegate _EasingPointKeyFrame_SWIGUpcast;
    public static IntPtr EasingPointKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _EasingPointKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr EasingRectKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static EasingRectKeyFrame_SWIGUpcastDelegate _EasingRectKeyFrame_SWIGUpcast;
    public static IntPtr EasingRectKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _EasingRectKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr EasingSizeKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static EasingSizeKeyFrame_SWIGUpcastDelegate _EasingSizeKeyFrame_SWIGUpcast;
    public static IntPtr EasingSizeKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _EasingSizeKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr EasingThicknessKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static EasingThicknessKeyFrame_SWIGUpcastDelegate _EasingThicknessKeyFrame_SWIGUpcast;
    public static IntPtr EasingThicknessKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _EasingThicknessKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr LinearDoubleKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static LinearDoubleKeyFrame_SWIGUpcastDelegate _LinearDoubleKeyFrame_SWIGUpcast;
    public static IntPtr LinearDoubleKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _LinearDoubleKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr LinearInt16KeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static LinearInt16KeyFrame_SWIGUpcastDelegate _LinearInt16KeyFrame_SWIGUpcast;
    public static IntPtr LinearInt16KeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _LinearInt16KeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr LinearInt32KeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static LinearInt32KeyFrame_SWIGUpcastDelegate _LinearInt32KeyFrame_SWIGUpcast;
    public static IntPtr LinearInt32KeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _LinearInt32KeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr LinearColorKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static LinearColorKeyFrame_SWIGUpcastDelegate _LinearColorKeyFrame_SWIGUpcast;
    public static IntPtr LinearColorKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _LinearColorKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr LinearPointKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static LinearPointKeyFrame_SWIGUpcastDelegate _LinearPointKeyFrame_SWIGUpcast;
    public static IntPtr LinearPointKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _LinearPointKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr LinearRectKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static LinearRectKeyFrame_SWIGUpcastDelegate _LinearRectKeyFrame_SWIGUpcast;
    public static IntPtr LinearRectKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _LinearRectKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr LinearSizeKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static LinearSizeKeyFrame_SWIGUpcastDelegate _LinearSizeKeyFrame_SWIGUpcast;
    public static IntPtr LinearSizeKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _LinearSizeKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr LinearThicknessKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static LinearThicknessKeyFrame_SWIGUpcastDelegate _LinearThicknessKeyFrame_SWIGUpcast;
    public static IntPtr LinearThicknessKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _LinearThicknessKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr SplineDoubleKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static SplineDoubleKeyFrame_SWIGUpcastDelegate _SplineDoubleKeyFrame_SWIGUpcast;
    public static IntPtr SplineDoubleKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _SplineDoubleKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr SplineInt16KeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static SplineInt16KeyFrame_SWIGUpcastDelegate _SplineInt16KeyFrame_SWIGUpcast;
    public static IntPtr SplineInt16KeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _SplineInt16KeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr SplineInt32KeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static SplineInt32KeyFrame_SWIGUpcastDelegate _SplineInt32KeyFrame_SWIGUpcast;
    public static IntPtr SplineInt32KeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _SplineInt32KeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr SplineColorKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static SplineColorKeyFrame_SWIGUpcastDelegate _SplineColorKeyFrame_SWIGUpcast;
    public static IntPtr SplineColorKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _SplineColorKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr SplinePointKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static SplinePointKeyFrame_SWIGUpcastDelegate _SplinePointKeyFrame_SWIGUpcast;
    public static IntPtr SplinePointKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _SplinePointKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr SplineRectKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static SplineRectKeyFrame_SWIGUpcastDelegate _SplineRectKeyFrame_SWIGUpcast;
    public static IntPtr SplineRectKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _SplineRectKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr SplineSizeKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static SplineSizeKeyFrame_SWIGUpcastDelegate _SplineSizeKeyFrame_SWIGUpcast;
    public static IntPtr SplineSizeKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _SplineSizeKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr SplineThicknessKeyFrame_SWIGUpcastDelegate(IntPtr jarg1);
    public static SplineThicknessKeyFrame_SWIGUpcastDelegate _SplineThicknessKeyFrame_SWIGUpcast;
    public static IntPtr SplineThicknessKeyFrame_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _SplineThicknessKeyFrame_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr AnimationUsingKeyFramesBool_SWIGUpcastDelegate(IntPtr jarg1);
    public static AnimationUsingKeyFramesBool_SWIGUpcastDelegate _AnimationUsingKeyFramesBool_SWIGUpcast;
    public static IntPtr AnimationUsingKeyFramesBool_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _AnimationUsingKeyFramesBool_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr AnimationUsingKeyFramesFloat_SWIGUpcastDelegate(IntPtr jarg1);
    public static AnimationUsingKeyFramesFloat_SWIGUpcastDelegate _AnimationUsingKeyFramesFloat_SWIGUpcast;
    public static IntPtr AnimationUsingKeyFramesFloat_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _AnimationUsingKeyFramesFloat_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr AnimationUsingKeyFramesInt16_SWIGUpcastDelegate(IntPtr jarg1);
    public static AnimationUsingKeyFramesInt16_SWIGUpcastDelegate _AnimationUsingKeyFramesInt16_SWIGUpcast;
    public static IntPtr AnimationUsingKeyFramesInt16_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _AnimationUsingKeyFramesInt16_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr AnimationUsingKeyFramesInt32_SWIGUpcastDelegate(IntPtr jarg1);
    public static AnimationUsingKeyFramesInt32_SWIGUpcastDelegate _AnimationUsingKeyFramesInt32_SWIGUpcast;
    public static IntPtr AnimationUsingKeyFramesInt32_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _AnimationUsingKeyFramesInt32_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr AnimationUsingKeyFramesColor_SWIGUpcastDelegate(IntPtr jarg1);
    public static AnimationUsingKeyFramesColor_SWIGUpcastDelegate _AnimationUsingKeyFramesColor_SWIGUpcast;
    public static IntPtr AnimationUsingKeyFramesColor_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _AnimationUsingKeyFramesColor_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr AnimationUsingKeyFramesPoint_SWIGUpcastDelegate(IntPtr jarg1);
    public static AnimationUsingKeyFramesPoint_SWIGUpcastDelegate _AnimationUsingKeyFramesPoint_SWIGUpcast;
    public static IntPtr AnimationUsingKeyFramesPoint_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _AnimationUsingKeyFramesPoint_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr AnimationUsingKeyFramesRect_SWIGUpcastDelegate(IntPtr jarg1);
    public static AnimationUsingKeyFramesRect_SWIGUpcastDelegate _AnimationUsingKeyFramesRect_SWIGUpcast;
    public static IntPtr AnimationUsingKeyFramesRect_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _AnimationUsingKeyFramesRect_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr AnimationUsingKeyFramesSize_SWIGUpcastDelegate(IntPtr jarg1);
    public static AnimationUsingKeyFramesSize_SWIGUpcastDelegate _AnimationUsingKeyFramesSize_SWIGUpcast;
    public static IntPtr AnimationUsingKeyFramesSize_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _AnimationUsingKeyFramesSize_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr AnimationUsingKeyFramesThickness_SWIGUpcastDelegate(IntPtr jarg1);
    public static AnimationUsingKeyFramesThickness_SWIGUpcastDelegate _AnimationUsingKeyFramesThickness_SWIGUpcast;
    public static IntPtr AnimationUsingKeyFramesThickness_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _AnimationUsingKeyFramesThickness_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr AnimationUsingKeyFramesNsString_SWIGUpcastDelegate(IntPtr jarg1);
    public static AnimationUsingKeyFramesNsString_SWIGUpcastDelegate _AnimationUsingKeyFramesNsString_SWIGUpcast;
    public static IntPtr AnimationUsingKeyFramesNsString_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _AnimationUsingKeyFramesNsString_SWIGUpcast(jarg1);

        return ret;
    }

    public delegate IntPtr TimelineCollection_SWIGUpcastDelegate(IntPtr jarg1);
    public static TimelineCollection_SWIGUpcastDelegate _TimelineCollection_SWIGUpcast;
    public static IntPtr TimelineCollection_SWIGUpcast(IntPtr jarg1)
    {
        IntPtr ret = _TimelineCollection_SWIGUpcast(jarg1);

        return ret;
    }


#endif
}

}

