/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class Transform2f : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public Transform2f(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(Transform2f obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Transform2f() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          if (Noesis.Kernel.IsInitialized()) { NoesisGUI_PINVOKE.delete_Transform2f(swigCPtr);}
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public Transform2f() : this(NoesisGUI_PINVOKE.new_Transform2f__SWIG_0(), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public Transform2f(float v00, float v01, float v10, float v11, float v20, float v21) : this(NoesisGUI_PINVOKE.new_Transform2f__SWIG_1(v00, v01, v10, v11, v20, v21), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public Transform2f(Vector2f v0, Vector2f v1, Vector2f v2) : this(NoesisGUI_PINVOKE.new_Transform2f__SWIG_2(Vector2f.getCPtr(v0), Vector2f.getCPtr(v1), Vector2f.getCPtr(v2)), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }



  public Transform2f(Transform2f m) : this(NoesisGUI_PINVOKE.new_Transform2f__SWIG_4(Transform2f.getCPtr(m)), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }





  public void SetTranslation(Vector2f v) {
    NoesisGUI_PINVOKE.Transform2f_SetTranslation(swigCPtr, Vector2f.getCPtr(v));
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }



  public Vector2f GetTranslation() {
    Vector2f ret = new Vector2f(NoesisGUI_PINVOKE.Transform2f_GetTranslation(swigCPtr), false);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Transform2f Identity() {
    Transform2f ret = new Transform2f(NoesisGUI_PINVOKE.Transform2f_Identity(), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Transform2f Scale(float scaleX, float scaleY) {
    Transform2f ret = new Transform2f(NoesisGUI_PINVOKE.Transform2f_Scale(scaleX, scaleY), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Transform2f Trans(float transX, float transY) {
    Transform2f ret = new Transform2f(NoesisGUI_PINVOKE.Transform2f_Trans(transX, transY), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Transform2f Rot(float radians) {
    Transform2f ret = new Transform2f(NoesisGUI_PINVOKE.Transform2f_Rot(radians), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Transform2f ShearXY(float shear) {
    Transform2f ret = new Transform2f(NoesisGUI_PINVOKE.Transform2f_ShearXY(shear), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Transform2f ShearYX(float shear) {
    Transform2f ret = new Transform2f(NoesisGUI_PINVOKE.Transform2f_ShearYX(shear), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Transform2f Skew(float radiansX, float radiansY) {
    Transform2f ret = new Transform2f(NoesisGUI_PINVOKE.Transform2f_Skew(radiansX, radiansY), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

}

}

