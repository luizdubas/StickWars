/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class AncestorNameScopeChangedArgs : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public AncestorNameScopeChangedArgs(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(AncestorNameScopeChangedArgs obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~AncestorNameScopeChangedArgs() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          if (Noesis.Kernel.IsInitialized()) { NoesisGUI_PINVOKE.delete_AncestorNameScopeChangedArgs(swigCPtr);}
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public AncestorNameScopeChangeAction action {
    set {
      NoesisGUI_PINVOKE.AncestorNameScopeChangedArgs_action_set(swigCPtr, (int)value);
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
    } 
    get {
      AncestorNameScopeChangeAction ret = (AncestorNameScopeChangeAction)NoesisGUI_PINVOKE.AncestorNameScopeChangedArgs_action_get(swigCPtr);
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    } 
  }



  public NameScopeChangedArgs changeArgs {
    set {
      NoesisGUI_PINVOKE.AncestorNameScopeChangedArgs_changeArgs_set(swigCPtr, NameScopeChangedArgs.getCPtr(value));
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.AncestorNameScopeChangedArgs_changeArgs_get(swigCPtr);
      NameScopeChangedArgs ret = (cPtr == IntPtr.Zero) ? null : new NameScopeChangedArgs(cPtr, false);
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    } 
  }

  public AncestorNameScopeChangedArgs() : this(NoesisGUI_PINVOKE.new_AncestorNameScopeChangedArgs(), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

}

}

