/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class MouseEventArgs : RoutedEventArgs {
  private HandleRef swigCPtr;

  public MouseEventArgs(IntPtr cPtr, bool cMemoryOwn) : base(NoesisGUI_PINVOKE.MouseEventArgs_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(MouseEventArgs obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~MouseEventArgs() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          if (Noesis.Kernel.IsInitialized()) { NoesisGUI_PINVOKE.delete_MouseEventArgs(swigCPtr);}
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public Point position {
    set {
      NoesisGUI_PINVOKE.MouseEventArgs_position_set(swigCPtr, Point.getCPtr(value));
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.MouseEventArgs_position_get(swigCPtr);
      Point ret = (cPtr == IntPtr.Zero) ? null : new Point(cPtr, false);
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    } 
  }

  public MouseButtonState leftButton {
    set {
      NoesisGUI_PINVOKE.MouseEventArgs_leftButton_set(swigCPtr, (int)value);
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
    } 
    get {
      MouseButtonState ret = (MouseButtonState)NoesisGUI_PINVOKE.MouseEventArgs_leftButton_get(swigCPtr);
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    } 
  }

  public MouseButtonState middleButton {
    set {
      NoesisGUI_PINVOKE.MouseEventArgs_middleButton_set(swigCPtr, (int)value);
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
    } 
    get {
      MouseButtonState ret = (MouseButtonState)NoesisGUI_PINVOKE.MouseEventArgs_middleButton_get(swigCPtr);
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    } 
  }

  public MouseButtonState rightButton {
    set {
      NoesisGUI_PINVOKE.MouseEventArgs_rightButton_set(swigCPtr, (int)value);
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
    } 
    get {
      MouseButtonState ret = (MouseButtonState)NoesisGUI_PINVOKE.MouseEventArgs_rightButton_get(swigCPtr);
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    } 
  }

  public MouseButtonState xButton1Button {
    set {
      NoesisGUI_PINVOKE.MouseEventArgs_xButton1Button_set(swigCPtr, (int)value);
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
    } 
    get {
      MouseButtonState ret = (MouseButtonState)NoesisGUI_PINVOKE.MouseEventArgs_xButton1Button_get(swigCPtr);
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    } 
  }

  public MouseButtonState xButton2Button {
    set {
      NoesisGUI_PINVOKE.MouseEventArgs_xButton2Button_set(swigCPtr, (int)value);
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
    } 
    get {
      MouseButtonState ret = (MouseButtonState)NoesisGUI_PINVOKE.MouseEventArgs_xButton2Button_get(swigCPtr);
      #if UNITY_EDITOR
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      #endif
      return ret;
    } 
  }



}

}

