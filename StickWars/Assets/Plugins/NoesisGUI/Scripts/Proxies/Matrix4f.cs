/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class Matrix4f : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public Matrix4f(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(Matrix4f obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Matrix4f() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          if (Noesis.Kernel.IsInitialized()) { NoesisGUI_PINVOKE.delete_Matrix4f(swigCPtr);}
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public Matrix4f() : this(NoesisGUI_PINVOKE.new_Matrix4f__SWIG_0(), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public Matrix4f(float v00, float v01, float v02, float v03, float v10, float v11, float v12, float v13, float v20, float v21, float v22, float v23, float v30, float v31, float v32, float v33) : this(NoesisGUI_PINVOKE.new_Matrix4f__SWIG_1(v00, v01, v02, v03, v10, v11, v12, v13, v20, v21, v22, v23, v30, v31, v32, v33), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }







  public Matrix4f(Matrix4f m) : this(NoesisGUI_PINVOKE.new_Matrix4f__SWIG_5(Matrix4f.getCPtr(m)), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }



  public static Matrix4f Identity() {
    Matrix4f ret = new Matrix4f(NoesisGUI_PINVOKE.Matrix4f_Identity(), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Matrix4f Scale(float scaleX, float scaleY, float scaleZ) {
    Matrix4f ret = new Matrix4f(NoesisGUI_PINVOKE.Matrix4f_Scale(scaleX, scaleY, scaleZ), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Matrix4f RotX(float radians) {
    Matrix4f ret = new Matrix4f(NoesisGUI_PINVOKE.Matrix4f_RotX(radians), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Matrix4f RotY(float radians) {
    Matrix4f ret = new Matrix4f(NoesisGUI_PINVOKE.Matrix4f_RotY(radians), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Matrix4f RotZ(float radians) {
    Matrix4f ret = new Matrix4f(NoesisGUI_PINVOKE.Matrix4f_RotZ(radians), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Matrix4f Ortho(float width, float height, float zNear, float zFar) {
    Matrix4f ret = new Matrix4f(NoesisGUI_PINVOKE.Matrix4f_Ortho__SWIG_0(width, height, zNear, zFar), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Matrix4f Ortho(float left, float right, float bottom, float top, float zNear, float zFar) {
    Matrix4f ret = new Matrix4f(NoesisGUI_PINVOKE.Matrix4f_Ortho__SWIG_1(left, right, bottom, top, zNear, zFar), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Matrix4f Perspective(float width, float height, float zNear, float zFar) {
    Matrix4f ret = new Matrix4f(NoesisGUI_PINVOKE.Matrix4f_Perspective__SWIG_0(width, height, zNear, zFar), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Matrix4f PerspectiveFov(float fovY, float aspect, float zNear, float zFar) {
    Matrix4f ret = new Matrix4f(NoesisGUI_PINVOKE.Matrix4f_PerspectiveFov(fovY, aspect, zNear, zFar), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Matrix4f Perspective(float left, float right, float bottom, float top, float zNear, float zFar) {
    Matrix4f ret = new Matrix4f(NoesisGUI_PINVOKE.Matrix4f_Perspective__SWIG_1(left, right, bottom, top, zNear, zFar), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static Matrix4f Viewport(float width, float height) {
    Matrix4f ret = new Matrix4f(NoesisGUI_PINVOKE.Matrix4f_Viewport(width, height), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

}

}

