/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class StreamGeometryContext : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public StreamGeometryContext(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(StreamGeometryContext obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~StreamGeometryContext() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          if (Noesis.Kernel.IsInitialized()) { NoesisGUI_PINVOKE.delete_StreamGeometryContext(swigCPtr);}
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public StreamGeometryContext(StreamGeometry streamGeometry, int overrideFillRule) : this(NoesisGUI_PINVOKE.new_StreamGeometryContext(StreamGeometry.getCPtr(streamGeometry), overrideFillRule), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public void BeginFigure(Point startPoint, bool isClosed) {
    NoesisGUI_PINVOKE.StreamGeometryContext_BeginFigure(swigCPtr, Point.getCPtr(startPoint), isClosed);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public void LineTo(Point point) {
    NoesisGUI_PINVOKE.StreamGeometryContext_LineTo(swigCPtr, Point.getCPtr(point));
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public void CubicTo(Point point1, Point point2, Point point3) {
    NoesisGUI_PINVOKE.StreamGeometryContext_CubicTo(swigCPtr, Point.getCPtr(point1), Point.getCPtr(point2), Point.getCPtr(point3));
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public void QuadraticTo(Point point1, Point point2) {
    NoesisGUI_PINVOKE.StreamGeometryContext_QuadraticTo(swigCPtr, Point.getCPtr(point1), Point.getCPtr(point2));
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public void SmoothCubicTo(Point point1, Point point2) {
    NoesisGUI_PINVOKE.StreamGeometryContext_SmoothCubicTo(swigCPtr, Point.getCPtr(point1), Point.getCPtr(point2));
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public void SmoothQuadraticTo(Point point) {
    NoesisGUI_PINVOKE.StreamGeometryContext_SmoothQuadraticTo(swigCPtr, Point.getCPtr(point));
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public void ArcTo(Point point, Size size, float rotationAngleDeg, bool isLargeArc, bool isClockWise) {
    NoesisGUI_PINVOKE.StreamGeometryContext_ArcTo(swigCPtr, Point.getCPtr(point), Size.getCPtr(size), rotationAngleDeg, isLargeArc, isClockWise);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

}

}

