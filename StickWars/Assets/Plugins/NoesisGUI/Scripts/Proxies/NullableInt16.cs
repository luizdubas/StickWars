/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class NullableInt16 : BaseNullable {
  private HandleRef swigCPtr;

  public NullableInt16(IntPtr cPtr, bool cMemoryOwn) : base(NoesisGUI_PINVOKE.NullableInt16_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(NullableInt16 obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~NullableInt16() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          if (Noesis.Kernel.IsInitialized()) { NoesisGUI_PINVOKE.delete_NullableInt16(swigCPtr); }
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public NullableInt16() : this(NoesisGUI_PINVOKE.new_NullableInt16__SWIG_0(), true) {
  }

  public NullableInt16(short value) : this(NoesisGUI_PINVOKE.new_NullableInt16__(value), true) {
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
  }

  public short GetValue()
  {
      short ret = NoesisGUI_PINVOKE.NullableInt16_GetValue__(swigCPtr);
      return ret;
  }

  public void SetValue(short value)
  {
      NoesisGUI_PINVOKE.NullableInt16_SetValue__(swigCPtr, value);
  }

}

}

