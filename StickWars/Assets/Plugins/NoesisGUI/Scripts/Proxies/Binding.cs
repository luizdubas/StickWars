/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class Binding : BaseBinding {
  private HandleRef swigCPtr;

  public Binding(IntPtr cPtr, bool cMemoryOwn) : base(NoesisGUI_PINVOKE.Binding_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(Binding obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Binding() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          if (Noesis.Kernel.IsInitialized()) { NoesisGUI_PINVOKE.delete_Binding(swigCPtr);}
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public Binding() : this(NoesisGUI_PINVOKE.new_Binding__SWIG_0(), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public Binding(string path) : this(NoesisGUI_PINVOKE.new_Binding__SWIG_1(path), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public Binding(string path, BaseComponent source) : this(NoesisGUI_PINVOKE.new_Binding__SWIG_2(path, BaseComponent.getCPtr(source)), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public Binding(string path, string elementName) : this(NoesisGUI_PINVOKE.new_Binding__SWIG_3(path, elementName), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public Binding(string path, RelativeSource relativeSource) : this(NoesisGUI_PINVOKE.new_Binding__SWIG_4(path, RelativeSource.getCPtr(relativeSource)), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public string GetElementName() {
    IntPtr cPtr = NoesisGUI_PINVOKE.Binding_GetElementName(swigCPtr);
    NsString nsstring = new NsString(cPtr, false);
    string ret = nsstring.c_str();
    return ret;
}

  public void SetElementName(string elementName) {
    NoesisGUI_PINVOKE.Binding_SetElementName(swigCPtr, Marshal.StringToHGlobalAnsi(elementName));
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public BaseComponent GetSource() {
    IntPtr cPtr = NoesisGUI_PINVOKE.Binding_GetSource(swigCPtr);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public void SetSource(BaseComponent source) {
    NoesisGUI_PINVOKE.Binding_SetSource(swigCPtr, BaseComponent.getCPtr(source));
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public RelativeSource GetRelativeSource() {
    IntPtr cPtr = NoesisGUI_PINVOKE.Binding_GetRelativeSource(swigCPtr);
    RelativeSource ret = (cPtr == IntPtr.Zero) ? null : new RelativeSource(cPtr, false);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public void SetRelativeSource(RelativeSource source) {
    NoesisGUI_PINVOKE.Binding_SetRelativeSource(swigCPtr, RelativeSource.getCPtr(source));
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public PropertyPath GetPath() {
    IntPtr cPtr = NoesisGUI_PINVOKE.Binding_GetPath(swigCPtr);
    PropertyPath ret = (cPtr == IntPtr.Zero) ? null : new PropertyPath(cPtr, false);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public void SetPath(PropertyPath path) {
    NoesisGUI_PINVOKE.Binding_SetPath(swigCPtr, PropertyPath.getCPtr(path));
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public BindingMode GetMode() {
    BindingMode ret = (BindingMode)NoesisGUI_PINVOKE.Binding_GetMode(swigCPtr);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public void SetMode(BindingMode mode) {
    NoesisGUI_PINVOKE.Binding_SetMode(swigCPtr, (int)mode);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }





  public BaseComponent GetConverterParameter() {
    IntPtr cPtr = NoesisGUI_PINVOKE.Binding_GetConverterParameter(swigCPtr);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public void SetConverterParameter(BaseComponent parameter) {
    NoesisGUI_PINVOKE.Binding_SetConverterParameter(swigCPtr, BaseComponent.getCPtr(parameter));
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public BaseComponent GetFallbackValue() {
    IntPtr cPtr = NoesisGUI_PINVOKE.Binding_GetFallbackValue(swigCPtr);
    BaseComponent ret = (cPtr == IntPtr.Zero) ? null : new BaseComponent(cPtr, false);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public void SetFallbackValue(BaseComponent value) {
    NoesisGUI_PINVOKE.Binding_SetFallbackValue(swigCPtr, BaseComponent.getCPtr(value));
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }





  public ObjectWithNameScope GetSourceObject(BaseComponent target) {
    ObjectWithNameScope ret = new ObjectWithNameScope(NoesisGUI_PINVOKE.Binding_GetSourceObject(swigCPtr, BaseComponent.getCPtr(target)), true);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }



  public new static void Extend(System.Type type) {
    IntPtr typeClassPtr = Noesis.Extend.GetPtrForType(type);
    NoesisGUI_PINVOKE.Extend_Binding(typeClassPtr);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public new static bool CheckType(BaseComponent val) {
    IntPtr valPtr = BaseComponent.getCPtr(val).Handle;
    return NoesisGUI_PINVOKE.CheckType_Binding(valPtr);
  }

}

}

