/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class RelativeSource : BaseComponent {
  private HandleRef swigCPtr;

  public RelativeSource(IntPtr cPtr, bool cMemoryOwn) : base(NoesisGUI_PINVOKE.RelativeSource_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(RelativeSource obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~RelativeSource() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          if (Noesis.Kernel.IsInitialized()) { NoesisGUI_PINVOKE.delete_RelativeSource(swigCPtr);}
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public RelativeSource() : this(NoesisGUI_PINVOKE.new_RelativeSource__SWIG_0(), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public RelativeSource(RelativeSourceMode mode) : this(NoesisGUI_PINVOKE.new_RelativeSource__SWIG_1((int)mode), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public RelativeSource(RelativeSourceMode mode, ResourceKeyType type, int level) : this(NoesisGUI_PINVOKE.new_RelativeSource__SWIG_2((int)mode, ResourceKeyType.getCPtr(type), level), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public RelativeSource(RelativeSource other) : this(NoesisGUI_PINVOKE.new_RelativeSource__SWIG_3(RelativeSource.getCPtr(other)), true) {
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public static RelativeSource GetPreviousData() {
    IntPtr cPtr = NoesisGUI_PINVOKE.RelativeSource_GetPreviousData();
    RelativeSource ret = (cPtr == IntPtr.Zero) ? null : new RelativeSource(cPtr, false);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static RelativeSource GetSelf() {
    IntPtr cPtr = NoesisGUI_PINVOKE.RelativeSource_GetSelf();
    RelativeSource ret = (cPtr == IntPtr.Zero) ? null : new RelativeSource(cPtr, false);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public static RelativeSource GetTemplatedParent() {
    IntPtr cPtr = NoesisGUI_PINVOKE.RelativeSource_GetTemplatedParent();
    RelativeSource ret = (cPtr == IntPtr.Zero) ? null : new RelativeSource(cPtr, false);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public RelativeSourceMode GetMode() {
    RelativeSourceMode ret = (RelativeSourceMode)NoesisGUI_PINVOKE.RelativeSource_GetMode(swigCPtr);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public void SetMode(RelativeSourceMode mode) {
    NoesisGUI_PINVOKE.RelativeSource_SetMode(swigCPtr, (int)mode);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public ResourceKeyType GetAncestorType() {
    IntPtr cPtr = NoesisGUI_PINVOKE.RelativeSource_GetAncestorType(swigCPtr);
    ResourceKeyType ret = (cPtr == IntPtr.Zero) ? null : new ResourceKeyType(cPtr, false);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public void SetAncestorType(ResourceKeyType type) {
    NoesisGUI_PINVOKE.RelativeSource_SetAncestorType(swigCPtr, ResourceKeyType.getCPtr(type));
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public int GetAncestorLevel() {
    int ret = NoesisGUI_PINVOKE.RelativeSource_GetAncestorLevel(swigCPtr);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
    return ret;
  }

  public void SetAncestorLevel(int level) {
    NoesisGUI_PINVOKE.RelativeSource_SetAncestorLevel(swigCPtr, level);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }



  public new static void Extend(System.Type type) {
    IntPtr typeClassPtr = Noesis.Extend.GetPtrForType(type);
    NoesisGUI_PINVOKE.Extend_RelativeSource(typeClassPtr);
    #if UNITY_EDITOR
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    #endif
  }

  public new static bool CheckType(BaseComponent val) {
    IntPtr valPtr = BaseComponent.getCPtr(val).Handle;
    return NoesisGUI_PINVOKE.CheckType_RelativeSource(valPtr);
  }

}

}

